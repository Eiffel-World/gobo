indexing

	description:

		"Platform-dependent properties"

	usage:
	
		"This class should not be used directly through %
		%inheritance and client/supplier relationship. %
		%Inherit from KL_SHARED_PLATFORM instead."

	pattern: "Singleton"
	library: "Gobo Eiffel Kernel Library"
	copyright: "Copyright (c) 1999, Eric Bezault and others"
	license: "Eiffel Forum License v1 (see forum.txt)"
	date: "$Date$"
	revision: "$Revision$"

class KL_PLATFORM

inherit

	PLATFORM
#ifdef SE
		redefine
			Minimum_character_code,
			Maximum_character_code
		end
#endif

feature -- Access

#ifdef ISE || HACT || SE
	Minimum_character_code: INTEGER is 0
	Maximum_character_code: INTEGER is 255
			-- Smallest and largest supported codes for CHARACTER values

#endif
#ifdef HACT || VE || SE
	Pointer_bytes: INTEGER is
			-- Number of bytes in a value of type `POINTER'
		once
			Result := Pointer_bits // 8
		ensure
			pointer_bytes_positive: Result > 0
		end

#endif
#ifdef ISE || HACT
	Maximum_integer: INTEGER is
         -- Largest supported code of type INTEGER.
		once
			-- Be careful to avoid overflow and note that an INTEGER is
			-- signed
			Result := (((2 ^ (Integer_bits - 2)).ceiling - 1) * 2) + 1
		end

#endif
end
