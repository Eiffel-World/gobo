indexing

	description:

		"Routines that ought to be in class CHARACTER"

	library: "Gobo Eiffel Kernel Library"
	copyright: "Copyright (c) 2002, Berend de Boer and others"
	license: "Eiffel Forum License v1 (see forum.txt)"
	date: "$Date$"
	revision: "$Revision$"

class KL_CHARACTER_ROUTINES

inherit

	KL_SHARED_PLATFORM

feature -- Access

	next (c: CHARACTER): CHARACTER is
			--  Next character
		require
			c_small_enough: c.code < Platform.Maximum_character_code
		do
#ifdef VE
			Result.from_integer (c.code + 1)
#else
			Result := c.next
#endif
		ensure
			definition: Result.code = c.code + 1
		end

	previous (c: CHARACTER): CHARACTER is
			--  Previous character
		require
			c_small_enough: c.code > Platform.Minimum_character_code
		do
#ifdef VE
			Result.from_integer (c.code - 1)
#else
			Result := c.previous
#endif
		ensure
			definition: Result.code = c.code - 1
		end

feature -- Conversion

	to_bit_8 (a_c: CHARACTER): BIT 8 is
			-- Convert character to 8 bit data type
		require
			character_bits_is_eight: a_c.code < 256
#ifdef ISE || HACT
		local
			i, j: INTEGER
#endif
		do
#ifdef VE
			Result.from_integer (a_c.code)
#endif
#ifdef SE
			Result := a_c.to_bit
#endif
#ifdef ISE || HACT
			j := a_c.code
			from i := 0 until i = 8 loop
				if j.bit_test (i) then
					Result.put (True, i)
				end
				i := i + 1
			end
#endif
		end

end
