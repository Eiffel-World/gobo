indexing

	description:

		"Standard files"

	library:    "Gobo Eiffel Kernel Library"
	author:     "Eric Bezault <ericb@gobo.demon.co.uk>"
	copyright:  "Copyright (c) 1997, Eric Bezault"
	date:       "$Date$"
	revision:   "$Revision$"

class KL_STANDARD_FILES

inherit

	KL_SHARED_INPUT_STREAM_ROUTINES

	KL_SHARED_OUTPUT_STREAM_ROUTINES

feature -- Access

#ifdef SE
	input: STD_INPUT is
#else
	input: FILE is
#endif
			-- Standard input file
#ifdef SE
		do
				-- There is a bug in the precomputed once
				-- function mechanism (when a once calls
				-- another once), hence the 'do'.
			Result := std_input
#else
		once
			Result := io.input
#endif
		ensure
			file_not_void: Result /= Void
			file_open_read: input_stream_.is_open_read (Result)
		end

#ifdef SE
	output: STD_OUTPUT is
#else
	output: FILE is
#endif
			-- Standard output file
#ifdef SE
		do
				-- There is a bug in the precomputed once
				-- function mechanism (when a once calls
				-- another once), hence the 'do'.
			Result := std_output
#else
		once
			Result := io.output
#endif
		ensure
			file_not_void: Result /= Void
			file_open_write: output_stream_.is_open_write (Result)
		end

#ifdef SE
	error: STD_ERROR is
#else
	error: FILE is
#endif
			-- Standard error file
#ifdef SE
		do
				-- There is a bug in the precomputed once
				-- function mechanism (when a once calls
				-- another once), hence the 'do'.
			Result := std_error
#else
		once
			Result := io.error
#endif
		ensure
			file_not_void: Result /= Void
			file_open_write: output_stream_.is_open_write (Result)
		end

end -- class KL_STANDARD_FILES
