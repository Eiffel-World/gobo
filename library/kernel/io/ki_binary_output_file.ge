indexing

	description:

		"Interface for binary output files"

	library:    "Gobo Eiffel Kernel Library"
	author:     "Eric Bezault <ericb@gobosoft.com>"
	copyright:  "Copyright (c) 2001, Eric Bezault and others"
	license:    "Eiffel Forum Freeware License v1 (see forum.txt)"
	date:       "$Date$"
	revision:   "$Revision$"

deferred class KI_BINARY_OUTPUT_FILE

inherit

	KI_CHARACTER_OUTPUT_STREAM
		rename
#ifdef SE
			rename_file as se_rename_file,
#endif
			is_writable as is_open_write
		end

feature {NONE} -- Initialization

	make (a_name: like name) is
			-- Create a new output file named `a_name'.
		require
			a_name_not_void: a_name /= Void
		deferred
		ensure
			name_set: name = a_name
			is_closed: is_closed
		end

feature -- Status report

	is_closed: BOOLEAN is
			-- Is file closed?
		deferred
		ensure
			definition: Result = not is_open_write
		end

feature -- Basic operations

	open_write is
			-- Open current file in write-only mode if
			-- it can be opened, let it closed otherwise.
		require
			is_closed: is_closed
		deferred
		end

	close is
			-- Close current file if it is closable,
			-- let it open otherwise.
		require
			is_open: is_open_write
		deferred
		end

	rename_file (new_name: STRING) is
			-- Rename current file as `new_name'.
			-- Do nothing if the file could not be renamed, if
			-- it did not exist or if `new_name' already existed.
			-- If renaming was successful, then `name' is set to
			-- `new_name'.
		require
			is_closed: is_closed
			new_name_not_void: new_name /= Void
		deferred
		end

	delete is
			-- Delete current file.
			-- Do nothing if the file could not be
			-- deleted or if it did not exist.
		require
			is_closed: is_closed
		deferred
		end

end -- class KI_BINARY_OUTPUT_FILE
