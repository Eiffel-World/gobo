system

	geant

root

	GEANT: make

default
	no_style_warning (yes)
			assertion (all)
cluster
	geant: "${GOBO}/src/geant";
	geant_command: "${GOBO}/src/geant/command";
	geant_task: "${GOBO}/src/geant/task";
	geant_parser: "${GOBO}/src/geant/parser";
	xml: "${GOBO}/library/xml";
	xml_factory: "${GOBO}/library/xml/factory";
	xml_position: "${GOBO}/library/xml/position";
	xml_source: "${GOBO}/library/xml/source";
	xml_general: "${GOBO}/library/xml/general";
	xml_event: "${GOBO}/library/xml/event";
	xml_tree: "${GOBO}/library/xml/tree";
	xml_formatter: "${GOBO}/library/xml/formatter";
	xml_impl: "${GOBO}/library/xml/impl";
	xml_impl_interface: "${GOBO}/library/xml/impl/interface";
	xml_impl_interface_general: "${GOBO}/library/xml/impl/interface/general";
	xml_impl_interface_event: "${GOBO}/library/xml/impl/interface/event";
	xml_impl_interface_tree: "${GOBO}/library/xml/impl/interface/tree";
	xml_impl_expat: "${GOBO}/library/xml/impl/expat";
	xml_impl_expat_api: "${GOBO}/library/xml/impl/expat/api";
	xml_impl_expat_general: "${GOBO}/library/xml/impl/expat/general";
	xml_impl_expat_event: "${GOBO}/library/xml/impl/expat/event";
	xml_impl_expat_spec: "${GOBO}/library/xml/impl/expat/spec";
	xml_impl_expat_spec_se: "${GOBO}/library/xml/impl/expat/spec/se";
	xml_impl_eiffel: "${GOBO}/library/xml/impl/eiffel";
	xml_impl_eiffel_event: "${GOBO}/library/xml/impl/eiffel/event";
	xml_impl_tree_on_event: "${GOBO}/library/xml/impl/tree_on_event";
	xml_impl_tree_on_event_tree: "${GOBO}/library/xml/impl/tree_on_event/tree";
	xml_impl_no_expat: "${GOBO}/library/xml/impl/no_expat";
	xml_impl_no_expat_event: "${GOBO}/library/xml/impl/no_expat/event";
	xml_impl_no_eiffel: "${GOBO}/library/xml/impl/no_eiffel";
	xml_impl_no_eiffel_event: "${GOBO}/library/xml/impl/no_eiffel/event";
	xml_impl_no_tree_on_event: "${GOBO}/library/xml/impl/no_tree_on_event";
	xml_impl_no_tree_on_event_tree: "${GOBO}/library/xml/impl/no_tree_on_event/tree";

	se_kernel_se: "${SmallEiffelDirectory}/lib_std";

	gobo: "${GOBO}/library";
	gobo_kernel: "${GOBO}/library/kernel";
	gobo_kernel_io: "${GOBO}/library/kernel/io";
	gobo_kernel_spec: "${GOBO}/library/kernel/spec";
	gobo_kernel_spec_se: "${GOBO}/library/kernel/spec/se";
	gobo_kernel_spec_windows: "${GOBO}/library/kernel/spec/windows";
	gobo_kernel_unicode: "${GOBO}/library/kernel/unicode";
	gobo_structure: "${GOBO}/library/structure";
	gobo_structure_container: "${GOBO}/library/structure/container";
	gobo_structure_dispenser: "${GOBO}/library/structure/dispenser";
	gobo_structure_list: "${GOBO}/library/structure/list";
	gobo_structure_set: "${GOBO}/library/structure/set";
	gobo_structure_sort: "${GOBO}/library/structure/sort";
	gobo_structure_support: "${GOBO}/library/structure/support";
	gobo_structure_table: "${GOBO}/library/structure/table";
	gobo_lexical: "${GOBO}/library/lexical";
	gobo_lexical_automaton: "${GOBO}/library/lexical/automaton";
	gobo_lexical_error: "${GOBO}/library/lexical/error";
	gobo_lexical_lex: "${GOBO}/library/lexical/lex";
	gobo_lexical_generation: "${GOBO}/library/lexical/generation";
	gobo_lexical_regexp: "${GOBO}/library/lexical/regexp";
	gobo_lexical_scanner: "${GOBO}/library/lexical/scanner";
	gobo_lexical_skeleton: "${GOBO}/library/lexical/skeleton";
	gobo_lexical_support: "${GOBO}/library/lexical/support";
	gobo_parse: "${GOBO}/library/parse";
	gobo_parse_error: "${GOBO}/library/parse/error";
	gobo_parse_fsm: "${GOBO}/library/parse/fsm";
	gobo_parse_generation: "${GOBO}/library/parse/generation";
	gobo_parse_grammar: "${GOBO}/library/parse/grammar";
	gobo_parse_parser: "${GOBO}/library/parse/parser";
	gobo_parse_skeleton: "${GOBO}/library/parse/skeleton";
	gobo_parse_support: "${GOBO}/library/parse/support";
	gobo_parse_yacc: "${GOBO}/library/parse/yacc";
	gobo_pattern: "${GOBO}/library/pattern";
	gobo_pattern_bridge: "${GOBO}/library/pattern/bridge";
	gobo_utility: "${GOBO}/library/utility";
	gobo_utility_error: "${GOBO}/library/utility/error";
	gobo_utility_formatter: "${GOBO}/library/utility/formatter";
	gobo_utility_command: "${GOBO}/library/utility/command";
	gobo_utility_spec: "${GOBO}/library/utility/spec";
	gobo_utility_spec_se: "${GOBO}/library/utility/spec/se";
	gobo_utility_support: "${GOBO}/library/utility/support";

	se_kernel_se: "${SmallEiffelDirectory}/lib_std";


external


generate

	c_compiler_options: "-I${GOBO}/library/kernel/include "


end
