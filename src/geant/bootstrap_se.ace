system

	geant

root

	GEANT: make

default
	no_style_warning (yes)
			assertion (all)
cluster
	geant: "${GOBO}/src/geant"
		default
			assertion (no)
		option
	;
	geant_command: "${GOBO}/src/geant/command"
		default
			assertion (no)
		option
	;

	geant_task: "${GOBO}/src/geant/task"
		default
			assertion (no)
		option
	;

	geant_parser: "${GOBO}/src/geant/parser"
		default
			assertion (no)
		option
	;



	xml: "${GOBO}/library/xml"
		default
			assertion (no)
		option
	;
	xml_factory: "${GOBO}/library/xml/factory"
		default
			assertion (no)
		option
	;

	xml_position: "${GOBO}/library/xml/position"
		default
			assertion (no)
		option
	;

	xml_source: "${GOBO}/library/xml/source"
		default
			assertion (no)
		option
	;

	xml_general: "${GOBO}/library/xml/general"
		default
			assertion (no)
		option
	;

	xml_event: "${GOBO}/library/xml/event"
		default
			assertion (no)
		option
	;

	xml_tree: "${GOBO}/library/xml/tree"
		default
			assertion (no)
		option
	;

	xml_formatter: "${GOBO}/library/xml/formatter"
		default
			assertion (no)
		option
	;

	xml_impl: "${GOBO}/library/xml/impl"
		default
			assertion (no)
		option
	;
	xml_impl_interface: "${GOBO}/library/xml/impl/interface"
		default
			assertion (no)
		option
	;
	xml_impl_interface_general: "${GOBO}/library/xml/impl/interface/general"
		default
			assertion (no)
		option
	;

	xml_impl_interface_event: "${GOBO}/library/xml/impl/interface/event"
		default
			assertion (no)
		option
	;

	xml_impl_interface_tree: "${GOBO}/library/xml/impl/interface/tree"
		default
			assertion (no)
		option
	;


	xml_impl_expat: "${GOBO}/library/xml/impl/expat"
		default
			assertion (no)
		option
	;
	xml_impl_expat_api: "${GOBO}/library/xml/impl/expat/api"
		default
			assertion (no)
		option
	;

	xml_impl_expat_general: "${GOBO}/library/xml/impl/expat/general"
		default
			assertion (no)
		option
	;

	xml_impl_expat_event: "${GOBO}/library/xml/impl/expat/event"
		default
			assertion (no)
		option
	;

	xml_impl_expat_spec: "${GOBO}/library/xml/impl/expat/spec"
		default
			assertion (no)
		option
	;
	xml_impl_expat_spec_se: "${GOBO}/library/xml/impl/expat/spec/se"
		default
			assertion (no)
		option
	;



	xml_impl_eiffel: "${GOBO}/library/xml/impl/eiffel"
		default
			assertion (no)
		option
	;
	xml_impl_eiffel_event: "${GOBO}/library/xml/impl/eiffel/event"
		default
			assertion (no)
		option
	;


	xml_impl_tree_on_event: "${GOBO}/library/xml/impl/tree_on_event"
		default
			assertion (no)
		option
	;
	xml_impl_tree_on_event_tree: "${GOBO}/library/xml/impl/tree_on_event/tree"
		default
			assertion (no)
		option
	;


	xml_impl_no_expat: "${GOBO}/library/xml/impl/no_expat"
		default
			assertion (no)
		option
	;
	xml_impl_no_expat_event: "${GOBO}/library/xml/impl/no_expat/event"
		default
			assertion (no)
		option
	;


	xml_impl_no_eiffel: "${GOBO}/library/xml/impl/no_eiffel"
		default
			assertion (no)
		option
	;
	xml_impl_no_eiffel_event: "${GOBO}/library/xml/impl/no_eiffel/event"
		default
			assertion (no)
		option
	;


	xml_impl_no_tree_on_event: "${GOBO}/library/xml/impl/no_tree_on_event"
		default
			assertion (no)
		option
	;
	xml_impl_no_tree_on_event_tree: "${GOBO}/library/xml/impl/no_tree_on_event/tree"
		default
			assertion (no)
		option
	;





	se_kernel_se: "${SmallEiffelDirectory}/lib_std"
		default
			assertion (no)
		option
	;



	xml: "${GOBO}/library/xml"
		default
			assertion (no)
		option
	;
	xml_factory: "${GOBO}/library/xml/factory"
		default
			assertion (no)
		option
	;

	xml_position: "${GOBO}/library/xml/position"
		default
			assertion (no)
		option
	;

	xml_source: "${GOBO}/library/xml/source"
		default
			assertion (no)
		option
	;

	xml_general: "${GOBO}/library/xml/general"
		default
			assertion (no)
		option
	;

	xml_event: "${GOBO}/library/xml/event"
		default
			assertion (no)
		option
	;

	xml_tree: "${GOBO}/library/xml/tree"
		default
			assertion (no)
		option
	;

	xml_formatter: "${GOBO}/library/xml/formatter"
		default
			assertion (no)
		option
	;

	xml_impl: "${GOBO}/library/xml/impl"
		default
			assertion (no)
		option
	;
	xml_impl_interface: "${GOBO}/library/xml/impl/interface"
		default
			assertion (no)
		option
	;
	xml_impl_interface_general: "${GOBO}/library/xml/impl/interface/general"
		default
			assertion (no)
		option
	;

	xml_impl_interface_event: "${GOBO}/library/xml/impl/interface/event"
		default
			assertion (no)
		option
	;

	xml_impl_interface_tree: "${GOBO}/library/xml/impl/interface/tree"
		default
			assertion (no)
		option
	;


	xml_impl_eiffel: "${GOBO}/library/xml/impl/eiffel"
		default
			assertion (no)
		option
	;
	xml_impl_eiffel_event: "${GOBO}/library/xml/impl/eiffel/event"
		default
			assertion (no)
		option
	;


	xml_impl_tree_on_event: "${GOBO}/library/xml/impl/tree_on_event"
		default
			assertion (no)
		option
	;
	xml_impl_tree_on_event_tree: "${GOBO}/library/xml/impl/tree_on_event/tree"
		default
			assertion (no)
		option
	;


	xml_impl_no_expat: "${GOBO}/library/xml/impl/no_expat"
		default
			assertion (no)
		option
	;
	xml_impl_no_expat_event: "${GOBO}/library/xml/impl/no_expat/event"
		default
			assertion (no)
		option
	;

	gobo: "${GOBO}/library"
		default
			assertion (no)
		option
	;
	gobo_kernel: "${GOBO}/library/kernel"
		default
			assertion (no)
		option
	;
	gobo_kernel_io: "${GOBO}/library/kernel/io"
		default
			assertion (no)
		option
	;
	gobo_kernel_spec: "${GOBO}/library/kernel/spec"
		default
			assertion (no)
		option
	;
	gobo_kernel_spec_se: "${GOBO}/library/kernel/spec/se"
		default
			assertion (no)
		option
	;
	gobo_kernel_unicode: "${GOBO}/library/kernel/unicode"
		default
			assertion (no)
		option
	;



	gobo_structure: "${GOBO}/library/structure"
		default
			assertion (no)
		option
	;
	gobo_structure_container: "${GOBO}/library/structure/container"
		default
			assertion (no)
		option
	;

	gobo_structure_dispenser: "${GOBO}/library/structure/dispenser"
		default
			assertion (no)
		option
	;

	gobo_structure_list: "${GOBO}/library/structure/list"
		default
			assertion (no)
		option
	;

	gobo_structure_set: "${GOBO}/library/structure/set"
		default
			assertion (no)
		option
	;

	gobo_structure_sort: "${GOBO}/library/structure/sort"
		default
			assertion (no)
		option
	;

	gobo_structure_support: "${GOBO}/library/structure/support"
		default
			assertion (no)
		option
	;

	gobo_structure_table: "${GOBO}/library/structure/table"
		default
			assertion (no)
		option
	;


	gobo_lexical: "${GOBO}/library/lexical"
		default
			assertion (no)
		option
	;
	gobo_lexical_automaton: "${GOBO}/library/lexical/automaton"
		default
			assertion (no)
		option
	;

	gobo_lexical_error: "${GOBO}/library/lexical/error"
		default
			assertion (no)
		option
	;

	gobo_lexical_lex: "${GOBO}/library/lexical/lex"
		default
			assertion (no)
		option
	;

	gobo_lexical_generation: "${GOBO}/library/lexical/generation"
		default
			assertion (no)
		option
	;

	gobo_lexical_regexp: "${GOBO}/library/lexical/regexp"
		default
			assertion (no)
		option
	;

	gobo_lexical_scanner: "${GOBO}/library/lexical/scanner"
		default
			assertion (no)
		option
	;

	gobo_lexical_skeleton: "${GOBO}/library/lexical/skeleton"
		default
			assertion (no)
		option
	;

	gobo_lexical_support: "${GOBO}/library/lexical/support"
		default
			assertion (no)
		option
	;


	gobo_parse: "${GOBO}/library/parse"
		default
			assertion (no)
		option
	;
	gobo_parse_error: "${GOBO}/library/parse/error"
		default
			assertion (no)
		option
	;

	gobo_parse_fsm: "${GOBO}/library/parse/fsm"
		default
			assertion (no)
		option
	;

	gobo_parse_generation: "${GOBO}/library/parse/generation"
		default
			assertion (no)
		option
	;

	gobo_parse_grammar: "${GOBO}/library/parse/grammar"
		default
			assertion (no)
		option
	;

	gobo_parse_parser: "${GOBO}/library/parse/parser"
		default
			assertion (no)
		option
	;

	gobo_parse_skeleton: "${GOBO}/library/parse/skeleton"
		default
			assertion (no)
		option
	;

	gobo_parse_support: "${GOBO}/library/parse/support"
		default
			assertion (no)
		option
	;

	gobo_parse_yacc: "${GOBO}/library/parse/yacc"
		default
			assertion (no)
		option
	;


	gobo_utility: "${GOBO}/library/utility"
		default
			assertion (no)
		option
	;
	gobo_utility_error: "${GOBO}/library/utility/error"
		default
			assertion (no)
		option
	;

	gobo_utility_formatter: "${GOBO}/library/utility/formatter"
		default
			assertion (no)
		option
	;

	gobo_utility_command: "${GOBO}/library/utility/command"
		default
			assertion (no)
		option
	;

	gobo_utility_spec: "${GOBO}/library/utility/spec"
		default
			assertion (no)
		option
	;
	gobo_utility_spec_se: "${GOBO}/library/utility/spec/se"
		default
			assertion (no)
		option
	;


	gobo_utility_support: "${GOBO}/library/utility/support"
		default
			assertion (no)
		option
	;

	se_kernel_se: "${SmallEiffelDirectory}/lib_std"
		default
			assertion (no)
		option
	;


external


generate

	c_compiler_options: "-I${GOBO}/library/kernel/include "


end
