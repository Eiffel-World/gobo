#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S281 T281;
typedef struct S741 T741;
typedef struct S760 T760;
typedef struct S495 T495;
typedef struct S466 T466;
typedef struct S580 T580;
typedef struct S455 T455;
typedef struct S588 T588;
typedef struct S650 T650;
typedef struct S101 T101;
typedef struct S152 T152;
typedef struct S652 T652;
typedef struct S227 T227;
typedef struct S560 T560;
typedef struct S569 T569;
typedef struct S591 T591;
typedef struct S616 T616;
typedef struct S394 T394;
typedef struct S599 T599;
typedef struct S557 T557;
typedef struct S235 T235;
typedef struct S174 T174;
typedef struct S690 T690;
typedef struct S364 T364;
typedef struct S195 T195;
typedef struct S213 T213;
typedef int T697;
typedef struct S200 T200;
typedef struct S133 T133;
typedef struct S486 T486;
typedef struct S199 T199;
typedef struct S211 T211;
typedef struct S205 T205;
typedef struct S500 T500;
typedef struct S628 T628;
typedef struct S635 T635;
typedef struct S40 T40;
typedef struct S631 T631;
typedef struct S488 T488;
typedef struct S323 T323;
typedef struct S41 T41;
typedef struct S561 T561;
typedef struct S256 T256;
typedef struct S377 T377;
typedef struct S568 T568;
typedef struct S121 T121;
typedef struct S284 T284;
typedef struct S175 T175;
typedef struct S88 T88;
typedef struct S728 T728;
typedef struct S130 T130;
typedef struct S163 T163;
typedef struct S721 T721;
typedef struct S595 T595;
typedef struct S36 T36;
typedef struct S494 T494;
typedef struct S395 T395;
typedef struct S442 T442;
typedef struct S319 T319;
typedef struct S139 T139;
typedef struct S744 T744;
typedef struct S450 T450;
typedef struct S614 T614;
typedef struct S594 T594;
typedef struct S647 T647;
typedef struct S170 T170;
typedef struct S758 T758;
typedef struct S590 T590;
typedef struct S578 T578;
typedef struct S30 T30;
typedef struct S700 T700;
typedef struct S207 T207;
typedef struct S349 T349;
typedef struct S521 T521;
typedef struct S412 T412;
typedef struct S634 T634;
typedef struct S204 T204;
typedef struct S127 T127;
typedef struct S426 T426;
typedef struct S669 T669;
typedef struct S566 T566;
typedef struct S286 T286;
typedef struct S538 T538;
typedef struct S208 T208;
typedef struct S532 T532;
typedef struct S757 T757;
typedef struct S658 T658;
typedef struct S104 T104;
typedef struct S196 T196;
typedef struct S132 T132;
typedef struct S749 T749;
typedef struct S100 T100;
typedef struct S729 T729;
typedef struct S303 T303;
typedef struct S76 T76;
typedef struct S103 T103;
typedef struct S230 T230;
typedef struct S751 T751;
typedef struct S201 T201;
typedef struct S155 T155;
typedef struct S564 T564;
typedef struct S677 T677;
typedef struct S711 T711;
typedef struct S35 T35;
typedef struct S421 T421;
typedef struct S378 T378;
typedef struct S498 T498;
typedef struct S305 T305;
typedef struct S505 T505;
typedef struct S422 T422;
typedef struct S150 T150;
typedef struct S72 T72;
typedef struct S64 T64;
typedef struct S469 T469;
typedef struct S178 T178;
typedef struct S603 T603;
typedef struct S7 T7;
typedef struct S239 T239;
typedef struct S584 T584;
typedef struct S172 T172;
typedef struct S187 T187;
typedef struct S368 T368;
typedef struct S437 T437;
typedef struct S508 T508;
typedef struct S129 T129;
typedef struct S299 T299;
typedef struct S322 T322;
typedef struct S587 T587;
typedef struct S696 T696;
typedef struct S698 T698;
typedef struct S565 T565;
typedef struct S330 T330;
typedef struct S252 T252;
typedef struct S714 T714;
typedef struct S266 T266;
typedef struct S441 T441;
typedef struct S492 T492;
typedef struct S681 T681;
typedef struct S177 T177;
typedef struct S448 T448;
typedef struct S277 T277;
typedef struct S16 T16;
typedef struct S535 T535;
typedef struct S517 T517;
typedef struct S234 T234;
typedef struct S558 T558;
typedef struct S128 T128;
typedef struct S727 T727;
typedef struct S97 T97;
typedef struct S712 T712;
typedef struct S534 T534;
typedef struct S194 T194;
typedef struct S513 T513;
typedef struct S592 T592;
typedef struct S502 T502;
typedef struct S197 T197;
typedef struct S367 T367;
typedef struct S753 T753;
typedef struct S188 T188;
typedef struct S238 T238;
typedef struct S663 T663;
typedef struct S589 T589;
typedef struct S117 T117;
typedef struct S451 T451;
typedef struct S537 T537;
typedef struct S114 T114;
typedef struct S593 T593;
typedef struct S752 T752;
typedef struct S562 T562;
typedef struct S755 T755;
typedef struct S747 T747;
typedef struct S140 T140;
typedef struct S720 T720;
typedef struct S134 T134;
typedef struct S694 T694;
typedef struct S156 T156;
typedef struct S725 T725;
typedef struct S540 T540;
typedef struct S633 T633;
typedef struct S123 T123;
typedef struct S99 T99;
typedef struct S487 T487;
typedef struct S680 T680;
typedef struct S654 T654;
typedef struct S179 T179;
typedef struct S536 T536;
typedef struct S190 T190;
typedef struct S75 T75;
typedef struct S617 T617;
typedef struct S716 T716;
typedef struct S83 T83;
typedef struct S126 T126;
typedef struct S260 T260;
typedef struct S390 T390;
typedef struct S493 T493;
typedef struct S287 T287;
typedef struct S764 T764;
typedef struct S510 T510;
typedef int T695;
typedef struct S263 T263;
typedef struct S419 T419;
typedef struct S250 T250;
typedef struct S555 T555;
typedef struct S552 T552;
typedef struct S65 T65;
typedef struct S398 T398;
typedef struct S651 T651;
typedef struct S31 T31;
typedef struct S409 T409;
typedef struct S60 T60;
typedef struct S351 T351;

/*C Header Pass 2 :*/
typedef T0**T454;
typedef T0**T325;
typedef T6*T601;
typedef T0**T262;
typedef T0**T210;
typedef T0**T425;
typedef T0**T215;
typedef T0**T512;
typedef T0**T74;
typedef T3*T9;
typedef T0**T684;
typedef T0**T283;
typedef T0**T397;
typedef T0**T370;
typedef T0**T258;
typedef T2*T119;
typedef T0**T491;

/*C Header Pass 3 :*/
extern T697 M697;
struct S537{T2 _i_code;};
int se_cmpT537(T537 o1,T537 o2);
extern T695 M695;

/*C Header Pass 4 :*/
struct S281{Tid id;T283 _storage;T2 _capacity;T2 _upper;};
extern T281 M281;
struct S741{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T741 M741;
struct S760{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T760 M760;
struct S495{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T495 M495;
struct S466{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T466 M466;
struct S580{Tid id;T0* _item;T0* _right;};
extern T580 M580;
struct S455{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T455 M455;
struct S588{Tid id;T0* _parameters;};
extern T588 M588;
struct S650{Tid id;T0* _parameters;};
extern T650 M650;
struct S101{Tid id;T0* _item;T0* _right;};
extern T101 M101;
struct S152{Tid id;T0* _item;T0* _right;};
extern T152 M152;
struct S652{Tid id;T0* _event_parser_factory;};
extern T652 M652;
struct S227{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T227 M227;
struct S560{Tid id;T0* _variables;T0* _error_handler;};
extern T560 M560;
struct S569{Tid id;T0* _first;T0* _second;};
extern T569 M569;
struct S591{Tid id;T0* _parameters;};
extern T591 M591;
struct S616{Tid id;T0* _class_name;T0* _features;};
extern T616 M616;
struct S394{Tid id;T397 _storage;T2 _capacity;T2 _upper;};
extern T394 M394;
struct S599{Tid id;T601 _storage;T2 _capacity;T2 _upper;};
extern T599 M599;
struct S557{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T557 M557;
struct S174{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T174 M174;
struct S690{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T690 M690;
struct S364{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T364 M364;
struct S195{Tid id;T0* _clusters;};
extern T195 M195;
struct S213{Tid id;T215 _storage;T2 _capacity;T2 _upper;};
extern T213 M213;
struct S200{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T200 M200;
struct S133{Tid id;};
extern T133 M133;
struct S235{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T235 M235;
struct S486{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T486 M486;
struct S199{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T199 M199;
struct S211{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T211 M211;
struct S205{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T205 M205;
struct S500{Tid id;T0* _parents;};
extern T500 M500;
struct S628{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T628 M628;
struct S635{Tid id;T0* _item;T0* _right;};
extern T635 M635;
struct S40{Tid id;};
extern T40 M40;
struct S631{Tid id;T0* _item;T0* _right;};
extern T631 M631;
struct S488{Tid id;};
extern T488 M488;
struct S323{Tid id;};
extern T323 M323;
struct S41{Tid id;};
extern T41 M41;
struct S561{Tid id;T0* _table;};
extern T561 M561;
struct S256{Tid id;T258 _storage;T2 _capacity;T2 _upper;};
extern T256 M256;
struct S377{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T377 M377;
struct S568{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T568 M568;
struct S121{Tid id;};
extern T121 M121;
struct S284{Tid id;};
extern T284 M284;
struct S175{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T175 M175;
struct S88{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T88 M88;
struct S728{Tid id;T0* _first;T0* _second;};
extern T728 M728;
struct S130{Tid id;T0* _output_filename;T0* _error_handler;};
extern T130 M130;
struct S163{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T163 M163;
struct S721{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T6 _end_of_file;};
extern T721 M721;
struct S595{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T595 M595;
struct S36{Tid id;T2 _item;};
extern T36 M36;
struct S494{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T494 M494;
struct S395{Tid id;};
extern T395 M395;
struct S442{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T442 M442;
struct S319{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T319 M319;
struct S139{Tid id;T0* _first;T0* _second;};
extern T139 M139;
struct S744{Tid id;T0* _item;T0* _right;};
extern T744 M744;
struct S450{Tid id;T454 _storage;T2 _capacity;T2 _upper;};
extern T450 M450;
struct S614{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T614 M614;
struct S594{Tid id;T3 _value;};
extern T594 M594;
struct S647{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T647 M647;
struct S170{Tid id;T8 _item;};
extern T170 M170;
struct S758{Tid id;T0* _parent;T0* _data;};
extern T758 M758;
struct S590{Tid id;T0* _parameters;};
extern T590 M590;
struct S578{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T578 M578;
struct S30{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T30 M30;
struct S700{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T700 M700;
struct S207{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T207 M207;
struct S349{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T349 M349;
struct S521{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T521 M521;
struct S412{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T412 M412;
struct S634{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T634 M634;
struct S204{Tid id;};
extern T204 M204;
struct S127{Tid id;T0* _output_filename;T0* _error_handler;};
extern T127 M127;
struct S426{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T426 M426;
struct S669{Tid id;};
extern T669 M669;
struct S566{Tid id;};
extern T566 M566;
struct S286{Tid id;};
extern T286 M286;
struct S538{Tid id;T2 _i_code;};
extern T538 M538;
struct S208{Tid id;T210 _storage;T2 _capacity;T2 _upper;};
extern T208 M208;
struct S532{Tid id;};
extern T532 M532;
struct S757{Tid id;T0* _implementation;};
extern T757 M757;
struct S658{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T658 M658;
struct S104{Tid id;T0* _defined_values;};
extern T104 M104;
struct S132{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;};
extern T132 M132;
struct S749{Tid id;T0* _parent;T0* _content;};
extern T749 M749;
struct S100{Tid id;T0* _parameters;};
extern T100 M100;
struct S729{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T729 M729;
struct S303{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T303 M303;
struct S76{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T76 M76;
struct S103{Tid id;T0* _output_filename;T0* _error_handler;};
extern T103 M103;
struct S230{Tid id;};
extern T230 M230;
struct S751{Tid id;T0* _implementation;};
extern T751 M751;
struct S155{Tid id;T0* _name;};
extern T155 M155;
struct S564{Tid id;T0* _item;};
extern T564 M564;
struct S677{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T677 M677;
struct S711{Tid id;T0* _parameters;};
extern T711 M711;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S421{Tid id;T425 _storage;T2 _capacity;T2 _upper;};
extern T421 M421;
struct S378{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T378 M378;
struct S305{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T305 M305;
struct S505{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T505 M505;
struct S422{Tid id;};
extern T422 M422;
struct S150{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T150 M150;
struct S72{Tid id;T74 _storage;T2 _capacity;T2 _upper;};
extern T72 M72;
struct S196{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T196 M196;
struct S64{Tid id;T0* _item;T0* _right;};
extern T64 M64;
struct S469{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T469 M469;
struct S178{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T178 M178;
struct S603{Tid id;};
extern T603 M603;
struct S239{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T239 M239;
struct S584{Tid id;T0* _parameters;};
extern T584 M584;
struct S172{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T172 M172;
struct S187{Tid id;T0* _error_handler;T6 _has_error;};
extern T187 M187;
struct S368{Tid id;};
extern T368 M368;
struct S437{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T437 M437;
struct S508{Tid id;};
extern T508 M508;
struct S129{Tid id;T0* _output_filename;T0* _error_handler;};
extern T129 M129;
struct S299{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T299 M299;
struct S322{Tid id;T325 _storage;T2 _capacity;T2 _upper;};
extern T322 M322;
struct S587{Tid id;T0* _parameters;};
extern T587 M587;
struct S696{Tid id;};
extern T696 M696;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S698{Tid id;T0* _parameters;};
extern T698 M698;
struct S565{Tid id;};
extern T565 M565;
struct S330{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T330 M330;
struct S252{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T252 M252;
struct S714{Tid id;T0* _item;T0* _right;};
extern T714 M714;
struct S266{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T266 M266;
struct S441{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T441 M441;
struct S492{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T492 M492;
struct S681{Tid id;};
extern T681 M681;
struct S177{Tid id;};
extern T177 M177;
struct S448{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T448 M448;
struct S277{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T277 M277;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S535{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T535 M535;
struct S498{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T498 M498;
struct S517{Tid id;};
extern T517 M517;
struct S234{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T234 M234;
struct S558{Tid id;T0* _namespaces;T0* _implementation;};
extern T558 M558;
struct S128{Tid id;T0* _output_filename;T0* _error_handler;};
extern T128 M128;
struct S727{Tid id;T0* _first;T0* _second;};
extern T727 M727;
struct S97{Tid id;};
extern T97 M97;
struct S712{Tid id;T0* _item;T0* _right;};
extern T712 M712;
struct S534{Tid id;T2 _type;};
extern T534 M534;
struct S513{Tid id;};
extern T513 M513;
struct S592{Tid id;T0* _parameters;};
extern T592 M592;
struct S502{Tid id;T0* _class_name;T0* _base_class;};
extern T502 M502;
struct S197{Tid id;T0* _clusters;};
extern T197 M197;
struct S367{Tid id;T370 _storage;T2 _capacity;T2 _upper;};
extern T367 M367;
struct S753{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T753 M753;
struct S188{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T188 M188;
struct S238{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T238 M238;
struct S663{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T663 M663;
struct S589{Tid id;T0* _parameters;};
extern T589 M589;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S194{Tid id;T0* _i_representation;};
extern T194 M194;
struct S451{Tid id;};
extern T451 M451;
extern T537 M537;
struct S114{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T114 M114;
struct S593{Tid id;};
extern T593 M593;
struct S752{Tid id;T0* _implementation;};
extern T752 M752;
struct S562{Tid id;T2 _last_code;T2 _next_pos;};
extern T562 M562;
struct S755{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T755 M755;
struct S747{Tid id;T0* _uri;};
extern T747 M747;
struct S140{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T140 M140;
struct S720{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T720 M720;
struct S134{Tid id;T0* _name;};
extern T134 M134;
struct S201{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T201 M201;
struct S694{Tid id;};
extern T694 M694;
struct S156{Tid id;T0* _name;};
extern T156 M156;
struct S725{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T725 M725;
struct S540{Tid id;T0* _implementation;};
extern T540 M540;
struct S633{Tid id;T0* _feature_name;T0* _external_name;};
extern T633 M633;
struct S123{Tid id;};
extern T123 M123;
struct S99{Tid id;T74 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T99 M99;
struct S487{Tid id;T491 _storage;T2 _capacity;T2 _upper;};
extern T487 M487;
struct S680{Tid id;T684 _storage;T2 _capacity;T2 _upper;};
extern T680 M680;
struct S654{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T654 M654;
struct S179{Tid id;T0* _implementation;};
extern T179 M179;
struct S536{Tid id;T2 _count;T0* _storage;};
extern T536 M536;
struct S190{Tid id;T0* _namespaces;T0* _implementation;};
extern T190 M190;
struct S75{Tid id;T3 _item;};
extern T75 M75;
struct S617{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T617 M617;
struct S716{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T716 M716;
struct S83{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T83 M83;
struct S126{Tid id;};
extern T126 M126;
struct S260{Tid id;T262 _storage;T2 _capacity;T2 _upper;};
extern T260 M260;
struct S390{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T390 M390;
struct S493{Tid id;};
extern T493 M493;
struct S287{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T287 M287;
struct S764{Tid id;T2 _i_code;};
extern T764 M764;
struct S510{Tid id;T512 _storage;T2 _capacity;T2 _upper;};
extern T510 M510;
struct S263{Tid id;};
extern T263 M263;
struct S419{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T419 M419;
struct S250{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T250 M250;
struct S555{Tid id;};
extern T555 M555;
struct S552{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T552 M552;
struct S65{Tid id;T0* _program_name;};
extern T65 M65;
struct S398{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T398 M398;
struct S651{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T651 M651;
struct S31{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T31 M31;
struct S409{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T409 M409;
struct S60{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T60 M60;
struct S351{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T351 M351;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r454clear_all(T454 C,T2 a1);
T454 r454realloc(T454 C,T2 a1,T2 a2);
void r454set_all_with(T454 C,T0* a1,T2 a2);
T6 r454fast_memcmp(T454 C,T454 a1,T2 a2);
void r454clear(T454 C,T2 a1,T2 a2);
void r454copy_from(T454 C,T454 a1,T2 a2);
void r325clear_all(T325 C,T2 a1);
T325 r325realloc(T325 C,T2 a1,T2 a2);
void r325set_all_with(T325 C,T0* a1,T2 a2);
T6 r325fast_memcmp(T325 C,T325 a1,T2 a2);
void r325clear(T325 C,T2 a1,T2 a2);
void r325copy_from(T325 C,T325 a1,T2 a2);
void r601clear_all(T601 C,T2 a1);
T601 r601realloc(T601 C,T2 a1,T2 a2);
void r601set_all_with(T601 C,T6 a1,T2 a2);
T6 r601fast_memcmp(T601 C,T601 a1,T2 a2);
void r601clear(T601 C,T2 a1,T2 a2);
void r601copy_from(T601 C,T601 a1,T2 a2);
void r262clear_all(T262 C,T2 a1);
T262 r262realloc(T262 C,T2 a1,T2 a2);
void r262set_all_with(T262 C,T0* a1,T2 a2);
T6 r262fast_memcmp(T262 C,T262 a1,T2 a2);
void r262clear(T262 C,T2 a1,T2 a2);
void r262copy_from(T262 C,T262 a1,T2 a2);
void r210clear_all(T210 C,T2 a1);
T210 r210realloc(T210 C,T2 a1,T2 a2);
void r210set_all_with(T210 C,T0* a1,T2 a2);
T6 r210fast_memcmp(T210 C,T210 a1,T2 a2);
void r210clear(T210 C,T2 a1,T2 a2);
void r210copy_from(T210 C,T210 a1,T2 a2);
void r425clear_all(T425 C,T2 a1);
T425 r425realloc(T425 C,T2 a1,T2 a2);
void r425set_all_with(T425 C,T0* a1,T2 a2);
T6 r425fast_memcmp(T425 C,T425 a1,T2 a2);
void r425clear(T425 C,T2 a1,T2 a2);
void r425copy_from(T425 C,T425 a1,T2 a2);
void r215clear_all(T215 C,T2 a1);
T215 r215realloc(T215 C,T2 a1,T2 a2);
void r215set_all_with(T215 C,T0* a1,T2 a2);
T6 r215fast_memcmp(T215 C,T215 a1,T2 a2);
void r215clear(T215 C,T2 a1,T2 a2);
void r215copy_from(T215 C,T215 a1,T2 a2);
void r512clear_all(T512 C,T2 a1);
T512 r512realloc(T512 C,T2 a1,T2 a2);
void r512set_all_with(T512 C,T0* a1,T2 a2);
T6 r512fast_memcmp(T512 C,T512 a1,T2 a2);
void r512clear(T512 C,T2 a1,T2 a2);
void r512copy_from(T512 C,T512 a1,T2 a2);
void r74clear_all(T74 C,T2 a1);
T74 r74realloc(T74 C,T2 a1,T2 a2);
T6 r74fast_memcmp(T74 C,T74 a1,T2 a2);
void r74set_all_with(T74 C,T0* a1,T2 a2);
void r74clear(T74 C,T2 a1,T2 a2);
void r74copy_from(T74 C,T74 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r684clear_all(T684 C,T2 a1);
T684 r684realloc(T684 C,T2 a1,T2 a2);
void r684set_all_with(T684 C,T0* a1,T2 a2);
T6 r684fast_memcmp(T684 C,T684 a1,T2 a2);
void r684clear(T684 C,T2 a1,T2 a2);
void r684copy_from(T684 C,T684 a1,T2 a2);
void r283clear_all(T283 C,T2 a1);
T283 r283realloc(T283 C,T2 a1,T2 a2);
void r283set_all_with(T283 C,T0* a1,T2 a2);
T6 r283fast_memcmp(T283 C,T283 a1,T2 a2);
void r283clear(T283 C,T2 a1,T2 a2);
void r283copy_from(T283 C,T283 a1,T2 a2);
void r397clear_all(T397 C,T2 a1);
T397 r397realloc(T397 C,T2 a1,T2 a2);
void r397set_all_with(T397 C,T0* a1,T2 a2);
T6 r397fast_memcmp(T397 C,T397 a1,T2 a2);
void r397clear(T397 C,T2 a1,T2 a2);
void r397copy_from(T397 C,T397 a1,T2 a2);
void r370clear_all(T370 C,T2 a1);
T370 r370realloc(T370 C,T2 a1,T2 a2);
void r370set_all_with(T370 C,T0* a1,T2 a2);
T6 r370fast_memcmp(T370 C,T370 a1,T2 a2);
void r370clear(T370 C,T2 a1,T2 a2);
void r370copy_from(T370 C,T370 a1,T2 a2);
void r258clear_all(T258 C,T2 a1);
T258 r258realloc(T258 C,T2 a1,T2 a2);
void r258set_all_with(T258 C,T0* a1,T2 a2);
T6 r258fast_memcmp(T258 C,T258 a1,T2 a2);
void r258clear(T258 C,T2 a1,T2 a2);
void r258copy_from(T258 C,T258 a1,T2 a2);
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
void r119move(T119 C,T2 a1,T2 a2,T2 a3);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119set_all_with(T119 C,T2 a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r491clear_all(T491 C,T2 a1);
T491 r491realloc(T491 C,T2 a1,T2 a2);
void r491set_all_with(T491 C,T0* a1,T2 a2);
T6 r491fast_memcmp(T491 C,T491 a1,T2 a2);
void r491clear(T491 C,T2 a1,T2 a2);
void r491copy_from(T491 C,T491 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r281copy(T281* C,T0* a1);
T6 r281is_equal(T281* C,T0* a1);
T6 r281se_assigned_from(T0* a1);
void r281make(T281* C,T2 a1);
T6 r281conforms_to(T281* C,T0* a1);
void r281resize(T281* C,T2 a1);
T0* r281twin(T281* C);
void r394copy(T394* C,T0* a1);
T6 r394is_equal(T394* C,T0* a1);
T6 r394se_assigned_from(T0* a1);
void r394make(T394* C,T2 a1);
T6 r394conforms_to(T394* C,T0* a1);
void r394resize(T394* C,T2 a1);
T0* r394twin(T394* C);
void r599copy(T599* C,T0* a1);
T6 r599is_equal(T599* C,T0* a1);
T6 r599se_assigned_from(T0* a1);
void r599make(T599* C,T2 a1);
T6 r599conforms_to(T599* C,T0* a1);
void r599resize(T599* C,T2 a1);
T0* r599twin(T599* C);
void r213copy(T213* C,T0* a1);
T6 r213is_equal(T213* C,T0* a1);
T6 r213se_assigned_from(T0* a1);
void r213make(T213* C,T2 a1);
T6 r213conforms_to(T213* C,T0* a1);
void r213resize(T213* C,T2 a1);
T0* r213twin(T213* C);
void r486copy(T486* C,T0* a1);
T2 r486count(T486* C);
T6 r486is_equal(T486* C,T0* a1);
T2 r486item(T486* C,T2 a1);
T6 r486se_assigned_from(T0* a1);
void r486make(T486* C,T2 a1,T2 a2);
T6 r486conforms_to(T486* C,T0* a1);
void r486resize(T486* C,T2 a1,T2 a2);
T0* r486twin(T486* C);
void r256copy(T256* C,T0* a1);
T6 r256is_equal(T256* C,T0* a1);
T6 r256se_assigned_from(T0* a1);
void r256make(T256* C,T2 a1);
T6 r256conforms_to(T256* C,T0* a1);
void r256resize(T256* C,T2 a1);
T0* r256twin(T256* C);
void r450copy(T450* C,T0* a1);
T6 r450is_equal(T450* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
void r450make(T450* C,T2 a1);
T6 r450conforms_to(T450* C,T0* a1);
void r450resize(T450* C,T2 a1);
T0* r450twin(T450* C);
void r208copy(T208* C,T0* a1);
T6 r208is_equal(T208* C,T0* a1);
T6 r208se_assigned_from(T0* a1);
void r208make(T208* C,T2 a1);
T6 r208conforms_to(T208* C,T0* a1);
void r208resize(T208* C,T2 a1);
T0* r208twin(T208* C);
void r421copy(T421* C,T0* a1);
T6 r421is_equal(T421* C,T0* a1);
T6 r421se_assigned_from(T0* a1);
void r421make(T421* C,T2 a1);
T6 r421conforms_to(T421* C,T0* a1);
void r421resize(T421* C,T2 a1);
T0* r421twin(T421* C);
void r72copy(T72* C,T0* a1);
T6 r72is_equal(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r322copy(T322* C,T0* a1);
T6 r322is_equal(T322* C,T0* a1);
T6 r322se_assigned_from(T0* a1);
void r322make(T322* C,T2 a1);
T6 r322conforms_to(T322* C,T0* a1);
void r322resize(T322* C,T2 a1);
T0* r322twin(T322* C);
void r367copy(T367* C,T0* a1);
T6 r367is_equal(T367* C,T0* a1);
T6 r367se_assigned_from(T0* a1);
void r367make(T367* C,T2 a1);
T6 r367conforms_to(T367* C,T0* a1);
void r367resize(T367* C,T2 a1);
T0* r367twin(T367* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T2 a1);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r117with_capacity(T117* C,T2 a1);
void r117from_collection(T117* C,T0* a1);
void r99copy(T99* C,T0* a1);
T2 r99count(T99* C);
T6 r99is_equal(T99* C,T0* a1);
T0* r99item(T99* C,T2 a1);
T6 r99valid_index(T99* C,T2 a1);
T6 r99se_assigned_from(T0* a1);
void r99make(T99* C,T2 a1,T2 a2);
T6 r99conforms_to(T99* C,T0* a1);
T0* r99twin(T99* C);
void r487copy(T487* C,T0* a1);
T2 r487count(T487* C);
T6 r487is_equal(T487* C,T0* a1);
T0* r487item(T487* C,T2 a1);
T6 r487se_assigned_from(T0* a1);
void r487make(T487* C,T2 a1);
T6 r487conforms_to(T487* C,T0* a1);
void r487resize(T487* C,T2 a1);
T0* r487twin(T487* C);
void r680copy(T680* C,T0* a1);
T6 r680is_equal(T680* C,T0* a1);
T6 r680se_assigned_from(T0* a1);
void r680make(T680* C,T2 a1);
T6 r680conforms_to(T680* C,T0* a1);
void r680resize(T680* C,T2 a1);
T0* r680twin(T680* C);
void r260copy(T260* C,T0* a1);
T2 r260count(T260* C);
T6 r260is_equal(T260* C,T0* a1);
T0* r260item(T260* C,T2 a1);
T6 r260se_assigned_from(T0* a1);
void r260make(T260* C,T2 a1);
T6 r260conforms_to(T260* C,T0* a1);
void r260resize(T260* C,T2 a1);
T0* r260twin(T260* C);
void r510copy(T510* C,T0* a1);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
void r510make(T510* C,T2 a1);
T6 r510conforms_to(T510* C,T0* a1);
void r510resize(T510* C,T2 a1);
T0* r510twin(T510* C);
void r741copy(T741* C,T0* a1);
void r741set(T741* C,T0* a1,T6 a2,T6 a3);
T6 r741is_equal(T741* C,T0* a1);
T6 r741same_position(T741* C,T0* a1);
T6 r741se_assigned_from(T0* a1);
T6 r741same_type(T741* C,T0* a1);
void r741make(T741* C,T0* a1);
T6 r741conforms_to(T741* C,T0* a1);
void r741set_after(T741* C);
T0* r741twin(T741* C);
void r466copy(T466* C,T0* a1);
T6 r466is_equal(T466* C,T0* a1);
T6 r466same_position(T466* C,T0* a1);
T6 r466se_assigned_from(T0* a1);
T6 r466same_type(T466* C,T0* a1);
T6 r466off(T466* C);
T6 r466conforms_to(T466* C,T0* a1);
T0* r466twin(T466* C);
T6 r580is_equal(T580* C,T0* a1);
T6 r580se_assigned_from(T0* a1);
T6 r580conforms_to(T580* C,T0* a1);
T0* r580twin(T580* C);
void r455copy(T455* C,T0* a1);
T6 r455is_equal(T455* C,T0* a1);
void r455remove_traversing_cursor(T455* C,T0* a1);
void r455move_all_cursors_after(T455* C);
void r455add_traversing_cursor(T455* C,T0* a1);
T6 r455se_assigned_from(T0* a1);
T0* r455clone(T0* a1);
T6 r455cursor_before(T0* a1);
T6 r455same_type(T455* C,T0* a1);
void r455make(T455* C,T2 a1);
T6 r455cursor_after(T0* a1);
T6 r455conforms_to(T455* C,T0* a1);
T6 r455cursor_same_position(T0* a1,T0* a2);
T0* r455twin(T455* C);
T0* r455new_cursor(T455* C);
T6 r455cursor_off(T0* a1);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T6 r152is_equal(T152* C,T0* a1);
T6 r152se_assigned_from(T0* a1);
T6 r152conforms_to(T152* C,T0* a1);
T0* r152twin(T152* C);
void r227copy(T227* C,T0* a1);
T6 r227is_equal(T227* C,T0* a1);
T0* r227item(T227* C);
T6 r227same_position(T227* C,T0* a1);
T6 r227se_assigned_from(T0* a1);
T6 r227after(T227* C);
T6 r227same_type(T227* C,T0* a1);
T2 r227index(T227* C);
T6 r227off(T227* C);
T6 r227conforms_to(T227* C,T0* a1);
T0* r227twin(T227* C);
T6 r569is_equal(T569* C,T0* a1);
T6 r569se_assigned_from(T0* a1);
void r569make(T569* C,T0* a1,T0* a2);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569twin(T569* C);
void r690copy(T690* C,T0* a1);
void r690set(T690* C,T0* a1,T6 a2,T6 a3);
T6 r690is_equal(T690* C,T0* a1);
T6 r690same_position(T690* C,T0* a1);
T6 r690se_assigned_from(T0* a1);
T6 r690is_first(T690* C);
T6 r690is_last(T690* C);
T6 r690same_type(T690* C,T0* a1);
void r690make(T690* C,T0* a1);
void r690forth(T690* C);
T6 r690conforms_to(T690* C,T0* a1);
void r690start(T690* C);
void r690go_after(T690* C);
void r690set_after(T690* C);
T0* r690twin(T690* C);
void r364copy(T364* C,T0* a1);
T6 r364is_equal(T364* C,T0* a1);
T6 r364same_position(T364* C,T0* a1);
T6 r364se_assigned_from(T0* a1);
T6 r364same_type(T364* C,T0* a1);
void r364make(T364* C,T0* a1);
T6 r364off(T364* C);
T6 r364conforms_to(T364* C,T0* a1);
T0* r364twin(T364* C);
T2 r211new_capacity(T2 a1);
void r211copy(T211* C,T0* a1);
void r211clear_items(T211* C,T2 a1,T2 a2);
T6 r211extendible(T211* C,T2 a1);
T0* r211cursor_item(T211* C,T0* a1);
T6 r211is_equal(T211* C,T0* a1);
void r211remove_traversing_cursor(T211* C,T0* a1);
void r211move_all_cursors_after(T211* C);
void r211add_traversing_cursor(T211* C,T0* a1);
T6 r211se_assigned_from(T0* a1);
T0* r211clone(T0* a1);
void r211move_left(T211* C,T2 a1,T2 a2);
T6 r211cursor_before(T0* a1);
T6 r211same_type(T211* C,T0* a1);
void r211make(T211* C,T2 a1);
void r211remove(T211* C,T2 a1);
void r211move_cursors_left(T211* C,T2 a1);
void r211remove_last(T211* C);
T6 r211cursor_after(T0* a1);
T6 r211conforms_to(T211* C,T0* a1);
T2 r211cursor_index(T211* C,T0* a1);
void r211cursor_forth(T211* C,T0* a1);
void r211resize(T211* C,T2 a1);
T6 r211cursor_same_position(T0* a1,T0* a2);
void r211move_last_cursors_after(T211* C);
void r211delete(T211* C,T0* a1);
void r211cursor_start(T211* C,T0* a1);
T0* r211twin(T211* C);
void r211force_last(T211* C,T0* a1);
T0* r211new_cursor(T211* C);
void r211put_last(T211* C,T0* a1);
T6 r211cursor_off(T0* a1);
void r628copy(T628* C,T0* a1);
void r628set(T628* C,T0* a1,T6 a2,T6 a3);
T6 r628is_equal(T628* C,T0* a1);
T6 r628same_position(T628* C,T0* a1);
T6 r628se_assigned_from(T0* a1);
T6 r628same_type(T628* C,T0* a1);
void r628make(T628* C,T0* a1);
T6 r628conforms_to(T628* C,T0* a1);
void r628set_after(T628* C);
T0* r628twin(T628* C);
T6 r635is_equal(T635* C,T0* a1);
T6 r635se_assigned_from(T0* a1);
T6 r635conforms_to(T635* C,T0* a1);
T0* r635twin(T635* C);
T6 r631is_equal(T631* C,T0* a1);
T6 r631se_assigned_from(T0* a1);
T6 r631conforms_to(T631* C,T0* a1);
T0* r631twin(T631* C);
void r488clear_all(T0* a1);
T6 r488is_equal(T488* C,T0* a1);
T6 r488se_assigned_from(T0* a1);
T0* r488make(T2 a1);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488resize(T0* a1,T2 a2);
T0* r488twin(T488* C);
T6 r323is_equal(T323* C,T0* a1);
T6 r323se_assigned_from(T0* a1);
T0* r323make(T2 a1);
T6 r323conforms_to(T323* C,T0* a1);
T0* r323resize(T0* a1,T2 a2);
T0* r323twin(T323* C);
T6 r377is_equal(T377* C,T0* a1);
T6 r377se_assigned_from(T0* a1);
void r377make(T377* C,T2 a1);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
void r568copy(T568* C,T0* a1);
void r568set(T568* C,T0* a1,T6 a2,T6 a3);
T6 r568is_equal(T568* C,T0* a1);
T6 r568same_position(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
T6 r568same_type(T568* C,T0* a1);
void r568make(T568* C,T0* a1);
T6 r568conforms_to(T568* C,T0* a1);
void r568set_after(T568* C);
T0* r568twin(T568* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
T0* r121to_fixed_array(T0* a1);
T0* r121make(T2 a1);
T0* r121make_from_array(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T0* r121resize(T0* a1,T2 a2);
T0* r121twin(T121* C);
void r284clear_all(T0* a1);
T6 r284is_equal(T284* C,T0* a1);
T6 r284se_assigned_from(T0* a1);
T0* r284make(T2 a1);
T6 r284conforms_to(T284* C,T0* a1);
T0* r284resize(T0* a1,T2 a2);
T0* r284twin(T284* C);
void r88copy(T88* C,T0* a1);
void r88set(T88* C,T0* a1,T6 a2,T6 a3);
T6 r88is_equal(T88* C,T0* a1);
T6 r88same_position(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T6 r88same_type(T88* C,T0* a1);
void r88make(T88* C,T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88set_after(T88* C);
T0* r88twin(T88* C);
T6 r728is_equal(T728* C,T0* a1);
T6 r728se_assigned_from(T0* a1);
void r728make(T728* C,T0* a1,T0* a2);
T6 r728conforms_to(T728* C,T0* a1);
T0* r728twin(T728* C);
void r163copy(T163* C,T0* a1);
T6 r163is_equal(T163* C,T0* a1);
T0* r163item(T163* C);
T6 r163same_position(T163* C,T0* a1);
T6 r163se_assigned_from(T0* a1);
T6 r163after(T163* C);
T6 r163same_type(T163* C,T0* a1);
void r163make(T163* C,T0* a1);
T6 r163off(T163* C);
T6 r163conforms_to(T163* C,T0* a1);
T0* r163twin(T163* C);
T2 r595new_capacity(T2 a1);
void r595copy(T595* C,T0* a1);
void r595force(T595* C,T6 a1,T0* a2);
void r595make_clashes(T595* C,T2 a1);
T6 r595cursor_item(T595* C,T0* a1);
void r595search_position(T595* C,T0* a1);
T6 r595is_equal(T595* C,T0* a1);
void r595remove_traversing_cursor(T595* C,T0* a1);
void r595clone_slots(T595* C);
extern T0*oBC108FIXED_INTEGER_ARRAY_;
void r595keys_resize(T595* C,T2 a1);
T6 r595item(T595* C,T0* a1);
void r595clone_clashes(T595* C);
void r595move_all_cursors_after(T595* C);
void r595make_items(T595* C,T2 a1);
void r595add_traversing_cursor(T595* C,T0* a1);
T6 r595se_assigned_from(T0* a1);
T0* r595clone(T0* a1);
T6 r595same_type(T595* C,T0* a1);
void r595make(T595* C,T2 a1);
T0* r595cursor_key(T595* C,T0* a1);
void r595clone_items(T595* C);
T6 r595cursor_after(T0* a1);
T6 r595conforms_to(T595* C,T0* a1);
T6 r595has(T595* C,T0* a1);
void r595make_keys(T595* C,T2 a1);
T2 r595hash_position(T595* C,T0* a1);
void r595cursor_forth(T595* C,T0* a1);
void r595items_resize(T595* C,T2 a1);
void r595clone_keys(T595* C);
void r595make_with_equality_testers(T595* C,T2 a1,T0* a2,T0* a3);
void r595resize(T595* C,T2 a1);
T6 r595cursor_same_position(T0* a1,T0* a2);
void r595cursor_start(T595* C,T0* a1);
void r595clashes_resize(T595* C,T2 a1);
void r595slots_resize(T595* C,T2 a1);
T0* r595twin(T595* C);
T0* r595new_cursor(T595* C);
void r595make_slots(T595* C,T2 a1);
T2 r595new_modulus(T2 a1);
T6 r595cursor_off(T0* a1);
T6 r395is_equal(T395* C,T0* a1);
T6 r395se_assigned_from(T0* a1);
T0* r395make(T2 a1);
T6 r395conforms_to(T395* C,T0* a1);
T0* r395resize(T0* a1,T2 a2);
T0* r395twin(T395* C);
void r442copy(T442* C,T0* a1);
void r442make_clashes(T442* C,T2 a1);
void r442search_position(T442* C,T0* a1);
T6 r442is_equal(T442* C,T0* a1);
void r442remove_traversing_cursor(T442* C,T0* a1);
void r442clone_slots(T442* C);
T2 r442item(T442* C,T0* a1);
void r442clone_clashes(T442* C);
void r442move_all_cursors_after(T442* C);
void r442make_items(T442* C,T2 a1);
void r442add_traversing_cursor(T442* C,T0* a1);
T6 r442se_assigned_from(T0* a1);
T0* r442clone(T0* a1);
T6 r442same_type(T442* C,T0* a1);
void r442clone_items(T442* C);
T6 r442conforms_to(T442* C,T0* a1);
T6 r442has(T442* C,T0* a1);
void r442make_keys(T442* C,T2 a1);
T2 r442hash_position(T442* C,T0* a1);
void r442clone_keys(T442* C);
void r442make_with_equality_testers(T442* C,T2 a1,T0* a2,T0* a3);
T6 r442cursor_same_position(T0* a1,T0* a2);
T0* r442twin(T442* C);
T0* r442new_cursor(T442* C);
void r442make_slots(T442* C,T2 a1);
T2 r442new_modulus(T2 a1);
T6 r442cursor_off(T0* a1);
void r319copy(T319* C,T0* a1);
T6 r319is_equal(T319* C,T0* a1);
T6 r319same_position(T319* C,T0* a1);
T6 r319se_assigned_from(T0* a1);
T6 r319same_type(T319* C,T0* a1);
void r319make(T319* C,T0* a1);
T6 r319off(T319* C);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
T6 r139is_equal(T139* C,T0* a1);
T6 r139se_assigned_from(T0* a1);
void r139make(T139* C,T0* a1,T0* a2);
T6 r139conforms_to(T139* C,T0* a1);
T0* r139twin(T139* C);
T6 r744is_equal(T744* C,T0* a1);
T6 r744se_assigned_from(T0* a1);
T6 r744conforms_to(T744* C,T0* a1);
T0* r744twin(T744* C);
void r614copy(T614* C,T0* a1);
T0* r614key(T614* C);
T6 r614is_equal(T614* C,T0* a1);
T6 r614item(T614* C);
T6 r614same_position(T614* C,T0* a1);
T6 r614se_assigned_from(T0* a1);
T6 r614after(T614* C);
T6 r614same_type(T614* C,T0* a1);
void r614make(T614* C,T0* a1);
T6 r614off(T614* C);
T6 r614conforms_to(T614* C,T0* a1);
T0* r614twin(T614* C);
void r647copy(T647* C,T0* a1);
void r647set(T647* C,T0* a1,T6 a2,T6 a3);
T6 r647is_equal(T647* C,T0* a1);
T6 r647same_position(T647* C,T0* a1);
T6 r647se_assigned_from(T0* a1);
T6 r647is_last(T647* C);
T6 r647same_type(T647* C,T0* a1);
void r647make(T647* C,T0* a1);
T6 r647conforms_to(T647* C,T0* a1);
void r647set_after(T647* C);
T0* r647twin(T647* C);
void r578copy(T578* C,T0* a1);
T6 r578is_equal(T578* C,T0* a1);
void r578remove_traversing_cursor(T578* C,T0* a1);
void r578move_all_cursors_after(T578* C);
void r578add_traversing_cursor(T578* C,T0* a1);
T6 r578se_assigned_from(T0* a1);
T6 r578same_type(T578* C,T0* a1);
void r578make(T578* C);
T6 r578conforms_to(T578* C,T0* a1);
void r578cursor_forth(T578* C,T0* a1);
void r578cursor_start(T578* C,T0* a1);
T0* r578twin(T578* C);
T0* r578new_cursor(T578* C);
void r578put_last(T578* C,T0* a1);
T6 r578cursor_off(T0* a1);
void r30copy(T30* C,T0* a1);
void r30set(T30* C,T0* a1,T6 a2,T6 a3);
T6 r30is_equal(T30* C,T0* a1);
T6 r30same_position(T30* C,T0* a1);
T6 r30se_assigned_from(T0* a1);
T6 r30same_type(T30* C,T0* a1);
void r30make(T30* C,T0* a1);
T6 r30conforms_to(T30* C,T0* a1);
void r30set_after(T30* C);
T0* r30twin(T30* C);
T2 r207new_capacity(T2 a1);
void r207copy(T207* C,T0* a1);
T6 r207extendible(T207* C,T2 a1);
T6 r207is_equal(T207* C,T0* a1);
void r207remove_traversing_cursor(T207* C,T0* a1);
void r207move_all_cursors_after(T207* C);
void r207add_traversing_cursor(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
T0* r207clone(T0* a1);
T6 r207cursor_before(T0* a1);
T6 r207same_type(T207* C,T0* a1);
void r207make(T207* C,T2 a1);
T6 r207cursor_after(T0* a1);
T6 r207conforms_to(T207* C,T0* a1);
void r207resize(T207* C,T2 a1);
T6 r207cursor_same_position(T0* a1,T0* a2);
T0* r207twin(T207* C);
void r207force_last(T207* C,T0* a1);
T0* r207new_cursor(T207* C);
void r207put_last(T207* C,T0* a1);
T6 r207cursor_off(T0* a1);
void r349copy(T349* C,T0* a1);
T6 r349is_equal(T349* C,T0* a1);
T6 r349same_position(T349* C,T0* a1);
T6 r349se_assigned_from(T0* a1);
T6 r349same_type(T349* C,T0* a1);
void r349make(T349* C,T0* a1);
T6 r349off(T349* C);
T6 r349conforms_to(T349* C,T0* a1);
T0* r349twin(T349* C);
void r521copy(T521* C,T0* a1);
T6 r521is_equal(T521* C,T0* a1);
T6 r521same_position(T521* C,T0* a1);
T6 r521se_assigned_from(T0* a1);
T6 r521same_type(T521* C,T0* a1);
void r521make(T521* C,T0* a1);
T6 r521off(T521* C);
T6 r521conforms_to(T521* C,T0* a1);
T0* r521twin(T521* C);
void r412copy(T412* C,T0* a1);
void r412make_clashes(T412* C,T2 a1);
void r412search_position(T412* C,T0* a1);
T6 r412is_equal(T412* C,T0* a1);
void r412remove_traversing_cursor(T412* C,T0* a1);
void r412clone_slots(T412* C);
T2 r412item(T412* C,T0* a1);
void r412clone_clashes(T412* C);
void r412move_all_cursors_after(T412* C);
void r412make_items(T412* C,T2 a1);
void r412add_traversing_cursor(T412* C,T0* a1);
T6 r412se_assigned_from(T0* a1);
T0* r412clone(T0* a1);
T6 r412same_type(T412* C,T0* a1);
void r412clone_items(T412* C);
T6 r412conforms_to(T412* C,T0* a1);
T6 r412has(T412* C,T0* a1);
void r412make_keys(T412* C,T2 a1);
T2 r412hash_position(T412* C,T0* a1);
void r412clone_keys(T412* C);
void r412make_with_equality_testers(T412* C,T2 a1,T0* a2,T0* a3);
T6 r412cursor_same_position(T0* a1,T0* a2);
T0* r412twin(T412* C);
T0* r412new_cursor(T412* C);
void r412make_slots(T412* C,T2 a1);
T2 r412new_modulus(T2 a1);
T6 r412cursor_off(T0* a1);
void r634copy(T634* C,T0* a1);
T6 r634cursor_is_last(T634* C,T0* a1);
T6 r634is_equal(T634* C,T0* a1);
void r634remove_traversing_cursor(T634* C,T0* a1);
void r634move_all_cursors_after(T634* C);
void r634add_traversing_cursor(T634* C,T0* a1);
T6 r634se_assigned_from(T0* a1);
T6 r634same_type(T634* C,T0* a1);
void r634make(T634* C);
T6 r634conforms_to(T634* C,T0* a1);
void r634cursor_forth(T634* C,T0* a1);
void r634cursor_start(T634* C,T0* a1);
T0* r634twin(T634* C);
void r634force_last(T634* C,T0* a1);
T0* r634new_cursor(T634* C);
T6 r634cursor_off(T0* a1);
void r426copy(T426* C,T0* a1);
T6 r426is_equal(T426* C,T0* a1);
void r426remove_traversing_cursor(T426* C,T0* a1);
void r426move_all_cursors_after(T426* C);
void r426add_traversing_cursor(T426* C,T0* a1);
T6 r426se_assigned_from(T0* a1);
T0* r426clone(T0* a1);
T6 r426cursor_before(T0* a1);
T6 r426same_type(T426* C,T0* a1);
void r426make(T426* C,T2 a1);
T6 r426cursor_after(T0* a1);
T6 r426conforms_to(T426* C,T0* a1);
T6 r426cursor_same_position(T0* a1,T0* a2);
T0* r426twin(T426* C);
T0* r426new_cursor(T426* C);
T6 r426cursor_off(T0* a1);
T6 r669is_equal(T669* C,T0* a1);
T6 r669se_assigned_from(T0* a1);
T6 r669conforms_to(T669* C,T0* a1);
T6 r669test(T0* a1,T0* a2);
T0* r669twin(T669* C);
T6 r286is_equal(T286* C,T0* a1);
T6 r286se_assigned_from(T0* a1);
T0* r286make(T2 a1);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286resize(T0* a1,T2 a2);
T0* r286twin(T286* C);
void r729copy(T729* C,T0* a1);
T0* r729cursor_item(T0* a1);
T6 r729is_equal(T729* C,T0* a1);
void r729remove_traversing_cursor(T729* C,T0* a1);
void r729move_all_cursors_after(T729* C);
void r729add_traversing_cursor(T729* C,T0* a1);
T6 r729se_assigned_from(T0* a1);
T6 r729cursor_before(T0* a1);
T6 r729same_type(T729* C,T0* a1);
void r729make(T729* C);
T6 r729cursor_after(T0* a1);
T6 r729conforms_to(T729* C,T0* a1);
void r729cursor_forth(T729* C,T0* a1);
void r729cursor_start(T729* C,T0* a1);
T0* r729twin(T729* C);
T0* r729new_cursor(T729* C);
void r729put_last(T729* C,T0* a1);
T6 r729cursor_off(T0* a1);
void r303copy(T303* C,T0* a1);
T6 r303is_equal(T303* C,T0* a1);
T6 r303same_position(T303* C,T0* a1);
T6 r303se_assigned_from(T0* a1);
T6 r303same_type(T303* C,T0* a1);
void r303make(T303* C,T0* a1);
T6 r303off(T303* C);
T6 r303conforms_to(T303* C,T0* a1);
T0* r303twin(T303* C);
T6 r230is_equal(T230* C,T0* a1);
T6 r230se_assigned_from(T0* a1);
T0* r230make(T2 a1);
T6 r230conforms_to(T230* C,T0* a1);
T0* r230resize(T0* a1,T2 a2);
T0* r230twin(T230* C);
T6 r564is_equal(T564* C,T0* a1);
T6 r564se_assigned_from(T0* a1);
T6 r564conforms_to(T564* C,T0* a1);
T0* r564twin(T564* C);
void r677copy(T677* C,T0* a1);
T6 r677is_equal(T677* C,T0* a1);
T6 r677same_position(T677* C,T0* a1);
T6 r677se_assigned_from(T0* a1);
T6 r677same_type(T677* C,T0* a1);
void r677make(T677* C,T0* a1);
T6 r677off(T677* C);
T6 r677conforms_to(T677* C,T0* a1);
T0* r677twin(T677* C);
void r378copy(T378* C,T0* a1);
T6 r378is_equal(T378* C,T0* a1);
void r378remove_traversing_cursor(T378* C,T0* a1);
void r378move_all_cursors_after(T378* C);
void r378add_traversing_cursor(T378* C,T0* a1);
T6 r378se_assigned_from(T0* a1);
T0* r378clone(T0* a1);
T6 r378cursor_before(T0* a1);
T6 r378same_type(T378* C,T0* a1);
void r378make(T378* C,T2 a1);
T6 r378cursor_after(T0* a1);
T6 r378conforms_to(T378* C,T0* a1);
T6 r378cursor_same_position(T0* a1,T0* a2);
T0* r378twin(T378* C);
T0* r378new_cursor(T378* C);
T6 r378cursor_off(T0* a1);
void r305copy(T305* C,T0* a1);
void r305make_clashes(T305* C,T2 a1);
void r305search_position(T305* C,T2 a1);
T6 r305is_equal(T305* C,T0* a1);
void r305remove_traversing_cursor(T305* C,T0* a1);
void r305clone_slots(T305* C);
T0* r305item(T305* C,T2 a1);
void r305clone_clashes(T305* C);
void r305move_all_cursors_after(T305* C);
void r305make_items(T305* C,T2 a1);
void r305add_traversing_cursor(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
T0* r305clone(T0* a1);
T6 r305same_type(T305* C,T0* a1);
void r305clone_items(T305* C);
T6 r305conforms_to(T305* C,T0* a1);
T6 r305has(T305* C,T2 a1);
void r305make_keys(T305* C,T2 a1);
T2 r305hash_position(T305* C,T2 a1);
void r305clone_keys(T305* C);
void r305make_with_equality_testers(T305* C,T2 a1,T0* a2,T0* a3);
T6 r305cursor_same_position(T0* a1,T0* a2);
T0* r305twin(T305* C);
T0* r305new_cursor(T305* C);
void r305make_slots(T305* C,T2 a1);
T2 r305new_modulus(T2 a1);
T6 r305cursor_off(T0* a1);
T2 r505new_capacity(T2 a1);
void r505copy(T505* C,T0* a1);
void r505force(T505* C,T0* a1,T0* a2);
void r505make_clashes(T505* C,T2 a1);
void r505search_position(T505* C,T0* a1);
T6 r505is_equal(T505* C,T0* a1);
void r505remove_traversing_cursor(T505* C,T0* a1);
void r505clone_slots(T505* C);
void r505keys_resize(T505* C,T2 a1);
void r505clone_clashes(T505* C);
T0* r505item(T505* C,T0* a1);
void r505move_all_cursors_after(T505* C);
void r505make_items(T505* C,T2 a1);
void r505add_traversing_cursor(T505* C,T0* a1);
T6 r505se_assigned_from(T0* a1);
T0* r505clone(T0* a1);
T6 r505same_type(T505* C,T0* a1);
void r505make(T505* C,T2 a1);
void r505clone_items(T505* C);
T6 r505conforms_to(T505* C,T0* a1);
T6 r505has(T505* C,T0* a1);
void r505make_keys(T505* C,T2 a1);
T2 r505hash_position(T505* C,T0* a1);
void r505items_resize(T505* C,T2 a1);
void r505clone_keys(T505* C);
void r505make_with_equality_testers(T505* C,T2 a1,T0* a2,T0* a3);
void r505resize(T505* C,T2 a1);
T6 r505cursor_same_position(T0* a1,T0* a2);
void r505clashes_resize(T505* C,T2 a1);
void r505slots_resize(T505* C,T2 a1);
T0* r505twin(T505* C);
T0* r505new_cursor(T505* C);
void r505make_slots(T505* C,T2 a1);
T2 r505new_modulus(T2 a1);
T6 r505cursor_off(T0* a1);
T6 r422is_equal(T422* C,T0* a1);
T6 r422se_assigned_from(T0* a1);
T0* r422make(T2 a1);
T6 r422conforms_to(T422* C,T0* a1);
T0* r422resize(T0* a1,T2 a2);
T0* r422twin(T422* C);
void r150copy(T150* C,T0* a1);
void r150append_last(T150* C,T0* a1);
T0* r150cursor_item(T0* a1);
T6 r150cursor_is_last(T150* C,T0* a1);
T6 r150is_equal(T150* C,T0* a1);
void r150remove_traversing_cursor(T150* C,T0* a1);
void r150move_all_cursors_after(T150* C);
void r150add_traversing_cursor(T150* C,T0* a1);
T6 r150se_assigned_from(T0* a1);
T6 r150same_type(T150* C,T0* a1);
void r150make(T150* C);
T6 r150cursor_after(T0* a1);
T6 r150conforms_to(T150* C,T0* a1);
void r150cursor_forth(T150* C,T0* a1);
void r150make_from_linear(T150* C,T0* a1);
void r150cursor_start(T150* C,T0* a1);
T0* r150twin(T150* C);
void r150force_last(T150* C,T0* a1);
T0* r150new_cursor(T150* C);
void r150put_last(T150* C,T0* a1);
T6 r150cursor_off(T0* a1);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r603is_equal(T603* C,T0* a1);
T6 r603se_assigned_from(T0* a1);
T0* r603make(T2 a1);
T6 r603conforms_to(T603* C,T0* a1);
T0* r603resize(T0* a1,T2 a2);
T0* r603twin(T603* C);
T6 r368is_equal(T368* C,T0* a1);
T6 r368se_assigned_from(T0* a1);
T0* r368make(T2 a1);
T6 r368conforms_to(T368* C,T0* a1);
T0* r368resize(T0* a1,T2 a2);
T0* r368twin(T368* C);
void r437copy(T437* C,T0* a1);
T6 r437is_equal(T437* C,T0* a1);
T6 r437same_position(T437* C,T0* a1);
T6 r437se_assigned_from(T0* a1);
T6 r437same_type(T437* C,T0* a1);
T6 r437off(T437* C);
T6 r437conforms_to(T437* C,T0* a1);
T0* r437twin(T437* C);
T6 r508is_equal(T508* C,T0* a1);
T6 r508se_assigned_from(T0* a1);
T6 r508conforms_to(T508* C,T0* a1);
T6 r508test(T0* a1,T0* a2);
T0* r508twin(T508* C);
void r299copy(T299* C,T0* a1);
T6 r299is_equal(T299* C,T0* a1);
T6 r299same_position(T299* C,T0* a1);
T6 r299se_assigned_from(T0* a1);
T6 r299same_type(T299* C,T0* a1);
void r299make(T299* C,T0* a1);
T6 r299off(T299* C);
T6 r299conforms_to(T299* C,T0* a1);
T0* r299twin(T299* C);
void r330copy(T330* C,T0* a1);
void r330make_equal(T330* C,T2 a1);
void r330make_clashes(T330* C,T2 a1);
void r330search_position(T330* C,T0* a1);
T6 r330is_equal(T330* C,T0* a1);
void r330remove_traversing_cursor(T330* C,T0* a1);
void r330clone_slots(T330* C);
T0* r330items_item(T330* C,T2 a1);
void r330clone_clashes(T330* C);
void r330move_all_cursors_after(T330* C);
void r330make_items(T330* C,T2 a1);
void r330add_traversing_cursor(T330* C,T0* a1);
T6 r330se_assigned_from(T0* a1);
T0* r330clone(T0* a1);
T6 r330same_type(T330* C,T0* a1);
void r330make(T330* C,T2 a1);
T6 r330equal(T0* a1,T0* a2);
void r330clone_items(T330* C);
T6 r330same_equality_tester(T330* C,T0* a1);
T6 r330conforms_to(T330* C,T0* a1);
T6 r330has(T330* C,T0* a1);
T2 r330hash_position(T330* C,T0* a1);
T6 r330cursor_same_position(T0* a1,T0* a2);
T0* r330twin(T330* C);
T0* r330new_cursor(T330* C);
void r330make_slots(T330* C,T2 a1);
T2 r330new_modulus(T2 a1);
T6 r330cursor_off(T0* a1);
void r252copy(T252* C,T0* a1);
void r252wipe_out(T252* C);
T0* r252keys_item(T252* C,T2 a1);
void r252make_clashes(T252* C,T2 a1);
void r252put(T252* C,T0* a1,T0* a2);
void r252search_position(T252* C,T0* a1);
T6 r252is_equal(T252* C,T0* a1);
void r252remove_traversing_cursor(T252* C,T0* a1);
void r252clone_slots(T252* C);
void r252keys_resize(T252* C,T2 a1);
T0* r252item(T252* C,T0* a1);
void r252clone_clashes(T252* C);
void r252make_items(T252* C,T2 a1);
void r252move_all_cursors_after(T252* C);
void r252add_traversing_cursor(T252* C,T0* a1);
T6 r252se_assigned_from(T0* a1);
T0* r252clone(T0* a1);
T6 r252same_type(T252* C,T0* a1);
void r252slots_wipe_out(T252* C);
void r252make(T252* C,T2 a1);
void r252clashes_wipe_out(T252* C);
void r252clone_items(T252* C);
T6 r252conforms_to(T252* C,T0* a1);
T6 r252has(T252* C,T0* a1);
void r252make_keys(T252* C,T2 a1);
T2 r252hash_position(T252* C,T0* a1);
void r252items_wipe_out(T252* C);
void r252items_resize(T252* C,T2 a1);
void r252clone_keys(T252* C);
void r252make_with_equality_testers(T252* C,T2 a1,T0* a2,T0* a3);
void r252resize(T252* C,T2 a1);
T6 r252cursor_same_position(T0* a1,T0* a2);
void r252clashes_resize(T252* C,T2 a1);
void r252slots_resize(T252* C,T2 a1);
T0* r252twin(T252* C);
void r252keys_wipe_out(T252* C);
T0* r252new_cursor(T252* C);
void r252make_slots(T252* C,T2 a1);
void r252keys_put(T252* C,T0* a1,T2 a2);
T2 r252new_modulus(T2 a1);
T6 r252cursor_off(T0* a1);
T6 r714is_equal(T714* C,T0* a1);
T6 r714se_assigned_from(T0* a1);
T6 r714conforms_to(T714* C,T0* a1);
T0* r714twin(T714* C);
void r266copy(T266* C,T0* a1);
T6 r266is_equal(T266* C,T0* a1);
void r266remove_traversing_cursor(T266* C,T0* a1);
void r266move_all_cursors_after(T266* C);
void r266add_traversing_cursor(T266* C,T0* a1);
T6 r266se_assigned_from(T0* a1);
T6 r266same_type(T266* C,T0* a1);
void r266make(T266* C);
T6 r266conforms_to(T266* C,T0* a1);
T0* r266twin(T266* C);
T0* r266new_cursor(T266* C);
T6 r441is_equal(T441* C,T0* a1);
T6 r441se_assigned_from(T0* a1);
void r441make(T441* C,T2 a1);
T6 r441conforms_to(T441* C,T0* a1);
T0* r441twin(T441* C);
T6 r681is_equal(T681* C,T0* a1);
T6 r681se_assigned_from(T0* a1);
T0* r681make(T2 a1);
T6 r681conforms_to(T681* C,T0* a1);
T0* r681resize(T0* a1,T2 a2);
T0* r681twin(T681* C);
void r448copy(T448* C,T0* a1);
T6 r448is_equal(T448* C,T0* a1);
T6 r448same_position(T448* C,T0* a1);
T6 r448se_assigned_from(T0* a1);
T6 r448same_type(T448* C,T0* a1);
void r448make(T448* C,T0* a1);
T6 r448off(T448* C);
T6 r448conforms_to(T448* C,T0* a1);
T0* r448twin(T448* C);
void r277copy(T277* C,T0* a1);
T6 r277is_equal(T277* C,T0* a1);
T6 r277same_position(T277* C,T0* a1);
T6 r277se_assigned_from(T0* a1);
T6 r277same_type(T277* C,T0* a1);
void r277make(T277* C,T0* a1);
T6 r277conforms_to(T277* C,T0* a1);
void r277set_after(T277* C);
T0* r277twin(T277* C);
T6 r517is_equal(T517* C,T0* a1);
T6 r517se_assigned_from(T0* a1);
T0* r517make(T2 a1);
T6 r517conforms_to(T517* C,T0* a1);
T0* r517resize(T0* a1,T2 a2);
T0* r517twin(T517* C);
T6 r727is_equal(T727* C,T0* a1);
T6 r727se_assigned_from(T0* a1);
void r727make(T727* C,T0* a1,T0* a2);
T6 r727conforms_to(T727* C,T0* a1);
T0* r727twin(T727* C);
T6 r712is_equal(T712* C,T0* a1);
T6 r712se_assigned_from(T0* a1);
T6 r712conforms_to(T712* C,T0* a1);
T0* r712twin(T712* C);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
T0* r513make(T2 a1);
T6 r513conforms_to(T513* C,T0* a1);
T0* r513resize(T0* a1,T2 a2);
T0* r513twin(T513* C);
void r238copy(T238* C,T0* a1);
T6 r238is_equal(T238* C,T0* a1);
T0* r238item(T238* C);
T6 r238same_position(T238* C,T0* a1);
T6 r238se_assigned_from(T0* a1);
T6 r238after(T238* C);
T6 r238same_type(T238* C,T0* a1);
void r238make(T238* C,T0* a1);
T6 r238off(T238* C);
T6 r238conforms_to(T238* C,T0* a1);
T0* r238twin(T238* C);
T6 r451is_equal(T451* C,T0* a1);
T6 r451se_assigned_from(T0* a1);
T0* r451make(T2 a1);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451resize(T0* a1,T2 a2);
T0* r451twin(T451* C);
T2 r114new_capacity(T2 a1);
void r114copy(T114* C,T0* a1);
void r114force(T114* C,T0* a1,T0* a2);
void r114make_clashes(T114* C,T2 a1);
T0* r114cursor_item(T114* C,T0* a1);
void r114search_position(T114* C,T0* a1);
T6 r114is_equal(T114* C,T0* a1);
void r114remove_traversing_cursor(T114* C,T0* a1);
void r114clone_slots(T114* C);
void r114keys_resize(T114* C,T2 a1);
T0* r114item(T114* C,T0* a1);
void r114clone_clashes(T114* C);
void r114move_all_cursors_after(T114* C);
void r114make_items(T114* C,T2 a1);
void r114add_traversing_cursor(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
T6 r114same_type(T114* C,T0* a1);
void r114make(T114* C,T2 a1);
void r114clone_items(T114* C);
T6 r114cursor_after(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has(T114* C,T0* a1);
void r114make_keys(T114* C,T2 a1);
T2 r114hash_position(T114* C,T0* a1);
void r114cursor_forth(T114* C,T0* a1);
void r114items_resize(T114* C,T2 a1);
void r114clone_keys(T114* C);
void r114make_with_equality_testers(T114* C,T2 a1,T0* a2,T0* a3);
void r114resize(T114* C,T2 a1);
T6 r114cursor_same_position(T0* a1,T0* a2);
void r114cursor_start(T114* C,T0* a1);
void r114clashes_resize(T114* C,T2 a1);
void r114slots_resize(T114* C,T2 a1);
T0* r114twin(T114* C);
T0* r114new_cursor(T114* C);
void r114make_slots(T114* C,T2 a1);
T2 r114new_modulus(T2 a1);
T6 r114cursor_off(T0* a1);
void r140copy(T140* C,T0* a1);
void r140set(T140* C,T0* a1,T6 a2,T6 a3);
T6 r140is_equal(T140* C,T0* a1);
T6 r140same_position(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
T6 r140is_last(T140* C);
T6 r140same_type(T140* C,T0* a1);
void r140make(T140* C,T0* a1);
T6 r140conforms_to(T140* C,T0* a1);
void r140set_after(T140* C);
T0* r140twin(T140* C);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
void r617copy(T617* C,T0* a1);
void r617append_last(T617* C,T0* a1);
T0* r617cursor_item(T0* a1);
T6 r617is_equal(T617* C,T0* a1);
void r617remove_traversing_cursor(T617* C,T0* a1);
void r617cursor_go_after(T617* C,T0* a1);
void r617move_all_cursors_after(T617* C);
void r617add_traversing_cursor(T617* C,T0* a1);
T6 r617se_assigned_from(T0* a1);
T6 r617same_type(T617* C,T0* a1);
void r617make(T617* C);
T6 r617cursor_after(T0* a1);
T6 r617conforms_to(T617* C,T0* a1);
void r617cursor_forth(T617* C,T0* a1);
void r617make_from_linear(T617* C,T0* a1);
void r617cursor_start(T617* C,T0* a1);
T0* r617twin(T617* C);
void r617force_last(T617* C,T0* a1);
T0* r617new_cursor(T617* C);
T6 r617cursor_off(T0* a1);
void r83copy(T83* C,T0* a1);
T0* r83cursor_item(T0* a1);
T6 r83is_equal(T83* C,T0* a1);
void r83remove_traversing_cursor(T83* C,T0* a1);
void r83move_all_cursors_after(T83* C);
void r83add_traversing_cursor(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
T6 r83same_type(T83* C,T0* a1);
void r83make(T83* C);
T6 r83cursor_after(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
void r83cursor_forth(T83* C,T0* a1);
void r83cursor_start(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83force_last(T83* C,T0* a1);
T0* r83new_cursor(T83* C);
T6 r83cursor_off(T0* a1);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
T6 r126conforms_to(T126* C,T0* a1);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
void r390copy(T390* C,T0* a1);
T6 r390is_equal(T390* C,T0* a1);
T6 r390same_position(T390* C,T0* a1);
T6 r390se_assigned_from(T0* a1);
T6 r390same_type(T390* C,T0* a1);
T6 r390off(T390* C);
T6 r390conforms_to(T390* C,T0* a1);
T0* r390twin(T390* C);
void r287copy(T287* C,T0* a1);
void r287wipe_out(T287* C);
void r287make_clashes(T287* C,T2 a1);
void r287search_position(T287* C,T2 a1);
T6 r287is_equal(T287* C,T0* a1);
void r287remove_traversing_cursor(T287* C,T0* a1);
void r287clone_slots(T287* C);
T0* r287item(T287* C,T2 a1);
void r287clone_clashes(T287* C);
void r287make_items(T287* C,T2 a1);
void r287move_all_cursors_after(T287* C);
void r287add_traversing_cursor(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
T0* r287clone(T0* a1);
T6 r287same_type(T287* C,T0* a1);
void r287slots_wipe_out(T287* C);
void r287clashes_wipe_out(T287* C);
void r287clone_items(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T6 r287has(T287* C,T2 a1);
void r287make_keys(T287* C,T2 a1);
T2 r287hash_position(T287* C,T2 a1);
void r287items_wipe_out(T287* C);
void r287clone_keys(T287* C);
void r287make_with_equality_testers(T287* C,T2 a1,T0* a2,T0* a3);
T6 r287cursor_same_position(T0* a1,T0* a2);
T0* r287twin(T287* C);
void r287keys_wipe_out(T287* C);
T0* r287new_cursor(T287* C);
void r287make_slots(T287* C,T2 a1);
T2 r287new_modulus(T2 a1);
T6 r287cursor_off(T0* a1);
T6 r263is_equal(T263* C,T0* a1);
T6 r263se_assigned_from(T0* a1);
T6 r263conforms_to(T263* C,T0* a1);
T6 r263test(T0* a1,T0* a2);
T0* r263twin(T263* C);
void r419copy(T419* C,T0* a1);
T6 r419is_equal(T419* C,T0* a1);
T6 r419same_position(T419* C,T0* a1);
T6 r419se_assigned_from(T0* a1);
T6 r419same_type(T419* C,T0* a1);
void r419make(T419* C,T0* a1);
T6 r419off(T419* C);
T6 r419conforms_to(T419* C,T0* a1);
T0* r419twin(T419* C);
void r250copy(T250* C,T0* a1);
T0* r250keys_item(T250* C,T2 a1);
void r250make_clashes(T250* C,T2 a1);
T0* r250cursor_item(T250* C,T0* a1);
void r250search_position(T250* C,T0* a1);
T6 r250is_equal(T250* C,T0* a1);
void r250remove_traversing_cursor(T250* C,T0* a1);
void r250clone_slots(T250* C);
T0* r250item(T250* C,T0* a1);
void r250clone_clashes(T250* C);
void r250move_all_cursors_after(T250* C);
void r250make_items(T250* C,T2 a1);
void r250add_traversing_cursor(T250* C,T0* a1);
T6 r250se_assigned_from(T0* a1);
T0* r250clone(T0* a1);
T6 r250same_type(T250* C,T0* a1);
void r250make(T250* C,T2 a1);
void r250clone_items(T250* C);
T6 r250cursor_after(T0* a1);
T6 r250conforms_to(T250* C,T0* a1);
T6 r250has(T250* C,T0* a1);
void r250make_keys(T250* C,T2 a1);
T2 r250hash_position(T250* C,T0* a1);
void r250cursor_forth(T250* C,T0* a1);
void r250clone_keys(T250* C);
void r250make_with_equality_testers(T250* C,T2 a1,T0* a2,T0* a3);
T6 r250cursor_same_position(T0* a1,T0* a2);
void r250cursor_start(T250* C,T0* a1);
T0* r250twin(T250* C);
T0* r250new_cursor(T250* C);
void r250make_slots(T250* C,T2 a1);
T2 r250new_modulus(T2 a1);
T6 r250cursor_off(T0* a1);
T6 r555is_equal(T555* C,T0* a1);
T6 r555se_assigned_from(T0* a1);
T0* r555make(T2 a1);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555resize(T0* a1,T2 a2);
T0* r555twin(T555* C);
void r552copy(T552* C,T0* a1);
T6 r552is_equal(T552* C,T0* a1);
T6 r552same_position(T552* C,T0* a1);
T6 r552se_assigned_from(T0* a1);
T6 r552same_type(T552* C,T0* a1);
T6 r552off(T552* C);
T6 r552conforms_to(T552* C,T0* a1);
T0* r552twin(T552* C);
void r398copy(T398* C,T0* a1);
T6 r398is_equal(T398* C,T0* a1);
void r398remove_traversing_cursor(T398* C,T0* a1);
void r398move_all_cursors_after(T398* C);
void r398add_traversing_cursor(T398* C,T0* a1);
T6 r398se_assigned_from(T0* a1);
T0* r398clone(T0* a1);
T6 r398cursor_before(T0* a1);
T6 r398same_type(T398* C,T0* a1);
void r398make(T398* C,T2 a1);
T6 r398cursor_after(T0* a1);
T6 r398conforms_to(T398* C,T0* a1);
T6 r398cursor_same_position(T0* a1,T0* a2);
T0* r398twin(T398* C);
T0* r398new_cursor(T398* C);
T6 r398cursor_off(T0* a1);
void r409copy(T409* C,T0* a1);
T6 r409is_equal(T409* C,T0* a1);
T6 r409same_position(T409* C,T0* a1);
T6 r409se_assigned_from(T0* a1);
T6 r409same_type(T409* C,T0* a1);
T6 r409off(T409* C);
T6 r409conforms_to(T409* C,T0* a1);
T0* r409twin(T409* C);
void r60copy(T60* C,T0* a1);
T6 r60is_equal(T60* C,T0* a1);
void r60remove_traversing_cursor(T60* C,T0* a1);
void r60move_all_cursors_after(T60* C);
void r60add_traversing_cursor(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
T6 r60same_type(T60* C,T0* a1);
void r60make(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
void r60cursor_forth(T60* C,T0* a1);
void r60cursor_start(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60force_last(T60* C,T0* a1);
T0* r60new_cursor(T60* C);
T6 r60cursor_off(T0* a1);
void r351copy(T351* C,T0* a1);
T0* r351keys_item(T351* C,T2 a1);
void r351make_clashes(T351* C,T2 a1);
void r351search_position(T351* C,T0* a1);
T6 r351is_equal(T351* C,T0* a1);
void r351remove_traversing_cursor(T351* C,T0* a1);
void r351clone_slots(T351* C);
T0* r351item(T351* C,T0* a1);
void r351clone_clashes(T351* C);
void r351move_all_cursors_after(T351* C);
void r351make_items(T351* C,T2 a1);
void r351add_traversing_cursor(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T0* r351clone(T0* a1);
T6 r351same_type(T351* C,T0* a1);
void r351make(T351* C,T2 a1);
void r351clone_items(T351* C);
T6 r351conforms_to(T351* C,T0* a1);
T6 r351has(T351* C,T0* a1);
void r351make_keys(T351* C,T2 a1);
T2 r351hash_position(T351* C,T0* a1);
void r351clone_keys(T351* C);
void r351make_with_equality_testers(T351* C,T2 a1,T0* a2,T0* a3);
T6 r351cursor_same_position(T0* a1,T0* a2);
T0* r351twin(T351* C);
T0* r351new_cursor(T351* C);
void r351make_slots(T351* C,T2 a1);
T2 r351new_modulus(T2 a1);
T6 r351cursor_off(T0* a1);
T6 r760is_equal(T760* C,T0* a1);
T6 r760se_assigned_from(T0* a1);
void r760make(T760* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r760conforms_to(T760* C,T0* a1);
T0* r760twin(T760* C);
T6 r495is_equal(T495* C,T0* a1);
T6 r495se_assigned_from(T0* a1);
void r495make(T495* C,T0* a1,T2 a2,T2 a3);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495twin(T495* C);
T6 r588is_equal(T588* C,T0* a1);
T6 r588se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r588Arguments(void);
void r588make(T588* C,T0* a1,T0* a2,T0* a3);
T0* r588message(T588* C,T0* a1);
T6 r588conforms_to(T588* C,T0* a1);
T0* r588twin(T588* C);
T0* r588default_message(T588* C);
extern T0*oBC93STRING_;
T6 r650is_equal(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
T0* r650Arguments(void);
void r650make(T650* C,T0* a1,T0* a2,T0* a3);
T0* r650message(T650* C,T0* a1);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
T0* r650default_message(T650* C);
T6 r652is_equal(T652* C,T0* a1);
T0* r652new_tree_parser(T652* C);
T6 r652se_assigned_from(T0* a1);
T0* r652new_tree_parser_imp(T652* C);
T6 r652conforms_to(T652* C,T0* a1);
T0* r652twin(T652* C);
T6 r560is_expression_true(T560* C,T0* a1);
T6 r560should_strip_element(T560* C,T0* a1,T0* a2);
T6 r560is_equal(T560* C,T0* a1);
T6 r560se_assigned_from(T0* a1);
void r560preprocess_composite(T560* C,T0* a1,T0* a2);
extern T0*oBC176uc_equal;
extern int fBC176uc_equal;
T0* r560uc_equal(void);
T6 r560is_valid_expression(T0* a1);
extern T0*oBC176uc_closing_curly_brace;
extern int fBC176uc_closing_curly_brace;
T0* r560uc_closing_curly_brace(void);
void r560make(T560* C,T0* a1,T0* a2);
extern T0*oBC176uc_unless;
extern int fBC176uc_unless;
T0* r560uc_unless(void);
extern T0*oBC176uc_if;
extern int fBC176uc_if;
T0* r560uc_if(void);
T6 r560conforms_to(T560* C,T0* a1);
extern T0*oBC176uc_opening_curly_brace;
extern int fBC176uc_opening_curly_brace;
T0* r560uc_opening_curly_brace(void);
T0* r560twin(T560* C);
void r560expand_attribute_variables(T560* C,T0* a1);
extern T0*oBC176uc_dollar;
extern int fBC176uc_dollar;
T0* r560uc_dollar(void);
T6 r591is_equal(T591* C,T0* a1);
T6 r591se_assigned_from(T0* a1);
T0* r591Arguments(void);
void r591make(T591* C);
T0* r591message(T591* C,T0* a1);
T6 r591conforms_to(T591* C,T0* a1);
T0* r591twin(T591* C);
T0* r591default_message(T591* C);
T6 r616is_equal(T616* C,T0* a1);
T6 r616se_assigned_from(T0* a1);
void r616make(T616* C,T0* a1);
T6 r616conforms_to(T616* C,T0* a1);
T0* r616twin(T616* C);
T6 r557is_equal(T557* C,T0* a1);
T6 r557se_assigned_from(T0* a1);
void r557make_with_variables(T557* C,T0* a1,T0* a2);
T6 r557conforms_to(T557* C,T0* a1);
extern T0*oBC176uc_cluster;
extern int fBC176uc_cluster;
T0* r557uc_cluster(void);
void r557parse_file(T557* C,T0* a1);
T0* r557twin(T557* C);
extern T0*oBC176uc_system;
extern int fBC176uc_system;
T0* r557uc_system(void);
extern T0*oBC77INPUT_STREAM_;
T6 r174is_equal(T174* C,T0* a1);
T6 r174se_assigned_from(T0* a1);
void r174make_with_variables(T174* C,T0* a1,T0* a2);
T6 r174conforms_to(T174* C,T0* a1);
T0* r174uc_cluster(void);
void r174parse_file(T174* C,T0* a1);
T0* r174twin(T174* C);
T0* r174uc_system(void);
T6 r195is_equal(T195* C,T0* a1);
T6 r195se_assigned_from(T0* a1);
void r195unmount_root(T195* C,T0* a1);
void r195make(T195* C,T0* a1);
void r195mount(T195* C,T0* a1);
T6 r195conforms_to(T195* C,T0* a1);
void r195unmount(T195* C);
T0* r195twin(T195* C);
void r195mount_root(T195* C,T0* a1);
void r200set_optimize(T200* C,T6 a1);
T6 r200is_equal(T200* C,T0* a1);
void r200set_ensure(T200* C,T6 a1);
T6 r200se_assigned_from(T0* a1);
void r200make(T200* C);
void r200set_check(T200* C,T6 a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200set_invariant(T200* C,T6 a1);
void r200set_loop(T200* C,T6 a1);
void r200set_debug(T200* C,T6 a1);
T0* r200twin(T200* C);
void r200set_require(T200* C,T6 a1);
T6 r235is_equal(T235* C,T0* a1);
T6 r235se_assigned_from(T0* a1);
void r235make(T235* C,T0* a1,T2 a2,T0* a3);
T6 r235conforms_to(T235* C,T0* a1);
T0* r235twin(T235* C);
T6 r199has_exported_features(T199* C);
T6 r199is_equal(T199* C,T0* a1);
T6 r199se_assigned_from(T0* a1);
void r199merge(T199* C,T0* a1);
void r199make(T199* C);
T6 r199is_empty(T199* C);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199cloned_externals(T199* C);
T6 r199has_include_directories(T199* C);
T6 r199has_link_libraries(T199* C);
T0* r199twin(T199* C);
T6 r205is_equal(T205* C,T0* a1);
T6 r205se_assigned_from(T0* a1);
extern T0*oBC34std;
T6 r205conforms_to(T205* C,T0* a1);
T0* r205twin(T205* C);
void r205make_standard(T205* C);
T6 r500is_equal(T500* C,T0* a1);
T6 r500se_assigned_from(T0* a1);
T6 r500conforms_to(T500* C,T0* a1);
T0* r500twin(T500* C);
void r561put(T561* C,T0* a1,T0* a2);
T6 r561is_equal(T561* C,T0* a1);
T0* r561item(T561* C,T0* a1);
T6 r561se_assigned_from(T0* a1);
void r561make(T561* C);
T6 r561conforms_to(T561* C,T0* a1);
T0* r561twin(T561* C);
T6 r175is_equal(T175* C,T0* a1);
T6 r175se_assigned_from(T0* a1);
void r175make_with_variables(T175* C,T0* a1,T0* a2);
T6 r175conforms_to(T175* C,T0* a1);
T0* r175uc_cluster(void);
void r175parse_file(T175* C,T0* a1);
T0* r175twin(T175* C);
T0* r175uc_system(void);
void r130print_cluster(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130is_equal(T130* C,T0* a1);
void r130print_xml_file(T130* C,T0* a1,T0* a2);
void r130print_externals(T0* a1,T2 a2,T0* a3);
T6 r130se_assigned_from(T0* a1);
void r130print_exported_class(T0* a1,T2 a2,T0* a3);
void r130print_clusters(T130* C,T0* a1,T2 a2,T0* a3);
void r130generate(T130* C,T0* a1);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130print_link_libraries(T0* a1,T2 a2,T0* a3);
void r130print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r721is_equal(T721* C,T0* a1);
T6 r721se_assigned_from(T0* a1);
void r721old_read_character(T721* C);
T6 r721old_end_of_file(T721* C);
void r721make(T721* C);
T6 r721conforms_to(T721* C,T0* a1);
T0* r721twin(T721* C);
T6 r494is_equal(T494* C,T0* a1);
T6 r494se_assigned_from(T0* a1);
void r494make(T494* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r494conforms_to(T494* C,T0* a1);
T0* r494twin(T494* C);
T6 r594is_equal(T594* C,T0* a1);
T6 r594se_assigned_from(T0* a1);
T6 r594conforms_to(T594* C,T0* a1);
T6 r594is_undefined(T594* C);
T0* r594twin(T594* C);
T6 r758is_equal(T758* C,T0* a1);
T6 r758se_assigned_from(T0* a1);
void r758make(T758* C,T0* a1,T0* a2);
T6 r758conforms_to(T758* C,T0* a1);
T0* r758twin(T758* C);
T6 r590is_equal(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
T0* r590Arguments(void);
void r590make(T590* C,T0* a1);
T0* r590message(T590* C,T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
T0* r590twin(T590* C);
T0* r590default_message(T590* C);
T6 r700is_closed(T700* C);
void r700old_close(T700* C);
T6 r700is_equal(T700* C,T0* a1);
T6 r700se_assigned_from(T0* a1);
void r700close(T700* C);
void r700make(T700* C,T0* a1);
void r700old_put_string(T700* C,T0* a1);
T6 r700conforms_to(T700* C,T0* a1);
void r700connect_to(T700* C,T0* a1);
void r700put_line(T700* C,T0* a1);
T0* r700twin(T700* C);
void r700open_write(T700* C);
T0* r204new_class(T0* a1,T2 a2,T0* a3);
T6 r204is_equal(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
T6 r204conforms_to(T204* C,T0* a1);
T0* r204twin(T204* C);
void r127print_cluster(T127* C,T0* a1,T0* a2);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127print_ace_file(T127* C,T0* a1,T0* a2);
void r127print_exported_class(T0* a1,T2 a2,T0* a3);
void r127print_clusters(T127* C,T0* a1,T0* a2);
void r127generate(T127* C,T0* a1);
T6 r127conforms_to(T127* C,T0* a1);
T0* r127twin(T127* C);
void r127print_options(T0* a1,T2 a2,T0* a3);
void r127print_indentation(T2 a1,T0* a2);
void r127print_link_libraries(T0* a1,T0* a2);
void r127print_include_directories(T0* a1,T0* a2);
T6 r538is_equal(T538* C,T0* a1);
T537 r538item(T538* C);
T6 r538se_assigned_from(T0* a1);
T6 r538conforms_to(T538* C,T0* a1);
void r538make_from_character(T538* C,T3 a1);
T0* r538twin(T538* C);
T6 r757is_equal(T757* C,T0* a1);
T6 r757se_assigned_from(T0* a1);
void r757make_from_implementation(T757* C,T0* a1);
T6 r757conforms_to(T757* C,T0* a1);
T0* r757twin(T757* C);
void r658set_last_cell(T658* C,T0* a1);
void r658copy(T658* C,T0* a1);
void r658wipe_out(T658* C);
void r658remove_first(T658* C);
T0* r658cursor_item(T0* a1);
T6 r658cursor_is_last(T658* C,T0* a1);
T6 r658is_equal(T658* C,T0* a1);
void r658remove_traversing_cursor(T658* C,T0* a1);
void r658cursor_go_after(T658* C,T0* a1);
void r658move_all_cursors_after(T658* C);
void r658add_traversing_cursor(T658* C,T0* a1);
T6 r658se_assigned_from(T0* a1);
T6 r658cursor_before(T0* a1);
T6 r658same_type(T658* C,T0* a1);
void r658make(T658* C);
T0* r658first_element(T658* C);
void r658remove_last(T658* C);
T6 r658cursor_after(T0* a1);
T6 r658conforms_to(T658* C,T0* a1);
void r658cursor_forth(T658* C,T0* a1);
void r658move_last_cursors_after(T658* C);
void r658cursor_start(T658* C,T0* a1);
T0* r658twin(T658* C);
T0* r658new_cursor(T658* C);
T6 r658cursor_is_first(T658* C,T0* a1);
void r658remove_at_cursor(T658* C,T0* a1);
void r658put_last(T658* C,T0* a1);
void r658move_all_cursors(T658* C,T0* a1,T0* a2);
T6 r658cursor_off(T0* a1);
extern T0*oBC105template_expander;
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104make(T104* C);
T6 r104conforms_to(T104* C,T0* a1);
T0* r104twin(T104* C);
T0* r104expanded_variables(T104* C,T0* a1);
T6 r132is_equal(T132* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132make(T132* C,T0* a1,T0* a2);
T6 r132conforms_to(T132* C,T0* a1);
void r132execute(T132* C);
T0* r132twin(T132* C);
T6 r749is_equal(T749* C,T0* a1);
T6 r749se_assigned_from(T0* a1);
void r749make(T749* C,T0* a1,T0* a2);
T6 r749conforms_to(T749* C,T0* a1);
T0* r749twin(T749* C);
T6 r100is_equal(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100Arguments(void);
void r100make(T100* C,T0* a1);
T0* r100message(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100default_message(T100* C);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76execute_generators(T76* C,T0* a1);
void r76make(T76* C,T0* a1,T0* a2);
T6 r76conforms_to(T76* C,T0* a1);
void r76_29Pmake(T76* C,T0* a1,T0* a2);
void r76execute(T76* C);
T0* r76twin(T76* C);
void r103print_cluster(T103* C,T0* a1,T0* a2);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_ace_file(T103* C,T0* a1,T0* a2);
void r103generate_cecil_file(T103* C,T0* a1);
void r103print_exported_class(T0* a1,T0* a2);
void r103print_clusters(T103* C,T0* a1,T0* a2);
void r103generate(T103* C,T0* a1);
T6 r103conforms_to(T103* C,T0* a1);
T0* r103twin(T103* C);
void r103print_options(T0* a1,T2 a2,T0* a3);
void r103print_exported_classes(T0* a1,T0* a2);
void r103print_indentation(T2 a1,T0* a2);
void r103print_link_libraries(T0* a1,T0* a2);
void r103print_include_directories(T0* a1,T0* a2);
T6 r751is_equal(T751* C,T0* a1);
T6 r751se_assigned_from(T0* a1);
void r751make_from_implementation(T751* C,T0* a1);
T6 r751conforms_to(T751* C,T0* a1);
T0* r751twin(T751* C);
T6 r155is_equal(T155* C,T0* a1);
T6 r155se_assigned_from(T0* a1);
T6 r155conforms_to(T155* C,T0* a1);
void r155put_line(T0* a1);
T0* r155twin(T155* C);
T6 r711is_equal(T711* C,T0* a1);
T6 r711se_assigned_from(T0* a1);
T0* r711Arguments(void);
void r711make(T711* C,T0* a1);
T0* r711message(T711* C,T0* a1);
T6 r711conforms_to(T711* C,T0* a1);
T0* r711twin(T711* C);
T0* r711default_message(T711* C);
T6 r196is_equal(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196unmount_root(T196* C,T0* a1);
void r196make(T196* C,T0* a1,T0* a2);
void r196mount(T196* C,T0* a1);
T6 r196conforms_to(T196* C,T0* a1);
void r196unmount(T196* C);
T0* r196twin(T196* C);
void r196set_excluded(T196* C,T0* a1);
void r196mount_root(T196* C,T0* a1);
void r469yy_build_tables(T469* C);
extern T0*oBC470yy_meta_template;
extern int fBC470yy_meta_template;
T0* r469yy_meta_template(void);
extern T0*oBC469yycheck_template;
extern int fBC469yycheck_template;
T0* r469yycheck_template(void);
T6 r469is_equal(T469* C,T0* a1);
extern T0*oBC470yy_accept_template;
extern int fBC470yy_accept_template;
T0* r469yy_accept_template(void);
extern T0*oBC470yy_base_template;
extern int fBC470yy_base_template;
T0* r469yy_base_template(void);
void r469yy_build_parser_tables(T469* C);
T6 r469se_assigned_from(T0* a1);
extern T0*oBC469yytable_template;
extern int fBC469yytable_template;
T0* r469yytable_template(void);
T0* r469yyfixed_array(T0* a1);
extern T0*oBC469yypgoto_template;
extern int fBC469yypgoto_template;
T0* r469yypgoto_template(void);
extern T0*oBC479Empty_buffer;
extern int fBC479Empty_buffer;
T0* r469Empty_buffer(void);
void r469yy_set_content(T469* C,T0* a1);
extern T0*oBC470yy_nxt_template;
extern int fBC470yy_nxt_template;
T0* r469yy_nxt_template(void);
extern T0*oBC470yy_chk_template;
extern int fBC470yy_chk_template;
T0* r469yy_chk_template(void);
extern T0*oBC469yypact_template;
extern int fBC469yypact_template;
T0* r469yypact_template(void);
void r469make_parser_skeleton(T469* C);
extern T0*oBC469yydefact_template;
extern int fBC469yydefact_template;
T0* r469yydefact_template(void);
extern T0*oBC470yy_def_template;
extern int fBC470yy_def_template;
T0* r469yy_def_template(void);
T6 r469conforms_to(T469* C,T0* a1);
extern T0*oBC470yy_ec_template;
extern int fBC470yy_ec_template;
T0* r469yy_ec_template(void);
void r469make_with_buffer(T469* C,T0* a1);
void r469yy_initialize(T469* C);
extern T0*oBC469yyr1_template;
extern int fBC469yyr1_template;
T0* r469yyr1_template(void);
void r469make_with_factory(T469* C,T0* a1,T0* a2,T0* a3);
T0* r469twin(T469* C);
void r469yy_load_input_buffer(T469* C);
extern T0*oBC469yytranslate_template;
extern int fBC469yytranslate_template;
T0* r469yytranslate_template(void);
T0* r469yy_fixed_array(T0* a1);
extern T0*oBC469yyr2_template;
extern int fBC469yyr2_template;
T0* r469yyr2_template(void);
extern T0*oBC469yydefgoto_template;
extern int fBC469yydefgoto_template;
T0* r469yydefgoto_template(void);
void r469make_eiffel_scanner(T469* C,T0* a1,T0* a2);
void r178disconnect(T178* C);
T6 r178is_equal(T178* C,T0* a1);
T6 r178se_assigned_from(T0* a1);
void r178read_character(T178* C);
T6 r178conforms_to(T178* C,T0* a1);
T6 r178end_of_input(T178* C);
void r178connect_to(T178* C,T0* a1);
T0* r178twin(T178* C);
T6 r239is_equal(T239* C,T0* a1);
T6 r239se_assigned_from(T0* a1);
void r239make(T239* C,T0* a1,T0* a2);
T6 r239conforms_to(T239* C,T0* a1);
T0* r239twin(T239* C);
T6 r584is_equal(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
T0* r584Arguments(void);
void r584make(T584* C,T0* a1,T0* a2);
T0* r584message(T584* C,T0* a1);
T6 r584conforms_to(T584* C,T0* a1);
T0* r584twin(T584* C);
T0* r584default_message(T584* C);
T6 r172is_equal(T172* C,T0* a1);
T6 r172se_assigned_from(T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
void r172make_basic_classes(T172* C);
T0* r172eiffel_class(T172* C,T0* a1);
void r172set_mounted_clusters(T172* C,T0* a1);
void r172make_with_factory(T172* C,T0* a1,T0* a2,T0* a3);
T0* r172twin(T172* C);
void r172merge_externals(T172* C);
extern T0*oBC176uc_optimize;
extern int fBC176uc_optimize;
T0* r187uc_optimize(void);
void r187validate_named_cluster(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_check;
extern int fBC176uc_check;
T0* r187uc_check(void);
void r187validate_root(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_external;
extern int fBC176uc_external;
T0* r187uc_external(void);
void r187validate_external(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_exclude;
extern int fBC176uc_exclude;
T0* r187uc_exclude(void);
void r187validate_mount(T187* C,T0* a1,T0* a2);
T6 r187is_equal(T187* C,T0* a1);
void r187validate_system_doc(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_invariant;
extern int fBC176uc_invariant;
T0* r187uc_invariant(void);
T6 r187se_assigned_from(T0* a1);
void r187validate_cluster(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_description;
extern int fBC176uc_description;
T0* r187uc_description(void);
extern T0*oBC176uc_mount;
extern int fBC176uc_mount;
T0* r187uc_mount(void);
extern T0*oBC176uc_debug;
extern int fBC176uc_debug;
T0* r187uc_debug(void);
extern T0*oBC176uc_option;
extern int fBC176uc_option;
T0* r187uc_option(void);
extern T0*oBC176uc_root;
extern int fBC176uc_root;
T0* r187uc_root(void);
void r187validate_system(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_feature;
extern int fBC176uc_feature;
T0* r187uc_feature(void);
extern T0*oBC176uc_class;
extern int fBC176uc_class;
T0* r187uc_class(void);
extern T0*oBC176uc_loop;
extern int fBC176uc_loop;
T0* r187uc_loop(void);
T6 r187conforms_to(T187* C,T0* a1);
void r187validate_cluster_doc(T187* C,T0* a1,T0* a2);
void r187validate_export(T187* C,T0* a1,T0* a2);
T0* r187uc_cluster(void);
void r187validate_exclude(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_export;
extern int fBC176uc_export;
T0* r187uc_export(void);
extern T0*oBC176uc_link_library;
extern int fBC176uc_link_library;
T0* r187uc_link_library(void);
extern T0*oBC176uc_include_dir;
extern int fBC176uc_include_dir;
T0* r187uc_include_dir(void);
extern T0*oBC176uc_location;
extern int fBC176uc_location;
T0* r187uc_location(void);
T0* r187twin(T187* C);
T0* r187uc_system(void);
extern T0*oBC176uc_creation;
extern int fBC176uc_creation;
T0* r187uc_creation(void);
extern T0*oBC176uc_name;
extern int fBC176uc_name;
T0* r187uc_name(void);
extern T0*oBC176uc_require;
extern int fBC176uc_require;
T0* r187uc_require(void);
void r187validate_option(T187* C,T0* a1,T0* a2);
extern T0*oBC176uc_ensure;
extern int fBC176uc_ensure;
T0* r187uc_ensure(void);
void r129print_cluster(T129* C,T0* a1,T0* a2);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129print_ace_file(T129* C,T0* a1,T0* a2);
void r129print_exported_class(T0* a1,T2 a2,T0* a3);
void r129print_component(T0* a1);
void r129print_clusters(T129* C,T0* a1,T0* a2);
void r129generate(T129* C,T0* a1);
T6 r129conforms_to(T129* C,T0* a1);
T0* r129twin(T129* C);
void r129print_options(T0* a1,T2 a2,T0* a3);
void r129print_indentation(T2 a1,T0* a2);
void r129print_link_libraries(T0* a1,T0* a2);
void r129print_include_directories(T0* a1,T0* a2);
T6 r587is_equal(T587* C,T0* a1);
T6 r587se_assigned_from(T0* a1);
T0* r587Arguments(void);
void r587make(T587* C,T0* a1,T0* a2,T0* a3);
T0* r587message(T587* C,T0* a1);
T6 r587conforms_to(T587* C,T0* a1);
T0* r587twin(T587* C);
T0* r587default_message(T587* C);
T6 r698is_equal(T698* C,T0* a1);
T6 r698se_assigned_from(T0* a1);
T0* r698Arguments(void);
void r698make(T698* C,T0* a1);
T0* r698message(T698* C,T0* a1);
T6 r698conforms_to(T698* C,T0* a1);
T0* r698twin(T698* C);
T0* r698default_message(T698* C);
T6 r565is_equal(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565expand_from_hash_table(T0* a1,T0* a2);
T0* r565twin(T565* C);
void r492set_position(T492* C,T2 a1,T2 a2,T2 a3);
T6 r492is_equal(T492* C,T0* a1);
extern T2 oBC492lower;
extern int fBC492lower;
T2 r492lower(void);
T6 r492se_assigned_from(T0* a1);
void r492make(T492* C,T0* a1);
extern T0*oBC181STRING_BUFFER_;
T6 r492conforms_to(T492* C,T0* a1);
void r492make_from_buffer(T492* C,T0* a1);
T0* r492twin(T492* C);
extern T0*oBC535utils;
T2 r535item_code(T535* C,T2 a1);
T6 r535is_equal(T535* C,T0* a1);
T6 r535se_assigned_from(T0* a1);
void r535make(T535* C);
void r535insert(T535* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r535add_to_storage_count(T535* C,T2 a1);
void r535insert_code(T535* C,T2 a1,T2 a2);
T6 r535conforms_to(T535* C,T0* a1);
extern T6 oBC535optimize_access;
void r535storage_move(T535* C,T2 a1,T2 a2,T2 a3);
T0* r535twin(T535* C);
void r535find_position(T535* C,T2 a1);
T6 r498same_identifier(T498* C,T0* a1);
T6 r498is_equal(T498* C,T0* a1);
T6 r498se_assigned_from(T0* a1);
T6 r498same_type(T498* C,T0* a1);
void r498make(T498* C,T0* a1,T0* a2);
T6 r498same_feature_name(T498* C,T0* a1);
T6 r498conforms_to(T498* C,T0* a1);
T0* r498twin(T498* C);
T6 r234is_equal(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
void r234make(T234* C,T0* a1);
T6 r234conforms_to(T234* C,T0* a1);
void r234set_current_class(T234* C,T0* a1);
T0* r234twin(T234* C);
T6 r558is_equal(T558* C,T0* a1);
T6 r558se_assigned_from(T0* a1);
void r558make_from_implementation(T558* C,T0* a1);
void r558_183Pmake_from_implementation(T558* C,T0* a1);
T6 r558conforms_to(T558* C,T0* a1);
T0* r558twin(T558* C);
T6 r558cursor_off(T558* C,T0* a1);
void r128print_cluster(T128* C,T0* a1,T0* a2);
void r128print_esd_file(T128* C,T0* a1,T0* a2);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T0* r128clone(T0* a1);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T0* r128remove_all_characters(T0* a1,T3 a2);
void r128generate(T128* C,T0* a1);
T6 r128conforms_to(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
T0* r534create_representation(T534* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T6 r592is_equal(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
T0* r592Arguments(void);
void r592make(T592* C,T0* a1);
T0* r592message(T592* C,T0* a1);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
T0* r592default_message(T592* C);
T6 r502is_equal(T502* C,T0* a1);
T6 r502se_assigned_from(T0* a1);
void r502make(T502* C,T0* a1,T0* a2);
T6 r502conforms_to(T502* C,T0* a1);
T0* r502twin(T502* C);
T0* r188uc_optimize(void);
T0* r188uc_check(void);
T0* r188uc_external(void);
T0* r188uc_exclude(void);
T0* r188new_cluster(T188* C,T0* a1);
T0* r188new_exported_feature(T0* a1);
T6 r188is_equal(T188* C,T0* a1);
T0* r188new_export(T0* a1);
T0* r188uc_invariant(void);
T6 r188se_assigned_from(T0* a1);
T0* r188new_options(T0* a1);
T0* r188new_universe(T188* C,T0* a1);
T6 r188is_false(T0* a1);
T0* r188uc_mount(void);
T0* r188uc_debug(void);
T0* r188uc_option(void);
void r188make(T188* C,T0* a1,T0* a2);
T0* r188uc_root(void);
extern T0*oBC189Execution_environment;
T0* r188uc_feature(void);
T0* r188uc_class(void);
T0* r188uc_loop(void);
T6 r188conforms_to(T188* C,T0* a1);
extern T0*oBC176uc_abstract;
extern int fBC176uc_abstract;
T0* r188uc_abstract(void);
T0* r188new_externals(T0* a1);
extern T0*oBC176uc_alias;
extern int fBC176uc_alias;
T0* r188uc_alias(void);
T0* r188uc_cluster(void);
extern T0*oBC176uc_enable;
extern int fBC176uc_enable;
T0* r188uc_enable(void);
T0* r188uc_export(void);
T0* r188uc_link_library(void);
T6 r188is_true(T0* a1);
T0* r188uc_include_dir(void);
T0* r188uc_location(void);
T0* r188twin(T188* C);
T0* r188new_mount(T188* C,T0* a1);
T0* r188uc_creation(void);
T0* r188uc_require(void);
T0* r188uc_name(void);
T0* r188uc_ensure(void);
T6 r753is_equal(T753* C,T0* a1);
T6 r753se_assigned_from(T0* a1);
void r753make(T753* C,T0* a1,T0* a2);
T6 r753conforms_to(T753* C,T0* a1);
T0* r753twin(T753* C);
void r663copy(T663* C,T0* a1);
void r663make_clashes(T663* C,T2 a1);
void r663search_position(T663* C,T0* a1);
T6 r663is_equal(T663* C,T0* a1);
void r663remove_traversing_cursor(T663* C,T0* a1);
void r663clone_slots(T663* C);
T0* r663item(T663* C,T0* a1);
void r663clone_clashes(T663* C);
void r663move_all_cursors_after(T663* C);
void r663make_items(T663* C,T2 a1);
void r663add_traversing_cursor(T663* C,T0* a1);
T6 r663se_assigned_from(T0* a1);
T0* r663clone(T0* a1);
T6 r663same_type(T663* C,T0* a1);
void r663make(T663* C,T2 a1);
void r663clone_items(T663* C);
T6 r663conforms_to(T663* C,T0* a1);
T6 r663has(T663* C,T0* a1);
void r663make_keys(T663* C,T2 a1);
T2 r663hash_position(T663* C,T0* a1);
void r663clone_keys(T663* C);
void r663make_with_equality_testers(T663* C,T2 a1,T0* a2,T0* a3);
T6 r663cursor_same_position(T0* a1,T0* a2);
T0* r663twin(T663* C);
T0* r663new_cursor(T663* C);
void r663make_slots(T663* C,T2 a1);
T2 r663new_modulus(T2 a1);
T6 r663cursor_off(T0* a1);
T6 r589is_equal(T589* C,T0* a1);
T6 r589se_assigned_from(T0* a1);
T0* r589Arguments(void);
void r589make(T589* C,T0* a1,T0* a2);
T0* r589message(T589* C,T0* a1);
T6 r589conforms_to(T589* C,T0* a1);
T0* r589twin(T589* C);
T0* r589default_message(T589* C);
void r194copy(T194* C,T0* a1);
T0* r194substring(T194* C,T2 a1,T2 a2);
T2 r194occurrences(T194* C,T537 a1);
T2 r194count(T194* C);
T2 r194item_code(T194* C,T2 a1);
T6 r194is_equal(T194* C,T0* a1);
T537 r194item(T194* C,T2 a1);
extern T0*oBC194utf8utils;
void r194append_uc_string(T194* C,T0* a1);
T6 r194se_assigned_from(T0* a1);
void r194make_from_string(T194* C,T0* a1);
T2 r194index_of(T194* C,T537 a1,T2 a2);
void r194make(T194* C,T2 a1);
void r194append_string(T194* C,T0* a1);
T2 r194hash_code(T194* C);
T6 r194conforms_to(T194* C,T0* a1);
void r194append_ucc_code(T194* C,T2 a1);
T6 r194empty(T194* C);
T0* r194twin(T194* C);
T0* r194to_utf8(T194* C);
T2 r194three_way_comparison(T194* C,T0* a1);
extern T0*oBC194i_settings;
void r194make_from_utf8(T194* C,T0* a1);
T6 r752is_equal(T752* C,T0* a1);
T6 r752se_assigned_from(T0* a1);
void r752make_from_implementation(T752* C,T0* a1);
T6 r752conforms_to(T752* C,T0* a1);
T0* r752twin(T752* C);
void r755set_last_cell(T755* C,T0* a1);
void r755copy(T755* C,T0* a1);
void r755wipe_out(T755* C);
void r755remove_first(T755* C);
T0* r755cursor_item(T0* a1);
T6 r755cursor_is_last(T755* C,T0* a1);
void r755add_attributes(T755* C,T0* a1,T0* a2);
T6 r755is_equal(T755* C,T0* a1);
void r755remove_traversing_cursor(T755* C,T0* a1);
void r755make_root(T755* C,T0* a1,T0* a2);
void r755cursor_go_after(T755* C,T0* a1);
void r755move_all_cursors_after(T755* C);
void r755add_traversing_cursor(T755* C,T0* a1);
T6 r755se_assigned_from(T0* a1);
T6 r755cursor_before(T0* a1);
void r755make_child(T755* C,T0* a1,T0* a2,T0* a3);
T6 r755same_type(T755* C,T0* a1);
void r755remove_last(T755* C);
T6 r755cursor_after(T0* a1);
T6 r755conforms_to(T755* C,T0* a1);
void r755cursor_forth(T755* C,T0* a1);
void r755move_last_cursors_after(T755* C);
void r755cursor_start(T755* C,T0* a1);
T0* r755twin(T755* C);
void r755force_last(T755* C,T0* a1);
T0* r755new_cursor(T755* C);
T6 r755cursor_is_first(T755* C,T0* a1);
void r755remove_at_cursor(T755* C,T0* a1);
void r755put_last(T755* C,T0* a1);
void r755move_all_cursors(T755* C,T0* a1,T0* a2);
T6 r755cursor_off(T0* a1);
T0* r747out(T747* C);
T6 r747is_equal(T747* C,T0* a1);
T6 r747se_assigned_from(T0* a1);
T0* r747clone(T0* a1);
void r747out_in_tagged_out_memory(T747* C);
T6 r747conforms_to(T747* C,T0* a1);
T0* r747twin(T747* C);
void r720fill(T720* C);
void r720compact_left(T720* C);
T2 r720count(T720* C);
void r720set_position(T720* C,T2 a1,T2 a2,T2 a3);
T6 r720is_equal(T720* C,T0* a1);
T2 r720lower(void);
T6 r720se_assigned_from(T0* a1);
void r720make_from_string(T720* C,T0* a1);
T6 r720conforms_to(T720* C,T0* a1);
void r720make_from_buffer(T720* C,T0* a1);
void r720resize(T720* C);
void r720make_with_size(T720* C,T0* a1,T2 a2);
T0* r720twin(T720* C);
void r720set_file(T720* C,T0* a1);
void r720flush(T720* C);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
void r134make(T134* C);
void r134old_put_string(T0* a1);
T6 r134conforms_to(T134* C,T0* a1);
void r134put_line(T0* a1);
T0* r134twin(T134* C);
T0* r201full_name(T201* C,T3 a1);
void r201set_mounted_subclusters(T201* C,T0* a1);
T6 r201is_equal(T201* C,T0* a1);
void r201remove_cluster(T201* C,T0* a1);
void r201set_subclusters(T201* C,T0* a1);
T6 r201se_assigned_from(T0* a1);
void r201unmount_root(T201* C,T0* a1);
T0* r201full_pathname(T201* C);
void r201make(T201* C,T0* a1,T0* a2);
void r201mount(T201* C,T0* a1);
T6 r201conforms_to(T201* C,T0* a1);
void r201unmount(T201* C);
T0* r201twin(T201* C);
void r201merge_externals(T201* C,T0* a1);
void r201mount_root(T201* C,T0* a1);
T6 r156is_equal(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
void r156make(T156* C);
void r156old_put_string(T0* a1);
T6 r156conforms_to(T156* C,T0* a1);
void r156put_line(T0* a1);
T0* r156twin(T156* C);
T0* r725out(T725* C);
T6 r725is_equal(T725* C,T0* a1);
T6 r725se_assigned_from(T0* a1);
T0* r725clone(T0* a1);
void r725make(T725* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r725conforms_to(T725* C,T0* a1);
T0* r725twin(T725* C);
T6 r540is_equal(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
void r540make_from_implementation(T540* C,T0* a1);
T6 r540conforms_to(T540* C,T0* a1);
T0* r540twin(T540* C);
T6 r633is_equal(T633* C,T0* a1);
T6 r633se_assigned_from(T0* a1);
void r633make(T633* C,T0* a1,T0* a2);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
T0* r654next_open_composite(T0* a1);
void r654enable_position_table(T654* C);
T6 r654is_equal(T654* C,T0* a1);
void r654on_content(T654* C,T0* a1);
T6 r654se_assigned_from(T0* a1);
void r654on_processing_instruction(T654* C,T0* a1,T0* a2);
void r654on_start_tag(T654* C,T0* a1,T0* a2,T0* a3);
void r654make_from_implementation_event(T654* C,T0* a1);
void r654make_from_implementation(T654* C,T0* a1);
void r654handle_position(T654* C,T0* a1);
void r654on_comment(T654* C,T0* a1);
void r654parse_from_stream(T654* C,T0* a1);
void r654on_end_tag(T654* C,T0* a1,T0* a2);
T6 r654conforms_to(T654* C,T0* a1);
void r654_180Pparse_from_stream(T654* C,T0* a1);
void r654reset(T654* C);
T0* r654twin(T654* C);
T6 r179is_equal(T179* C,T0* a1);
T6 r179se_assigned_from(T0* a1);
void r179make_from_implementation(T179* C,T0* a1);
T6 r179is_correct(T179* C);
T6 r179conforms_to(T179* C,T0* a1);
T0* r179last_error_extended_description(T179* C);
T0* r179twin(T179* C);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
void r536make(T536* C);
void r536insert(T536* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r536insert_code(T536* C,T2 a1,T2 a2);
void r536move(T536* C,T2 a1,T2 a2,T2 a3);
T6 r536conforms_to(T536* C,T0* a1);
void r536storage_ensure_capacity(T536* C,T2 a1);
T0* r536twin(T536* C);
void r190_193Pmake_from_implementation(T190* C,T0* a1);
T6 r190is_equal(T190* C,T0* a1);
T6 r190has_attribute_by_name(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
T0* r190attribute_by_name(T190* C,T0* a1);
void r190make_from_implementation(T190* C,T0* a1);
T6 r190equal(T0* a1,T0* a2);
T6 r190conforms_to(T190* C,T0* a1);
void r190_183P_193Pmake_from_implementation(T190* C,T0* a1);
T0* r190twin(T190* C);
T6 r190has_element_by_name(T190* C,T0* a1);
T0* r190element_by_name(T190* C,T0* a1);
T6 r190cursor_off(T190* C,T0* a1);
void r716yy_do_action(T716* C,T2 a1);
extern T0*oBC717yytable_template;
extern int fBC717yytable_template;
T0* r716yytable_template(void);
T0* r716empty_ucstring(void);
void r716make_parser_skeleton(T716* C);
T2 r716yy_at_beginning_of_line(T716* C);
void r716fatal_error(T0* a1);
T0* r716yytype1(T0* a1);
T0* r716yytype2(T0* a1);
T0* r716yytype3(T0* a1);
T0* r716yytype4(T0* a1);
void r716handle_found_text(T716* C);
void r716parse(T716* C);
void r716set_input_buffer(T716* C,T0* a1);
T2 r716yy_translate(T716* C,T2 a1);
extern T0*oBC718yy_ec_template;
extern int fBC718yy_ec_template;
T0* r716yy_ec_template(void);
void r716yy_execute_action(T716* C,T2 a1);
extern T0*oBC717yytranslate_template;
extern int fBC717yytranslate_template;
T0* r716yytranslate_template(void);
void r716clear_stacks(T716* C);
extern T0*oBC718yy_def_template;
extern int fBC718yy_def_template;
T0* r716yy_def_template(void);
T3 r716text_item(T716* C,T2 a1);
void r716yy_load_input_buffer(T716* C);
extern T537 oBC717uc_collon;
extern int fBC717uc_collon;
T537 r716uc_collon(void);
extern T0*oBC717yyr1_template;
extern int fBC717yyr1_template;
T0* r716yyr1_template(void);
void r716make_with_buffer(T716* C,T0* a1);
T2 r716yy_null_trans_state(T716* C,T2 a1);
T0* r716position(T716* C);
extern T0*oBC718yy_accept_template;
extern int fBC718yy_accept_template;
T0* r716yy_accept_template(void);
void r716read_token(T716* C);
extern T0*oBC717yyr2_template;
extern int fBC717yyr2_template;
T0* r716yyr2_template(void);
T2 r716yy_previous_state(T716* C);
extern T0*oBC717yypgoto_template;
extern int fBC717yypgoto_template;
T0* r716yypgoto_template(void);
void r716yy_refill_input_buffer(T716* C);
T0* r716yy_fixed_array(T0* a1);
T6 r716conforms_to(T716* C,T0* a1);
extern T0*oBC718yy_meta_template;
extern int fBC718yy_meta_template;
T0* r716yy_meta_template(void);
extern T0*oBC718yy_base_template;
extern int fBC718yy_base_template;
T0* r716yy_base_template(void);
T0* r716twin(T716* C);
T0* r716clone(T0* a1);
T0* r716new_file_buffer(T0* a1);
void r716yy_initialize(T716* C);
void r716reset(T716* C);
T0* r716text(T716* C);
extern T0*oBC718yy_nxt_template;
extern int fBC718yy_nxt_template;
T0* r716yy_nxt_template(void);
void r716parse_from_stream(T716* C,T0* a1);
void r716yy_set_line_column(T716* C);
void r716yy_build_parser_tables(T716* C);
T0* r716split_name_and_prefix(T0* a1);
T6 r716is_equal(T716* C,T0* a1);
void r716report_error(T716* C,T0* a1);
extern T0*oBC717yydefact_template;
extern int fBC717yydefact_template;
T0* r716yydefact_template(void);
extern T0*oBC718yy_chk_template;
extern int fBC718yy_chk_template;
T0* r716yy_chk_template(void);
extern T0*oBC717yycheck_template;
extern int fBC717yycheck_template;
T0* r716yycheck_template(void);
void r716make(T716* C);
T0* r716yyfixed_array(T0* a1);
void r716yy_clear_all(T716* C);
extern T0*oBC717yydefgoto_template;
extern int fBC717yydefgoto_template;
T0* r716yydefgoto_template(void);
void r716yy_set_content(T716* C,T0* a1);
extern T0*oBC717yypact_template;
extern int fBC717yypact_template;
T0* r716yypact_template(void);
void r716set_start_condition(T716* C,T2 a1);
T6 r716se_assigned_from(T0* a1);
void r716yy_build_tables(T716* C);
T6 r65is_equal(T65* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r65command_arguments(void);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T0* r65argument(T2 a1);
T6 r651is_equal(T651* C,T0* a1);
T6 r651se_assigned_from(T0* a1);
void r651make(T651* C);
T6 r651conforms_to(T651* C,T0* a1);
T0* r651twin(T651* C);
void r31report_missing_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
void r31report_no_parser_available_error(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31report_missing_attribute_error(T31* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC33null_output_stream;
extern int fBC33null_output_stream;
T0* r31null_output_stream(void);
void r31report_cannot_write_file_error(T31* C,T0* a1);
void r31make(T31* C);
void r31report_cannot_read_file_error(T31* C,T0* a1);
void r31report_parser_error(T31* C,T0* a1);
T0* r31message(T0* a1);
void r31report_invalid_expression_error(T31* C,T0* a1,T0* a2);
void r31_32Preport_error(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31report_not_xace_file_error(T31* C,T0* a1);
void r31report_wrong_root_element_error(T31* C,T0* a1,T0* a2);
void r31report_unknown_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T0* r31twin(T31* C);
void r31report_error(T31* C,T0* a1);
T0* r197split_on_first(T0* a1,T3 a2);
T6 r197is_equal(T197* C,T0* a1);
void r197remove_cluster(T197* C,T0* a1);
T6 r197se_assigned_from(T0* a1);
T0* r197clone(T0* a1);
void r197make_empty(T197* C);
void r197make(T197* C,T0* a1);
void r197set_parent(T197* C,T0* a1);
T6 r197conforms_to(T197* C,T0* a1);
T0* r197twin(T197* C);
T0* r197split_string(T0* a1,T3 a2);
void r197merge_externals(T197* C,T0* a1);
extern T0*oBC133error;
extern int fBC133error;
T0* r133error(void);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
extern T0*oBC133input;
extern int fBC133input;
T0* r133input(void);
extern T0*oBC133output;
extern int fBC133output;
T0* r133output(void);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133twin(T133* C);
void r40raise(T40* C,T0* a1);
T6 r40is_equal(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
extern T0*oBC41developer_exception_name_memory;
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T6 r36_px_60(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r170is_equal(T170* C,T0* a1);
T6 r170se_assigned_from(T0* a1);
T6 r170conforms_to(T170* C,T0* a1);
T0* r170twin(T170* C);
T6 r566is_equal(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T6 r566conforms_to(T566* C,T0* a1);
T3 r566to_character(T2 a1);
T0* r566twin(T566* C);
extern T0*oBC532factory;
extern int fBC532factory;
T0* r532factory(void);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532twin(T532* C);
T6 r35is_equal(T35* C,T0* a1);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T6 r696is_equal(T696* C,T0* a1);
T6 r696se_assigned_from(T0* a1);
T6 r696conforms_to(T696* C,T0* a1);
T0* r696twin(T696* C);
T0* r177name(T0* a1);
T6 r177is_equal(T177* C,T0* a1);
T0* r177make_file_open_read(T0* a1);
T6 r177se_assigned_from(T0* a1);
T6 r177is_open_read(T0* a1);
void r177close(T0* a1);
T6 r177conforms_to(T177* C,T0* a1);
T6 r177end_of_input(T0* a1);
T2 r177read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r177twin(T177* C);
void r16process_system_file(T16* C,T0* a1);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_output(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
void r16process_build(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r97is_equal(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
T6 r97is_integer(T0* a1);
T6 r97same_case_insensitive(T0* a1,T0* a2);
T0* r97make(T2 a1);
T6 r97conforms_to(T97* C,T0* a1);
T2 r97case_insensitive_hash_code(T0* a1);
T0* r97twin(T97* C);
T6 r537_px_60(T537* C,T537 a1);
T6 r537_px_62(T537* C,T537 a1);
T6 r593is_equal(T593* C,T0* a1);
T0* r593variable_value(T0* a1);
T6 r593se_assigned_from(T0* a1);
T0* r593get_environment_variable(T0* a1);
T6 r593conforms_to(T593* C,T0* a1);
T0* r593interpreted_string(T0* a1);
T0* r593twin(T593* C);
T2 r562nr_of_following_octets(T3 a1);
T6 r562is_equal(T562* C,T0* a1);
T6 r562se_assigned_from(T0* a1);
void r562read_code(T562* C,T0* a1,T2 a2);
void r562put_code(T2 a1,T0* a2,T2 a3);
void r562read_following_octet(T562* C,T0* a1);
T6 r562conforms_to(T562* C,T0* a1);
T3 r562code_to_character(T2 a1);
T2 r562octet_size(T2 a1);
T0* r562twin(T562* C);
extern T0*oBC562specific;
T6 r562is_leading_octet(T3 a1);
T2 r562read_leading_octet(T562* C,T0* a1,T2 a2);
T6 r694is_equal(T694* C,T0* a1);
T6 r694se_assigned_from(T0* a1);
T0* r694new_event_parser_imp(void);
T6 r694conforms_to(T694* C,T0* a1);
T0* r694twin(T694* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75_px_60(T75* C,T0* a1);
T0* r75twin(T75* C);
T0* r493substring(T0* a1,T2 a2,T2 a3);
T6 r493is_equal(T493* C,T0* a1);
T6 r493se_assigned_from(T0* a1);
void r493move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r493make(T2 a1);
void r493copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r493conforms_to(T493* C,T0* a1);
T0* r493resize(T0* a1,T2 a2);
T2 r493copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r493twin(T493* C);
T6 r764is_equal(T764* C,T0* a1);
T537 r764item(T764* C);
T6 r764se_assigned_from(T0* a1);
T6 r764conforms_to(T764* C,T0* a1);
T0* r764twin(T764* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 765
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms173_12184;
extern T7*ms103_211;
extern T7*ms103_322;
extern T7*ms103_298;
extern T7*ms103_1300398076;
extern T7*ms479_0;
extern T7*ms717_38;
extern T7*ms16_16036;
extern T7*ms717_60;
extern T7*ms717_62;
extern T7*ms103_1644;
extern T7*ms129_326648287;
extern T7*ms176_10208843;
extern T7*ms129_49483191;
extern T7*ms103_3175;
extern T7*ms130_168231777;
extern T7*ms128_1365895512;
extern T7*ms726_899222;
extern T7*ms129_2120668389;
extern T7*ms128_1253824715;
extern T7*ms176_10559665;
extern T7*ms127_452889;
extern T7*ms129_1254606809a;
extern T7*ms477_195717202;
extern T7*ms130_1147;
extern T7*ms127_2116863196;
extern T7*ms130_145423907a;
extern T7*ms129_408086;
extern T7*ms134_10;
extern T7*ms176_9558536;
extern T7*ms176_1988096;
extern T7*ms16_403021;
extern T7*ms16_676;
extern T7*ms16_691;
extern T7*ms130_232a;
extern T7*ms103_659330894;
extern T7*ms103_93956277;
extern T7*ms127_1644;
extern T7*ms130_2058319081;
extern T7*ms127_214a;
extern T7*ms188_79251;
extern T7*ms127_229a;
extern T7*ms129_1644;
extern T7*ms127_1849679439;
extern T7*ms128_2029061136;
extern T7*ms127_3175;
extern T7*ms129_214a;
extern T7*ms103_431271;
extern T7*ms717_38a;
extern T7*ms129_229a;
extern T7*ms16_3301a;
extern T7*ms130_1840815548;
extern T7*ms16_16036a;
extern T7*ms717_60a;
extern T7*ms103_15934;
extern T7*ms717_62a;
extern T7*ms129_3175;
extern T7*ms130_144147230;
extern T7*ms128_1090800287;
extern T7*ms128_9909665;
extern T7*ms103_17696;
extern T7*ms127_659330894;
extern T7*ms130_232;
extern T7*ms103_696515478;
extern T7*ms127_2087910503;
extern T7*ms130_1943945795;
extern T7*ms129_1300398076;
extern T7*ms176_399591;
extern T7*ms176_452889;
extern T7*ms127_1978068077;
extern T7*ms587_1179444653;
extern T7*ms176_1975394;
extern T7*ms130_339006862;
extern T7*ms103_10049231;
extern T7*ms130_2057213670;
extern T7*ms156_447584;
extern T7*ms592_988446515;
extern T7*ms721_89510;
extern T7*ms16_881365921a;
extern T7*ms128_17696;
extern T7*ms103_710556862;
extern T7*ms128_48758637;
extern T7*ms127_10208843;
extern T7*ms176_451090;
extern T7*ms481_1539961075;
extern T7*ms128_1159034081;
extern T7*ms176_77350;
extern T7*ms176_78002;
extern T7*ms176_1289562514;
extern T7*ms155_10;
extern T7*ms588_454072470;
extern T7*ms176_78263;
extern T7*ms130_1147aa;
extern T7*ms16_0;
extern T7*ms156_10;
extern T7*ms176_78490;
extern T7*ms130_716962150;
extern T7*ms18_0;
extern T7*ms127_1957581a;
extern T7*ms128_1566359773;
extern T7*ms130_728778652;
extern T7*ms130_11272528;
extern T7*ms130_2074569081;
extern T7*ms130_902203551;
extern T7*ms129_10208843;
extern T7*ms176_1228681540;
extern T7*ms127_710556862;
extern T7*ms128_452889;
extern T7*ms127_169452;
extern T7*ms16_2246326;
extern T7*ms129_1975394;
extern T7*ms176_85591;
extern T7*ms565_125;
extern T7*ms565_303;
extern T7*ms127_1975394;
extern T7*ms130_6860887;
extern T7*ms127_200;
extern T7*ms726_35397;
extern T7*ms127_214;
extern T7*ms19_270;
extern T7*ms127_229;
extern T7*ms129_1957581a;
extern T7*ms128_1420513890;
extern T7*ms590_229;
extern T7*ms176_434665;
extern T7*ms726_36572;
extern T7*ms103_1885954800;
extern T7*ms128_945472392;
extern T7*ms129_1254606809;
extern T7*ms130_688131499;
extern T7*ms16_881365921aa;
extern T7*ms565_36;
extern T7*ms128_1173002866;
extern T7*ms128_251473637;
extern T7*ms128_50294715;
extern T7*ms130_2058319081a;
extern T7*ms129_2122613;
extern T7*ms130_214679746;
extern T7*ms103_1975394;
extern T7*ms711_1606053737;
extern T7*ms127_2122613;
extern T7*ms129_10031271;
extern T7*ms103_2087910503;
extern T7*ms127_2071896;
extern T7*ms100_1515383187;
extern T7*ms129_659330894;
extern T7*ms188_18036;
extern T7*ms130_29282762;
extern T7*ms127_408086;
extern T7*ms127_1254606809a;
extern T7*ms16_391651;
extern T7*ms129_2259966;
extern T7*ms128_194;
extern T7*ms130_1147aaa;
extern T7*ms127_2259966;
extern T7*ms16_438001;
extern T7*ms128_273179090;
extern T7*ms128_440825;
extern T7*ms180_40;
extern T7*ms180_41;
extern T7*ms130_759686277;
extern T7*ms130_1284536290;
extern T7*ms127_2120668389;
extern T7*ms589_820451542;
extern T7*ms129_1957581;
extern T7*ms130_1147a;
extern T7*ms128_434665;
extern T7*ms103_2087913448;
extern T7*ms103_1849679439;
extern T7*ms698_512683247;
extern T7*ms127_1957581;
extern T7*ms176_9909665;
extern T7*ms130_1147aaaa;
extern T7*ms129_1433293834;
extern T7*ms130_1694763045;
extern T7*ms130_2036724355;
extern T7*ms128_1555371030;
extern T7*ms482_1338477769a;
extern T7*ms562_1684857857;
extern T7*ms130_17715339;
extern T7*ms130_848471798;
extern T7*ms129_214;
extern T7*ms129_229;
extern T7*ms16_3301;
extern T7*ms130_1592316470;
extern T7*ms16_11153106;
extern T7*ms16_3653;
extern T7*ms103_1957581;
extern T7*ms176_10866961;
extern T7*ms128_3175;
extern T7*ms129_1849679439;
extern T7*ms29_1415324896;
extern T7*ms176_408086;
extern T7*ms129_710556862;
extern T7*ms173_0;
extern T7*ms16_881365921aaa;
extern T7*ms129_452889;
extern T7*ms562_336971577;
extern T7*ms176_2185421;
extern T7*ms134_447851;
extern T7*ms16_79140;
extern T7*ms177_0;
extern T7*ms127_1300398076;
extern T7*ms130_68075515;
extern T7*ms130_1580634761;
extern T7*ms16_676a;
extern T7*ms16_691a;
extern T7*ms584_54177410;
extern T7*ms176_16821;
extern T7*ms128_1254555893;
extern T7*ms176_16942;
extern T7*ms176_51843716;
extern T7*ms130_1746542221;
extern T7*ms129_2087910503;
extern T7*ms130_232aa;
extern T7*ms176_17696;
extern T7*ms173_1384826;
extern T7*ms176_2024949725;
extern T7*ms127_1644a;
extern T7*ms128_171550;
extern T7*ms130_1122793821;
extern T7*ms127_17696;
extern T7*ms103_1254606809;
extern T7*ms700_10;
extern T7*ms130_711181240;
extern T7*ms16_1367322663;
extern T7*ms129_1978068077;
extern T7*ms130_1147aaaaa;
extern T7*ms176_2032026;
extern T7*ms130_33314532;
extern T7*ms176_402346;
extern T7*ms103_1205954912;
extern T7*ms173_2104;
extern T7*ms128_608082268;
extern T7*ms129_15934;
extern T7*ms129_1644a;
extern T7*ms130_1250879089;
extern T7*ms591_1214914019;
extern T7*ms33_17323;
extern T7*ms129_17696;
extern T7*ms18_0a;
extern T7*ms127_3175a;
extern T7*ms103_1288001260;
extern T7*ms176_627;
extern T7*ms16_881365921;
extern T7*ms128_9751715;
extern T7*ms127_3175aa;
extern T7*ms650_462378139;
extern T7*ms130_90563609;
extern T7*ms103_1837939351;
extern T7*ms103_1940534;
extern T7*ms103_1366344811;
extern T7*ms177_1338085634;
extern T7*ms103_10208843;
extern T7*ms128_1975394;
extern T7*ms103_452889;
extern T7*ms726_5467;
extern T7*ms130_1637983727;
extern T7*ms130_151663112;
extern T7*ms482_1338477769;
extern T7*ms718_1173251759;
extern T7*ms129_3175a;
extern T7*ms130_1131165100;
extern T7*ms130_29373882;
extern T7*ms103_1957581a;
extern T7*ms103_9702826;
extern T7*ms127_1254606809;
extern T7*ms128_2002089708;
extern T7*ms130_848471798a;
extern T7*ms130_1366569951;
extern T7*ms103_9702034;
extern T7*ms130_145423907;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma486(int argc,...);
T0* X693new_event_parser_imp(T0*C);
void X29execute(T0*C);
T0* X143item(T0*C);
T6 X143after(T0*C);
void X143forth(T0*C);
void X143start(T0*C);
T2 X144count(T0*C);
T0* X144cursor_item(T0*C,T0* a1);
T6 X144is_empty(T0*C);
T6 X144cursor_after(T0*C,T0* a1);
void X144cursor_forth(T0*C,T0* a1);
void X144cursor_start(T0*C,T0* a1);
T0* X144new_cursor(T0*C);
T0* X526cursor_item(T0*C,T0* a1);
void X526cursor_go_after(T0*C,T0* a1);
T6 X526cursor_after(T0*C,T0* a1);
void X526cursor_forth(T0*C,T0* a1);
void X526cursor_start(T0*C,T0* a1);
T6 X526cursor_off(T0*C,T0* a1);
T537 X538item(T0*C);
T0* X527parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X192parent(T0*C);
T6 X263test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X488clear_all(T0*C,T0* a1);
T0* X488make(T0*C,T2 a1);
T0* X488resize(T0*C,T0* a1,T2 a2);
void X94put_new_line(T0*C);
void X94put_line(T0*C,T0* a1);
void X94put_character(T0*C,T3 a1);
void X94put_string(T0*C,T0* a1);
void X193force_last(T0*C,T0* a1);
T0* X193new_cursor(T0*C);
void X193remove_at_cursor(T0*C,T0* a1);
T0* X193parent(T0*C);
void X260put(T0*C,T0* a1,T2 a2);
T0* X260item(T0*C,T2 a1);
void X260set_all_with(T0*C,T0* a1);
void X260resize(T0*C,T2 a1);
void X492fill(T0*C);
T0* X529new_cursor(T0*C);
void X529remove_at_cursor(T0*C,T0* a1);
void X529put_last(T0*C,T0* a1);
T0* X529parent(T0*C);
void X41raise(T0*C,T0* a1);
T2 X484count(T0*C);
T2 X484item(T0*C,T2 a1);
T2 X484lower(T0*C);
T0* X284make(T0*C,T2 a1);
T0* X284resize(T0*C,T0* a1,T2 a2);
void X175parse_file(T0*C,T0* a1);
void X487put(T0*C,T0* a1,T2 a2);
T0* X487item(T0*C,T2 a1);
void X487set_all_with(T0*C,T0* a1);
void X487resize(T0*C,T2 a1);
T6 X686cursor_is_last(T0*C,T0* a1);
void X686remove_traversing_cursor(T0*C,T0* a1);
void X686cursor_go_after(T0*C,T0* a1);
void X686add_traversing_cursor(T0*C,T0* a1);
void X686cursor_forth(T0*C,T0* a1);
void X686cursor_start(T0*C,T0* a1);
T6 X686cursor_is_first(T0*C,T0* a1);
T2 X531item_code(T0*C,T2 a1);
void X531insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X531insert_code(T0*C,T2 a1,T2 a2);
T6 X171is_connected(T0*C);
void X171read_character(T0*C);
T6 X171end_of_input(T0*C);
T3 X171last_character(T0*C);
T0* X91default_message(T0*C);
void X78generate(T0*C,T0* a1);
T6 T35toT6(T0* source);
T0* T697toT696(int source);
T0* T695toT694(int source);
T0* T2toT36(T2 source);
T2 T36toT2(T0* source);
T0* T6toT35(T6 source);

#ifdef __cplusplus
}
#endif
