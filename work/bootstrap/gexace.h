#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #1 (August 17th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S277 T277;
typedef struct S699 T699;
typedef struct S718 T718;
typedef struct S481 T481;
typedef struct S453 T453;
typedef struct S555 T555;
typedef struct S444 T444;
typedef struct S562 T562;
typedef struct S663 T663;
typedef struct S87 T87;
typedef struct S150 T150;
typedef struct S569 T569;
typedef struct S226 T226;
typedef struct S535 T535;
typedef struct S544 T544;
typedef struct S565 T565;
typedef struct S633 T633;
typedef struct S387 T387;
typedef struct S616 T616;
typedef struct S534 T534;
typedef struct S233 T233;
typedef struct S168 T168;
typedef struct S603 T603;
typedef struct S359 T359;
typedef struct S197 T197;
typedef struct S214 T214;
typedef int T610;
typedef struct S202 T202;
typedef struct S129 T129;
typedef struct S470 T470;
typedef struct S201 T201;
typedef struct S212 T212;
typedef struct S206 T206;
typedef struct S486 T486;
typedef struct S643 T643;
typedef struct S650 T650;
typedef struct S41 T41;
typedef struct S646 T646;
typedef struct S474 T474;
typedef struct S319 T319;
typedef struct S42 T42;
typedef struct S541 T541;
typedef struct S254 T254;
typedef struct S372 T372;
typedef struct S543 T543;
typedef struct S107 T107;
typedef struct S280 T280;
typedef struct S169 T169;
typedef struct S125 T125;
typedef struct S688 T688;
typedef struct S160 T160;
typedef struct S680 T680;
typedef struct S612 T612;
typedef struct S37 T37;
typedef struct S480 T480;
typedef struct S388 T388;
typedef struct S431 T431;
typedef struct S315 T315;
typedef struct S137 T137;
typedef struct S702 T702;
typedef struct S439 T439;
typedef struct S631 T631;
typedef struct S611 T611;
typedef struct S660 T660;
typedef struct S172 T172;
typedef struct S716 T716;
typedef struct S564 T564;
typedef struct S553 T553;
typedef struct S31 T31;
typedef struct S208 T208;
typedef struct S344 T344;
typedef struct S507 T507;
typedef struct S403 T403;
typedef struct S649 T649;
typedef struct S205 T205;
typedef struct S113 T113;
typedef struct S417 T417;
typedef struct S584 T584;
typedef struct S537 T537;
typedef struct S282 T282;
typedef struct S517 T517;
typedef struct S209 T209;
typedef struct S509 T509;
typedef struct S715 T715;
typedef struct S575 T575;
typedef struct S90 T90;
typedef struct S198 T198;
typedef struct S128 T128;
typedef struct S707 T707;
typedef struct S79 T79;
typedef struct S689 T689;
typedef struct S299 T299;
typedef struct S75 T75;
typedef struct S89 T89;
typedef struct S229 T229;
typedef struct S709 T709;
typedef struct S203 T203;
typedef struct S539 T539;
typedef struct S592 T592;
typedef struct S671 T671;
typedef struct S36 T36;
typedef struct S412 T412;
typedef struct S373 T373;
typedef struct S484 T484;
typedef struct S301 T301;
typedef struct S491 T491;
typedef struct S413 T413;
typedef struct S148 T148;
typedef struct S71 T71;
typedef struct S64 T64;
typedef struct S456 T456;
typedef struct S620 T620;
typedef struct S7 T7;
typedef struct S237 T237;
typedef struct S163 T163;
typedef struct S181 T181;
typedef struct S363 T363;
typedef struct S426 T426;
typedef struct S494 T494;
typedef struct S115 T115;
typedef struct S295 T295;
typedef struct S318 T318;
typedef struct S559 T559;
typedef struct S609 T609;
typedef struct S665 T665;
typedef struct S540 T540;
typedef struct S326 T326;
typedef struct S171 T171;
typedef struct S250 T250;
typedef struct S674 T674;
typedef struct S264 T264;
typedef struct S666 T666;
typedef struct S430 T430;
typedef struct S478 T478;
typedef struct S596 T596;
typedef struct S170 T170;
typedef struct S437 T437;
typedef struct S273 T273;
typedef struct S17 T17;
typedef struct S512 T512;
typedef struct S503 T503;
typedef struct S232 T232;
typedef struct S182 T182;
typedef struct S114 T114;
typedef struct S687 T687;
typedef struct S86 T86;
typedef struct S672 T672;
typedef struct S511 T511;
typedef struct S196 T196;
typedef struct S499 T499;
typedef struct S566 T566;
typedef struct S488 T488;
typedef struct S199 T199;
typedef struct S362 T362;
typedef struct S711 T711;
typedef struct S165 T165;
typedef struct S236 T236;
typedef struct S578 T578;
typedef struct S563 T563;
typedef struct S103 T103;
typedef struct S440 T440;
typedef struct S516 T516;
typedef struct S100 T100;
typedef struct S567 T567;
typedef struct S710 T710;
typedef struct S536 T536;
typedef struct S713 T713;
typedef struct S705 T705;
typedef struct S138 T138;
typedef struct S684 T684;
typedef struct S130 T130;
typedef struct S607 T607;
typedef struct S153 T153;
typedef struct S685 T685;
typedef struct S519 T519;
typedef struct S648 T648;
typedef struct S109 T109;
typedef struct S84 T84;
typedef struct S473 T473;
typedef struct S595 T595;
typedef struct S571 T571;
typedef struct S173 T173;
typedef struct S513 T513;
typedef struct S185 T185;
typedef struct S74 T74;
typedef struct S634 T634;
typedef struct S676 T676;
typedef struct S78 T78;
typedef struct S112 T112;
typedef struct S258 T258;
typedef struct S383 T383;
typedef struct S479 T479;
typedef struct S283 T283;
typedef struct S722 T722;
typedef struct S496 T496;
typedef int T608;
typedef struct S261 T261;
typedef struct S410 T410;
typedef struct S248 T248;
typedef struct S532 T532;
typedef struct S529 T529;
typedef struct S65 T65;
typedef struct S391 T391;
typedef struct S568 T568;
typedef struct S32 T32;
typedef struct S400 T400;
typedef struct S60 T60;
typedef struct S346 T346;

/*C Header Pass 2 :*/
typedef T0**T443;
typedef T0**T321;
typedef T6*T618;
typedef T0**T260;
typedef T0**T211;
typedef T0**T416;
typedef T0**T216;
typedef T0**T498;
typedef T0**T73;
typedef T3*T9;
typedef T0**T599;
typedef T0**T279;
typedef T0**T390;
typedef T0**T365;
typedef T0**T256;
typedef T2*T105;
typedef T0**T477;

/*C Header Pass 3 :*/
extern T610 M610;
struct S516{T2 _i_code;};
int se_cmpT516(T516 o1,T516 o2);
extern T608 M608;

/*C Header Pass 4 :*/
struct S277{Tid id;T279 _storage;T2 _capacity;T2 _upper;};
extern T277 M277;
struct S699{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T699 M699;
struct S718{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T718 M718;
struct S481{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T481 M481;
struct S453{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T453 M453;
struct S555{Tid id;T0* _item;T0* _right;};
extern T555 M555;
struct S444{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T444 M444;
struct S562{Tid id;T0* _parameters;};
extern T562 M562;
struct S663{Tid id;T0* _parameters;};
extern T663 M663;
struct S87{Tid id;T0* _item;T0* _right;};
extern T87 M87;
struct S150{Tid id;T0* _item;T0* _right;};
extern T150 M150;
struct S569{Tid id;T0* _event_parser_factory;};
extern T569 M569;
struct S226{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T226 M226;
struct S535{Tid id;T0* _variables;};
extern T535 M535;
struct S544{Tid id;T0* _first;T0* _second;};
extern T544 M544;
struct S565{Tid id;T0* _parameters;};
extern T565 M565;
struct S633{Tid id;T0* _class_name;T0* _features;};
extern T633 M633;
struct S387{Tid id;T390 _storage;T2 _capacity;T2 _upper;};
extern T387 M387;
struct S616{Tid id;T618 _storage;T2 _capacity;T2 _upper;};
extern T616 M616;
struct S534{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T534 M534;
struct S168{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T168 M168;
struct S603{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T603 M603;
struct S359{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T359 M359;
struct S197{Tid id;T0* _clusters;};
extern T197 M197;
struct S214{Tid id;T216 _storage;T2 _capacity;T2 _upper;};
extern T214 M214;
struct S202{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T202 M202;
struct S129{Tid id;};
extern T129 M129;
struct S233{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T233 M233;
struct S470{Tid id;T105 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T470 M470;
struct S201{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T201 M201;
struct S212{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T212 M212;
struct S206{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T206 M206;
struct S486{Tid id;T0* _parents;};
extern T486 M486;
struct S643{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T643 M643;
struct S650{Tid id;T0* _item;T0* _right;};
extern T650 M650;
struct S41{Tid id;};
extern T41 M41;
struct S646{Tid id;T0* _item;T0* _right;};
extern T646 M646;
struct S474{Tid id;};
extern T474 M474;
struct S319{Tid id;};
extern T319 M319;
struct S42{Tid id;};
extern T42 M42;
struct S541{Tid id;T0* _table;};
extern T541 M541;
struct S254{Tid id;T256 _storage;T2 _capacity;T2 _upper;};
extern T254 M254;
struct S372{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T372 M372;
struct S543{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T543 M543;
struct S107{Tid id;};
extern T107 M107;
struct S280{Tid id;};
extern T280 M280;
struct S169{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T169 M169;
struct S125{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T125 M125;
struct S688{Tid id;T0* _first;T0* _second;};
extern T688 M688;
struct S160{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T160 M160;
struct S680{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T680 M680;
struct S612{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T612 M612;
struct S37{Tid id;T2 _item;};
extern T37 M37;
struct S480{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T480 M480;
struct S388{Tid id;};
extern T388 M388;
struct S431{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T431 M431;
struct S315{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T315 M315;
struct S137{Tid id;T0* _first;T0* _second;};
extern T137 M137;
struct S702{Tid id;T0* _item;T0* _right;};
extern T702 M702;
struct S439{Tid id;T443 _storage;T2 _capacity;T2 _upper;};
extern T439 M439;
struct S631{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T631 M631;
struct S611{Tid id;T3 _value;};
extern T611 M611;
struct S660{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T660 M660;
struct S172{Tid id;T8 _item;};
extern T172 M172;
struct S716{Tid id;T0* _parent;T0* _data;};
extern T716 M716;
struct S564{Tid id;T0* _parameters;};
extern T564 M564;
struct S553{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T553 M553;
struct S31{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T31 M31;
struct S208{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T208 M208;
struct S344{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T344 M344;
struct S507{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T507 M507;
struct S403{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T403 M403;
struct S649{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T649 M649;
struct S205{Tid id;};
extern T205 M205;
struct S113{Tid id;T0* _error_handler;};
extern T113 M113;
struct S417{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T417 M417;
struct S584{Tid id;};
extern T584 M584;
struct S537{Tid id;};
extern T537 M537;
struct S282{Tid id;};
extern T282 M282;
struct S517{Tid id;T2 _i_code;};
extern T517 M517;
struct S209{Tid id;T211 _storage;T2 _capacity;T2 _upper;};
extern T209 M209;
struct S509{Tid id;};
extern T509 M509;
struct S715{Tid id;T0* _implementation;};
extern T715 M715;
struct S575{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T575 M575;
struct S90{Tid id;T0* _defined_values;};
extern T90 M90;
struct S128{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;};
extern T128 M128;
struct S707{Tid id;T0* _parent;T0* _content;};
extern T707 M707;
struct S79{Tid id;T0* _parameters;};
extern T79 M79;
struct S689{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T689 M689;
struct S299{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T299 M299;
struct S75{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T75 M75;
struct S89{Tid id;T0* _error_handler;};
extern T89 M89;
struct S229{Tid id;};
extern T229 M229;
struct S709{Tid id;T0* _implementation;};
extern T709 M709;
struct S539{Tid id;T0* _item;};
extern T539 M539;
struct S592{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T592 M592;
struct S671{Tid id;T0* _parameters;};
extern T671 M671;
struct S36{Tid id;T6 _item;};
extern T36 M36;
struct S412{Tid id;T416 _storage;T2 _capacity;T2 _upper;};
extern T412 M412;
struct S373{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T373 M373;
struct S301{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T301 M301;
struct S491{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T491 M491;
struct S413{Tid id;};
extern T413 M413;
struct S148{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T148 M148;
struct S71{Tid id;T73 _storage;T2 _capacity;T2 _upper;};
extern T71 M71;
struct S198{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T198 M198;
struct S64{Tid id;T0* _item;T0* _right;};
extern T64 M64;
struct S456{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T456 M456;
struct S620{Tid id;};
extern T620 M620;
struct S237{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T237 M237;
struct S163{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T163 M163;
struct S181{Tid id;T0* _error_handler;T6 _has_error;};
extern T181 M181;
struct S363{Tid id;};
extern T363 M363;
struct S426{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T426 M426;
struct S494{Tid id;};
extern T494 M494;
struct S115{Tid id;T0* _error_handler;};
extern T115 M115;
struct S295{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T295 M295;
struct S318{Tid id;T321 _storage;T2 _capacity;T2 _upper;};
extern T318 M318;
struct S559{Tid id;T0* _parameters;};
extern T559 M559;
struct S609{Tid id;};
extern T609 M609;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S665{Tid id;T0* _parameters;};
extern T665 M665;
struct S540{Tid id;};
extern T540 M540;
struct S326{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T326 M326;
struct S171{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T171 M171;
struct S250{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T250 M250;
struct S674{Tid id;T0* _item;T0* _right;};
extern T674 M674;
struct S264{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T264 M264;
struct S666{Tid id;T0* _path;T8 _output_stream;T0* _name;};
extern T666 M666;
struct S430{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T430 M430;
struct S478{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T478 M478;
struct S596{Tid id;};
extern T596 M596;
struct S170{Tid id;};
extern T170 M170;
struct S437{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T437 M437;
struct S273{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T273 M273;
struct S17{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T17 M17;
struct S512{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T512 M512;
struct S484{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T484 M484;
struct S503{Tid id;};
extern T503 M503;
struct S232{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T232 M232;
struct S182{Tid id;T0* _namespaces;T0* _implementation;};
extern T182 M182;
struct S114{Tid id;T0* _error_handler;};
extern T114 M114;
struct S687{Tid id;T0* _first;T0* _second;};
extern T687 M687;
struct S86{Tid id;};
extern T86 M86;
struct S672{Tid id;T0* _item;T0* _right;};
extern T672 M672;
struct S511{Tid id;T2 _type;};
extern T511 M511;
struct S499{Tid id;};
extern T499 M499;
struct S566{Tid id;T0* _parameters;};
extern T566 M566;
struct S488{Tid id;T0* _class_name;T0* _base_class;};
extern T488 M488;
struct S199{Tid id;T0* _clusters;};
extern T199 M199;
struct S362{Tid id;T365 _storage;T2 _capacity;T2 _upper;};
extern T362 M362;
struct S711{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T711 M711;
struct S165{Tid id;T0* _variables;T0* _error_handler;};
extern T165 M165;
struct S236{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T236 M236;
struct S578{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T578 M578;
struct S563{Tid id;T0* _parameters;};
extern T563 M563;
struct S103{Tid id;T105 _storage;T2 _capacity;T2 _upper;};
extern T103 M103;
struct S196{Tid id;T0* _i_representation;};
extern T196 M196;
struct S440{Tid id;};
extern T440 M440;
extern T516 M516;
struct S100{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T100 M100;
struct S567{Tid id;};
extern T567 M567;
struct S710{Tid id;T0* _implementation;};
extern T710 M710;
struct S536{Tid id;T2 _last_code;T2 _next_pos;};
extern T536 M536;
struct S713{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T713 M713;
struct S705{Tid id;T0* _uri;};
extern T705 M705;
struct S138{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T138 M138;
struct S684{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T684 M684;
struct S130{Tid id;T0* _name;};
extern T130 M130;
struct S203{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T203 M203;
struct S607{Tid id;};
extern T607 M607;
struct S153{Tid id;T0* _name;};
extern T153 M153;
struct S685{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T685 M685;
struct S519{Tid id;T0* _implementation;};
extern T519 M519;
struct S648{Tid id;T0* _feature_name;T0* _external_name;};
extern T648 M648;
struct S109{Tid id;};
extern T109 M109;
struct S84{Tid id;T73 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T84 M84;
struct S473{Tid id;T477 _storage;T2 _capacity;T2 _upper;};
extern T473 M473;
struct S595{Tid id;T599 _storage;T2 _capacity;T2 _upper;};
extern T595 M595;
struct S571{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T571 M571;
struct S173{Tid id;T0* _implementation;};
extern T173 M173;
struct S513{Tid id;T2 _count;T0* _storage;};
extern T513 M513;
struct S185{Tid id;T0* _namespaces;T0* _implementation;};
extern T185 M185;
struct S74{Tid id;T3 _item;};
extern T74 M74;
struct S634{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T634 M634;
struct S676{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T676 M676;
struct S78{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T78 M78;
struct S112{Tid id;};
extern T112 M112;
struct S258{Tid id;T260 _storage;T2 _capacity;T2 _upper;};
extern T258 M258;
struct S383{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T383 M383;
struct S479{Tid id;};
extern T479 M479;
struct S283{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T283 M283;
struct S722{Tid id;T2 _i_code;};
extern T722 M722;
struct S496{Tid id;T498 _storage;T2 _capacity;T2 _upper;};
extern T496 M496;
struct S261{Tid id;};
extern T261 M261;
struct S410{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T410 M410;
struct S248{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T248 M248;
struct S532{Tid id;};
extern T532 M532;
struct S529{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T529 M529;
struct S65{Tid id;T0* _program_name;};
extern T65 M65;
struct S391{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T391 M391;
struct S568{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T568 M568;
struct S32{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T32 M32;
struct S400{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T400 M400;
struct S60{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T60 M60;
struct S346{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T346 M346;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r443clear_all(T443 C,T2 a1);
T443 r443realloc(T443 C,T2 a1,T2 a2);
void r443set_all_with(T443 C,T0* a1,T2 a2);
T6 r443fast_memcmp(T443 C,T443 a1,T2 a2);
void r443clear(T443 C,T2 a1,T2 a2);
void r443copy_from(T443 C,T443 a1,T2 a2);
void r321clear_all(T321 C,T2 a1);
T321 r321realloc(T321 C,T2 a1,T2 a2);
void r321set_all_with(T321 C,T0* a1,T2 a2);
T6 r321fast_memcmp(T321 C,T321 a1,T2 a2);
void r321clear(T321 C,T2 a1,T2 a2);
void r321copy_from(T321 C,T321 a1,T2 a2);
void r618clear_all(T618 C,T2 a1);
T618 r618realloc(T618 C,T2 a1,T2 a2);
void r618set_all_with(T618 C,T6 a1,T2 a2);
T6 r618fast_memcmp(T618 C,T618 a1,T2 a2);
void r618clear(T618 C,T2 a1,T2 a2);
void r618copy_from(T618 C,T618 a1,T2 a2);
void r260clear_all(T260 C,T2 a1);
T260 r260realloc(T260 C,T2 a1,T2 a2);
void r260set_all_with(T260 C,T0* a1,T2 a2);
T6 r260fast_memcmp(T260 C,T260 a1,T2 a2);
void r260clear(T260 C,T2 a1,T2 a2);
void r260copy_from(T260 C,T260 a1,T2 a2);
void r211clear_all(T211 C,T2 a1);
T211 r211realloc(T211 C,T2 a1,T2 a2);
void r211set_all_with(T211 C,T0* a1,T2 a2);
T6 r211fast_memcmp(T211 C,T211 a1,T2 a2);
void r211clear(T211 C,T2 a1,T2 a2);
void r211copy_from(T211 C,T211 a1,T2 a2);
void r416clear_all(T416 C,T2 a1);
T416 r416realloc(T416 C,T2 a1,T2 a2);
void r416set_all_with(T416 C,T0* a1,T2 a2);
T6 r416fast_memcmp(T416 C,T416 a1,T2 a2);
void r416clear(T416 C,T2 a1,T2 a2);
void r416copy_from(T416 C,T416 a1,T2 a2);
void r216clear_all(T216 C,T2 a1);
T216 r216realloc(T216 C,T2 a1,T2 a2);
void r216set_all_with(T216 C,T0* a1,T2 a2);
T6 r216fast_memcmp(T216 C,T216 a1,T2 a2);
void r216clear(T216 C,T2 a1,T2 a2);
void r216copy_from(T216 C,T216 a1,T2 a2);
void r498clear_all(T498 C,T2 a1);
T498 r498realloc(T498 C,T2 a1,T2 a2);
void r498set_all_with(T498 C,T0* a1,T2 a2);
T6 r498fast_memcmp(T498 C,T498 a1,T2 a2);
void r498clear(T498 C,T2 a1,T2 a2);
void r498copy_from(T498 C,T498 a1,T2 a2);
void r73clear_all(T73 C,T2 a1);
T73 r73realloc(T73 C,T2 a1,T2 a2);
T6 r73fast_memcmp(T73 C,T73 a1,T2 a2);
void r73set_all_with(T73 C,T0* a1,T2 a2);
void r73clear(T73 C,T2 a1,T2 a2);
void r73copy_from(T73 C,T73 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r599clear_all(T599 C,T2 a1);
T599 r599realloc(T599 C,T2 a1,T2 a2);
void r599set_all_with(T599 C,T0* a1,T2 a2);
T6 r599fast_memcmp(T599 C,T599 a1,T2 a2);
void r599clear(T599 C,T2 a1,T2 a2);
void r599copy_from(T599 C,T599 a1,T2 a2);
void r279clear_all(T279 C,T2 a1);
T279 r279realloc(T279 C,T2 a1,T2 a2);
void r279set_all_with(T279 C,T0* a1,T2 a2);
T6 r279fast_memcmp(T279 C,T279 a1,T2 a2);
void r279clear(T279 C,T2 a1,T2 a2);
void r279copy_from(T279 C,T279 a1,T2 a2);
void r390clear_all(T390 C,T2 a1);
T390 r390realloc(T390 C,T2 a1,T2 a2);
void r390set_all_with(T390 C,T0* a1,T2 a2);
T6 r390fast_memcmp(T390 C,T390 a1,T2 a2);
void r390clear(T390 C,T2 a1,T2 a2);
void r390copy_from(T390 C,T390 a1,T2 a2);
void r365clear_all(T365 C,T2 a1);
T365 r365realloc(T365 C,T2 a1,T2 a2);
void r365set_all_with(T365 C,T0* a1,T2 a2);
T6 r365fast_memcmp(T365 C,T365 a1,T2 a2);
void r365clear(T365 C,T2 a1,T2 a2);
void r365copy_from(T365 C,T365 a1,T2 a2);
void r256clear_all(T256 C,T2 a1);
T256 r256realloc(T256 C,T2 a1,T2 a2);
void r256set_all_with(T256 C,T0* a1,T2 a2);
T6 r256fast_memcmp(T256 C,T256 a1,T2 a2);
void r256clear(T256 C,T2 a1,T2 a2);
void r256copy_from(T256 C,T256 a1,T2 a2);
void r105clear_all(T105 C,T2 a1);
T105 r105realloc(T105 C,T2 a1,T2 a2);
void r105move(T105 C,T2 a1,T2 a2,T2 a3);
T6 r105fast_memcmp(T105 C,T105 a1,T2 a2);
void r105set_all_with(T105 C,T2 a1,T2 a2);
void r105clear(T105 C,T2 a1,T2 a2);
void r105copy_from(T105 C,T105 a1,T2 a2);
void r477clear_all(T477 C,T2 a1);
T477 r477realloc(T477 C,T2 a1,T2 a2);
void r477set_all_with(T477 C,T0* a1,T2 a2);
T6 r477fast_memcmp(T477 C,T477 a1,T2 a2);
void r477clear(T477 C,T2 a1,T2 a2);
void r477copy_from(T477 C,T477 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r277copy(T277* C,T0* a1);
T6 r277is_equal(T277* C,T0* a1);
T6 r277se_assigned_from(T0* a1);
void r277make(T277* C,T2 a1);
T6 r277conforms_to(T277* C,T0* a1);
void r277resize(T277* C,T2 a1);
T0* r277twin(T277* C);
void r387copy(T387* C,T0* a1);
T6 r387is_equal(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
void r387make(T387* C,T2 a1);
T6 r387conforms_to(T387* C,T0* a1);
void r387resize(T387* C,T2 a1);
T0* r387twin(T387* C);
void r616copy(T616* C,T0* a1);
T6 r616is_equal(T616* C,T0* a1);
T6 r616se_assigned_from(T0* a1);
void r616make(T616* C,T2 a1);
T6 r616conforms_to(T616* C,T0* a1);
void r616resize(T616* C,T2 a1);
T0* r616twin(T616* C);
void r214copy(T214* C,T0* a1);
T6 r214is_equal(T214* C,T0* a1);
T6 r214se_assigned_from(T0* a1);
void r214make(T214* C,T2 a1);
T6 r214conforms_to(T214* C,T0* a1);
void r214resize(T214* C,T2 a1);
T0* r214twin(T214* C);
void r470copy(T470* C,T0* a1);
T2 r470count(T470* C);
T6 r470is_equal(T470* C,T0* a1);
T2 r470item(T470* C,T2 a1);
T6 r470se_assigned_from(T0* a1);
void r470make(T470* C,T2 a1,T2 a2);
T6 r470conforms_to(T470* C,T0* a1);
void r470resize(T470* C,T2 a1,T2 a2);
T0* r470twin(T470* C);
void r254copy(T254* C,T0* a1);
T6 r254is_equal(T254* C,T0* a1);
T6 r254se_assigned_from(T0* a1);
void r254make(T254* C,T2 a1);
T6 r254conforms_to(T254* C,T0* a1);
void r254resize(T254* C,T2 a1);
T0* r254twin(T254* C);
void r439copy(T439* C,T0* a1);
T6 r439is_equal(T439* C,T0* a1);
T6 r439se_assigned_from(T0* a1);
void r439make(T439* C,T2 a1);
T6 r439conforms_to(T439* C,T0* a1);
void r439resize(T439* C,T2 a1);
T0* r439twin(T439* C);
void r209copy(T209* C,T0* a1);
T6 r209is_equal(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
void r209make(T209* C,T2 a1);
T6 r209conforms_to(T209* C,T0* a1);
void r209resize(T209* C,T2 a1);
T0* r209twin(T209* C);
void r412copy(T412* C,T0* a1);
T6 r412is_equal(T412* C,T0* a1);
T6 r412se_assigned_from(T0* a1);
void r412make(T412* C,T2 a1);
T6 r412conforms_to(T412* C,T0* a1);
void r412resize(T412* C,T2 a1);
T0* r412twin(T412* C);
void r71copy(T71* C,T0* a1);
T6 r71is_equal(T71* C,T0* a1);
T6 r71se_assigned_from(T0* a1);
void r71make(T71* C,T2 a1);
T6 r71conforms_to(T71* C,T0* a1);
void r71resize(T71* C,T2 a1);
T0* r71twin(T71* C);
void r318copy(T318* C,T0* a1);
T6 r318is_equal(T318* C,T0* a1);
T6 r318se_assigned_from(T0* a1);
void r318make(T318* C,T2 a1);
T6 r318conforms_to(T318* C,T0* a1);
void r318resize(T318* C,T2 a1);
T0* r318twin(T318* C);
void r362copy(T362* C,T0* a1);
T6 r362is_equal(T362* C,T0* a1);
T6 r362se_assigned_from(T0* a1);
void r362make(T362* C,T2 a1);
T6 r362conforms_to(T362* C,T0* a1);
void r362resize(T362* C,T2 a1);
T0* r362twin(T362* C);
void r103copy(T103* C,T0* a1);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103make(T103* C,T2 a1);
T6 r103conforms_to(T103* C,T0* a1);
void r103resize(T103* C,T2 a1);
T0* r103twin(T103* C);
void r103with_capacity(T103* C,T2 a1);
void r103from_collection(T103* C,T0* a1);
void r84copy(T84* C,T0* a1);
T2 r84count(T84* C);
T6 r84is_equal(T84* C,T0* a1);
T0* r84item(T84* C,T2 a1);
T6 r84valid_index(T84* C,T2 a1);
T6 r84se_assigned_from(T0* a1);
void r84make(T84* C,T2 a1,T2 a2);
T6 r84conforms_to(T84* C,T0* a1);
T0* r84twin(T84* C);
void r473copy(T473* C,T0* a1);
T2 r473count(T473* C);
T6 r473is_equal(T473* C,T0* a1);
T0* r473item(T473* C,T2 a1);
T6 r473se_assigned_from(T0* a1);
void r473make(T473* C,T2 a1);
T6 r473conforms_to(T473* C,T0* a1);
void r473resize(T473* C,T2 a1);
T0* r473twin(T473* C);
void r595copy(T595* C,T0* a1);
T6 r595is_equal(T595* C,T0* a1);
T6 r595se_assigned_from(T0* a1);
void r595make(T595* C,T2 a1);
T6 r595conforms_to(T595* C,T0* a1);
void r595resize(T595* C,T2 a1);
T0* r595twin(T595* C);
void r258copy(T258* C,T0* a1);
T2 r258count(T258* C);
T6 r258is_equal(T258* C,T0* a1);
T0* r258item(T258* C,T2 a1);
T6 r258se_assigned_from(T0* a1);
void r258make(T258* C,T2 a1);
T6 r258conforms_to(T258* C,T0* a1);
void r258resize(T258* C,T2 a1);
T0* r258twin(T258* C);
void r496copy(T496* C,T0* a1);
T6 r496is_equal(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
void r496make(T496* C,T2 a1);
T6 r496conforms_to(T496* C,T0* a1);
void r496resize(T496* C,T2 a1);
T0* r496twin(T496* C);
void r699copy(T699* C,T0* a1);
void r699set(T699* C,T0* a1,T6 a2,T6 a3);
T6 r699is_equal(T699* C,T0* a1);
T6 r699same_position(T699* C,T0* a1);
T6 r699se_assigned_from(T0* a1);
T6 r699same_type(T699* C,T0* a1);
void r699make(T699* C,T0* a1);
T6 r699conforms_to(T699* C,T0* a1);
void r699set_after(T699* C);
T0* r699twin(T699* C);
void r453copy(T453* C,T0* a1);
T6 r453is_equal(T453* C,T0* a1);
T6 r453same_position(T453* C,T0* a1);
T6 r453se_assigned_from(T0* a1);
T6 r453same_type(T453* C,T0* a1);
T6 r453off(T453* C);
T6 r453conforms_to(T453* C,T0* a1);
T0* r453twin(T453* C);
T6 r555is_equal(T555* C,T0* a1);
T6 r555se_assigned_from(T0* a1);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555twin(T555* C);
void r444copy(T444* C,T0* a1);
T6 r444is_equal(T444* C,T0* a1);
void r444remove_traversing_cursor(T444* C,T0* a1);
void r444move_all_cursors_after(T444* C);
void r444add_traversing_cursor(T444* C,T0* a1);
T6 r444se_assigned_from(T0* a1);
T0* r444clone(T0* a1);
T6 r444cursor_before(T0* a1);
T6 r444same_type(T444* C,T0* a1);
void r444make(T444* C,T2 a1);
T6 r444cursor_after(T0* a1);
T6 r444conforms_to(T444* C,T0* a1);
T6 r444cursor_same_position(T0* a1,T0* a2);
T0* r444twin(T444* C);
T0* r444new_cursor(T444* C);
T6 r444cursor_off(T0* a1);
T6 r87is_equal(T87* C,T0* a1);
T6 r87se_assigned_from(T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
T0* r87twin(T87* C);
T6 r150is_equal(T150* C,T0* a1);
T6 r150se_assigned_from(T0* a1);
T6 r150conforms_to(T150* C,T0* a1);
T0* r150twin(T150* C);
void r226copy(T226* C,T0* a1);
T6 r226is_equal(T226* C,T0* a1);
T0* r226item(T226* C);
T6 r226same_position(T226* C,T0* a1);
T6 r226se_assigned_from(T0* a1);
T6 r226after(T226* C);
T6 r226same_type(T226* C,T0* a1);
T2 r226index(T226* C);
T6 r226off(T226* C);
T6 r226conforms_to(T226* C,T0* a1);
T0* r226twin(T226* C);
T6 r544is_equal(T544* C,T0* a1);
T6 r544se_assigned_from(T0* a1);
void r544make(T544* C,T0* a1,T0* a2);
T6 r544conforms_to(T544* C,T0* a1);
T0* r544twin(T544* C);
void r603copy(T603* C,T0* a1);
void r603set(T603* C,T0* a1,T6 a2,T6 a3);
T6 r603is_equal(T603* C,T0* a1);
T6 r603same_position(T603* C,T0* a1);
T6 r603se_assigned_from(T0* a1);
T6 r603is_first(T603* C);
T6 r603is_last(T603* C);
T6 r603same_type(T603* C,T0* a1);
void r603make(T603* C,T0* a1);
void r603forth(T603* C);
T6 r603conforms_to(T603* C,T0* a1);
void r603start(T603* C);
void r603go_after(T603* C);
void r603set_after(T603* C);
T0* r603twin(T603* C);
void r359copy(T359* C,T0* a1);
T6 r359is_equal(T359* C,T0* a1);
T6 r359same_position(T359* C,T0* a1);
T6 r359se_assigned_from(T0* a1);
T6 r359same_type(T359* C,T0* a1);
void r359make(T359* C,T0* a1);
T6 r359off(T359* C);
T6 r359conforms_to(T359* C,T0* a1);
T0* r359twin(T359* C);
T2 r212new_capacity(T2 a1);
void r212copy(T212* C,T0* a1);
void r212clear_items(T212* C,T2 a1,T2 a2);
T6 r212extendible(T212* C,T2 a1);
T0* r212cursor_item(T212* C,T0* a1);
T6 r212is_equal(T212* C,T0* a1);
void r212remove_traversing_cursor(T212* C,T0* a1);
void r212move_all_cursors_after(T212* C);
void r212add_traversing_cursor(T212* C,T0* a1);
T6 r212se_assigned_from(T0* a1);
T0* r212clone(T0* a1);
void r212move_left(T212* C,T2 a1,T2 a2);
T6 r212cursor_before(T0* a1);
T6 r212same_type(T212* C,T0* a1);
void r212make(T212* C,T2 a1);
void r212remove(T212* C,T2 a1);
void r212move_cursors_left(T212* C,T2 a1);
void r212remove_last(T212* C);
T6 r212cursor_after(T0* a1);
T6 r212conforms_to(T212* C,T0* a1);
T2 r212cursor_index(T212* C,T0* a1);
void r212cursor_forth(T212* C,T0* a1);
void r212resize(T212* C,T2 a1);
T6 r212cursor_same_position(T0* a1,T0* a2);
void r212move_last_cursors_after(T212* C);
void r212delete(T212* C,T0* a1);
void r212cursor_start(T212* C,T0* a1);
T0* r212twin(T212* C);
void r212force_last(T212* C,T0* a1);
T0* r212new_cursor(T212* C);
void r212put_last(T212* C,T0* a1);
T6 r212cursor_off(T0* a1);
void r643copy(T643* C,T0* a1);
void r643set(T643* C,T0* a1,T6 a2,T6 a3);
T6 r643is_equal(T643* C,T0* a1);
T6 r643same_position(T643* C,T0* a1);
T6 r643se_assigned_from(T0* a1);
T6 r643same_type(T643* C,T0* a1);
void r643make(T643* C,T0* a1);
T6 r643conforms_to(T643* C,T0* a1);
void r643set_after(T643* C);
T0* r643twin(T643* C);
T6 r650is_equal(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
T6 r646is_equal(T646* C,T0* a1);
T6 r646se_assigned_from(T0* a1);
T6 r646conforms_to(T646* C,T0* a1);
T0* r646twin(T646* C);
void r474clear_all(T0* a1);
T6 r474is_equal(T474* C,T0* a1);
T6 r474se_assigned_from(T0* a1);
T0* r474make(T2 a1);
T6 r474conforms_to(T474* C,T0* a1);
T0* r474resize(T0* a1,T2 a2);
T0* r474twin(T474* C);
T6 r319is_equal(T319* C,T0* a1);
T6 r319se_assigned_from(T0* a1);
T0* r319make(T2 a1);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319resize(T0* a1,T2 a2);
T0* r319twin(T319* C);
T6 r372is_equal(T372* C,T0* a1);
T6 r372se_assigned_from(T0* a1);
void r372make(T372* C,T2 a1);
T6 r372conforms_to(T372* C,T0* a1);
T0* r372twin(T372* C);
void r543copy(T543* C,T0* a1);
void r543set(T543* C,T0* a1,T6 a2,T6 a3);
T6 r543is_equal(T543* C,T0* a1);
T6 r543same_position(T543* C,T0* a1);
T6 r543se_assigned_from(T0* a1);
T6 r543same_type(T543* C,T0* a1);
void r543make(T543* C,T0* a1);
T6 r543conforms_to(T543* C,T0* a1);
void r543set_after(T543* C);
T0* r543twin(T543* C);
T6 r107is_equal(T107* C,T0* a1);
T6 r107se_assigned_from(T0* a1);
T0* r107to_fixed_array(T0* a1);
T0* r107make(T2 a1);
T0* r107make_from_array(T0* a1);
T6 r107conforms_to(T107* C,T0* a1);
T0* r107resize(T0* a1,T2 a2);
T0* r107twin(T107* C);
void r280clear_all(T0* a1);
T6 r280is_equal(T280* C,T0* a1);
T6 r280se_assigned_from(T0* a1);
T0* r280make(T2 a1);
T6 r280conforms_to(T280* C,T0* a1);
T0* r280resize(T0* a1,T2 a2);
T0* r280twin(T280* C);
void r125copy(T125* C,T0* a1);
void r125set(T125* C,T0* a1,T6 a2,T6 a3);
T6 r125is_equal(T125* C,T0* a1);
T6 r125same_position(T125* C,T0* a1);
T6 r125se_assigned_from(T0* a1);
T6 r125same_type(T125* C,T0* a1);
void r125make(T125* C,T0* a1);
T6 r125conforms_to(T125* C,T0* a1);
void r125set_after(T125* C);
T0* r125twin(T125* C);
T6 r688is_equal(T688* C,T0* a1);
T6 r688se_assigned_from(T0* a1);
void r688make(T688* C,T0* a1,T0* a2);
T6 r688conforms_to(T688* C,T0* a1);
T0* r688twin(T688* C);
void r160copy(T160* C,T0* a1);
T6 r160is_equal(T160* C,T0* a1);
T0* r160item(T160* C);
T6 r160same_position(T160* C,T0* a1);
T6 r160se_assigned_from(T0* a1);
T6 r160after(T160* C);
T6 r160same_type(T160* C,T0* a1);
void r160make(T160* C,T0* a1);
T6 r160off(T160* C);
T6 r160conforms_to(T160* C,T0* a1);
T0* r160twin(T160* C);
T2 r612new_capacity(T2 a1);
void r612copy(T612* C,T0* a1);
void r612force(T612* C,T6 a1,T0* a2);
void r612make_clashes(T612* C,T2 a1);
void r612search_position(T612* C,T0* a1);
T6 r612is_equal(T612* C,T0* a1);
void r612remove_traversing_cursor(T612* C,T0* a1);
void r612clone_slots(T612* C);
extern T0*oBC94FIXED_INTEGER_ARRAY_;
void r612keys_resize(T612* C,T2 a1);
T6 r612item(T612* C,T0* a1);
void r612clone_clashes(T612* C);
void r612move_all_cursors_after(T612* C);
void r612make_items(T612* C,T2 a1);
void r612add_traversing_cursor(T612* C,T0* a1);
T6 r612se_assigned_from(T0* a1);
T0* r612clone(T0* a1);
T6 r612same_type(T612* C,T0* a1);
void r612make(T612* C,T2 a1);
void r612clone_items(T612* C);
T6 r612conforms_to(T612* C,T0* a1);
T6 r612has(T612* C,T0* a1);
void r612make_keys(T612* C,T2 a1);
T2 r612hash_position(T612* C,T0* a1);
void r612items_resize(T612* C,T2 a1);
void r612clone_keys(T612* C);
void r612make_with_equality_testers(T612* C,T2 a1,T0* a2,T0* a3);
void r612resize(T612* C,T2 a1);
T6 r612cursor_same_position(T0* a1,T0* a2);
void r612clashes_resize(T612* C,T2 a1);
void r612slots_resize(T612* C,T2 a1);
T0* r612twin(T612* C);
T0* r612new_cursor(T612* C);
void r612make_slots(T612* C,T2 a1);
T2 r612new_modulus(T2 a1);
T6 r612cursor_off(T0* a1);
T6 r388is_equal(T388* C,T0* a1);
T6 r388se_assigned_from(T0* a1);
T0* r388make(T2 a1);
T6 r388conforms_to(T388* C,T0* a1);
T0* r388resize(T0* a1,T2 a2);
T0* r388twin(T388* C);
void r431copy(T431* C,T0* a1);
void r431make_clashes(T431* C,T2 a1);
void r431search_position(T431* C,T0* a1);
T6 r431is_equal(T431* C,T0* a1);
void r431remove_traversing_cursor(T431* C,T0* a1);
void r431clone_slots(T431* C);
T2 r431item(T431* C,T0* a1);
void r431clone_clashes(T431* C);
void r431move_all_cursors_after(T431* C);
void r431make_items(T431* C,T2 a1);
void r431add_traversing_cursor(T431* C,T0* a1);
T6 r431se_assigned_from(T0* a1);
T0* r431clone(T0* a1);
T6 r431same_type(T431* C,T0* a1);
void r431clone_items(T431* C);
T6 r431conforms_to(T431* C,T0* a1);
T6 r431has(T431* C,T0* a1);
void r431make_keys(T431* C,T2 a1);
T2 r431hash_position(T431* C,T0* a1);
void r431clone_keys(T431* C);
void r431make_with_equality_testers(T431* C,T2 a1,T0* a2,T0* a3);
T6 r431cursor_same_position(T0* a1,T0* a2);
T0* r431twin(T431* C);
T0* r431new_cursor(T431* C);
void r431make_slots(T431* C,T2 a1);
T2 r431new_modulus(T2 a1);
T6 r431cursor_off(T0* a1);
void r315copy(T315* C,T0* a1);
T6 r315is_equal(T315* C,T0* a1);
T6 r315same_position(T315* C,T0* a1);
T6 r315se_assigned_from(T0* a1);
T6 r315same_type(T315* C,T0* a1);
void r315make(T315* C,T0* a1);
T6 r315off(T315* C);
T6 r315conforms_to(T315* C,T0* a1);
T0* r315twin(T315* C);
T6 r137is_equal(T137* C,T0* a1);
T6 r137se_assigned_from(T0* a1);
void r137make(T137* C,T0* a1,T0* a2);
T6 r137conforms_to(T137* C,T0* a1);
T0* r137twin(T137* C);
T6 r702is_equal(T702* C,T0* a1);
T6 r702se_assigned_from(T0* a1);
T6 r702conforms_to(T702* C,T0* a1);
T0* r702twin(T702* C);
void r631copy(T631* C,T0* a1);
T6 r631is_equal(T631* C,T0* a1);
T6 r631same_position(T631* C,T0* a1);
T6 r631se_assigned_from(T0* a1);
T6 r631same_type(T631* C,T0* a1);
void r631make(T631* C,T0* a1);
T6 r631off(T631* C);
T6 r631conforms_to(T631* C,T0* a1);
T0* r631twin(T631* C);
void r660copy(T660* C,T0* a1);
void r660set(T660* C,T0* a1,T6 a2,T6 a3);
T6 r660is_equal(T660* C,T0* a1);
T6 r660same_position(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
T6 r660is_last(T660* C);
T6 r660same_type(T660* C,T0* a1);
void r660make(T660* C,T0* a1);
T6 r660conforms_to(T660* C,T0* a1);
void r660set_after(T660* C);
T0* r660twin(T660* C);
void r553copy(T553* C,T0* a1);
T6 r553is_equal(T553* C,T0* a1);
void r553remove_traversing_cursor(T553* C,T0* a1);
void r553move_all_cursors_after(T553* C);
void r553add_traversing_cursor(T553* C,T0* a1);
T6 r553se_assigned_from(T0* a1);
T6 r553same_type(T553* C,T0* a1);
void r553make(T553* C);
T6 r553conforms_to(T553* C,T0* a1);
void r553cursor_forth(T553* C,T0* a1);
void r553cursor_start(T553* C,T0* a1);
T0* r553twin(T553* C);
T0* r553new_cursor(T553* C);
void r553put_last(T553* C,T0* a1);
T6 r553cursor_off(T0* a1);
void r31copy(T31* C,T0* a1);
void r31set(T31* C,T0* a1,T6 a2,T6 a3);
T6 r31is_equal(T31* C,T0* a1);
T6 r31same_position(T31* C,T0* a1);
T6 r31se_assigned_from(T0* a1);
T6 r31same_type(T31* C,T0* a1);
void r31make(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31set_after(T31* C);
T0* r31twin(T31* C);
T2 r208new_capacity(T2 a1);
void r208copy(T208* C,T0* a1);
T6 r208extendible(T208* C,T2 a1);
T6 r208is_equal(T208* C,T0* a1);
void r208remove_traversing_cursor(T208* C,T0* a1);
void r208move_all_cursors_after(T208* C);
void r208add_traversing_cursor(T208* C,T0* a1);
T6 r208se_assigned_from(T0* a1);
T0* r208clone(T0* a1);
T6 r208cursor_before(T0* a1);
T6 r208same_type(T208* C,T0* a1);
void r208make(T208* C,T2 a1);
T6 r208cursor_after(T0* a1);
T6 r208conforms_to(T208* C,T0* a1);
void r208resize(T208* C,T2 a1);
T6 r208cursor_same_position(T0* a1,T0* a2);
T0* r208twin(T208* C);
void r208force_last(T208* C,T0* a1);
T0* r208new_cursor(T208* C);
void r208put_last(T208* C,T0* a1);
T6 r208cursor_off(T0* a1);
void r344copy(T344* C,T0* a1);
T6 r344is_equal(T344* C,T0* a1);
T6 r344same_position(T344* C,T0* a1);
T6 r344se_assigned_from(T0* a1);
T6 r344same_type(T344* C,T0* a1);
void r344make(T344* C,T0* a1);
T6 r344off(T344* C);
T6 r344conforms_to(T344* C,T0* a1);
T0* r344twin(T344* C);
void r507copy(T507* C,T0* a1);
T6 r507is_equal(T507* C,T0* a1);
T6 r507same_position(T507* C,T0* a1);
T6 r507se_assigned_from(T0* a1);
T6 r507same_type(T507* C,T0* a1);
void r507make(T507* C,T0* a1);
T6 r507off(T507* C);
T6 r507conforms_to(T507* C,T0* a1);
T0* r507twin(T507* C);
void r403copy(T403* C,T0* a1);
void r403make_clashes(T403* C,T2 a1);
void r403search_position(T403* C,T0* a1);
T6 r403is_equal(T403* C,T0* a1);
void r403remove_traversing_cursor(T403* C,T0* a1);
void r403clone_slots(T403* C);
T2 r403item(T403* C,T0* a1);
void r403clone_clashes(T403* C);
void r403move_all_cursors_after(T403* C);
void r403make_items(T403* C,T2 a1);
void r403add_traversing_cursor(T403* C,T0* a1);
T6 r403se_assigned_from(T0* a1);
T0* r403clone(T0* a1);
T6 r403same_type(T403* C,T0* a1);
void r403clone_items(T403* C);
T6 r403conforms_to(T403* C,T0* a1);
T6 r403has(T403* C,T0* a1);
void r403make_keys(T403* C,T2 a1);
T2 r403hash_position(T403* C,T0* a1);
void r403clone_keys(T403* C);
void r403make_with_equality_testers(T403* C,T2 a1,T0* a2,T0* a3);
T6 r403cursor_same_position(T0* a1,T0* a2);
T0* r403twin(T403* C);
T0* r403new_cursor(T403* C);
void r403make_slots(T403* C,T2 a1);
T2 r403new_modulus(T2 a1);
T6 r403cursor_off(T0* a1);
void r649copy(T649* C,T0* a1);
T6 r649cursor_is_last(T649* C,T0* a1);
T6 r649is_equal(T649* C,T0* a1);
void r649remove_traversing_cursor(T649* C,T0* a1);
void r649move_all_cursors_after(T649* C);
void r649add_traversing_cursor(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
T6 r649same_type(T649* C,T0* a1);
void r649make(T649* C);
T6 r649conforms_to(T649* C,T0* a1);
void r649cursor_forth(T649* C,T0* a1);
void r649cursor_start(T649* C,T0* a1);
T0* r649twin(T649* C);
void r649force_last(T649* C,T0* a1);
T0* r649new_cursor(T649* C);
T6 r649cursor_off(T0* a1);
void r417copy(T417* C,T0* a1);
T6 r417is_equal(T417* C,T0* a1);
void r417remove_traversing_cursor(T417* C,T0* a1);
void r417move_all_cursors_after(T417* C);
void r417add_traversing_cursor(T417* C,T0* a1);
T6 r417se_assigned_from(T0* a1);
T0* r417clone(T0* a1);
T6 r417cursor_before(T0* a1);
T6 r417same_type(T417* C,T0* a1);
void r417make(T417* C,T2 a1);
T6 r417cursor_after(T0* a1);
T6 r417conforms_to(T417* C,T0* a1);
T6 r417cursor_same_position(T0* a1,T0* a2);
T0* r417twin(T417* C);
T0* r417new_cursor(T417* C);
T6 r417cursor_off(T0* a1);
T6 r584is_equal(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
T6 r584conforms_to(T584* C,T0* a1);
T6 r584test(T0* a1,T0* a2);
T0* r584twin(T584* C);
T6 r282is_equal(T282* C,T0* a1);
T6 r282se_assigned_from(T0* a1);
T0* r282make(T2 a1);
T6 r282conforms_to(T282* C,T0* a1);
T0* r282resize(T0* a1,T2 a2);
T0* r282twin(T282* C);
void r689copy(T689* C,T0* a1);
T0* r689cursor_item(T0* a1);
T6 r689is_equal(T689* C,T0* a1);
void r689remove_traversing_cursor(T689* C,T0* a1);
void r689move_all_cursors_after(T689* C);
void r689add_traversing_cursor(T689* C,T0* a1);
T6 r689se_assigned_from(T0* a1);
T6 r689cursor_before(T0* a1);
T6 r689same_type(T689* C,T0* a1);
void r689make(T689* C);
T6 r689cursor_after(T0* a1);
T6 r689conforms_to(T689* C,T0* a1);
void r689cursor_forth(T689* C,T0* a1);
void r689cursor_start(T689* C,T0* a1);
T0* r689twin(T689* C);
T0* r689new_cursor(T689* C);
void r689put_last(T689* C,T0* a1);
T6 r689cursor_off(T0* a1);
void r299copy(T299* C,T0* a1);
T6 r299is_equal(T299* C,T0* a1);
T6 r299same_position(T299* C,T0* a1);
T6 r299se_assigned_from(T0* a1);
T6 r299same_type(T299* C,T0* a1);
void r299make(T299* C,T0* a1);
T6 r299off(T299* C);
T6 r299conforms_to(T299* C,T0* a1);
T0* r299twin(T299* C);
T6 r229is_equal(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
T0* r229make(T2 a1);
T6 r229conforms_to(T229* C,T0* a1);
T0* r229resize(T0* a1,T2 a2);
T0* r229twin(T229* C);
T6 r539is_equal(T539* C,T0* a1);
T6 r539se_assigned_from(T0* a1);
T6 r539conforms_to(T539* C,T0* a1);
T0* r539twin(T539* C);
void r592copy(T592* C,T0* a1);
T6 r592is_equal(T592* C,T0* a1);
T6 r592same_position(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
T6 r592same_type(T592* C,T0* a1);
void r592make(T592* C,T0* a1);
T6 r592off(T592* C);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
void r373copy(T373* C,T0* a1);
T6 r373is_equal(T373* C,T0* a1);
void r373remove_traversing_cursor(T373* C,T0* a1);
void r373move_all_cursors_after(T373* C);
void r373add_traversing_cursor(T373* C,T0* a1);
T6 r373se_assigned_from(T0* a1);
T0* r373clone(T0* a1);
T6 r373cursor_before(T0* a1);
T6 r373same_type(T373* C,T0* a1);
void r373make(T373* C,T2 a1);
T6 r373cursor_after(T0* a1);
T6 r373conforms_to(T373* C,T0* a1);
T6 r373cursor_same_position(T0* a1,T0* a2);
T0* r373twin(T373* C);
T0* r373new_cursor(T373* C);
T6 r373cursor_off(T0* a1);
void r301copy(T301* C,T0* a1);
void r301make_clashes(T301* C,T2 a1);
void r301search_position(T301* C,T2 a1);
T6 r301is_equal(T301* C,T0* a1);
void r301remove_traversing_cursor(T301* C,T0* a1);
void r301clone_slots(T301* C);
T0* r301item(T301* C,T2 a1);
void r301clone_clashes(T301* C);
void r301move_all_cursors_after(T301* C);
void r301make_items(T301* C,T2 a1);
void r301add_traversing_cursor(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T0* r301clone(T0* a1);
T6 r301same_type(T301* C,T0* a1);
void r301clone_items(T301* C);
T6 r301conforms_to(T301* C,T0* a1);
T6 r301has(T301* C,T2 a1);
void r301make_keys(T301* C,T2 a1);
T2 r301hash_position(T301* C,T2 a1);
void r301clone_keys(T301* C);
void r301make_with_equality_testers(T301* C,T2 a1,T0* a2,T0* a3);
T6 r301cursor_same_position(T0* a1,T0* a2);
T0* r301twin(T301* C);
T0* r301new_cursor(T301* C);
void r301make_slots(T301* C,T2 a1);
T2 r301new_modulus(T2 a1);
T6 r301cursor_off(T0* a1);
T2 r491new_capacity(T2 a1);
void r491copy(T491* C,T0* a1);
void r491force(T491* C,T0* a1,T0* a2);
void r491make_clashes(T491* C,T2 a1);
void r491search_position(T491* C,T0* a1);
T6 r491is_equal(T491* C,T0* a1);
void r491remove_traversing_cursor(T491* C,T0* a1);
void r491clone_slots(T491* C);
void r491keys_resize(T491* C,T2 a1);
void r491clone_clashes(T491* C);
T0* r491item(T491* C,T0* a1);
void r491move_all_cursors_after(T491* C);
void r491make_items(T491* C,T2 a1);
void r491add_traversing_cursor(T491* C,T0* a1);
T6 r491se_assigned_from(T0* a1);
T0* r491clone(T0* a1);
T6 r491same_type(T491* C,T0* a1);
void r491make(T491* C,T2 a1);
void r491clone_items(T491* C);
T6 r491conforms_to(T491* C,T0* a1);
T6 r491has(T491* C,T0* a1);
void r491make_keys(T491* C,T2 a1);
T2 r491hash_position(T491* C,T0* a1);
void r491items_resize(T491* C,T2 a1);
void r491clone_keys(T491* C);
void r491make_with_equality_testers(T491* C,T2 a1,T0* a2,T0* a3);
void r491resize(T491* C,T2 a1);
T6 r491cursor_same_position(T0* a1,T0* a2);
void r491clashes_resize(T491* C,T2 a1);
void r491slots_resize(T491* C,T2 a1);
T0* r491twin(T491* C);
T0* r491new_cursor(T491* C);
void r491make_slots(T491* C,T2 a1);
T2 r491new_modulus(T2 a1);
T6 r491cursor_off(T0* a1);
T6 r413is_equal(T413* C,T0* a1);
T6 r413se_assigned_from(T0* a1);
T0* r413make(T2 a1);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413resize(T0* a1,T2 a2);
T0* r413twin(T413* C);
void r148copy(T148* C,T0* a1);
void r148append_last(T148* C,T0* a1);
T0* r148cursor_item(T0* a1);
T6 r148cursor_is_last(T148* C,T0* a1);
T6 r148is_equal(T148* C,T0* a1);
void r148remove_traversing_cursor(T148* C,T0* a1);
void r148move_all_cursors_after(T148* C);
void r148add_traversing_cursor(T148* C,T0* a1);
T6 r148se_assigned_from(T0* a1);
T6 r148same_type(T148* C,T0* a1);
void r148make(T148* C);
T6 r148cursor_after(T0* a1);
T6 r148conforms_to(T148* C,T0* a1);
void r148cursor_forth(T148* C,T0* a1);
void r148make_from_linear(T148* C,T0* a1);
void r148cursor_start(T148* C,T0* a1);
T0* r148twin(T148* C);
void r148force_last(T148* C,T0* a1);
T0* r148new_cursor(T148* C);
void r148put_last(T148* C,T0* a1);
T6 r148cursor_off(T0* a1);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r620is_equal(T620* C,T0* a1);
T6 r620se_assigned_from(T0* a1);
T0* r620make(T2 a1);
T6 r620conforms_to(T620* C,T0* a1);
T0* r620resize(T0* a1,T2 a2);
T0* r620twin(T620* C);
T6 r363is_equal(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
T0* r363make(T2 a1);
T6 r363conforms_to(T363* C,T0* a1);
T0* r363resize(T0* a1,T2 a2);
T0* r363twin(T363* C);
void r426copy(T426* C,T0* a1);
T6 r426is_equal(T426* C,T0* a1);
T6 r426same_position(T426* C,T0* a1);
T6 r426se_assigned_from(T0* a1);
T6 r426same_type(T426* C,T0* a1);
T6 r426off(T426* C);
T6 r426conforms_to(T426* C,T0* a1);
T0* r426twin(T426* C);
T6 r494is_equal(T494* C,T0* a1);
T6 r494se_assigned_from(T0* a1);
T6 r494conforms_to(T494* C,T0* a1);
T6 r494test(T0* a1,T0* a2);
T0* r494twin(T494* C);
void r295copy(T295* C,T0* a1);
T6 r295is_equal(T295* C,T0* a1);
T6 r295same_position(T295* C,T0* a1);
T6 r295se_assigned_from(T0* a1);
T6 r295same_type(T295* C,T0* a1);
void r295make(T295* C,T0* a1);
T6 r295off(T295* C);
T6 r295conforms_to(T295* C,T0* a1);
T0* r295twin(T295* C);
void r326copy(T326* C,T0* a1);
void r326make_equal(T326* C,T2 a1);
void r326make_clashes(T326* C,T2 a1);
void r326search_position(T326* C,T0* a1);
T6 r326is_equal(T326* C,T0* a1);
void r326remove_traversing_cursor(T326* C,T0* a1);
void r326clone_slots(T326* C);
T0* r326items_item(T326* C,T2 a1);
void r326clone_clashes(T326* C);
void r326move_all_cursors_after(T326* C);
void r326make_items(T326* C,T2 a1);
void r326add_traversing_cursor(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T0* r326clone(T0* a1);
T6 r326same_type(T326* C,T0* a1);
void r326make(T326* C,T2 a1);
T6 r326equal(T0* a1,T0* a2);
void r326clone_items(T326* C);
T6 r326same_equality_tester(T326* C,T0* a1);
T6 r326conforms_to(T326* C,T0* a1);
T6 r326has(T326* C,T0* a1);
T2 r326hash_position(T326* C,T0* a1);
T6 r326cursor_same_position(T0* a1,T0* a2);
T0* r326twin(T326* C);
T0* r326new_cursor(T326* C);
void r326make_slots(T326* C,T2 a1);
T2 r326new_modulus(T2 a1);
T6 r326cursor_off(T0* a1);
void r250copy(T250* C,T0* a1);
void r250wipe_out(T250* C);
T0* r250keys_item(T250* C,T2 a1);
void r250make_clashes(T250* C,T2 a1);
void r250put(T250* C,T0* a1,T0* a2);
void r250search_position(T250* C,T0* a1);
T6 r250is_equal(T250* C,T0* a1);
void r250remove_traversing_cursor(T250* C,T0* a1);
void r250clone_slots(T250* C);
void r250keys_resize(T250* C,T2 a1);
T0* r250item(T250* C,T0* a1);
void r250clone_clashes(T250* C);
void r250make_items(T250* C,T2 a1);
void r250move_all_cursors_after(T250* C);
void r250add_traversing_cursor(T250* C,T0* a1);
T6 r250se_assigned_from(T0* a1);
T0* r250clone(T0* a1);
T6 r250same_type(T250* C,T0* a1);
void r250slots_wipe_out(T250* C);
void r250make(T250* C,T2 a1);
void r250clashes_wipe_out(T250* C);
void r250clone_items(T250* C);
T6 r250conforms_to(T250* C,T0* a1);
T6 r250has(T250* C,T0* a1);
void r250make_keys(T250* C,T2 a1);
T2 r250hash_position(T250* C,T0* a1);
void r250items_wipe_out(T250* C);
void r250items_resize(T250* C,T2 a1);
void r250clone_keys(T250* C);
void r250make_with_equality_testers(T250* C,T2 a1,T0* a2,T0* a3);
void r250resize(T250* C,T2 a1);
T6 r250cursor_same_position(T0* a1,T0* a2);
void r250clashes_resize(T250* C,T2 a1);
void r250slots_resize(T250* C,T2 a1);
T0* r250twin(T250* C);
void r250keys_wipe_out(T250* C);
T0* r250new_cursor(T250* C);
void r250make_slots(T250* C,T2 a1);
void r250keys_put(T250* C,T0* a1,T2 a2);
T2 r250new_modulus(T2 a1);
T6 r250cursor_off(T0* a1);
T6 r674is_equal(T674* C,T0* a1);
T6 r674se_assigned_from(T0* a1);
T6 r674conforms_to(T674* C,T0* a1);
T0* r674twin(T674* C);
void r264copy(T264* C,T0* a1);
T6 r264is_equal(T264* C,T0* a1);
void r264remove_traversing_cursor(T264* C,T0* a1);
void r264move_all_cursors_after(T264* C);
void r264add_traversing_cursor(T264* C,T0* a1);
T6 r264se_assigned_from(T0* a1);
T6 r264same_type(T264* C,T0* a1);
void r264make(T264* C);
T6 r264conforms_to(T264* C,T0* a1);
T0* r264twin(T264* C);
T0* r264new_cursor(T264* C);
T6 r430is_equal(T430* C,T0* a1);
T6 r430se_assigned_from(T0* a1);
void r430make(T430* C,T2 a1);
T6 r430conforms_to(T430* C,T0* a1);
T0* r430twin(T430* C);
T6 r596is_equal(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
T0* r596make(T2 a1);
T6 r596conforms_to(T596* C,T0* a1);
T0* r596resize(T0* a1,T2 a2);
T0* r596twin(T596* C);
void r437copy(T437* C,T0* a1);
T6 r437is_equal(T437* C,T0* a1);
T6 r437same_position(T437* C,T0* a1);
T6 r437se_assigned_from(T0* a1);
T6 r437same_type(T437* C,T0* a1);
void r437make(T437* C,T0* a1);
T6 r437off(T437* C);
T6 r437conforms_to(T437* C,T0* a1);
T0* r437twin(T437* C);
void r273copy(T273* C,T0* a1);
T6 r273is_equal(T273* C,T0* a1);
T6 r273same_position(T273* C,T0* a1);
T6 r273se_assigned_from(T0* a1);
T6 r273same_type(T273* C,T0* a1);
void r273make(T273* C,T0* a1);
T6 r273conforms_to(T273* C,T0* a1);
void r273set_after(T273* C);
T0* r273twin(T273* C);
T6 r503is_equal(T503* C,T0* a1);
T6 r503se_assigned_from(T0* a1);
T0* r503make(T2 a1);
T6 r503conforms_to(T503* C,T0* a1);
T0* r503resize(T0* a1,T2 a2);
T0* r503twin(T503* C);
T6 r687is_equal(T687* C,T0* a1);
T6 r687se_assigned_from(T0* a1);
void r687make(T687* C,T0* a1,T0* a2);
T6 r687conforms_to(T687* C,T0* a1);
T0* r687twin(T687* C);
T6 r672is_equal(T672* C,T0* a1);
T6 r672se_assigned_from(T0* a1);
T6 r672conforms_to(T672* C,T0* a1);
T0* r672twin(T672* C);
T6 r499is_equal(T499* C,T0* a1);
T6 r499se_assigned_from(T0* a1);
T0* r499make(T2 a1);
T6 r499conforms_to(T499* C,T0* a1);
T0* r499resize(T0* a1,T2 a2);
T0* r499twin(T499* C);
void r236copy(T236* C,T0* a1);
T6 r236is_equal(T236* C,T0* a1);
T0* r236item(T236* C);
T6 r236same_position(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
T6 r236after(T236* C);
T6 r236same_type(T236* C,T0* a1);
void r236make(T236* C,T0* a1);
T6 r236off(T236* C);
T6 r236conforms_to(T236* C,T0* a1);
T0* r236twin(T236* C);
T6 r440is_equal(T440* C,T0* a1);
T6 r440se_assigned_from(T0* a1);
T0* r440make(T2 a1);
T6 r440conforms_to(T440* C,T0* a1);
T0* r440resize(T0* a1,T2 a2);
T0* r440twin(T440* C);
T2 r100new_capacity(T2 a1);
void r100copy(T100* C,T0* a1);
void r100force(T100* C,T0* a1,T0* a2);
void r100make_clashes(T100* C,T2 a1);
T0* r100cursor_item(T100* C,T0* a1);
void r100search_position(T100* C,T0* a1);
T6 r100is_equal(T100* C,T0* a1);
void r100remove_traversing_cursor(T100* C,T0* a1);
void r100clone_slots(T100* C);
void r100keys_resize(T100* C,T2 a1);
T0* r100item(T100* C,T0* a1);
void r100clone_clashes(T100* C);
void r100move_all_cursors_after(T100* C);
void r100make_items(T100* C,T2 a1);
void r100add_traversing_cursor(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100clone(T0* a1);
T6 r100same_type(T100* C,T0* a1);
void r100make(T100* C,T2 a1);
void r100clone_items(T100* C);
T6 r100cursor_after(T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T6 r100has(T100* C,T0* a1);
void r100make_keys(T100* C,T2 a1);
T2 r100hash_position(T100* C,T0* a1);
void r100cursor_forth(T100* C,T0* a1);
void r100items_resize(T100* C,T2 a1);
void r100clone_keys(T100* C);
void r100make_with_equality_testers(T100* C,T2 a1,T0* a2,T0* a3);
void r100resize(T100* C,T2 a1);
T6 r100cursor_same_position(T0* a1,T0* a2);
void r100cursor_start(T100* C,T0* a1);
void r100clashes_resize(T100* C,T2 a1);
void r100slots_resize(T100* C,T2 a1);
T0* r100twin(T100* C);
T0* r100new_cursor(T100* C);
void r100make_slots(T100* C,T2 a1);
T2 r100new_modulus(T2 a1);
T6 r100cursor_off(T0* a1);
void r138copy(T138* C,T0* a1);
void r138set(T138* C,T0* a1,T6 a2,T6 a3);
T6 r138is_equal(T138* C,T0* a1);
T6 r138same_position(T138* C,T0* a1);
T6 r138se_assigned_from(T0* a1);
T6 r138is_last(T138* C);
T6 r138same_type(T138* C,T0* a1);
void r138make(T138* C,T0* a1);
T6 r138conforms_to(T138* C,T0* a1);
void r138set_after(T138* C);
T0* r138twin(T138* C);
T6 r109is_equal(T109* C,T0* a1);
T6 r109se_assigned_from(T0* a1);
T0* r109make(T2 a1);
T6 r109conforms_to(T109* C,T0* a1);
T0* r109resize(T0* a1,T2 a2);
T0* r109twin(T109* C);
void r634copy(T634* C,T0* a1);
void r634append_last(T634* C,T0* a1);
T0* r634cursor_item(T0* a1);
T6 r634is_equal(T634* C,T0* a1);
void r634remove_traversing_cursor(T634* C,T0* a1);
void r634cursor_go_after(T634* C,T0* a1);
void r634move_all_cursors_after(T634* C);
void r634add_traversing_cursor(T634* C,T0* a1);
T6 r634se_assigned_from(T0* a1);
T6 r634same_type(T634* C,T0* a1);
void r634make(T634* C);
T6 r634cursor_after(T0* a1);
T6 r634conforms_to(T634* C,T0* a1);
void r634cursor_forth(T634* C,T0* a1);
void r634make_from_linear(T634* C,T0* a1);
void r634cursor_start(T634* C,T0* a1);
T0* r634twin(T634* C);
void r634force_last(T634* C,T0* a1);
T0* r634new_cursor(T634* C);
T6 r634cursor_off(T0* a1);
void r78copy(T78* C,T0* a1);
T6 r78is_equal(T78* C,T0* a1);
void r78remove_traversing_cursor(T78* C,T0* a1);
void r78move_all_cursors_after(T78* C);
void r78add_traversing_cursor(T78* C,T0* a1);
T6 r78se_assigned_from(T0* a1);
T6 r78same_type(T78* C,T0* a1);
void r78make(T78* C);
T6 r78conforms_to(T78* C,T0* a1);
void r78cursor_forth(T78* C,T0* a1);
void r78cursor_start(T78* C,T0* a1);
T0* r78twin(T78* C);
void r78force_last(T78* C,T0* a1);
T0* r78new_cursor(T78* C);
T6 r78cursor_off(T0* a1);
T6 r112is_equal(T112* C,T0* a1);
T6 r112se_assigned_from(T0* a1);
T6 r112conforms_to(T112* C,T0* a1);
T6 r112test(T0* a1,T0* a2);
T0* r112twin(T112* C);
void r383copy(T383* C,T0* a1);
T6 r383is_equal(T383* C,T0* a1);
T6 r383same_position(T383* C,T0* a1);
T6 r383se_assigned_from(T0* a1);
T6 r383same_type(T383* C,T0* a1);
T6 r383off(T383* C);
T6 r383conforms_to(T383* C,T0* a1);
T0* r383twin(T383* C);
void r283copy(T283* C,T0* a1);
void r283wipe_out(T283* C);
void r283make_clashes(T283* C,T2 a1);
void r283search_position(T283* C,T2 a1);
T6 r283is_equal(T283* C,T0* a1);
void r283remove_traversing_cursor(T283* C,T0* a1);
void r283clone_slots(T283* C);
T0* r283item(T283* C,T2 a1);
void r283clone_clashes(T283* C);
void r283make_items(T283* C,T2 a1);
void r283move_all_cursors_after(T283* C);
void r283add_traversing_cursor(T283* C,T0* a1);
T6 r283se_assigned_from(T0* a1);
T0* r283clone(T0* a1);
T6 r283same_type(T283* C,T0* a1);
void r283slots_wipe_out(T283* C);
void r283clashes_wipe_out(T283* C);
void r283clone_items(T283* C);
T6 r283conforms_to(T283* C,T0* a1);
T6 r283has(T283* C,T2 a1);
void r283make_keys(T283* C,T2 a1);
T2 r283hash_position(T283* C,T2 a1);
void r283items_wipe_out(T283* C);
void r283clone_keys(T283* C);
void r283make_with_equality_testers(T283* C,T2 a1,T0* a2,T0* a3);
T6 r283cursor_same_position(T0* a1,T0* a2);
T0* r283twin(T283* C);
void r283keys_wipe_out(T283* C);
T0* r283new_cursor(T283* C);
void r283make_slots(T283* C,T2 a1);
T2 r283new_modulus(T2 a1);
T6 r283cursor_off(T0* a1);
T6 r261is_equal(T261* C,T0* a1);
T6 r261se_assigned_from(T0* a1);
T6 r261conforms_to(T261* C,T0* a1);
T6 r261test(T0* a1,T0* a2);
T0* r261twin(T261* C);
void r410copy(T410* C,T0* a1);
T6 r410is_equal(T410* C,T0* a1);
T6 r410same_position(T410* C,T0* a1);
T6 r410se_assigned_from(T0* a1);
T6 r410same_type(T410* C,T0* a1);
void r410make(T410* C,T0* a1);
T6 r410off(T410* C);
T6 r410conforms_to(T410* C,T0* a1);
T0* r410twin(T410* C);
void r248copy(T248* C,T0* a1);
T0* r248keys_item(T248* C,T2 a1);
void r248make_clashes(T248* C,T2 a1);
T0* r248cursor_item(T248* C,T0* a1);
void r248search_position(T248* C,T0* a1);
T6 r248is_equal(T248* C,T0* a1);
void r248remove_traversing_cursor(T248* C,T0* a1);
void r248clone_slots(T248* C);
T0* r248item(T248* C,T0* a1);
void r248clone_clashes(T248* C);
void r248move_all_cursors_after(T248* C);
void r248make_items(T248* C,T2 a1);
void r248add_traversing_cursor(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
T0* r248clone(T0* a1);
T6 r248same_type(T248* C,T0* a1);
void r248make(T248* C,T2 a1);
void r248clone_items(T248* C);
T6 r248cursor_after(T0* a1);
T6 r248conforms_to(T248* C,T0* a1);
T6 r248has(T248* C,T0* a1);
void r248make_keys(T248* C,T2 a1);
T2 r248hash_position(T248* C,T0* a1);
void r248cursor_forth(T248* C,T0* a1);
void r248clone_keys(T248* C);
void r248make_with_equality_testers(T248* C,T2 a1,T0* a2,T0* a3);
T6 r248cursor_same_position(T0* a1,T0* a2);
void r248cursor_start(T248* C,T0* a1);
T0* r248twin(T248* C);
T0* r248new_cursor(T248* C);
void r248make_slots(T248* C,T2 a1);
T2 r248new_modulus(T2 a1);
T6 r248cursor_off(T0* a1);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T0* r532make(T2 a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532resize(T0* a1,T2 a2);
T0* r532twin(T532* C);
void r529copy(T529* C,T0* a1);
T6 r529is_equal(T529* C,T0* a1);
T6 r529same_position(T529* C,T0* a1);
T6 r529se_assigned_from(T0* a1);
T6 r529same_type(T529* C,T0* a1);
T6 r529off(T529* C);
T6 r529conforms_to(T529* C,T0* a1);
T0* r529twin(T529* C);
void r391copy(T391* C,T0* a1);
T6 r391is_equal(T391* C,T0* a1);
void r391remove_traversing_cursor(T391* C,T0* a1);
void r391move_all_cursors_after(T391* C);
void r391add_traversing_cursor(T391* C,T0* a1);
T6 r391se_assigned_from(T0* a1);
T0* r391clone(T0* a1);
T6 r391cursor_before(T0* a1);
T6 r391same_type(T391* C,T0* a1);
void r391make(T391* C,T2 a1);
T6 r391cursor_after(T0* a1);
T6 r391conforms_to(T391* C,T0* a1);
T6 r391cursor_same_position(T0* a1,T0* a2);
T0* r391twin(T391* C);
T0* r391new_cursor(T391* C);
T6 r391cursor_off(T0* a1);
void r400copy(T400* C,T0* a1);
T6 r400is_equal(T400* C,T0* a1);
T6 r400same_position(T400* C,T0* a1);
T6 r400se_assigned_from(T0* a1);
T6 r400same_type(T400* C,T0* a1);
T6 r400off(T400* C);
T6 r400conforms_to(T400* C,T0* a1);
T0* r400twin(T400* C);
void r60copy(T60* C,T0* a1);
T6 r60is_equal(T60* C,T0* a1);
void r60remove_traversing_cursor(T60* C,T0* a1);
void r60move_all_cursors_after(T60* C);
void r60add_traversing_cursor(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
T6 r60same_type(T60* C,T0* a1);
void r60make(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
void r60cursor_forth(T60* C,T0* a1);
void r60cursor_start(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60force_last(T60* C,T0* a1);
T0* r60new_cursor(T60* C);
T6 r60cursor_off(T0* a1);
void r346copy(T346* C,T0* a1);
T0* r346keys_item(T346* C,T2 a1);
void r346make_clashes(T346* C,T2 a1);
void r346search_position(T346* C,T0* a1);
T6 r346is_equal(T346* C,T0* a1);
void r346remove_traversing_cursor(T346* C,T0* a1);
void r346clone_slots(T346* C);
T0* r346item(T346* C,T0* a1);
void r346clone_clashes(T346* C);
void r346move_all_cursors_after(T346* C);
void r346make_items(T346* C,T2 a1);
void r346add_traversing_cursor(T346* C,T0* a1);
T6 r346se_assigned_from(T0* a1);
T0* r346clone(T0* a1);
T6 r346same_type(T346* C,T0* a1);
void r346make(T346* C,T2 a1);
void r346clone_items(T346* C);
T6 r346conforms_to(T346* C,T0* a1);
T6 r346has(T346* C,T0* a1);
void r346make_keys(T346* C,T2 a1);
T2 r346hash_position(T346* C,T0* a1);
void r346clone_keys(T346* C);
void r346make_with_equality_testers(T346* C,T2 a1,T0* a2,T0* a3);
T6 r346cursor_same_position(T0* a1,T0* a2);
T0* r346twin(T346* C);
T0* r346new_cursor(T346* C);
void r346make_slots(T346* C,T2 a1);
T2 r346new_modulus(T2 a1);
T6 r346cursor_off(T0* a1);
T6 r718is_equal(T718* C,T0* a1);
T6 r718se_assigned_from(T0* a1);
void r718make(T718* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r718conforms_to(T718* C,T0* a1);
T0* r718twin(T718* C);
T6 r481is_equal(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
void r481make(T481* C,T0* a1,T2 a2,T2 a3);
T6 r481conforms_to(T481* C,T0* a1);
T0* r481twin(T481* C);
T6 r562is_equal(T562* C,T0* a1);
T6 r562se_assigned_from(T0* a1);
extern T0*oBC21Arguments;
extern int fBC21Arguments;
T0* r562Arguments(void);
void r562make(T562* C,T0* a1,T0* a2,T0* a3);
T0* r562message(T562* C,T0* a1);
T6 r562conforms_to(T562* C,T0* a1);
T0* r562twin(T562* C);
T0* r562default_message(T562* C);
extern T0*oBC82STRING_;
T6 r663is_equal(T663* C,T0* a1);
T6 r663se_assigned_from(T0* a1);
T0* r663Arguments(void);
void r663make(T663* C,T0* a1,T0* a2,T0* a3);
T0* r663message(T663* C,T0* a1);
T6 r663conforms_to(T663* C,T0* a1);
T0* r663twin(T663* C);
T0* r663default_message(T663* C);
T6 r569is_equal(T569* C,T0* a1);
T0* r569new_tree_parser(T569* C);
T6 r569se_assigned_from(T0* a1);
T0* r569new_tree_parser_imp(T569* C);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569twin(T569* C);
T6 r535is_expression_true(T535* C,T0* a1);
T6 r535should_strip_element(T535* C,T0* a1);
T6 r535is_equal(T535* C,T0* a1);
T6 r535se_assigned_from(T0* a1);
void r535preprocess_composite(T535* C,T0* a1);
extern T0*oBC167uc_equal;
extern int fBC167uc_equal;
T0* r535uc_equal(void);
extern T0*oBC167uc_unless;
extern int fBC167uc_unless;
T0* r535uc_unless(void);
extern T0*oBC167uc_if;
extern int fBC167uc_if;
T0* r535uc_if(void);
T6 r535conforms_to(T535* C,T0* a1);
T0* r535twin(T535* C);
void r535expand_attribute_variables(T535* C,T0* a1);
T6 r565is_equal(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
T0* r565Arguments(void);
void r565make(T565* C);
T0* r565message(T565* C,T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565twin(T565* C);
T0* r565default_message(T565* C);
T6 r633is_equal(T633* C,T0* a1);
T6 r633se_assigned_from(T0* a1);
void r633make(T633* C,T0* a1);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
extern T0*oBC167uc_cluster;
extern int fBC167uc_cluster;
T0* r534uc_cluster(void);
void r534parse_file(T534* C,T0* a1);
void r534make_with_factory(T534* C,T0* a1,T0* a2);
T0* r534twin(T534* C);
extern T0*oBC167uc_system;
extern int fBC167uc_system;
T0* r534uc_system(void);
extern T0*oBC76INPUT_STREAM_;
T6 r168is_equal(T168* C,T0* a1);
T6 r168se_assigned_from(T0* a1);
T6 r168conforms_to(T168* C,T0* a1);
T0* r168uc_cluster(void);
void r168parse_file(T168* C,T0* a1);
void r168make_with_factory(T168* C,T0* a1,T0* a2);
T0* r168twin(T168* C);
T0* r168uc_system(void);
T6 r197is_equal(T197* C,T0* a1);
T6 r197se_assigned_from(T0* a1);
void r197unmount_root(T197* C,T0* a1);
void r197make(T197* C,T0* a1);
void r197mount(T197* C,T0* a1);
T6 r197conforms_to(T197* C,T0* a1);
void r197unmount(T197* C);
T0* r197twin(T197* C);
void r197mount_root(T197* C,T0* a1);
void r202set_optimize(T202* C,T6 a1);
T6 r202is_equal(T202* C,T0* a1);
void r202set_ensure(T202* C,T6 a1);
T6 r202se_assigned_from(T0* a1);
void r202make(T202* C);
void r202set_check(T202* C,T6 a1);
T6 r202conforms_to(T202* C,T0* a1);
void r202set_invariant(T202* C,T6 a1);
void r202set_loop(T202* C,T6 a1);
void r202set_debug(T202* C,T6 a1);
T0* r202twin(T202* C);
void r202set_require(T202* C,T6 a1);
T6 r233is_equal(T233* C,T0* a1);
T6 r233se_assigned_from(T0* a1);
void r233make(T233* C,T0* a1,T2 a2,T0* a3);
T6 r233conforms_to(T233* C,T0* a1);
T0* r233twin(T233* C);
T6 r201has_exported_features(T201* C);
T6 r201is_equal(T201* C,T0* a1);
T6 r201se_assigned_from(T0* a1);
void r201merge(T201* C,T0* a1);
void r201make(T201* C);
T6 r201is_empty(T201* C);
T6 r201conforms_to(T201* C,T0* a1);
T0* r201cloned_externals(T201* C);
T6 r201has_include_directories(T201* C);
T6 r201has_link_libraries(T201* C);
T0* r201twin(T201* C);
T6 r206is_equal(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
extern T0*oBC34std;
T6 r206conforms_to(T206* C,T0* a1);
T0* r206twin(T206* C);
void r206make_standard(T206* C);
T6 r486is_equal(T486* C,T0* a1);
T6 r486se_assigned_from(T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
void r541put(T541* C,T0* a1,T0* a2);
T6 r541is_equal(T541* C,T0* a1);
T0* r541item(T541* C,T0* a1);
T6 r541se_assigned_from(T0* a1);
void r541make(T541* C);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541twin(T541* C);
T6 r169is_equal(T169* C,T0* a1);
T6 r169se_assigned_from(T0* a1);
T6 r169conforms_to(T169* C,T0* a1);
T0* r169uc_cluster(void);
void r169parse_file(T169* C,T0* a1);
void r169make_with_factory(T169* C,T0* a1,T0* a2);
T0* r169twin(T169* C);
T0* r169uc_system(void);
T6 r680is_equal(T680* C,T0* a1);
T6 r680se_assigned_from(T0* a1);
void r680read_character(T680* C);
void r680make(T680* C);
T6 r680conforms_to(T680* C,T0* a1);
T6 r680end_of_file(T680* C);
T0* r680twin(T680* C);
T6 r480is_equal(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
void r480make(T480* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T6 r611is_equal(T611* C,T0* a1);
T6 r611se_assigned_from(T0* a1);
T6 r611conforms_to(T611* C,T0* a1);
T6 r611is_undefined(T611* C);
T0* r611twin(T611* C);
T6 r716is_equal(T716* C,T0* a1);
T6 r716se_assigned_from(T0* a1);
void r716make(T716* C,T0* a1,T0* a2);
T6 r716conforms_to(T716* C,T0* a1);
T0* r716twin(T716* C);
T6 r564is_equal(T564* C,T0* a1);
T6 r564se_assigned_from(T0* a1);
T0* r564Arguments(void);
void r564make(T564* C,T0* a1);
T0* r564message(T564* C,T0* a1);
T6 r564conforms_to(T564* C,T0* a1);
T0* r564twin(T564* C);
T0* r564default_message(T564* C);
T0* r205new_class(T0* a1,T2 a2,T0* a3);
T6 r205is_equal(T205* C,T0* a1);
T6 r205se_assigned_from(T0* a1);
T6 r205conforms_to(T205* C,T0* a1);
T0* r205twin(T205* C);
void r113print_cluster(T113* C,T0* a1,T0* a2);
T6 r113is_equal(T113* C,T0* a1);
T6 r113se_assigned_from(T0* a1);
void r113print_ace_file(T113* C,T0* a1,T0* a2);
void r113print_exported_class(T0* a1,T2 a2,T0* a3);
void r113print_clusters(T113* C,T0* a1,T0* a2);
void r113generate(T113* C,T0* a1);
T6 r113conforms_to(T113* C,T0* a1);
T0* r113twin(T113* C);
void r113print_options(T0* a1,T2 a2,T0* a3);
void r113print_indentation(T2 a1,T0* a2);
void r113print_link_libraries(T0* a1,T0* a2);
void r113print_include_directories(T0* a1,T0* a2);
T6 r517is_equal(T517* C,T0* a1);
T516 r517item(T517* C);
T6 r517se_assigned_from(T0* a1);
T6 r517conforms_to(T517* C,T0* a1);
void r517make_from_character(T517* C,T3 a1);
T0* r517twin(T517* C);
T6 r715is_equal(T715* C,T0* a1);
T6 r715se_assigned_from(T0* a1);
void r715make_from_implementation(T715* C,T0* a1);
T6 r715conforms_to(T715* C,T0* a1);
T0* r715twin(T715* C);
void r575set_last_cell(T575* C,T0* a1);
void r575copy(T575* C,T0* a1);
void r575wipe_out(T575* C);
void r575remove_first(T575* C);
T0* r575cursor_item(T0* a1);
T6 r575cursor_is_last(T575* C,T0* a1);
T6 r575is_equal(T575* C,T0* a1);
void r575remove_traversing_cursor(T575* C,T0* a1);
void r575cursor_go_after(T575* C,T0* a1);
void r575move_all_cursors_after(T575* C);
void r575add_traversing_cursor(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
T6 r575cursor_before(T0* a1);
T6 r575same_type(T575* C,T0* a1);
void r575make(T575* C);
T0* r575first_element(T575* C);
void r575remove_last(T575* C);
T6 r575cursor_after(T0* a1);
T6 r575conforms_to(T575* C,T0* a1);
void r575cursor_forth(T575* C,T0* a1);
void r575move_last_cursors_after(T575* C);
void r575cursor_start(T575* C,T0* a1);
T0* r575twin(T575* C);
T0* r575new_cursor(T575* C);
T6 r575cursor_is_first(T575* C,T0* a1);
void r575remove_at_cursor(T575* C,T0* a1);
void r575put_last(T575* C,T0* a1);
void r575move_all_cursors(T575* C,T0* a1,T0* a2);
T6 r575cursor_off(T0* a1);
extern T0*oBC91template_expander;
T6 r90is_equal(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
void r90make(T90* C);
T6 r90conforms_to(T90* C,T0* a1);
T0* r90twin(T90* C);
T0* r90expanded_variables(T90* C,T0* a1);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
void r128make(T128* C,T0* a1,T0* a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128execute(T128* C);
T0* r128twin(T128* C);
T6 r707is_equal(T707* C,T0* a1);
T6 r707se_assigned_from(T0* a1);
void r707make(T707* C,T0* a1,T0* a2);
T6 r707conforms_to(T707* C,T0* a1);
T0* r707twin(T707* C);
T6 r79is_equal(T79* C,T0* a1);
T6 r79se_assigned_from(T0* a1);
T0* r79Arguments(void);
void r79make(T79* C,T0* a1);
T0* r79message(T79* C,T0* a1);
T6 r79conforms_to(T79* C,T0* a1);
T0* r79twin(T79* C);
T0* r79default_message(T79* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
void r75execute_generators(T75* C,T0* a1);
void r75make(T75* C,T0* a1,T0* a2);
T6 r75conforms_to(T75* C,T0* a1);
void r75execute(T75* C);
T0* r75twin(T75* C);
void r75_30Pmake(T75* C,T0* a1,T0* a2);
void r89print_cluster(T89* C,T0* a1,T0* a2);
T6 r89is_equal(T89* C,T0* a1);
T6 r89se_assigned_from(T0* a1);
void r89print_ace_file(T89* C,T0* a1,T0* a2);
void r89generate_cecil_file(T89* C,T0* a1);
void r89print_exported_class(T0* a1,T0* a2);
void r89print_clusters(T89* C,T0* a1,T0* a2);
void r89generate(T89* C,T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T0* r89twin(T89* C);
void r89print_options(T0* a1,T2 a2,T0* a3);
void r89print_exported_classes(T0* a1,T0* a2);
void r89print_indentation(T2 a1,T0* a2);
void r89print_link_libraries(T0* a1,T0* a2);
void r89print_include_directories(T0* a1,T0* a2);
T6 r709is_equal(T709* C,T0* a1);
T6 r709se_assigned_from(T0* a1);
void r709make_from_implementation(T709* C,T0* a1);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
T6 r671is_equal(T671* C,T0* a1);
T6 r671se_assigned_from(T0* a1);
T0* r671Arguments(void);
void r671make(T671* C,T0* a1);
T0* r671message(T671* C,T0* a1);
T6 r671conforms_to(T671* C,T0* a1);
T0* r671twin(T671* C);
T0* r671default_message(T671* C);
T6 r198is_equal(T198* C,T0* a1);
T6 r198se_assigned_from(T0* a1);
void r198unmount_root(T198* C,T0* a1);
void r198make(T198* C,T0* a1,T0* a2);
void r198mount(T198* C,T0* a1);
T6 r198conforms_to(T198* C,T0* a1);
void r198unmount(T198* C);
T0* r198twin(T198* C);
void r198set_excluded(T198* C,T0* a1);
void r198mount_root(T198* C,T0* a1);
void r456yy_build_tables(T456* C);
extern T0*oBC457yy_meta_template;
extern int fBC457yy_meta_template;
T0* r456yy_meta_template(void);
extern T0*oBC456yycheck_template;
extern int fBC456yycheck_template;
T0* r456yycheck_template(void);
T6 r456is_equal(T456* C,T0* a1);
extern T0*oBC457yy_accept_template;
extern int fBC457yy_accept_template;
T0* r456yy_accept_template(void);
extern T0*oBC457yy_base_template;
extern int fBC457yy_base_template;
T0* r456yy_base_template(void);
void r456yy_build_parser_tables(T456* C);
T6 r456se_assigned_from(T0* a1);
extern T0*oBC456yytable_template;
extern int fBC456yytable_template;
T0* r456yytable_template(void);
T0* r456yyfixed_array(T0* a1);
extern T0*oBC456yypgoto_template;
extern int fBC456yypgoto_template;
T0* r456yypgoto_template(void);
extern T0*oBC466Empty_buffer;
extern int fBC466Empty_buffer;
T0* r456Empty_buffer(void);
void r456yy_set_content(T456* C,T0* a1);
extern T0*oBC457yy_nxt_template;
extern int fBC457yy_nxt_template;
T0* r456yy_nxt_template(void);
extern T0*oBC457yy_chk_template;
extern int fBC457yy_chk_template;
T0* r456yy_chk_template(void);
extern T0*oBC456yypact_template;
extern int fBC456yypact_template;
T0* r456yypact_template(void);
void r456make_parser_skeleton(T456* C);
extern T0*oBC456yydefact_template;
extern int fBC456yydefact_template;
T0* r456yydefact_template(void);
extern T0*oBC457yy_def_template;
extern int fBC457yy_def_template;
T0* r456yy_def_template(void);
T6 r456conforms_to(T456* C,T0* a1);
extern T0*oBC457yy_ec_template;
extern int fBC457yy_ec_template;
T0* r456yy_ec_template(void);
void r456make_with_buffer(T456* C,T0* a1);
void r456yy_initialize(T456* C);
extern T0*oBC456yyr1_template;
extern int fBC456yyr1_template;
T0* r456yyr1_template(void);
void r456make_with_factory(T456* C,T0* a1,T0* a2,T0* a3);
T0* r456twin(T456* C);
void r456yy_load_input_buffer(T456* C);
extern T0*oBC456yytranslate_template;
extern int fBC456yytranslate_template;
T0* r456yytranslate_template(void);
T0* r456yy_fixed_array(T0* a1);
extern T0*oBC456yyr2_template;
extern int fBC456yyr2_template;
T0* r456yyr2_template(void);
extern T0*oBC456yydefgoto_template;
extern int fBC456yydefgoto_template;
T0* r456yydefgoto_template(void);
void r456make_eiffel_scanner(T456* C,T0* a1,T0* a2);
T6 r237is_equal(T237* C,T0* a1);
T6 r237se_assigned_from(T0* a1);
void r237make(T237* C,T0* a1,T0* a2);
T6 r237conforms_to(T237* C,T0* a1);
T0* r237twin(T237* C);
T6 r163is_equal(T163* C,T0* a1);
T6 r163se_assigned_from(T0* a1);
T6 r163conforms_to(T163* C,T0* a1);
void r163make_basic_classes(T163* C);
T0* r163eiffel_class(T163* C,T0* a1);
void r163set_mounted_clusters(T163* C,T0* a1);
void r163make_with_factory(T163* C,T0* a1,T0* a2,T0* a3);
T0* r163twin(T163* C);
void r163merge_externals(T163* C);
extern T0*oBC167uc_optimize;
extern int fBC167uc_optimize;
T0* r181uc_optimize(void);
void r181validate_named_cluster(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_check;
extern int fBC167uc_check;
T0* r181uc_check(void);
void r181validate_root(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_external;
extern int fBC167uc_external;
T0* r181uc_external(void);
void r181validate_external(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_exclude;
extern int fBC167uc_exclude;
T0* r181uc_exclude(void);
void r181validate_mount(T181* C,T0* a1,T0* a2);
T6 r181is_equal(T181* C,T0* a1);
void r181validate_system_doc(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_invariant;
extern int fBC167uc_invariant;
T0* r181uc_invariant(void);
T6 r181se_assigned_from(T0* a1);
void r181validate_cluster(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_description;
extern int fBC167uc_description;
T0* r181uc_description(void);
extern T0*oBC167uc_mount;
extern int fBC167uc_mount;
T0* r181uc_mount(void);
extern T0*oBC167uc_debug;
extern int fBC167uc_debug;
T0* r181uc_debug(void);
extern T0*oBC167uc_option;
extern int fBC167uc_option;
T0* r181uc_option(void);
extern T0*oBC167uc_root;
extern int fBC167uc_root;
T0* r181uc_root(void);
void r181validate_system(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_feature;
extern int fBC167uc_feature;
T0* r181uc_feature(void);
extern T0*oBC167uc_class;
extern int fBC167uc_class;
T0* r181uc_class(void);
extern T0*oBC167uc_loop;
extern int fBC167uc_loop;
T0* r181uc_loop(void);
T6 r181conforms_to(T181* C,T0* a1);
void r181validate_cluster_doc(T181* C,T0* a1,T0* a2);
void r181validate_export(T181* C,T0* a1,T0* a2);
T0* r181uc_cluster(void);
void r181validate_exclude(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_export;
extern int fBC167uc_export;
T0* r181uc_export(void);
extern T0*oBC167uc_link_library;
extern int fBC167uc_link_library;
T0* r181uc_link_library(void);
extern T0*oBC167uc_include_dir;
extern int fBC167uc_include_dir;
T0* r181uc_include_dir(void);
extern T0*oBC167uc_location;
extern int fBC167uc_location;
T0* r181uc_location(void);
T0* r181twin(T181* C);
T0* r181uc_system(void);
extern T0*oBC167uc_creation;
extern int fBC167uc_creation;
T0* r181uc_creation(void);
extern T0*oBC167uc_name;
extern int fBC167uc_name;
T0* r181uc_name(void);
extern T0*oBC167uc_require;
extern int fBC167uc_require;
T0* r181uc_require(void);
void r181validate_option(T181* C,T0* a1,T0* a2);
extern T0*oBC167uc_ensure;
extern int fBC167uc_ensure;
T0* r181uc_ensure(void);
void r115print_cluster(T115* C,T0* a1,T0* a2);
T6 r115is_equal(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
void r115print_ace_file(T115* C,T0* a1,T0* a2);
void r115print_exported_class(T0* a1,T2 a2,T0* a3);
void r115print_component(T0* a1);
void r115print_clusters(T115* C,T0* a1,T0* a2);
void r115generate(T115* C,T0* a1);
T6 r115conforms_to(T115* C,T0* a1);
T0* r115twin(T115* C);
void r115print_options(T0* a1,T2 a2,T0* a3);
void r115print_indentation(T2 a1,T0* a2);
void r115print_link_libraries(T0* a1,T0* a2);
void r115print_include_directories(T0* a1,T0* a2);
T6 r559is_equal(T559* C,T0* a1);
T6 r559se_assigned_from(T0* a1);
T0* r559Arguments(void);
void r559make(T559* C,T0* a1,T0* a2,T0* a3);
T0* r559message(T559* C,T0* a1);
T6 r559conforms_to(T559* C,T0* a1);
T0* r559twin(T559* C);
T0* r559default_message(T559* C);
T6 r665is_equal(T665* C,T0* a1);
T6 r665se_assigned_from(T0* a1);
T0* r665Arguments(void);
void r665make(T665* C,T0* a1);
T0* r665message(T665* C,T0* a1);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
T0* r665default_message(T665* C);
T6 r540is_equal(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
T6 r540conforms_to(T540* C,T0* a1);
T0* r540expand_from_hash_table(T0* a1,T0* a2);
T0* r540twin(T540* C);
void r171disconnect(T171* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
void r171read_character(T171* C);
T6 r171conforms_to(T171* C,T0* a1);
T6 r171end_of_input(T171* C);
void r171connect_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T6 r666is_closed(T666* C);
T6 r666is_equal(T666* C,T0* a1);
T6 r666se_assigned_from(T0* a1);
void r666do_close(T666* C);
void r666close(T666* C);
void r666make(T666* C,T0* a1);
T6 r666conforms_to(T666* C,T0* a1);
void r666connect_to(T666* C,T0* a1);
T0* r666twin(T666* C);
void r666open_write(T666* C);
void r666put_string(T666* C,T0* a1);
void r478set_position(T478* C,T2 a1,T2 a2,T2 a3);
T6 r478is_equal(T478* C,T0* a1);
extern T2 oBC478lower;
extern int fBC478lower;
T2 r478lower(void);
T6 r478se_assigned_from(T0* a1);
void r478make(T478* C,T0* a1);
extern T0*oBC175STRING_BUFFER_;
T6 r478conforms_to(T478* C,T0* a1);
void r478make_from_buffer(T478* C,T0* a1);
T0* r478twin(T478* C);
extern T0*oBC512utils;
T2 r512item_code(T512* C,T2 a1);
T6 r512is_equal(T512* C,T0* a1);
T6 r512se_assigned_from(T0* a1);
void r512make(T512* C);
void r512insert(T512* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r512add_to_storage_count(T512* C,T2 a1);
void r512insert_code(T512* C,T2 a1,T2 a2);
T6 r512conforms_to(T512* C,T0* a1);
extern T6 oBC512optimize_access;
void r512storage_move(T512* C,T2 a1,T2 a2,T2 a3);
T0* r512twin(T512* C);
void r512find_position(T512* C,T2 a1);
T6 r484same_identifier(T484* C,T0* a1);
T6 r484is_equal(T484* C,T0* a1);
T6 r484se_assigned_from(T0* a1);
T6 r484same_type(T484* C,T0* a1);
void r484make(T484* C,T0* a1,T0* a2);
T6 r484same_feature_name(T484* C,T0* a1);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
T6 r232is_equal(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
void r232make(T232* C,T0* a1);
T6 r232conforms_to(T232* C,T0* a1);
void r232set_current_class(T232* C,T0* a1);
T0* r232twin(T232* C);
T6 r182is_equal(T182* C,T0* a1);
T6 r182se_assigned_from(T0* a1);
void r182make_from_implementation(T182* C,T0* a1);
T6 r182conforms_to(T182* C,T0* a1);
T0* r182twin(T182* C);
T6 r182cursor_off(T182* C,T0* a1);
void r182_177Pmake_from_implementation(T182* C,T0* a1);
void r114print_cluster(T114* C,T0* a1,T0* a2);
void r114print_esd_file(T114* C,T0* a1,T0* a2);
T6 r114is_equal(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
void r114print_clusters(T114* C,T0* a1,T0* a2);
T0* r114remove_all_characters(T0* a1,T3 a2);
void r114generate(T114* C,T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T0* r114twin(T114* C);
void r114print_indentation(T2 a1,T0* a2);
T0* r511create_representation(T511* C);
T6 r511is_equal(T511* C,T0* a1);
T6 r511se_assigned_from(T0* a1);
T6 r511conforms_to(T511* C,T0* a1);
T0* r511twin(T511* C);
T6 r566is_equal(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T0* r566Arguments(void);
void r566make(T566* C,T0* a1);
T0* r566message(T566* C,T0* a1);
T6 r566conforms_to(T566* C,T0* a1);
T0* r566twin(T566* C);
T0* r566default_message(T566* C);
T6 r488is_equal(T488* C,T0* a1);
T6 r488se_assigned_from(T0* a1);
void r488make(T488* C,T0* a1,T0* a2);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488twin(T488* C);
T0* r199split_on_first(T0* a1,T3 a2);
T6 r199is_equal(T199* C,T0* a1);
void r199remove_cluster(T199* C,T0* a1);
T6 r199se_assigned_from(T0* a1);
T0* r199clone(T0* a1);
void r199make_empty(T199* C);
void r199make(T199* C,T0* a1);
void r199set_parent(T199* C,T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199twin(T199* C);
T0* r199split_string(T0* a1,T3 a2);
void r199merge_externals(T199* C,T0* a1);
T6 r711is_equal(T711* C,T0* a1);
T6 r711se_assigned_from(T0* a1);
void r711make(T711* C,T0* a1,T0* a2);
T6 r711conforms_to(T711* C,T0* a1);
T0* r711twin(T711* C);
T0* r165uc_optimize(void);
T0* r165uc_check(void);
T0* r165uc_external(void);
T0* r165uc_exclude(void);
T0* r165new_cluster(T165* C,T0* a1);
T0* r165new_exported_feature(T0* a1);
T6 r165is_equal(T165* C,T0* a1);
T0* r165new_export(T0* a1);
T0* r165uc_invariant(void);
T6 r165se_assigned_from(T0* a1);
T0* r165new_options(T0* a1);
T0* r165new_universe(T165* C,T0* a1);
T6 r165is_false(T0* a1);
T0* r165uc_mount(void);
T0* r165uc_debug(void);
T0* r165uc_option(void);
void r165make(T165* C,T0* a1,T0* a2);
T0* r165uc_root(void);
extern T0*oBC166Execution_environment;
T0* r165uc_feature(void);
T0* r165uc_class(void);
T0* r165uc_loop(void);
T6 r165conforms_to(T165* C,T0* a1);
extern T0*oBC167uc_abstract;
extern int fBC167uc_abstract;
T0* r165uc_abstract(void);
T0* r165new_externals(T0* a1);
extern T0*oBC167uc_alias;
extern int fBC167uc_alias;
T0* r165uc_alias(void);
T0* r165uc_cluster(void);
extern T0*oBC167uc_enable;
extern int fBC167uc_enable;
T0* r165uc_enable(void);
T0* r165uc_export(void);
T0* r165uc_link_library(void);
T6 r165is_true(T0* a1);
T0* r165uc_include_dir(void);
T0* r165uc_location(void);
T0* r165twin(T165* C);
T0* r165new_mount(T165* C,T0* a1);
T0* r165uc_creation(void);
T0* r165uc_require(void);
T0* r165uc_name(void);
T0* r165uc_ensure(void);
void r578copy(T578* C,T0* a1);
void r578make_clashes(T578* C,T2 a1);
void r578search_position(T578* C,T0* a1);
T6 r578is_equal(T578* C,T0* a1);
void r578remove_traversing_cursor(T578* C,T0* a1);
void r578clone_slots(T578* C);
T0* r578item(T578* C,T0* a1);
void r578clone_clashes(T578* C);
void r578move_all_cursors_after(T578* C);
void r578make_items(T578* C,T2 a1);
void r578add_traversing_cursor(T578* C,T0* a1);
T6 r578se_assigned_from(T0* a1);
T0* r578clone(T0* a1);
T6 r578same_type(T578* C,T0* a1);
void r578make(T578* C,T2 a1);
void r578clone_items(T578* C);
T6 r578conforms_to(T578* C,T0* a1);
T6 r578has(T578* C,T0* a1);
void r578make_keys(T578* C,T2 a1);
T2 r578hash_position(T578* C,T0* a1);
void r578clone_keys(T578* C);
void r578make_with_equality_testers(T578* C,T2 a1,T0* a2,T0* a3);
T6 r578cursor_same_position(T0* a1,T0* a2);
T0* r578twin(T578* C);
T0* r578new_cursor(T578* C);
void r578make_slots(T578* C,T2 a1);
T2 r578new_modulus(T2 a1);
T6 r578cursor_off(T0* a1);
T6 r563is_equal(T563* C,T0* a1);
T6 r563se_assigned_from(T0* a1);
T0* r563Arguments(void);
void r563make(T563* C,T0* a1,T0* a2);
T0* r563message(T563* C,T0* a1);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563twin(T563* C);
T0* r563default_message(T563* C);
void r196copy(T196* C,T0* a1);
T0* r196substring(T196* C,T2 a1,T2 a2);
T2 r196occurrences(T196* C,T516 a1);
T2 r196count(T196* C);
T2 r196item_code(T196* C,T2 a1);
T6 r196is_equal(T196* C,T0* a1);
T516 r196item(T196* C,T2 a1);
extern T0*oBC196utf8utils;
T6 r196se_assigned_from(T0* a1);
void r196make_from_string(T196* C,T0* a1);
T2 r196index_of(T196* C,T516 a1,T2 a2);
void r196make(T196* C,T2 a1);
void r196append_string(T196* C,T0* a1);
T2 r196hash_code(T196* C);
T6 r196conforms_to(T196* C,T0* a1);
void r196append_ucc_code(T196* C,T2 a1);
T6 r196empty(T196* C);
T0* r196twin(T196* C);
T0* r196to_utf8(T196* C);
T2 r196three_way_comparison(T196* C,T0* a1);
extern T0*oBC196i_settings;
void r196make_from_utf8(T196* C,T0* a1);
T6 r710is_equal(T710* C,T0* a1);
T6 r710se_assigned_from(T0* a1);
void r710make_from_implementation(T710* C,T0* a1);
T6 r710conforms_to(T710* C,T0* a1);
T0* r710twin(T710* C);
void r713set_last_cell(T713* C,T0* a1);
void r713copy(T713* C,T0* a1);
void r713wipe_out(T713* C);
void r713remove_first(T713* C);
T0* r713cursor_item(T0* a1);
T6 r713cursor_is_last(T713* C,T0* a1);
void r713add_attributes(T713* C,T0* a1,T0* a2);
T6 r713is_equal(T713* C,T0* a1);
void r713remove_traversing_cursor(T713* C,T0* a1);
void r713make_root(T713* C,T0* a1,T0* a2);
void r713cursor_go_after(T713* C,T0* a1);
void r713move_all_cursors_after(T713* C);
void r713add_traversing_cursor(T713* C,T0* a1);
T6 r713se_assigned_from(T0* a1);
T6 r713cursor_before(T0* a1);
void r713make_child(T713* C,T0* a1,T0* a2,T0* a3);
T6 r713same_type(T713* C,T0* a1);
void r713remove_last(T713* C);
T6 r713cursor_after(T0* a1);
T6 r713conforms_to(T713* C,T0* a1);
void r713cursor_forth(T713* C,T0* a1);
void r713move_last_cursors_after(T713* C);
void r713cursor_start(T713* C,T0* a1);
T0* r713twin(T713* C);
void r713force_last(T713* C,T0* a1);
T0* r713new_cursor(T713* C);
T6 r713cursor_is_first(T713* C,T0* a1);
void r713remove_at_cursor(T713* C,T0* a1);
void r713put_last(T713* C,T0* a1);
void r713move_all_cursors(T713* C,T0* a1,T0* a2);
T6 r713cursor_off(T0* a1);
T0* r705out(T705* C);
T6 r705is_equal(T705* C,T0* a1);
T6 r705se_assigned_from(T0* a1);
T0* r705clone(T0* a1);
void r705out_in_tagged_out_memory(T705* C);
T6 r705conforms_to(T705* C,T0* a1);
T0* r705twin(T705* C);
void r684fill(T684* C);
void r684compact_left(T684* C);
T2 r684count(T684* C);
void r684set_position(T684* C,T2 a1,T2 a2,T2 a3);
T6 r684is_equal(T684* C,T0* a1);
T2 r684lower(void);
T6 r684se_assigned_from(T0* a1);
void r684make_from_string(T684* C,T0* a1);
T6 r684conforms_to(T684* C,T0* a1);
void r684make_from_buffer(T684* C,T0* a1);
void r684resize(T684* C);
void r684make_with_size(T684* C,T0* a1,T2 a2);
T0* r684twin(T684* C);
void r684set_file(T684* C,T0* a1);
void r684flush(T684* C);
T6 r130is_equal(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
void r130make(T130* C);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130put_string(T130* C,T0* a1);
T0* r203full_name(T203* C,T3 a1);
void r203set_mounted_subclusters(T203* C,T0* a1);
T6 r203is_equal(T203* C,T0* a1);
void r203remove_cluster(T203* C,T0* a1);
void r203set_subclusters(T203* C,T0* a1);
T6 r203se_assigned_from(T0* a1);
void r203unmount_root(T203* C,T0* a1);
T0* r203full_pathname(T203* C);
void r203make(T203* C,T0* a1,T0* a2);
void r203mount(T203* C,T0* a1);
T6 r203conforms_to(T203* C,T0* a1);
void r203unmount(T203* C);
T0* r203twin(T203* C);
void r203merge_externals(T203* C,T0* a1);
void r203mount_root(T203* C,T0* a1);
T6 r153is_equal(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
void r153make(T153* C);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
void r153put_string(T153* C,T0* a1);
T0* r685out(T685* C);
T6 r685is_equal(T685* C,T0* a1);
T6 r685se_assigned_from(T0* a1);
T0* r685clone(T0* a1);
void r685make(T685* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r685conforms_to(T685* C,T0* a1);
T0* r685twin(T685* C);
T6 r519is_equal(T519* C,T0* a1);
T6 r519se_assigned_from(T0* a1);
void r519make_from_implementation(T519* C,T0* a1);
T6 r519conforms_to(T519* C,T0* a1);
T0* r519twin(T519* C);
T6 r648is_equal(T648* C,T0* a1);
T6 r648se_assigned_from(T0* a1);
void r648make(T648* C,T0* a1,T0* a2);
T6 r648conforms_to(T648* C,T0* a1);
T0* r648twin(T648* C);
T0* r571next_open_composite(T0* a1);
void r571enable_position_table(T571* C);
T6 r571is_equal(T571* C,T0* a1);
void r571on_content(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
void r571on_processing_instruction(T571* C,T0* a1,T0* a2);
void r571on_start_tag(T571* C,T0* a1,T0* a2,T0* a3);
void r571make_from_implementation_event(T571* C,T0* a1);
void r571make_from_implementation(T571* C,T0* a1);
void r571handle_position(T571* C,T0* a1);
void r571on_comment(T571* C,T0* a1);
void r571on_end_tag(T571* C,T0* a1,T0* a2);
T6 r571conforms_to(T571* C,T0* a1);
T0* r571twin(T571* C);
T6 r173is_equal(T173* C,T0* a1);
T6 r173se_assigned_from(T0* a1);
void r173make_from_implementation(T173* C,T0* a1);
T6 r173is_correct(T173* C);
T6 r173conforms_to(T173* C,T0* a1);
T0* r173last_error_extended_description(T173* C);
T0* r173twin(T173* C);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
void r513make(T513* C);
void r513insert(T513* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r513insert_code(T513* C,T2 a1,T2 a2);
void r513move(T513* C,T2 a1,T2 a2,T2 a3);
T6 r513conforms_to(T513* C,T0* a1);
void r513storage_ensure_capacity(T513* C,T2 a1);
T0* r513twin(T513* C);
void r185_177P_183Pmake_from_implementation(T185* C,T0* a1);
T6 r185is_equal(T185* C,T0* a1);
T6 r185has_attribute_by_name(T185* C,T0* a1);
T6 r185se_assigned_from(T0* a1);
T0* r185attribute_by_name(T185* C,T0* a1);
void r185make_from_implementation(T185* C,T0* a1);
void r185_183Pmake_from_implementation(T185* C,T0* a1);
T6 r185equal(T0* a1,T0* a2);
T6 r185conforms_to(T185* C,T0* a1);
T0* r185twin(T185* C);
T6 r185has_element_by_name(T185* C,T0* a1);
T0* r185element_by_name(T185* C,T0* a1);
T6 r185cursor_off(T185* C,T0* a1);
void r676yy_do_action(T676* C,T2 a1);
extern T0*oBC677yytable_template;
extern int fBC677yytable_template;
T0* r676yytable_template(void);
T0* r676empty_ucstring(void);
void r676make_parser_skeleton(T676* C);
T2 r676yy_at_beginning_of_line(T676* C);
void r676fatal_error(T0* a1);
T0* r676yytype1(T0* a1);
T0* r676yytype2(T0* a1);
T0* r676yytype3(T0* a1);
T0* r676yytype4(T0* a1);
void r676handle_found_text(T676* C);
void r676parse(T676* C);
void r676set_input_buffer(T676* C,T0* a1);
T2 r676yy_translate(T676* C,T2 a1);
extern T0*oBC678yy_ec_template;
extern int fBC678yy_ec_template;
T0* r676yy_ec_template(void);
void r676yy_execute_action(T676* C,T2 a1);
extern T0*oBC677yytranslate_template;
extern int fBC677yytranslate_template;
T0* r676yytranslate_template(void);
void r676clear_stacks(T676* C);
extern T0*oBC678yy_def_template;
extern int fBC678yy_def_template;
T0* r676yy_def_template(void);
void r676yy_load_input_buffer(T676* C);
extern T516 oBC677uc_collon;
extern int fBC677uc_collon;
T516 r676uc_collon(void);
extern T0*oBC677yyr1_template;
extern int fBC677yyr1_template;
T0* r676yyr1_template(void);
void r676make_with_buffer(T676* C,T0* a1);
T2 r676yy_null_trans_state(T676* C,T2 a1);
T0* r676position(T676* C);
extern T0*oBC678yy_accept_template;
extern int fBC678yy_accept_template;
T0* r676yy_accept_template(void);
void r676read_token(T676* C);
extern T0*oBC677yyr2_template;
extern int fBC677yyr2_template;
T0* r676yyr2_template(void);
T2 r676yy_previous_state(T676* C);
extern T0*oBC677yypgoto_template;
extern int fBC677yypgoto_template;
T0* r676yypgoto_template(void);
void r676yy_refill_input_buffer(T676* C);
T0* r676yy_fixed_array(T0* a1);
T6 r676conforms_to(T676* C,T0* a1);
extern T0*oBC678yy_meta_template;
extern int fBC678yy_meta_template;
T0* r676yy_meta_template(void);
extern T0*oBC678yy_base_template;
extern int fBC678yy_base_template;
T0* r676yy_base_template(void);
T0* r676twin(T676* C);
T0* r676clone(T0* a1);
T0* r676new_file_buffer(T0* a1);
void r676yy_initialize(T676* C);
T0* r676text(T676* C);
extern T0*oBC678yy_nxt_template;
extern int fBC678yy_nxt_template;
T0* r676yy_nxt_template(void);
void r676parse_from_stream(T676* C,T0* a1);
void r676yy_set_line_column(T676* C);
void r676yy_build_parser_tables(T676* C);
T0* r676split_name_and_prefix(T0* a1);
T6 r676is_equal(T676* C,T0* a1);
void r676report_error(T676* C,T0* a1);
extern T0*oBC677yydefact_template;
extern int fBC677yydefact_template;
T0* r676yydefact_template(void);
extern T0*oBC678yy_chk_template;
extern int fBC678yy_chk_template;
T0* r676yy_chk_template(void);
extern T0*oBC677yycheck_template;
extern int fBC677yycheck_template;
T0* r676yycheck_template(void);
void r676make(T676* C);
T0* r676yyfixed_array(T0* a1);
void r676yy_clear_all(T676* C);
extern T0*oBC677yydefgoto_template;
extern int fBC677yydefgoto_template;
T0* r676yydefgoto_template(void);
void r676yy_set_content(T676* C,T0* a1);
extern T0*oBC677yypact_template;
extern int fBC677yypact_template;
T0* r676yypact_template(void);
void r676set_start_condition(T676* C,T2 a1);
T6 r676se_assigned_from(T0* a1);
void r676yy_build_tables(T676* C);
T6 r65is_equal(T65* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r65command_arguments(void);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T0* r65argument(T2 a1);
T6 r568is_equal(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
void r568make(T568* C);
T6 r568conforms_to(T568* C,T0* a1);
T0* r568twin(T568* C);
void r32_33Preport_error(T32* C,T0* a1);
void r32report_missing_element_error(T32* C,T0* a1,T0* a2,T0* a3);
T6 r32is_equal(T32* C,T0* a1);
void r32report_no_parser_available_error(T32* C);
T6 r32se_assigned_from(T0* a1);
void r32report_missing_attribute_error(T32* C,T0* a1,T0* a2,T0* a3);
void r32report_cannot_write_file_error(T32* C,T0* a1);
void r32make(T32* C);
void r32report_cannot_read_file_error(T32* C,T0* a1);
void r32report_parser_error(T32* C,T0* a1);
T0* r32message(T0* a1);
T6 r32conforms_to(T32* C,T0* a1);
void r32report_not_xace_file_error(T32* C,T0* a1);
void r32report_wrong_root_element_error(T32* C,T0* a1,T0* a2);
void r32report_unknown_element_error(T32* C,T0* a1,T0* a2,T0* a3);
T0* r32twin(T32* C);
void r32report_error(T32* C,T0* a1);
extern T0*oBC129error;
extern int fBC129error;
T0* r129error(void);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
extern T0*oBC129input;
extern int fBC129input;
T0* r129input(void);
extern T0*oBC129output;
extern int fBC129output;
T0* r129output(void);
T6 r129conforms_to(T129* C,T0* a1);
T0* r129twin(T129* C);
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
extern T0*oBC42developer_exception_name_memory;
void r42raise(T42* C,T0* a1);
T6 r42is_equal(T42* C,T0* a1);
T6 r42se_assigned_from(T0* a1);
T6 r42conforms_to(T42* C,T0* a1);
T0* r42twin(T42* C);
T6 r37is_equal(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
T6 r37conforms_to(T37* C,T0* a1);
T6 r37_px_60(T37* C,T0* a1);
T0* r37twin(T37* C);
T6 r172is_equal(T172* C,T0* a1);
T6 r172se_assigned_from(T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r537is_equal(T537* C,T0* a1);
T6 r537se_assigned_from(T0* a1);
T6 r537conforms_to(T537* C,T0* a1);
T3 r537to_character(T2 a1);
T0* r537twin(T537* C);
extern T0*oBC509factory;
extern int fBC509factory;
T0* r509factory(void);
T6 r509is_equal(T509* C,T0* a1);
T6 r509se_assigned_from(T0* a1);
T6 r509conforms_to(T509* C,T0* a1);
T0* r509twin(T509* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r609is_equal(T609* C,T0* a1);
T6 r609se_assigned_from(T0* a1);
T6 r609conforms_to(T609* C,T0* a1);
T0* r609twin(T609* C);
T0* r170name(T0* a1);
T6 r170is_equal(T170* C,T0* a1);
T0* r170make_file_open_read(T0* a1);
T6 r170se_assigned_from(T0* a1);
T6 r170is_open_read(T0* a1);
void r170close(T0* a1);
T6 r170conforms_to(T170* C,T0* a1);
T6 r170end_of_input(T0* a1);
T2 r170read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r170twin(T170* C);
void r17process_system_file(T17* C,T0* a1);
T0* r17split_on_first(T0* a1,T3 a2);
T6 r17is_equal(T17* C,T0* a1);
void r17process_options(T17* C);
void r17process_arguments(T17* C);
T6 r17has_next_option_value(T17* C);
T6 r17se_assigned_from(T0* a1);
T0* r17clone(T0* a1);
T6 r17is_next_option_long_option(T17* C);
extern T0*oBC18Exceptions;
T0* r17Arguments(void);
T0* r17next_option_value(T17* C);
void r17make(T17* C);
void r17process_command(T17* C);
T6 r17is_valid_option_position(T2 a1);
T6 r17conforms_to(T17* C,T0* a1);
void r17process_define_string(T17* C,T0* a1);
void r17process_validate(T17* C);
T0* r17next_option(T17* C);
void r17process_build(T17* C);
T6 r17has_next_option(T17* C);
T0* r17twin(T17* C);
void r17process_define(T17* C);
T0* r17split_string(T0* a1,T3 a2);
void r17process_compilers(T17* C,T0* a1);
T6 r17match_long_option(T17* C,T0* a1);
void r17consume_option(T17* C);
extern T0*oBC17Usage_message;
extern int fBC17Usage_message;
T0* r17Usage_message(void);
T6 r86is_equal(T86* C,T0* a1);
T6 r86se_assigned_from(T0* a1);
T6 r86is_integer(T0* a1);
T6 r86same_case_insensitive(T0* a1,T0* a2);
T0* r86make(T2 a1);
T6 r86conforms_to(T86* C,T0* a1);
T2 r86case_insensitive_hash_code(T0* a1);
T0* r86twin(T86* C);
T6 r516_px_60(T516* C,T516 a1);
T6 r516_px_62(T516* C,T516 a1);
T6 r567is_equal(T567* C,T0* a1);
T0* r567variable_value(T567* C,T0* a1);
T6 r567se_assigned_from(T0* a1);
T0* r567get_environment_variable(T567* C,T0* a1);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567interpreted_string(T567* C,T0* a1);
T0* r567twin(T567* C);
T2 r536nr_of_following_octets(T3 a1);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
void r536read_code(T536* C,T0* a1,T2 a2);
void r536read_following_octet(T536* C,T0* a1);
void r536put_code(T2 a1,T0* a2,T2 a3);
T6 r536conforms_to(T536* C,T0* a1);
T3 r536code_to_character(T2 a1);
T2 r536octet_size(T2 a1);
T0* r536twin(T536* C);
extern T0*oBC536specific;
T6 r536is_leading_octet(T3 a1);
T2 r536read_leading_octet(T536* C,T0* a1,T2 a2);
T6 r607is_equal(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
T0* r607new_event_parser_imp(void);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
T6 r74is_equal(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
T6 r74_px_60(T74* C,T0* a1);
T0* r74twin(T74* C);
T0* r479substring(T0* a1,T2 a2,T2 a3);
T6 r479is_equal(T479* C,T0* a1);
T6 r479se_assigned_from(T0* a1);
void r479move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r479make(T2 a1);
void r479copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r479conforms_to(T479* C,T0* a1);
T0* r479resize(T0* a1,T2 a2);
T2 r479copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r479twin(T479* C);
T6 r722is_equal(T722* C,T0* a1);
T516 r722item(T722* C);
T6 r722se_assigned_from(T0* a1);
T6 r722conforms_to(T722* C,T0* a1);
T0* r722twin(T722* C);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 723
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms113_3175a;
extern T7*ms115_452889;
extern T7*ms20_270;
extern T7*ms89_1957581;
extern T7*ms115_2122613;
extern T7*ms167_399591;
extern T7*ms89_431271;
extern T7*ms113_2122613;
extern T7*ms113_2071896;
extern T7*ms114_171550;
extern T7*ms115_2259966;
extern T7*ms167_452889;
extern T7*ms663_462378139;
extern T7*ms115_3175a;
extern T7*ms113_2259966;
extern T7*ms114_3175;
extern T7*ms17_11153106;
extern T7*ms115_1957581;
extern T7*ms686_35397;
extern T7*ms113_1957581;
extern T7*ms165_79251;
extern T7*ms167_451090;
extern T7*ms115_1254606809a;
extern T7*ms17_3301;
extern T7*ms678_1173251759;
extern T7*ms686_36572;
extern T7*ms167_9558536;
extern T7*ms167_1988096;
extern T7*ms115_1978068077;
extern T7*ms566_988446515;
extern T7*ms540_36;
extern T7*ms167_77350;
extern T7*ms167_78002;
extern T7*ms563_820451542;
extern T7*ms167_78263;
extern T7*ms113_3175aa;
extern T7*ms115_326648287;
extern T7*ms167_78490;
extern T7*ms115_2087910503;
extern T7*ms17_391651;
extern T7*ms17_676a;
extern T7*ms17_691a;
extern T7*ms113_1300398076;
extern T7*ms17_676;
extern T7*ms17_691;
extern T7*ms17_79140;
extern T7*ms167_85591;
extern T7*ms167_434665;
extern T7*ms115_1849679439;
extern T7*ms536_1684857857;
extern T7*ms89_1940534;
extern T7*ms115_49483191;
extern T7*ms467_1539961075;
extern T7*ms167_1975394;
extern T7*ms89_452889;
extern T7*ms167_1289562514;
extern T7*ms564_229;
extern T7*ms79_1515383187;
extern T7*ms89_659330894;
extern T7*ms89_9702826;
extern T7*ms89_1300398076;
extern T7*ms17_881365921aaa;
extern T7*ms89_9702034;
extern T7*ms17_0;
extern T7*ms167_1228681540;
extern T7*ms115_1433293834;
extern T7*ms19_0;
extern T7*ms113_659330894;
extern T7*ms113_2120668389;
extern T7*ms153_447584;
extern T7*ms89_696515478;
extern T7*ms113_452889;
extern T7*ms115_408086;
extern T7*ms89_1366344811;
extern T7*ms89_1837939351;
extern T7*ms114_17696;
extern T7*ms686_5467;
extern T7*ms114_1975394;
extern T7*ms115_1254606809;
extern T7*ms680_89510;
extern T7*ms167_627;
extern T7*ms89_1288001260;
extern T7*ms165_18036;
extern T7*ms167_408086;
extern T7*ms89_710556862;
extern T7*ms130_447851;
extern T7*ms113_214;
extern T7*ms113_229;
extern T7*ms17_1807728851;
extern T7*ms174_40;
extern T7*ms174_41;
extern T7*ms17_881365921;
extern T7*ms89_10049231;
extern T7*ms89_1205954912;
extern T7*ms167_10866961;
extern T7*ms17_881365921a;
extern T7*ms113_10208843;
extern T7*ms113_710556862;
extern T7*ms167_16821;
extern T7*ms536_336971577;
extern T7*ms686_899222;
extern T7*ms167_16942;
extern T7*ms89_1254606809;
extern T7*ms17_16036;
extern T7*ms113_1644;
extern T7*ms89_15934;
extern T7*ms113_214a;
extern T7*ms167_17696;
extern T7*ms113_229a;
extern T7*ms115_1644;
extern T7*ms113_3175;
extern T7*ms115_214a;
extern T7*ms167_9909665;
extern T7*ms113_1957581a;
extern T7*ms170_1338085634;
extern T7*ms115_229a;
extern T7*ms89_17696;
extern T7*ms167_402346;
extern T7*ms115_3175;
extern T7*ms167_51843716;
extern T7*ms114_194;
extern T7*ms115_10208843;
extern T7*ms114_945472392;
extern T7*ms115_1957581a;
extern T7*ms113_1978068077;
extern T7*ms164_0;
extern T7*ms115_659330894;
extern T7*ms170_0;
extern T7*ms17_881365921aa;
extern T7*ms89_93956277;
extern T7*ms114_452889;
extern T7*ms115_214;
extern T7*ms671_1606053737;
extern T7*ms115_229;
extern T7*ms115_1300398076;
extern T7*ms17_3301a;
extern T7*ms113_1254606809a;
extern T7*ms167_2024949725;
extern T7*ms113_2087910503;
extern T7*ms30_1415324896;
extern T7*ms167_2185421;
extern T7*ms115_10031271;
extern T7*ms114_9909665;
extern T7*ms468_1338477769a;
extern T7*ms164_1384826;
extern T7*ms89_1849679439;
extern T7*ms89_2087913448;
extern T7*ms164_2104;
extern T7*ms113_1849679439;
extern T7*ms565_1214914019;
extern T7*ms167_2032026;
extern T7*ms113_2116863196;
extern T7*ms113_408086;
extern T7*ms17_403021;
extern T7*ms89_2087910503;
extern T7*ms164_12184;
extern T7*ms559_1179444653;
extern T7*ms115_710556862;
extern T7*ms114_440825;
extern T7*ms115_2120668389;
extern T7*ms89_1975394;
extern T7*ms17_16036a;
extern T7*ms89_1957581a;
extern T7*ms114_434665;
extern T7*ms19_0a;
extern T7*ms540_125;
extern T7*ms113_1644a;
extern T7*ms540_303;
extern T7*ms468_1338477769;
extern T7*ms17_2246326;
extern T7*ms89_1885954800;
extern T7*ms665_512683247;
extern T7*ms89_1644;
extern T7*ms113_17696;
extern T7*ms167_10208843;
extern T7*ms464_195717202;
extern T7*ms89_10208843;
extern T7*ms89_3175;
extern T7*ms115_15934;
extern T7*ms115_1975394;
extern T7*ms167_10559665;
extern T7*ms115_1644a;
extern T7*ms562_454072470;
extern T7*ms113_1975394;
extern T7*ms89_211;
extern T7*ms89_322;
extern T7*ms89_298;
extern T7*ms113_1254606809;
extern T7*ms466_0;
extern T7*ms115_17696;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void*se_ma470(int argc,...);
T0* X606new_event_parser_imp(T0*C);
void X85put_character(T0*C,T3 a1);
void X85put_string(T0*C,T0* a1);
void X30execute(T0*C);
T0* X141item(T0*C);
T6 X141after(T0*C);
void X141forth(T0*C);
void X141start(T0*C);
T2 X142count(T0*C);
T0* X142cursor_item(T0*C,T0* a1);
T6 X142is_empty(T0*C);
T6 X142cursor_after(T0*C,T0* a1);
void X142cursor_forth(T0*C,T0* a1);
void X142cursor_start(T0*C,T0* a1);
T0* X142new_cursor(T0*C);
T0* X195cursor_item(T0*C,T0* a1);
void X195cursor_go_after(T0*C,T0* a1);
T6 X195cursor_after(T0*C,T0* a1);
void X195cursor_forth(T0*C,T0* a1);
void X195cursor_start(T0*C,T0* a1);
T6 X195cursor_off(T0*C,T0* a1);
T516 X517item(T0*C);
T0* X187parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X184parent(T0*C);
T6 X261test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X474clear_all(T0*C,T0* a1);
T0* X474make(T0*C,T2 a1);
T0* X474resize(T0*C,T0* a1,T2 a2);
void X183force_last(T0*C,T0* a1);
T0* X183new_cursor(T0*C);
void X183remove_at_cursor(T0*C,T0* a1);
T0* X183parent(T0*C);
void X258put(T0*C,T0* a1,T2 a2);
T0* X258item(T0*C,T2 a1);
void X258set_all_with(T0*C,T0* a1);
void X258resize(T0*C,T2 a1);
void X478fill(T0*C);
T0* X188new_cursor(T0*C);
void X188remove_at_cursor(T0*C,T0* a1);
void X188put_last(T0*C,T0* a1);
T0* X188parent(T0*C);
void X42raise(T0*C,T0* a1);
T2 X471count(T0*C);
T2 X471item(T0*C,T2 a1);
T2 X471lower(T0*C);
T0* X280make(T0*C,T2 a1);
T0* X280resize(T0*C,T0* a1,T2 a2);
void X169parse_file(T0*C,T0* a1);
void X473put(T0*C,T0* a1,T2 a2);
T0* X473item(T0*C,T2 a1);
void X473set_all_with(T0*C,T0* a1);
void X473resize(T0*C,T2 a1);
T6 X601cursor_is_last(T0*C,T0* a1);
void X601remove_traversing_cursor(T0*C,T0* a1);
void X601cursor_go_after(T0*C,T0* a1);
void X601add_traversing_cursor(T0*C,T0* a1);
void X601cursor_forth(T0*C,T0* a1);
void X601cursor_start(T0*C,T0* a1);
T6 X601cursor_is_first(T0*C,T0* a1);
T2 X508item_code(T0*C,T2 a1);
void X508insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X508insert_code(T0*C,T2 a1,T2 a2);
T6 X162is_connected(T0*C);
void X162read_character(T0*C);
T6 X162end_of_input(T0*C);
T3 X162last_character(T0*C);
T0* X80default_message(T0*C);
void X77generate(T0*C,T0* a1);
T6 T36toT6(T0* source);
T0* T610toT609(int source);
T0* T608toT607(int source);
T0* T2toT37(T2 source);
T2 T37toT2(T0* source);
T0* T6toT36(T6 source);

#ifdef __cplusplus
}
#endif
