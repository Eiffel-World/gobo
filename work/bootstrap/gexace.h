#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S354 T354;
typedef struct S561 T561;
typedef struct S560 T560;
typedef struct S335 T335;
typedef struct S322 T322;
typedef struct S347 T347;
typedef struct S366 T366;
typedef struct S404 T404;
typedef struct S407 T407;
typedef struct S101 T101;
typedef struct S153 T153;
typedef struct S259 T259;
typedef struct S547 T547;
typedef struct S172 T172;
typedef struct S399 T399;
typedef struct S311 T311;
typedef struct S552 T552;
typedef struct S416 T416;
typedef struct S415 T415;
typedef struct S465 T465;
typedef struct S186 T186;
typedef struct S623 T623;
typedef struct S207 T207;
typedef struct S301 T301;
typedef struct S272 T272;
typedef struct S496 T496;
typedef struct S216 T216;
typedef struct S238 T238;
typedef struct S269 T269;
typedef struct S134 T134;
typedef struct S574 T574;
typedef struct S498 T498;
typedef struct S456 T456;
typedef struct S557 T557;
typedef struct S237 T237;
typedef struct S489 T489;
typedef struct S528 T528;
typedef struct S481 T481;
typedef struct S38 T38;
typedef struct S363 T363;
typedef struct S553 T553;
typedef struct S185 T185;
typedef struct S212 T212;
typedef struct S458 T458;
typedef struct S195 T195;
typedef struct S428 T428;
typedef struct S310 T310;
typedef struct S121 T121;
typedef struct S205 T205;
typedef struct S187 T187;
typedef struct S87 T87;
typedef struct S132 T132;
typedef struct S130 T130;
typedef struct S164 T164;
typedef struct S451 T451;
typedef struct S34 T34;
typedef struct S474 T474;
typedef struct S140 T140;
typedef struct S618 T618;
typedef struct S406 T406;
typedef struct S530 T530;
typedef struct S551 T551;
typedef struct S309 T309;
typedef struct S525 T525;
typedef struct S171 T171;
typedef struct S307 T307;
typedef struct S320 T320;
typedef struct S508 T508;
typedef struct S650 T650;
typedef struct S243 T243;
typedef struct S28 T28;
typedef struct S483 T483;
typedef struct S346 T346;
typedef struct S297 T297;
typedef struct S514 T514;
typedef struct S565 T565;
typedef struct S127 T127;
typedef struct S634 T634;
typedef struct S296 T296;
typedef struct S228 T228;
typedef struct S412 T412;
typedef struct S245 T245;
typedef struct S661 T661;
typedef struct S657 T657;
typedef struct S104 T104;
typedef struct S233 T233;
typedef struct S617 T617;
typedef struct S133 T133;
typedef struct S100 T100;
typedef struct S382 T382;
typedef struct S330 T330;
typedef struct S211 T211;
typedef struct S103 T103;
typedef struct S241 T241;
typedef struct S625 T625;
typedef struct S234 T234;
typedef struct S156 T156;
typedef struct S642 T642;
typedef struct S488 T488;
typedef struct S584 T584;
typedef struct S33 T33;
typedef struct S361 T361;
typedef struct S558 T558;
typedef struct S568 T568;
typedef struct S151 T151;
typedef struct S70 T70;
typedef int T329;
typedef struct S189 T189;
typedef struct S655 T655;
typedef struct S62 T62;
typedef struct S7 T7;
typedef struct S402 T402;
typedef struct S544 T544;
typedef struct S379 T379;
typedef struct S210 T210;
typedef struct S450 T450;
typedef struct S129 T129;
typedef struct S384 T384;
typedef struct S596 T596;
typedef struct S614 T614;
typedef struct S660 T660;
typedef struct S326 T326;
typedef struct S403 T403;
typedef struct S364 T364;
typedef struct S447 T447;
typedef struct S537 T537;
typedef struct S480 T480;
typedef struct S401 T401;
typedef struct S550 T550;
typedef struct S473 T473;
typedef struct S646 T646;
typedef struct S555 T555;
typedef struct S11 T11;
typedef struct S549 T549;
typedef struct S417 T417;
typedef struct S429 T429;
typedef struct S534 T534;
typedef struct S200 T200;
typedef struct S490 T490;
typedef struct S128 T128;
typedef struct S96 T96;
typedef struct S304 T304;
typedef struct S327 T327;
typedef struct S231 T231;
typedef struct S271 T271;
typedef struct S628 T628;
typedef struct S308 T308;
typedef struct S367 T367;
typedef struct S405 T405;
typedef struct S117 T117;
typedef struct S400 T400;
typedef struct S114 T114;
typedef struct S74 T74;
typedef struct S328 T328;
typedef struct S654 T654;
typedef struct S141 T141;
typedef struct S536 T536;
typedef struct S135 T135;
typedef struct S408 T408;
typedef struct S157 T157;
typedef struct S532 T532;
typedef struct S298 T298;
typedef struct S513 T513;
typedef struct S230 T230;
typedef struct S123 T123;
typedef struct S295 T295;
typedef struct S99 T99;
typedef struct S457 T457;
typedef struct S645 T645;
typedef struct S582 T582;
typedef struct S477 T477;
typedef struct S196 T196;
typedef struct S73 T73;
typedef struct S434 T434;
typedef struct S82 T82;
typedef struct S540 T540;
typedef struct S126 T126;
typedef struct S607 T607;
typedef struct S469 T469;
typedef struct S138 T138;
typedef struct S383 T383;
typedef struct S396 T396;
typedef struct S276 T276;
typedef struct S548 T548;
typedef struct S287 T287;
typedef struct S497 T497;
typedef struct S63 T63;
typedef struct S365 T365;
typedef struct S29 T29;
typedef struct S58 T58;

/*C Header Pass 2 :*/
typedef T0**T567;
typedef T0**T495;
typedef T0**T453;
typedef T0**T414;
typedef T0**T247;
typedef T0**T218;
typedef T0**T240;
typedef T0**T72;
typedef T3*T9;
typedef T0**T649;
typedef T2*T119;
typedef T0**T461;

/*C Header Pass 3 :*/
struct S490{T8 _directory_stream;T8 _current_entry;};
int se_cmpT490(T490 o1,T490 o2);

/*C Header Pass 4 :*/
struct S354{Tid id;};
extern T354 M354;
struct S561{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _decl_start_sent;T6 _decl_end_sent;};
extern T561 M561;
struct S560{Tid id;};
extern T560 M560;
struct S335{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T335 M335;
struct S322{Tid id;T0* _item;T0* _right;};
extern T322 M322;
struct S347{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T347 M347;
struct S366{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T366 M366;
struct S404{Tid id;T0* _parameters;};
extern T404 M404;
struct S407{Tid id;T0* _parameters;};
extern T407 M407;
struct S101{Tid id;T0* _item;T0* _right;};
extern T101 M101;
struct S153{Tid id;T0* _item;T0* _right;};
extern T153 M153;
struct S259{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T259 M259;
struct S547{Tid id;T0* _system_id;};
extern T547 M547;
struct S172{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T172 M172;
struct S399{Tid id;T0* _variables;T0* _error_handler;};
extern T399 M399;
struct S311{Tid id;T0* _first;T0* _second;};
extern T311 M311;
struct S416{Tid id;T0* _next;T0* _prefixes;T0* _local_parts;};
extern T416 M416;
struct S415{Tid id;};
extern T415 M415;
struct S465{Tid id;T2 _count;T0* _first_cell;};
extern T465 M465;
struct S186{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_system;};
extern T186 M186;
struct S623{Tid id;T0* _item;T0* _right;T0* _left;};
extern T623 M623;
struct S207{Tid id;T0* _next;T6 _has_error;T0* _last_error;};
extern T207 M207;
struct S301{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T301 M301;
struct S272{Tid id;T0* _parameters;};
extern T272 M272;
struct S496{Tid id;T0* _cluster_name;T0* _pathname;};
extern T496 M496;
struct S216{Tid id;T218 _storage;T2 _capacity;T2 _upper;};
extern T216 M216;
struct S238{Tid id;T240 _storage;T2 _capacity;T2 _upper;};
extern T238 M238;
struct S269{Tid id;T0* _declared_abstract;T0* _declared_address_expression;T0* _declared_arguments;T0* _declared_array_optimization;T0* _declared_assertion;T0* _declared_case_insensitive;T0* _declared_check_vape;T0* _declared_clean;T0* _declared_component;T0* _declared_console_application;T0* _declared_create_keyword_extension;T0* _declared_dead_code_removal;T0* _declared_debug_option;T0* _declared_debug_tag;T0* _declared_debugger;T0* _declared_document;T0* _declared_dynamic_runtime;T0* _declared_exception_trace;T0* _declared_exclude;T0* _declared_export_option;T0* _declared_finalize;T0* _declared_flat_fst_optimization;T2 _declared_fst_expansion_factor;T0* _declared_fst_optimization;T0* _declared_garbage_collector;T0* _declared_gc_info;T2 _declared_heap_size;T0* _declared_header;T0* _declared_high_memory_compiler;T0* _declared_include;T0* _declared_inlining;T2 _declared_inlining_size;T0* _declared_jumps_optimization;T0* _declared_layout_optimization;T0* _declared_leaves_optimization;T0* _declared_line_generation;T0* _declared_link;T0* _declared_linker;T0* _declared_linux_fpu_double_precision;T0* _declared_manifest_string_trace;T0* _declared_map;T0* _declared_multithreaded;T0* _declared_no_default_lib;T0* _declared_override_cluster;T0* _declared_portable_code_generation;T0* _declared_precompiled;T0* _declared_profile;T0* _declared_recursive;T0* _declared_reloads_optimization;T0* _declared_shared_library_definition;T0* _declared_split;T2 _declared_stack_size;T0* _declared_storable;T0* _declared_storable_filename;T0* _declared_strip_option;T0* _declared_target;T0* _declared_trace;T0* _declared_verbose;T0* _declared_visible_filename;T0* _declared_warning;T0* _declared_wedit;};
extern T269 M269;
struct S134{Tid id;};
extern T134 M134;
struct S574{Tid id;};
extern T574 M574;
struct S498{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T498 M498;
struct S456{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T456 M456;
struct S557{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T557 M557;
struct S237{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T237 M237;
struct S489{Tid id;T0* _include_directories;T0* _link_libraries;};
extern T489 M489;
struct S528{Tid id;T0* _item;T0* _right;};
extern T528 M528;
struct S481{Tid id;};
extern T481 M481;
struct S38{Tid id;};
extern T38 M38;
struct S363{Tid id;T0* _parameters;};
extern T363 M363;
struct S553{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T553 M553;
struct S185{Tid id;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _libraries;};
extern T185 M185;
struct S212{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T212 M212;
struct S458{Tid id;};
extern T458 M458;
struct S195{Tid id;T0* _table;};
extern T195 M195;
struct S310{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T310 M310;
struct S121{Tid id;};
extern T121 M121;
struct S205{Tid id;T0* _start;T0* _error;T0* _tree;T0* _last;};
extern T205 M205;
struct S187{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;};
extern T187 M187;
struct S87{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T87 M87;
struct S132{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T132 M132;
struct S130{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T130 M130;
struct S164{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T164 M164;
struct S451{Tid id;};
extern T451 M451;
struct S34{Tid id;T2 _item;};
extern T34 M34;
struct S474{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T474 M474;
struct S140{Tid id;T0* _first;T0* _second;};
extern T140 M140;
struct S618{Tid id;};
extern T618 M618;
struct S406{Tid id;T0* _next;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;T0* _current_element;T0* _source_parser;};
extern T406 M406;
struct S530{Tid id;T0* _file_name;};
extern T530 M530;
struct S551{Tid id;T0* _name;T0* _items;T3 _type;T3 _repetition;T6 _is_character_data_allowed;};
extern T551 M551;
struct S309{Tid id;T3 _value;};
extern T309 M309;
struct S525{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T525 M525;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S307{Tid id;T0* _parameters;};
extern T307 M307;
struct S320{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T320 M320;
struct S508{Tid id;T0* _item;T0* _right;};
extern T508 M508;
struct S650{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;};
extern T650 M650;
struct S243{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T243 M243;
struct S28{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T28 M28;
struct S483{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T483 M483;
struct S346{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T346 M346;
struct S297{Tid id;};
extern T297 M297;
struct S514{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T514 M514;
struct S565{Tid id;T567 _storage;T2 _capacity;T2 _upper;};
extern T565 M565;
struct S127{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T127 M127;
struct S634{Tid id;};
extern T634 M634;
struct S296{Tid id;};
extern T296 M296;
struct S228{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T228 M228;
struct S412{Tid id;T414 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T412 M412;
struct S245{Tid id;T247 _storage;T2 _capacity;T2 _upper;};
extern T245 M245;
struct S661{Tid id;};
extern T661 M661;
struct S657{Tid id;T0* _parent;T0* _data;};
extern T657 M657;
struct S104{Tid id;T0* _defined_values;};
extern T104 M104;
struct S617{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;T6 _pre_sent;T6 _post_sent;};
extern T617 M617;
struct S133{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T133 M133;
struct S100{Tid id;T0* _parameters;};
extern T100 M100;
struct S428{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;};
extern T428 M428;
struct S382{Tid id;T0* _feature_name;T0* _options;};
extern T382 M382;
struct S330{Tid id;};
extern T330 M330;
struct S211{Tid id;T0* _name;T0* _options;T0* _clusters;T0* _libraries;T0* _library_prefix;};
extern T211 M211;
struct S103{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T103 M103;
struct S241{Tid id;};
extern T241 M241;
struct S625{Tid id;T0* _parent;T0* _content;};
extern T625 M625;
struct S156{Tid id;T0* _name;};
extern T156 M156;
struct S642{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T642 M642;
struct S488{Tid id;T0* _parameters;};
extern T488 M488;
struct S584{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T584 M584;
struct S33{Tid id;T6 _item;};
extern T33 M33;
struct S361{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T361 M361;
struct S558{Tid id;T3 _item;T0* _right;};
extern T558 M558;
struct S568{Tid id;};
extern T568 M568;
struct S151{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T151 M151;
struct S70{Tid id;T72 _storage;T2 _capacity;T2 _upper;};
extern T70 M70;
extern T329 M329;
struct S189{Tid id;};
extern T189 M189;
struct S655{Tid id;T0* _item;T0* _right;};
extern T655 M655;
struct S62{Tid id;T0* _item;T0* _right;};
extern T62 M62;
struct S402{Tid id;T0* _parameters;};
extern T402 M402;
struct S544{Tid id;T2 _item;T0* _right;};
extern T544 M544;
struct S379{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T379 M379;
struct S210{Tid id;T0* _error_handler;T6 _has_error;};
extern T210 M210;
struct S450{Tid id;T453 _storage;T2 _capacity;T2 _upper;};
extern T450 M450;
struct S129{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T129 M129;
struct S384{Tid id;T0* _item;T0* _right;};
extern T384 M384;
struct S596{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T596 M596;
struct S614{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T614 M614;
struct S660{Tid id;};
extern T660 M660;
struct S326{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_library;};
extern T326 M326;
struct S403{Tid id;T0* _parameters;};
extern T403 M403;
struct S364{Tid id;T0* _parameters;};
extern T364 M364;
struct S447{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T447 M447;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S537{Tid id;T0* _impl;T0* _last_string;T6 _is_utf16;T6 _is_msb_first;T6 _is_detected;T0* _utf_queue;};
extern T537 M537;
struct S480{Tid id;T0* _parameters;};
extern T480 M480;
struct S401{Tid id;};
extern T401 M401;
struct S550{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T550 M550;
struct S473{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T473 M473;
struct S646{Tid id;};
extern T646 M646;
struct S555{Tid id;T0* _item;T0* _right;T0* _left;};
extern T555 M555;
struct S552{Tid id;T2 _count;T0* _first;T0* _second;T0* _tail;};
extern T552 M552;
struct S11{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T11 M11;
struct S549{Tid id;T0* _name;T3 _type;T3 _value;T0* _default_value;T6 _is_list_type;};
extern T549 M549;
struct S417{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T6 _stand_alone;T0* _entities;T0* _pe_entities;T6 _in_external_dtd;T0* _scanner;T0* _scanners;T2 _last_token;T0* _last_value;T0* _callbacks;T0* _dtd_callbacks;T0* _source;T0* _last_error_description;};
extern T417 M417;
struct S429{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _last_value;T0* _character_entity;T0* _start_conditions;};
extern T429 M429;
struct S534{Tid id;T0* _item;T0* _right;};
extern T534 M534;
struct S200{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _root_element;};
extern T200 M200;
extern T490 M490;
struct S128{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T128 M128;
struct S96{Tid id;};
extern T96 M96;
struct S304{Tid id;T0* _item;T0* _right;};
extern T304 M304;
struct S327{Tid id;T0* _parameters;};
extern T327 M327;
struct S231{Tid id;T0* _clusters;};
extern T231 M231;
struct S271{Tid id;};
extern T271 M271;
struct S628{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T628 M628;
struct S308{Tid id;T0* _class_name;T0* _options;T0* _feature_options;};
extern T308 M308;
struct S367{Tid id;T0* _item;T0* _right;};
extern T367 M367;
struct S405{Tid id;T0* _parameters;};
extern T405 M405;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S400{Tid id;T2 _code;};
extern T400 M400;
struct S114{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T114 M114;
struct S74{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T74 M74;
struct S328{Tid id;};
extern T328 M328;
struct S654{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T654 M654;
struct S141{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T141 M141;
struct S536{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T536 M536;
struct S135{Tid id;T490 _basic_directory;T0* _name;};
extern T135 M135;
struct S408{Tid id;};
extern T408 M408;
struct S234{Tid id;T6 _is_abstract;T6 _is_recursive;T6 _is_relative;T0* _name;T0* _library_prefix;T0* _cluster_prefix;T0* _pathname;T0* _libraries;T0* _options;T0* _class_options;T6 _is_mounted;T0* _parent;T0* _subclusters;};
extern T234 M234;
struct S157{Tid id;T490 _basic_directory;T0* _name;};
extern T157 M157;
struct S532{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T532 M532;
struct S298{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T298 M298;
struct S513{Tid id;T0* _class_name;T0* _feature_name;T0* _external_name;};
extern T513 M513;
struct S230{Tid id;T0* _libraries;};
extern T230 M230;
struct S123{Tid id;};
extern T123 M123;
struct S295{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;};
extern T295 M295;
struct S99{Tid id;T72 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T99 M99;
struct S457{Tid id;T461 _storage;T2 _capacity;T2 _upper;};
extern T457 M457;
struct S645{Tid id;T649 _storage;T2 _capacity;T2 _upper;};
extern T645 M645;
struct S582{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T582 M582;
struct S477{Tid id;T2 _code;};
extern T477 M477;
struct S196{Tid id;T0* _parent;T0* _ns_prefix;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _name;T2 _count;};
extern T196 M196;
struct S73{Tid id;T3 _item;};
extern T73 M73;
struct S434{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T434 M434;
struct S82{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T82 M82;
struct S233{Tid id;T6 _is_root;T0* _pathname;T0* _library;T0* _library_prefix;T0* _position;};
extern T233 M233;
struct S540{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;};
extern T540 M540;
struct S126{Tid id;};
extern T126 M126;
struct S607{Tid id;T0* _item;T0* _right;T0* _left;};
extern T607 M607;
struct S469{Tid id;T2 _count;T0* _first_cell;};
extern T469 M469;
struct S138{Tid id;T490 _basic_directory;};
extern T138 M138;
struct S383{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T383 M383;
struct S396{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T396 M396;
struct S276{Tid id;};
extern T276 M276;
struct S548{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T548 M548;
struct S287{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T287 M287;
struct S497{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T497 M497;
struct S63{Tid id;T0* _program_name;};
extern T63 M63;
struct S365{Tid id;T0* _parameters;};
extern T365 M365;
struct S29{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T29 M29;
struct S58{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T58 M58;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
void r6fill_tagged_out_memory(T6 C);
T6 r6_px_and(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
void r3fill_tagged_out_memory(T3 C);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
void r567clear_all(T567 C,T2 a1);
T567 r567realloc(T567 C,T2 a1,T2 a2);
void r567set_all_with(T567 C,T0* a1,T2 a2);
T6 r567fast_memcmp(T567 C,T567 a1,T2 a2);
void r567clear(T567 C,T2 a1,T2 a2);
void r567copy_from(T567 C,T567 a1,T2 a2);
void r453clear_all(T453 C,T2 a1);
T453 r453realloc(T453 C,T2 a1,T2 a2);
void r453set_all_with(T453 C,T0* a1,T2 a2);
T6 r453fast_memcmp(T453 C,T453 a1,T2 a2);
void r453clear(T453 C,T2 a1,T2 a2);
void r453copy_from(T453 C,T453 a1,T2 a2);
T6 r414fast_memcmp(T414 C,T414 a1,T2 a2);
void r414copy_from(T414 C,T414 a1,T2 a2);
void r247clear_all(T247 C,T2 a1);
T247 r247realloc(T247 C,T2 a1,T2 a2);
void r247set_all_with(T247 C,T0* a1,T2 a2);
T6 r247fast_memcmp(T247 C,T247 a1,T2 a2);
void r247clear(T247 C,T2 a1,T2 a2);
void r247copy_from(T247 C,T247 a1,T2 a2);
void r218clear_all(T218 C,T2 a1);
T218 r218realloc(T218 C,T2 a1,T2 a2);
void r218set_all_with(T218 C,T0* a1,T2 a2);
T6 r218fast_memcmp(T218 C,T218 a1,T2 a2);
void r218clear(T218 C,T2 a1,T2 a2);
void r218copy_from(T218 C,T218 a1,T2 a2);
void r240clear_all(T240 C,T2 a1);
T240 r240realloc(T240 C,T2 a1,T2 a2);
void r240set_all_with(T240 C,T0* a1,T2 a2);
T6 r240fast_memcmp(T240 C,T240 a1,T2 a2);
void r240clear(T240 C,T2 a1,T2 a2);
void r240copy_from(T240 C,T240 a1,T2 a2);
void r72clear_all(T72 C,T2 a1);
T72 r72realloc(T72 C,T2 a1,T2 a2);
T6 r72fast_memcmp(T72 C,T72 a1,T2 a2);
void r72set_all_with(T72 C,T0* a1,T2 a2);
void r72clear(T72 C,T2 a1,T2 a2);
void r72copy_from(T72 C,T72 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r649clear_all(T649 C,T2 a1);
T649 r649realloc(T649 C,T2 a1,T2 a2);
void r649set_all_with(T649 C,T0* a1,T2 a2);
T6 r649fast_memcmp(T649 C,T649 a1,T2 a2);
void r649clear(T649 C,T2 a1,T2 a2);
void r649copy_from(T649 C,T649 a1,T2 a2);
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
void r119set_all_with(T119 C,T2 a1,T2 a2);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r461clear_all(T461 C,T2 a1);
T461 r461realloc(T461 C,T2 a1,T2 a2);
T6 r461fast_memcmp(T461 C,T461 a1,T2 a2);
void r461set_all_with(T461 C,T0* a1,T2 a2);
void r461clear(T461 C,T2 a1,T2 a2);
void r461copy_from(T461 C,T461 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T2 r7item_code(T7* C,T2 a1);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7out_in_tagged_out_memory(T7* C);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
T0* r216out(T216* C);
void r216copy(T216* C,T0* a1);
T6 r216is_equal(T216* C,T0* a1);
T6 r216se_assigned_from(T0* a1);
void r216out_in_tagged_out_memory(T216* C);
void r216make(T216* C,T2 a1);
void r216fill_tagged_out_memory(T216* C);
T6 r216conforms_to(T216* C,T0* a1);
void r216resize(T216* C,T2 a1);
T0* r216twin(T216* C);
T0* r238out(T238* C);
void r238copy(T238* C,T0* a1);
T6 r238is_equal(T238* C,T0* a1);
T6 r238se_assigned_from(T0* a1);
void r238out_in_tagged_out_memory(T238* C);
void r238make(T238* C,T2 a1);
void r238fill_tagged_out_memory(T238* C);
T6 r238conforms_to(T238* C,T0* a1);
void r238resize(T238* C,T2 a1);
T0* r238twin(T238* C);
T0* r456out(T456* C);
void r456copy(T456* C,T0* a1);
T2 r456count(T456* C);
T6 r456is_equal(T456* C,T0* a1);
T2 r456item(T456* C,T2 a1);
T6 r456se_assigned_from(T0* a1);
void r456out_in_tagged_out_memory(T456* C);
void r456fill_tagged_out_memory(T456* C);
T6 r456conforms_to(T456* C,T0* a1);
T0* r456twin(T456* C);
T0* r565out(T565* C);
void r565copy(T565* C,T0* a1);
T6 r565is_equal(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
void r565out_in_tagged_out_memory(T565* C);
void r565make(T565* C,T2 a1);
void r565fill_tagged_out_memory(T565* C);
T6 r565conforms_to(T565* C,T0* a1);
void r565resize(T565* C,T2 a1);
T0* r565twin(T565* C);
T0* r412out(T412* C);
void r412copy(T412* C,T0* a1);
T2 r412count(T412* C);
T6 r412is_equal(T412* C,T0* a1);
T0* r412item(T412* C,T2 a1);
T6 r412se_assigned_from(T0* a1);
void r412out_in_tagged_out_memory(T412* C);
void r412fill_tagged_out_memory(T412* C);
T6 r412conforms_to(T412* C,T0* a1);
T0* r412twin(T412* C);
T0* r245out(T245* C);
void r245copy(T245* C,T0* a1);
T6 r245is_equal(T245* C,T0* a1);
T6 r245se_assigned_from(T0* a1);
void r245out_in_tagged_out_memory(T245* C);
void r245make(T245* C,T2 a1);
void r245fill_tagged_out_memory(T245* C);
T6 r245conforms_to(T245* C,T0* a1);
void r245resize(T245* C,T2 a1);
T0* r245twin(T245* C);
T0* r70out(T70* C);
void r70copy(T70* C,T0* a1);
T2 r70count(T70* C);
T6 r70is_equal(T70* C,T0* a1);
T0* r70item(T70* C,T2 a1);
T6 r70se_assigned_from(T0* a1);
void r70out_in_tagged_out_memory(T70* C);
void r70make(T70* C,T2 a1);
void r70fill_tagged_out_memory(T70* C);
T6 r70conforms_to(T70* C,T0* a1);
void r70resize(T70* C,T2 a1);
T0* r70twin(T70* C);
T0* r450out(T450* C);
void r450copy(T450* C,T0* a1);
T6 r450is_equal(T450* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
void r450out_in_tagged_out_memory(T450* C);
void r450make(T450* C,T2 a1);
void r450fill_tagged_out_memory(T450* C);
T6 r450conforms_to(T450* C,T0* a1);
void r450resize(T450* C,T2 a1);
T0* r450twin(T450* C);
T0* r117out(T117* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117out_in_tagged_out_memory(T117* C);
void r117make(T117* C,T2 a1);
void r117fill_tagged_out_memory(T117* C);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r117with_capacity(T117* C,T2 a1);
void r117from_collection(T117* C,T0* a1);
T0* r99out(T99* C);
void r99copy(T99* C,T0* a1);
T2 r99count(T99* C);
T6 r99is_equal(T99* C,T0* a1);
T0* r99item(T99* C,T2 a1);
T6 r99valid_index(T99* C,T2 a1);
T6 r99se_assigned_from(T0* a1);
void r99out_in_tagged_out_memory(T99* C);
void r99make(T99* C,T2 a1,T2 a2);
void r99fill_tagged_out_memory(T99* C);
T6 r99conforms_to(T99* C,T0* a1);
T0* r99twin(T99* C);
T0* r457out(T457* C);
void r457copy(T457* C,T0* a1);
T2 r457count(T457* C);
T6 r457is_equal(T457* C,T0* a1);
T0* r457item(T457* C,T2 a1);
T6 r457se_assigned_from(T0* a1);
void r457out_in_tagged_out_memory(T457* C);
void r457make(T457* C,T2 a1);
void r457fill_tagged_out_memory(T457* C);
T6 r457conforms_to(T457* C,T0* a1);
void r457resize(T457* C,T2 a1);
T0* r457twin(T457* C);
T0* r645out(T645* C);
void r645copy(T645* C,T0* a1);
T6 r645is_equal(T645* C,T0* a1);
T6 r645se_assigned_from(T0* a1);
void r645out_in_tagged_out_memory(T645* C);
void r645make(T645* C,T2 a1);
void r645fill_tagged_out_memory(T645* C);
T6 r645conforms_to(T645* C,T0* a1);
void r645resize(T645* C,T2 a1);
T0* r645twin(T645* C);
T0* r354out(T354* C);
T6 r354is_equal(T354* C,T0* a1);
T6 r354se_assigned_from(T0* a1);
void r354out_in_tagged_out_memory(T354* C);
T6 r354conforms_to(T354* C,T0* a1);
T0* r354twin(T354* C);
T0* r335out(T335* C);
T2 r335new_capacity(T2 a1);
void r335copy(T335* C,T0* a1);
void r335make_equal(T335* C,T2 a1);
void r335make_clashes(T335* C,T2 a1);
T0* r335cursor_item(T335* C,T0* a1);
void r335search_position(T335* C,T0* a1);
T6 r335is_equal(T335* C,T0* a1);
void r335remove_traversing_cursor(T335* C,T0* a1);
void r335clone_slots(T335* C);
T0* r335items_item(T335* C,T2 a1);
void r335clone_clashes(T335* C);
void r335move_all_cursors_after(T335* C);
void r335make_items(T335* C,T2 a1);
void r335add_traversing_cursor(T335* C,T0* a1);
T6 r335se_assigned_from(T0* a1);
T0* r335clone(T0* a1);
void r335out_in_tagged_out_memory(T335* C);
T6 r335same_type(T335* C,T0* a1);
void r335put_new(T335* C,T0* a1);
void r335slots_wipe_out(T335* C);
void r335make(T335* C,T2 a1);
void r335clashes_wipe_out(T335* C);
T6 r335equal(T0* a1,T0* a2);
void r335clone_items(T335* C);
T6 r335same_equality_tester(T335* C,T0* a1);
T6 r335cursor_after(T0* a1);
T6 r335conforms_to(T335* C,T0* a1);
T6 r335has(T335* C,T0* a1);
T2 r335hash_position(T335* C,T0* a1);
void r335cursor_forth(T335* C,T0* a1);
extern T0*oBC108fixed_integer_array_;
void r335items_resize(T335* C,T2 a1);
void r335resize(T335* C,T2 a1);
T6 r335cursor_same_position(T0* a1,T0* a2);
void r335cursor_start(T335* C,T0* a1);
void r335clashes_resize(T335* C,T2 a1);
void r335slots_resize(T335* C,T2 a1);
T0* r335twin(T335* C);
void r335force_last(T335* C,T0* a1);
T0* r335new_cursor(T335* C);
void r335make_slots(T335* C,T2 a1);
void r335put_last(T335* C,T0* a1);
void r335move_all_cursors(T335* C,T2 a1,T2 a2);
T2 r335new_modulus(T2 a1);
T6 r335cursor_off(T0* a1);
void r335items_put(T335* C,T0* a1,T2 a2);
void r335compress(T335* C);
T0* r322out(T322* C);
T6 r322is_equal(T322* C,T0* a1);
T6 r322se_assigned_from(T0* a1);
void r322out_in_tagged_out_memory(T322* C);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322twin(T322* C);
T0* r347out(T347* C);
void r347copy(T347* C,T0* a1);
void r347make_equal(T347* C,T2 a1);
T0* r347keys_item(T347* C,T2 a1);
void r347make_clashes(T347* C,T2 a1);
void r347search_position(T347* C,T0* a1);
T6 r347is_equal(T347* C,T0* a1);
void r347remove_traversing_cursor(T347* C,T0* a1);
void r347clone_slots(T347* C);
T2 r347item(T347* C,T0* a1);
void r347clone_clashes(T347* C);
void r347move_all_cursors_after(T347* C);
void r347make_items(T347* C,T2 a1);
void r347add_traversing_cursor(T347* C,T0* a1);
T6 r347se_assigned_from(T0* a1);
T0* r347clone(T0* a1);
void r347out_in_tagged_out_memory(T347* C);
T6 r347same_type(T347* C,T0* a1);
void r347put_new(T347* C,T2 a1,T0* a2);
void r347clone_items(T347* C);
T6 r347conforms_to(T347* C,T0* a1);
T6 r347has(T347* C,T0* a1);
void r347make_keys(T347* C,T2 a1);
T2 r347hash_position(T347* C,T0* a1);
void r347clone_keys(T347* C);
T2 r347found_item(T347* C);
void r347make_with_equality_testers(T347* C,T2 a1,T0* a2,T0* a3);
T6 r347cursor_same_position(T0* a1,T0* a2);
T6 r347found(T347* C);
void r347search(T347* C,T0* a1);
T0* r347twin(T347* C);
T0* r347new_cursor(T347* C);
void r347make_slots(T347* C,T2 a1);
void r347keys_put(T347* C,T0* a1,T2 a2);
T2 r347new_modulus(T2 a1);
T6 r347cursor_off(T0* a1);
T0* r366out(T366* C);
void r366copy(T366* C,T0* a1);
T6 r366is_equal(T366* C,T0* a1);
void r366remove_traversing_cursor(T366* C,T0* a1);
void r366move_all_cursors_after(T366* C);
void r366add_traversing_cursor(T366* C,T0* a1);
T6 r366se_assigned_from(T0* a1);
void r366out_in_tagged_out_memory(T366* C);
T6 r366same_type(T366* C,T0* a1);
void r366make(T366* C);
T6 r366conforms_to(T366* C,T0* a1);
void r366cursor_forth(T366* C,T0* a1);
void r366cursor_start(T366* C,T0* a1);
T0* r366twin(T366* C);
T0* r366new_cursor(T366* C);
void r366put_last(T366* C,T0* a1);
T6 r366cursor_off(T0* a1);
T0* r101out(T101* C);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
void r101out_in_tagged_out_memory(T101* C);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T0* r153out(T153* C);
T6 r153is_equal(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
void r153out_in_tagged_out_memory(T153* C);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
T0* r259out(T259* C);
void r259copy(T259* C,T0* a1);
T6 r259is_equal(T259* C,T0* a1);
T6 r259same_position(T259* C,T0* a1);
T6 r259se_assigned_from(T0* a1);
void r259out_in_tagged_out_memory(T259* C);
T6 r259same_type(T259* C,T0* a1);
T6 r259off(T259* C);
T6 r259conforms_to(T259* C,T0* a1);
T0* r259twin(T259* C);
T0* r311out(T311* C);
T6 r311is_equal(T311* C,T0* a1);
T6 r311se_assigned_from(T0* a1);
void r311out_in_tagged_out_memory(T311* C);
void r311make(T311* C,T0* a1,T0* a2);
T6 r311conforms_to(T311* C,T0* a1);
T0* r311twin(T311* C);
T0* r465out(T465* C);
void r465copy(T465* C,T0* a1);
void r465force(T465* C,T0* a1);
T6 r465is_equal(T465* C,T0* a1);
T6 r465se_assigned_from(T0* a1);
void r465out_in_tagged_out_memory(T465* C);
T6 r465same_type(T465* C,T0* a1);
void r465remove(T465* C);
T6 r465conforms_to(T465* C,T0* a1);
T0* r465twin(T465* C);
T0* r623out(T623* C);
T6 r623is_equal(T623* C,T0* a1);
T6 r623se_assigned_from(T0* a1);
void r623out_in_tagged_out_memory(T623* C);
T6 r623conforms_to(T623* C,T0* a1);
T0* r623twin(T623* C);
void r623put_right(T623* C,T0* a1);
T0* r301out(T301* C);
void r301copy(T301* C,T0* a1);
void r301set(T301* C,T0* a1,T6 a2,T6 a3);
T6 r301is_equal(T301* C,T0* a1);
T6 r301same_position(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T6 r301is_first(T301* C);
void r301out_in_tagged_out_memory(T301* C);
T6 r301is_last(T301* C);
T6 r301same_type(T301* C,T0* a1);
void r301make(T301* C,T0* a1);
void r301forth(T301* C);
T6 r301conforms_to(T301* C,T0* a1);
void r301start(T301* C);
void r301go_after(T301* C);
void r301set_after(T301* C);
T0* r301twin(T301* C);
T0* r574out(T574* C);
T6 r574is_equal(T574* C,T0* a1);
T6 r574se_assigned_from(T0* a1);
void r574out_in_tagged_out_memory(T574* C);
T6 r574conforms_to(T574* C,T0* a1);
T6 r574test(T0* a1,T0* a2);
T0* r574twin(T574* C);
T0* r498out(T498* C);
void r498copy(T498* C,T0* a1);
T6 r498is_equal(T498* C,T0* a1);
void r498remove_traversing_cursor(T498* C,T0* a1);
void r498move_all_cursors_after(T498* C);
void r498add_traversing_cursor(T498* C,T0* a1);
T6 r498se_assigned_from(T0* a1);
void r498out_in_tagged_out_memory(T498* C);
T6 r498same_type(T498* C,T0* a1);
void r498make(T498* C);
T6 r498conforms_to(T498* C,T0* a1);
void r498cursor_forth(T498* C,T0* a1);
void r498cursor_start(T498* C,T0* a1);
T0* r498twin(T498* C);
void r498force_last(T498* C,T0* a1);
T0* r498new_cursor(T498* C);
T6 r498cursor_off(T0* a1);
T0* r557out(T557* C);
void r557copy(T557* C,T0* a1);
void r557set(T557* C,T0* a1,T6 a2,T6 a3);
T6 r557is_equal(T557* C,T0* a1);
T6 r557same_position(T557* C,T0* a1);
T6 r557se_assigned_from(T0* a1);
void r557out_in_tagged_out_memory(T557* C);
T6 r557is_last(T557* C);
T6 r557same_type(T557* C,T0* a1);
void r557make(T557* C,T0* a1);
T6 r557conforms_to(T557* C,T0* a1);
void r557set_after(T557* C);
T0* r557twin(T557* C);
T0* r237out(T237* C);
T2 r237new_capacity(T2 a1);
void r237copy(T237* C,T0* a1);
T6 r237extendible(T237* C,T2 a1);
T6 r237is_equal(T237* C,T0* a1);
void r237remove_traversing_cursor(T237* C,T0* a1);
void r237move_all_cursors_after(T237* C);
void r237add_traversing_cursor(T237* C,T0* a1);
T6 r237se_assigned_from(T0* a1);
T0* r237clone(T0* a1);
void r237out_in_tagged_out_memory(T237* C);
T6 r237cursor_before(T0* a1);
T6 r237same_type(T237* C,T0* a1);
void r237make(T237* C,T2 a1);
T6 r237cursor_after(T0* a1);
T6 r237conforms_to(T237* C,T0* a1);
void r237resize(T237* C,T2 a1);
T6 r237cursor_same_position(T0* a1,T0* a2);
T0* r237twin(T237* C);
void r237force_last(T237* C,T0* a1);
T0* r237new_cursor(T237* C);
void r237put_last(T237* C,T0* a1);
T6 r237cursor_off(T0* a1);
T0* r528out(T528* C);
T6 r528is_equal(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
void r528out_in_tagged_out_memory(T528* C);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528twin(T528* C);
T0* r553out(T553* C);
T2 r553new_capacity(T2 a1);
void r553copy(T553* C,T0* a1);
void r553make_equal(T553* C,T2 a1);
void r553make_clashes(T553* C,T2 a1);
void r553search_position(T553* C,T0* a1);
T6 r553is_equal(T553* C,T0* a1);
void r553remove_traversing_cursor(T553* C,T0* a1);
void r553clone_slots(T553* C);
void r553clone_clashes(T553* C);
void r553move_all_cursors_after(T553* C);
void r553make_items(T553* C,T2 a1);
void r553add_traversing_cursor(T553* C,T0* a1);
T6 r553se_assigned_from(T0* a1);
T0* r553clone(T0* a1);
void r553out_in_tagged_out_memory(T553* C);
T6 r553same_type(T553* C,T0* a1);
void r553make(T553* C,T2 a1);
T6 r553equal(T0* a1,T0* a2);
void r553clone_items(T553* C);
T6 r553same_equality_tester(T553* C,T0* a1);
T6 r553conforms_to(T553* C,T0* a1);
T6 r553has(T553* C,T0* a1);
void r553force_new(T553* C,T0* a1);
T2 r553hash_position(T553* C,T0* a1);
void r553items_resize(T553* C,T2 a1);
void r553resize(T553* C,T2 a1);
T6 r553cursor_same_position(T0* a1,T0* a2);
void r553clashes_resize(T553* C,T2 a1);
void r553slots_resize(T553* C,T2 a1);
T0* r553twin(T553* C);
T0* r553new_cursor(T553* C);
void r553make_slots(T553* C,T2 a1);
T2 r553new_modulus(T2 a1);
T6 r553cursor_off(T0* a1);
T0* r212out(T212* C);
T2 r212new_capacity(T2 a1);
void r212copy(T212* C,T0* a1);
void r212wipe_out(T212* C);
T0* r212keys_item(T212* C,T2 a1);
void r212make_clashes(T212* C,T2 a1);
void r212search_position(T212* C,T0* a1);
T6 r212is_equal(T212* C,T0* a1);
void r212remove_traversing_cursor(T212* C,T0* a1);
void r212clone_slots(T212* C);
void r212keys_resize(T212* C,T2 a1);
T0* r212item(T212* C,T0* a1);
void r212clone_clashes(T212* C);
void r212make_items(T212* C,T2 a1);
void r212move_all_cursors_after(T212* C);
void r212add_traversing_cursor(T212* C,T0* a1);
T6 r212se_assigned_from(T0* a1);
T0* r212clone(T0* a1);
void r212out_in_tagged_out_memory(T212* C);
T6 r212same_type(T212* C,T0* a1);
void r212slots_wipe_out(T212* C);
void r212make(T212* C,T2 a1);
void r212clashes_wipe_out(T212* C);
void r212clone_items(T212* C);
T6 r212conforms_to(T212* C,T0* a1);
T6 r212has(T212* C,T0* a1);
void r212make_keys(T212* C,T2 a1);
void r212force_new(T212* C,T0* a1,T0* a2);
T2 r212hash_position(T212* C,T0* a1);
void r212items_wipe_out(T212* C);
void r212items_resize(T212* C,T2 a1);
void r212clone_keys(T212* C);
void r212make_with_equality_testers(T212* C,T2 a1,T0* a2,T0* a3);
void r212resize(T212* C,T2 a1);
T0* r212found_item(T212* C);
T6 r212cursor_same_position(T0* a1,T0* a2);
T6 r212found(T212* C);
void r212search(T212* C,T0* a1);
void r212clashes_resize(T212* C,T2 a1);
void r212slots_resize(T212* C,T2 a1);
T0* r212twin(T212* C);
void r212keys_wipe_out(T212* C);
T0* r212new_cursor(T212* C);
void r212make_slots(T212* C,T2 a1);
void r212keys_put(T212* C,T0* a1,T2 a2);
T2 r212new_modulus(T2 a1);
T6 r212cursor_off(T0* a1);
T0* r458out(T458* C);
void r458clear_all(T0* a1);
T6 r458is_equal(T458* C,T0* a1);
T6 r458se_assigned_from(T0* a1);
void r458out_in_tagged_out_memory(T458* C);
T0* r458make(T2 a1);
T6 r458conforms_to(T458* C,T0* a1);
T0* r458resize(T0* a1,T2 a2);
T0* r458twin(T458* C);
T0* r310out(T310* C);
void r310copy(T310* C,T0* a1);
void r310set(T310* C,T0* a1,T6 a2,T6 a3);
T6 r310is_equal(T310* C,T0* a1);
T6 r310same_position(T310* C,T0* a1);
T6 r310se_assigned_from(T0* a1);
void r310out_in_tagged_out_memory(T310* C);
T6 r310same_type(T310* C,T0* a1);
void r310make(T310* C,T0* a1);
T6 r310conforms_to(T310* C,T0* a1);
void r310set_after(T310* C);
T0* r310twin(T310* C);
T0* r121out(T121* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
void r121out_in_tagged_out_memory(T121* C);
T0* r121to_fixed_array(T0* a1);
T0* r121make(T2 a1);
T0* r121make_from_array(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T0* r121resize(T0* a1,T2 a2);
T0* r121twin(T121* C);
T0* r87out(T87* C);
void r87copy(T87* C,T0* a1);
void r87set(T87* C,T0* a1,T6 a2,T6 a3);
T6 r87is_equal(T87* C,T0* a1);
T6 r87same_position(T87* C,T0* a1);
T6 r87se_assigned_from(T0* a1);
void r87out_in_tagged_out_memory(T87* C);
T6 r87same_type(T87* C,T0* a1);
void r87make(T87* C,T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
void r87set_after(T87* C);
T0* r87twin(T87* C);
T0* r164out(T164* C);
void r164copy(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
T0* r164item(T164* C);
T6 r164same_position(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T6 r164after(T164* C);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C,T0* a1);
void r164forth(T164* C);
T6 r164off(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
void r164start(T164* C);
T0* r164twin(T164* C);
T0* r451out(T451* C);
T6 r451is_equal(T451* C,T0* a1);
T6 r451se_assigned_from(T0* a1);
void r451out_in_tagged_out_memory(T451* C);
T0* r451make(T2 a1);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451resize(T0* a1,T2 a2);
T0* r451twin(T451* C);
T0* r140out(T140* C);
T6 r140is_equal(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140out_in_tagged_out_memory(T140* C);
void r140make(T140* C,T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140twin(T140* C);
T0* r525out(T525* C);
void r525copy(T525* C,T0* a1);
void r525set(T525* C,T0* a1,T6 a2,T6 a3);
T6 r525is_equal(T525* C,T0* a1);
T6 r525same_position(T525* C,T0* a1);
T6 r525se_assigned_from(T0* a1);
void r525out_in_tagged_out_memory(T525* C);
T6 r525same_type(T525* C,T0* a1);
void r525make(T525* C,T0* a1);
T6 r525conforms_to(T525* C,T0* a1);
void r525set_after(T525* C);
T0* r525twin(T525* C);
T0* r320out(T320* C);
void r320copy(T320* C,T0* a1);
T6 r320is_equal(T320* C,T0* a1);
void r320remove_traversing_cursor(T320* C,T0* a1);
void r320move_all_cursors_after(T320* C);
void r320add_traversing_cursor(T320* C,T0* a1);
T6 r320se_assigned_from(T0* a1);
void r320out_in_tagged_out_memory(T320* C);
T6 r320same_type(T320* C,T0* a1);
void r320make(T320* C);
T6 r320conforms_to(T320* C,T0* a1);
void r320cursor_forth(T320* C,T0* a1);
void r320cursor_start(T320* C,T0* a1);
T0* r320twin(T320* C);
T0* r320new_cursor(T320* C);
void r320put_last(T320* C,T0* a1);
T6 r320cursor_off(T0* a1);
T0* r508out(T508* C);
T6 r508is_equal(T508* C,T0* a1);
T6 r508se_assigned_from(T0* a1);
void r508out_in_tagged_out_memory(T508* C);
T6 r508conforms_to(T508* C,T0* a1);
T0* r508twin(T508* C);
T0* r650out(T650* C);
void r650copy(T650* C,T0* a1);
void r650force(T650* C,T0* a1);
T6 r650is_equal(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
void r650out_in_tagged_out_memory(T650* C);
T6 r650same_type(T650* C,T0* a1);
void r650remove(T650* C);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
T0* r243out(T243* C);
T2 r243new_capacity(T2 a1);
void r243copy(T243* C,T0* a1);
T6 r243extendible(T243* C,T2 a1);
T6 r243is_equal(T243* C,T0* a1);
void r243remove_traversing_cursor(T243* C,T0* a1);
void r243move_all_cursors_after(T243* C);
void r243add_traversing_cursor(T243* C,T0* a1);
T6 r243se_assigned_from(T0* a1);
T0* r243clone(T0* a1);
void r243out_in_tagged_out_memory(T243* C);
T6 r243cursor_before(T0* a1);
T6 r243same_type(T243* C,T0* a1);
void r243make(T243* C,T2 a1);
T6 r243cursor_after(T0* a1);
T6 r243conforms_to(T243* C,T0* a1);
void r243resize(T243* C,T2 a1);
T6 r243cursor_same_position(T0* a1,T0* a2);
T0* r243twin(T243* C);
void r243force_last(T243* C,T0* a1);
T0* r243new_cursor(T243* C);
T6 r243cursor_off(T0* a1);
T0* r28out(T28* C);
void r28copy(T28* C,T0* a1);
void r28set(T28* C,T0* a1,T6 a2,T6 a3);
T6 r28is_equal(T28* C,T0* a1);
T6 r28same_position(T28* C,T0* a1);
T6 r28se_assigned_from(T0* a1);
void r28out_in_tagged_out_memory(T28* C);
T6 r28same_type(T28* C,T0* a1);
void r28make(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28set_after(T28* C);
T0* r28twin(T28* C);
T0* r346out(T346* C);
void r346copy(T346* C,T0* a1);
T6 r346is_equal(T346* C,T0* a1);
T0* r346item(T346* C);
T6 r346same_position(T346* C,T0* a1);
T6 r346se_assigned_from(T0* a1);
void r346out_in_tagged_out_memory(T346* C);
T6 r346after(T346* C);
T6 r346same_type(T346* C,T0* a1);
void r346make(T346* C,T0* a1);
T6 r346off(T346* C);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346twin(T346* C);
T0* r514out(T514* C);
void r514copy(T514* C,T0* a1);
T0* r514cursor_item(T0* a1);
T6 r514is_equal(T514* C,T0* a1);
void r514remove_traversing_cursor(T514* C,T0* a1);
void r514move_all_cursors_after(T514* C);
void r514add_traversing_cursor(T514* C,T0* a1);
T6 r514se_assigned_from(T0* a1);
void r514out_in_tagged_out_memory(T514* C);
T6 r514same_type(T514* C,T0* a1);
void r514make(T514* C);
T6 r514cursor_after(T0* a1);
T6 r514conforms_to(T514* C,T0* a1);
void r514cursor_forth(T514* C,T0* a1);
void r514cursor_start(T514* C,T0* a1);
T0* r514twin(T514* C);
void r514force_last(T514* C,T0* a1);
T0* r514new_cursor(T514* C);
T6 r514cursor_off(T0* a1);
T0* r634out(T634* C);
T6 r634is_equal(T634* C,T0* a1);
T6 r634se_assigned_from(T0* a1);
void r634out_in_tagged_out_memory(T634* C);
T6 r634conforms_to(T634* C,T0* a1);
T6 r634test(T0* a1,T0* a2);
T0* r634twin(T634* C);
T0* r228out(T228* C);
void r228copy(T228* C,T0* a1);
T6 r228is_equal(T228* C,T0* a1);
T6 r228same_position(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
void r228out_in_tagged_out_memory(T228* C);
T6 r228same_type(T228* C,T0* a1);
void r228make(T228* C,T0* a1);
T6 r228off(T228* C);
T6 r228conforms_to(T228* C,T0* a1);
T0* r228twin(T228* C);
T0* r330out(T330* C);
T6 r330is_equal(T330* C,T0* a1);
T6 r330se_assigned_from(T0* a1);
void r330out_in_tagged_out_memory(T330* C);
T0* r330make(T2 a1);
T6 r330conforms_to(T330* C,T0* a1);
T0* r330resize(T0* a1,T2 a2);
T0* r330twin(T330* C);
T0* r241out(T241* C);
T6 r241is_equal(T241* C,T0* a1);
T6 r241se_assigned_from(T0* a1);
void r241out_in_tagged_out_memory(T241* C);
T0* r241make(T2 a1);
T6 r241conforms_to(T241* C,T0* a1);
T0* r241resize(T0* a1,T2 a2);
T0* r241twin(T241* C);
T0* r642out(T642* C);
void r642copy(T642* C,T0* a1);
T6 r642is_equal(T642* C,T0* a1);
T0* r642item(T642* C);
T6 r642same_position(T642* C,T0* a1);
T6 r642se_assigned_from(T0* a1);
void r642out_in_tagged_out_memory(T642* C);
T6 r642after(T642* C);
T6 r642same_type(T642* C,T0* a1);
void r642make(T642* C,T0* a1);
T6 r642off(T642* C);
T6 r642conforms_to(T642* C,T0* a1);
T0* r642twin(T642* C);
T0* r584out(T584* C);
void r584copy(T584* C,T0* a1);
T0* r584cursor_item(T0* a1);
T6 r584is_equal(T584* C,T0* a1);
void r584remove_traversing_cursor(T584* C,T0* a1);
void r584move_all_cursors_after(T584* C);
void r584add_traversing_cursor(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
void r584out_in_tagged_out_memory(T584* C);
void r584force_first(T584* C,T0* a1);
T6 r584same_type(T584* C,T0* a1);
void r584make(T584* C);
T6 r584cursor_after(T0* a1);
T6 r584conforms_to(T584* C,T0* a1);
void r584cursor_forth(T584* C,T0* a1);
void r584cursor_start(T584* C,T0* a1);
T0* r584twin(T584* C);
void r584force_last(T584* C,T0* a1);
T0* r584new_cursor(T584* C);
T6 r584cursor_off(T0* a1);
T0* r361out(T361* C);
void r361copy(T361* C,T0* a1);
T6 r361is_equal(T361* C,T0* a1);
T6 r361same_position(T361* C,T0* a1);
T6 r361se_assigned_from(T0* a1);
void r361out_in_tagged_out_memory(T361* C);
T6 r361same_type(T361* C,T0* a1);
void r361make(T361* C,T0* a1);
T6 r361off(T361* C);
T6 r361conforms_to(T361* C,T0* a1);
T0* r361twin(T361* C);
T0* r558out(T558* C);
T6 r558is_equal(T558* C,T0* a1);
T6 r558se_assigned_from(T0* a1);
void r558out_in_tagged_out_memory(T558* C);
T6 r558conforms_to(T558* C,T0* a1);
T0* r558twin(T558* C);
T0* r568out(T568* C);
T6 r568is_equal(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
void r568out_in_tagged_out_memory(T568* C);
T0* r568make(T2 a1);
T6 r568conforms_to(T568* C,T0* a1);
T0* r568resize(T0* a1,T2 a2);
T0* r568twin(T568* C);
T0* r151out(T151* C);
void r151copy(T151* C,T0* a1);
T0* r151cursor_item(T0* a1);
T6 r151cursor_is_last(T151* C,T0* a1);
T6 r151is_equal(T151* C,T0* a1);
void r151remove_traversing_cursor(T151* C,T0* a1);
void r151move_all_cursors_after(T151* C);
void r151add_traversing_cursor(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
void r151out_in_tagged_out_memory(T151* C);
T6 r151same_type(T151* C,T0* a1);
void r151make(T151* C);
T6 r151cursor_after(T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
T0* r151first(T151* C);
void r151cursor_forth(T151* C,T0* a1);
void r151cursor_start(T151* C,T0* a1);
T0* r151twin(T151* C);
void r151force_last(T151* C,T0* a1);
T0* r151new_cursor(T151* C);
void r151put_last(T151* C,T0* a1);
T6 r151cursor_off(T0* a1);
T0* r655out(T655* C);
T6 r655is_equal(T655* C,T0* a1);
T6 r655se_assigned_from(T0* a1);
void r655out_in_tagged_out_memory(T655* C);
T6 r655conforms_to(T655* C,T0* a1);
T0* r655twin(T655* C);
T0* r62out(T62* C);
T6 r62is_equal(T62* C,T0* a1);
T6 r62se_assigned_from(T0* a1);
void r62out_in_tagged_out_memory(T62* C);
T6 r62conforms_to(T62* C,T0* a1);
T0* r62twin(T62* C);
T0* r544out(T544* C);
T6 r544is_equal(T544* C,T0* a1);
T6 r544se_assigned_from(T0* a1);
void r544out_in_tagged_out_memory(T544* C);
T6 r544conforms_to(T544* C,T0* a1);
T0* r544twin(T544* C);
T0* r379out(T379* C);
void r379copy(T379* C,T0* a1);
void r379set(T379* C,T0* a1,T6 a2,T6 a3);
T6 r379is_equal(T379* C,T0* a1);
T6 r379same_position(T379* C,T0* a1);
T6 r379se_assigned_from(T0* a1);
void r379out_in_tagged_out_memory(T379* C);
T6 r379same_type(T379* C,T0* a1);
void r379make(T379* C,T0* a1);
T6 r379conforms_to(T379* C,T0* a1);
void r379set_after(T379* C);
T0* r379twin(T379* C);
T0* r384out(T384* C);
T6 r384is_equal(T384* C,T0* a1);
T6 r384se_assigned_from(T0* a1);
void r384out_in_tagged_out_memory(T384* C);
T6 r384conforms_to(T384* C,T0* a1);
T0* r384twin(T384* C);
T0* r596out(T596* C);
void r596copy(T596* C,T0* a1);
void r596set(T596* C,T0* a1,T6 a2,T6 a3);
T6 r596is_equal(T596* C,T0* a1);
T6 r596same_position(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
void r596out_in_tagged_out_memory(T596* C);
T6 r596same_type(T596* C,T0* a1);
void r596make(T596* C,T0* a1);
T6 r596conforms_to(T596* C,T0* a1);
void r596set_after(T596* C);
T0* r596twin(T596* C);
T0* r614out(T614* C);
void r614copy(T614* C,T0* a1);
void r614set(T614* C,T0* a1,T6 a2,T6 a3);
T6 r614is_equal(T614* C,T0* a1);
T6 r614same_position(T614* C,T0* a1);
T6 r614se_assigned_from(T0* a1);
void r614out_in_tagged_out_memory(T614* C);
T6 r614same_type(T614* C,T0* a1);
void r614make(T614* C,T0* a1);
T6 r614conforms_to(T614* C,T0* a1);
void r614set_after(T614* C);
T0* r614twin(T614* C);
T0* r447out(T447* C);
void r447copy(T447* C,T0* a1);
T6 r447is_equal(T447* C,T0* a1);
T6 r447same_position(T447* C,T0* a1);
T6 r447se_assigned_from(T0* a1);
void r447out_in_tagged_out_memory(T447* C);
T6 r447same_type(T447* C,T0* a1);
void r447make(T447* C,T0* a1);
T6 r447off(T447* C);
T6 r447conforms_to(T447* C,T0* a1);
T0* r447twin(T447* C);
T0* r550out(T550* C);
void r550copy(T550* C,T0* a1);
T0* r550cursor_item(T0* a1);
T6 r550is_equal(T550* C,T0* a1);
void r550remove_traversing_cursor(T550* C,T0* a1);
void r550move_all_cursors_after(T550* C);
void r550add_traversing_cursor(T550* C,T0* a1);
T6 r550se_assigned_from(T0* a1);
void r550out_in_tagged_out_memory(T550* C);
T6 r550same_type(T550* C,T0* a1);
void r550make(T550* C);
T6 r550cursor_after(T0* a1);
T6 r550conforms_to(T550* C,T0* a1);
void r550cursor_forth(T550* C,T0* a1);
void r550cursor_start(T550* C,T0* a1);
T0* r550twin(T550* C);
void r550force_last(T550* C,T0* a1);
T0* r550new_cursor(T550* C);
T6 r550cursor_off(T0* a1);
T0* r646out(T646* C);
T6 r646is_equal(T646* C,T0* a1);
T6 r646se_assigned_from(T0* a1);
void r646out_in_tagged_out_memory(T646* C);
T0* r646make(T2 a1);
T6 r646conforms_to(T646* C,T0* a1);
T0* r646resize(T0* a1,T2 a2);
T0* r646twin(T646* C);
T0* r555out(T555* C);
T6 r555is_equal(T555* C,T0* a1);
T6 r555se_assigned_from(T0* a1);
void r555out_in_tagged_out_memory(T555* C);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555twin(T555* C);
void r555put_right(T555* C,T0* a1);
T0* r534out(T534* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
void r534out_in_tagged_out_memory(T534* C);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T0* r304out(T304* C);
T6 r304is_equal(T304* C,T0* a1);
T6 r304se_assigned_from(T0* a1);
void r304out_in_tagged_out_memory(T304* C);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304twin(T304* C);
T0* r367out(T367* C);
T6 r367is_equal(T367* C,T0* a1);
T6 r367se_assigned_from(T0* a1);
void r367out_in_tagged_out_memory(T367* C);
T6 r367conforms_to(T367* C,T0* a1);
T0* r367twin(T367* C);
T0* r114out(T114* C);
T2 r114new_capacity(T2 a1);
void r114copy(T114* C,T0* a1);
void r114force(T114* C,T0* a1,T0* a2);
T0* r114keys_item(T114* C,T2 a1);
T2 r114clashes_item(T114* C,T2 a1);
void r114make_clashes(T114* C,T2 a1);
T0* r114cursor_item(T114* C,T0* a1);
void r114search_position(T114* C,T0* a1);
T6 r114is_equal(T114* C,T0* a1);
void r114remove_traversing_cursor(T114* C,T0* a1);
void r114clone_slots(T114* C);
void r114keys_resize(T114* C,T2 a1);
T0* r114items_item(T114* C,T2 a1);
T0* r114item(T114* C,T0* a1);
void r114clone_clashes(T114* C);
void r114move_all_cursors_after(T114* C);
void r114make_items(T114* C,T2 a1);
void r114add_traversing_cursor(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
T2 r114slots_item(T114* C,T2 a1);
void r114out_in_tagged_out_memory(T114* C);
T6 r114same_type(T114* C,T0* a1);
void r114make(T114* C,T2 a1);
void r114clone_items(T114* C);
T6 r114cursor_after(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has(T114* C,T0* a1);
void r114make_keys(T114* C,T2 a1);
T2 r114hash_position(T114* C,T0* a1);
void r114cursor_forth(T114* C,T0* a1);
void r114items_resize(T114* C,T2 a1);
void r114clone_keys(T114* C);
void r114make_with_equality_testers(T114* C,T2 a1,T0* a2,T0* a3);
void r114resize(T114* C,T2 a1);
T6 r114cursor_same_position(T0* a1,T0* a2);
void r114cursor_start(T114* C,T0* a1);
void r114clashes_resize(T114* C,T2 a1);
void r114slots_resize(T114* C,T2 a1);
T0* r114twin(T114* C);
T0* r114new_cursor(T114* C);
void r114make_slots(T114* C,T2 a1);
void r114keys_put(T114* C,T0* a1,T2 a2);
T2 r114new_modulus(T2 a1);
T6 r114cursor_off(T0* a1);
void r114items_put(T114* C,T0* a1,T2 a2);
T0* r141out(T141* C);
void r141copy(T141* C,T0* a1);
void r141set(T141* C,T0* a1,T6 a2,T6 a3);
T6 r141is_equal(T141* C,T0* a1);
T0* r141item(T141* C);
T6 r141same_position(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
void r141out_in_tagged_out_memory(T141* C);
T6 r141is_last(T141* C);
T6 r141same_type(T141* C,T0* a1);
void r141make(T141* C,T0* a1);
void r141forth(T141* C);
T6 r141conforms_to(T141* C,T0* a1);
void r141start(T141* C);
void r141set_after(T141* C);
T0* r141twin(T141* C);
T0* r123out(T123* C);
void r123clear_all(T0* a1);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
void r123out_in_tagged_out_memory(T123* C);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
T0* r582out(T582* C);
void r582copy(T582* C,T0* a1);
T6 r582is_equal(T582* C,T0* a1);
T6 r582same_position(T582* C,T0* a1);
T6 r582se_assigned_from(T0* a1);
void r582out_in_tagged_out_memory(T582* C);
T6 r582same_type(T582* C,T0* a1);
void r582make(T582* C,T0* a1);
T6 r582off(T582* C);
T6 r582conforms_to(T582* C,T0* a1);
T0* r582twin(T582* C);
T0* r434out(T434* C);
T2 r434new_capacity(T2 a1);
void r434copy(T434* C,T0* a1);
void r434force(T434* C,T0* a1,T0* a2);
void r434wipe_out(T434* C);
T0* r434keys_item(T434* C,T2 a1);
void r434make_clashes(T434* C,T2 a1);
void r434search_position(T434* C,T0* a1);
T6 r434is_equal(T434* C,T0* a1);
void r434remove_traversing_cursor(T434* C,T0* a1);
void r434clone_slots(T434* C);
extern T2 oBC112default_capacity;
void r434keys_resize(T434* C,T2 a1);
void r434clone_clashes(T434* C);
T0* r434item(T434* C,T0* a1);
void r434move_all_cursors_after(T434* C);
void r434make_items(T434* C,T2 a1);
void r434add_traversing_cursor(T434* C,T0* a1);
T6 r434se_assigned_from(T0* a1);
T0* r434clone(T0* a1);
void r434out_in_tagged_out_memory(T434* C);
T6 r434same_type(T434* C,T0* a1);
void r434slots_wipe_out(T434* C);
void r434make(T434* C,T2 a1);
void r434clashes_wipe_out(T434* C);
void r434clone_items(T434* C);
T6 r434conforms_to(T434* C,T0* a1);
T6 r434has(T434* C,T0* a1);
void r434make_keys(T434* C,T2 a1);
T2 r434hash_position(T434* C,T0* a1);
void r434items_wipe_out(T434* C);
void r434items_resize(T434* C,T2 a1);
void r434clone_keys(T434* C);
void r434resize(T434* C,T2 a1);
void r434make_with_equality_testers(T434* C,T2 a1,T0* a2,T0* a3);
T6 r434cursor_same_position(T0* a1,T0* a2);
void r434clashes_resize(T434* C,T2 a1);
void r434slots_resize(T434* C,T2 a1);
T0* r434twin(T434* C);
void r434keys_wipe_out(T434* C);
T0* r434new_cursor(T434* C);
void r434make_slots(T434* C,T2 a1);
void r434keys_put(T434* C,T0* a1,T2 a2);
T2 r434new_modulus(T2 a1);
T6 r434cursor_off(T0* a1);
T0* r82out(T82* C);
void r82copy(T82* C,T0* a1);
T0* r82cursor_item(T0* a1);
T6 r82is_equal(T82* C,T0* a1);
void r82remove_traversing_cursor(T82* C,T0* a1);
void r82move_all_cursors_after(T82* C);
void r82add_traversing_cursor(T82* C,T0* a1);
T6 r82se_assigned_from(T0* a1);
void r82out_in_tagged_out_memory(T82* C);
T6 r82same_type(T82* C,T0* a1);
void r82make(T82* C);
T6 r82cursor_after(T0* a1);
T6 r82conforms_to(T82* C,T0* a1);
void r82cursor_forth(T82* C,T0* a1);
void r82cursor_start(T82* C,T0* a1);
T0* r82twin(T82* C);
void r82force_last(T82* C,T0* a1);
T0* r82new_cursor(T82* C);
T6 r82cursor_off(T0* a1);
T0* r540out(T540* C);
void r540copy(T540* C,T0* a1);
void r540force(T540* C,T3 a1);
void r540wipe_out(T540* C);
T6 r540is_equal(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
void r540out_in_tagged_out_memory(T540* C);
T6 r540same_type(T540* C,T0* a1);
void r540remove(T540* C);
T6 r540conforms_to(T540* C,T0* a1);
T0* r540twin(T540* C);
T0* r126out(T126* C);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
void r126out_in_tagged_out_memory(T126* C);
T6 r126conforms_to(T126* C,T0* a1);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
T0* r607out(T607* C);
T6 r607is_equal(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
void r607out_in_tagged_out_memory(T607* C);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
void r607put_right(T607* C,T0* a1);
T0* r469out(T469* C);
void r469copy(T469* C,T0* a1);
void r469force(T469* C,T2 a1);
T6 r469is_equal(T469* C,T0* a1);
T6 r469se_assigned_from(T0* a1);
void r469out_in_tagged_out_memory(T469* C);
T6 r469same_type(T469* C,T0* a1);
void r469remove(T469* C);
T6 r469conforms_to(T469* C,T0* a1);
T0* r469twin(T469* C);
T0* r383out(T383* C);
void r383copy(T383* C,T0* a1);
T6 r383is_equal(T383* C,T0* a1);
void r383remove_traversing_cursor(T383* C,T0* a1);
void r383move_all_cursors_after(T383* C);
void r383add_traversing_cursor(T383* C,T0* a1);
T6 r383se_assigned_from(T0* a1);
void r383out_in_tagged_out_memory(T383* C);
T6 r383same_type(T383* C,T0* a1);
void r383make(T383* C);
T6 r383conforms_to(T383* C,T0* a1);
void r383cursor_forth(T383* C,T0* a1);
void r383cursor_start(T383* C,T0* a1);
T0* r383twin(T383* C);
T0* r383new_cursor(T383* C);
void r383put_last(T383* C,T0* a1);
T6 r383cursor_off(T0* a1);
T0* r396out(T396* C);
void r396copy(T396* C,T0* a1);
void r396set(T396* C,T0* a1,T6 a2,T6 a3);
T6 r396is_equal(T396* C,T0* a1);
T6 r396same_position(T396* C,T0* a1);
T6 r396se_assigned_from(T0* a1);
void r396out_in_tagged_out_memory(T396* C);
T6 r396same_type(T396* C,T0* a1);
void r396make(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
void r396set_after(T396* C);
T0* r396twin(T396* C);
T0* r276out(T276* C);
T6 r276is_equal(T276* C,T0* a1);
T6 r276se_assigned_from(T0* a1);
void r276out_in_tagged_out_memory(T276* C);
T0* r276make(T2 a1);
T6 r276conforms_to(T276* C,T0* a1);
T0* r276resize(T0* a1,T2 a2);
T0* r276twin(T276* C);
T0* r548out(T548* C);
void r548copy(T548* C,T0* a1);
void r548make_equal(T548* C);
T0* r548cursor_item(T0* a1);
T6 r548cursor_is_last(T548* C,T0* a1);
T6 r548is_equal(T548* C,T0* a1);
void r548remove_traversing_cursor(T548* C,T0* a1);
T0* r548item(T548* C,T2 a1);
void r548move_all_cursors_after(T548* C);
void r548add_traversing_cursor(T548* C,T0* a1);
T6 r548se_assigned_from(T0* a1);
void r548out_in_tagged_out_memory(T548* C);
T6 r548same_type(T548* C,T0* a1);
void r548make(T548* C);
T6 r548cursor_after(T0* a1);
T6 r548conforms_to(T548* C,T0* a1);
void r548cursor_forth(T548* C,T0* a1);
void r548cursor_start(T548* C,T0* a1);
T0* r548twin(T548* C);
void r548force_last(T548* C,T0* a1);
T0* r548new_cursor(T548* C);
void r548put_last(T548* C,T0* a1);
T6 r548cursor_off(T0* a1);
T0* r287out(T287* C);
void r287copy(T287* C,T0* a1);
T6 r287is_equal(T287* C,T0* a1);
T6 r287same_position(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
void r287out_in_tagged_out_memory(T287* C);
T6 r287same_type(T287* C,T0* a1);
T6 r287off(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
T0* r497out(T497* C);
void r497copy(T497* C,T0* a1);
void r497set(T497* C,T0* a1,T6 a2,T6 a3);
T6 r497is_equal(T497* C,T0* a1);
T6 r497same_position(T497* C,T0* a1);
T6 r497se_assigned_from(T0* a1);
void r497out_in_tagged_out_memory(T497* C);
T6 r497same_type(T497* C,T0* a1);
void r497make(T497* C,T0* a1);
T6 r497conforms_to(T497* C,T0* a1);
void r497set_after(T497* C);
T0* r497twin(T497* C);
T0* r58out(T58* C);
void r58copy(T58* C,T0* a1);
T6 r58is_equal(T58* C,T0* a1);
void r58remove_traversing_cursor(T58* C,T0* a1);
void r58move_all_cursors_after(T58* C);
void r58add_traversing_cursor(T58* C,T0* a1);
T6 r58se_assigned_from(T0* a1);
void r58out_in_tagged_out_memory(T58* C);
T6 r58same_type(T58* C,T0* a1);
void r58make(T58* C);
T6 r58conforms_to(T58* C,T0* a1);
void r58cursor_forth(T58* C,T0* a1);
void r58cursor_start(T58* C,T0* a1);
T0* r58twin(T58* C);
void r58force_last(T58* C,T0* a1);
T0* r58new_cursor(T58* C);
T6 r58cursor_off(T0* a1);
T2 r561yy_at_beginning_of_line(T561* C);
extern T0*oBC429normalized_newline;
T2 r561start_condition(T561* C);
void r561set_input_buffer(T561* C,T0* a1);
T0* r561text_substring(T561* C,T2 a1,T2 a2);
extern T0*oBC429yy_ec_template;
extern int fBC429yy_ec_template;
T0* r561yy_ec_template(void);
extern T0*oBC429normalized_space;
void r561yy_execute_action(T561* C,T2 a1);
extern T0*oBC429yy_def_template;
extern int fBC429yy_def_template;
T0* r561yy_def_template(void);
void r561_432Pset_input_buffer(T561* C,T0* a1);
T3 r561text_item(T561* C,T2 a1);
T6 r561end_of_file(T561* C);
T0* r561system_literal_text(T561* C);
void r561yy_load_input_buffer(T561* C);
void r561make_with_buffer(T561* C,T0* a1);
T2 r561yy_null_trans_state(T561* C,T2 a1);
T0* r561_433Pnew_file_buffer(T0* a1);
void r561pop_start_condition(T561* C);
T3 r561to_character(T2 a1);
extern T0*oBC429yy_accept_template;
extern int fBC429yy_accept_template;
T0* r561yy_accept_template(void);
void r561read_token(T561* C);
T2 r561yy_previous_state(T561* C);
void r561yy_refill_input_buffer(T561* C);
T0* r561yy_fixed_array(T0* a1);
T6 r561conforms_to(T561* C,T0* a1);
extern T0*oBC429yy_meta_template;
extern int fBC429yy_meta_template;
T0* r561yy_meta_template(void);
void r561set_input_file(T561* C,T0* a1);
extern T0*oBC429yy_base_template;
extern int fBC429yy_base_template;
T0* r561yy_base_template(void);
void r561_431Preset(T561* C);
T0* r561twin(T561* C);
T2 r561text_count(T561* C);
T0* r561new_file_buffer(T561* C,T0* a1);
void r561_429Pmake_scanner(T561* C);
void r561make_scanner(T561* C);
void r561yy_initialize(T561* C);
void r561reset(T561* C);
void r561push_start_condition(T561* C,T2 a1);
T0* r561text(T561* C);
void r561out_in_tagged_out_memory(T561* C);
extern T0*oBC92string_;
void r561_431Pread_token(T561* C);
extern T0*oBC429yy_nxt_template;
extern int fBC429yy_nxt_template;
T0* r561yy_nxt_template(void);
void r561yy_set_line_column(T561* C);
T6 r561is_equal(T561* C,T0* a1);
extern T0*oBC433empty_buffer;
extern int fBC433empty_buffer;
T0* r561empty_buffer(void);
extern T0*oBC429yy_chk_template;
extern int fBC429yy_chk_template;
T0* r561yy_chk_template(void);
void r561yy_set_content(T561* C,T0* a1);
void r561set_start_condition(T561* C,T2 a1);
T0* r561out(T561* C);
T6 r561se_assigned_from(T0* a1);
void r561yy_build_tables(T561* C);
T0* r560out(T560* C);
T6 r560is_equal(T560* C,T0* a1);
T6 r560se_assigned_from(T0* a1);
void r560out_in_tagged_out_memory(T560* C);
T6 r560conforms_to(T560* C,T0* a1);
T0* r560twin(T560* C);
T0* r404out(T404* C);
T6 r404is_equal(T404* C,T0* a1);
extern T0*oBC18arguments;
extern int fBC18arguments;
T0* r404arguments(void);
T6 r404se_assigned_from(T0* a1);
void r404out_in_tagged_out_memory(T404* C);
void r404make(T404* C,T0* a1,T0* a2,T0* a3);
T0* r404message(T404* C,T0* a1);
T6 r404conforms_to(T404* C,T0* a1);
T0* r404twin(T404* C);
T0* r404default_message(T404* C);
T0* r407out(T407* C);
T6 r407is_equal(T407* C,T0* a1);
T0* r407arguments(void);
T6 r407se_assigned_from(T0* a1);
void r407out_in_tagged_out_memory(T407* C);
void r407make(T407* C,T0* a1,T0* a2,T0* a3);
T0* r407message(T407* C,T0* a1);
T6 r407conforms_to(T407* C,T0* a1);
T0* r407twin(T407* C);
T0* r407default_message(T407* C);
T0* r547out(T547* C);
T6 r547is_equal(T547* C,T0* a1);
T6 r547se_assigned_from(T0* a1);
void r547out_in_tagged_out_memory(T547* C);
T6 r547conforms_to(T547* C,T0* a1);
T0* r547twin(T547* C);
T0* r172out(T172* C);
T6 r172is_closed(T172* C);
void r172old_close(T172* C);
T6 r172is_equal(T172* C,T0* a1);
T2 r172read_to_string(T172* C,T0* a1,T2 a2,T2 a3);
void r172open_read(T172* C);
T6 r172se_assigned_from(T0* a1);
void r172old_read_character(T172* C);
T6 r172old_end_of_file(T172* C);
void r172out_in_tagged_out_memory(T172* C);
void r172read_character(T172* C);
void r172close(T172* C);
void r172make(T172* C,T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
void r172connect_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T0* r326new_system(T326* C,T0* a1,T0* a2);
T0* r326new_exported_feature(T326* C,T0* a1,T0* a2);
extern T0*oBC190uc_loop;
extern int fBC190uc_loop;
T0* r326uc_loop(void);
T0* r326new_options(T326* C,T0* a1,T0* a2);
extern T0*oBC190uc_optimize;
extern int fBC190uc_optimize;
T0* r326uc_optimize(void);
void r326fill_library(T326* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC190uc_link_library;
extern int fBC190uc_link_library;
T0* r326uc_link_library(void);
extern T0*oBC190uc_location;
extern int fBC190uc_location;
T0* r326uc_location(void);
void r326parse_file(T326* C,T0* a1);
void r326make_with_variables_and_factory(T326* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC190uc_creation;
extern int fBC190uc_creation;
T0* r326uc_creation(void);
extern T0*oBC190uc_class;
extern int fBC190uc_class;
T0* r326uc_class(void);
extern T0*oBC190uc_external;
extern int fBC190uc_external;
T0* r326uc_external(void);
extern T0*oBC190uc_alias;
extern int fBC190uc_alias;
T0* r326uc_alias(void);
extern T0*oBC190uc_invariant;
extern int fBC190uc_invariant;
T0* r326uc_invariant(void);
extern T0*oBC190uc_library;
extern int fBC190uc_library;
T0* r326uc_library(void);
T6 r326is_true(T0* a1);
extern T0*oBC190uc_export;
extern int fBC190uc_export;
T0* r326uc_export(void);
extern T0*oBC14execution_environment;
extern T0*oBC190uc_feature;
extern int fBC190uc_feature;
T0* r326uc_feature(void);
extern T0*oBC190uc_mount;
extern int fBC190uc_mount;
T0* r326uc_mount(void);
T0* r326new_library(T326* C,T0* a1,T0* a2);
T6 r326conforms_to(T326* C,T0* a1);
T0* r326twin(T326* C);
extern T0*oBC190uc_abstract;
extern int fBC190uc_abstract;
T0* r326uc_abstract(void);
void r326fill_externals(T326* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC190uc_enable;
extern int fBC190uc_enable;
T0* r326uc_enable(void);
extern T0*oBC190uc_system;
extern int fBC190uc_system;
T0* r326uc_system(void);
void r326out_in_tagged_out_memory(T326* C);
T0* r326new_feature(T326* C,T0* a1,T0* a2);
void r326parse_library(T326* C,T0* a1,T0* a2);
extern T0*oBC190uc_ensure;
extern int fBC190uc_ensure;
T0* r326uc_ensure(void);
extern T0*oBC190uc_debug;
extern int fBC190uc_debug;
T0* r326uc_debug(void);
T0* r326new_unicode_string(T0* a1);
void r326make_with_variables(T326* C,T0* a1,T0* a2);
void r326fill_options(T326* C,T0* a1,T0* a2,T0* a3);
T0* r326new_class(T326* C,T0* a1,T0* a2);
extern T0*oBC190uc_option;
extern int fBC190uc_option;
T0* r326uc_option(void);
extern T0*oBC190uc_name;
extern int fBC190uc_name;
T0* r326uc_name(void);
extern T0*oBC189option_codes;
extern int fBC189option_codes;
T0* r326option_codes(void);
T6 r326is_equal(T326* C,T0* a1);
extern T0*oBC190uc_require;
extern int fBC190uc_require;
T0* r326uc_require(void);
extern T0*oBC190uc_include_dir;
extern int fBC190uc_include_dir;
T0* r326uc_include_dir(void);
extern T0*oBC190uc_cluster;
extern int fBC190uc_cluster;
T0* r326uc_cluster(void);
T0* r326new_export(T326* C,T0* a1,T0* a2);
T6 r326is_false(T0* a1);
extern T0*oBC190uc_relative;
extern int fBC190uc_relative;
T0* r326uc_relative(void);
extern T0*oBC190uc_prefix;
extern int fBC190uc_prefix;
T0* r326uc_prefix(void);
extern T0*oBC190uc_value;
extern int fBC190uc_value;
T0* r326uc_value(void);
T0* r326out(T326* C);
void r326fill_system(T326* C,T0* a1,T0* a2,T0* a3);
T6 r326se_assigned_from(T0* a1);
T0* r326new_cluster(T326* C,T0* a1,T0* a2,T0* a3);
T0* r326new_mount(T326* C,T0* a1,T0* a2);
extern T0*oBC190uc_root;
extern int fBC190uc_root;
T0* r326uc_root(void);
extern T0*oBC190uc_check;
extern int fBC190uc_check;
T0* r326uc_check(void);
T0* r416out(T416* C);
void r416on_start_tag_finish(T416* C);
void r416_208Pon_end_tag(T416* C,T0* a1,T0* a2,T0* a3);
T6 r416is_equal(T416* C,T0* a1);
void r416on_finish(T416* C);
void r416_208Pon_start(T416* C);
void r416on_content(T416* C,T0* a1);
void r416make_null(T416* C);
T6 r416se_assigned_from(T0* a1);
void r416on_start(T416* C);
void r416on_processing_instruction(T416* C,T0* a1,T0* a2);
void r416out_in_tagged_out_memory(T416* C);
void r416on_start_tag(T416* C,T0* a1,T0* a2,T0* a3);
void r416on_comment(T416* C,T0* a1);
void r416on_end_tag(T416* C,T0* a1,T0* a2,T0* a3);
void r416_208Pon_start_tag(T416* C,T0* a1,T0* a2,T0* a3);
T6 r416conforms_to(T416* C,T0* a1);
void r416on_attribute(T416* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r416on_error(T416* C,T0* a1);
T0* r416twin(T416* C);
T0* r415out(T415* C);
T6 r415is_equal(T415* C,T0* a1);
T6 r415se_assigned_from(T0* a1);
void r415out_in_tagged_out_memory(T415* C);
T6 r415conforms_to(T415* C,T0* a1);
T0* r415twin(T415* C);
T0* r186new_system(T186* C,T0* a1,T0* a2);
T0* r186new_exported_feature(T186* C,T0* a1,T0* a2);
T0* r186uc_loop(void);
T0* r186new_options(T186* C,T0* a1,T0* a2);
T0* r186uc_optimize(void);
void r186fill_library(T186* C,T0* a1,T0* a2,T0* a3);
T0* r186uc_link_library(void);
T0* r186uc_location(void);
void r186parse_file(T186* C,T0* a1);
void r186make_with_variables_and_factory(T186* C,T0* a1,T0* a2,T0* a3);
T0* r186uc_creation(void);
T0* r186uc_class(void);
T0* r186uc_external(void);
T0* r186uc_alias(void);
T0* r186uc_invariant(void);
T0* r186uc_library(void);
T6 r186is_true(T0* a1);
T0* r186uc_export(void);
T0* r186uc_feature(void);
T0* r186uc_mount(void);
T0* r186new_library(T186* C,T0* a1,T0* a2);
T6 r186conforms_to(T186* C,T0* a1);
T0* r186twin(T186* C);
T0* r186uc_abstract(void);
void r186fill_externals(T186* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r186uc_enable(void);
T0* r186uc_system(void);
void r186out_in_tagged_out_memory(T186* C);
T0* r186new_feature(T186* C,T0* a1,T0* a2);
T0* r186uc_ensure(void);
T0* r186uc_debug(void);
T0* r186new_unicode_string(T0* a1);
void r186make_with_variables(T186* C,T0* a1,T0* a2);
void r186fill_options(T186* C,T0* a1,T0* a2,T0* a3);
T0* r186new_class(T186* C,T0* a1,T0* a2);
T0* r186uc_option(void);
T0* r186uc_name(void);
T0* r186option_codes(void);
T6 r186is_equal(T186* C,T0* a1);
T0* r186uc_require(void);
T0* r186uc_include_dir(void);
T0* r186uc_cluster(void);
T0* r186new_export(T186* C,T0* a1,T0* a2);
T6 r186is_false(T0* a1);
T0* r186uc_relative(void);
T0* r186uc_prefix(void);
T0* r186uc_value(void);
T0* r186out(T186* C);
void r186fill_system(T186* C,T0* a1,T0* a2,T0* a3);
T6 r186se_assigned_from(T0* a1);
T0* r186new_cluster(T186* C,T0* a1,T0* a2,T0* a3);
T0* r186new_mount(T186* C,T0* a1,T0* a2);
T0* r186uc_root(void);
T0* r186uc_check(void);
T0* r207out(T207* C);
void r207on_start_tag_finish(T207* C);
void r207_208Pon_end_tag(T207* C,T0* a1,T0* a2,T0* a3);
void r207_208Pon_processing_instruction(T207* C,T0* a1,T0* a2);
T6 r207is_equal(T207* C,T0* a1);
void r207_208Pon_comment(T207* C,T0* a1);
void r207on_finish(T207* C);
void r207_208Pon_start(T207* C);
void r207on_content(T207* C,T0* a1);
void r207make_null(T207* C);
T6 r207se_assigned_from(T0* a1);
void r207on_start(T207* C);
void r207on_processing_instruction(T207* C,T0* a1,T0* a2);
void r207out_in_tagged_out_memory(T207* C);
void r207_208Pon_content(T207* C,T0* a1);
void r207_208Pon_start_tag_finish(T207* C);
void r207on_start_tag(T207* C,T0* a1,T0* a2,T0* a3);
void r207on_comment(T207* C,T0* a1);
void r207on_end_tag(T207* C,T0* a1,T0* a2,T0* a3);
void r207_208Pon_start_tag(T207* C,T0* a1,T0* a2,T0* a3);
T6 r207conforms_to(T207* C,T0* a1);
void r207on_attribute(T207* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r207_208Pon_error(T207* C,T0* a1);
void r207_208Pon_attribute(T207* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r207on_error(T207* C,T0* a1);
T0* r207twin(T207* C);
void r207_208Pon_finish(T207* C);
T0* r272out(T272* C);
T6 r272is_equal(T272* C,T0* a1);
T0* r272arguments(void);
T6 r272se_assigned_from(T0* a1);
void r272out_in_tagged_out_memory(T272* C);
void r272make(T272* C,T0* a1,T0* a2);
T0* r272message(T272* C,T0* a1);
T6 r272conforms_to(T272* C,T0* a1);
T0* r272twin(T272* C);
T0* r272default_message(T272* C);
T0* r496out(T496* C);
T6 r496is_equal(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
void r496out_in_tagged_out_memory(T496* C);
void r496make(T496* C,T0* a1,T0* a2);
T6 r496conforms_to(T496* C,T0* a1);
T0* r496twin(T496* C);
T6 r269is_address_expression_declared(T269* C);
void r269set_layout_optimization(T269* C,T6 a1);
T6 r269portable_code_generation(T269* C);
T0* r269arguments(T269* C);
T6 r269is_abstract_declared(T269* C);
void r269set_map(T269* C,T6 a1);
T6 r269profile(T269* C);
T6 r269is_storable_declared(T269* C);
T6 r269is_linux_fpu_double_precision_declared(T269* C);
void r269set_gc_info(T269* C,T6 a1);
T6 r269dynamic_runtime(T269* C);
T0* r269include(T269* C);
T6 r269is_no_default_lib_declared(T269* C);
extern T0*oBC269valid_assertion;
extern int fBC269valid_assertion;
T0* r269valid_assertion(void);
T6 r269debug_option(T269* C);
void r269set_exception_trace(T269* C,T6 a1);
extern T0*oBC269default_assertion;
extern int fBC269default_assertion;
T0* r269default_assertion(void);
T0* r269warning(T269* C);
void r269set_wedit(T269* C,T6 a1);
extern T0*oBC269default_include;
extern int fBC269default_include;
T0* r269default_include(void);
T6 r269abstract(T269* C);
extern T0*oBC269default_warning;
extern int fBC269default_warning;
T0* r269default_warning(void);
void r269set_finalize(T269* C,T6 a1);
extern T0*oBC269default_linker;
extern int fBC269default_linker;
T0* r269default_linker(void);
void r269set_dynamic_runtime(T269* C,T6 a1);
extern T0*oBC269default_override_cluster;
void r269set_verbose(T269* C,T6 a1);
extern T0*oBC269default_precompiled;
T6 r269exception_trace(T269* C);
void r269set_trace(T269* C,T6 a1);
T6 r269is_inlining_declared(T269* C);
T0* r269linker(T269* C);
void r269set_clean(T269* C,T6 a1);
extern T0*oBC269default_visible_filename;
T6 r269is_header_declared(T269* C);
T6 r269is_check_vape_declared(T269* C);
T6 r269is_debug_tag_declared(T269* C);
T0* r269link(T269* C);
T0* r269component(T269* C);
T6 r269is_gc_info_declared(T269* C);
extern T0*oBC269default_garbage_collector;
extern int fBC269default_garbage_collector;
T0* r269default_garbage_collector(void);
T6 r269is_trace_declared(T269* C);
T6 r269is_layout_optimization_declared(T269* C);
void r269set_array_optimization(T269* C,T6 a1);
extern T0*oBC269default_link;
extern int fBC269default_link;
T0* r269default_link(void);
void r269set_line_generation(T269* C,T6 a1);
T6 r269is_recursive_declared(T269* C);
T0* r269inlining(T269* C);
extern T0*oBC269valid_target;
extern int fBC269valid_target;
T0* r269valid_target(void);
T6 r269is_portable_code_generation_declared(T269* C);
void r269set_exclude(T269* C,T0* a1);
T6 r269is_include_declared(T269* C);
void r269set_debug_tag(T269* C,T0* a1);
T6 r269is_profile_declared(T269* C);
T6 r269is_strip_option_declared(T269* C);
T0* r269dead_code_removal(T269* C);
T6 r269is_dynamic_runtime_declared(T269* C);
T6 r269line_generation(T269* C);
T6 r269check_vape(T269* C);
T6 r269reloads_optimization(T269* C);
extern T0*oBC77options;
extern T0*oBC269default_inlining;
extern int fBC269default_inlining;
T0* r269default_inlining(void);
void r269set_console_application(T269* C,T6 a1);
T6 r269case_insensitive(T269* C);
extern T0*oBC269default_header;
extern int fBC269default_header;
T0* r269default_header(void);
extern T0*oBC269valid_warning;
extern int fBC269valid_warning;
T0* r269valid_warning(void);
extern T0*oBC269valid_dead_code_removal;
extern int fBC269valid_dead_code_removal;
T0* r269valid_dead_code_removal(void);
T6 r269multithreaded(T269* C);
void r269set_reloads_optimization(T269* C,T6 a1);
T6 r269strip_option(T269* C);
void r269set_manifest_string_trace(T269* C,T6 a1);
extern T0*oBC269default_arguments;
extern int fBC269default_arguments;
T0* r269default_arguments(void);
void r269set_check_vape(T269* C,T6 a1);
T6 r269is_map_declared(T269* C);
T6 r269layout_optimization(T269* C);
void r269set_portable_code_generation(T269* C,T6 a1);
T6 r269high_memory_compiler(T269* C);
T6 r269is_wedit_declared(T269* C);
T6 r269split(T269* C);
void r269set_leaves_optimization(T269* C,T6 a1);
T6 r269leaves_optimization(T269* C);
T6 r269linux_fpu_double_precision(T269* C);
T6 r269is_link_declared(T269* C);
T6 r269is_fst_optimization_declared(T269* C);
void r269set_address_expression(T269* C,T6 a1);
T0* r269debug_tag(T269* C);
void r269set_strip_option(T269* C,T6 a1);
T0* r269shared_library_definition(T269* C);
void r269set_create_keyword_extension(T269* C,T6 a1);
extern T0*oBC269default_component;
T6 r269array_optimization(T269* C);
T6 r269storable(T269* C);
void r269set_inlining(T269* C,T0* a1);
T6 r269jumps_optimization(T269* C);
extern T0*oBC269default_export_option;
T6 r269is_create_keyword_extension_declared(T269* C);
extern T0*oBC269default_dead_code_removal;
extern int fBC269default_dead_code_removal;
T0* r269default_dead_code_removal(void);
void r269set_case_insensitive(T269* C,T6 a1);
T6 r269conforms_to(T269* C,T0* a1);
void r269set_recursive(T269* C,T6 a1);
void r269set_profile(T269* C,T6 a1);
T6 r269is_exception_trace_declared(T269* C);
T6 r269is_dead_code_removal_declared(T269* C);
T6 r269is_jumps_optimization_declared(T269* C);
void r269set_include(T269* C,T0* a1);
T6 r269map(T269* C);
T6 r269is_verbose_declared(T269* C);
void r269set_no_default_lib(T269* C,T6 a1);
T0* r269garbage_collector(T269* C);
T6 r269console_application(T269* C);
T0* r269twin(T269* C);
T6 r269gc_info(T269* C);
T6 r269finalize(T269* C);
void r269set_dead_code_removal(T269* C,T0* a1);
T0* r269target(T269* C);
void r269set_abstract(T269* C,T6 a1);
T0* r269visible_filename(T269* C);
T6 r269is_array_optimization_declared(T269* C);
void r269set_assertion(T269* C,T0* a1);
extern T0*oBC269default_storable_filename;
T6 r269is_case_insensitive_declared(T269* C);
void r269set_link(T269* C,T0* a1);
void r269out_in_tagged_out_memory(T269* C);
T0* r269document(T269* C);
T6 r269verbose(T269* C);
T6 r269is_arguments_declared(T269* C);
T6 r269is_exclude_declared(T269* C);
T2 r269inlining_size(T269* C);
extern T0*oBC269default_target;
extern int fBC269default_target;
T0* r269default_target(void);
void r269set_header(T269* C,T0* a1);
extern T0*oBC269valid_linker;
extern int fBC269valid_linker;
T0* r269valid_linker(void);
T0* r269override_cluster(T269* C);
void r269set_debugger(T269* C,T6 a1);
extern T0*oBC269default_debug_tag;
extern int fBC269default_debug_tag;
T0* r269default_debug_tag(void);
extern T0*oBC269default_document;
void r269set_split(T269* C,T6 a1);
T6 r269flat_fst_optimization(T269* C);
T6 r269recursive(T269* C);
T6 r269is_reloads_optimization_declared(T269* C);
T6 r269is_high_memory_compiler_declared(T269* C);
void r269set_jumps_optimization(T269* C,T6 a1);
T0* r269exclude(T269* C);
T0* r269storable_filename(T269* C);
T6 r269wedit(T269* C);
extern T0*oBC269default_exclude;
extern int fBC269default_exclude;
T0* r269default_exclude(void);
T6 r269is_manifest_string_trace_declared(T269* C);
T6 r269is_equal(T269* C,T0* a1);
T2 r269fst_expansion_factor(T269* C);
T0* r269precompiled(T269* C);
T6 r269is_flat_fst_optimization_declared(T269* C);
T6 r269is_console_application_declared(T269* C);
T0* r269assertion(T269* C);
T6 r269trace(T269* C);
T6 r269is_clean_declared(T269* C);
T6 r269clean(T269* C);
extern T0*oBC269valid_inlining;
extern int fBC269valid_inlining;
T0* r269valid_inlining(void);
T6 r269is_assertion_declared(T269* C);
void r269set_multithreaded(T269* C,T6 a1);
T6 r269fst_optimization(T269* C);
void r269set_arguments(T269* C,T0* a1);
T6 r269is_debugger_declared(T269* C);
void r269set_high_memory_compiler(T269* C,T6 a1);
T6 r269is_leaves_optimization_declared(T269* C);
T2 r269stack_size(T269* C);
T6 r269address_expression(T269* C);
void r269make(T269* C);
void r269set_linux_fpu_double_precision(T269* C,T6 a1);
T6 r269is_line_generation_declared(T269* C);
T6 r269create_keyword_extension(T269* C);
T0* r269export_option(T269* C);
T6 r269manifest_string_trace(T269* C);
T0* r269out(T269* C);
T6 r269no_default_lib(T269* C);
T0* r269header(T269* C);
T6 r269se_assigned_from(T0* a1);
extern T0*oBC269valid_garbage_collector;
extern int fBC269valid_garbage_collector;
T0* r269valid_garbage_collector(void);
T2 r269heap_size(T269* C);
void r269set_debug_option(T269* C,T6 a1);
void r269set_fst_optimization(T269* C,T6 a1);
T6 r269is_debug_option_declared(T269* C);
T6 r269is_split_declared(T269* C);
extern T0*oBC269default_shared_library_definition;
T6 r269is_multithreaded_declared(T269* C);
void r269set_flat_fst_optimization(T269* C,T6 a1);
T6 r269debugger(T269* C);
T6 r269is_finalize_declared(T269* C);
T0* r489out(T489* C);
T6 r489is_equal(T489* C,T0* a1);
void r489put_include_directory(T489* C,T0* a1);
T6 r489se_assigned_from(T0* a1);
void r489out_in_tagged_out_memory(T489* C);
void r489make(T489* C);
T6 r489is_empty(T489* C);
T6 r489conforms_to(T489* C,T0* a1);
T6 r489has_include_directories(T489* C);
T6 r489has_link_libraries(T489* C);
void r489put_link_library(T489* C,T0* a1);
T0* r489twin(T489* C);
T0* r363out(T363* C);
T6 r363is_equal(T363* C,T0* a1);
T0* r363arguments(void);
T6 r363se_assigned_from(T0* a1);
void r363out_in_tagged_out_memory(T363* C);
void r363make(T363* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r363message(T363* C,T0* a1);
T6 r363conforms_to(T363* C,T0* a1);
T0* r363twin(T363* C);
T0* r363default_message(T363* C);
T0* r185out(T185* C);
T6 r185is_equal(T185* C,T0* a1);
T6 r185se_assigned_from(T0* a1);
void r185out_in_tagged_out_memory(T185* C);
T6 r185conforms_to(T185* C,T0* a1);
T0* r185twin(T185* C);
void r185mount_libraries(T185* C);
void r185merge_externals(T185* C,T0* a1);
void r185merge_exported_features(T185* C,T0* a1);
T0* r195out(T195* C);
void r195put(T195* C,T0* a1,T0* a2);
T6 r195is_equal(T195* C,T0* a1);
T0* r195item(T195* C,T0* a1);
T6 r195se_assigned_from(T0* a1);
void r195out_in_tagged_out_memory(T195* C);
void r195make(T195* C);
T6 r195conforms_to(T195* C,T0* a1);
T0* r195twin(T195* C);
T0* r205out(T205* C);
T6 r205is_equal(T205* C,T0* a1);
T0* r205callbacks_pipe(T0* a1);
T6 r205se_assigned_from(T0* a1);
T0* r205new_tree_builder(void);
void r205out_in_tagged_out_memory(T205* C);
void r205make(T205* C);
T0* r205new_end_tag_checker(void);
T6 r205conforms_to(T205* C,T0* a1);
T0* r205new_stop_on_error(void);
T0* r205twin(T205* C);
T0* r187new_system(T187* C,T0* a1,T0* a2);
T0* r187new_exported_feature(T187* C,T0* a1,T0* a2);
T0* r187uc_loop(void);
T0* r187new_options(T187* C,T0* a1,T0* a2);
T0* r187uc_optimize(void);
void r187fill_library(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187uc_link_library(void);
T0* r187uc_location(void);
void r187parse_file(T187* C,T0* a1);
void r187make_with_variables_and_factory(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187uc_creation(void);
T0* r187uc_class(void);
T0* r187uc_external(void);
T0* r187uc_alias(void);
T0* r187uc_invariant(void);
T0* r187uc_library(void);
T6 r187is_true(T0* a1);
T0* r187uc_export(void);
T0* r187uc_feature(void);
T0* r187uc_mount(void);
T0* r187new_library(T187* C,T0* a1,T0* a2);
T6 r187conforms_to(T187* C,T0* a1);
T0* r187twin(T187* C);
T0* r187uc_abstract(void);
void r187fill_externals(T187* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r187uc_enable(void);
T0* r187uc_system(void);
void r187out_in_tagged_out_memory(T187* C);
T0* r187new_feature(T187* C,T0* a1,T0* a2);
T0* r187uc_ensure(void);
T0* r187uc_debug(void);
T0* r187new_unicode_string(T0* a1);
void r187make_with_variables(T187* C,T0* a1,T0* a2);
void r187fill_options(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187new_class(T187* C,T0* a1,T0* a2);
T0* r187uc_option(void);
T0* r187uc_name(void);
T0* r187option_codes(void);
T6 r187is_equal(T187* C,T0* a1);
T0* r187uc_require(void);
T0* r187uc_include_dir(void);
T0* r187uc_cluster(void);
T0* r187new_export(T187* C,T0* a1,T0* a2);
T6 r187is_false(T0* a1);
T0* r187uc_relative(void);
T0* r187uc_prefix(void);
T0* r187uc_value(void);
T0* r187out(T187* C);
void r187fill_system(T187* C,T0* a1,T0* a2,T0* a3);
T6 r187se_assigned_from(T0* a1);
T0* r187new_cluster(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187new_mount(T187* C,T0* a1,T0* a2);
T0* r187uc_root(void);
T0* r187uc_check(void);
T0* r132out(T132* C);
T6 r132is_equal(T132* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132out_in_tagged_out_memory(T132* C);
void r132execute_generators(T132* C,T0* a1);
void r132make(T132* C,T0* a1,T0* a2);
T6 r132conforms_to(T132* C,T0* a1);
void r132execute(T132* C);
T0* r132twin(T132* C);
T0* r130out(T130* C);
void r130print_cluster(T130* C,T0* a1,T2 a2,T0* a3);
void r130generate_library(T130* C,T0* a1);
void r130print_xml_library_file(T130* C,T0* a1,T0* a2);
T6 r130is_equal(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
void r130out_in_tagged_out_memory(T130* C);
void r130print_feature_options(T0* a1,T2 a2,T0* a3);
void r130make(T130* C,T0* a1,T0* a2);
void r130print_clusters(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130conforms_to(T130* C,T0* a1);
void r130print_class_options(T0* a1,T2 a2,T0* a3);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130generate_system(T130* C,T0* a1);
void r130print_xml_system_file(T130* C,T0* a1,T0* a2);
T0* r536out(T536* C);
void r536fill(T536* C);
void r536compact_left(T536* C);
void r536set_position(T536* C,T2 a1,T2 a2,T2 a3);
T0* r536name(T536* C);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
void r536make_from_string(T536* C,T0* a1);
void r536out_in_tagged_out_memory(T536* C);
T6 r536conforms_to(T536* C,T0* a1);
void r536make_from_buffer(T536* C,T0* a1);
void r536resize(T536* C);
void r536make_with_size(T536* C,T0* a1,T2 a2);
T0* r536twin(T536* C);
void r536set_file(T536* C,T0* a1);
void r536flush(T536* C);
T0* r406out(T406* C);
void r406on_start_tag_finish(T406* C);
T0* r406next_open_composite(T0* a1);
void r406enable_position_table(T406* C,T0* a1);
T6 r406is_equal(T406* C,T0* a1);
void r406on_finish(T406* C);
void r406on_content(T406* C,T0* a1);
void r406make_null(T406* C);
T6 r406se_assigned_from(T0* a1);
void r406on_start(T406* C);
void r406on_processing_instruction(T406* C,T0* a1,T0* a2);
void r406out_in_tagged_out_memory(T406* C);
void r406on_start_tag(T406* C,T0* a1,T0* a2,T0* a3);
void r406handle_position(T406* C,T0* a1);
void r406on_comment(T406* C,T0* a1);
void r406on_end_tag(T406* C,T0* a1,T0* a2,T0* a3);
T6 r406conforms_to(T406* C,T0* a1);
void r406on_attribute(T406* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r406on_error(T406* C,T0* a1);
T0* r406twin(T406* C);
T6 r530is_equal(T530* C,T0* a1);
T6 r530se_assigned_from(T0* a1);
void r530out_in_tagged_out_memory(T530* C);
T6 r530conforms_to(T530* C,T0* a1);
T0* r530twin(T530* C);
T0* r551out(T551* C);
T6 r551is_equal(T551* C,T0* a1);
void r551make_choice(T551* C);
void r551make_mixed(T551* C);
void r551set_content_mixed(T551* C);
T6 r551se_assigned_from(T0* a1);
T0* r551clone(T0* a1);
void r551out_in_tagged_out_memory(T551* C);
void r551make_empty(T551* C);
void r551set_default(T551* C);
void r551make_any(T551* C);
T6 r551conforms_to(T551* C,T0* a1);
void r551make_sequence(T551* C);
T6 r551is_content_mixed(T551* C);
void r551make_list(T551* C);
void r551make_name(T551* C,T0* a1);
T0* r551twin(T551* C);
void r551set_content_any(T551* C);
T0* r309out(T309* C);
T6 r309is_equal(T309* C,T0* a1);
T6 r309se_assigned_from(T0* a1);
void r309out_in_tagged_out_memory(T309* C);
T6 r309conforms_to(T309* C,T0* a1);
T6 r309is_undefined(T309* C);
T0* r309twin(T309* C);
T0* r307out(T307* C);
T6 r307is_equal(T307* C,T0* a1);
T0* r307arguments(void);
T6 r307se_assigned_from(T0* a1);
void r307out_in_tagged_out_memory(T307* C);
void r307make(T307* C,T0* a1);
T0* r307message(T307* C,T0* a1);
T6 r307conforms_to(T307* C,T0* a1);
T0* r307twin(T307* C);
T0* r307default_message(T307* C);
T0* r483out(T483* C);
T6 r483is_closed(T483* C);
void r483old_close(T483* C);
T6 r483is_equal(T483* C,T0* a1);
T6 r483se_assigned_from(T0* a1);
void r483out_in_tagged_out_memory(T483* C);
void r483close(T483* C);
void r483make(T483* C,T0* a1);
void r483old_put_string(T483* C,T0* a1);
T6 r483conforms_to(T483* C,T0* a1);
void r483connect_to(T483* C,T0* a1);
void r483put_integer(T483* C,T2 a1);
void r483put_line(T483* C,T0* a1);
T0* r483twin(T483* C);
void r483open_write(T483* C);
T0* r127out(T127* C);
void r127print_cluster(T127* C,T0* a1,T0* a2);
void r127generate_library(T127* C,T0* a1);
T6 r127print_cluster_options(T0* a1,T2 a2,T0* a3);
T6 r127is_equal(T127* C,T0* a1);
T0* r127replace_all_characters(T0* a1,T3 a2,T3 a3);
T6 r127se_assigned_from(T0* a1);
T0* r127clone(T0* a1);
T6 r127is_lace_keyword(T0* a1);
T6 r127is_windows(T127* C);
void r127print_ace_file(T127* C,T0* a1,T0* a2);
void r127out_in_tagged_out_memory(T127* C);
void r127make(T127* C,T0* a1,T0* a2);
extern T0*oBC13operating_system;
void r127print_clusters(T127* C,T0* a1,T0* a2);
T6 r127conforms_to(T127* C,T0* a1);
T6 r127print_class_options(T0* a1,T2 a2,T0* a3);
void r127print_precompile_ace_file(T127* C,T0* a1,T0* a2);
void r127print_escaped_name(T0* a1,T0* a2);
T0* r127twin(T127* C);
void r127print_options(T0* a1,T2 a2,T0* a3);
extern T0*oBC127lace_keywords;
void r127print_indentation(T2 a1,T0* a2);
void r127print_link_libraries(T127* C,T0* a1,T0* a2);
void r127generate_system(T127* C,T0* a1);
void r127print_include_directories(T127* C,T0* a1,T0* a2);
T0* r657out(T657* C);
T6 r657is_equal(T657* C,T0* a1);
T6 r657se_assigned_from(T0* a1);
void r657out_in_tagged_out_memory(T657* C);
void r657make(T657* C,T0* a1,T0* a2);
T6 r657conforms_to(T657* C,T0* a1);
T0* r657twin(T657* C);
T0* r104out(T104* C);
T6 r104is_defined(T104* C,T0* a1);
extern T0*oBC105template_expander;
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104out_in_tagged_out_memory(T104* C);
void r104make(T104* C);
T0* r104value(T104* C,T0* a1);
T6 r104conforms_to(T104* C,T0* a1);
T0* r104twin(T104* C);
void r104define_value(T104* C,T0* a1,T0* a2);
T0* r104expanded_variables(T104* C,T0* a1);
void r617_428Pread_token(T617* C);
T2 r617yy_at_beginning_of_line(T617* C);
T0* r617normalized_newline(T617* C);
T2 r617start_condition(T617* C);
void r617set_input_buffer(T617* C,T0* a1);
T0* r617text_substring(T617* C,T2 a1,T2 a2);
T0* r617yy_ec_template(void);
void r617yy_execute_action(T617* C,T2 a1);
T0* r617yy_def_template(void);
void r617_432Pset_input_buffer(T617* C,T0* a1);
T3 r617text_item(T617* C,T2 a1);
T6 r617end_of_file(T617* C);
T0* r617system_literal_text(T617* C);
T0* r617new_string_buffer(T0* a1);
void r617yy_load_input_buffer(T617* C);
void r617apply_input_buffer(T617* C);
void r617make_with_buffer(T617* C,T0* a1);
T2 r617yy_null_trans_state(T617* C,T2 a1);
T0* r617_433Pnew_file_buffer(T0* a1);
void r617_429P_428Preset(T617* C);
void r617pop_start_condition(T617* C);
T3 r617to_character(T2 a1);
T0* r617yy_accept_template(void);
void r617read_token(T617* C);
T2 r617yy_previous_state(T617* C);
void r617yy_refill_input_buffer(T617* C);
T0* r617yy_fixed_array(T0* a1);
T6 r617conforms_to(T617* C,T0* a1);
T0* r617yy_meta_template(void);
void r617set_input_file(T617* C,T0* a1);
T0* r617yy_base_template(void);
void r617_431P_429P_428Preset(T617* C);
T0* r617twin(T617* C);
T2 r617text_count(T617* C);
T0* r617new_file_buffer(T617* C,T0* a1);
void r617make_scanner(T617* C);
void r617yy_initialize(T617* C);
void r617reset(T617* C);
void r617push_start_condition(T617* C,T2 a1);
T0* r617text(T617* C);
void r617out_in_tagged_out_memory(T617* C);
void r617make_def(T617* C,T0* a1);
void r617reset_sent(T617* C);
T0* r617yy_nxt_template(void);
void r617yy_set_line_column(T617* C);
void r617make_literal(T617* C,T0* a1);
T6 r617is_equal(T617* C,T0* a1);
T0* r617empty_buffer(void);
T0* r617yy_chk_template(void);
void r617_428Preset(T617* C);
void r617yy_set_content(T617* C,T0* a1);
void r617set_start_condition(T617* C,T2 a1);
T0* r617out(T617* C);
void r617_431P_428Pread_token(T617* C);
T6 r617se_assigned_from(T0* a1);
void r617yy_build_tables(T617* C);
void r617make_external(T617* C,T0* a1);
T0* r133out(T133* C);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133out_in_tagged_out_memory(T133* C);
void r133make(T133* C,T0* a1,T0* a2);
T6 r133conforms_to(T133* C,T0* a1);
void r133execute(T133* C);
T0* r133twin(T133* C);
T0* r100out(T100* C);
T6 r100is_equal(T100* C,T0* a1);
T0* r100arguments(void);
T6 r100se_assigned_from(T0* a1);
void r100out_in_tagged_out_memory(T100* C);
void r100make(T100* C,T0* a1);
T0* r100message(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100default_message(T100* C);
void r428_429Preset(T428* C);
T2 r428yy_at_beginning_of_line(T428* C);
T0* r428normalized_newline(T428* C);
T6 r428is_literal(T428* C);
T2 r428start_condition(T428* C);
void r428set_input_buffer(T428* C,T0* a1);
T0* r428text_substring(T428* C,T2 a1,T2 a2);
T0* r428yy_ec_template(void);
void r428yy_execute_action(T428* C,T2 a1);
void r428_431P_429Preset(T428* C);
T0* r428yy_def_template(void);
void r428_432Pset_input_buffer(T428* C,T0* a1);
T3 r428text_item(T428* C,T2 a1);
T6 r428end_of_file(T428* C);
T0* r428system_literal_text(T428* C);
T0* r428new_string_buffer(T0* a1);
void r428yy_load_input_buffer(T428* C);
void r428apply_input_buffer(T428* C);
void r428make_with_buffer(T428* C,T0* a1);
T2 r428yy_null_trans_state(T428* C,T2 a1);
T0* r428_433Pnew_file_buffer(T0* a1);
void r428pop_start_condition(T428* C);
T3 r428to_character(T2 a1);
T0* r428yy_accept_template(void);
void r428read_token(T428* C);
T2 r428yy_previous_state(T428* C);
void r428yy_refill_input_buffer(T428* C);
void r428push_start_condition_dtd_ignore(T428* C);
T0* r428yy_fixed_array(T0* a1);
T6 r428conforms_to(T428* C,T0* a1);
T0* r428yy_meta_template(void);
void r428set_input_file(T428* C,T0* a1);
T0* r428yy_base_template(void);
T0* r428twin(T428* C);
T2 r428text_count(T428* C);
T0* r428new_file_buffer(T428* C,T0* a1);
void r428make_scanner(T428* C);
void r428yy_initialize(T428* C);
void r428reset(T428* C);
void r428push_start_condition(T428* C,T2 a1);
T0* r428text(T428* C);
void r428out_in_tagged_out_memory(T428* C);
void r428_431Pread_token(T428* C);
T0* r428yy_nxt_template(void);
void r428yy_set_line_column(T428* C);
void r428make_literal(T428* C,T0* a1);
T6 r428is_equal(T428* C,T0* a1);
T0* r428empty_buffer(void);
T0* r428yy_chk_template(void);
void r428yy_set_content(T428* C,T0* a1);
void r428set_start_condition(T428* C,T2 a1);
void r428yy_execute_eof_action(T428* C,T2 a1);
T0* r428out(T428* C);
T6 r428se_assigned_from(T0* a1);
void r428yy_build_tables(T428* C);
void r428make_external(T428* C,T0* a1);
T0* r382out(T382* C);
T6 r382is_equal(T382* C,T0* a1);
T6 r382se_assigned_from(T0* a1);
void r382out_in_tagged_out_memory(T382* C);
void r382make(T382* C,T0* a1,T0* a2);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382twin(T382* C);
T0* r211out(T211* C);
T6 r211is_equal(T211* C,T0* a1);
T6 r211se_assigned_from(T0* a1);
void r211out_in_tagged_out_memory(T211* C);
void r211merge_libraries(T211* C,T0* a1,T0* a2);
T6 r211conforms_to(T211* C,T0* a1);
T0* r211twin(T211* C);
void r211mount_libraries(T211* C);
void r211merge_externals(T211* C,T0* a1);
T0* r103out(T103* C);
void r103print_cluster(T103* C,T0* a1,T0* a2);
void r103generate_library(T103* C,T0* a1);
void r103print_loadpath_clusters(T103* C,T0* a1,T0* a2);
T6 r103print_cluster_options(T0* a1,T2 a2,T0* a3);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_loadpath_cluster(T103* C,T0* a1,T0* a2);
void r103print_ace_file(T103* C,T0* a1,T0* a2);
void r103generate_cecil_file(T103* C,T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103make(T103* C,T0* a1,T0* a2);
void r103print_clusters(T103* C,T0* a1,T0* a2);
T6 r103conforms_to(T103* C,T0* a1);
void r103print_generate(T0* a1,T2 a2,T0* a3);
T6 r103print_class_options(T0* a1,T2 a2,T0* a3);
void r103print_escaped_name(T0* a1,T0* a2);
T0* r103twin(T103* C);
void r103print_options(T0* a1,T2 a2,T0* a3);
void r103print_indentation(T2 a1,T0* a2);
void r103print_link_libraries(T0* a1,T0* a2);
void r103generate_system(T103* C,T0* a1);
void r103print_include_directories(T0* a1,T0* a2);
T0* r625out(T625* C);
T6 r625is_equal(T625* C,T0* a1);
T6 r625se_assigned_from(T0* a1);
void r625out_in_tagged_out_memory(T625* C);
void r625make(T625* C,T0* a1,T0* a2);
T6 r625conforms_to(T625* C,T0* a1);
T0* r625twin(T625* C);
T0* r156out(T156* C);
T6 r156is_equal(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
void r156out_in_tagged_out_memory(T156* C);
T6 r156conforms_to(T156* C,T0* a1);
void r156put_integer(T2 a1);
void r156put_line(T0* a1);
T0* r156twin(T156* C);
T0* r488out(T488* C);
T6 r488is_equal(T488* C,T0* a1);
T0* r488arguments(void);
T6 r488se_assigned_from(T0* a1);
void r488out_in_tagged_out_memory(T488* C);
void r488make(T488* C,T0* a1);
T0* r488message(T488* C,T0* a1);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488twin(T488* C);
T0* r488default_message(T488* C);
T0* r402out(T402* C);
T6 r402is_equal(T402* C,T0* a1);
T0* r402arguments(void);
T6 r402se_assigned_from(T0* a1);
void r402out_in_tagged_out_memory(T402* C);
void r402make(T402* C,T0* a1,T0* a2);
T0* r402message(T402* C,T0* a1);
T6 r402conforms_to(T402* C,T0* a1);
T0* r402twin(T402* C);
T0* r402default_message(T402* C);
T0* r210out(T210* C);
T0* r210uc_optimize(void);
void r210validate_named_cluster(T210* C,T0* a1,T0* a2);
T0* r210uc_check(void);
void r210validate_root(T210* C,T0* a1,T0* a2);
T0* r210uc_external(void);
void r210validate_library(T210* C,T0* a1,T0* a2);
void r210validate_external(T210* C,T0* a1,T0* a2);
void r210validate_feature(T210* C,T0* a1,T0* a2);
extern T0*oBC190uc_exclude;
extern int fBC190uc_exclude;
T0* r210uc_exclude(void);
void r210validate_mount(T210* C,T0* a1,T0* a2);
T6 r210is_equal(T210* C,T0* a1);
void r210validate_system_doc(T210* C,T0* a1,T0* a2);
T0* r210uc_invariant(void);
T6 r210se_assigned_from(T0* a1);
void r210validate_cluster(T210* C,T0* a1,T0* a2);
extern T0*oBC190uc_description;
extern int fBC190uc_description;
T0* r210uc_description(void);
T0* r210uc_mount(void);
T0* r210uc_value(void);
void r210out_in_tagged_out_memory(T210* C);
T0* r210uc_debug(void);
T0* r210uc_option(void);
T0* r210uc_root(void);
T0* r210uc_library(void);
void r210validate_system(T210* C,T0* a1,T0* a2);
T0* r210uc_feature(void);
T0* r210uc_class(void);
T0* r210uc_loop(void);
T6 r210conforms_to(T210* C,T0* a1);
void r210validate_export(T210* C,T0* a1,T0* a2);
T0* r210uc_cluster(void);
void r210validate_exclude(T210* C,T0* a1,T0* a2);
T0* r210uc_export(void);
T0* r210uc_link_library(void);
T0* r210uc_include_dir(void);
T0* r210uc_location(void);
T0* r210twin(T210* C);
void r210validate_library_doc(T210* C,T0* a1,T0* a2);
T0* r210uc_system(void);
T0* r210uc_creation(void);
T0* r210uc_require(void);
T0* r210uc_name(void);
void r210validate_option(T210* C,T0* a1,T0* a2);
T0* r210new_unicode_string(T0* a1);
void r210validate_class(T210* C,T0* a1,T0* a2);
T0* r210uc_ensure(void);
T0* r129out(T129* C);
void r129print_cluster(T129* C,T0* a1,T2 a2,T0* a3);
void r129generate_library(T129* C,T0* a1);
T6 r129print_cluster_options(T0* a1,T2 a2,T0* a3);
T6 r129is_equal(T129* C,T0* a1);
T0* r129replace_all_characters(T0* a1,T3 a2,T3 a3);
T6 r129se_assigned_from(T0* a1);
T0* r129clone(T0* a1);
T6 r129is_lace_keyword(T0* a1);
T6 r129is_windows(T129* C);
void r129print_ace_file(T129* C,T0* a1,T0* a2);
void r129out_in_tagged_out_memory(T129* C);
void r129make(T129* C,T0* a1,T0* a2);
void r129print_clusters(T129* C,T0* a1,T2 a2,T0* a3);
T6 r129conforms_to(T129* C,T0* a1);
T6 r129print_class_options(T0* a1,T6 a2,T2 a3,T0* a4);
void r129print_precompile_ace_file(T129* C,T0* a1,T0* a2);
void r129print_escaped_name(T0* a1,T0* a2);
T0* r129twin(T129* C);
void r129print_components(T0* a1,T0* a2);
void r129print_options(T129* C,T0* a1,T2 a2,T0* a3);
extern T0*oBC129lace_keywords;
void r129print_indentation(T2 a1,T0* a2);
void r129print_link_libraries(T129* C,T0* a1,T0* a2);
void r129generate_system(T129* C,T0* a1);
void r129print_include_directories(T129* C,T0* a1,T0* a2);
T0* r403out(T403* C);
T6 r403is_equal(T403* C,T0* a1);
T0* r403arguments(void);
T6 r403se_assigned_from(T0* a1);
void r403out_in_tagged_out_memory(T403* C);
void r403make(T403* C,T0* a1,T0* a2,T0* a3);
T0* r403message(T403* C,T0* a1);
T6 r403conforms_to(T403* C,T0* a1);
T0* r403twin(T403* C);
T0* r403default_message(T403* C);
T0* r364out(T364* C);
T6 r364is_equal(T364* C,T0* a1);
T0* r364arguments(void);
T6 r364se_assigned_from(T0* a1);
void r364out_in_tagged_out_memory(T364* C);
void r364make(T364* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
T0* r364message(T364* C,T0* a1);
T6 r364conforms_to(T364* C,T0* a1);
T0* r364twin(T364* C);
T0* r364default_message(T364* C);
T0* r537out(T537* C);
void r537make_from_stream(T537* C,T0* a1);
T0* r537name(T537* C);
T6 r537is_equal(T537* C,T0* a1);
T2 r537read_to_string(T537* C,T0* a1,T2 a2,T2 a3);
T2 r537encoding_size(T2 a1);
T6 r537se_assigned_from(T0* a1);
T0* r537clone(T0* a1);
T3 r537encoded_octet(T2 a1,T2 a2,T2 a3);
void r537out_in_tagged_out_memory(T537* C);
void r537read_character(T537* C);
T2 r537encoded_byte(T2 a1,T2 a2,T2 a3);
T6 r537is_open_read(T537* C);
void r537utf16_detect_read_character(T537* C);
void r537make(T537* C,T0* a1);
T6 r537conforms_to(T537* C,T0* a1);
T6 r537end_of_input(T537* C);
void r537append_character(T537* C,T2 a1);
void r537utf16_read_character(T537* C);
T3 r537last_character(T537* C);
T3 r537to_character(T2 a1);
T0* r537twin(T537* C);
T0* r480out(T480* C);
T6 r480is_equal(T480* C,T0* a1);
T0* r480arguments(void);
T6 r480se_assigned_from(T0* a1);
void r480out_in_tagged_out_memory(T480* C);
void r480make(T480* C,T0* a1);
T0* r480message(T480* C,T0* a1);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T0* r480default_message(T480* C);
T0* r401out(T401* C);
T6 r401is_equal(T401* C,T0* a1);
T6 r401se_assigned_from(T0* a1);
void r401out_in_tagged_out_memory(T401* C);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401expand_from_hash_table(T0* a1,T0* a2);
T0* r401twin(T401* C);
T0* r473out(T473* C);
void r473set_position(T473* C,T2 a1,T2 a2,T2 a3);
T0* r473name(void);
T6 r473is_equal(T473* C,T0* a1);
T6 r473se_assigned_from(T0* a1);
void r473out_in_tagged_out_memory(T473* C);
void r473make(T473* C,T0* a1);
T6 r473conforms_to(T473* C,T0* a1);
void r473make_from_buffer(T473* C,T0* a1);
T0* r473twin(T473* C);
T0* r552out(T552* C);
T0* r552last(T552* C);
T6 r552is_equal(T552* C,T0* a1);
T0* r552item(T552* C,T2 a1);
T6 r552se_assigned_from(T0* a1);
T0* r552clone(T0* a1);
void r552out_in_tagged_out_memory(T552* C);
void r552make(T552* C);
T2 r552hash_code(T552* C);
T6 r552conforms_to(T552* C,T0* a1);
T0* r552twin(T552* C);
void r552force_last(T552* C,T0* a1);
T0* r552ns_prefix(T552* C);
T0* r552local_part(T552* C);
T6 r552is_namespace_name(T552* C);
T0* r549out(T549* C);
T6 r549is_equal(T549* C,T0* a1);
T6 r549se_assigned_from(T0* a1);
T0* r549clone(T0* a1);
void r549set_default_value(T549* C,T0* a1);
void r549out_in_tagged_out_memory(T549* C);
void r549make(T549* C);
void r549copy_default(T549* C,T0* a1);
T6 r549conforms_to(T549* C,T0* a1);
T0* r549twin(T549* C);
void r549set_value_fixed(T549* C,T0* a1);
T0* r417out(T417* C);
T0* r417new_namespace_name(void);
void r417on_start_tag_finish(T417* C);
T6 r417syntax_error(T417* C);
extern T0*oBC421yycheck_template;
extern int fBC421yycheck_template;
T0* r417yycheck_template(void);
void r417process_entity_scanner(T417* C,T0* a1);
void r417on_doctype(T417* C,T0* a1,T0* a2,T6 a3);
T6 r417is_equal(T417* C,T0* a1);
void r417when_entity_declared(T417* C,T0* a1,T0* a2);
void r417on_finish(T417* C);
void r417process_entity(T417* C,T0* a1);
void r417read_token(T417* C);
T0* r417concatenate(T0* a1,T0* a2);
void r417_420Pon_error(T417* C,T0* a1);
void r417on_content(T417* C,T0* a1);
void r417yy_build_parser_tables(T417* C);
void r417when_external_dtd(T417* C,T0* a1);
T6 r417se_assigned_from(T0* a1);
void r417process_attribute_entity(T417* C,T0* a1);
T0* r417clone(T0* a1);
void r417on_start(T417* C);
extern T0*oBC421yytable_template;
extern int fBC421yytable_template;
T0* r417yytable_template(void);
T0* r417new_unicode_string_from_utf8(T0* a1);
void r417on_processing_instruction(T417* C,T0* a1,T0* a2);
T0* r417external_entity_to_string(T417* C,T0* a1);
extern T0*oBC421shared_empty_string;
extern int fBC421shared_empty_string;
T0* r417shared_empty_string(void);
void r417make_parser(T417* C);
void r417out_in_tagged_out_memory(T417* C);
T0* r417yyfixed_array(T0* a1);
extern T0*oBC421yypgoto_template;
extern int fBC421yypgoto_template;
T0* r417yypgoto_template(void);
void r417on_attribute_declarations(T417* C,T0* a1,T0* a2);
void r417check_void(T417* C);
T0* r417position(T417* C);
T0* r417filename(T417* C);
void r417on_start_tag(T417* C,T0* a1,T0* a2,T0* a3);
void r417make(T417* C);
T0* r417entity_referenced_in_entity_value(T417* C,T0* a1);
void r417on_comment(T417* C,T0* a1);
void r417parse_from_stream(T417* C,T0* a1);
T2 r417byte_position(T417* C);
extern T0*oBC421yypact_template;
extern int fBC421yypact_template;
T0* r417yypact_template(void);
T6 r417is_correct(T417* C);
void r417on_end_tag(T417* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC421yydefact_template;
extern int fBC421yydefact_template;
T0* r417yydefact_template(void);
void r417set_element_repetition(T0* a1,T3 a2);
T0* r417yytype1(T0* a1);
void r417yy_clear_all(T417* C);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417yytype2(T0* a1);
T0* r417yytype3(T0* a1);
T0* r417yytype4(T0* a1);
T0* r417yytype5(T0* a1);
T3 r417yytype6(T0* a1);
void r417on_entity_declaration(T417* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
T0* r417yytype7(T0* a1);
T0* r417yytype8(T0* a1);
void r417on_element_declaration(T417* C,T0* a1,T0* a2);
T0* r417yytype9(T0* a1);
T0* r417new_name_set(void);
T0* r417defined_entity_referenced(T417* C,T0* a1);
void r417on_attribute(T417* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r417reset(T417* C);
extern T0*oBC421yyr1_template;
extern int fBC421yyr1_template;
T0* r417yyr1_template(void);
void r417on_notation_declaration(T417* C,T0* a1,T0* a2);
void r417on_error(T417* C,T0* a1);
void r417parse(T417* C);
T0* r417last_error_extended_description(T417* C);
T0* r417twin(T417* C);
void r417yy_do_action(T417* C,T2 a1);
T0* r417new_external_entity(T0* a1);
void r417parse_stream(T417* C,T0* a1);
extern T0*oBC421yytranslate_template;
extern int fBC421yytranslate_template;
T0* r417yytranslate_template(void);
T0* r417element_name(T0* a1);
void r417force_error(T417* C,T0* a1);
void r417on_attribute_declaration(T417* C,T0* a1,T0* a2,T0* a3);
T2 r417line(T417* C);
T2 r417column(T417* C);
void r417when_pe_entity_declared(T417* C,T0* a1,T0* a2);
T0* r417onstring(T0* a1);
void r417process_pe_entity(T417* C,T0* a1);
T2 r417yy_translate(T417* C,T2 a1);
extern T0*oBC421yyr2_template;
extern int fBC421yyr2_template;
T0* r417yyr2_template(void);
void r417make_scanner(T417* C);
extern T0*oBC421yydefgoto_template;
extern int fBC421yydefgoto_template;
T0* r417yydefgoto_template(void);
T0* r417new_literal_entity(T0* a1);
void r417clear_stacks(T417* C);
T2 r429yy_at_beginning_of_line(T429* C);
T2 r429start_condition(T429* C);
void r429set_input_buffer(T429* C,T0* a1);
T0* r429text_substring(T429* C,T2 a1,T2 a2);
T0* r429yy_ec_template(void);
void r429yy_execute_action(T429* C,T2 a1);
T0* r429yy_def_template(void);
void r429_432Pset_input_buffer(T429* C,T0* a1);
T3 r429text_item(T429* C,T2 a1);
T6 r429end_of_file(T429* C);
T0* r429system_literal_text(T429* C);
void r429yy_load_input_buffer(T429* C);
void r429make_with_buffer(T429* C,T0* a1);
T2 r429yy_null_trans_state(T429* C,T2 a1);
T0* r429_433Pnew_file_buffer(T0* a1);
void r429pop_start_condition(T429* C);
T3 r429to_character(T2 a1);
T0* r429yy_accept_template(void);
void r429read_token(T429* C);
T2 r429yy_previous_state(T429* C);
void r429yy_refill_input_buffer(T429* C);
void r429push_start_condition_dtd_ignore(T429* C);
T0* r429yy_fixed_array(T0* a1);
T6 r429conforms_to(T429* C,T0* a1);
T0* r429yy_meta_template(void);
void r429set_input_file(T429* C,T0* a1);
T0* r429yy_base_template(void);
void r429_431Preset(T429* C);
T0* r429twin(T429* C);
T2 r429text_count(T429* C);
T0* r429new_file_buffer(T429* C,T0* a1);
void r429make_scanner(T429* C);
void r429yy_initialize(T429* C);
void r429reset(T429* C);
void r429push_start_condition(T429* C,T2 a1);
T0* r429text(T429* C);
void r429out_in_tagged_out_memory(T429* C);
T0* r429yy_nxt_template(void);
void r429yy_set_line_column(T429* C);
T6 r429is_equal(T429* C,T0* a1);
T0* r429empty_buffer(void);
T0* r429yy_chk_template(void);
void r429yy_set_content(T429* C,T0* a1);
void r429set_start_condition(T429* C,T2 a1);
void r429yy_execute_eof_action(T429* C,T2 a1);
T0* r429out(T429* C);
T6 r429se_assigned_from(T0* a1);
void r429yy_build_tables(T429* C);
void r200set_last_cell(T200* C,T0* a1);
T0* r200out(T200* C);
void r200copy(T200* C,T0* a1);
void r200wipe_out(T200* C);
void r200remove_first(T200* C);
T0* r200cursor_item(T0* a1);
T6 r200cursor_is_last(T200* C,T0* a1);
T6 r200is_equal(T200* C,T0* a1);
void r200remove_traversing_cursor(T200* C,T0* a1);
void r200cursor_go_after(T200* C,T0* a1);
void r200move_all_cursors_after(T200* C);
void r200add_traversing_cursor(T200* C,T0* a1);
T6 r200se_assigned_from(T0* a1);
void r200out_in_tagged_out_memory(T200* C);
T6 r200same_type(T200* C,T0* a1);
void r200remove_last(T200* C);
T6 r200cursor_after(T0* a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200make_list(T200* C);
void r200cursor_forth(T200* C,T0* a1);
void r200move_last_cursors_after(T200* C);
void r200cursor_start(T200* C,T0* a1);
T0* r200twin(T200* C);
void r200force_last(T200* C,T0* a1);
T0* r200new_cursor(T200* C);
void r200make_composite(T200* C);
T6 r200cursor_is_first(T200* C,T0* a1);
void r200remove_at_cursor(T200* C,T0* a1);
void r200move_all_cursors(T200* C,T0* a1,T0* a2);
T6 r200cursor_off(T0* a1);
void r200set_root_element(T200* C,T0* a1);
T0* r128out(T128* C);
void r128print_cluster(T128* C,T0* a1,T0* a2);
void r128print_esd_file(T128* C,T0* a1,T0* a2);
void r128generate_library(T128* C,T0* a1);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T0* r128clone(T0* a1);
void r128out_in_tagged_out_memory(T128* C);
void r128make(T128* C,T0* a1,T0* a2);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T0* r128remove_all_characters(T0* a1,T3 a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128print_eld_file(T128* C,T0* a1,T0* a2);
void r128print_escaped_name(T0* a1,T0* a2);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
void r128print_link_libraries(T0* a1,T0* a2);
void r128generate_system(T128* C,T0* a1);
T0* r327out(T327* C);
T6 r327is_equal(T327* C,T0* a1);
T0* r327arguments(void);
T6 r327se_assigned_from(T0* a1);
void r327out_in_tagged_out_memory(T327* C);
void r327make(T327* C,T0* a1);
T0* r327message(T327* C,T0* a1);
T6 r327conforms_to(T327* C,T0* a1);
T0* r327twin(T327* C);
T0* r327default_message(T327* C);
T0* r231out(T231* C);
T6 r231is_equal(T231* C,T0* a1);
T6 r231se_assigned_from(T0* a1);
void r231out_in_tagged_out_memory(T231* C);
void r231make_empty(T231* C);
void r231merge_libraries(T231* C,T0* a1,T0* a2);
void r231make(T231* C,T0* a1);
void r231set_parent(T231* C,T0* a1);
T6 r231conforms_to(T231* C,T0* a1);
T0* r231twin(T231* C);
void r231mount_libraries(T231* C,T0* a1,T0* a2);
void r231set_library_prefix(T231* C,T0* a1);
void r231merge_externals(T231* C,T0* a1);
void r231merge_exported_features(T231* C,T0* a1);
void r231merge_components(T231* C,T0* a1);
T0* r271out(T271* C);
T0* r271new_cluster(T0* a1,T0* a2);
T0* r271new_mounted_library(T0* a1,T0* a2,T0* a3);
T6 r271is_equal(T271* C,T0* a1);
T0* r271new_mounted_libraries(void);
T6 r271se_assigned_from(T0* a1);
T0* r271new_options(void);
void r271out_in_tagged_out_memory(T271* C);
T0* r271new_system(T0* a1);
T6 r271conforms_to(T271* C,T0* a1);
T0* r271new_feature_options(T0* a1,T0* a2);
T0* r271new_clusters(T0* a1);
T0* r271twin(T271* C);
T0* r271new_class_options(T0* a1,T0* a2);
T0* r271new_library(void);
T0* r628out(T628* C);
T2 r628new_capacity(T2 a1);
void r628copy(T628* C,T0* a1);
void r628force(T628* C,T0* a1,T0* a2);
void r628make_clashes(T628* C,T2 a1);
void r628make_non_equal(T628* C,T2 a1);
T0* r628cursor_item(T628* C,T0* a1);
void r628search_position(T628* C,T0* a1);
T6 r628is_equal(T628* C,T0* a1);
void r628remove_traversing_cursor(T628* C,T0* a1);
void r628clone_slots(T628* C);
void r628keys_resize(T628* C,T2 a1);
T0* r628item(T628* C,T0* a1);
void r628clone_clashes(T628* C);
void r628move_all_cursors_after(T628* C);
void r628make_items(T628* C,T2 a1);
void r628add_traversing_cursor(T628* C,T0* a1);
T6 r628se_assigned_from(T0* a1);
T0* r628clone(T0* a1);
void r628out_in_tagged_out_memory(T628* C);
T6 r628same_type(T628* C,T0* a1);
void r628make(T628* C,T2 a1);
void r628clone_items(T628* C);
T6 r628cursor_after(T0* a1);
T6 r628conforms_to(T628* C,T0* a1);
T6 r628has(T628* C,T0* a1);
void r628make_keys(T628* C,T2 a1);
T2 r628hash_position(T628* C,T0* a1);
void r628cursor_forth(T628* C,T0* a1);
void r628items_resize(T628* C,T2 a1);
void r628clone_keys(T628* C);
void r628resize(T628* C,T2 a1);
void r628make_with_equality_testers(T628* C,T2 a1,T0* a2,T0* a3);
T6 r628cursor_same_position(T0* a1,T0* a2);
void r628cursor_start(T628* C,T0* a1);
void r628clashes_resize(T628* C,T2 a1);
void r628slots_resize(T628* C,T2 a1);
T0* r628twin(T628* C);
T0* r628new_cursor(T628* C);
void r628make_slots(T628* C,T2 a1);
T2 r628new_modulus(T2 a1);
T6 r628cursor_off(T0* a1);
T0* r308out(T308* C);
T6 r308is_equal(T308* C,T0* a1);
T6 r308se_assigned_from(T0* a1);
void r308out_in_tagged_out_memory(T308* C);
void r308put_feature_option(T308* C,T0* a1);
void r308make(T308* C,T0* a1,T0* a2);
T6 r308conforms_to(T308* C,T0* a1);
T0* r308twin(T308* C);
T0* r405out(T405* C);
T6 r405is_equal(T405* C,T0* a1);
T0* r405arguments(void);
T6 r405se_assigned_from(T0* a1);
void r405out_in_tagged_out_memory(T405* C);
void r405make(T405* C,T0* a1,T0* a2);
T0* r405message(T405* C,T0* a1);
T6 r405conforms_to(T405* C,T0* a1);
T0* r405twin(T405* C);
T0* r405default_message(T405* C);
T0* r295out(T295* C);
void r295copy(T295* C,T0* a1);
T0* r295substring(T295* C,T2 a1,T2 a2);
T2 r295occurrences(T295* C,T0* a1);
T2 r295shifted_byte_index(T295* C,T2 a1,T2 a2);
T2 r295item_code(T295* C,T2 a1);
void r295put_latin1(T295* C,T3 a1,T2 a2);
T6 r295is_equal(T295* C,T0* a1);
T2 r295index_of_code(T295* C,T2 a1,T2 a2);
T3 r295latin1_item(T295* C,T2 a1);
T0* r295item(T295* C,T2 a1);
extern T0*oBC263integer_;
void r295resize_byte_storage(T295* C,T2 a1);
void r295append(T295* C,T0* a1);
T6 r295se_assigned_from(T0* a1);
T2 r295byte_index(T295* C,T2 a1);
T0* r295clone(T0* a1);
void r295make_from_string(T295* C,T0* a1);
T2 r295index_of(T295* C,T0* a1,T2 a2);
void r295out_in_tagged_out_memory(T295* C);
void r295move_bytes_right(T295* C,T2 a1,T2 a2);
T2 r295next_byte_index(T295* C,T2 a1);
T6 r295same_type(T295* C,T0* a1);
void r295make(T295* C,T2 a1);
void r295fill_tagged_out_memory(T295* C);
void r295old_make_filled(T295* C,T3 a1,T2 a2);
void r295append_string(T295* C,T0* a1);
T2 r295code_occurrences(T295* C,T2 a1);
void r295old_remove_tail(T295* C,T2 a1);
T2 r295item_code_at_byte_index(T295* C,T2 a1);
extern T0*oBC97platform;
void r295extend(T295* C,T3 a1);
T0* r295_px_43(T295* C,T0* a1);
T2 r295hash_code(T295* C);
T2 r295index_of_latin1(T295* C,T3 a1,T2 a2);
T6 r295conforms_to(T295* C,T0* a1);
T2 r295to_integer(T295* C);
void r295append_latin1(T295* C,T3 a1);
void r295put_code_at_byte_index(T295* C,T2 a1,T2 a2,T2 a3);
void r295make_from_substring(T295* C,T0* a1,T2 a2,T2 a3);
void r295resize(T295* C,T2 a1);
void r295put_substring_at_byte_index(T295* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
extern T0*oBC192utf8;
void r295from_external_copy(T295* C,T8 a1);
void r295move_bytes_left(T295* C,T2 a1,T2 a2);
void r295old_make(T295* C,T2 a1);
T8 r295to_external(T295* C);
T0* r295old_infix_plus(T295* C,T0* a1);
T0* r295twin(T295* C);
T0* r295to_utf8(T295* C);
T3 r295latin1_item_at_byte_index(T295* C,T2 a1);
extern T0*oBC264unicode;
void r295put_latin1_at_byte_index(T295* C,T3 a1,T2 a2,T2 a3);
void r295make_from_utf8(T295* C,T0* a1);
void r295swap(T295* C,T2 a1,T2 a2);
T0* r74out(T74* C);
T6 r74is_equal(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
void r74out_in_tagged_out_memory(T74* C);
void r74execute_generators(T74* C,T0* a1);
void r74make(T74* C,T0* a1,T0* a2);
T6 r74conforms_to(T74* C,T0* a1);
void r74execute(T74* C);
T0* r74twin(T74* C);
T0* r654out(T654* C);
T6 r654is_equal(T654* C,T0* a1);
T6 r654se_assigned_from(T0* a1);
void r654out_in_tagged_out_memory(T654* C);
void r654make(T654* C,T0* a1,T0* a2);
T6 r654conforms_to(T654* C,T0* a1);
T0* r654twin(T654* C);
T0* r135out(T135* C);
T0* r135current_working_directory(T135* C);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
T0* r135clone(T0* a1);
extern T6 oBC138is_windows;
extern int fBC138is_windows;
T6 r135is_windows(T135* C);
void r135out_in_tagged_out_memory(T135* C);
void r135make(T135* C);
void r135old_put_string(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
void r135put_integer(T2 a1);
void r135put_line(T0* a1);
T0* r135twin(T135* C);
T0* r234out(T234* C);
T6 r234is_fully_abstract(T234* C);
T0* r234prefixed_name(T234* C);
T6 r234is_equal(T234* C,T0* a1);
void r234set_subclusters(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
void r234out_in_tagged_out_memory(T234* C);
void r234merge_libraries(T234* C,T0* a1,T0* a2);
T0* r234full_pathname(T234* C);
void r234make(T234* C,T0* a1,T0* a2);
T6 r234conforms_to(T234* C,T0* a1);
void r234put_class_option(T234* C,T0* a1);
T0* r234twin(T234* C);
void r234set_library_prefix(T234* C,T0* a1);
void r234merge_externals(T234* C,T0* a1);
void r234merge_exported_features(T234* C,T0* a1);
void r234merge_components(T234* C,T0* a1);
T0* r157out(T157* C);
T0* r157current_working_directory(T157* C);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
T0* r157clone(T0* a1);
T6 r157is_windows(T157* C);
void r157out_in_tagged_out_memory(T157* C);
void r157make(T157* C);
void r157old_put_string(T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157put_integer(T2 a1);
void r157put_line(T0* a1);
T0* r157twin(T157* C);
T0* r532out(T532* C);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T0* r532clone(T0* a1);
void r532out_in_tagged_out_memory(T532* C);
void r532make(T532* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532twin(T532* C);
T0* r298out(T298* C);
T6 r298is_equal(T298* C,T0* a1);
T6 r298se_assigned_from(T0* a1);
void r298out_in_tagged_out_memory(T298* C);
void r298make(T298* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r298conforms_to(T298* C,T0* a1);
T0* r298twin(T298* C);
T0* r513out(T513* C);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
void r513out_in_tagged_out_memory(T513* C);
void r513make(T513* C,T0* a1,T0* a2,T0* a3);
T6 r513conforms_to(T513* C,T0* a1);
T0* r513twin(T513* C);
T0* r230out(T230* C);
T6 r230is_equal(T230* C,T0* a1);
T0* r230item(T230* C,T0* a1);
T6 r230se_assigned_from(T0* a1);
T0* r230clone(T0* a1);
void r230out_in_tagged_out_memory(T230* C);
void r230make_empty(T230* C);
void r230merge_libraries(T230* C,T0* a1,T0* a2);
T6 r230equal(T0* a1,T0* a2);
void r230set_root(T230* C,T6 a1);
T6 r230conforms_to(T230* C,T0* a1);
T0* r230twin(T230* C);
void r230mount_libraries(T230* C,T0* a1);
void r230merge_externals(T230* C,T0* a1);
T0* r477out(T477* C);
T0* r477string_make(T2 a1);
T6 r477is_equal(T477* C,T0* a1);
T2 r477encoding_size(T2 a1);
T0* r477as_string(T477* C);
T6 r477se_assigned_from(T0* a1);
T0* r477clone(T0* a1);
T3 r477encoded_octet(T2 a1,T2 a2,T2 a3);
void r477out_in_tagged_out_memory(T477* C);
T2 r477encoded_byte(T2 a1,T2 a2,T2 a3);
T6 r477is_integer(T0* a1);
T6 r477same_case_insensitive(T0* a1,T0* a2);
T2 r477hexadecimal_to_integer(T0* a1);
T6 r477conforms_to(T477* C,T0* a1);
void r477from_hexadecimal(T477* C,T0* a1);
T3 r477to_character(T2 a1);
T0* r477twin(T477* C);
T6 r477is_valid(T477* C);
void r477from_decimal(T477* C,T0* a1);
T0* r477single_string(T2 a1);
void r196set_last_cell(T196* C,T0* a1);
T0* r196out(T196* C);
void r196copy(T196* C,T0* a1);
void r196wipe_out(T196* C);
void r196remove_first(T196* C);
T0* r196cursor_item(T0* a1);
T6 r196cursor_is_last(T196* C,T0* a1);
T6 r196is_equal(T196* C,T0* a1);
void r196remove_traversing_cursor(T196* C,T0* a1);
void r196make_root(T196* C,T0* a1,T0* a2);
void r196cursor_go_after(T196* C,T0* a1);
void r196move_all_cursors_after(T196* C);
T6 r196has_attribute_by_name(T196* C,T0* a1);
void r196add_traversing_cursor(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196out_in_tagged_out_memory(T196* C);
T0* r196attribute_by_name(T196* C,T0* a1);
void r196make_child(T196* C,T0* a1,T0* a2,T0* a3);
T6 r196same_type(T196* C,T0* a1);
T6 r196equal(T0* a1,T0* a2);
void r196remove_last(T196* C);
T6 r196cursor_after(T0* a1);
T6 r196conforms_to(T196* C,T0* a1);
void r196make_list(T196* C);
void r196cursor_forth(T196* C,T0* a1);
void r196move_last_cursors_after(T196* C);
void r196cursor_start(T196* C,T0* a1);
T0* r196twin(T196* C);
void r196force_last(T196* C,T0* a1);
T0* r196new_cursor(T196* C);
void r196make_composite(T196* C);
T6 r196has_element_by_name(T196* C,T0* a1);
T6 r196cursor_is_first(T196* C,T0* a1);
void r196remove_at_cursor(T196* C,T0* a1);
T0* r196element_by_name(T196* C,T0* a1);
void r196move_all_cursors(T196* C,T0* a1,T0* a2);
T6 r196cursor_off(T0* a1);
T0* r233out(T233* C);
T6 r233is_equal(T233* C,T0* a1);
T6 r233se_assigned_from(T0* a1);
void r233out_in_tagged_out_memory(T233* C);
void r233make(T233* C,T0* a1,T0* a2,T0* a3);
T6 r233conforms_to(T233* C,T0* a1);
T0* r233twin(T233* C);
T0* r63out(T63* C);
T6 r63is_equal(T63* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r63command_arguments(void);
T6 r63se_assigned_from(T0* a1);
void r63out_in_tagged_out_memory(T63* C);
T6 r63conforms_to(T63* C,T0* a1);
T0* r63twin(T63* C);
T0* r63argument(T2 a1);
T0* r365out(T365* C);
T6 r365is_equal(T365* C,T0* a1);
T0* r365arguments(void);
T6 r365se_assigned_from(T0* a1);
void r365out_in_tagged_out_memory(T365* C);
void r365make(T365* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r365message(T365* C,T0* a1);
T6 r365conforms_to(T365* C,T0* a1);
T0* r365twin(T365* C);
T0* r365default_message(T365* C);
T0* r29out(T29* C);
void r29report_missing_element_error(T29* C,T0* a1,T0* a2,T0* a3);
T6 r29is_equal(T29* C,T0* a1);
T6 r29se_assigned_from(T0* a1);
void r29report_missing_attribute_error(T29* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC31null_output_stream;
extern int fBC31null_output_stream;
T0* r29null_output_stream(void);
void r29report_cannot_write_file_error(T29* C,T0* a1);
void r29out_in_tagged_out_memory(T29* C);
extern T0*oBC32std;
void r29make(T29* C);
void r29report_cannot_read_file_error(T29* C,T0* a1);
void r29report_parser_error(T29* C,T0* a1);
T0* r29message(T0* a1);
void r29report_invalid_expression_error(T29* C,T0* a1,T0* a2);
T6 r29conforms_to(T29* C,T0* a1);
void r29report_positive_integer_expected_error(T29* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r29report_not_xace_file_error(T29* C,T0* a1);
void r29report_wrong_root_element_error(T29* C,T0* a1,T0* a2);
void r29report_unknown_element_error(T29* C,T0* a1,T0* a2,T0* a3);
void r29_30Preport_error(T29* C,T0* a1);
void r29report_warning(T29* C,T0* a1);
void r29report_multiple_library_prefix_error(T29* C,T0* a1,T0* a2);
T0* r29twin(T29* C);
void r29report_wrong_attribute_value_error(T29* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
void r29report_boolean_expected_error(T29* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r29report_error(T29* C,T0* a1);
T6 r399is_expression_true(T399* C,T0* a1);
T0* r399out(T399* C);
T6 r399should_strip_element(T399* C,T0* a1,T0* a2);
T6 r399is_equal(T399* C,T0* a1);
T6 r399se_assigned_from(T0* a1);
void r399preprocess_composite(T399* C,T0* a1,T0* a2);
T0* r399new_unicode_string_from_utf8(T0* a1);
extern T0*oBC190uc_equal;
extern int fBC190uc_equal;
T0* r399uc_equal(void);
T6 r399is_valid_expression(T0* a1);
void r399out_in_tagged_out_memory(T399* C);
T0* r399new_unicode_character(T3 a1);
extern T0*oBC190uc_closing_curly_brace;
extern int fBC190uc_closing_curly_brace;
T0* r399uc_closing_curly_brace(void);
void r399make(T399* C,T0* a1,T0* a2);
extern T0*oBC190uc_unless;
extern int fBC190uc_unless;
T0* r399uc_unless(void);
extern T0*oBC190uc_if;
extern int fBC190uc_if;
T0* r399uc_if(void);
T6 r399conforms_to(T399* C,T0* a1);
extern T0*oBC190uc_opening_curly_brace;
extern int fBC190uc_opening_curly_brace;
T0* r399uc_opening_curly_brace(void);
T0* r399twin(T399* C);
void r399expand_attribute_variables(T399* C,T0* a1);
T0* r399new_unicode_string(T0* a1);
extern T0*oBC190uc_dollar;
extern int fBC190uc_dollar;
T0* r399uc_dollar(void);
T0* r474out(T474* C);
T0* r474substring(T474* C,T2 a1,T2 a2);
void r474fill_from_string(T474* C,T0* a1,T2 a2);
T6 r474is_equal(T474* C,T0* a1);
T2 r474fill_from_stream(T474* C,T0* a1,T2 a2,T2 a3);
T6 r474se_assigned_from(T0* a1);
void r474out_in_tagged_out_memory(T474* C);
void r474move_left(T474* C,T2 a1,T2 a2,T2 a3);
void r474make(T474* C,T2 a1);
T6 r474conforms_to(T474* C,T0* a1);
void r474resize(T474* C,T2 a1);
T0* r474twin(T474* C);
T0* r400out(T400* C);
T6 r400is_equal(T400* C,T0* a1);
T6 r400se_assigned_from(T0* a1);
void r400out_in_tagged_out_memory(T400* C);
T6 r400conforms_to(T400* C,T0* a1);
T6 r400_px_60(T400* C,T0* a1);
void r400make_from_character(T400* C,T3 a1);
T0* r400twin(T400* C);
T0* r134out(T134* C);
extern T0*oBC134error;
extern int fBC134error;
T0* r134error(void);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
void r134out_in_tagged_out_memory(T134* C);
extern T0*oBC134output;
extern int fBC134output;
T0* r134output(void);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134twin(T134* C);
extern T2 oBC481maximum_character_code;
extern int fBC481maximum_character_code;
T2 r481maximum_character_code(T481* C);
T0* r481out(T481* C);
T6 r481is_equal(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
void r481out_in_tagged_out_memory(T481* C);
T6 r481conforms_to(T481* C,T0* a1);
T0* r481twin(T481* C);
T0* r38out(T38* C);
T6 r38is_equal(T38* C,T0* a1);
T6 r38se_assigned_from(T0* a1);
void r38out_in_tagged_out_memory(T38* C);
T6 r38conforms_to(T38* C,T0* a1);
T0* r38twin(T38* C);
T0* r34out(T34* C);
T6 r34is_equal(T34* C,T0* a1);
T6 r34se_assigned_from(T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
T6 r34_px_60(T34* C,T0* a1);
T0* r34twin(T34* C);
T0* r618out(T618* C);
T6 r618is_equal(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
void r618out_in_tagged_out_memory(T618* C);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T0* r171out(T171* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T0* r297out(T297* C);
T2 r297encoded_next_value(T3 a1);
T6 r297is_equal(T297* C,T0* a1);
T6 r297se_assigned_from(T0* a1);
void r297out_in_tagged_out_memory(T297* C);
T2 r297encoded_first_value(T3 a1);
T6 r297conforms_to(T297* C,T0* a1);
T2 r297code_byte_count(T2 a1);
T2 r297encoded_byte_count(T3 a1);
T2 r297latin1_byte_count(T3 a1);
T0* r297twin(T297* C);
T2 r297substring_byte_count(T0* a1,T2 a2,T2 a3);
T0* r296out(T296* C);
T6 r296is_equal(T296* C,T0* a1);
T6 r296se_assigned_from(T0* a1);
void r296out_in_tagged_out_memory(T296* C);
T6 r296conforms_to(T296* C,T0* a1);
T3 r296to_character(T2 a1);
T0* r296twin(T296* C);
T0* r661out(T661* C);
T6 r661is_equal(T661* C,T0* a1);
T6 r661se_assigned_from(T0* a1);
void r661out_in_tagged_out_memory(T661* C);
T6 r661conforms_to(T661* C,T0* a1);
T0* r661twin(T661* C);
T0* r33out(T33* C);
T6 r33is_equal(T33* C,T0* a1);
T6 r33se_assigned_from(T0* a1);
T6 r33conforms_to(T33* C,T0* a1);
T0* r33twin(T33* C);
T0* r329get_environment_variable(T0* a1);
T0* r189out(T189* C);
T6 r189is_equal(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
void r189out_in_tagged_out_memory(T189* C);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189twin(T189* C);
T0* r660out(T660* C);
T6 r660is_equal(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
void r660out_in_tagged_out_memory(T660* C);
T6 r660conforms_to(T660* C,T0* a1);
T0* r660twin(T660* C);
T0* r11out(T11* C);
void r11process_cluster(T11* C);
T0* r11split_on_first(T0* a1,T3 a2);
T6 r11is_equal(T11* C,T0* a1);
void r11process_options(T11* C);
void r11process_arguments(T11* C);
T0* r11arguments(void);
T6 r11has_next_option_value(T11* C);
T6 r11se_assigned_from(T0* a1);
T0* r11clone(T0* a1);
void r11out_in_tagged_out_memory(T11* C);
void r11process_xace_file(T11* C,T0* a1);
T6 r11is_next_option_long_option(T11* C);
extern T0*oBC11usage_message;
extern int fBC11usage_message;
T0* r11usage_message(void);
T0* r11next_option_value(T11* C);
void r11make(T11* C);
void r11process_command(T11* C);
T6 r11is_valid_option_position(T2 a1);
void r11process_system(T11* C);
T6 r11conforms_to(T11* C,T0* a1);
extern T0*oBC15exceptions;
void r11process_define_string(T11* C,T0* a1);
void r11process_output(T11* C,T0* a1);
void r11process_validate(T11* C);
T0* r11next_option(T11* C);
T6 r11has_next_option(T11* C);
void r11process_library(T11* C);
T0* r11twin(T11* C);
void r11process_define(T11* C);
T0* r11split_string(T0* a1,T3 a2);
void r11process_compilers(T11* C,T0* a1,T0* a2);
T6 r11match_long_option(T11* C,T0* a1);
void r11consume_option(T11* C);
void r490connect_to_current_working_directory(T490* C);
void r490disconnect(T490* C);
extern T0*oBC490last_entry;
T0* r96out(T96* C);
T6 r96is_equal(T96* C,T0* a1);
T6 r96se_assigned_from(T0* a1);
void r96out_in_tagged_out_memory(T96* C);
T6 r96is_integer(T0* a1);
T6 r96same_case_insensitive(T0* a1,T0* a2);
T0* r96make(T2 a1);
T6 r96conforms_to(T96* C,T0* a1);
T0* r96twin(T96* C);
T0* r328out(T328* C);
T6 r328is_equal(T328* C,T0* a1);
T0* r328variable_value(T0* a1);
T6 r328se_assigned_from(T0* a1);
void r328out_in_tagged_out_memory(T328* C);
extern T329 oBC328environment_impl;
T6 r328conforms_to(T328* C,T0* a1);
T0* r328interpreted_string(T0* a1);
T0* r328twin(T328* C);
T0* r408out(T408* C);
T6 r408is_equal(T408* C,T0* a1);
T6 r408se_assigned_from(T0* a1);
void r408out_in_tagged_out_memory(T408* C);
T6 r408conforms_to(T408* C,T0* a1);
T0* r408twin(T408* C);
T0* r73out(T73* C);
T6 r73is_equal(T73* C,T0* a1);
T6 r73se_assigned_from(T0* a1);
T6 r73conforms_to(T73* C,T0* a1);
T6 r73_px_60(T73* C,T0* a1);
T0* r73twin(T73* C);
T0* r138out(T138* C);
T0* r138current_working_directory(T138* C);
T6 r138is_equal(T138* C,T0* a1);
T6 r138se_assigned_from(T0* a1);
T0* r138clone(T0* a1);
T6 r138is_windows(T138* C);
void r138out_in_tagged_out_memory(T138* C);
T6 r138conforms_to(T138* C,T0* a1);
T0* r138twin(T138* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 662
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms7_241908472;
extern T7*ms189_484842691;
extern T7*ms189_1085709462;
extern T7*ms189_10342028;
extern T7*ms189_420169;
extern T7*ms67_14150;
extern T7*ms189_1994621;
extern T7*ms189_17221;
extern T7*ms189_17176;
extern T7*ms189_16782;
extern T7*ms422_92561396;
extern T7*ms422_1232318322;
extern T7*ms189_9558536;
extern T7*ms189_1988096;
extern T7*ms189_408086;
extern T7*ms189_19162620;
extern T7*ms189_2141685;
extern T7*ms483_10;
extern T7*ms135_10;
extern T7*ms422_1785408556;
extern T7*ms188_79251;
extern T7*ms422_758578972;
extern T7*ms103_431271;
extern T7*ms189_403369;
extern T7*ms189_1040155018;
extern T7*ms189_48856070;
extern T7*ms422_224621212;
extern T7*ms189_702131887;
extern T7*ms189_279458336;
extern T7*ms189_234165132;
extern T7*ms189_402346;
extern T7*ms189_9946191;
extern T7*ms27_1415324896;
extern T7*ms422_313350252;
extern T7*ms6_79251;
extern T7*ms416_1806352573;
extern T7*ms364_105797387;
extern T7*ms402_54177410;
extern T7*ms189_1570582567;
extern T7*ms422_414094759;
extern T7*ms189_388005040;
extern T7*ms189_52771526;
extern T7*ms189_1991783165;
extern T7*ms422_1105337616;
extern T7*ms422_620986269;
extern T7*ms7_280756769;
extern T7*ms189_10365093;
extern T7*ms422_1639807481;
extern T7*ms189_1183150341;
extern T7*ms189_54423316;
extern T7*ms189_335219475;
extern T7*ms422_225532234;
extern T7*ms156_10;
extern T7*ms189_914215870;
extern T7*ms130_11272528;
extern T7*ms157_10;
extern T7*ms422_1680506019;
extern T7*ms189_1957581;
extern T7*ms363_1003460429;
extern T7*ms189_10030586;
extern T7*ms422_880035048;
extern T7*ms189_2040823781;
extern T7*ms189_2063276;
extern T7*ms27_2045384695;
extern T7*ms189_3073;
extern T7*ms189_3139;
extern T7*ms189_3148;
extern T7*ms189_3226;
extern T7*ms422_729820516;
extern T7*ms189_3322;
extern T7*ms327_988446515;
extern T7*ms422_1806545392;
extern T7*ms189_1846843898;
extern T7*ms7_1983847;
extern T7*ms67_4763922;
extern T7*ms422_1806352573;
extern T7*ms488_1606053737;
extern T7*ms189_48929738;
extern T7*ms189_1493399999;
extern T7*ms365_802821753;
extern T7*ms307_229;
extern T7*ms189_1365755180;
extern T7*ms129_10031271;
extern T7*ms127_2071896;
extern T7*ms100_1515383187;
extern T7*ms188_18036;
extern T7*ms189_1962309625;
extern T7*ms189_2250778;
extern T7*ms189_2246326;
extern T7*ms128_440790;
extern T7*ms128_440825;
extern T7*ms473_6934577;
extern T7*ms189_783353191;
extern T7*ms6_18036;
extern T7*ms189_243833461;
extern T7*ms189_50458336;
extern T7*ms189_53099313;
extern T7*ms272_2131726096;
extern T7*ms422_1864547461;
extern T7*ms422_2065551545;
extern T7*ms404_454072470;
extern T7*ms189_2191641;
extern T7*ms416_969380041;
extern T7*ms189_2185421;
extern T7*ms189_264596220;
extern T7*ms189_78002;
extern T7*ms189_39972254;
extern T7*ms211_0;
extern T7*ms189_537250837;
extern T7*ms189_78263;
extern T7*ms189_78331;
extern T7*ms422_513387338;
extern T7*ms189_78279;
extern T7*ms189_9901966;
extern T7*ms189_78490;
extern T7*ms189_78495;
extern T7*ms422_438332871;
extern T7*ms189_90041;
extern T7*ms189_90141;
extern T7*ms234_0;
extern T7*ms403_1179444653;
extern T7*ms480_512683247;
extern T7*ms189_765701343;
extern T7*ms188_0;
extern T7*ms422_1787513656;
extern T7*ms189_2032026;
extern T7*ms189_295494129;
extern T7*ms67_251;
extern T7*ms262_0;
extern T7*ms189_89216;
extern T7*ms407_462378139;
extern T7*ms422_1383485945;
extern T7*ms189_9786069;
extern T7*ms189_89771;
extern T7*ms189_440571;
extern T7*ms189_89862;
extern T7*ms189_722497341;
extern T7*ms189_692313432;
extern T7*ms405_820451542;
extern T7*ms422_1040340337;
extern T7*ms422_987451011;
extern T7*ms422_993001251;
extern T7*ms189_1817115202;
extern T7*ms297_0;
extern T7*ms422_930325994;
extern T7*ms189_49076540;
extern T7*ms189_662126768;
extern T7*ms67_5426;
extern T7*ms189_1831836695;
extern T7*ms103_1319327951;
extern T7*ms189_1155828738;
extern T7*ms189_11230216;
extern T7*ms189_1619639801;
extern T7*ms422_551891802;
extern T7*ms189_49483191;
extern T7*ms103_9702826;
extern T7*ms422_1718816811;
extern T7*ms189_51843716;
extern T7*ms422_429369815;
extern T7*ms67_2124547;
extern T7*ms189_554402727;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void*se_ma412(int argc,...);
void*se_ma456(int argc,...);
void*se_ma99(int argc,...);
void X419on_doctype(T0*C,T0* a1,T0* a2,T6 a3);
void X419on_entity_declaration(T0*C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
void X419on_element_declaration(T0*C,T0* a1,T0* a2);
void X419on_notation_declaration(T0*C,T0* a1,T0* a2);
void X419on_attribute_declaration(T0*C,T0* a1,T0* a2,T0* a3);
void X428out_in_tagged_out_memory(T0*C);
void X428apply_input_buffer(T0*C);
void X208out_in_tagged_out_memory(T0*C);
void X27execute(T0*C);
T0* X144item(T0*C);
T6 X144after(T0*C);
void X144forth(T0*C);
void X144start(T0*C);
T0* X145cursor_item(T0*C,T0* a1);
T6 X145cursor_after(T0*C,T0* a1);
void X145cursor_forth(T0*C,T0* a1);
void X145cursor_start(T0*C,T0* a1);
T0* X145new_cursor(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7out_in_tagged_out_memory(T0*C);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
T0* X7_px_43(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T0* X294cursor_item(T0*C,T0* a1);
T6 X294cursor_after(T0*C,T0* a1);
void X294cursor_forth(T0*C,T0* a1);
void X294cursor_start(T0*C,T0* a1);
void X153put_right(T0*C,T0* a1);
T0* X10out(T0*C);
T6 X10is_equal(T0*C,T0* a1);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
T6 X96is_integer(T0*C,T0* a1);
T6 X96same_case_insensitive(T0*C,T0* a1,T0* a2);
T0* X96make(T0*C,T2 a1);
void X164set_next_cursor(T0*C,T0* a1);
T0* X123make(T0*C,T2 a1);
T0* X123resize(T0*C,T0* a1,T2 a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X458clear_all(T0*C,T0* a1);
T0* X458make(T0*C,T2 a1);
T0* X458resize(T0*C,T0* a1,T2 a2);
void X93put_new_line(T0*C);
void X93put_integer(T0*C,T2 a1);
void X93put_line(T0*C,T0* a1);
void X93put_character(T0*C,T3 a1);
void X93put_string(T0*C,T0* a1);
T0* X181name(T0*C);
T2 X181read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X181read_character(T0*C);
T6 X181is_open_read(T0*C);
T6 X181end_of_input(T0*C);
T3 X181last_character(T0*C);
void X199force_last(T0*C,T0* a1);
T0* X199new_cursor(T0*C);
void X199remove_at_cursor(T0*C,T0* a1);
void X473fill(T0*C);
T0* X473name(T0*C);
void X141set(T0*C,T0* a1,T6 a2,T6 a3);
T0* X141item(T0*C);
void X141set_next_cursor(T0*C,T0* a1);
T6 X141after(T0*C);
T6 X141is_last(T0*C);
void X141forth(T0*C);
T6 X141off(T0*C);
void X141start(T0*C);
void X141set_after(T0*C);
T6 X141before(T0*C);
void X209on_start_tag_finish(T0*C);
void X209on_finish(T0*C);
void X209on_content(T0*C,T0* a1);
void X209on_start(T0*C);
void X209on_processing_instruction(T0*C,T0* a1,T0* a2);
void X209on_start_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X209on_comment(T0*C,T0* a1);
void X209on_end_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X209on_attribute(T0*C,T0* a1,T0* a2,T0* a3,T0* a4);
void X209on_error(T0*C,T0* a1);
void X70put(T0*C,T0* a1,T2 a2);
T0* X70item(T0*C,T2 a1);
void X70set_all_with(T0*C,T0* a1);
void X70resize(T0*C,T2 a1);
T2 X454count(T0*C);
T2 X454item(T0*C,T2 a1);
T2 X454lower(T0*C);
void X114force(T0*C,T0* a1,T0* a2);
T0* X114cursor_item(T0*C,T0* a1);
void X114remove_traversing_cursor(T0*C,T0* a1);
T0* X114item(T0*C,T0* a1);
void X114add_traversing_cursor(T0*C,T0* a1);
T6 X114cursor_after(T0*C,T0* a1);
T6 X114has(T0*C,T0* a1);
void X114cursor_forth(T0*C,T0* a1);
T6 X114cursor_same_position(T0*C,T0* a1,T0* a2);
void X114cursor_start(T0*C,T0* a1);
T6 X114cursor_off(T0*C,T0* a1);
void X187parse_file(T0*C,T0* a1);
void X457put(T0*C,T0* a1,T2 a2);
T0* X457item(T0*C,T2 a1);
T461 X457storage(T0*C);
void X457set_all_with(T0*C,T0* a1);
void X457resize(T0*C,T2 a1);
void X429read_token(T0*C);
void X429set_input_buffer(T0*C,T0* a1);
void X429set_input_file(T0*C,T0* a1);
void X429reset(T0*C);
T0* X429new_file_buffer(T0*C,T0* a1);
T6 X126test(T0*C,T0* a1,T0* a2);
T6 X151cursor_is_last(T0*C,T0* a1);
void X151remove_traversing_cursor(T0*C,T0* a1);
void X151add_traversing_cursor(T0*C,T0* a1);
T0* X151first(T0*C);
void X151cursor_forth(T0*C,T0* a1);
T0* X151first_cell(T0*C);
void X151cursor_start(T0*C,T0* a1);
void X151force_last(T0*C,T0* a1);
T0* X151new_cursor(T0*C);
void X151put_last(T0*C,T0* a1);
T0* X90default_message(T0*C);
T6 X138is_windows(T0*C);
void X76generate_library(T0*C,T0* a1);
void X76generate_system(T0*C,T0* a1);
T0* T3toT73(T3 source);
T0* T2toT34(T2 source);
T2 T34toT2(T0* source);

#ifdef __cplusplus
}
#endif
