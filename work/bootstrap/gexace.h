#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S269 T269;
typedef struct S707 T707;
typedef struct S726 T726;
typedef struct S473 T473;
typedef struct S445 T445;
typedef struct S556 T556;
typedef struct S436 T436;
typedef struct S564 T564;
typedef struct S622 T622;
typedef struct S87 T87;
typedef struct S151 T151;
typedef struct S624 T624;
typedef struct S218 T218;
typedef struct S536 T536;
typedef struct S545 T545;
typedef struct S567 T567;
typedef struct S592 T592;
typedef struct S379 T379;
typedef struct S575 T575;
typedef struct S533 T533;
typedef struct S225 T225;
typedef struct S166 T166;
typedef struct S658 T658;
typedef struct S351 T351;
typedef struct S188 T188;
typedef struct S206 T206;
typedef int T665;
typedef struct S193 T193;
typedef struct S130 T130;
typedef struct S464 T464;
typedef struct S192 T192;
typedef struct S204 T204;
typedef struct S198 T198;
typedef struct S478 T478;
typedef struct S602 T602;
typedef struct S609 T609;
typedef struct S40 T40;
typedef struct S605 T605;
typedef struct S466 T466;
typedef struct S311 T311;
typedef struct S41 T41;
typedef struct S537 T537;
typedef struct S246 T246;
typedef struct S364 T364;
typedef struct S544 T544;
typedef struct S107 T107;
typedef struct S272 T272;
typedef struct S167 T167;
typedef struct S126 T126;
typedef struct S696 T696;
typedef struct S116 T116;
typedef struct S161 T161;
typedef struct S689 T689;
typedef struct S571 T571;
typedef struct S36 T36;
typedef struct S472 T472;
typedef struct S380 T380;
typedef struct S423 T423;
typedef struct S307 T307;
typedef struct S138 T138;
typedef struct S710 T710;
typedef struct S431 T431;
typedef struct S590 T590;
typedef struct S570 T570;
typedef struct S619 T619;
typedef struct S171 T171;
typedef struct S724 T724;
typedef struct S566 T566;
typedef struct S554 T554;
typedef struct S30 T30;
typedef struct S668 T668;
typedef struct S200 T200;
typedef struct S336 T336;
typedef struct S499 T499;
typedef struct S395 T395;
typedef struct S608 T608;
typedef struct S197 T197;
typedef struct S113 T113;
typedef struct S409 T409;
typedef struct S639 T639;
typedef struct S542 T542;
typedef struct S274 T274;
typedef struct S516 T516;
typedef struct S201 T201;
typedef struct S510 T510;
typedef struct S723 T723;
typedef struct S630 T630;
typedef struct S90 T90;
typedef struct S189 T189;
typedef struct S129 T129;
typedef struct S715 T715;
typedef struct S86 T86;
typedef struct S697 T697;
typedef struct S291 T291;
typedef struct S75 T75;
typedef struct S89 T89;
typedef struct S221 T221;
typedef struct S717 T717;
typedef struct S194 T194;
typedef struct S540 T540;
typedef struct S647 T647;
typedef struct S679 T679;
typedef struct S35 T35;
typedef struct S404 T404;
typedef struct S365 T365;
typedef struct S476 T476;
typedef struct S293 T293;
typedef struct S483 T483;
typedef struct S405 T405;
typedef struct S149 T149;
typedef struct S71 T71;
typedef struct S63 T63;
typedef struct S448 T448;
typedef struct S170 T170;
typedef struct S579 T579;
typedef struct S7 T7;
typedef struct S229 T229;
typedef struct S560 T560;
typedef struct S164 T164;
typedef struct S180 T180;
typedef struct S355 T355;
typedef struct S418 T418;
typedef struct S486 T486;
typedef struct S115 T115;
typedef struct S287 T287;
typedef struct S310 T310;
typedef struct S563 T563;
typedef struct S664 T664;
typedef struct S666 T666;
typedef struct S541 T541;
typedef struct S318 T318;
typedef struct S242 T242;
typedef struct S682 T682;
typedef struct S256 T256;
typedef struct S422 T422;
typedef struct S470 T470;
typedef struct S651 T651;
typedef struct S169 T169;
typedef struct S429 T429;
typedef struct S265 T265;
typedef struct S16 T16;
typedef struct S513 T513;
typedef struct S495 T495;
typedef struct S224 T224;
typedef struct S534 T534;
typedef struct S114 T114;
typedef struct S695 T695;
typedef struct S83 T83;
typedef struct S680 T680;
typedef struct S512 T512;
typedef struct S187 T187;
typedef struct S491 T491;
typedef struct S568 T568;
typedef struct S480 T480;
typedef struct S190 T190;
typedef struct S354 T354;
typedef struct S719 T719;
typedef struct S181 T181;
typedef struct S228 T228;
typedef struct S633 T633;
typedef struct S565 T565;
typedef struct S103 T103;
typedef struct S432 T432;
typedef struct S515 T515;
typedef struct S100 T100;
typedef struct S569 T569;
typedef struct S718 T718;
typedef struct S538 T538;
typedef struct S721 T721;
typedef struct S713 T713;
typedef struct S139 T139;
typedef struct S688 T688;
typedef struct S131 T131;
typedef struct S662 T662;
typedef struct S154 T154;
typedef struct S693 T693;
typedef struct S518 T518;
typedef struct S607 T607;
typedef struct S109 T109;
typedef struct S85 T85;
typedef struct S465 T465;
typedef struct S650 T650;
typedef struct S626 T626;
typedef struct S172 T172;
typedef struct S514 T514;
typedef struct S183 T183;
typedef struct S74 T74;
typedef struct S593 T593;
typedef struct S684 T684;
typedef struct S78 T78;
typedef struct S112 T112;
typedef struct S250 T250;
typedef struct S375 T375;
typedef struct S471 T471;
typedef struct S275 T275;
typedef struct S730 T730;
typedef struct S488 T488;
typedef int T663;
typedef struct S253 T253;
typedef struct S402 T402;
typedef struct S240 T240;
typedef struct S531 T531;
typedef struct S528 T528;
typedef struct S64 T64;
typedef struct S383 T383;
typedef struct S623 T623;
typedef struct S31 T31;
typedef struct S392 T392;
typedef struct S59 T59;
typedef struct S338 T338;

/*C Header Pass 2 :*/
typedef T0**T435;
typedef T0**T313;
typedef T6*T577;
typedef T0**T252;
typedef T0**T203;
typedef T0**T408;
typedef T0**T208;
typedef T0**T490;
typedef T0**T73;
typedef T3*T9;
typedef T0**T654;
typedef T0**T271;
typedef T0**T382;
typedef T0**T357;
typedef T0**T248;
typedef T2*T105;
typedef T0**T469;

/*C Header Pass 3 :*/
extern T665 M665;
struct S515{T2 _i_code;};
int se_cmpT515(T515 o1,T515 o2);
extern T663 M663;

/*C Header Pass 4 :*/
struct S269{Tid id;T271 _storage;T2 _capacity;T2 _upper;};
extern T269 M269;
struct S707{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T707 M707;
struct S726{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T726 M726;
struct S473{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T473 M473;
struct S445{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T445 M445;
struct S556{Tid id;T0* _item;T0* _right;};
extern T556 M556;
struct S436{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T436 M436;
struct S564{Tid id;T0* _parameters;};
extern T564 M564;
struct S622{Tid id;T0* _parameters;};
extern T622 M622;
struct S87{Tid id;T0* _item;T0* _right;};
extern T87 M87;
struct S151{Tid id;T0* _item;T0* _right;};
extern T151 M151;
struct S624{Tid id;T0* _event_parser_factory;};
extern T624 M624;
struct S218{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T218 M218;
struct S536{Tid id;T0* _variables;T0* _error_handler;};
extern T536 M536;
struct S545{Tid id;T0* _first;T0* _second;};
extern T545 M545;
struct S567{Tid id;T0* _parameters;};
extern T567 M567;
struct S592{Tid id;T0* _class_name;T0* _features;};
extern T592 M592;
struct S379{Tid id;T382 _storage;T2 _capacity;T2 _upper;};
extern T379 M379;
struct S575{Tid id;T577 _storage;T2 _capacity;T2 _upper;};
extern T575 M575;
struct S533{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T533 M533;
struct S166{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T166 M166;
struct S658{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T658 M658;
struct S351{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T351 M351;
struct S188{Tid id;T0* _clusters;};
extern T188 M188;
struct S206{Tid id;T208 _storage;T2 _capacity;T2 _upper;};
extern T206 M206;
struct S193{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T193 M193;
struct S130{Tid id;};
extern T130 M130;
struct S225{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T225 M225;
struct S464{Tid id;T105 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T464 M464;
struct S192{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T192 M192;
struct S204{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T204 M204;
struct S198{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T198 M198;
struct S478{Tid id;T0* _parents;};
extern T478 M478;
struct S602{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T602 M602;
struct S609{Tid id;T0* _item;T0* _right;};
extern T609 M609;
struct S40{Tid id;};
extern T40 M40;
struct S605{Tid id;T0* _item;T0* _right;};
extern T605 M605;
struct S466{Tid id;};
extern T466 M466;
struct S311{Tid id;};
extern T311 M311;
struct S41{Tid id;};
extern T41 M41;
struct S537{Tid id;T0* _table;};
extern T537 M537;
struct S246{Tid id;T248 _storage;T2 _capacity;T2 _upper;};
extern T246 M246;
struct S364{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T364 M364;
struct S544{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T544 M544;
struct S107{Tid id;};
extern T107 M107;
struct S272{Tid id;};
extern T272 M272;
struct S167{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T167 M167;
struct S126{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T126 M126;
struct S696{Tid id;T0* _first;T0* _second;};
extern T696 M696;
struct S116{Tid id;T0* _error_handler;};
extern T116 M116;
struct S161{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T161 M161;
struct S689{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T6 _end_of_file;};
extern T689 M689;
struct S571{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T571 M571;
struct S36{Tid id;T2 _item;};
extern T36 M36;
struct S472{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T472 M472;
struct S380{Tid id;};
extern T380 M380;
struct S423{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T423 M423;
struct S307{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T307 M307;
struct S138{Tid id;T0* _first;T0* _second;};
extern T138 M138;
struct S710{Tid id;T0* _item;T0* _right;};
extern T710 M710;
struct S431{Tid id;T435 _storage;T2 _capacity;T2 _upper;};
extern T431 M431;
struct S590{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T590 M590;
struct S570{Tid id;T3 _value;};
extern T570 M570;
struct S619{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T619 M619;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S724{Tid id;T0* _parent;T0* _data;};
extern T724 M724;
struct S566{Tid id;T0* _parameters;};
extern T566 M566;
struct S554{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T554 M554;
struct S30{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T30 M30;
struct S668{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T668 M668;
struct S200{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T200 M200;
struct S336{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T336 M336;
struct S499{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T499 M499;
struct S395{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T395 M395;
struct S608{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T608 M608;
struct S197{Tid id;};
extern T197 M197;
struct S113{Tid id;T0* _error_handler;};
extern T113 M113;
struct S409{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T409 M409;
struct S639{Tid id;};
extern T639 M639;
struct S542{Tid id;};
extern T542 M542;
struct S274{Tid id;};
extern T274 M274;
struct S516{Tid id;T2 _i_code;};
extern T516 M516;
struct S201{Tid id;T203 _storage;T2 _capacity;T2 _upper;};
extern T201 M201;
struct S510{Tid id;};
extern T510 M510;
struct S723{Tid id;T0* _implementation;};
extern T723 M723;
struct S630{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T630 M630;
struct S90{Tid id;T0* _defined_values;};
extern T90 M90;
struct S129{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;};
extern T129 M129;
struct S715{Tid id;T0* _parent;T0* _content;};
extern T715 M715;
struct S86{Tid id;T0* _parameters;};
extern T86 M86;
struct S697{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T697 M697;
struct S291{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T291 M291;
struct S75{Tid id;T0* _system_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T75 M75;
struct S89{Tid id;T0* _error_handler;};
extern T89 M89;
struct S221{Tid id;};
extern T221 M221;
struct S717{Tid id;T0* _implementation;};
extern T717 M717;
struct S540{Tid id;T0* _item;};
extern T540 M540;
struct S647{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T647 M647;
struct S679{Tid id;T0* _parameters;};
extern T679 M679;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S404{Tid id;T408 _storage;T2 _capacity;T2 _upper;};
extern T404 M404;
struct S365{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T365 M365;
struct S293{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T293 M293;
struct S483{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T483 M483;
struct S405{Tid id;};
extern T405 M405;
struct S149{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T149 M149;
struct S71{Tid id;T73 _storage;T2 _capacity;T2 _upper;};
extern T71 M71;
struct S189{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T189 M189;
struct S63{Tid id;T0* _item;T0* _right;};
extern T63 M63;
struct S448{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T448 M448;
struct S170{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T170 M170;
struct S579{Tid id;};
extern T579 M579;
struct S229{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T229 M229;
struct S560{Tid id;T0* _parameters;};
extern T560 M560;
struct S164{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T164 M164;
struct S180{Tid id;T0* _error_handler;T6 _has_error;};
extern T180 M180;
struct S355{Tid id;};
extern T355 M355;
struct S418{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T418 M418;
struct S486{Tid id;};
extern T486 M486;
struct S115{Tid id;T0* _error_handler;};
extern T115 M115;
struct S287{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T287 M287;
struct S310{Tid id;T313 _storage;T2 _capacity;T2 _upper;};
extern T310 M310;
struct S563{Tid id;T0* _parameters;};
extern T563 M563;
struct S664{Tid id;};
extern T664 M664;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S666{Tid id;T0* _parameters;};
extern T666 M666;
struct S541{Tid id;};
extern T541 M541;
struct S318{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T318 M318;
struct S242{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T242 M242;
struct S682{Tid id;T0* _item;T0* _right;};
extern T682 M682;
struct S256{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T256 M256;
struct S422{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T422 M422;
struct S470{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T470 M470;
struct S651{Tid id;};
extern T651 M651;
struct S169{Tid id;};
extern T169 M169;
struct S429{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T429 M429;
struct S265{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T265 M265;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S513{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T513 M513;
struct S476{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T476 M476;
struct S495{Tid id;};
extern T495 M495;
struct S224{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T224 M224;
struct S534{Tid id;T0* _namespaces;T0* _implementation;};
extern T534 M534;
struct S114{Tid id;T0* _error_handler;};
extern T114 M114;
struct S695{Tid id;T0* _first;T0* _second;};
extern T695 M695;
struct S83{Tid id;};
extern T83 M83;
struct S680{Tid id;T0* _item;T0* _right;};
extern T680 M680;
struct S512{Tid id;T2 _type;};
extern T512 M512;
struct S491{Tid id;};
extern T491 M491;
struct S568{Tid id;T0* _parameters;};
extern T568 M568;
struct S480{Tid id;T0* _class_name;T0* _base_class;};
extern T480 M480;
struct S190{Tid id;T0* _clusters;};
extern T190 M190;
struct S354{Tid id;T357 _storage;T2 _capacity;T2 _upper;};
extern T354 M354;
struct S719{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T719 M719;
struct S181{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T181 M181;
struct S228{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T228 M228;
struct S633{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T633 M633;
struct S565{Tid id;T0* _parameters;};
extern T565 M565;
struct S103{Tid id;T105 _storage;T2 _capacity;T2 _upper;};
extern T103 M103;
struct S187{Tid id;T0* _i_representation;};
extern T187 M187;
struct S432{Tid id;};
extern T432 M432;
extern T515 M515;
struct S100{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T100 M100;
struct S569{Tid id;};
extern T569 M569;
struct S718{Tid id;T0* _implementation;};
extern T718 M718;
struct S538{Tid id;T2 _last_code;T2 _next_pos;};
extern T538 M538;
struct S721{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T721 M721;
struct S713{Tid id;T0* _uri;};
extern T713 M713;
struct S139{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T139 M139;
struct S688{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T688 M688;
struct S131{Tid id;T0* _name;};
extern T131 M131;
struct S194{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T194 M194;
struct S662{Tid id;};
extern T662 M662;
struct S154{Tid id;T0* _name;};
extern T154 M154;
struct S693{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T693 M693;
struct S518{Tid id;T0* _implementation;};
extern T518 M518;
struct S607{Tid id;T0* _feature_name;T0* _external_name;};
extern T607 M607;
struct S109{Tid id;};
extern T109 M109;
struct S85{Tid id;T73 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T85 M85;
struct S465{Tid id;T469 _storage;T2 _capacity;T2 _upper;};
extern T465 M465;
struct S650{Tid id;T654 _storage;T2 _capacity;T2 _upper;};
extern T650 M650;
struct S626{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T626 M626;
struct S172{Tid id;T0* _implementation;};
extern T172 M172;
struct S514{Tid id;T2 _count;T0* _storage;};
extern T514 M514;
struct S183{Tid id;T0* _namespaces;T0* _implementation;};
extern T183 M183;
struct S74{Tid id;T3 _item;};
extern T74 M74;
struct S593{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T593 M593;
struct S684{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T684 M684;
struct S78{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T78 M78;
struct S112{Tid id;};
extern T112 M112;
struct S250{Tid id;T252 _storage;T2 _capacity;T2 _upper;};
extern T250 M250;
struct S375{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T375 M375;
struct S471{Tid id;};
extern T471 M471;
struct S275{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T275 M275;
struct S730{Tid id;T2 _i_code;};
extern T730 M730;
struct S488{Tid id;T490 _storage;T2 _capacity;T2 _upper;};
extern T488 M488;
struct S253{Tid id;};
extern T253 M253;
struct S402{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T402 M402;
struct S240{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T240 M240;
struct S531{Tid id;};
extern T531 M531;
struct S528{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T528 M528;
struct S64{Tid id;T0* _program_name;};
extern T64 M64;
struct S383{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T383 M383;
struct S623{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T623 M623;
struct S31{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T31 M31;
struct S392{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T392 M392;
struct S59{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T59 M59;
struct S338{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T338 M338;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r435clear_all(T435 C,T2 a1);
T435 r435realloc(T435 C,T2 a1,T2 a2);
void r435set_all_with(T435 C,T0* a1,T2 a2);
T6 r435fast_memcmp(T435 C,T435 a1,T2 a2);
void r435clear(T435 C,T2 a1,T2 a2);
void r435copy_from(T435 C,T435 a1,T2 a2);
void r313clear_all(T313 C,T2 a1);
T313 r313realloc(T313 C,T2 a1,T2 a2);
void r313set_all_with(T313 C,T0* a1,T2 a2);
T6 r313fast_memcmp(T313 C,T313 a1,T2 a2);
void r313clear(T313 C,T2 a1,T2 a2);
void r313copy_from(T313 C,T313 a1,T2 a2);
void r577clear_all(T577 C,T2 a1);
T577 r577realloc(T577 C,T2 a1,T2 a2);
void r577set_all_with(T577 C,T6 a1,T2 a2);
T6 r577fast_memcmp(T577 C,T577 a1,T2 a2);
void r577clear(T577 C,T2 a1,T2 a2);
void r577copy_from(T577 C,T577 a1,T2 a2);
void r252clear_all(T252 C,T2 a1);
T252 r252realloc(T252 C,T2 a1,T2 a2);
void r252set_all_with(T252 C,T0* a1,T2 a2);
T6 r252fast_memcmp(T252 C,T252 a1,T2 a2);
void r252clear(T252 C,T2 a1,T2 a2);
void r252copy_from(T252 C,T252 a1,T2 a2);
void r203clear_all(T203 C,T2 a1);
T203 r203realloc(T203 C,T2 a1,T2 a2);
void r203set_all_with(T203 C,T0* a1,T2 a2);
T6 r203fast_memcmp(T203 C,T203 a1,T2 a2);
void r203clear(T203 C,T2 a1,T2 a2);
void r203copy_from(T203 C,T203 a1,T2 a2);
void r408clear_all(T408 C,T2 a1);
T408 r408realloc(T408 C,T2 a1,T2 a2);
void r408set_all_with(T408 C,T0* a1,T2 a2);
T6 r408fast_memcmp(T408 C,T408 a1,T2 a2);
void r408clear(T408 C,T2 a1,T2 a2);
void r408copy_from(T408 C,T408 a1,T2 a2);
void r208clear_all(T208 C,T2 a1);
T208 r208realloc(T208 C,T2 a1,T2 a2);
void r208set_all_with(T208 C,T0* a1,T2 a2);
T6 r208fast_memcmp(T208 C,T208 a1,T2 a2);
void r208clear(T208 C,T2 a1,T2 a2);
void r208copy_from(T208 C,T208 a1,T2 a2);
void r490clear_all(T490 C,T2 a1);
T490 r490realloc(T490 C,T2 a1,T2 a2);
void r490set_all_with(T490 C,T0* a1,T2 a2);
T6 r490fast_memcmp(T490 C,T490 a1,T2 a2);
void r490clear(T490 C,T2 a1,T2 a2);
void r490copy_from(T490 C,T490 a1,T2 a2);
void r73clear_all(T73 C,T2 a1);
T73 r73realloc(T73 C,T2 a1,T2 a2);
T6 r73fast_memcmp(T73 C,T73 a1,T2 a2);
void r73set_all_with(T73 C,T0* a1,T2 a2);
void r73clear(T73 C,T2 a1,T2 a2);
void r73copy_from(T73 C,T73 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r654clear_all(T654 C,T2 a1);
T654 r654realloc(T654 C,T2 a1,T2 a2);
void r654set_all_with(T654 C,T0* a1,T2 a2);
T6 r654fast_memcmp(T654 C,T654 a1,T2 a2);
void r654clear(T654 C,T2 a1,T2 a2);
void r654copy_from(T654 C,T654 a1,T2 a2);
void r271clear_all(T271 C,T2 a1);
T271 r271realloc(T271 C,T2 a1,T2 a2);
void r271set_all_with(T271 C,T0* a1,T2 a2);
T6 r271fast_memcmp(T271 C,T271 a1,T2 a2);
void r271clear(T271 C,T2 a1,T2 a2);
void r271copy_from(T271 C,T271 a1,T2 a2);
void r382clear_all(T382 C,T2 a1);
T382 r382realloc(T382 C,T2 a1,T2 a2);
void r382set_all_with(T382 C,T0* a1,T2 a2);
T6 r382fast_memcmp(T382 C,T382 a1,T2 a2);
void r382clear(T382 C,T2 a1,T2 a2);
void r382copy_from(T382 C,T382 a1,T2 a2);
void r357clear_all(T357 C,T2 a1);
T357 r357realloc(T357 C,T2 a1,T2 a2);
void r357set_all_with(T357 C,T0* a1,T2 a2);
T6 r357fast_memcmp(T357 C,T357 a1,T2 a2);
void r357clear(T357 C,T2 a1,T2 a2);
void r357copy_from(T357 C,T357 a1,T2 a2);
void r248clear_all(T248 C,T2 a1);
T248 r248realloc(T248 C,T2 a1,T2 a2);
void r248set_all_with(T248 C,T0* a1,T2 a2);
T6 r248fast_memcmp(T248 C,T248 a1,T2 a2);
void r248clear(T248 C,T2 a1,T2 a2);
void r248copy_from(T248 C,T248 a1,T2 a2);
void r105clear_all(T105 C,T2 a1);
T105 r105realloc(T105 C,T2 a1,T2 a2);
void r105move(T105 C,T2 a1,T2 a2,T2 a3);
T6 r105fast_memcmp(T105 C,T105 a1,T2 a2);
void r105set_all_with(T105 C,T2 a1,T2 a2);
void r105clear(T105 C,T2 a1,T2 a2);
void r105copy_from(T105 C,T105 a1,T2 a2);
void r469clear_all(T469 C,T2 a1);
T469 r469realloc(T469 C,T2 a1,T2 a2);
void r469set_all_with(T469 C,T0* a1,T2 a2);
T6 r469fast_memcmp(T469 C,T469 a1,T2 a2);
void r469clear(T469 C,T2 a1,T2 a2);
void r469copy_from(T469 C,T469 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r269copy(T269* C,T0* a1);
T6 r269is_equal(T269* C,T0* a1);
T6 r269se_assigned_from(T0* a1);
void r269make(T269* C,T2 a1);
T6 r269conforms_to(T269* C,T0* a1);
void r269resize(T269* C,T2 a1);
T0* r269twin(T269* C);
void r379copy(T379* C,T0* a1);
T6 r379is_equal(T379* C,T0* a1);
T6 r379se_assigned_from(T0* a1);
void r379make(T379* C,T2 a1);
T6 r379conforms_to(T379* C,T0* a1);
void r379resize(T379* C,T2 a1);
T0* r379twin(T379* C);
void r575copy(T575* C,T0* a1);
T6 r575is_equal(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
void r575make(T575* C,T2 a1);
T6 r575conforms_to(T575* C,T0* a1);
void r575resize(T575* C,T2 a1);
T0* r575twin(T575* C);
void r206copy(T206* C,T0* a1);
T6 r206is_equal(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
void r206make(T206* C,T2 a1);
T6 r206conforms_to(T206* C,T0* a1);
void r206resize(T206* C,T2 a1);
T0* r206twin(T206* C);
void r464copy(T464* C,T0* a1);
T2 r464count(T464* C);
T6 r464is_equal(T464* C,T0* a1);
T2 r464item(T464* C,T2 a1);
T6 r464se_assigned_from(T0* a1);
void r464make(T464* C,T2 a1,T2 a2);
T6 r464conforms_to(T464* C,T0* a1);
void r464resize(T464* C,T2 a1,T2 a2);
T0* r464twin(T464* C);
void r246copy(T246* C,T0* a1);
T6 r246is_equal(T246* C,T0* a1);
T6 r246se_assigned_from(T0* a1);
void r246make(T246* C,T2 a1);
T6 r246conforms_to(T246* C,T0* a1);
void r246resize(T246* C,T2 a1);
T0* r246twin(T246* C);
void r431copy(T431* C,T0* a1);
T6 r431is_equal(T431* C,T0* a1);
T6 r431se_assigned_from(T0* a1);
void r431make(T431* C,T2 a1);
T6 r431conforms_to(T431* C,T0* a1);
void r431resize(T431* C,T2 a1);
T0* r431twin(T431* C);
void r201copy(T201* C,T0* a1);
T6 r201is_equal(T201* C,T0* a1);
T6 r201se_assigned_from(T0* a1);
void r201make(T201* C,T2 a1);
T6 r201conforms_to(T201* C,T0* a1);
void r201resize(T201* C,T2 a1);
T0* r201twin(T201* C);
void r404copy(T404* C,T0* a1);
T6 r404is_equal(T404* C,T0* a1);
T6 r404se_assigned_from(T0* a1);
void r404make(T404* C,T2 a1);
T6 r404conforms_to(T404* C,T0* a1);
void r404resize(T404* C,T2 a1);
T0* r404twin(T404* C);
void r71copy(T71* C,T0* a1);
T6 r71is_equal(T71* C,T0* a1);
T6 r71se_assigned_from(T0* a1);
void r71make(T71* C,T2 a1);
T6 r71conforms_to(T71* C,T0* a1);
void r71resize(T71* C,T2 a1);
T0* r71twin(T71* C);
void r310copy(T310* C,T0* a1);
T6 r310is_equal(T310* C,T0* a1);
T6 r310se_assigned_from(T0* a1);
void r310make(T310* C,T2 a1);
T6 r310conforms_to(T310* C,T0* a1);
void r310resize(T310* C,T2 a1);
T0* r310twin(T310* C);
void r354copy(T354* C,T0* a1);
T6 r354is_equal(T354* C,T0* a1);
T6 r354se_assigned_from(T0* a1);
void r354make(T354* C,T2 a1);
T6 r354conforms_to(T354* C,T0* a1);
void r354resize(T354* C,T2 a1);
T0* r354twin(T354* C);
void r103copy(T103* C,T0* a1);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103make(T103* C,T2 a1);
T6 r103conforms_to(T103* C,T0* a1);
void r103resize(T103* C,T2 a1);
T0* r103twin(T103* C);
void r103with_capacity(T103* C,T2 a1);
void r103from_collection(T103* C,T0* a1);
void r85copy(T85* C,T0* a1);
T2 r85count(T85* C);
T6 r85is_equal(T85* C,T0* a1);
T0* r85item(T85* C,T2 a1);
T6 r85valid_index(T85* C,T2 a1);
T6 r85se_assigned_from(T0* a1);
void r85make(T85* C,T2 a1,T2 a2);
T6 r85conforms_to(T85* C,T0* a1);
T0* r85twin(T85* C);
void r465copy(T465* C,T0* a1);
T2 r465count(T465* C);
T6 r465is_equal(T465* C,T0* a1);
T0* r465item(T465* C,T2 a1);
T6 r465se_assigned_from(T0* a1);
void r465make(T465* C,T2 a1);
T6 r465conforms_to(T465* C,T0* a1);
void r465resize(T465* C,T2 a1);
T0* r465twin(T465* C);
void r650copy(T650* C,T0* a1);
T6 r650is_equal(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
void r650make(T650* C,T2 a1);
T6 r650conforms_to(T650* C,T0* a1);
void r650resize(T650* C,T2 a1);
T0* r650twin(T650* C);
void r250copy(T250* C,T0* a1);
T2 r250count(T250* C);
T6 r250is_equal(T250* C,T0* a1);
T0* r250item(T250* C,T2 a1);
T6 r250se_assigned_from(T0* a1);
void r250make(T250* C,T2 a1);
T6 r250conforms_to(T250* C,T0* a1);
void r250resize(T250* C,T2 a1);
T0* r250twin(T250* C);
void r488copy(T488* C,T0* a1);
T6 r488is_equal(T488* C,T0* a1);
T6 r488se_assigned_from(T0* a1);
void r488make(T488* C,T2 a1);
T6 r488conforms_to(T488* C,T0* a1);
void r488resize(T488* C,T2 a1);
T0* r488twin(T488* C);
void r707copy(T707* C,T0* a1);
void r707set(T707* C,T0* a1,T6 a2,T6 a3);
T6 r707is_equal(T707* C,T0* a1);
T6 r707same_position(T707* C,T0* a1);
T6 r707se_assigned_from(T0* a1);
T6 r707same_type(T707* C,T0* a1);
void r707make(T707* C,T0* a1);
T6 r707conforms_to(T707* C,T0* a1);
void r707set_after(T707* C);
T0* r707twin(T707* C);
void r445copy(T445* C,T0* a1);
T6 r445is_equal(T445* C,T0* a1);
T6 r445same_position(T445* C,T0* a1);
T6 r445se_assigned_from(T0* a1);
T6 r445same_type(T445* C,T0* a1);
T6 r445off(T445* C);
T6 r445conforms_to(T445* C,T0* a1);
T0* r445twin(T445* C);
T6 r556is_equal(T556* C,T0* a1);
T6 r556se_assigned_from(T0* a1);
T6 r556conforms_to(T556* C,T0* a1);
T0* r556twin(T556* C);
void r436copy(T436* C,T0* a1);
T6 r436is_equal(T436* C,T0* a1);
void r436remove_traversing_cursor(T436* C,T0* a1);
void r436move_all_cursors_after(T436* C);
void r436add_traversing_cursor(T436* C,T0* a1);
T6 r436se_assigned_from(T0* a1);
T0* r436clone(T0* a1);
T6 r436cursor_before(T0* a1);
T6 r436same_type(T436* C,T0* a1);
void r436make(T436* C,T2 a1);
T6 r436cursor_after(T0* a1);
T6 r436conforms_to(T436* C,T0* a1);
T6 r436cursor_same_position(T0* a1,T0* a2);
T0* r436twin(T436* C);
T0* r436new_cursor(T436* C);
T6 r436cursor_off(T0* a1);
T6 r87is_equal(T87* C,T0* a1);
T6 r87se_assigned_from(T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
T0* r87twin(T87* C);
T6 r151is_equal(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
T0* r151twin(T151* C);
void r218copy(T218* C,T0* a1);
T6 r218is_equal(T218* C,T0* a1);
T0* r218item(T218* C);
T6 r218same_position(T218* C,T0* a1);
T6 r218se_assigned_from(T0* a1);
T6 r218after(T218* C);
T6 r218same_type(T218* C,T0* a1);
T2 r218index(T218* C);
T6 r218off(T218* C);
T6 r218conforms_to(T218* C,T0* a1);
T0* r218twin(T218* C);
T6 r545is_equal(T545* C,T0* a1);
T6 r545se_assigned_from(T0* a1);
void r545make(T545* C,T0* a1,T0* a2);
T6 r545conforms_to(T545* C,T0* a1);
T0* r545twin(T545* C);
void r658copy(T658* C,T0* a1);
void r658set(T658* C,T0* a1,T6 a2,T6 a3);
T6 r658is_equal(T658* C,T0* a1);
T6 r658same_position(T658* C,T0* a1);
T6 r658se_assigned_from(T0* a1);
T6 r658is_first(T658* C);
T6 r658is_last(T658* C);
T6 r658same_type(T658* C,T0* a1);
void r658make(T658* C,T0* a1);
void r658forth(T658* C);
T6 r658conforms_to(T658* C,T0* a1);
void r658start(T658* C);
void r658go_after(T658* C);
void r658set_after(T658* C);
T0* r658twin(T658* C);
void r351copy(T351* C,T0* a1);
T6 r351is_equal(T351* C,T0* a1);
T6 r351same_position(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T6 r351same_type(T351* C,T0* a1);
void r351make(T351* C,T0* a1);
T6 r351off(T351* C);
T6 r351conforms_to(T351* C,T0* a1);
T0* r351twin(T351* C);
T2 r204new_capacity(T2 a1);
void r204copy(T204* C,T0* a1);
void r204clear_items(T204* C,T2 a1,T2 a2);
T6 r204extendible(T204* C,T2 a1);
T0* r204cursor_item(T204* C,T0* a1);
T6 r204is_equal(T204* C,T0* a1);
void r204remove_traversing_cursor(T204* C,T0* a1);
void r204move_all_cursors_after(T204* C);
void r204add_traversing_cursor(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
T0* r204clone(T0* a1);
void r204move_left(T204* C,T2 a1,T2 a2);
T6 r204cursor_before(T0* a1);
T6 r204same_type(T204* C,T0* a1);
void r204make(T204* C,T2 a1);
void r204remove(T204* C,T2 a1);
void r204move_cursors_left(T204* C,T2 a1);
void r204remove_last(T204* C);
T6 r204cursor_after(T0* a1);
T6 r204conforms_to(T204* C,T0* a1);
T2 r204cursor_index(T204* C,T0* a1);
void r204cursor_forth(T204* C,T0* a1);
void r204resize(T204* C,T2 a1);
T6 r204cursor_same_position(T0* a1,T0* a2);
void r204move_last_cursors_after(T204* C);
void r204delete(T204* C,T0* a1);
void r204cursor_start(T204* C,T0* a1);
T0* r204twin(T204* C);
void r204force_last(T204* C,T0* a1);
T0* r204new_cursor(T204* C);
void r204put_last(T204* C,T0* a1);
T6 r204cursor_off(T0* a1);
void r602copy(T602* C,T0* a1);
void r602set(T602* C,T0* a1,T6 a2,T6 a3);
T6 r602is_equal(T602* C,T0* a1);
T6 r602same_position(T602* C,T0* a1);
T6 r602se_assigned_from(T0* a1);
T6 r602same_type(T602* C,T0* a1);
void r602make(T602* C,T0* a1);
T6 r602conforms_to(T602* C,T0* a1);
void r602set_after(T602* C);
T0* r602twin(T602* C);
T6 r609is_equal(T609* C,T0* a1);
T6 r609se_assigned_from(T0* a1);
T6 r609conforms_to(T609* C,T0* a1);
T0* r609twin(T609* C);
T6 r605is_equal(T605* C,T0* a1);
T6 r605se_assigned_from(T0* a1);
T6 r605conforms_to(T605* C,T0* a1);
T0* r605twin(T605* C);
void r466clear_all(T0* a1);
T6 r466is_equal(T466* C,T0* a1);
T6 r466se_assigned_from(T0* a1);
T0* r466make(T2 a1);
T6 r466conforms_to(T466* C,T0* a1);
T0* r466resize(T0* a1,T2 a2);
T0* r466twin(T466* C);
T6 r311is_equal(T311* C,T0* a1);
T6 r311se_assigned_from(T0* a1);
T0* r311make(T2 a1);
T6 r311conforms_to(T311* C,T0* a1);
T0* r311resize(T0* a1,T2 a2);
T0* r311twin(T311* C);
T6 r364is_equal(T364* C,T0* a1);
T6 r364se_assigned_from(T0* a1);
void r364make(T364* C,T2 a1);
T6 r364conforms_to(T364* C,T0* a1);
T0* r364twin(T364* C);
void r544copy(T544* C,T0* a1);
void r544set(T544* C,T0* a1,T6 a2,T6 a3);
T6 r544is_equal(T544* C,T0* a1);
T6 r544same_position(T544* C,T0* a1);
T6 r544se_assigned_from(T0* a1);
T6 r544same_type(T544* C,T0* a1);
void r544make(T544* C,T0* a1);
T6 r544conforms_to(T544* C,T0* a1);
void r544set_after(T544* C);
T0* r544twin(T544* C);
T6 r107is_equal(T107* C,T0* a1);
T6 r107se_assigned_from(T0* a1);
T0* r107to_fixed_array(T0* a1);
T0* r107make(T2 a1);
T0* r107make_from_array(T0* a1);
T6 r107conforms_to(T107* C,T0* a1);
T0* r107resize(T0* a1,T2 a2);
T0* r107twin(T107* C);
void r272clear_all(T0* a1);
T6 r272is_equal(T272* C,T0* a1);
T6 r272se_assigned_from(T0* a1);
T0* r272make(T2 a1);
T6 r272conforms_to(T272* C,T0* a1);
T0* r272resize(T0* a1,T2 a2);
T0* r272twin(T272* C);
void r126copy(T126* C,T0* a1);
void r126set(T126* C,T0* a1,T6 a2,T6 a3);
T6 r126is_equal(T126* C,T0* a1);
T6 r126same_position(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
T6 r126same_type(T126* C,T0* a1);
void r126make(T126* C,T0* a1);
T6 r126conforms_to(T126* C,T0* a1);
void r126set_after(T126* C);
T0* r126twin(T126* C);
T6 r696is_equal(T696* C,T0* a1);
T6 r696se_assigned_from(T0* a1);
void r696make(T696* C,T0* a1,T0* a2);
T6 r696conforms_to(T696* C,T0* a1);
T0* r696twin(T696* C);
void r161copy(T161* C,T0* a1);
T6 r161is_equal(T161* C,T0* a1);
T0* r161item(T161* C);
T6 r161same_position(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
T6 r161after(T161* C);
T6 r161same_type(T161* C,T0* a1);
void r161make(T161* C,T0* a1);
T6 r161off(T161* C);
T6 r161conforms_to(T161* C,T0* a1);
T0* r161twin(T161* C);
T2 r571new_capacity(T2 a1);
void r571copy(T571* C,T0* a1);
void r571force(T571* C,T6 a1,T0* a2);
void r571make_clashes(T571* C,T2 a1);
T6 r571cursor_item(T571* C,T0* a1);
void r571search_position(T571* C,T0* a1);
T6 r571is_equal(T571* C,T0* a1);
void r571remove_traversing_cursor(T571* C,T0* a1);
void r571clone_slots(T571* C);
extern T0*oBC94FIXED_INTEGER_ARRAY_;
void r571keys_resize(T571* C,T2 a1);
T6 r571item(T571* C,T0* a1);
void r571clone_clashes(T571* C);
void r571move_all_cursors_after(T571* C);
void r571make_items(T571* C,T2 a1);
void r571add_traversing_cursor(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
T0* r571clone(T0* a1);
T6 r571same_type(T571* C,T0* a1);
void r571make(T571* C,T2 a1);
T0* r571cursor_key(T571* C,T0* a1);
void r571clone_items(T571* C);
T6 r571cursor_after(T0* a1);
T6 r571conforms_to(T571* C,T0* a1);
T6 r571has(T571* C,T0* a1);
void r571make_keys(T571* C,T2 a1);
T2 r571hash_position(T571* C,T0* a1);
void r571cursor_forth(T571* C,T0* a1);
void r571items_resize(T571* C,T2 a1);
void r571clone_keys(T571* C);
void r571make_with_equality_testers(T571* C,T2 a1,T0* a2,T0* a3);
void r571resize(T571* C,T2 a1);
T6 r571cursor_same_position(T0* a1,T0* a2);
void r571cursor_start(T571* C,T0* a1);
void r571clashes_resize(T571* C,T2 a1);
void r571slots_resize(T571* C,T2 a1);
T0* r571twin(T571* C);
T0* r571new_cursor(T571* C);
void r571make_slots(T571* C,T2 a1);
T2 r571new_modulus(T2 a1);
T6 r571cursor_off(T0* a1);
T6 r380is_equal(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
T0* r380make(T2 a1);
T6 r380conforms_to(T380* C,T0* a1);
T0* r380resize(T0* a1,T2 a2);
T0* r380twin(T380* C);
void r423copy(T423* C,T0* a1);
void r423make_clashes(T423* C,T2 a1);
void r423search_position(T423* C,T0* a1);
T6 r423is_equal(T423* C,T0* a1);
void r423remove_traversing_cursor(T423* C,T0* a1);
void r423clone_slots(T423* C);
T2 r423item(T423* C,T0* a1);
void r423clone_clashes(T423* C);
void r423move_all_cursors_after(T423* C);
void r423make_items(T423* C,T2 a1);
void r423add_traversing_cursor(T423* C,T0* a1);
T6 r423se_assigned_from(T0* a1);
T0* r423clone(T0* a1);
T6 r423same_type(T423* C,T0* a1);
void r423clone_items(T423* C);
T6 r423conforms_to(T423* C,T0* a1);
T6 r423has(T423* C,T0* a1);
void r423make_keys(T423* C,T2 a1);
T2 r423hash_position(T423* C,T0* a1);
void r423clone_keys(T423* C);
void r423make_with_equality_testers(T423* C,T2 a1,T0* a2,T0* a3);
T6 r423cursor_same_position(T0* a1,T0* a2);
T0* r423twin(T423* C);
T0* r423new_cursor(T423* C);
void r423make_slots(T423* C,T2 a1);
T2 r423new_modulus(T2 a1);
T6 r423cursor_off(T0* a1);
void r307copy(T307* C,T0* a1);
T6 r307is_equal(T307* C,T0* a1);
T6 r307same_position(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T6 r307same_type(T307* C,T0* a1);
void r307make(T307* C,T0* a1);
T6 r307off(T307* C);
T6 r307conforms_to(T307* C,T0* a1);
T0* r307twin(T307* C);
T6 r138is_equal(T138* C,T0* a1);
T6 r138se_assigned_from(T0* a1);
void r138make(T138* C,T0* a1,T0* a2);
T6 r138conforms_to(T138* C,T0* a1);
T0* r138twin(T138* C);
T6 r710is_equal(T710* C,T0* a1);
T6 r710se_assigned_from(T0* a1);
T6 r710conforms_to(T710* C,T0* a1);
T0* r710twin(T710* C);
void r590copy(T590* C,T0* a1);
T0* r590key(T590* C);
T6 r590is_equal(T590* C,T0* a1);
T6 r590item(T590* C);
T6 r590same_position(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
T6 r590after(T590* C);
T6 r590same_type(T590* C,T0* a1);
void r590make(T590* C,T0* a1);
T6 r590off(T590* C);
T6 r590conforms_to(T590* C,T0* a1);
T0* r590twin(T590* C);
void r619copy(T619* C,T0* a1);
void r619set(T619* C,T0* a1,T6 a2,T6 a3);
T6 r619is_equal(T619* C,T0* a1);
T6 r619same_position(T619* C,T0* a1);
T6 r619se_assigned_from(T0* a1);
T6 r619is_last(T619* C);
T6 r619same_type(T619* C,T0* a1);
void r619make(T619* C,T0* a1);
T6 r619conforms_to(T619* C,T0* a1);
void r619set_after(T619* C);
T0* r619twin(T619* C);
void r554copy(T554* C,T0* a1);
T6 r554is_equal(T554* C,T0* a1);
void r554remove_traversing_cursor(T554* C,T0* a1);
void r554move_all_cursors_after(T554* C);
void r554add_traversing_cursor(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
T6 r554same_type(T554* C,T0* a1);
void r554make(T554* C);
T6 r554conforms_to(T554* C,T0* a1);
void r554cursor_forth(T554* C,T0* a1);
void r554cursor_start(T554* C,T0* a1);
T0* r554twin(T554* C);
T0* r554new_cursor(T554* C);
void r554put_last(T554* C,T0* a1);
T6 r554cursor_off(T0* a1);
void r30copy(T30* C,T0* a1);
void r30set(T30* C,T0* a1,T6 a2,T6 a3);
T6 r30is_equal(T30* C,T0* a1);
T6 r30same_position(T30* C,T0* a1);
T6 r30se_assigned_from(T0* a1);
T6 r30same_type(T30* C,T0* a1);
void r30make(T30* C,T0* a1);
T6 r30conforms_to(T30* C,T0* a1);
void r30set_after(T30* C);
T0* r30twin(T30* C);
T2 r200new_capacity(T2 a1);
void r200copy(T200* C,T0* a1);
T6 r200extendible(T200* C,T2 a1);
T6 r200is_equal(T200* C,T0* a1);
void r200remove_traversing_cursor(T200* C,T0* a1);
void r200move_all_cursors_after(T200* C);
void r200add_traversing_cursor(T200* C,T0* a1);
T6 r200se_assigned_from(T0* a1);
T0* r200clone(T0* a1);
T6 r200cursor_before(T0* a1);
T6 r200same_type(T200* C,T0* a1);
void r200make(T200* C,T2 a1);
T6 r200cursor_after(T0* a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200resize(T200* C,T2 a1);
T6 r200cursor_same_position(T0* a1,T0* a2);
T0* r200twin(T200* C);
void r200force_last(T200* C,T0* a1);
T0* r200new_cursor(T200* C);
void r200put_last(T200* C,T0* a1);
T6 r200cursor_off(T0* a1);
void r336copy(T336* C,T0* a1);
T6 r336is_equal(T336* C,T0* a1);
T6 r336same_position(T336* C,T0* a1);
T6 r336se_assigned_from(T0* a1);
T6 r336same_type(T336* C,T0* a1);
void r336make(T336* C,T0* a1);
T6 r336off(T336* C);
T6 r336conforms_to(T336* C,T0* a1);
T0* r336twin(T336* C);
void r499copy(T499* C,T0* a1);
T6 r499is_equal(T499* C,T0* a1);
T6 r499same_position(T499* C,T0* a1);
T6 r499se_assigned_from(T0* a1);
T6 r499same_type(T499* C,T0* a1);
void r499make(T499* C,T0* a1);
T6 r499off(T499* C);
T6 r499conforms_to(T499* C,T0* a1);
T0* r499twin(T499* C);
void r395copy(T395* C,T0* a1);
void r395make_clashes(T395* C,T2 a1);
void r395search_position(T395* C,T0* a1);
T6 r395is_equal(T395* C,T0* a1);
void r395remove_traversing_cursor(T395* C,T0* a1);
void r395clone_slots(T395* C);
T2 r395item(T395* C,T0* a1);
void r395clone_clashes(T395* C);
void r395move_all_cursors_after(T395* C);
void r395make_items(T395* C,T2 a1);
void r395add_traversing_cursor(T395* C,T0* a1);
T6 r395se_assigned_from(T0* a1);
T0* r395clone(T0* a1);
T6 r395same_type(T395* C,T0* a1);
void r395clone_items(T395* C);
T6 r395conforms_to(T395* C,T0* a1);
T6 r395has(T395* C,T0* a1);
void r395make_keys(T395* C,T2 a1);
T2 r395hash_position(T395* C,T0* a1);
void r395clone_keys(T395* C);
void r395make_with_equality_testers(T395* C,T2 a1,T0* a2,T0* a3);
T6 r395cursor_same_position(T0* a1,T0* a2);
T0* r395twin(T395* C);
T0* r395new_cursor(T395* C);
void r395make_slots(T395* C,T2 a1);
T2 r395new_modulus(T2 a1);
T6 r395cursor_off(T0* a1);
void r608copy(T608* C,T0* a1);
T6 r608cursor_is_last(T608* C,T0* a1);
T6 r608is_equal(T608* C,T0* a1);
void r608remove_traversing_cursor(T608* C,T0* a1);
void r608move_all_cursors_after(T608* C);
void r608add_traversing_cursor(T608* C,T0* a1);
T6 r608se_assigned_from(T0* a1);
T6 r608same_type(T608* C,T0* a1);
void r608make(T608* C);
T6 r608conforms_to(T608* C,T0* a1);
void r608cursor_forth(T608* C,T0* a1);
void r608cursor_start(T608* C,T0* a1);
T0* r608twin(T608* C);
void r608force_last(T608* C,T0* a1);
T0* r608new_cursor(T608* C);
T6 r608cursor_off(T0* a1);
void r409copy(T409* C,T0* a1);
T6 r409is_equal(T409* C,T0* a1);
void r409remove_traversing_cursor(T409* C,T0* a1);
void r409move_all_cursors_after(T409* C);
void r409add_traversing_cursor(T409* C,T0* a1);
T6 r409se_assigned_from(T0* a1);
T0* r409clone(T0* a1);
T6 r409cursor_before(T0* a1);
T6 r409same_type(T409* C,T0* a1);
void r409make(T409* C,T2 a1);
T6 r409cursor_after(T0* a1);
T6 r409conforms_to(T409* C,T0* a1);
T6 r409cursor_same_position(T0* a1,T0* a2);
T0* r409twin(T409* C);
T0* r409new_cursor(T409* C);
T6 r409cursor_off(T0* a1);
T6 r639is_equal(T639* C,T0* a1);
T6 r639se_assigned_from(T0* a1);
T6 r639conforms_to(T639* C,T0* a1);
T6 r639test(T0* a1,T0* a2);
T0* r639twin(T639* C);
T6 r274is_equal(T274* C,T0* a1);
T6 r274se_assigned_from(T0* a1);
T0* r274make(T2 a1);
T6 r274conforms_to(T274* C,T0* a1);
T0* r274resize(T0* a1,T2 a2);
T0* r274twin(T274* C);
void r697copy(T697* C,T0* a1);
T0* r697cursor_item(T0* a1);
T6 r697is_equal(T697* C,T0* a1);
void r697remove_traversing_cursor(T697* C,T0* a1);
void r697move_all_cursors_after(T697* C);
void r697add_traversing_cursor(T697* C,T0* a1);
T6 r697se_assigned_from(T0* a1);
T6 r697cursor_before(T0* a1);
T6 r697same_type(T697* C,T0* a1);
void r697make(T697* C);
T6 r697cursor_after(T0* a1);
T6 r697conforms_to(T697* C,T0* a1);
void r697cursor_forth(T697* C,T0* a1);
void r697cursor_start(T697* C,T0* a1);
T0* r697twin(T697* C);
T0* r697new_cursor(T697* C);
void r697put_last(T697* C,T0* a1);
T6 r697cursor_off(T0* a1);
void r291copy(T291* C,T0* a1);
T6 r291is_equal(T291* C,T0* a1);
T6 r291same_position(T291* C,T0* a1);
T6 r291se_assigned_from(T0* a1);
T6 r291same_type(T291* C,T0* a1);
void r291make(T291* C,T0* a1);
T6 r291off(T291* C);
T6 r291conforms_to(T291* C,T0* a1);
T0* r291twin(T291* C);
T6 r221is_equal(T221* C,T0* a1);
T6 r221se_assigned_from(T0* a1);
T0* r221make(T2 a1);
T6 r221conforms_to(T221* C,T0* a1);
T0* r221resize(T0* a1,T2 a2);
T0* r221twin(T221* C);
T6 r540is_equal(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
T6 r540conforms_to(T540* C,T0* a1);
T0* r540twin(T540* C);
void r647copy(T647* C,T0* a1);
T6 r647is_equal(T647* C,T0* a1);
T6 r647same_position(T647* C,T0* a1);
T6 r647se_assigned_from(T0* a1);
T6 r647same_type(T647* C,T0* a1);
void r647make(T647* C,T0* a1);
T6 r647off(T647* C);
T6 r647conforms_to(T647* C,T0* a1);
T0* r647twin(T647* C);
void r365copy(T365* C,T0* a1);
T6 r365is_equal(T365* C,T0* a1);
void r365remove_traversing_cursor(T365* C,T0* a1);
void r365move_all_cursors_after(T365* C);
void r365add_traversing_cursor(T365* C,T0* a1);
T6 r365se_assigned_from(T0* a1);
T0* r365clone(T0* a1);
T6 r365cursor_before(T0* a1);
T6 r365same_type(T365* C,T0* a1);
void r365make(T365* C,T2 a1);
T6 r365cursor_after(T0* a1);
T6 r365conforms_to(T365* C,T0* a1);
T6 r365cursor_same_position(T0* a1,T0* a2);
T0* r365twin(T365* C);
T0* r365new_cursor(T365* C);
T6 r365cursor_off(T0* a1);
void r293copy(T293* C,T0* a1);
void r293make_clashes(T293* C,T2 a1);
void r293search_position(T293* C,T2 a1);
T6 r293is_equal(T293* C,T0* a1);
void r293remove_traversing_cursor(T293* C,T0* a1);
void r293clone_slots(T293* C);
T0* r293item(T293* C,T2 a1);
void r293clone_clashes(T293* C);
void r293move_all_cursors_after(T293* C);
void r293make_items(T293* C,T2 a1);
void r293add_traversing_cursor(T293* C,T0* a1);
T6 r293se_assigned_from(T0* a1);
T0* r293clone(T0* a1);
T6 r293same_type(T293* C,T0* a1);
void r293clone_items(T293* C);
T6 r293conforms_to(T293* C,T0* a1);
T6 r293has(T293* C,T2 a1);
void r293make_keys(T293* C,T2 a1);
T2 r293hash_position(T293* C,T2 a1);
void r293clone_keys(T293* C);
void r293make_with_equality_testers(T293* C,T2 a1,T0* a2,T0* a3);
T6 r293cursor_same_position(T0* a1,T0* a2);
T0* r293twin(T293* C);
T0* r293new_cursor(T293* C);
void r293make_slots(T293* C,T2 a1);
T2 r293new_modulus(T2 a1);
T6 r293cursor_off(T0* a1);
T2 r483new_capacity(T2 a1);
void r483copy(T483* C,T0* a1);
void r483force(T483* C,T0* a1,T0* a2);
void r483make_clashes(T483* C,T2 a1);
void r483search_position(T483* C,T0* a1);
T6 r483is_equal(T483* C,T0* a1);
void r483remove_traversing_cursor(T483* C,T0* a1);
void r483clone_slots(T483* C);
void r483keys_resize(T483* C,T2 a1);
void r483clone_clashes(T483* C);
T0* r483item(T483* C,T0* a1);
void r483move_all_cursors_after(T483* C);
void r483make_items(T483* C,T2 a1);
void r483add_traversing_cursor(T483* C,T0* a1);
T6 r483se_assigned_from(T0* a1);
T0* r483clone(T0* a1);
T6 r483same_type(T483* C,T0* a1);
void r483make(T483* C,T2 a1);
void r483clone_items(T483* C);
T6 r483conforms_to(T483* C,T0* a1);
T6 r483has(T483* C,T0* a1);
void r483make_keys(T483* C,T2 a1);
T2 r483hash_position(T483* C,T0* a1);
void r483items_resize(T483* C,T2 a1);
void r483clone_keys(T483* C);
void r483make_with_equality_testers(T483* C,T2 a1,T0* a2,T0* a3);
void r483resize(T483* C,T2 a1);
T6 r483cursor_same_position(T0* a1,T0* a2);
void r483clashes_resize(T483* C,T2 a1);
void r483slots_resize(T483* C,T2 a1);
T0* r483twin(T483* C);
T0* r483new_cursor(T483* C);
void r483make_slots(T483* C,T2 a1);
T2 r483new_modulus(T2 a1);
T6 r483cursor_off(T0* a1);
T6 r405is_equal(T405* C,T0* a1);
T6 r405se_assigned_from(T0* a1);
T0* r405make(T2 a1);
T6 r405conforms_to(T405* C,T0* a1);
T0* r405resize(T0* a1,T2 a2);
T0* r405twin(T405* C);
void r149copy(T149* C,T0* a1);
void r149append_last(T149* C,T0* a1);
T0* r149cursor_item(T0* a1);
T6 r149cursor_is_last(T149* C,T0* a1);
T6 r149is_equal(T149* C,T0* a1);
void r149remove_traversing_cursor(T149* C,T0* a1);
void r149move_all_cursors_after(T149* C);
void r149add_traversing_cursor(T149* C,T0* a1);
T6 r149se_assigned_from(T0* a1);
T6 r149same_type(T149* C,T0* a1);
void r149make(T149* C);
T6 r149cursor_after(T0* a1);
T6 r149conforms_to(T149* C,T0* a1);
void r149cursor_forth(T149* C,T0* a1);
void r149make_from_linear(T149* C,T0* a1);
void r149cursor_start(T149* C,T0* a1);
T0* r149twin(T149* C);
void r149force_last(T149* C,T0* a1);
T0* r149new_cursor(T149* C);
void r149put_last(T149* C,T0* a1);
T6 r149cursor_off(T0* a1);
T6 r63is_equal(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
T0* r63twin(T63* C);
T6 r579is_equal(T579* C,T0* a1);
T6 r579se_assigned_from(T0* a1);
T0* r579make(T2 a1);
T6 r579conforms_to(T579* C,T0* a1);
T0* r579resize(T0* a1,T2 a2);
T0* r579twin(T579* C);
T6 r355is_equal(T355* C,T0* a1);
T6 r355se_assigned_from(T0* a1);
T0* r355make(T2 a1);
T6 r355conforms_to(T355* C,T0* a1);
T0* r355resize(T0* a1,T2 a2);
T0* r355twin(T355* C);
void r418copy(T418* C,T0* a1);
T6 r418is_equal(T418* C,T0* a1);
T6 r418same_position(T418* C,T0* a1);
T6 r418se_assigned_from(T0* a1);
T6 r418same_type(T418* C,T0* a1);
T6 r418off(T418* C);
T6 r418conforms_to(T418* C,T0* a1);
T0* r418twin(T418* C);
T6 r486is_equal(T486* C,T0* a1);
T6 r486se_assigned_from(T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T6 r486test(T0* a1,T0* a2);
T0* r486twin(T486* C);
void r287copy(T287* C,T0* a1);
T6 r287is_equal(T287* C,T0* a1);
T6 r287same_position(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
T6 r287same_type(T287* C,T0* a1);
void r287make(T287* C,T0* a1);
T6 r287off(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
void r318copy(T318* C,T0* a1);
void r318make_equal(T318* C,T2 a1);
void r318make_clashes(T318* C,T2 a1);
void r318search_position(T318* C,T0* a1);
T6 r318is_equal(T318* C,T0* a1);
void r318remove_traversing_cursor(T318* C,T0* a1);
void r318clone_slots(T318* C);
T0* r318items_item(T318* C,T2 a1);
void r318clone_clashes(T318* C);
void r318move_all_cursors_after(T318* C);
void r318make_items(T318* C,T2 a1);
void r318add_traversing_cursor(T318* C,T0* a1);
T6 r318se_assigned_from(T0* a1);
T0* r318clone(T0* a1);
T6 r318same_type(T318* C,T0* a1);
void r318make(T318* C,T2 a1);
T6 r318equal(T0* a1,T0* a2);
void r318clone_items(T318* C);
T6 r318same_equality_tester(T318* C,T0* a1);
T6 r318conforms_to(T318* C,T0* a1);
T6 r318has(T318* C,T0* a1);
T2 r318hash_position(T318* C,T0* a1);
T6 r318cursor_same_position(T0* a1,T0* a2);
T0* r318twin(T318* C);
T0* r318new_cursor(T318* C);
void r318make_slots(T318* C,T2 a1);
T2 r318new_modulus(T2 a1);
T6 r318cursor_off(T0* a1);
void r242copy(T242* C,T0* a1);
void r242wipe_out(T242* C);
T0* r242keys_item(T242* C,T2 a1);
void r242make_clashes(T242* C,T2 a1);
void r242put(T242* C,T0* a1,T0* a2);
void r242search_position(T242* C,T0* a1);
T6 r242is_equal(T242* C,T0* a1);
void r242remove_traversing_cursor(T242* C,T0* a1);
void r242clone_slots(T242* C);
void r242keys_resize(T242* C,T2 a1);
T0* r242item(T242* C,T0* a1);
void r242clone_clashes(T242* C);
void r242make_items(T242* C,T2 a1);
void r242move_all_cursors_after(T242* C);
void r242add_traversing_cursor(T242* C,T0* a1);
T6 r242se_assigned_from(T0* a1);
T0* r242clone(T0* a1);
T6 r242same_type(T242* C,T0* a1);
void r242slots_wipe_out(T242* C);
void r242make(T242* C,T2 a1);
void r242clashes_wipe_out(T242* C);
void r242clone_items(T242* C);
T6 r242conforms_to(T242* C,T0* a1);
T6 r242has(T242* C,T0* a1);
void r242make_keys(T242* C,T2 a1);
T2 r242hash_position(T242* C,T0* a1);
void r242items_wipe_out(T242* C);
void r242items_resize(T242* C,T2 a1);
void r242clone_keys(T242* C);
void r242make_with_equality_testers(T242* C,T2 a1,T0* a2,T0* a3);
void r242resize(T242* C,T2 a1);
T6 r242cursor_same_position(T0* a1,T0* a2);
void r242clashes_resize(T242* C,T2 a1);
void r242slots_resize(T242* C,T2 a1);
T0* r242twin(T242* C);
void r242keys_wipe_out(T242* C);
T0* r242new_cursor(T242* C);
void r242make_slots(T242* C,T2 a1);
void r242keys_put(T242* C,T0* a1,T2 a2);
T2 r242new_modulus(T2 a1);
T6 r242cursor_off(T0* a1);
T6 r682is_equal(T682* C,T0* a1);
T6 r682se_assigned_from(T0* a1);
T6 r682conforms_to(T682* C,T0* a1);
T0* r682twin(T682* C);
void r256copy(T256* C,T0* a1);
T6 r256is_equal(T256* C,T0* a1);
void r256remove_traversing_cursor(T256* C,T0* a1);
void r256move_all_cursors_after(T256* C);
void r256add_traversing_cursor(T256* C,T0* a1);
T6 r256se_assigned_from(T0* a1);
T6 r256same_type(T256* C,T0* a1);
void r256make(T256* C);
T6 r256conforms_to(T256* C,T0* a1);
T0* r256twin(T256* C);
T0* r256new_cursor(T256* C);
T6 r422is_equal(T422* C,T0* a1);
T6 r422se_assigned_from(T0* a1);
void r422make(T422* C,T2 a1);
T6 r422conforms_to(T422* C,T0* a1);
T0* r422twin(T422* C);
T6 r651is_equal(T651* C,T0* a1);
T6 r651se_assigned_from(T0* a1);
T0* r651make(T2 a1);
T6 r651conforms_to(T651* C,T0* a1);
T0* r651resize(T0* a1,T2 a2);
T0* r651twin(T651* C);
void r429copy(T429* C,T0* a1);
T6 r429is_equal(T429* C,T0* a1);
T6 r429same_position(T429* C,T0* a1);
T6 r429se_assigned_from(T0* a1);
T6 r429same_type(T429* C,T0* a1);
void r429make(T429* C,T0* a1);
T6 r429off(T429* C);
T6 r429conforms_to(T429* C,T0* a1);
T0* r429twin(T429* C);
void r265copy(T265* C,T0* a1);
T6 r265is_equal(T265* C,T0* a1);
T6 r265same_position(T265* C,T0* a1);
T6 r265se_assigned_from(T0* a1);
T6 r265same_type(T265* C,T0* a1);
void r265make(T265* C,T0* a1);
T6 r265conforms_to(T265* C,T0* a1);
void r265set_after(T265* C);
T0* r265twin(T265* C);
T6 r495is_equal(T495* C,T0* a1);
T6 r495se_assigned_from(T0* a1);
T0* r495make(T2 a1);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495resize(T0* a1,T2 a2);
T0* r495twin(T495* C);
T6 r695is_equal(T695* C,T0* a1);
T6 r695se_assigned_from(T0* a1);
void r695make(T695* C,T0* a1,T0* a2);
T6 r695conforms_to(T695* C,T0* a1);
T0* r695twin(T695* C);
T6 r680is_equal(T680* C,T0* a1);
T6 r680se_assigned_from(T0* a1);
T6 r680conforms_to(T680* C,T0* a1);
T0* r680twin(T680* C);
T6 r491is_equal(T491* C,T0* a1);
T6 r491se_assigned_from(T0* a1);
T0* r491make(T2 a1);
T6 r491conforms_to(T491* C,T0* a1);
T0* r491resize(T0* a1,T2 a2);
T0* r491twin(T491* C);
void r228copy(T228* C,T0* a1);
T6 r228is_equal(T228* C,T0* a1);
T0* r228item(T228* C);
T6 r228same_position(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
T6 r228after(T228* C);
T6 r228same_type(T228* C,T0* a1);
void r228make(T228* C,T0* a1);
T6 r228off(T228* C);
T6 r228conforms_to(T228* C,T0* a1);
T0* r228twin(T228* C);
T6 r432is_equal(T432* C,T0* a1);
T6 r432se_assigned_from(T0* a1);
T0* r432make(T2 a1);
T6 r432conforms_to(T432* C,T0* a1);
T0* r432resize(T0* a1,T2 a2);
T0* r432twin(T432* C);
T2 r100new_capacity(T2 a1);
void r100copy(T100* C,T0* a1);
void r100force(T100* C,T0* a1,T0* a2);
void r100make_clashes(T100* C,T2 a1);
T0* r100cursor_item(T100* C,T0* a1);
void r100search_position(T100* C,T0* a1);
T6 r100is_equal(T100* C,T0* a1);
void r100remove_traversing_cursor(T100* C,T0* a1);
void r100clone_slots(T100* C);
void r100keys_resize(T100* C,T2 a1);
T0* r100item(T100* C,T0* a1);
void r100clone_clashes(T100* C);
void r100move_all_cursors_after(T100* C);
void r100make_items(T100* C,T2 a1);
void r100add_traversing_cursor(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100clone(T0* a1);
T6 r100same_type(T100* C,T0* a1);
void r100make(T100* C,T2 a1);
void r100clone_items(T100* C);
T6 r100cursor_after(T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T6 r100has(T100* C,T0* a1);
void r100make_keys(T100* C,T2 a1);
T2 r100hash_position(T100* C,T0* a1);
void r100cursor_forth(T100* C,T0* a1);
void r100items_resize(T100* C,T2 a1);
void r100clone_keys(T100* C);
void r100make_with_equality_testers(T100* C,T2 a1,T0* a2,T0* a3);
void r100resize(T100* C,T2 a1);
T6 r100cursor_same_position(T0* a1,T0* a2);
void r100cursor_start(T100* C,T0* a1);
void r100clashes_resize(T100* C,T2 a1);
void r100slots_resize(T100* C,T2 a1);
T0* r100twin(T100* C);
T0* r100new_cursor(T100* C);
void r100make_slots(T100* C,T2 a1);
T2 r100new_modulus(T2 a1);
T6 r100cursor_off(T0* a1);
void r139copy(T139* C,T0* a1);
void r139set(T139* C,T0* a1,T6 a2,T6 a3);
T6 r139is_equal(T139* C,T0* a1);
T6 r139same_position(T139* C,T0* a1);
T6 r139se_assigned_from(T0* a1);
T6 r139is_last(T139* C);
T6 r139same_type(T139* C,T0* a1);
void r139make(T139* C,T0* a1);
T6 r139conforms_to(T139* C,T0* a1);
void r139set_after(T139* C);
T0* r139twin(T139* C);
T6 r109is_equal(T109* C,T0* a1);
T6 r109se_assigned_from(T0* a1);
T0* r109make(T2 a1);
T6 r109conforms_to(T109* C,T0* a1);
T0* r109resize(T0* a1,T2 a2);
T0* r109twin(T109* C);
void r593copy(T593* C,T0* a1);
void r593append_last(T593* C,T0* a1);
T0* r593cursor_item(T0* a1);
T6 r593is_equal(T593* C,T0* a1);
void r593remove_traversing_cursor(T593* C,T0* a1);
void r593cursor_go_after(T593* C,T0* a1);
void r593move_all_cursors_after(T593* C);
void r593add_traversing_cursor(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
T6 r593same_type(T593* C,T0* a1);
void r593make(T593* C);
T6 r593cursor_after(T0* a1);
T6 r593conforms_to(T593* C,T0* a1);
void r593cursor_forth(T593* C,T0* a1);
void r593make_from_linear(T593* C,T0* a1);
void r593cursor_start(T593* C,T0* a1);
T0* r593twin(T593* C);
void r593force_last(T593* C,T0* a1);
T0* r593new_cursor(T593* C);
T6 r593cursor_off(T0* a1);
void r78copy(T78* C,T0* a1);
T6 r78is_equal(T78* C,T0* a1);
void r78remove_traversing_cursor(T78* C,T0* a1);
void r78move_all_cursors_after(T78* C);
void r78add_traversing_cursor(T78* C,T0* a1);
T6 r78se_assigned_from(T0* a1);
T6 r78same_type(T78* C,T0* a1);
void r78make(T78* C);
T6 r78conforms_to(T78* C,T0* a1);
void r78cursor_forth(T78* C,T0* a1);
void r78cursor_start(T78* C,T0* a1);
T0* r78twin(T78* C);
void r78force_last(T78* C,T0* a1);
T0* r78new_cursor(T78* C);
T6 r78cursor_off(T0* a1);
T6 r112is_equal(T112* C,T0* a1);
T6 r112se_assigned_from(T0* a1);
T6 r112conforms_to(T112* C,T0* a1);
T6 r112test(T0* a1,T0* a2);
T0* r112twin(T112* C);
void r375copy(T375* C,T0* a1);
T6 r375is_equal(T375* C,T0* a1);
T6 r375same_position(T375* C,T0* a1);
T6 r375se_assigned_from(T0* a1);
T6 r375same_type(T375* C,T0* a1);
T6 r375off(T375* C);
T6 r375conforms_to(T375* C,T0* a1);
T0* r375twin(T375* C);
void r275copy(T275* C,T0* a1);
void r275wipe_out(T275* C);
void r275make_clashes(T275* C,T2 a1);
void r275search_position(T275* C,T2 a1);
T6 r275is_equal(T275* C,T0* a1);
void r275remove_traversing_cursor(T275* C,T0* a1);
void r275clone_slots(T275* C);
T0* r275item(T275* C,T2 a1);
void r275clone_clashes(T275* C);
void r275make_items(T275* C,T2 a1);
void r275move_all_cursors_after(T275* C);
void r275add_traversing_cursor(T275* C,T0* a1);
T6 r275se_assigned_from(T0* a1);
T0* r275clone(T0* a1);
T6 r275same_type(T275* C,T0* a1);
void r275slots_wipe_out(T275* C);
void r275clashes_wipe_out(T275* C);
void r275clone_items(T275* C);
T6 r275conforms_to(T275* C,T0* a1);
T6 r275has(T275* C,T2 a1);
void r275make_keys(T275* C,T2 a1);
T2 r275hash_position(T275* C,T2 a1);
void r275items_wipe_out(T275* C);
void r275clone_keys(T275* C);
void r275make_with_equality_testers(T275* C,T2 a1,T0* a2,T0* a3);
T6 r275cursor_same_position(T0* a1,T0* a2);
T0* r275twin(T275* C);
void r275keys_wipe_out(T275* C);
T0* r275new_cursor(T275* C);
void r275make_slots(T275* C,T2 a1);
T2 r275new_modulus(T2 a1);
T6 r275cursor_off(T0* a1);
T6 r253is_equal(T253* C,T0* a1);
T6 r253se_assigned_from(T0* a1);
T6 r253conforms_to(T253* C,T0* a1);
T6 r253test(T0* a1,T0* a2);
T0* r253twin(T253* C);
void r402copy(T402* C,T0* a1);
T6 r402is_equal(T402* C,T0* a1);
T6 r402same_position(T402* C,T0* a1);
T6 r402se_assigned_from(T0* a1);
T6 r402same_type(T402* C,T0* a1);
void r402make(T402* C,T0* a1);
T6 r402off(T402* C);
T6 r402conforms_to(T402* C,T0* a1);
T0* r402twin(T402* C);
void r240copy(T240* C,T0* a1);
T0* r240keys_item(T240* C,T2 a1);
void r240make_clashes(T240* C,T2 a1);
T0* r240cursor_item(T240* C,T0* a1);
void r240search_position(T240* C,T0* a1);
T6 r240is_equal(T240* C,T0* a1);
void r240remove_traversing_cursor(T240* C,T0* a1);
void r240clone_slots(T240* C);
T0* r240item(T240* C,T0* a1);
void r240clone_clashes(T240* C);
void r240move_all_cursors_after(T240* C);
void r240make_items(T240* C,T2 a1);
void r240add_traversing_cursor(T240* C,T0* a1);
T6 r240se_assigned_from(T0* a1);
T0* r240clone(T0* a1);
T6 r240same_type(T240* C,T0* a1);
void r240make(T240* C,T2 a1);
void r240clone_items(T240* C);
T6 r240cursor_after(T0* a1);
T6 r240conforms_to(T240* C,T0* a1);
T6 r240has(T240* C,T0* a1);
void r240make_keys(T240* C,T2 a1);
T2 r240hash_position(T240* C,T0* a1);
void r240cursor_forth(T240* C,T0* a1);
void r240clone_keys(T240* C);
void r240make_with_equality_testers(T240* C,T2 a1,T0* a2,T0* a3);
T6 r240cursor_same_position(T0* a1,T0* a2);
void r240cursor_start(T240* C,T0* a1);
T0* r240twin(T240* C);
T0* r240new_cursor(T240* C);
void r240make_slots(T240* C,T2 a1);
T2 r240new_modulus(T2 a1);
T6 r240cursor_off(T0* a1);
T6 r531is_equal(T531* C,T0* a1);
T6 r531se_assigned_from(T0* a1);
T0* r531make(T2 a1);
T6 r531conforms_to(T531* C,T0* a1);
T0* r531resize(T0* a1,T2 a2);
T0* r531twin(T531* C);
void r528copy(T528* C,T0* a1);
T6 r528is_equal(T528* C,T0* a1);
T6 r528same_position(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
T6 r528same_type(T528* C,T0* a1);
T6 r528off(T528* C);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528twin(T528* C);
void r383copy(T383* C,T0* a1);
T6 r383is_equal(T383* C,T0* a1);
void r383remove_traversing_cursor(T383* C,T0* a1);
void r383move_all_cursors_after(T383* C);
void r383add_traversing_cursor(T383* C,T0* a1);
T6 r383se_assigned_from(T0* a1);
T0* r383clone(T0* a1);
T6 r383cursor_before(T0* a1);
T6 r383same_type(T383* C,T0* a1);
void r383make(T383* C,T2 a1);
T6 r383cursor_after(T0* a1);
T6 r383conforms_to(T383* C,T0* a1);
T6 r383cursor_same_position(T0* a1,T0* a2);
T0* r383twin(T383* C);
T0* r383new_cursor(T383* C);
T6 r383cursor_off(T0* a1);
void r392copy(T392* C,T0* a1);
T6 r392is_equal(T392* C,T0* a1);
T6 r392same_position(T392* C,T0* a1);
T6 r392se_assigned_from(T0* a1);
T6 r392same_type(T392* C,T0* a1);
T6 r392off(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
void r59copy(T59* C,T0* a1);
T6 r59is_equal(T59* C,T0* a1);
void r59remove_traversing_cursor(T59* C,T0* a1);
void r59move_all_cursors_after(T59* C);
void r59add_traversing_cursor(T59* C,T0* a1);
T6 r59se_assigned_from(T0* a1);
T6 r59same_type(T59* C,T0* a1);
void r59make(T59* C);
T6 r59conforms_to(T59* C,T0* a1);
void r59cursor_forth(T59* C,T0* a1);
void r59cursor_start(T59* C,T0* a1);
T0* r59twin(T59* C);
void r59force_last(T59* C,T0* a1);
T0* r59new_cursor(T59* C);
T6 r59cursor_off(T0* a1);
void r338copy(T338* C,T0* a1);
T0* r338keys_item(T338* C,T2 a1);
void r338make_clashes(T338* C,T2 a1);
void r338search_position(T338* C,T0* a1);
T6 r338is_equal(T338* C,T0* a1);
void r338remove_traversing_cursor(T338* C,T0* a1);
void r338clone_slots(T338* C);
T0* r338item(T338* C,T0* a1);
void r338clone_clashes(T338* C);
void r338move_all_cursors_after(T338* C);
void r338make_items(T338* C,T2 a1);
void r338add_traversing_cursor(T338* C,T0* a1);
T6 r338se_assigned_from(T0* a1);
T0* r338clone(T0* a1);
T6 r338same_type(T338* C,T0* a1);
void r338make(T338* C,T2 a1);
void r338clone_items(T338* C);
T6 r338conforms_to(T338* C,T0* a1);
T6 r338has(T338* C,T0* a1);
void r338make_keys(T338* C,T2 a1);
T2 r338hash_position(T338* C,T0* a1);
void r338clone_keys(T338* C);
void r338make_with_equality_testers(T338* C,T2 a1,T0* a2,T0* a3);
T6 r338cursor_same_position(T0* a1,T0* a2);
T0* r338twin(T338* C);
T0* r338new_cursor(T338* C);
void r338make_slots(T338* C,T2 a1);
T2 r338new_modulus(T2 a1);
T6 r338cursor_off(T0* a1);
T6 r726is_equal(T726* C,T0* a1);
T6 r726se_assigned_from(T0* a1);
void r726make(T726* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r726conforms_to(T726* C,T0* a1);
T0* r726twin(T726* C);
T6 r473is_equal(T473* C,T0* a1);
T6 r473se_assigned_from(T0* a1);
void r473make(T473* C,T0* a1,T2 a2,T2 a3);
T6 r473conforms_to(T473* C,T0* a1);
T0* r473twin(T473* C);
T6 r564is_equal(T564* C,T0* a1);
T6 r564se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r564Arguments(void);
void r564make(T564* C,T0* a1,T0* a2,T0* a3);
T0* r564message(T564* C,T0* a1);
T6 r564conforms_to(T564* C,T0* a1);
T0* r564twin(T564* C);
T0* r564default_message(T564* C);
extern T0*oBC81STRING_;
T6 r622is_equal(T622* C,T0* a1);
T6 r622se_assigned_from(T0* a1);
T0* r622Arguments(void);
void r622make(T622* C,T0* a1,T0* a2,T0* a3);
T0* r622message(T622* C,T0* a1);
T6 r622conforms_to(T622* C,T0* a1);
T0* r622twin(T622* C);
T0* r622default_message(T622* C);
T6 r624is_equal(T624* C,T0* a1);
T0* r624new_tree_parser(T624* C);
T6 r624se_assigned_from(T0* a1);
T0* r624new_tree_parser_imp(T624* C);
T6 r624conforms_to(T624* C,T0* a1);
T0* r624twin(T624* C);
T6 r536is_expression_true(T536* C,T0* a1);
T6 r536should_strip_element(T536* C,T0* a1,T0* a2);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
void r536preprocess_composite(T536* C,T0* a1,T0* a2);
extern T0*oBC168uc_equal;
extern int fBC168uc_equal;
T0* r536uc_equal(void);
T6 r536is_valid_expression(T0* a1);
extern T0*oBC168uc_closing_curly_brace;
extern int fBC168uc_closing_curly_brace;
T0* r536uc_closing_curly_brace(void);
void r536make(T536* C,T0* a1,T0* a2);
extern T0*oBC168uc_unless;
extern int fBC168uc_unless;
T0* r536uc_unless(void);
extern T0*oBC168uc_if;
extern int fBC168uc_if;
T0* r536uc_if(void);
T6 r536conforms_to(T536* C,T0* a1);
extern T0*oBC168uc_opening_curly_brace;
extern int fBC168uc_opening_curly_brace;
T0* r536uc_opening_curly_brace(void);
T0* r536twin(T536* C);
void r536expand_attribute_variables(T536* C,T0* a1);
extern T0*oBC168uc_dollar;
extern int fBC168uc_dollar;
T0* r536uc_dollar(void);
T6 r567is_equal(T567* C,T0* a1);
T6 r567se_assigned_from(T0* a1);
T0* r567Arguments(void);
void r567make(T567* C);
T0* r567message(T567* C,T0* a1);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567twin(T567* C);
T0* r567default_message(T567* C);
T6 r592is_equal(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
void r592make(T592* C,T0* a1);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
T6 r533is_equal(T533* C,T0* a1);
T6 r533se_assigned_from(T0* a1);
void r533make_with_variables(T533* C,T0* a1,T0* a2);
T6 r533conforms_to(T533* C,T0* a1);
extern T0*oBC168uc_cluster;
extern int fBC168uc_cluster;
T0* r533uc_cluster(void);
void r533parse_file(T533* C,T0* a1);
T0* r533twin(T533* C);
extern T0*oBC168uc_system;
extern int fBC168uc_system;
T0* r533uc_system(void);
extern T0*oBC76INPUT_STREAM_;
T6 r166is_equal(T166* C,T0* a1);
T6 r166se_assigned_from(T0* a1);
void r166make_with_variables(T166* C,T0* a1,T0* a2);
T6 r166conforms_to(T166* C,T0* a1);
T0* r166uc_cluster(void);
void r166parse_file(T166* C,T0* a1);
T0* r166twin(T166* C);
T0* r166uc_system(void);
T6 r188is_equal(T188* C,T0* a1);
T6 r188se_assigned_from(T0* a1);
void r188unmount_root(T188* C,T0* a1);
void r188make(T188* C,T0* a1);
void r188mount(T188* C,T0* a1);
T6 r188conforms_to(T188* C,T0* a1);
void r188unmount(T188* C);
T0* r188twin(T188* C);
void r188mount_root(T188* C,T0* a1);
void r193set_optimize(T193* C,T6 a1);
T6 r193is_equal(T193* C,T0* a1);
void r193set_ensure(T193* C,T6 a1);
T6 r193se_assigned_from(T0* a1);
void r193make(T193* C);
void r193set_check(T193* C,T6 a1);
T6 r193conforms_to(T193* C,T0* a1);
void r193set_invariant(T193* C,T6 a1);
void r193set_loop(T193* C,T6 a1);
void r193set_debug(T193* C,T6 a1);
T0* r193twin(T193* C);
void r193set_require(T193* C,T6 a1);
T6 r225is_equal(T225* C,T0* a1);
T6 r225se_assigned_from(T0* a1);
void r225make(T225* C,T0* a1,T2 a2,T0* a3);
T6 r225conforms_to(T225* C,T0* a1);
T0* r225twin(T225* C);
T6 r192has_exported_features(T192* C);
T6 r192is_equal(T192* C,T0* a1);
T6 r192se_assigned_from(T0* a1);
void r192merge(T192* C,T0* a1);
void r192make(T192* C);
T6 r192is_empty(T192* C);
T6 r192conforms_to(T192* C,T0* a1);
T0* r192cloned_externals(T192* C);
T6 r192has_include_directories(T192* C);
T6 r192has_link_libraries(T192* C);
T0* r192twin(T192* C);
T6 r198is_equal(T198* C,T0* a1);
T6 r198se_assigned_from(T0* a1);
extern T0*oBC33std;
T6 r198conforms_to(T198* C,T0* a1);
T0* r198twin(T198* C);
void r198make_standard(T198* C);
T6 r478is_equal(T478* C,T0* a1);
T6 r478se_assigned_from(T0* a1);
T6 r478conforms_to(T478* C,T0* a1);
T0* r478twin(T478* C);
void r537put(T537* C,T0* a1,T0* a2);
T6 r537is_equal(T537* C,T0* a1);
T0* r537item(T537* C,T0* a1);
T6 r537se_assigned_from(T0* a1);
void r537make(T537* C);
T6 r537conforms_to(T537* C,T0* a1);
T0* r537twin(T537* C);
T6 r167is_equal(T167* C,T0* a1);
T6 r167se_assigned_from(T0* a1);
void r167make_with_variables(T167* C,T0* a1,T0* a2);
T6 r167conforms_to(T167* C,T0* a1);
T0* r167uc_cluster(void);
void r167parse_file(T167* C,T0* a1);
T0* r167twin(T167* C);
T0* r167uc_system(void);
void r116print_cluster(T116* C,T0* a1,T2 a2,T0* a3);
T6 r116is_equal(T116* C,T0* a1);
void r116print_xml_file(T116* C,T0* a1,T0* a2);
void r116print_externals(T0* a1,T2 a2,T0* a3);
T6 r116se_assigned_from(T0* a1);
void r116print_exported_class(T0* a1,T2 a2,T0* a3);
void r116print_clusters(T116* C,T0* a1,T2 a2,T0* a3);
void r116generate(T116* C,T0* a1);
T6 r116conforms_to(T116* C,T0* a1);
T0* r116twin(T116* C);
void r116print_options(T0* a1,T2 a2,T0* a3);
void r116print_indentation(T2 a1,T0* a2);
void r116print_link_libraries(T0* a1,T2 a2,T0* a3);
void r116print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r689is_equal(T689* C,T0* a1);
T6 r689se_assigned_from(T0* a1);
void r689old_read_character(T689* C);
T6 r689old_end_of_file(T689* C);
void r689make(T689* C);
T6 r689conforms_to(T689* C,T0* a1);
T0* r689twin(T689* C);
T6 r472is_equal(T472* C,T0* a1);
T6 r472se_assigned_from(T0* a1);
void r472make(T472* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r472conforms_to(T472* C,T0* a1);
T0* r472twin(T472* C);
T6 r570is_equal(T570* C,T0* a1);
T6 r570se_assigned_from(T0* a1);
T6 r570conforms_to(T570* C,T0* a1);
T6 r570is_undefined(T570* C);
T0* r570twin(T570* C);
T6 r724is_equal(T724* C,T0* a1);
T6 r724se_assigned_from(T0* a1);
void r724make(T724* C,T0* a1,T0* a2);
T6 r724conforms_to(T724* C,T0* a1);
T0* r724twin(T724* C);
T6 r566is_equal(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T0* r566Arguments(void);
void r566make(T566* C,T0* a1);
T0* r566message(T566* C,T0* a1);
T6 r566conforms_to(T566* C,T0* a1);
T0* r566twin(T566* C);
T0* r566default_message(T566* C);
T6 r668is_closed(T668* C);
void r668old_close(T668* C);
T6 r668is_equal(T668* C,T0* a1);
T6 r668se_assigned_from(T0* a1);
void r668close(T668* C);
void r668make(T668* C,T0* a1);
void r668old_put_string(T668* C,T0* a1);
T6 r668conforms_to(T668* C,T0* a1);
void r668connect_to(T668* C,T0* a1);
void r668put_line(T668* C,T0* a1);
T0* r668twin(T668* C);
void r668open_write(T668* C);
T0* r197new_class(T0* a1,T2 a2,T0* a3);
T6 r197is_equal(T197* C,T0* a1);
T6 r197se_assigned_from(T0* a1);
T6 r197conforms_to(T197* C,T0* a1);
T0* r197twin(T197* C);
void r113print_cluster(T113* C,T0* a1,T0* a2);
T6 r113is_equal(T113* C,T0* a1);
T6 r113se_assigned_from(T0* a1);
void r113print_ace_file(T113* C,T0* a1,T0* a2);
void r113print_exported_class(T0* a1,T2 a2,T0* a3);
void r113print_clusters(T113* C,T0* a1,T0* a2);
void r113generate(T113* C,T0* a1);
T6 r113conforms_to(T113* C,T0* a1);
T0* r113twin(T113* C);
void r113print_options(T0* a1,T2 a2,T0* a3);
void r113print_indentation(T2 a1,T0* a2);
void r113print_link_libraries(T0* a1,T0* a2);
void r113print_include_directories(T0* a1,T0* a2);
T6 r516is_equal(T516* C,T0* a1);
T515 r516item(T516* C);
T6 r516se_assigned_from(T0* a1);
T6 r516conforms_to(T516* C,T0* a1);
void r516make_from_character(T516* C,T3 a1);
T0* r516twin(T516* C);
T6 r723is_equal(T723* C,T0* a1);
T6 r723se_assigned_from(T0* a1);
void r723make_from_implementation(T723* C,T0* a1);
T6 r723conforms_to(T723* C,T0* a1);
T0* r723twin(T723* C);
void r630set_last_cell(T630* C,T0* a1);
void r630copy(T630* C,T0* a1);
void r630wipe_out(T630* C);
void r630remove_first(T630* C);
T0* r630cursor_item(T0* a1);
T6 r630cursor_is_last(T630* C,T0* a1);
T6 r630is_equal(T630* C,T0* a1);
void r630remove_traversing_cursor(T630* C,T0* a1);
void r630cursor_go_after(T630* C,T0* a1);
void r630move_all_cursors_after(T630* C);
void r630add_traversing_cursor(T630* C,T0* a1);
T6 r630se_assigned_from(T0* a1);
T6 r630cursor_before(T0* a1);
T6 r630same_type(T630* C,T0* a1);
void r630make(T630* C);
T0* r630first_element(T630* C);
void r630remove_last(T630* C);
T6 r630cursor_after(T0* a1);
T6 r630conforms_to(T630* C,T0* a1);
void r630cursor_forth(T630* C,T0* a1);
void r630move_last_cursors_after(T630* C);
void r630cursor_start(T630* C,T0* a1);
T0* r630twin(T630* C);
T0* r630new_cursor(T630* C);
T6 r630cursor_is_first(T630* C,T0* a1);
void r630remove_at_cursor(T630* C,T0* a1);
void r630put_last(T630* C,T0* a1);
void r630move_all_cursors(T630* C,T0* a1,T0* a2);
T6 r630cursor_off(T0* a1);
extern T0*oBC91template_expander;
T6 r90is_equal(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
void r90make(T90* C);
T6 r90conforms_to(T90* C,T0* a1);
T0* r90twin(T90* C);
T0* r90expanded_variables(T90* C,T0* a1);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129make(T129* C,T0* a1,T0* a2);
T6 r129conforms_to(T129* C,T0* a1);
void r129execute(T129* C);
T0* r129twin(T129* C);
T6 r715is_equal(T715* C,T0* a1);
T6 r715se_assigned_from(T0* a1);
void r715make(T715* C,T0* a1,T0* a2);
T6 r715conforms_to(T715* C,T0* a1);
T0* r715twin(T715* C);
T6 r86is_equal(T86* C,T0* a1);
T6 r86se_assigned_from(T0* a1);
T0* r86Arguments(void);
void r86make(T86* C,T0* a1);
T0* r86message(T86* C,T0* a1);
T6 r86conforms_to(T86* C,T0* a1);
T0* r86twin(T86* C);
T0* r86default_message(T86* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
void r75execute_generators(T75* C,T0* a1);
void r75make(T75* C,T0* a1,T0* a2);
T6 r75conforms_to(T75* C,T0* a1);
void r75_29Pmake(T75* C,T0* a1,T0* a2);
void r75execute(T75* C);
T0* r75twin(T75* C);
void r89print_cluster(T89* C,T0* a1,T0* a2);
T6 r89is_equal(T89* C,T0* a1);
T6 r89se_assigned_from(T0* a1);
void r89print_ace_file(T89* C,T0* a1,T0* a2);
void r89generate_cecil_file(T89* C,T0* a1);
void r89print_exported_class(T0* a1,T0* a2);
void r89print_clusters(T89* C,T0* a1,T0* a2);
void r89generate(T89* C,T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T0* r89twin(T89* C);
void r89print_options(T0* a1,T2 a2,T0* a3);
void r89print_exported_classes(T0* a1,T0* a2);
void r89print_indentation(T2 a1,T0* a2);
void r89print_link_libraries(T0* a1,T0* a2);
void r89print_include_directories(T0* a1,T0* a2);
T6 r717is_equal(T717* C,T0* a1);
T6 r717se_assigned_from(T0* a1);
void r717make_from_implementation(T717* C,T0* a1);
T6 r717conforms_to(T717* C,T0* a1);
T0* r717twin(T717* C);
T6 r679is_equal(T679* C,T0* a1);
T6 r679se_assigned_from(T0* a1);
T0* r679Arguments(void);
void r679make(T679* C,T0* a1);
T0* r679message(T679* C,T0* a1);
T6 r679conforms_to(T679* C,T0* a1);
T0* r679twin(T679* C);
T0* r679default_message(T679* C);
T6 r189is_equal(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
void r189unmount_root(T189* C,T0* a1);
void r189make(T189* C,T0* a1,T0* a2);
void r189mount(T189* C,T0* a1);
T6 r189conforms_to(T189* C,T0* a1);
void r189unmount(T189* C);
T0* r189twin(T189* C);
void r189set_excluded(T189* C,T0* a1);
void r189mount_root(T189* C,T0* a1);
void r448yy_build_tables(T448* C);
extern T0*oBC449yy_meta_template;
extern int fBC449yy_meta_template;
T0* r448yy_meta_template(void);
extern T0*oBC448yycheck_template;
extern int fBC448yycheck_template;
T0* r448yycheck_template(void);
T6 r448is_equal(T448* C,T0* a1);
extern T0*oBC449yy_accept_template;
extern int fBC449yy_accept_template;
T0* r448yy_accept_template(void);
extern T0*oBC449yy_base_template;
extern int fBC449yy_base_template;
T0* r448yy_base_template(void);
void r448yy_build_parser_tables(T448* C);
T6 r448se_assigned_from(T0* a1);
extern T0*oBC448yytable_template;
extern int fBC448yytable_template;
T0* r448yytable_template(void);
T0* r448yyfixed_array(T0* a1);
extern T0*oBC448yypgoto_template;
extern int fBC448yypgoto_template;
T0* r448yypgoto_template(void);
extern T0*oBC458Empty_buffer;
extern int fBC458Empty_buffer;
T0* r448Empty_buffer(void);
void r448yy_set_content(T448* C,T0* a1);
extern T0*oBC449yy_nxt_template;
extern int fBC449yy_nxt_template;
T0* r448yy_nxt_template(void);
extern T0*oBC449yy_chk_template;
extern int fBC449yy_chk_template;
T0* r448yy_chk_template(void);
extern T0*oBC448yypact_template;
extern int fBC448yypact_template;
T0* r448yypact_template(void);
void r448make_parser_skeleton(T448* C);
extern T0*oBC448yydefact_template;
extern int fBC448yydefact_template;
T0* r448yydefact_template(void);
extern T0*oBC449yy_def_template;
extern int fBC449yy_def_template;
T0* r448yy_def_template(void);
T6 r448conforms_to(T448* C,T0* a1);
extern T0*oBC449yy_ec_template;
extern int fBC449yy_ec_template;
T0* r448yy_ec_template(void);
void r448make_with_buffer(T448* C,T0* a1);
void r448yy_initialize(T448* C);
extern T0*oBC448yyr1_template;
extern int fBC448yyr1_template;
T0* r448yyr1_template(void);
void r448make_with_factory(T448* C,T0* a1,T0* a2,T0* a3);
T0* r448twin(T448* C);
void r448yy_load_input_buffer(T448* C);
extern T0*oBC448yytranslate_template;
extern int fBC448yytranslate_template;
T0* r448yytranslate_template(void);
T0* r448yy_fixed_array(T0* a1);
extern T0*oBC448yyr2_template;
extern int fBC448yyr2_template;
T0* r448yyr2_template(void);
extern T0*oBC448yydefgoto_template;
extern int fBC448yydefgoto_template;
T0* r448yydefgoto_template(void);
void r448make_eiffel_scanner(T448* C,T0* a1,T0* a2);
void r170disconnect(T170* C);
T6 r170is_equal(T170* C,T0* a1);
T6 r170se_assigned_from(T0* a1);
void r170read_character(T170* C);
T6 r170conforms_to(T170* C,T0* a1);
T6 r170end_of_input(T170* C);
void r170connect_to(T170* C,T0* a1);
T0* r170twin(T170* C);
T6 r229is_equal(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
void r229make(T229* C,T0* a1,T0* a2);
T6 r229conforms_to(T229* C,T0* a1);
T0* r229twin(T229* C);
T6 r560is_equal(T560* C,T0* a1);
T6 r560se_assigned_from(T0* a1);
T0* r560Arguments(void);
void r560make(T560* C,T0* a1,T0* a2);
T0* r560message(T560* C,T0* a1);
T6 r560conforms_to(T560* C,T0* a1);
T0* r560twin(T560* C);
T0* r560default_message(T560* C);
T6 r164is_equal(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
T6 r164conforms_to(T164* C,T0* a1);
void r164make_basic_classes(T164* C);
T0* r164eiffel_class(T164* C,T0* a1);
void r164set_mounted_clusters(T164* C,T0* a1);
void r164make_with_factory(T164* C,T0* a1,T0* a2,T0* a3);
T0* r164twin(T164* C);
void r164merge_externals(T164* C);
extern T0*oBC168uc_optimize;
extern int fBC168uc_optimize;
T0* r180uc_optimize(void);
void r180validate_named_cluster(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_check;
extern int fBC168uc_check;
T0* r180uc_check(void);
void r180validate_root(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_external;
extern int fBC168uc_external;
T0* r180uc_external(void);
void r180validate_external(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_exclude;
extern int fBC168uc_exclude;
T0* r180uc_exclude(void);
void r180validate_mount(T180* C,T0* a1,T0* a2);
T6 r180is_equal(T180* C,T0* a1);
void r180validate_system_doc(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_invariant;
extern int fBC168uc_invariant;
T0* r180uc_invariant(void);
T6 r180se_assigned_from(T0* a1);
void r180validate_cluster(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_description;
extern int fBC168uc_description;
T0* r180uc_description(void);
extern T0*oBC168uc_mount;
extern int fBC168uc_mount;
T0* r180uc_mount(void);
extern T0*oBC168uc_debug;
extern int fBC168uc_debug;
T0* r180uc_debug(void);
extern T0*oBC168uc_option;
extern int fBC168uc_option;
T0* r180uc_option(void);
extern T0*oBC168uc_root;
extern int fBC168uc_root;
T0* r180uc_root(void);
void r180validate_system(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_feature;
extern int fBC168uc_feature;
T0* r180uc_feature(void);
extern T0*oBC168uc_class;
extern int fBC168uc_class;
T0* r180uc_class(void);
extern T0*oBC168uc_loop;
extern int fBC168uc_loop;
T0* r180uc_loop(void);
T6 r180conforms_to(T180* C,T0* a1);
void r180validate_cluster_doc(T180* C,T0* a1,T0* a2);
void r180validate_export(T180* C,T0* a1,T0* a2);
T0* r180uc_cluster(void);
void r180validate_exclude(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_export;
extern int fBC168uc_export;
T0* r180uc_export(void);
extern T0*oBC168uc_link_library;
extern int fBC168uc_link_library;
T0* r180uc_link_library(void);
extern T0*oBC168uc_include_dir;
extern int fBC168uc_include_dir;
T0* r180uc_include_dir(void);
extern T0*oBC168uc_location;
extern int fBC168uc_location;
T0* r180uc_location(void);
T0* r180twin(T180* C);
T0* r180uc_system(void);
extern T0*oBC168uc_creation;
extern int fBC168uc_creation;
T0* r180uc_creation(void);
extern T0*oBC168uc_name;
extern int fBC168uc_name;
T0* r180uc_name(void);
extern T0*oBC168uc_require;
extern int fBC168uc_require;
T0* r180uc_require(void);
void r180validate_option(T180* C,T0* a1,T0* a2);
extern T0*oBC168uc_ensure;
extern int fBC168uc_ensure;
T0* r180uc_ensure(void);
void r115print_cluster(T115* C,T0* a1,T0* a2);
T6 r115is_equal(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
void r115print_ace_file(T115* C,T0* a1,T0* a2);
void r115print_exported_class(T0* a1,T2 a2,T0* a3);
void r115print_component(T0* a1);
void r115print_clusters(T115* C,T0* a1,T0* a2);
void r115generate(T115* C,T0* a1);
T6 r115conforms_to(T115* C,T0* a1);
T0* r115twin(T115* C);
void r115print_options(T0* a1,T2 a2,T0* a3);
void r115print_indentation(T2 a1,T0* a2);
void r115print_link_libraries(T0* a1,T0* a2);
void r115print_include_directories(T0* a1,T0* a2);
T6 r563is_equal(T563* C,T0* a1);
T6 r563se_assigned_from(T0* a1);
T0* r563Arguments(void);
void r563make(T563* C,T0* a1,T0* a2,T0* a3);
T0* r563message(T563* C,T0* a1);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563twin(T563* C);
T0* r563default_message(T563* C);
T6 r666is_equal(T666* C,T0* a1);
T6 r666se_assigned_from(T0* a1);
T0* r666Arguments(void);
void r666make(T666* C,T0* a1);
T0* r666message(T666* C,T0* a1);
T6 r666conforms_to(T666* C,T0* a1);
T0* r666twin(T666* C);
T0* r666default_message(T666* C);
T6 r541is_equal(T541* C,T0* a1);
T6 r541se_assigned_from(T0* a1);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541expand_from_hash_table(T0* a1,T0* a2);
T0* r541twin(T541* C);
void r470set_position(T470* C,T2 a1,T2 a2,T2 a3);
T6 r470is_equal(T470* C,T0* a1);
extern T2 oBC470lower;
extern int fBC470lower;
T2 r470lower(void);
T6 r470se_assigned_from(T0* a1);
void r470make(T470* C,T0* a1);
extern T0*oBC174STRING_BUFFER_;
T6 r470conforms_to(T470* C,T0* a1);
void r470make_from_buffer(T470* C,T0* a1);
T0* r470twin(T470* C);
extern T0*oBC513utils;
T2 r513item_code(T513* C,T2 a1);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
void r513make(T513* C);
void r513insert(T513* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r513add_to_storage_count(T513* C,T2 a1);
void r513insert_code(T513* C,T2 a1,T2 a2);
T6 r513conforms_to(T513* C,T0* a1);
extern T6 oBC513optimize_access;
void r513storage_move(T513* C,T2 a1,T2 a2,T2 a3);
T0* r513twin(T513* C);
void r513find_position(T513* C,T2 a1);
T6 r476same_identifier(T476* C,T0* a1);
T6 r476is_equal(T476* C,T0* a1);
T6 r476se_assigned_from(T0* a1);
T6 r476same_type(T476* C,T0* a1);
void r476make(T476* C,T0* a1,T0* a2);
T6 r476same_feature_name(T476* C,T0* a1);
T6 r476conforms_to(T476* C,T0* a1);
T0* r476twin(T476* C);
T6 r224is_equal(T224* C,T0* a1);
T6 r224se_assigned_from(T0* a1);
void r224make(T224* C,T0* a1);
T6 r224conforms_to(T224* C,T0* a1);
void r224set_current_class(T224* C,T0* a1);
T0* r224twin(T224* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
void r534_176Pmake_from_implementation(T534* C,T0* a1);
void r534make_from_implementation(T534* C,T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T6 r534cursor_off(T534* C,T0* a1);
void r114print_cluster(T114* C,T0* a1,T0* a2);
void r114print_esd_file(T114* C,T0* a1,T0* a2);
T6 r114is_equal(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
void r114print_clusters(T114* C,T0* a1,T0* a2);
T0* r114remove_all_characters(T0* a1,T3 a2);
void r114generate(T114* C,T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T0* r114twin(T114* C);
void r114print_options(T0* a1,T2 a2,T0* a3);
void r114print_indentation(T2 a1,T0* a2);
T0* r512create_representation(T512* C);
T6 r512is_equal(T512* C,T0* a1);
T6 r512se_assigned_from(T0* a1);
T6 r512conforms_to(T512* C,T0* a1);
T0* r512twin(T512* C);
T6 r568is_equal(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
T0* r568Arguments(void);
void r568make(T568* C,T0* a1);
T0* r568message(T568* C,T0* a1);
T6 r568conforms_to(T568* C,T0* a1);
T0* r568twin(T568* C);
T0* r568default_message(T568* C);
T6 r480is_equal(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
void r480make(T480* C,T0* a1,T0* a2);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T0* r181uc_optimize(void);
T0* r181uc_check(void);
T0* r181uc_external(void);
T0* r181uc_exclude(void);
T0* r181new_cluster(T181* C,T0* a1);
T0* r181new_exported_feature(T0* a1);
T6 r181is_equal(T181* C,T0* a1);
T0* r181new_export(T0* a1);
T0* r181uc_invariant(void);
T6 r181se_assigned_from(T0* a1);
T0* r181new_options(T0* a1);
T0* r181new_universe(T181* C,T0* a1);
T6 r181is_false(T0* a1);
T0* r181uc_mount(void);
T0* r181uc_debug(void);
T0* r181uc_option(void);
void r181make(T181* C,T0* a1,T0* a2);
T0* r181uc_root(void);
extern T0*oBC182Execution_environment;
T0* r181uc_feature(void);
T0* r181uc_class(void);
T0* r181uc_loop(void);
T6 r181conforms_to(T181* C,T0* a1);
extern T0*oBC168uc_abstract;
extern int fBC168uc_abstract;
T0* r181uc_abstract(void);
T0* r181new_externals(T0* a1);
extern T0*oBC168uc_alias;
extern int fBC168uc_alias;
T0* r181uc_alias(void);
T0* r181uc_cluster(void);
extern T0*oBC168uc_enable;
extern int fBC168uc_enable;
T0* r181uc_enable(void);
T0* r181uc_export(void);
T0* r181uc_link_library(void);
T6 r181is_true(T0* a1);
T0* r181uc_include_dir(void);
T0* r181uc_location(void);
T0* r181twin(T181* C);
T0* r181new_mount(T181* C,T0* a1);
T0* r181uc_creation(void);
T0* r181uc_require(void);
T0* r181uc_name(void);
T0* r181uc_ensure(void);
T6 r719is_equal(T719* C,T0* a1);
T6 r719se_assigned_from(T0* a1);
void r719make(T719* C,T0* a1,T0* a2);
T6 r719conforms_to(T719* C,T0* a1);
T0* r719twin(T719* C);
void r633copy(T633* C,T0* a1);
void r633make_clashes(T633* C,T2 a1);
void r633search_position(T633* C,T0* a1);
T6 r633is_equal(T633* C,T0* a1);
void r633remove_traversing_cursor(T633* C,T0* a1);
void r633clone_slots(T633* C);
T0* r633item(T633* C,T0* a1);
void r633clone_clashes(T633* C);
void r633move_all_cursors_after(T633* C);
void r633make_items(T633* C,T2 a1);
void r633add_traversing_cursor(T633* C,T0* a1);
T6 r633se_assigned_from(T0* a1);
T0* r633clone(T0* a1);
T6 r633same_type(T633* C,T0* a1);
void r633make(T633* C,T2 a1);
void r633clone_items(T633* C);
T6 r633conforms_to(T633* C,T0* a1);
T6 r633has(T633* C,T0* a1);
void r633make_keys(T633* C,T2 a1);
T2 r633hash_position(T633* C,T0* a1);
void r633clone_keys(T633* C);
void r633make_with_equality_testers(T633* C,T2 a1,T0* a2,T0* a3);
T6 r633cursor_same_position(T0* a1,T0* a2);
T0* r633twin(T633* C);
T0* r633new_cursor(T633* C);
void r633make_slots(T633* C,T2 a1);
T2 r633new_modulus(T2 a1);
T6 r633cursor_off(T0* a1);
T6 r565is_equal(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
T0* r565Arguments(void);
void r565make(T565* C,T0* a1,T0* a2);
T0* r565message(T565* C,T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565twin(T565* C);
T0* r565default_message(T565* C);
void r187copy(T187* C,T0* a1);
T0* r187substring(T187* C,T2 a1,T2 a2);
T2 r187occurrences(T187* C,T515 a1);
T2 r187count(T187* C);
T2 r187item_code(T187* C,T2 a1);
T6 r187is_equal(T187* C,T0* a1);
T515 r187item(T187* C,T2 a1);
extern T0*oBC187utf8utils;
void r187append_uc_string(T187* C,T0* a1);
T6 r187se_assigned_from(T0* a1);
void r187make_from_string(T187* C,T0* a1);
T2 r187index_of(T187* C,T515 a1,T2 a2);
void r187make(T187* C,T2 a1);
void r187append_string(T187* C,T0* a1);
T2 r187hash_code(T187* C);
T6 r187conforms_to(T187* C,T0* a1);
void r187append_ucc_code(T187* C,T2 a1);
T6 r187empty(T187* C);
T0* r187twin(T187* C);
T0* r187to_utf8(T187* C);
T2 r187three_way_comparison(T187* C,T0* a1);
extern T0*oBC187i_settings;
void r187make_from_utf8(T187* C,T0* a1);
T6 r718is_equal(T718* C,T0* a1);
T6 r718se_assigned_from(T0* a1);
void r718make_from_implementation(T718* C,T0* a1);
T6 r718conforms_to(T718* C,T0* a1);
T0* r718twin(T718* C);
void r721set_last_cell(T721* C,T0* a1);
void r721copy(T721* C,T0* a1);
void r721wipe_out(T721* C);
void r721remove_first(T721* C);
T0* r721cursor_item(T0* a1);
T6 r721cursor_is_last(T721* C,T0* a1);
void r721add_attributes(T721* C,T0* a1,T0* a2);
T6 r721is_equal(T721* C,T0* a1);
void r721remove_traversing_cursor(T721* C,T0* a1);
void r721make_root(T721* C,T0* a1,T0* a2);
void r721cursor_go_after(T721* C,T0* a1);
void r721move_all_cursors_after(T721* C);
void r721add_traversing_cursor(T721* C,T0* a1);
T6 r721se_assigned_from(T0* a1);
T6 r721cursor_before(T0* a1);
void r721make_child(T721* C,T0* a1,T0* a2,T0* a3);
T6 r721same_type(T721* C,T0* a1);
void r721remove_last(T721* C);
T6 r721cursor_after(T0* a1);
T6 r721conforms_to(T721* C,T0* a1);
void r721cursor_forth(T721* C,T0* a1);
void r721move_last_cursors_after(T721* C);
void r721cursor_start(T721* C,T0* a1);
T0* r721twin(T721* C);
void r721force_last(T721* C,T0* a1);
T0* r721new_cursor(T721* C);
T6 r721cursor_is_first(T721* C,T0* a1);
void r721remove_at_cursor(T721* C,T0* a1);
void r721put_last(T721* C,T0* a1);
void r721move_all_cursors(T721* C,T0* a1,T0* a2);
T6 r721cursor_off(T0* a1);
T0* r713out(T713* C);
T6 r713is_equal(T713* C,T0* a1);
T6 r713se_assigned_from(T0* a1);
T0* r713clone(T0* a1);
void r713out_in_tagged_out_memory(T713* C);
T6 r713conforms_to(T713* C,T0* a1);
T0* r713twin(T713* C);
void r688fill(T688* C);
void r688compact_left(T688* C);
T2 r688count(T688* C);
void r688set_position(T688* C,T2 a1,T2 a2,T2 a3);
T6 r688is_equal(T688* C,T0* a1);
T2 r688lower(void);
T6 r688se_assigned_from(T0* a1);
void r688make_from_string(T688* C,T0* a1);
T6 r688conforms_to(T688* C,T0* a1);
void r688make_from_buffer(T688* C,T0* a1);
void r688resize(T688* C);
void r688make_with_size(T688* C,T0* a1,T2 a2);
T0* r688twin(T688* C);
void r688set_file(T688* C,T0* a1);
void r688flush(T688* C);
T6 r131is_equal(T131* C,T0* a1);
T6 r131se_assigned_from(T0* a1);
void r131make(T131* C);
void r131old_put_string(T0* a1);
T6 r131conforms_to(T131* C,T0* a1);
void r131put_line(T0* a1);
T0* r131twin(T131* C);
T0* r194full_name(T194* C,T3 a1);
void r194set_mounted_subclusters(T194* C,T0* a1);
T6 r194is_equal(T194* C,T0* a1);
void r194remove_cluster(T194* C,T0* a1);
void r194set_subclusters(T194* C,T0* a1);
T6 r194se_assigned_from(T0* a1);
void r194unmount_root(T194* C,T0* a1);
T0* r194full_pathname(T194* C);
void r194make(T194* C,T0* a1,T0* a2);
void r194mount(T194* C,T0* a1);
T6 r194conforms_to(T194* C,T0* a1);
void r194unmount(T194* C);
T0* r194twin(T194* C);
void r194merge_externals(T194* C,T0* a1);
void r194mount_root(T194* C,T0* a1);
T6 r154is_equal(T154* C,T0* a1);
T6 r154se_assigned_from(T0* a1);
void r154make(T154* C);
void r154old_put_string(T0* a1);
T6 r154conforms_to(T154* C,T0* a1);
void r154put_line(T0* a1);
T0* r154twin(T154* C);
T0* r693out(T693* C);
T6 r693is_equal(T693* C,T0* a1);
T6 r693se_assigned_from(T0* a1);
T0* r693clone(T0* a1);
void r693make(T693* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r693conforms_to(T693* C,T0* a1);
T0* r693twin(T693* C);
T6 r518is_equal(T518* C,T0* a1);
T6 r518se_assigned_from(T0* a1);
void r518make_from_implementation(T518* C,T0* a1);
T6 r518conforms_to(T518* C,T0* a1);
T0* r518twin(T518* C);
T6 r607is_equal(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
void r607make(T607* C,T0* a1,T0* a2);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
void r626_173Pparse_from_stream(T626* C,T0* a1);
T0* r626next_open_composite(T0* a1);
void r626enable_position_table(T626* C);
T6 r626is_equal(T626* C,T0* a1);
void r626on_content(T626* C,T0* a1);
T6 r626se_assigned_from(T0* a1);
void r626on_processing_instruction(T626* C,T0* a1,T0* a2);
void r626on_start_tag(T626* C,T0* a1,T0* a2,T0* a3);
void r626make_from_implementation_event(T626* C,T0* a1);
void r626make_from_implementation(T626* C,T0* a1);
void r626handle_position(T626* C,T0* a1);
void r626on_comment(T626* C,T0* a1);
void r626parse_from_stream(T626* C,T0* a1);
void r626on_end_tag(T626* C,T0* a1,T0* a2);
T6 r626conforms_to(T626* C,T0* a1);
void r626reset(T626* C);
T0* r626twin(T626* C);
T6 r172is_equal(T172* C,T0* a1);
T6 r172se_assigned_from(T0* a1);
void r172make_from_implementation(T172* C,T0* a1);
T6 r172is_correct(T172* C);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172last_error_extended_description(T172* C);
T0* r172twin(T172* C);
T6 r514is_equal(T514* C,T0* a1);
T6 r514se_assigned_from(T0* a1);
void r514make(T514* C);
void r514insert(T514* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r514insert_code(T514* C,T2 a1,T2 a2);
void r514move(T514* C,T2 a1,T2 a2,T2 a3);
T6 r514conforms_to(T514* C,T0* a1);
void r514storage_ensure_capacity(T514* C,T2 a1);
T0* r514twin(T514* C);
void r183_186Pmake_from_implementation(T183* C,T0* a1);
T6 r183is_equal(T183* C,T0* a1);
T6 r183has_attribute_by_name(T183* C,T0* a1);
T6 r183se_assigned_from(T0* a1);
T0* r183attribute_by_name(T183* C,T0* a1);
void r183make_from_implementation(T183* C,T0* a1);
T6 r183equal(T0* a1,T0* a2);
T6 r183conforms_to(T183* C,T0* a1);
void r183_176P_186Pmake_from_implementation(T183* C,T0* a1);
T0* r183twin(T183* C);
T6 r183has_element_by_name(T183* C,T0* a1);
T0* r183element_by_name(T183* C,T0* a1);
T6 r183cursor_off(T183* C,T0* a1);
void r684yy_do_action(T684* C,T2 a1);
extern T0*oBC685yytable_template;
extern int fBC685yytable_template;
T0* r684yytable_template(void);
T0* r684empty_ucstring(void);
void r684make_parser_skeleton(T684* C);
T2 r684yy_at_beginning_of_line(T684* C);
void r684fatal_error(T0* a1);
T0* r684yytype1(T0* a1);
T0* r684yytype2(T0* a1);
T0* r684yytype3(T0* a1);
T0* r684yytype4(T0* a1);
void r684handle_found_text(T684* C);
void r684parse(T684* C);
void r684set_input_buffer(T684* C,T0* a1);
T2 r684yy_translate(T684* C,T2 a1);
extern T0*oBC686yy_ec_template;
extern int fBC686yy_ec_template;
T0* r684yy_ec_template(void);
void r684yy_execute_action(T684* C,T2 a1);
extern T0*oBC685yytranslate_template;
extern int fBC685yytranslate_template;
T0* r684yytranslate_template(void);
void r684clear_stacks(T684* C);
extern T0*oBC686yy_def_template;
extern int fBC686yy_def_template;
T0* r684yy_def_template(void);
T3 r684text_item(T684* C,T2 a1);
void r684yy_load_input_buffer(T684* C);
extern T515 oBC685uc_collon;
extern int fBC685uc_collon;
T515 r684uc_collon(void);
extern T0*oBC685yyr1_template;
extern int fBC685yyr1_template;
T0* r684yyr1_template(void);
void r684make_with_buffer(T684* C,T0* a1);
T2 r684yy_null_trans_state(T684* C,T2 a1);
T0* r684position(T684* C);
extern T0*oBC686yy_accept_template;
extern int fBC686yy_accept_template;
T0* r684yy_accept_template(void);
void r684read_token(T684* C);
extern T0*oBC685yyr2_template;
extern int fBC685yyr2_template;
T0* r684yyr2_template(void);
T2 r684yy_previous_state(T684* C);
extern T0*oBC685yypgoto_template;
extern int fBC685yypgoto_template;
T0* r684yypgoto_template(void);
void r684yy_refill_input_buffer(T684* C);
T0* r684yy_fixed_array(T0* a1);
T6 r684conforms_to(T684* C,T0* a1);
extern T0*oBC686yy_meta_template;
extern int fBC686yy_meta_template;
T0* r684yy_meta_template(void);
extern T0*oBC686yy_base_template;
extern int fBC686yy_base_template;
T0* r684yy_base_template(void);
T0* r684twin(T684* C);
T0* r684clone(T0* a1);
T0* r684new_file_buffer(T0* a1);
void r684yy_initialize(T684* C);
void r684reset(T684* C);
T0* r684text(T684* C);
extern T0*oBC686yy_nxt_template;
extern int fBC686yy_nxt_template;
T0* r684yy_nxt_template(void);
void r684parse_from_stream(T684* C,T0* a1);
void r684yy_set_line_column(T684* C);
void r684yy_build_parser_tables(T684* C);
T0* r684split_name_and_prefix(T0* a1);
T6 r684is_equal(T684* C,T0* a1);
void r684report_error(T684* C,T0* a1);
extern T0*oBC685yydefact_template;
extern int fBC685yydefact_template;
T0* r684yydefact_template(void);
extern T0*oBC686yy_chk_template;
extern int fBC686yy_chk_template;
T0* r684yy_chk_template(void);
extern T0*oBC685yycheck_template;
extern int fBC685yycheck_template;
T0* r684yycheck_template(void);
void r684make(T684* C);
T0* r684yyfixed_array(T0* a1);
void r684yy_clear_all(T684* C);
extern T0*oBC685yydefgoto_template;
extern int fBC685yydefgoto_template;
T0* r684yydefgoto_template(void);
void r684yy_set_content(T684* C,T0* a1);
extern T0*oBC685yypact_template;
extern int fBC685yypact_template;
T0* r684yypact_template(void);
void r684set_start_condition(T684* C,T2 a1);
T6 r684se_assigned_from(T0* a1);
void r684yy_build_tables(T684* C);
T6 r64is_equal(T64* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r64command_arguments(void);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T0* r64argument(T2 a1);
T6 r623is_equal(T623* C,T0* a1);
T6 r623se_assigned_from(T0* a1);
void r623make(T623* C);
T6 r623conforms_to(T623* C,T0* a1);
T0* r623twin(T623* C);
void r31report_missing_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
void r31report_no_parser_available_error(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31report_missing_attribute_error(T31* C,T0* a1,T0* a2,T0* a3);
void r31report_cannot_write_file_error(T31* C,T0* a1);
void r31make(T31* C);
void r31report_cannot_read_file_error(T31* C,T0* a1);
void r31report_parser_error(T31* C,T0* a1);
T0* r31message(T0* a1);
void r31report_invalid_expression_error(T31* C,T0* a1,T0* a2);
void r31_32Preport_error(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31report_not_xace_file_error(T31* C,T0* a1);
void r31report_wrong_root_element_error(T31* C,T0* a1,T0* a2);
void r31report_unknown_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T0* r31twin(T31* C);
void r31report_error(T31* C,T0* a1);
T0* r190split_on_first(T0* a1,T3 a2);
T6 r190is_equal(T190* C,T0* a1);
void r190remove_cluster(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
T0* r190clone(T0* a1);
void r190make_empty(T190* C);
void r190make(T190* C,T0* a1);
void r190set_parent(T190* C,T0* a1);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190twin(T190* C);
T0* r190split_string(T0* a1,T3 a2);
void r190merge_externals(T190* C,T0* a1);
extern T0*oBC130error;
extern int fBC130error;
T0* r130error(void);
T6 r130is_equal(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
extern T0*oBC130input;
extern int fBC130input;
T0* r130input(void);
extern T0*oBC130output;
extern int fBC130output;
T0* r130output(void);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130twin(T130* C);
void r40raise(T40* C,T0* a1);
T6 r40is_equal(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
extern T0*oBC41developer_exception_name_memory;
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T6 r36_px_60(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T6 r542is_equal(T542* C,T0* a1);
T6 r542se_assigned_from(T0* a1);
T6 r542conforms_to(T542* C,T0* a1);
T3 r542to_character(T2 a1);
T0* r542twin(T542* C);
extern T0*oBC510factory;
extern int fBC510factory;
T0* r510factory(void);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
T6 r510conforms_to(T510* C,T0* a1);
T0* r510twin(T510* C);
T6 r35is_equal(T35* C,T0* a1);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T6 r664is_equal(T664* C,T0* a1);
T6 r664se_assigned_from(T0* a1);
T6 r664conforms_to(T664* C,T0* a1);
T0* r664twin(T664* C);
T0* r169name(T0* a1);
T6 r169is_equal(T169* C,T0* a1);
T0* r169make_file_open_read(T0* a1);
T6 r169se_assigned_from(T0* a1);
T6 r169is_open_read(T0* a1);
void r169close(T0* a1);
T6 r169conforms_to(T169* C,T0* a1);
T6 r169end_of_input(T0* a1);
T2 r169read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r169twin(T169* C);
void r16process_system_file(T16* C,T0* a1);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
void r16process_build(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r83is_equal(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
T6 r83is_integer(T0* a1);
T6 r83same_case_insensitive(T0* a1,T0* a2);
T0* r83make(T2 a1);
T6 r83conforms_to(T83* C,T0* a1);
T2 r83case_insensitive_hash_code(T0* a1);
T0* r83twin(T83* C);
T6 r515_px_60(T515* C,T515 a1);
T6 r515_px_62(T515* C,T515 a1);
T6 r569is_equal(T569* C,T0* a1);
T0* r569variable_value(T0* a1);
T6 r569se_assigned_from(T0* a1);
T0* r569get_environment_variable(T0* a1);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569interpreted_string(T0* a1);
T0* r569twin(T569* C);
T2 r538nr_of_following_octets(T3 a1);
T6 r538is_equal(T538* C,T0* a1);
T6 r538se_assigned_from(T0* a1);
void r538read_code(T538* C,T0* a1,T2 a2);
void r538put_code(T2 a1,T0* a2,T2 a3);
void r538read_following_octet(T538* C,T0* a1);
T6 r538conforms_to(T538* C,T0* a1);
T3 r538code_to_character(T2 a1);
T2 r538octet_size(T2 a1);
T0* r538twin(T538* C);
extern T0*oBC538specific;
T6 r538is_leading_octet(T3 a1);
T2 r538read_leading_octet(T538* C,T0* a1,T2 a2);
T6 r662is_equal(T662* C,T0* a1);
T6 r662se_assigned_from(T0* a1);
T0* r662new_event_parser_imp(void);
T6 r662conforms_to(T662* C,T0* a1);
T0* r662twin(T662* C);
T6 r74is_equal(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
T6 r74_px_60(T74* C,T0* a1);
T0* r74twin(T74* C);
T0* r471substring(T0* a1,T2 a2,T2 a3);
T6 r471is_equal(T471* C,T0* a1);
T6 r471se_assigned_from(T0* a1);
void r471move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r471make(T2 a1);
void r471copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r471conforms_to(T471* C,T0* a1);
T0* r471resize(T0* a1,T2 a2);
T2 r471copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r471twin(T471* C);
T6 r730is_equal(T730* C,T0* a1);
T515 r730item(T730* C);
T6 r730se_assigned_from(T0* a1);
T6 r730conforms_to(T730* C,T0* a1);
T0* r730twin(T730* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 731
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms116_2058319081;
extern T7*ms113_3175a;
extern T7*ms115_452889;
extern T7*ms459_1539961075;
extern T7*ms89_1957581;
extern T7*ms16_16036;
extern T7*ms116_848471798;
extern T7*ms116_145423907a;
extern T7*ms668_10;
extern T7*ms115_2122613;
extern T7*ms89_431271;
extern T7*ms131_10;
extern T7*ms113_2122613;
extern T7*ms168_1289562514;
extern T7*ms113_2071896;
extern T7*ms114_171550;
extern T7*ms168_10866961;
extern T7*ms116_1147;
extern T7*ms115_2259966;
extern T7*ms115_3175a;
extern T7*ms113_2259966;
extern T7*ms168_9909665;
extern T7*ms563_1179444653;
extern T7*ms114_3175;
extern T7*ms168_16821;
extern T7*ms168_16942;
extern T7*ms116_232a;
extern T7*ms115_1957581;
extern T7*ms168_1228681540;
extern T7*ms168_17696;
extern T7*ms113_1957581;
extern T7*ms16_403021;
extern T7*ms115_1254606809a;
extern T7*ms16_676;
extern T7*ms16_691;
extern T7*ms168_51843716;
extern T7*ms115_1978068077;
extern T7*ms116_1147aa;
extern T7*ms116_1366569951;
extern T7*ms16_3301a;
extern T7*ms16_16036a;
extern T7*ms116_848471798a;
extern T7*ms685_38;
extern T7*ms116_711181240;
extern T7*ms685_60;
extern T7*ms685_62;
extern T7*ms541_36;
extern T7*ms113_3175aa;
extern T7*ms116_1147aaaaa;
extern T7*ms115_326648287;
extern T7*ms116_1131165100;
extern T7*ms115_2087910503;
extern T7*ms114_1254555893;
extern T7*ms168_2185421;
extern T7*ms116_1637983727;
extern T7*ms113_1300398076;
extern T7*ms116_11272528;
extern T7*ms165_1384826;
extern T7*ms115_1849679439;
extern T7*ms564_454072470;
extern T7*ms89_1940534;
extern T7*ms165_2104;
extern T7*ms115_49483191;
extern T7*ms89_452889;
extern T7*ms560_54177410;
extern T7*ms168_2032026;
extern T7*ms16_881365921a;
extern T7*ms116_1250879089;
extern T7*ms89_659330894;
extern T7*ms154_10;
extern T7*ms89_9702826;
extern T7*ms567_1214914019;
extern T7*ms89_1300398076;
extern T7*ms116_151663112;
extern T7*ms689_89510;
extern T7*ms114_1555371030;
extern T7*ms168_399591;
extern T7*ms89_9702034;
extern T7*ms16_0;
extern T7*ms115_1433293834;
extern T7*ms18_0;
extern T7*ms181_79251;
extern T7*ms168_452889;
extern T7*ms165_12184;
extern T7*ms113_659330894;
extern T7*ms113_2120668389;
extern T7*ms116_1122793821;
extern T7*ms116_29282762;
extern T7*ms116_145423907;
extern T7*ms89_696515478;
extern T7*ms16_2246326;
extern T7*ms116_1147a;
extern T7*ms113_452889;
extern T7*ms116_1746542221;
extern T7*ms19_270;
extern T7*ms115_408086;
extern T7*ms168_451090;
extern T7*ms114_9751715;
extern T7*ms116_1580634761;
extern T7*ms89_1366344811;
extern T7*ms89_1837939351;
extern T7*ms116_6860887;
extern T7*ms168_10208843;
extern T7*ms114_17696;
extern T7*ms116_1147aaaa;
extern T7*ms114_1173002866;
extern T7*ms568_988446515;
extern T7*ms694_899222;
extern T7*ms622_462378139;
extern T7*ms116_168231777;
extern T7*ms114_1975394;
extern T7*ms115_1254606809;
extern T7*ms89_1288001260;
extern T7*ms168_2024949725;
extern T7*ms16_881365921aa;
extern T7*ms565_820451542;
extern T7*ms116_17715339;
extern T7*ms168_10559665;
extern T7*ms89_710556862;
extern T7*ms113_200;
extern T7*ms173_40;
extern T7*ms173_41;
extern T7*ms113_214;
extern T7*ms113_229;
extern T7*ms114_1420513890;
extern T7*ms566_229;
extern T7*ms116_1592316470;
extern T7*ms16_391651;
extern T7*ms89_10049231;
extern T7*ms89_1205954912;
extern T7*ms168_434665;
extern T7*ms666_512683247;
extern T7*ms114_48758637;
extern T7*ms116_1147aaa;
extern T7*ms113_10208843;
extern T7*ms113_710556862;
extern T7*ms116_2036724355;
extern T7*ms116_1694763045;
extern T7*ms89_1254606809;
extern T7*ms113_1644;
extern T7*ms89_15934;
extern T7*ms168_627;
extern T7*ms114_1566359773;
extern T7*ms113_214a;
extern T7*ms116_232aa;
extern T7*ms113_229a;
extern T7*ms115_1644;
extern T7*ms116_144147230;
extern T7*ms113_3175;
extern T7*ms115_214a;
extern T7*ms116_1284536290;
extern T7*ms116_68075515;
extern T7*ms16_1635366369;
extern T7*ms113_1957581a;
extern T7*ms115_229a;
extern T7*ms89_17696;
extern T7*ms115_3175;
extern T7*ms114_194;
extern T7*ms114_1159034081;
extern T7*ms115_10208843;
extern T7*ms114_945472392;
extern T7*ms16_3301;
extern T7*ms169_1338085634;
extern T7*ms16_11153106;
extern T7*ms168_9558536;
extern T7*ms168_1988096;
extern T7*ms16_3653;
extern T7*ms679_1606053737;
extern T7*ms114_251473637;
extern T7*ms115_1957581a;
extern T7*ms113_1978068077;
extern T7*ms115_659330894;
extern T7*ms165_0;
extern T7*ms116_33314532;
extern T7*ms89_93956277;
extern T7*ms29_1415324896;
extern T7*ms16_881365921aaa;
extern T7*ms116_339006862;
extern T7*ms169_0;
extern T7*ms154_447584;
extern T7*ms16_79140;
extern T7*ms114_273179090;
extern T7*ms114_452889;
extern T7*ms113_169452;
extern T7*ms115_214;
extern T7*ms115_229;
extern T7*ms115_1300398076;
extern T7*ms168_77350;
extern T7*ms113_1254606809a;
extern T7*ms16_676a;
extern T7*ms168_78002;
extern T7*ms114_50294715;
extern T7*ms113_2087910503;
extern T7*ms16_691a;
extern T7*ms168_78263;
extern T7*ms181_18036;
extern T7*ms114_1090800287;
extern T7*ms115_10031271;
extern T7*ms168_78490;
extern T7*ms694_35397;
extern T7*ms114_9909665;
extern T7*ms116_2074569081;
extern T7*ms116_716962150;
extern T7*ms694_36572;
extern T7*ms89_1849679439;
extern T7*ms89_2087913448;
extern T7*ms114_2029061136;
extern T7*ms116_90563609;
extern T7*ms116_728778652;
extern T7*ms113_1849679439;
extern T7*ms538_1684857857;
extern T7*ms168_85591;
extern T7*ms116_902203551;
extern T7*ms116_2058319081a;
extern T7*ms168_408086;
extern T7*ms168_1975394;
extern T7*ms131_447851;
extern T7*ms116_232;
extern T7*ms460_1338477769;
extern T7*ms113_2116863196;
extern T7*ms113_408086;
extern T7*ms116_29373882;
extern T7*ms86_1515383187;
extern T7*ms89_2087910503;
extern T7*ms114_1254555893a;
extern T7*ms116_2057213670;
extern T7*ms115_710556862;
extern T7*ms114_440825;
extern T7*ms538_336971577;
extern T7*ms114_1253824715;
extern T7*ms18_0a;
extern T7*ms686_1173251759;
extern T7*ms115_2120668389;
extern T7*ms89_1975394;
extern T7*ms114_1365895512;
extern T7*ms89_1957581a;
extern T7*ms116_688131499;
extern T7*ms16_881365921;
extern T7*ms114_434665;
extern T7*ms113_1644a;
extern T7*ms460_1338477769a;
extern T7*ms89_1885954800;
extern T7*ms116_214679746;
extern T7*ms168_402346;
extern T7*ms89_1644;
extern T7*ms113_17696;
extern T7*ms89_10208843;
extern T7*ms116_1943945795;
extern T7*ms89_3175;
extern T7*ms114_608082268a;
extern T7*ms115_15934;
extern T7*ms115_1975394;
extern T7*ms116_759686277;
extern T7*ms115_1644a;
extern T7*ms113_1975394;
extern T7*ms456_195717202;
extern T7*ms116_1840815548;
extern T7*ms89_211;
extern T7*ms458_0;
extern T7*ms89_322;
extern T7*ms694_5467;
extern T7*ms114_2002089708;
extern T7*ms114_608082268;
extern T7*ms89_298;
extern T7*ms685_38a;
extern T7*ms541_125;
extern T7*ms113_1254606809;
extern T7*ms685_60a;
extern T7*ms541_303;
extern T7*ms685_62a;
extern T7*ms115_17696;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma464(int argc,...);
T0* X661new_event_parser_imp(T0*C);
void X82put_character(T0*C,T3 a1);
void X82put_string(T0*C,T0* a1);
void X29execute(T0*C);
T0* X142item(T0*C);
T6 X142after(T0*C);
void X142forth(T0*C);
void X142start(T0*C);
T2 X143count(T0*C);
T0* X143cursor_item(T0*C,T0* a1);
T6 X143is_empty(T0*C);
T6 X143cursor_after(T0*C,T0* a1);
void X143cursor_forth(T0*C,T0* a1);
void X143cursor_start(T0*C,T0* a1);
T0* X143new_cursor(T0*C);
T0* X504cursor_item(T0*C,T0* a1);
void X504cursor_go_after(T0*C,T0* a1);
T6 X504cursor_after(T0*C,T0* a1);
void X504cursor_forth(T0*C,T0* a1);
void X504cursor_start(T0*C,T0* a1);
T6 X504cursor_off(T0*C,T0* a1);
T515 X516item(T0*C);
T0* X505parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X185parent(T0*C);
T6 X253test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X466clear_all(T0*C,T0* a1);
T0* X466make(T0*C,T2 a1);
T0* X466resize(T0*C,T0* a1,T2 a2);
void X134put_new_line(T0*C);
void X134put_line(T0*C,T0* a1);
void X134put_character(T0*C,T3 a1);
void X134put_string(T0*C,T0* a1);
void X186force_last(T0*C,T0* a1);
T0* X186new_cursor(T0*C);
void X186remove_at_cursor(T0*C,T0* a1);
T0* X186parent(T0*C);
void X250put(T0*C,T0* a1,T2 a2);
T0* X250item(T0*C,T2 a1);
void X250set_all_with(T0*C,T0* a1);
void X250resize(T0*C,T2 a1);
void X470fill(T0*C);
T0* X507new_cursor(T0*C);
void X507remove_at_cursor(T0*C,T0* a1);
void X507put_last(T0*C,T0* a1);
T0* X507parent(T0*C);
void X41raise(T0*C,T0* a1);
T2 X462count(T0*C);
T2 X462item(T0*C,T2 a1);
T2 X462lower(T0*C);
T0* X272make(T0*C,T2 a1);
T0* X272resize(T0*C,T0* a1,T2 a2);
void X167parse_file(T0*C,T0* a1);
void X465put(T0*C,T0* a1,T2 a2);
T0* X465item(T0*C,T2 a1);
void X465set_all_with(T0*C,T0* a1);
void X465resize(T0*C,T2 a1);
T6 X656cursor_is_last(T0*C,T0* a1);
void X656remove_traversing_cursor(T0*C,T0* a1);
void X656cursor_go_after(T0*C,T0* a1);
void X656add_traversing_cursor(T0*C,T0* a1);
void X656cursor_forth(T0*C,T0* a1);
void X656cursor_start(T0*C,T0* a1);
T6 X656cursor_is_first(T0*C,T0* a1);
T2 X509item_code(T0*C,T2 a1);
void X509insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X509insert_code(T0*C,T2 a1,T2 a2);
T6 X163is_connected(T0*C);
void X163read_character(T0*C);
T6 X163end_of_input(T0*C);
T3 X163last_character(T0*C);
T0* X79default_message(T0*C);
void X77generate(T0*C,T0* a1);
T6 T35toT6(T0* source);
T0* T665toT664(int source);
T0* T663toT662(int source);
T0* T2toT36(T2 source);
T2 T36toT2(T0* source);
T0* T6toT35(T6 source);

#ifdef __cplusplus
}
#endif
