#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S283 T283;
typedef struct S743 T743;
typedef struct S762 T762;
typedef struct S497 T497;
typedef struct S468 T468;
typedef struct S582 T582;
typedef struct S457 T457;
typedef struct S590 T590;
typedef struct S652 T652;
typedef struct S102 T102;
typedef struct S154 T154;
typedef struct S654 T654;
typedef struct S229 T229;
typedef struct S562 T562;
typedef struct S571 T571;
typedef struct S593 T593;
typedef struct S618 T618;
typedef struct S396 T396;
typedef struct S601 T601;
typedef struct S559 T559;
typedef struct S237 T237;
typedef struct S176 T176;
typedef struct S692 T692;
typedef struct S366 T366;
typedef struct S197 T197;
typedef struct S215 T215;
typedef int T699;
typedef struct S202 T202;
typedef struct S135 T135;
typedef struct S488 T488;
typedef struct S201 T201;
typedef struct S213 T213;
typedef struct S207 T207;
typedef struct S502 T502;
typedef struct S630 T630;
typedef struct S637 T637;
typedef struct S41 T41;
typedef struct S633 T633;
typedef struct S490 T490;
typedef struct S325 T325;
typedef struct S42 T42;
typedef struct S563 T563;
typedef struct S258 T258;
typedef struct S379 T379;
typedef struct S570 T570;
typedef struct S122 T122;
typedef struct S286 T286;
typedef struct S177 T177;
typedef struct S89 T89;
typedef struct S730 T730;
typedef struct S131 T131;
typedef struct S165 T165;
typedef struct S723 T723;
typedef struct S597 T597;
typedef struct S37 T37;
typedef struct S496 T496;
typedef struct S397 T397;
typedef struct S444 T444;
typedef struct S321 T321;
typedef struct S141 T141;
typedef struct S746 T746;
typedef struct S452 T452;
typedef struct S616 T616;
typedef struct S596 T596;
typedef struct S649 T649;
typedef struct S172 T172;
typedef struct S760 T760;
typedef struct S592 T592;
typedef struct S580 T580;
typedef struct S31 T31;
typedef struct S702 T702;
typedef struct S209 T209;
typedef struct S351 T351;
typedef struct S523 T523;
typedef struct S414 T414;
typedef struct S636 T636;
typedef struct S206 T206;
typedef struct S128 T128;
typedef struct S428 T428;
typedef struct S671 T671;
typedef struct S568 T568;
typedef struct S288 T288;
typedef struct S540 T540;
typedef struct S210 T210;
typedef struct S534 T534;
typedef struct S759 T759;
typedef struct S660 T660;
typedef struct S105 T105;
typedef struct S198 T198;
typedef struct S134 T134;
typedef struct S751 T751;
typedef struct S101 T101;
typedef struct S731 T731;
typedef struct S305 T305;
typedef struct S104 T104;
typedef struct S232 T232;
typedef struct S753 T753;
typedef struct S203 T203;
typedef struct S157 T157;
typedef struct S566 T566;
typedef struct S679 T679;
typedef struct S713 T713;
typedef struct S36 T36;
typedef struct S423 T423;
typedef struct S380 T380;
typedef struct S500 T500;
typedef struct S307 T307;
typedef struct S507 T507;
typedef struct S424 T424;
typedef struct S152 T152;
typedef struct S73 T73;
typedef struct S133 T133;
typedef struct S65 T65;
typedef struct S471 T471;
typedef struct S180 T180;
typedef struct S605 T605;
typedef struct S7 T7;
typedef struct S241 T241;
typedef struct S586 T586;
typedef struct S174 T174;
typedef struct S189 T189;
typedef struct S370 T370;
typedef struct S439 T439;
typedef struct S510 T510;
typedef struct S130 T130;
typedef struct S301 T301;
typedef struct S324 T324;
typedef struct S589 T589;
typedef struct S698 T698;
typedef struct S700 T700;
typedef struct S567 T567;
typedef struct S332 T332;
typedef struct S254 T254;
typedef struct S716 T716;
typedef struct S268 T268;
typedef struct S443 T443;
typedef struct S494 T494;
typedef struct S683 T683;
typedef struct S179 T179;
typedef struct S450 T450;
typedef struct S279 T279;
typedef struct S16 T16;
typedef struct S537 T537;
typedef struct S519 T519;
typedef struct S236 T236;
typedef struct S560 T560;
typedef struct S129 T129;
typedef struct S729 T729;
typedef struct S98 T98;
typedef struct S714 T714;
typedef struct S536 T536;
typedef struct S196 T196;
typedef struct S515 T515;
typedef struct S594 T594;
typedef struct S504 T504;
typedef struct S199 T199;
typedef struct S369 T369;
typedef struct S755 T755;
typedef struct S190 T190;
typedef struct S240 T240;
typedef struct S665 T665;
typedef struct S591 T591;
typedef struct S118 T118;
typedef struct S453 T453;
typedef struct S539 T539;
typedef struct S115 T115;
typedef struct S77 T77;
typedef struct S595 T595;
typedef struct S754 T754;
typedef struct S564 T564;
typedef struct S757 T757;
typedef struct S749 T749;
typedef struct S142 T142;
typedef struct S722 T722;
typedef struct S136 T136;
typedef struct S696 T696;
typedef struct S158 T158;
typedef struct S727 T727;
typedef struct S542 T542;
typedef struct S635 T635;
typedef struct S124 T124;
typedef struct S100 T100;
typedef struct S489 T489;
typedef struct S682 T682;
typedef struct S656 T656;
typedef struct S181 T181;
typedef struct S538 T538;
typedef struct S192 T192;
typedef struct S76 T76;
typedef struct S619 T619;
typedef struct S718 T718;
typedef struct S84 T84;
typedef struct S127 T127;
typedef struct S262 T262;
typedef struct S392 T392;
typedef struct S495 T495;
typedef struct S289 T289;
typedef struct S766 T766;
typedef struct S512 T512;
typedef int T697;
typedef struct S265 T265;
typedef struct S421 T421;
typedef struct S252 T252;
typedef struct S557 T557;
typedef struct S554 T554;
typedef struct S66 T66;
typedef struct S400 T400;
typedef struct S653 T653;
typedef struct S32 T32;
typedef struct S411 T411;
typedef struct S61 T61;
typedef struct S353 T353;

/*C Header Pass 2 :*/
typedef T0**T456;
typedef T0**T327;
typedef T6*T603;
typedef T0**T264;
typedef T0**T212;
typedef T0**T427;
typedef T0**T217;
typedef T0**T514;
typedef T0**T75;
typedef T3*T9;
typedef T0**T686;
typedef T0**T285;
typedef T0**T399;
typedef T0**T372;
typedef T0**T260;
typedef T2*T120;
typedef T0**T493;

/*C Header Pass 3 :*/
extern T699 M699;
struct S539{T2 _i_code;};
int se_cmpT539(T539 o1,T539 o2);
extern T697 M697;

/*C Header Pass 4 :*/
struct S283{Tid id;T285 _storage;T2 _capacity;T2 _upper;};
extern T283 M283;
struct S743{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T743 M743;
struct S762{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T762 M762;
struct S497{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T497 M497;
struct S468{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T468 M468;
struct S582{Tid id;T0* _item;T0* _right;};
extern T582 M582;
struct S457{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T457 M457;
struct S590{Tid id;T0* _parameters;};
extern T590 M590;
struct S652{Tid id;T0* _parameters;};
extern T652 M652;
struct S102{Tid id;T0* _item;T0* _right;};
extern T102 M102;
struct S154{Tid id;T0* _item;T0* _right;};
extern T154 M154;
struct S654{Tid id;T0* _event_parser_factory;};
extern T654 M654;
struct S229{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T229 M229;
struct S562{Tid id;T0* _variables;T0* _error_handler;};
extern T562 M562;
struct S571{Tid id;T0* _first;T0* _second;};
extern T571 M571;
struct S593{Tid id;T0* _parameters;};
extern T593 M593;
struct S618{Tid id;T0* _class_name;T0* _features;};
extern T618 M618;
struct S396{Tid id;T399 _storage;T2 _capacity;T2 _upper;};
extern T396 M396;
struct S601{Tid id;T603 _storage;T2 _capacity;T2 _upper;};
extern T601 M601;
struct S559{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T559 M559;
struct S176{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T176 M176;
struct S692{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T692 M692;
struct S366{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T366 M366;
struct S197{Tid id;T0* _clusters;};
extern T197 M197;
struct S215{Tid id;T217 _storage;T2 _capacity;T2 _upper;};
extern T215 M215;
struct S202{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T202 M202;
struct S135{Tid id;};
extern T135 M135;
struct S237{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T237 M237;
struct S488{Tid id;T120 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T488 M488;
struct S201{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T201 M201;
struct S213{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T213 M213;
struct S207{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T207 M207;
struct S502{Tid id;T0* _parents;};
extern T502 M502;
struct S630{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T630 M630;
struct S637{Tid id;T0* _item;T0* _right;};
extern T637 M637;
struct S41{Tid id;};
extern T41 M41;
struct S633{Tid id;T0* _item;T0* _right;};
extern T633 M633;
struct S490{Tid id;};
extern T490 M490;
struct S325{Tid id;};
extern T325 M325;
struct S42{Tid id;};
extern T42 M42;
struct S563{Tid id;T0* _table;};
extern T563 M563;
struct S258{Tid id;T260 _storage;T2 _capacity;T2 _upper;};
extern T258 M258;
struct S379{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T379 M379;
struct S570{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T570 M570;
struct S122{Tid id;};
extern T122 M122;
struct S286{Tid id;};
extern T286 M286;
struct S177{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T177 M177;
struct S89{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T89 M89;
struct S730{Tid id;T0* _first;T0* _second;};
extern T730 M730;
struct S131{Tid id;T0* _output_filename;T0* _error_handler;};
extern T131 M131;
struct S165{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T165 M165;
struct S723{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T6 _end_of_file;};
extern T723 M723;
struct S597{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T597 M597;
struct S37{Tid id;T2 _item;};
extern T37 M37;
struct S496{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T496 M496;
struct S397{Tid id;};
extern T397 M397;
struct S444{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T444 M444;
struct S321{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T321 M321;
struct S141{Tid id;T0* _first;T0* _second;};
extern T141 M141;
struct S746{Tid id;T0* _item;T0* _right;};
extern T746 M746;
struct S452{Tid id;T456 _storage;T2 _capacity;T2 _upper;};
extern T452 M452;
struct S616{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T616 M616;
struct S596{Tid id;T3 _value;};
extern T596 M596;
struct S649{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T649 M649;
struct S172{Tid id;T8 _item;};
extern T172 M172;
struct S760{Tid id;T0* _parent;T0* _data;};
extern T760 M760;
struct S592{Tid id;T0* _parameters;};
extern T592 M592;
struct S580{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T580 M580;
struct S31{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T31 M31;
struct S702{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T702 M702;
struct S209{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T209 M209;
struct S351{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T351 M351;
struct S523{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T523 M523;
struct S414{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T414 M414;
struct S636{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T636 M636;
struct S206{Tid id;};
extern T206 M206;
struct S128{Tid id;T0* _output_filename;T0* _error_handler;};
extern T128 M128;
struct S428{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T428 M428;
struct S671{Tid id;};
extern T671 M671;
struct S568{Tid id;};
extern T568 M568;
struct S288{Tid id;};
extern T288 M288;
struct S540{Tid id;T2 _i_code;};
extern T540 M540;
struct S210{Tid id;T212 _storage;T2 _capacity;T2 _upper;};
extern T210 M210;
struct S534{Tid id;};
extern T534 M534;
struct S759{Tid id;T0* _implementation;};
extern T759 M759;
struct S660{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T660 M660;
struct S105{Tid id;T0* _defined_values;};
extern T105 M105;
struct S134{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T134 M134;
struct S751{Tid id;T0* _parent;T0* _content;};
extern T751 M751;
struct S101{Tid id;T0* _parameters;};
extern T101 M101;
struct S731{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T731 M731;
struct S305{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T305 M305;
struct S104{Tid id;T0* _output_filename;T0* _error_handler;};
extern T104 M104;
struct S232{Tid id;};
extern T232 M232;
struct S753{Tid id;T0* _implementation;};
extern T753 M753;
struct S157{Tid id;T0* _name;};
extern T157 M157;
struct S566{Tid id;T0* _item;};
extern T566 M566;
struct S679{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T679 M679;
struct S713{Tid id;T0* _parameters;};
extern T713 M713;
struct S36{Tid id;T6 _item;};
extern T36 M36;
struct S423{Tid id;T427 _storage;T2 _capacity;T2 _upper;};
extern T423 M423;
struct S380{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T380 M380;
struct S307{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T307 M307;
struct S507{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T507 M507;
struct S424{Tid id;};
extern T424 M424;
struct S152{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T152 M152;
struct S73{Tid id;T75 _storage;T2 _capacity;T2 _upper;};
extern T73 M73;
struct S133{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T133 M133;
struct S198{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T198 M198;
struct S65{Tid id;T0* _item;T0* _right;};
extern T65 M65;
struct S471{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T471 M471;
struct S180{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T180 M180;
struct S605{Tid id;};
extern T605 M605;
struct S241{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T241 M241;
struct S586{Tid id;T0* _parameters;};
extern T586 M586;
struct S174{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T174 M174;
struct S189{Tid id;T0* _error_handler;T6 _has_error;};
extern T189 M189;
struct S370{Tid id;};
extern T370 M370;
struct S439{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T439 M439;
struct S510{Tid id;};
extern T510 M510;
struct S130{Tid id;T0* _output_filename;T0* _error_handler;};
extern T130 M130;
struct S301{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T301 M301;
struct S324{Tid id;T327 _storage;T2 _capacity;T2 _upper;};
extern T324 M324;
struct S589{Tid id;T0* _parameters;};
extern T589 M589;
struct S698{Tid id;};
extern T698 M698;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S700{Tid id;T0* _parameters;};
extern T700 M700;
struct S567{Tid id;};
extern T567 M567;
struct S332{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T332 M332;
struct S254{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T254 M254;
struct S716{Tid id;T0* _item;T0* _right;};
extern T716 M716;
struct S268{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T268 M268;
struct S443{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T443 M443;
struct S494{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T494 M494;
struct S683{Tid id;};
extern T683 M683;
struct S179{Tid id;};
extern T179 M179;
struct S450{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T450 M450;
struct S279{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T279 M279;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S537{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T537 M537;
struct S500{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T500 M500;
struct S519{Tid id;};
extern T519 M519;
struct S236{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T236 M236;
struct S560{Tid id;T0* _namespaces;T0* _implementation;};
extern T560 M560;
struct S129{Tid id;T0* _output_filename;T0* _error_handler;};
extern T129 M129;
struct S729{Tid id;T0* _first;T0* _second;};
extern T729 M729;
struct S98{Tid id;};
extern T98 M98;
struct S714{Tid id;T0* _item;T0* _right;};
extern T714 M714;
struct S536{Tid id;T2 _type;};
extern T536 M536;
struct S515{Tid id;};
extern T515 M515;
struct S594{Tid id;T0* _parameters;};
extern T594 M594;
struct S504{Tid id;T0* _class_name;T0* _base_class;};
extern T504 M504;
struct S199{Tid id;T0* _clusters;};
extern T199 M199;
struct S369{Tid id;T372 _storage;T2 _capacity;T2 _upper;};
extern T369 M369;
struct S755{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T755 M755;
struct S190{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T190 M190;
struct S240{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T240 M240;
struct S665{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T665 M665;
struct S591{Tid id;T0* _parameters;};
extern T591 M591;
struct S118{Tid id;T120 _storage;T2 _capacity;T2 _upper;};
extern T118 M118;
struct S196{Tid id;T0* _i_representation;};
extern T196 M196;
struct S453{Tid id;};
extern T453 M453;
extern T539 M539;
struct S115{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T115 M115;
struct S77{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T77 M77;
struct S595{Tid id;};
extern T595 M595;
struct S754{Tid id;T0* _implementation;};
extern T754 M754;
struct S564{Tid id;T2 _last_code;T2 _next_pos;};
extern T564 M564;
struct S757{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T757 M757;
struct S749{Tid id;T0* _uri;};
extern T749 M749;
struct S142{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T142 M142;
struct S722{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T722 M722;
struct S136{Tid id;T0* _name;};
extern T136 M136;
struct S203{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T203 M203;
struct S696{Tid id;};
extern T696 M696;
struct S158{Tid id;T0* _name;};
extern T158 M158;
struct S727{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T727 M727;
struct S542{Tid id;T0* _implementation;};
extern T542 M542;
struct S635{Tid id;T0* _feature_name;T0* _external_name;};
extern T635 M635;
struct S124{Tid id;};
extern T124 M124;
struct S100{Tid id;T75 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T100 M100;
struct S489{Tid id;T493 _storage;T2 _capacity;T2 _upper;};
extern T489 M489;
struct S682{Tid id;T686 _storage;T2 _capacity;T2 _upper;};
extern T682 M682;
struct S656{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T656 M656;
struct S181{Tid id;T0* _implementation;};
extern T181 M181;
struct S538{Tid id;T2 _count;T0* _storage;};
extern T538 M538;
struct S192{Tid id;T0* _namespaces;T0* _implementation;};
extern T192 M192;
struct S76{Tid id;T3 _item;};
extern T76 M76;
struct S619{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T619 M619;
struct S718{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T718 M718;
struct S84{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T84 M84;
struct S127{Tid id;};
extern T127 M127;
struct S262{Tid id;T264 _storage;T2 _capacity;T2 _upper;};
extern T262 M262;
struct S392{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T392 M392;
struct S495{Tid id;};
extern T495 M495;
struct S289{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T289 M289;
struct S766{Tid id;T2 _i_code;};
extern T766 M766;
struct S512{Tid id;T514 _storage;T2 _capacity;T2 _upper;};
extern T512 M512;
struct S265{Tid id;};
extern T265 M265;
struct S421{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T421 M421;
struct S252{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T252 M252;
struct S557{Tid id;};
extern T557 M557;
struct S554{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T554 M554;
struct S66{Tid id;T0* _program_name;};
extern T66 M66;
struct S400{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T400 M400;
struct S653{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T653 M653;
struct S32{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T32 M32;
struct S411{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T411 M411;
struct S61{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T61 M61;
struct S353{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T353 M353;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r456clear_all(T456 C,T2 a1);
T456 r456realloc(T456 C,T2 a1,T2 a2);
void r456set_all_with(T456 C,T0* a1,T2 a2);
T6 r456fast_memcmp(T456 C,T456 a1,T2 a2);
void r456clear(T456 C,T2 a1,T2 a2);
void r456copy_from(T456 C,T456 a1,T2 a2);
void r327clear_all(T327 C,T2 a1);
T327 r327realloc(T327 C,T2 a1,T2 a2);
void r327set_all_with(T327 C,T0* a1,T2 a2);
T6 r327fast_memcmp(T327 C,T327 a1,T2 a2);
void r327clear(T327 C,T2 a1,T2 a2);
void r327copy_from(T327 C,T327 a1,T2 a2);
void r603clear_all(T603 C,T2 a1);
T603 r603realloc(T603 C,T2 a1,T2 a2);
void r603set_all_with(T603 C,T6 a1,T2 a2);
T6 r603fast_memcmp(T603 C,T603 a1,T2 a2);
void r603clear(T603 C,T2 a1,T2 a2);
void r603copy_from(T603 C,T603 a1,T2 a2);
void r264clear_all(T264 C,T2 a1);
T264 r264realloc(T264 C,T2 a1,T2 a2);
void r264set_all_with(T264 C,T0* a1,T2 a2);
T6 r264fast_memcmp(T264 C,T264 a1,T2 a2);
void r264clear(T264 C,T2 a1,T2 a2);
void r264copy_from(T264 C,T264 a1,T2 a2);
void r212clear_all(T212 C,T2 a1);
T212 r212realloc(T212 C,T2 a1,T2 a2);
void r212set_all_with(T212 C,T0* a1,T2 a2);
T6 r212fast_memcmp(T212 C,T212 a1,T2 a2);
void r212clear(T212 C,T2 a1,T2 a2);
void r212copy_from(T212 C,T212 a1,T2 a2);
void r427clear_all(T427 C,T2 a1);
T427 r427realloc(T427 C,T2 a1,T2 a2);
void r427set_all_with(T427 C,T0* a1,T2 a2);
T6 r427fast_memcmp(T427 C,T427 a1,T2 a2);
void r427clear(T427 C,T2 a1,T2 a2);
void r427copy_from(T427 C,T427 a1,T2 a2);
void r217clear_all(T217 C,T2 a1);
T217 r217realloc(T217 C,T2 a1,T2 a2);
void r217set_all_with(T217 C,T0* a1,T2 a2);
T6 r217fast_memcmp(T217 C,T217 a1,T2 a2);
void r217clear(T217 C,T2 a1,T2 a2);
void r217copy_from(T217 C,T217 a1,T2 a2);
void r514clear_all(T514 C,T2 a1);
T514 r514realloc(T514 C,T2 a1,T2 a2);
void r514set_all_with(T514 C,T0* a1,T2 a2);
T6 r514fast_memcmp(T514 C,T514 a1,T2 a2);
void r514clear(T514 C,T2 a1,T2 a2);
void r514copy_from(T514 C,T514 a1,T2 a2);
void r75clear_all(T75 C,T2 a1);
T75 r75realloc(T75 C,T2 a1,T2 a2);
T6 r75fast_memcmp(T75 C,T75 a1,T2 a2);
void r75set_all_with(T75 C,T0* a1,T2 a2);
void r75clear(T75 C,T2 a1,T2 a2);
void r75copy_from(T75 C,T75 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r686clear_all(T686 C,T2 a1);
T686 r686realloc(T686 C,T2 a1,T2 a2);
void r686set_all_with(T686 C,T0* a1,T2 a2);
T6 r686fast_memcmp(T686 C,T686 a1,T2 a2);
void r686clear(T686 C,T2 a1,T2 a2);
void r686copy_from(T686 C,T686 a1,T2 a2);
void r285clear_all(T285 C,T2 a1);
T285 r285realloc(T285 C,T2 a1,T2 a2);
void r285set_all_with(T285 C,T0* a1,T2 a2);
T6 r285fast_memcmp(T285 C,T285 a1,T2 a2);
void r285clear(T285 C,T2 a1,T2 a2);
void r285copy_from(T285 C,T285 a1,T2 a2);
void r399clear_all(T399 C,T2 a1);
T399 r399realloc(T399 C,T2 a1,T2 a2);
void r399set_all_with(T399 C,T0* a1,T2 a2);
T6 r399fast_memcmp(T399 C,T399 a1,T2 a2);
void r399clear(T399 C,T2 a1,T2 a2);
void r399copy_from(T399 C,T399 a1,T2 a2);
void r372clear_all(T372 C,T2 a1);
T372 r372realloc(T372 C,T2 a1,T2 a2);
void r372set_all_with(T372 C,T0* a1,T2 a2);
T6 r372fast_memcmp(T372 C,T372 a1,T2 a2);
void r372clear(T372 C,T2 a1,T2 a2);
void r372copy_from(T372 C,T372 a1,T2 a2);
void r260clear_all(T260 C,T2 a1);
T260 r260realloc(T260 C,T2 a1,T2 a2);
void r260set_all_with(T260 C,T0* a1,T2 a2);
T6 r260fast_memcmp(T260 C,T260 a1,T2 a2);
void r260clear(T260 C,T2 a1,T2 a2);
void r260copy_from(T260 C,T260 a1,T2 a2);
void r120clear_all(T120 C,T2 a1);
T120 r120realloc(T120 C,T2 a1,T2 a2);
void r120move(T120 C,T2 a1,T2 a2,T2 a3);
T6 r120fast_memcmp(T120 C,T120 a1,T2 a2);
void r120set_all_with(T120 C,T2 a1,T2 a2);
void r120clear(T120 C,T2 a1,T2 a2);
void r120copy_from(T120 C,T120 a1,T2 a2);
void r493clear_all(T493 C,T2 a1);
T493 r493realloc(T493 C,T2 a1,T2 a2);
void r493set_all_with(T493 C,T0* a1,T2 a2);
T6 r493fast_memcmp(T493 C,T493 a1,T2 a2);
void r493clear(T493 C,T2 a1,T2 a2);
void r493copy_from(T493 C,T493 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r283copy(T283* C,T0* a1);
T6 r283is_equal(T283* C,T0* a1);
T6 r283se_assigned_from(T0* a1);
void r283make(T283* C,T2 a1);
T6 r283conforms_to(T283* C,T0* a1);
void r283resize(T283* C,T2 a1);
T0* r283twin(T283* C);
void r396copy(T396* C,T0* a1);
T6 r396is_equal(T396* C,T0* a1);
T6 r396se_assigned_from(T0* a1);
void r396make(T396* C,T2 a1);
T6 r396conforms_to(T396* C,T0* a1);
void r396resize(T396* C,T2 a1);
T0* r396twin(T396* C);
void r601copy(T601* C,T0* a1);
T6 r601is_equal(T601* C,T0* a1);
T6 r601se_assigned_from(T0* a1);
void r601make(T601* C,T2 a1);
T6 r601conforms_to(T601* C,T0* a1);
void r601resize(T601* C,T2 a1);
T0* r601twin(T601* C);
void r215copy(T215* C,T0* a1);
T6 r215is_equal(T215* C,T0* a1);
T6 r215se_assigned_from(T0* a1);
void r215make(T215* C,T2 a1);
T6 r215conforms_to(T215* C,T0* a1);
void r215resize(T215* C,T2 a1);
T0* r215twin(T215* C);
void r488copy(T488* C,T0* a1);
T2 r488count(T488* C);
T6 r488is_equal(T488* C,T0* a1);
T2 r488item(T488* C,T2 a1);
T6 r488se_assigned_from(T0* a1);
void r488make(T488* C,T2 a1,T2 a2);
T6 r488conforms_to(T488* C,T0* a1);
void r488resize(T488* C,T2 a1,T2 a2);
T0* r488twin(T488* C);
void r258copy(T258* C,T0* a1);
T6 r258is_equal(T258* C,T0* a1);
T6 r258se_assigned_from(T0* a1);
void r258make(T258* C,T2 a1);
T6 r258conforms_to(T258* C,T0* a1);
void r258resize(T258* C,T2 a1);
T0* r258twin(T258* C);
void r452copy(T452* C,T0* a1);
T6 r452is_equal(T452* C,T0* a1);
T6 r452se_assigned_from(T0* a1);
void r452make(T452* C,T2 a1);
T6 r452conforms_to(T452* C,T0* a1);
void r452resize(T452* C,T2 a1);
T0* r452twin(T452* C);
void r210copy(T210* C,T0* a1);
T6 r210is_equal(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
void r210make(T210* C,T2 a1);
T6 r210conforms_to(T210* C,T0* a1);
void r210resize(T210* C,T2 a1);
T0* r210twin(T210* C);
void r423copy(T423* C,T0* a1);
T6 r423is_equal(T423* C,T0* a1);
T6 r423se_assigned_from(T0* a1);
void r423make(T423* C,T2 a1);
T6 r423conforms_to(T423* C,T0* a1);
void r423resize(T423* C,T2 a1);
T0* r423twin(T423* C);
void r73copy(T73* C,T0* a1);
T6 r73is_equal(T73* C,T0* a1);
T6 r73se_assigned_from(T0* a1);
void r73make(T73* C,T2 a1);
T6 r73conforms_to(T73* C,T0* a1);
void r73resize(T73* C,T2 a1);
T0* r73twin(T73* C);
void r324copy(T324* C,T0* a1);
T6 r324is_equal(T324* C,T0* a1);
T6 r324se_assigned_from(T0* a1);
void r324make(T324* C,T2 a1);
T6 r324conforms_to(T324* C,T0* a1);
void r324resize(T324* C,T2 a1);
T0* r324twin(T324* C);
void r369copy(T369* C,T0* a1);
T6 r369is_equal(T369* C,T0* a1);
T6 r369se_assigned_from(T0* a1);
void r369make(T369* C,T2 a1);
T6 r369conforms_to(T369* C,T0* a1);
void r369resize(T369* C,T2 a1);
T0* r369twin(T369* C);
void r118copy(T118* C,T0* a1);
T6 r118is_equal(T118* C,T0* a1);
T6 r118se_assigned_from(T0* a1);
void r118make(T118* C,T2 a1);
T6 r118conforms_to(T118* C,T0* a1);
void r118resize(T118* C,T2 a1);
T0* r118twin(T118* C);
void r118with_capacity(T118* C,T2 a1);
void r118from_collection(T118* C,T0* a1);
void r100copy(T100* C,T0* a1);
T2 r100count(T100* C);
T6 r100is_equal(T100* C,T0* a1);
T0* r100item(T100* C,T2 a1);
T6 r100valid_index(T100* C,T2 a1);
T6 r100se_assigned_from(T0* a1);
void r100make(T100* C,T2 a1,T2 a2);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
void r489copy(T489* C,T0* a1);
T2 r489count(T489* C);
T6 r489is_equal(T489* C,T0* a1);
T0* r489item(T489* C,T2 a1);
T6 r489se_assigned_from(T0* a1);
void r489make(T489* C,T2 a1);
T6 r489conforms_to(T489* C,T0* a1);
void r489resize(T489* C,T2 a1);
T0* r489twin(T489* C);
void r682copy(T682* C,T0* a1);
T6 r682is_equal(T682* C,T0* a1);
T6 r682se_assigned_from(T0* a1);
void r682make(T682* C,T2 a1);
T6 r682conforms_to(T682* C,T0* a1);
void r682resize(T682* C,T2 a1);
T0* r682twin(T682* C);
void r262copy(T262* C,T0* a1);
T2 r262count(T262* C);
T6 r262is_equal(T262* C,T0* a1);
T0* r262item(T262* C,T2 a1);
T6 r262se_assigned_from(T0* a1);
void r262make(T262* C,T2 a1);
T6 r262conforms_to(T262* C,T0* a1);
void r262resize(T262* C,T2 a1);
T0* r262twin(T262* C);
void r512copy(T512* C,T0* a1);
T6 r512is_equal(T512* C,T0* a1);
T6 r512se_assigned_from(T0* a1);
void r512make(T512* C,T2 a1);
T6 r512conforms_to(T512* C,T0* a1);
void r512resize(T512* C,T2 a1);
T0* r512twin(T512* C);
void r743copy(T743* C,T0* a1);
void r743set(T743* C,T0* a1,T6 a2,T6 a3);
T6 r743is_equal(T743* C,T0* a1);
T6 r743same_position(T743* C,T0* a1);
T6 r743se_assigned_from(T0* a1);
T6 r743same_type(T743* C,T0* a1);
void r743make(T743* C,T0* a1);
T6 r743conforms_to(T743* C,T0* a1);
void r743set_after(T743* C);
T0* r743twin(T743* C);
void r468copy(T468* C,T0* a1);
T6 r468is_equal(T468* C,T0* a1);
T6 r468same_position(T468* C,T0* a1);
T6 r468se_assigned_from(T0* a1);
T6 r468same_type(T468* C,T0* a1);
T6 r468off(T468* C);
T6 r468conforms_to(T468* C,T0* a1);
T0* r468twin(T468* C);
T6 r582is_equal(T582* C,T0* a1);
T6 r582se_assigned_from(T0* a1);
T6 r582conforms_to(T582* C,T0* a1);
T0* r582twin(T582* C);
void r457copy(T457* C,T0* a1);
T6 r457is_equal(T457* C,T0* a1);
void r457remove_traversing_cursor(T457* C,T0* a1);
void r457move_all_cursors_after(T457* C);
void r457add_traversing_cursor(T457* C,T0* a1);
T6 r457se_assigned_from(T0* a1);
T0* r457clone(T0* a1);
T6 r457cursor_before(T0* a1);
T6 r457same_type(T457* C,T0* a1);
void r457make(T457* C,T2 a1);
T6 r457cursor_after(T0* a1);
T6 r457conforms_to(T457* C,T0* a1);
T6 r457cursor_same_position(T0* a1,T0* a2);
T0* r457twin(T457* C);
T0* r457new_cursor(T457* C);
T6 r457cursor_off(T0* a1);
T6 r102is_equal(T102* C,T0* a1);
T6 r102se_assigned_from(T0* a1);
T6 r102conforms_to(T102* C,T0* a1);
T0* r102twin(T102* C);
T6 r154is_equal(T154* C,T0* a1);
T6 r154se_assigned_from(T0* a1);
T6 r154conforms_to(T154* C,T0* a1);
T0* r154twin(T154* C);
void r229copy(T229* C,T0* a1);
T6 r229is_equal(T229* C,T0* a1);
T0* r229item(T229* C);
T6 r229same_position(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
T6 r229after(T229* C);
T6 r229same_type(T229* C,T0* a1);
T2 r229index(T229* C);
T6 r229off(T229* C);
T6 r229conforms_to(T229* C,T0* a1);
T0* r229twin(T229* C);
T6 r571is_equal(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
void r571make(T571* C,T0* a1,T0* a2);
T6 r571conforms_to(T571* C,T0* a1);
T0* r571twin(T571* C);
void r692copy(T692* C,T0* a1);
void r692set(T692* C,T0* a1,T6 a2,T6 a3);
T6 r692is_equal(T692* C,T0* a1);
T6 r692same_position(T692* C,T0* a1);
T6 r692se_assigned_from(T0* a1);
T6 r692is_first(T692* C);
T6 r692is_last(T692* C);
T6 r692same_type(T692* C,T0* a1);
void r692make(T692* C,T0* a1);
void r692forth(T692* C);
T6 r692conforms_to(T692* C,T0* a1);
void r692start(T692* C);
void r692go_after(T692* C);
void r692set_after(T692* C);
T0* r692twin(T692* C);
void r366copy(T366* C,T0* a1);
T6 r366is_equal(T366* C,T0* a1);
T6 r366same_position(T366* C,T0* a1);
T6 r366se_assigned_from(T0* a1);
T6 r366same_type(T366* C,T0* a1);
void r366make(T366* C,T0* a1);
T6 r366off(T366* C);
T6 r366conforms_to(T366* C,T0* a1);
T0* r366twin(T366* C);
T2 r213new_capacity(T2 a1);
void r213copy(T213* C,T0* a1);
void r213clear_items(T213* C,T2 a1,T2 a2);
T6 r213extendible(T213* C,T2 a1);
T0* r213cursor_item(T213* C,T0* a1);
T6 r213is_equal(T213* C,T0* a1);
void r213remove_traversing_cursor(T213* C,T0* a1);
void r213move_all_cursors_after(T213* C);
void r213add_traversing_cursor(T213* C,T0* a1);
T6 r213se_assigned_from(T0* a1);
T0* r213clone(T0* a1);
void r213move_left(T213* C,T2 a1,T2 a2);
T6 r213cursor_before(T0* a1);
T6 r213same_type(T213* C,T0* a1);
void r213make(T213* C,T2 a1);
void r213remove(T213* C,T2 a1);
void r213move_cursors_left(T213* C,T2 a1);
void r213remove_last(T213* C);
T6 r213cursor_after(T0* a1);
T6 r213conforms_to(T213* C,T0* a1);
T2 r213cursor_index(T213* C,T0* a1);
void r213cursor_forth(T213* C,T0* a1);
void r213resize(T213* C,T2 a1);
T6 r213cursor_same_position(T0* a1,T0* a2);
void r213move_last_cursors_after(T213* C);
void r213delete(T213* C,T0* a1);
void r213cursor_start(T213* C,T0* a1);
T0* r213twin(T213* C);
void r213force_last(T213* C,T0* a1);
T0* r213new_cursor(T213* C);
void r213put_last(T213* C,T0* a1);
T6 r213cursor_off(T0* a1);
void r630copy(T630* C,T0* a1);
void r630set(T630* C,T0* a1,T6 a2,T6 a3);
T6 r630is_equal(T630* C,T0* a1);
T6 r630same_position(T630* C,T0* a1);
T6 r630se_assigned_from(T0* a1);
T6 r630same_type(T630* C,T0* a1);
void r630make(T630* C,T0* a1);
T6 r630conforms_to(T630* C,T0* a1);
void r630set_after(T630* C);
T0* r630twin(T630* C);
T6 r637is_equal(T637* C,T0* a1);
T6 r637se_assigned_from(T0* a1);
T6 r637conforms_to(T637* C,T0* a1);
T0* r637twin(T637* C);
T6 r633is_equal(T633* C,T0* a1);
T6 r633se_assigned_from(T0* a1);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
void r490clear_all(T0* a1);
T6 r490is_equal(T490* C,T0* a1);
T6 r490se_assigned_from(T0* a1);
T0* r490make(T2 a1);
T6 r490conforms_to(T490* C,T0* a1);
T0* r490resize(T0* a1,T2 a2);
T0* r490twin(T490* C);
T6 r325is_equal(T325* C,T0* a1);
T6 r325se_assigned_from(T0* a1);
T0* r325make(T2 a1);
T6 r325conforms_to(T325* C,T0* a1);
T0* r325resize(T0* a1,T2 a2);
T0* r325twin(T325* C);
T6 r379is_equal(T379* C,T0* a1);
T6 r379se_assigned_from(T0* a1);
void r379make(T379* C,T2 a1);
T6 r379conforms_to(T379* C,T0* a1);
T0* r379twin(T379* C);
void r570copy(T570* C,T0* a1);
void r570set(T570* C,T0* a1,T6 a2,T6 a3);
T6 r570is_equal(T570* C,T0* a1);
T6 r570same_position(T570* C,T0* a1);
T6 r570se_assigned_from(T0* a1);
T6 r570same_type(T570* C,T0* a1);
void r570make(T570* C,T0* a1);
T6 r570conforms_to(T570* C,T0* a1);
void r570set_after(T570* C);
T0* r570twin(T570* C);
T6 r122is_equal(T122* C,T0* a1);
T6 r122se_assigned_from(T0* a1);
T0* r122to_fixed_array(T0* a1);
T0* r122make(T2 a1);
T0* r122make_from_array(T0* a1);
T6 r122conforms_to(T122* C,T0* a1);
T0* r122resize(T0* a1,T2 a2);
T0* r122twin(T122* C);
void r286clear_all(T0* a1);
T6 r286is_equal(T286* C,T0* a1);
T6 r286se_assigned_from(T0* a1);
T0* r286make(T2 a1);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286resize(T0* a1,T2 a2);
T0* r286twin(T286* C);
void r89copy(T89* C,T0* a1);
void r89set(T89* C,T0* a1,T6 a2,T6 a3);
T6 r89is_equal(T89* C,T0* a1);
T6 r89same_position(T89* C,T0* a1);
T6 r89se_assigned_from(T0* a1);
T6 r89same_type(T89* C,T0* a1);
void r89make(T89* C,T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
void r89set_after(T89* C);
T0* r89twin(T89* C);
T6 r730is_equal(T730* C,T0* a1);
T6 r730se_assigned_from(T0* a1);
void r730make(T730* C,T0* a1,T0* a2);
T6 r730conforms_to(T730* C,T0* a1);
T0* r730twin(T730* C);
void r165copy(T165* C,T0* a1);
T6 r165is_equal(T165* C,T0* a1);
T0* r165item(T165* C);
T6 r165same_position(T165* C,T0* a1);
T6 r165se_assigned_from(T0* a1);
T6 r165after(T165* C);
T6 r165same_type(T165* C,T0* a1);
void r165make(T165* C,T0* a1);
T6 r165off(T165* C);
T6 r165conforms_to(T165* C,T0* a1);
T0* r165twin(T165* C);
T2 r597new_capacity(T2 a1);
void r597copy(T597* C,T0* a1);
void r597force(T597* C,T6 a1,T0* a2);
void r597make_clashes(T597* C,T2 a1);
T6 r597cursor_item(T597* C,T0* a1);
void r597search_position(T597* C,T0* a1);
T6 r597is_equal(T597* C,T0* a1);
void r597remove_traversing_cursor(T597* C,T0* a1);
void r597clone_slots(T597* C);
extern T0*oBC109FIXED_INTEGER_ARRAY_;
void r597keys_resize(T597* C,T2 a1);
T6 r597item(T597* C,T0* a1);
void r597clone_clashes(T597* C);
void r597move_all_cursors_after(T597* C);
void r597make_items(T597* C,T2 a1);
void r597add_traversing_cursor(T597* C,T0* a1);
T6 r597se_assigned_from(T0* a1);
T0* r597clone(T0* a1);
T6 r597same_type(T597* C,T0* a1);
void r597make(T597* C,T2 a1);
T0* r597cursor_key(T597* C,T0* a1);
void r597clone_items(T597* C);
T6 r597cursor_after(T0* a1);
T6 r597conforms_to(T597* C,T0* a1);
T6 r597has(T597* C,T0* a1);
void r597make_keys(T597* C,T2 a1);
T2 r597hash_position(T597* C,T0* a1);
void r597cursor_forth(T597* C,T0* a1);
void r597items_resize(T597* C,T2 a1);
void r597clone_keys(T597* C);
void r597make_with_equality_testers(T597* C,T2 a1,T0* a2,T0* a3);
void r597resize(T597* C,T2 a1);
T6 r597cursor_same_position(T0* a1,T0* a2);
void r597cursor_start(T597* C,T0* a1);
void r597clashes_resize(T597* C,T2 a1);
void r597slots_resize(T597* C,T2 a1);
T0* r597twin(T597* C);
T0* r597new_cursor(T597* C);
void r597make_slots(T597* C,T2 a1);
T2 r597new_modulus(T2 a1);
T6 r597cursor_off(T0* a1);
T6 r397is_equal(T397* C,T0* a1);
T6 r397se_assigned_from(T0* a1);
T0* r397make(T2 a1);
T6 r397conforms_to(T397* C,T0* a1);
T0* r397resize(T0* a1,T2 a2);
T0* r397twin(T397* C);
void r444copy(T444* C,T0* a1);
void r444make_clashes(T444* C,T2 a1);
void r444search_position(T444* C,T0* a1);
T6 r444is_equal(T444* C,T0* a1);
void r444remove_traversing_cursor(T444* C,T0* a1);
void r444clone_slots(T444* C);
T2 r444item(T444* C,T0* a1);
void r444clone_clashes(T444* C);
void r444move_all_cursors_after(T444* C);
void r444make_items(T444* C,T2 a1);
void r444add_traversing_cursor(T444* C,T0* a1);
T6 r444se_assigned_from(T0* a1);
T0* r444clone(T0* a1);
T6 r444same_type(T444* C,T0* a1);
void r444clone_items(T444* C);
T6 r444conforms_to(T444* C,T0* a1);
T6 r444has(T444* C,T0* a1);
void r444make_keys(T444* C,T2 a1);
T2 r444hash_position(T444* C,T0* a1);
void r444clone_keys(T444* C);
void r444make_with_equality_testers(T444* C,T2 a1,T0* a2,T0* a3);
T6 r444cursor_same_position(T0* a1,T0* a2);
T0* r444twin(T444* C);
T0* r444new_cursor(T444* C);
void r444make_slots(T444* C,T2 a1);
T2 r444new_modulus(T2 a1);
T6 r444cursor_off(T0* a1);
void r321copy(T321* C,T0* a1);
T6 r321is_equal(T321* C,T0* a1);
T6 r321same_position(T321* C,T0* a1);
T6 r321se_assigned_from(T0* a1);
T6 r321same_type(T321* C,T0* a1);
void r321make(T321* C,T0* a1);
T6 r321off(T321* C);
T6 r321conforms_to(T321* C,T0* a1);
T0* r321twin(T321* C);
T6 r141is_equal(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
void r141make(T141* C,T0* a1,T0* a2);
T6 r141conforms_to(T141* C,T0* a1);
T0* r141twin(T141* C);
T6 r746is_equal(T746* C,T0* a1);
T6 r746se_assigned_from(T0* a1);
T6 r746conforms_to(T746* C,T0* a1);
T0* r746twin(T746* C);
void r616copy(T616* C,T0* a1);
T0* r616key(T616* C);
T6 r616is_equal(T616* C,T0* a1);
T6 r616item(T616* C);
T6 r616same_position(T616* C,T0* a1);
T6 r616se_assigned_from(T0* a1);
T6 r616after(T616* C);
T6 r616same_type(T616* C,T0* a1);
void r616make(T616* C,T0* a1);
T6 r616off(T616* C);
T6 r616conforms_to(T616* C,T0* a1);
T0* r616twin(T616* C);
void r649copy(T649* C,T0* a1);
void r649set(T649* C,T0* a1,T6 a2,T6 a3);
T6 r649is_equal(T649* C,T0* a1);
T6 r649same_position(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
T6 r649is_last(T649* C);
T6 r649same_type(T649* C,T0* a1);
void r649make(T649* C,T0* a1);
T6 r649conforms_to(T649* C,T0* a1);
void r649set_after(T649* C);
T0* r649twin(T649* C);
void r580copy(T580* C,T0* a1);
T6 r580is_equal(T580* C,T0* a1);
void r580remove_traversing_cursor(T580* C,T0* a1);
void r580move_all_cursors_after(T580* C);
void r580add_traversing_cursor(T580* C,T0* a1);
T6 r580se_assigned_from(T0* a1);
T6 r580same_type(T580* C,T0* a1);
void r580make(T580* C);
T6 r580conforms_to(T580* C,T0* a1);
void r580cursor_forth(T580* C,T0* a1);
void r580cursor_start(T580* C,T0* a1);
T0* r580twin(T580* C);
T0* r580new_cursor(T580* C);
void r580put_last(T580* C,T0* a1);
T6 r580cursor_off(T0* a1);
void r31copy(T31* C,T0* a1);
void r31set(T31* C,T0* a1,T6 a2,T6 a3);
T6 r31is_equal(T31* C,T0* a1);
T6 r31same_position(T31* C,T0* a1);
T6 r31se_assigned_from(T0* a1);
T6 r31same_type(T31* C,T0* a1);
void r31make(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31set_after(T31* C);
T0* r31twin(T31* C);
T2 r209new_capacity(T2 a1);
void r209copy(T209* C,T0* a1);
T6 r209extendible(T209* C,T2 a1);
T6 r209is_equal(T209* C,T0* a1);
void r209remove_traversing_cursor(T209* C,T0* a1);
void r209move_all_cursors_after(T209* C);
void r209add_traversing_cursor(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
T0* r209clone(T0* a1);
T6 r209cursor_before(T0* a1);
T6 r209same_type(T209* C,T0* a1);
void r209make(T209* C,T2 a1);
T6 r209cursor_after(T0* a1);
T6 r209conforms_to(T209* C,T0* a1);
void r209resize(T209* C,T2 a1);
T6 r209cursor_same_position(T0* a1,T0* a2);
T0* r209twin(T209* C);
void r209force_last(T209* C,T0* a1);
T0* r209new_cursor(T209* C);
void r209put_last(T209* C,T0* a1);
T6 r209cursor_off(T0* a1);
void r351copy(T351* C,T0* a1);
T6 r351is_equal(T351* C,T0* a1);
T6 r351same_position(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T6 r351same_type(T351* C,T0* a1);
void r351make(T351* C,T0* a1);
T6 r351off(T351* C);
T6 r351conforms_to(T351* C,T0* a1);
T0* r351twin(T351* C);
void r523copy(T523* C,T0* a1);
T6 r523is_equal(T523* C,T0* a1);
T6 r523same_position(T523* C,T0* a1);
T6 r523se_assigned_from(T0* a1);
T6 r523same_type(T523* C,T0* a1);
void r523make(T523* C,T0* a1);
T6 r523off(T523* C);
T6 r523conforms_to(T523* C,T0* a1);
T0* r523twin(T523* C);
void r414copy(T414* C,T0* a1);
void r414make_clashes(T414* C,T2 a1);
void r414search_position(T414* C,T0* a1);
T6 r414is_equal(T414* C,T0* a1);
void r414remove_traversing_cursor(T414* C,T0* a1);
void r414clone_slots(T414* C);
T2 r414item(T414* C,T0* a1);
void r414clone_clashes(T414* C);
void r414move_all_cursors_after(T414* C);
void r414make_items(T414* C,T2 a1);
void r414add_traversing_cursor(T414* C,T0* a1);
T6 r414se_assigned_from(T0* a1);
T0* r414clone(T0* a1);
T6 r414same_type(T414* C,T0* a1);
void r414clone_items(T414* C);
T6 r414conforms_to(T414* C,T0* a1);
T6 r414has(T414* C,T0* a1);
void r414make_keys(T414* C,T2 a1);
T2 r414hash_position(T414* C,T0* a1);
void r414clone_keys(T414* C);
void r414make_with_equality_testers(T414* C,T2 a1,T0* a2,T0* a3);
T6 r414cursor_same_position(T0* a1,T0* a2);
T0* r414twin(T414* C);
T0* r414new_cursor(T414* C);
void r414make_slots(T414* C,T2 a1);
T2 r414new_modulus(T2 a1);
T6 r414cursor_off(T0* a1);
void r636copy(T636* C,T0* a1);
T6 r636cursor_is_last(T636* C,T0* a1);
T6 r636is_equal(T636* C,T0* a1);
void r636remove_traversing_cursor(T636* C,T0* a1);
void r636move_all_cursors_after(T636* C);
void r636add_traversing_cursor(T636* C,T0* a1);
T6 r636se_assigned_from(T0* a1);
T6 r636same_type(T636* C,T0* a1);
void r636make(T636* C);
T6 r636conforms_to(T636* C,T0* a1);
void r636cursor_forth(T636* C,T0* a1);
void r636cursor_start(T636* C,T0* a1);
T0* r636twin(T636* C);
void r636force_last(T636* C,T0* a1);
T0* r636new_cursor(T636* C);
T6 r636cursor_off(T0* a1);
void r428copy(T428* C,T0* a1);
T6 r428is_equal(T428* C,T0* a1);
void r428remove_traversing_cursor(T428* C,T0* a1);
void r428move_all_cursors_after(T428* C);
void r428add_traversing_cursor(T428* C,T0* a1);
T6 r428se_assigned_from(T0* a1);
T0* r428clone(T0* a1);
T6 r428cursor_before(T0* a1);
T6 r428same_type(T428* C,T0* a1);
void r428make(T428* C,T2 a1);
T6 r428cursor_after(T0* a1);
T6 r428conforms_to(T428* C,T0* a1);
T6 r428cursor_same_position(T0* a1,T0* a2);
T0* r428twin(T428* C);
T0* r428new_cursor(T428* C);
T6 r428cursor_off(T0* a1);
T6 r671is_equal(T671* C,T0* a1);
T6 r671se_assigned_from(T0* a1);
T6 r671conforms_to(T671* C,T0* a1);
T6 r671test(T0* a1,T0* a2);
T0* r671twin(T671* C);
T6 r288is_equal(T288* C,T0* a1);
T6 r288se_assigned_from(T0* a1);
T0* r288make(T2 a1);
T6 r288conforms_to(T288* C,T0* a1);
T0* r288resize(T0* a1,T2 a2);
T0* r288twin(T288* C);
void r731copy(T731* C,T0* a1);
T0* r731cursor_item(T0* a1);
T6 r731is_equal(T731* C,T0* a1);
void r731remove_traversing_cursor(T731* C,T0* a1);
void r731move_all_cursors_after(T731* C);
void r731add_traversing_cursor(T731* C,T0* a1);
T6 r731se_assigned_from(T0* a1);
T6 r731cursor_before(T0* a1);
T6 r731same_type(T731* C,T0* a1);
void r731make(T731* C);
T6 r731cursor_after(T0* a1);
T6 r731conforms_to(T731* C,T0* a1);
void r731cursor_forth(T731* C,T0* a1);
void r731cursor_start(T731* C,T0* a1);
T0* r731twin(T731* C);
T0* r731new_cursor(T731* C);
void r731put_last(T731* C,T0* a1);
T6 r731cursor_off(T0* a1);
void r305copy(T305* C,T0* a1);
T6 r305is_equal(T305* C,T0* a1);
T6 r305same_position(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
T6 r305same_type(T305* C,T0* a1);
void r305make(T305* C,T0* a1);
T6 r305off(T305* C);
T6 r305conforms_to(T305* C,T0* a1);
T0* r305twin(T305* C);
T6 r232is_equal(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
T0* r232make(T2 a1);
T6 r232conforms_to(T232* C,T0* a1);
T0* r232resize(T0* a1,T2 a2);
T0* r232twin(T232* C);
T6 r566is_equal(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T6 r566conforms_to(T566* C,T0* a1);
T0* r566twin(T566* C);
void r679copy(T679* C,T0* a1);
T6 r679is_equal(T679* C,T0* a1);
T6 r679same_position(T679* C,T0* a1);
T6 r679se_assigned_from(T0* a1);
T6 r679same_type(T679* C,T0* a1);
void r679make(T679* C,T0* a1);
T6 r679off(T679* C);
T6 r679conforms_to(T679* C,T0* a1);
T0* r679twin(T679* C);
void r380copy(T380* C,T0* a1);
T6 r380is_equal(T380* C,T0* a1);
void r380remove_traversing_cursor(T380* C,T0* a1);
void r380move_all_cursors_after(T380* C);
void r380add_traversing_cursor(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
T0* r380clone(T0* a1);
T6 r380cursor_before(T0* a1);
T6 r380same_type(T380* C,T0* a1);
void r380make(T380* C,T2 a1);
T6 r380cursor_after(T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
T6 r380cursor_same_position(T0* a1,T0* a2);
T0* r380twin(T380* C);
T0* r380new_cursor(T380* C);
T6 r380cursor_off(T0* a1);
void r307copy(T307* C,T0* a1);
void r307make_clashes(T307* C,T2 a1);
void r307search_position(T307* C,T2 a1);
T6 r307is_equal(T307* C,T0* a1);
void r307remove_traversing_cursor(T307* C,T0* a1);
void r307clone_slots(T307* C);
T0* r307item(T307* C,T2 a1);
void r307clone_clashes(T307* C);
void r307move_all_cursors_after(T307* C);
void r307make_items(T307* C,T2 a1);
void r307add_traversing_cursor(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T0* r307clone(T0* a1);
T6 r307same_type(T307* C,T0* a1);
void r307clone_items(T307* C);
T6 r307conforms_to(T307* C,T0* a1);
T6 r307has(T307* C,T2 a1);
void r307make_keys(T307* C,T2 a1);
T2 r307hash_position(T307* C,T2 a1);
void r307clone_keys(T307* C);
void r307make_with_equality_testers(T307* C,T2 a1,T0* a2,T0* a3);
T6 r307cursor_same_position(T0* a1,T0* a2);
T0* r307twin(T307* C);
T0* r307new_cursor(T307* C);
void r307make_slots(T307* C,T2 a1);
T2 r307new_modulus(T2 a1);
T6 r307cursor_off(T0* a1);
T2 r507new_capacity(T2 a1);
void r507copy(T507* C,T0* a1);
void r507force(T507* C,T0* a1,T0* a2);
void r507make_clashes(T507* C,T2 a1);
void r507search_position(T507* C,T0* a1);
T6 r507is_equal(T507* C,T0* a1);
void r507remove_traversing_cursor(T507* C,T0* a1);
void r507clone_slots(T507* C);
void r507keys_resize(T507* C,T2 a1);
void r507clone_clashes(T507* C);
T0* r507item(T507* C,T0* a1);
void r507move_all_cursors_after(T507* C);
void r507make_items(T507* C,T2 a1);
void r507add_traversing_cursor(T507* C,T0* a1);
T6 r507se_assigned_from(T0* a1);
T0* r507clone(T0* a1);
T6 r507same_type(T507* C,T0* a1);
void r507make(T507* C,T2 a1);
void r507clone_items(T507* C);
T6 r507conforms_to(T507* C,T0* a1);
T6 r507has(T507* C,T0* a1);
void r507make_keys(T507* C,T2 a1);
T2 r507hash_position(T507* C,T0* a1);
void r507items_resize(T507* C,T2 a1);
void r507clone_keys(T507* C);
void r507make_with_equality_testers(T507* C,T2 a1,T0* a2,T0* a3);
void r507resize(T507* C,T2 a1);
T6 r507cursor_same_position(T0* a1,T0* a2);
void r507clashes_resize(T507* C,T2 a1);
void r507slots_resize(T507* C,T2 a1);
T0* r507twin(T507* C);
T0* r507new_cursor(T507* C);
void r507make_slots(T507* C,T2 a1);
T2 r507new_modulus(T2 a1);
T6 r507cursor_off(T0* a1);
T6 r424is_equal(T424* C,T0* a1);
T6 r424se_assigned_from(T0* a1);
T0* r424make(T2 a1);
T6 r424conforms_to(T424* C,T0* a1);
T0* r424resize(T0* a1,T2 a2);
T0* r424twin(T424* C);
void r152copy(T152* C,T0* a1);
void r152append_last(T152* C,T0* a1);
T0* r152cursor_item(T0* a1);
T6 r152cursor_is_last(T152* C,T0* a1);
T6 r152is_equal(T152* C,T0* a1);
void r152remove_traversing_cursor(T152* C,T0* a1);
void r152move_all_cursors_after(T152* C);
void r152add_traversing_cursor(T152* C,T0* a1);
T6 r152se_assigned_from(T0* a1);
T6 r152same_type(T152* C,T0* a1);
void r152make(T152* C);
T6 r152cursor_after(T0* a1);
T6 r152conforms_to(T152* C,T0* a1);
void r152cursor_forth(T152* C,T0* a1);
void r152make_from_linear(T152* C,T0* a1);
void r152cursor_start(T152* C,T0* a1);
T0* r152twin(T152* C);
void r152force_last(T152* C,T0* a1);
T0* r152new_cursor(T152* C);
void r152put_last(T152* C,T0* a1);
T6 r152cursor_off(T0* a1);
T6 r65is_equal(T65* C,T0* a1);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T6 r605is_equal(T605* C,T0* a1);
T6 r605se_assigned_from(T0* a1);
T0* r605make(T2 a1);
T6 r605conforms_to(T605* C,T0* a1);
T0* r605resize(T0* a1,T2 a2);
T0* r605twin(T605* C);
T6 r370is_equal(T370* C,T0* a1);
T6 r370se_assigned_from(T0* a1);
T0* r370make(T2 a1);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370resize(T0* a1,T2 a2);
T0* r370twin(T370* C);
void r439copy(T439* C,T0* a1);
T6 r439is_equal(T439* C,T0* a1);
T6 r439same_position(T439* C,T0* a1);
T6 r439se_assigned_from(T0* a1);
T6 r439same_type(T439* C,T0* a1);
T6 r439off(T439* C);
T6 r439conforms_to(T439* C,T0* a1);
T0* r439twin(T439* C);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
T6 r510conforms_to(T510* C,T0* a1);
T6 r510test(T0* a1,T0* a2);
T0* r510twin(T510* C);
void r301copy(T301* C,T0* a1);
T6 r301is_equal(T301* C,T0* a1);
T6 r301same_position(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T6 r301same_type(T301* C,T0* a1);
void r301make(T301* C,T0* a1);
T6 r301off(T301* C);
T6 r301conforms_to(T301* C,T0* a1);
T0* r301twin(T301* C);
void r332copy(T332* C,T0* a1);
void r332make_equal(T332* C,T2 a1);
void r332make_clashes(T332* C,T2 a1);
void r332search_position(T332* C,T0* a1);
T6 r332is_equal(T332* C,T0* a1);
void r332remove_traversing_cursor(T332* C,T0* a1);
void r332clone_slots(T332* C);
T0* r332items_item(T332* C,T2 a1);
void r332clone_clashes(T332* C);
void r332move_all_cursors_after(T332* C);
void r332make_items(T332* C,T2 a1);
void r332add_traversing_cursor(T332* C,T0* a1);
T6 r332se_assigned_from(T0* a1);
T0* r332clone(T0* a1);
T6 r332same_type(T332* C,T0* a1);
void r332make(T332* C,T2 a1);
T6 r332equal(T0* a1,T0* a2);
void r332clone_items(T332* C);
T6 r332same_equality_tester(T332* C,T0* a1);
T6 r332conforms_to(T332* C,T0* a1);
T6 r332has(T332* C,T0* a1);
T2 r332hash_position(T332* C,T0* a1);
T6 r332cursor_same_position(T0* a1,T0* a2);
T0* r332twin(T332* C);
T0* r332new_cursor(T332* C);
void r332make_slots(T332* C,T2 a1);
T2 r332new_modulus(T2 a1);
T6 r332cursor_off(T0* a1);
void r254copy(T254* C,T0* a1);
void r254wipe_out(T254* C);
T0* r254keys_item(T254* C,T2 a1);
void r254make_clashes(T254* C,T2 a1);
void r254put(T254* C,T0* a1,T0* a2);
void r254search_position(T254* C,T0* a1);
T6 r254is_equal(T254* C,T0* a1);
void r254remove_traversing_cursor(T254* C,T0* a1);
void r254clone_slots(T254* C);
void r254keys_resize(T254* C,T2 a1);
T0* r254item(T254* C,T0* a1);
void r254clone_clashes(T254* C);
void r254make_items(T254* C,T2 a1);
void r254move_all_cursors_after(T254* C);
void r254add_traversing_cursor(T254* C,T0* a1);
T6 r254se_assigned_from(T0* a1);
T0* r254clone(T0* a1);
T6 r254same_type(T254* C,T0* a1);
void r254slots_wipe_out(T254* C);
void r254make(T254* C,T2 a1);
void r254clashes_wipe_out(T254* C);
void r254clone_items(T254* C);
T6 r254conforms_to(T254* C,T0* a1);
T6 r254has(T254* C,T0* a1);
void r254make_keys(T254* C,T2 a1);
T2 r254hash_position(T254* C,T0* a1);
void r254items_wipe_out(T254* C);
void r254items_resize(T254* C,T2 a1);
void r254clone_keys(T254* C);
void r254make_with_equality_testers(T254* C,T2 a1,T0* a2,T0* a3);
void r254resize(T254* C,T2 a1);
T6 r254cursor_same_position(T0* a1,T0* a2);
void r254clashes_resize(T254* C,T2 a1);
void r254slots_resize(T254* C,T2 a1);
T0* r254twin(T254* C);
void r254keys_wipe_out(T254* C);
T0* r254new_cursor(T254* C);
void r254make_slots(T254* C,T2 a1);
void r254keys_put(T254* C,T0* a1,T2 a2);
T2 r254new_modulus(T2 a1);
T6 r254cursor_off(T0* a1);
T6 r716is_equal(T716* C,T0* a1);
T6 r716se_assigned_from(T0* a1);
T6 r716conforms_to(T716* C,T0* a1);
T0* r716twin(T716* C);
void r268copy(T268* C,T0* a1);
T6 r268is_equal(T268* C,T0* a1);
void r268remove_traversing_cursor(T268* C,T0* a1);
void r268move_all_cursors_after(T268* C);
void r268add_traversing_cursor(T268* C,T0* a1);
T6 r268se_assigned_from(T0* a1);
T6 r268same_type(T268* C,T0* a1);
void r268make(T268* C);
T6 r268conforms_to(T268* C,T0* a1);
T0* r268twin(T268* C);
T0* r268new_cursor(T268* C);
T6 r443is_equal(T443* C,T0* a1);
T6 r443se_assigned_from(T0* a1);
void r443make(T443* C,T2 a1);
T6 r443conforms_to(T443* C,T0* a1);
T0* r443twin(T443* C);
T6 r683is_equal(T683* C,T0* a1);
T6 r683se_assigned_from(T0* a1);
T0* r683make(T2 a1);
T6 r683conforms_to(T683* C,T0* a1);
T0* r683resize(T0* a1,T2 a2);
T0* r683twin(T683* C);
void r450copy(T450* C,T0* a1);
T6 r450is_equal(T450* C,T0* a1);
T6 r450same_position(T450* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
T6 r450same_type(T450* C,T0* a1);
void r450make(T450* C,T0* a1);
T6 r450off(T450* C);
T6 r450conforms_to(T450* C,T0* a1);
T0* r450twin(T450* C);
void r279copy(T279* C,T0* a1);
T6 r279is_equal(T279* C,T0* a1);
T6 r279same_position(T279* C,T0* a1);
T6 r279se_assigned_from(T0* a1);
T6 r279same_type(T279* C,T0* a1);
void r279make(T279* C,T0* a1);
T6 r279conforms_to(T279* C,T0* a1);
void r279set_after(T279* C);
T0* r279twin(T279* C);
T6 r519is_equal(T519* C,T0* a1);
T6 r519se_assigned_from(T0* a1);
T0* r519make(T2 a1);
T6 r519conforms_to(T519* C,T0* a1);
T0* r519resize(T0* a1,T2 a2);
T0* r519twin(T519* C);
T6 r729is_equal(T729* C,T0* a1);
T6 r729se_assigned_from(T0* a1);
void r729make(T729* C,T0* a1,T0* a2);
T6 r729conforms_to(T729* C,T0* a1);
T0* r729twin(T729* C);
T6 r714is_equal(T714* C,T0* a1);
T6 r714se_assigned_from(T0* a1);
T6 r714conforms_to(T714* C,T0* a1);
T0* r714twin(T714* C);
T6 r515is_equal(T515* C,T0* a1);
T6 r515se_assigned_from(T0* a1);
T0* r515make(T2 a1);
T6 r515conforms_to(T515* C,T0* a1);
T0* r515resize(T0* a1,T2 a2);
T0* r515twin(T515* C);
void r240copy(T240* C,T0* a1);
T6 r240is_equal(T240* C,T0* a1);
T0* r240item(T240* C);
T6 r240same_position(T240* C,T0* a1);
T6 r240se_assigned_from(T0* a1);
T6 r240after(T240* C);
T6 r240same_type(T240* C,T0* a1);
void r240make(T240* C,T0* a1);
T6 r240off(T240* C);
T6 r240conforms_to(T240* C,T0* a1);
T0* r240twin(T240* C);
T6 r453is_equal(T453* C,T0* a1);
T6 r453se_assigned_from(T0* a1);
T0* r453make(T2 a1);
T6 r453conforms_to(T453* C,T0* a1);
T0* r453resize(T0* a1,T2 a2);
T0* r453twin(T453* C);
T2 r115new_capacity(T2 a1);
void r115copy(T115* C,T0* a1);
void r115force(T115* C,T0* a1,T0* a2);
void r115make_clashes(T115* C,T2 a1);
T0* r115cursor_item(T115* C,T0* a1);
void r115search_position(T115* C,T0* a1);
T6 r115is_equal(T115* C,T0* a1);
void r115remove_traversing_cursor(T115* C,T0* a1);
void r115clone_slots(T115* C);
void r115keys_resize(T115* C,T2 a1);
T0* r115item(T115* C,T0* a1);
void r115clone_clashes(T115* C);
void r115move_all_cursors_after(T115* C);
void r115make_items(T115* C,T2 a1);
void r115add_traversing_cursor(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
T0* r115clone(T0* a1);
T6 r115same_type(T115* C,T0* a1);
void r115make(T115* C,T2 a1);
void r115clone_items(T115* C);
T6 r115cursor_after(T0* a1);
T6 r115conforms_to(T115* C,T0* a1);
T6 r115has(T115* C,T0* a1);
void r115make_keys(T115* C,T2 a1);
T2 r115hash_position(T115* C,T0* a1);
void r115cursor_forth(T115* C,T0* a1);
void r115items_resize(T115* C,T2 a1);
void r115clone_keys(T115* C);
void r115make_with_equality_testers(T115* C,T2 a1,T0* a2,T0* a3);
void r115resize(T115* C,T2 a1);
T6 r115cursor_same_position(T0* a1,T0* a2);
void r115cursor_start(T115* C,T0* a1);
void r115clashes_resize(T115* C,T2 a1);
void r115slots_resize(T115* C,T2 a1);
T0* r115twin(T115* C);
T0* r115new_cursor(T115* C);
void r115make_slots(T115* C,T2 a1);
T2 r115new_modulus(T2 a1);
T6 r115cursor_off(T0* a1);
void r142copy(T142* C,T0* a1);
void r142set(T142* C,T0* a1,T6 a2,T6 a3);
T6 r142is_equal(T142* C,T0* a1);
T6 r142same_position(T142* C,T0* a1);
T6 r142se_assigned_from(T0* a1);
T6 r142is_last(T142* C);
T6 r142same_type(T142* C,T0* a1);
void r142make(T142* C,T0* a1);
T6 r142conforms_to(T142* C,T0* a1);
void r142set_after(T142* C);
T0* r142twin(T142* C);
T6 r124is_equal(T124* C,T0* a1);
T6 r124se_assigned_from(T0* a1);
T0* r124make(T2 a1);
T6 r124conforms_to(T124* C,T0* a1);
T0* r124resize(T0* a1,T2 a2);
T0* r124twin(T124* C);
void r619copy(T619* C,T0* a1);
void r619append_last(T619* C,T0* a1);
T0* r619cursor_item(T0* a1);
T6 r619is_equal(T619* C,T0* a1);
void r619remove_traversing_cursor(T619* C,T0* a1);
void r619cursor_go_after(T619* C,T0* a1);
void r619move_all_cursors_after(T619* C);
void r619add_traversing_cursor(T619* C,T0* a1);
T6 r619se_assigned_from(T0* a1);
T6 r619same_type(T619* C,T0* a1);
void r619make(T619* C);
T6 r619cursor_after(T0* a1);
T6 r619conforms_to(T619* C,T0* a1);
void r619cursor_forth(T619* C,T0* a1);
void r619make_from_linear(T619* C,T0* a1);
void r619cursor_start(T619* C,T0* a1);
T0* r619twin(T619* C);
void r619force_last(T619* C,T0* a1);
T0* r619new_cursor(T619* C);
T6 r619cursor_off(T0* a1);
void r84copy(T84* C,T0* a1);
T0* r84cursor_item(T0* a1);
T6 r84is_equal(T84* C,T0* a1);
void r84remove_traversing_cursor(T84* C,T0* a1);
void r84move_all_cursors_after(T84* C);
void r84add_traversing_cursor(T84* C,T0* a1);
T6 r84se_assigned_from(T0* a1);
T6 r84same_type(T84* C,T0* a1);
void r84make(T84* C);
T6 r84cursor_after(T0* a1);
T6 r84conforms_to(T84* C,T0* a1);
void r84cursor_forth(T84* C,T0* a1);
void r84cursor_start(T84* C,T0* a1);
T0* r84twin(T84* C);
void r84force_last(T84* C,T0* a1);
T0* r84new_cursor(T84* C);
T6 r84cursor_off(T0* a1);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
T6 r127conforms_to(T127* C,T0* a1);
T6 r127test(T0* a1,T0* a2);
T0* r127twin(T127* C);
void r392copy(T392* C,T0* a1);
T6 r392is_equal(T392* C,T0* a1);
T6 r392same_position(T392* C,T0* a1);
T6 r392se_assigned_from(T0* a1);
T6 r392same_type(T392* C,T0* a1);
T6 r392off(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
void r289copy(T289* C,T0* a1);
void r289wipe_out(T289* C);
void r289make_clashes(T289* C,T2 a1);
void r289search_position(T289* C,T2 a1);
T6 r289is_equal(T289* C,T0* a1);
void r289remove_traversing_cursor(T289* C,T0* a1);
void r289clone_slots(T289* C);
T0* r289item(T289* C,T2 a1);
void r289clone_clashes(T289* C);
void r289make_items(T289* C,T2 a1);
void r289move_all_cursors_after(T289* C);
void r289add_traversing_cursor(T289* C,T0* a1);
T6 r289se_assigned_from(T0* a1);
T0* r289clone(T0* a1);
T6 r289same_type(T289* C,T0* a1);
void r289slots_wipe_out(T289* C);
void r289clashes_wipe_out(T289* C);
void r289clone_items(T289* C);
T6 r289conforms_to(T289* C,T0* a1);
T6 r289has(T289* C,T2 a1);
void r289make_keys(T289* C,T2 a1);
T2 r289hash_position(T289* C,T2 a1);
void r289items_wipe_out(T289* C);
void r289clone_keys(T289* C);
void r289make_with_equality_testers(T289* C,T2 a1,T0* a2,T0* a3);
T6 r289cursor_same_position(T0* a1,T0* a2);
T0* r289twin(T289* C);
void r289keys_wipe_out(T289* C);
T0* r289new_cursor(T289* C);
void r289make_slots(T289* C,T2 a1);
T2 r289new_modulus(T2 a1);
T6 r289cursor_off(T0* a1);
T6 r265is_equal(T265* C,T0* a1);
T6 r265se_assigned_from(T0* a1);
T6 r265conforms_to(T265* C,T0* a1);
T6 r265test(T0* a1,T0* a2);
T0* r265twin(T265* C);
void r421copy(T421* C,T0* a1);
T6 r421is_equal(T421* C,T0* a1);
T6 r421same_position(T421* C,T0* a1);
T6 r421se_assigned_from(T0* a1);
T6 r421same_type(T421* C,T0* a1);
void r421make(T421* C,T0* a1);
T6 r421off(T421* C);
T6 r421conforms_to(T421* C,T0* a1);
T0* r421twin(T421* C);
void r252copy(T252* C,T0* a1);
T0* r252keys_item(T252* C,T2 a1);
void r252make_clashes(T252* C,T2 a1);
T0* r252cursor_item(T252* C,T0* a1);
void r252search_position(T252* C,T0* a1);
T6 r252is_equal(T252* C,T0* a1);
void r252remove_traversing_cursor(T252* C,T0* a1);
void r252clone_slots(T252* C);
T0* r252item(T252* C,T0* a1);
void r252clone_clashes(T252* C);
void r252move_all_cursors_after(T252* C);
void r252make_items(T252* C,T2 a1);
void r252add_traversing_cursor(T252* C,T0* a1);
T6 r252se_assigned_from(T0* a1);
T0* r252clone(T0* a1);
T6 r252same_type(T252* C,T0* a1);
void r252make(T252* C,T2 a1);
void r252clone_items(T252* C);
T6 r252cursor_after(T0* a1);
T6 r252conforms_to(T252* C,T0* a1);
T6 r252has(T252* C,T0* a1);
void r252make_keys(T252* C,T2 a1);
T2 r252hash_position(T252* C,T0* a1);
void r252cursor_forth(T252* C,T0* a1);
void r252clone_keys(T252* C);
void r252make_with_equality_testers(T252* C,T2 a1,T0* a2,T0* a3);
T6 r252cursor_same_position(T0* a1,T0* a2);
void r252cursor_start(T252* C,T0* a1);
T0* r252twin(T252* C);
T0* r252new_cursor(T252* C);
void r252make_slots(T252* C,T2 a1);
T2 r252new_modulus(T2 a1);
T6 r252cursor_off(T0* a1);
T6 r557is_equal(T557* C,T0* a1);
T6 r557se_assigned_from(T0* a1);
T0* r557make(T2 a1);
T6 r557conforms_to(T557* C,T0* a1);
T0* r557resize(T0* a1,T2 a2);
T0* r557twin(T557* C);
void r554copy(T554* C,T0* a1);
T6 r554is_equal(T554* C,T0* a1);
T6 r554same_position(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
T6 r554same_type(T554* C,T0* a1);
T6 r554off(T554* C);
T6 r554conforms_to(T554* C,T0* a1);
T0* r554twin(T554* C);
void r400copy(T400* C,T0* a1);
T6 r400is_equal(T400* C,T0* a1);
void r400remove_traversing_cursor(T400* C,T0* a1);
void r400move_all_cursors_after(T400* C);
void r400add_traversing_cursor(T400* C,T0* a1);
T6 r400se_assigned_from(T0* a1);
T0* r400clone(T0* a1);
T6 r400cursor_before(T0* a1);
T6 r400same_type(T400* C,T0* a1);
void r400make(T400* C,T2 a1);
T6 r400cursor_after(T0* a1);
T6 r400conforms_to(T400* C,T0* a1);
T6 r400cursor_same_position(T0* a1,T0* a2);
T0* r400twin(T400* C);
T0* r400new_cursor(T400* C);
T6 r400cursor_off(T0* a1);
void r411copy(T411* C,T0* a1);
T6 r411is_equal(T411* C,T0* a1);
T6 r411same_position(T411* C,T0* a1);
T6 r411se_assigned_from(T0* a1);
T6 r411same_type(T411* C,T0* a1);
T6 r411off(T411* C);
T6 r411conforms_to(T411* C,T0* a1);
T0* r411twin(T411* C);
void r61copy(T61* C,T0* a1);
T6 r61is_equal(T61* C,T0* a1);
void r61remove_traversing_cursor(T61* C,T0* a1);
void r61move_all_cursors_after(T61* C);
void r61add_traversing_cursor(T61* C,T0* a1);
T6 r61se_assigned_from(T0* a1);
T6 r61same_type(T61* C,T0* a1);
void r61make(T61* C);
T6 r61conforms_to(T61* C,T0* a1);
void r61cursor_forth(T61* C,T0* a1);
void r61cursor_start(T61* C,T0* a1);
T0* r61twin(T61* C);
void r61force_last(T61* C,T0* a1);
T0* r61new_cursor(T61* C);
T6 r61cursor_off(T0* a1);
void r353copy(T353* C,T0* a1);
T0* r353keys_item(T353* C,T2 a1);
void r353make_clashes(T353* C,T2 a1);
void r353search_position(T353* C,T0* a1);
T6 r353is_equal(T353* C,T0* a1);
void r353remove_traversing_cursor(T353* C,T0* a1);
void r353clone_slots(T353* C);
T0* r353item(T353* C,T0* a1);
void r353clone_clashes(T353* C);
void r353move_all_cursors_after(T353* C);
void r353make_items(T353* C,T2 a1);
void r353add_traversing_cursor(T353* C,T0* a1);
T6 r353se_assigned_from(T0* a1);
T0* r353clone(T0* a1);
T6 r353same_type(T353* C,T0* a1);
void r353make(T353* C,T2 a1);
void r353clone_items(T353* C);
T6 r353conforms_to(T353* C,T0* a1);
T6 r353has(T353* C,T0* a1);
void r353make_keys(T353* C,T2 a1);
T2 r353hash_position(T353* C,T0* a1);
void r353clone_keys(T353* C);
void r353make_with_equality_testers(T353* C,T2 a1,T0* a2,T0* a3);
T6 r353cursor_same_position(T0* a1,T0* a2);
T0* r353twin(T353* C);
T0* r353new_cursor(T353* C);
void r353make_slots(T353* C,T2 a1);
T2 r353new_modulus(T2 a1);
T6 r353cursor_off(T0* a1);
T6 r762is_equal(T762* C,T0* a1);
T6 r762se_assigned_from(T0* a1);
void r762make(T762* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r762conforms_to(T762* C,T0* a1);
T0* r762twin(T762* C);
T6 r497is_equal(T497* C,T0* a1);
T6 r497se_assigned_from(T0* a1);
void r497make(T497* C,T0* a1,T2 a2,T2 a3);
T6 r497conforms_to(T497* C,T0* a1);
T0* r497twin(T497* C);
T6 r590is_equal(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r590Arguments(void);
void r590make(T590* C,T0* a1,T0* a2,T0* a3);
T0* r590message(T590* C,T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
T0* r590twin(T590* C);
T0* r590default_message(T590* C);
extern T0*oBC94STRING_;
T6 r652is_equal(T652* C,T0* a1);
T6 r652se_assigned_from(T0* a1);
T0* r652Arguments(void);
void r652make(T652* C,T0* a1,T0* a2,T0* a3);
T0* r652message(T652* C,T0* a1);
T6 r652conforms_to(T652* C,T0* a1);
T0* r652twin(T652* C);
T0* r652default_message(T652* C);
T6 r654is_equal(T654* C,T0* a1);
T0* r654new_tree_parser(T654* C);
T6 r654se_assigned_from(T0* a1);
T0* r654new_tree_parser_imp(T654* C);
T6 r654conforms_to(T654* C,T0* a1);
T0* r654twin(T654* C);
T6 r559is_equal(T559* C,T0* a1);
T6 r559se_assigned_from(T0* a1);
void r559make_with_variables(T559* C,T0* a1,T0* a2);
T6 r559conforms_to(T559* C,T0* a1);
extern T0*oBC178uc_cluster;
extern int fBC178uc_cluster;
T0* r559uc_cluster(void);
void r559parse_file(T559* C,T0* a1);
T0* r559twin(T559* C);
extern T0*oBC178uc_system;
extern int fBC178uc_system;
T0* r559uc_system(void);
extern T0*oBC30INPUT_STREAM_;
T6 r593is_equal(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
T0* r593Arguments(void);
void r593make(T593* C);
T0* r593message(T593* C,T0* a1);
T6 r593conforms_to(T593* C,T0* a1);
T0* r593twin(T593* C);
T0* r593default_message(T593* C);
T6 r618is_equal(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
void r618make(T618* C,T0* a1);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T6 r176is_equal(T176* C,T0* a1);
T6 r176se_assigned_from(T0* a1);
void r176make_with_variables(T176* C,T0* a1,T0* a2);
T6 r176conforms_to(T176* C,T0* a1);
T0* r176uc_cluster(void);
void r176parse_file(T176* C,T0* a1);
T0* r176twin(T176* C);
T0* r176uc_system(void);
T6 r197is_equal(T197* C,T0* a1);
T6 r197se_assigned_from(T0* a1);
void r197unmount_root(T197* C,T0* a1);
void r197make(T197* C,T0* a1);
void r197mount(T197* C,T0* a1);
T6 r197conforms_to(T197* C,T0* a1);
void r197unmount(T197* C);
T0* r197twin(T197* C);
void r197mount_root(T197* C,T0* a1);
void r202set_optimize(T202* C,T6 a1);
T6 r202is_equal(T202* C,T0* a1);
void r202set_ensure(T202* C,T6 a1);
T6 r202se_assigned_from(T0* a1);
void r202make(T202* C);
void r202set_check(T202* C,T6 a1);
T6 r202conforms_to(T202* C,T0* a1);
void r202set_invariant(T202* C,T6 a1);
void r202set_loop(T202* C,T6 a1);
void r202set_debug(T202* C,T6 a1);
T0* r202twin(T202* C);
void r202set_require(T202* C,T6 a1);
T6 r237is_equal(T237* C,T0* a1);
T6 r237se_assigned_from(T0* a1);
void r237make(T237* C,T0* a1,T2 a2,T0* a3);
T6 r237conforms_to(T237* C,T0* a1);
T0* r237twin(T237* C);
T6 r201has_exported_features(T201* C);
T6 r201is_equal(T201* C,T0* a1);
T6 r201se_assigned_from(T0* a1);
void r201merge(T201* C,T0* a1);
void r201make(T201* C);
T6 r201is_empty(T201* C);
T6 r201conforms_to(T201* C,T0* a1);
T0* r201cloned_externals(T201* C);
T6 r201has_include_directories(T201* C);
T6 r201has_link_libraries(T201* C);
T0* r201twin(T201* C);
T6 r207is_equal(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
extern T0*oBC35std;
T6 r207conforms_to(T207* C,T0* a1);
T0* r207twin(T207* C);
void r207make_standard(T207* C);
T6 r502is_equal(T502* C,T0* a1);
T6 r502se_assigned_from(T0* a1);
T6 r502conforms_to(T502* C,T0* a1);
T0* r502twin(T502* C);
void r563put(T563* C,T0* a1,T0* a2);
T6 r563is_equal(T563* C,T0* a1);
T0* r563item(T563* C,T0* a1);
T6 r563se_assigned_from(T0* a1);
void r563make(T563* C);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563twin(T563* C);
T6 r177is_equal(T177* C,T0* a1);
T6 r177se_assigned_from(T0* a1);
void r177make_with_variables(T177* C,T0* a1,T0* a2);
T6 r177conforms_to(T177* C,T0* a1);
T0* r177uc_cluster(void);
void r177parse_file(T177* C,T0* a1);
T0* r177twin(T177* C);
T0* r177uc_system(void);
void r131print_cluster(T131* C,T0* a1,T2 a2,T0* a3);
T6 r131is_equal(T131* C,T0* a1);
void r131print_externals(T0* a1,T2 a2,T0* a3);
void r131print_xml_cluster_file(T131* C,T0* a1,T0* a2);
T6 r131se_assigned_from(T0* a1);
void r131print_exported_class(T0* a1,T2 a2,T0* a3);
void r131print_clusters(T131* C,T0* a1,T2 a2,T0* a3);
T6 r131conforms_to(T131* C,T0* a1);
void r131generate_cluster(T131* C,T0* a1);
T0* r131twin(T131* C);
void r131print_options(T0* a1,T2 a2,T0* a3);
void r131print_indentation(T2 a1,T0* a2);
void r131print_link_libraries(T0* a1,T2 a2,T0* a3);
void r131generate_system(T131* C,T0* a1);
void r131print_xml_system_file(T131* C,T0* a1,T0* a2);
void r131print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r723is_equal(T723* C,T0* a1);
T6 r723se_assigned_from(T0* a1);
void r723old_read_character(T723* C);
T6 r723old_end_of_file(T723* C);
void r723make(T723* C);
T6 r723conforms_to(T723* C,T0* a1);
T0* r723twin(T723* C);
T6 r496is_equal(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
void r496make(T496* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r496conforms_to(T496* C,T0* a1);
T0* r496twin(T496* C);
T6 r596is_equal(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
T6 r596conforms_to(T596* C,T0* a1);
T6 r596is_undefined(T596* C);
T0* r596twin(T596* C);
T6 r760is_equal(T760* C,T0* a1);
T6 r760se_assigned_from(T0* a1);
void r760make(T760* C,T0* a1,T0* a2);
T6 r760conforms_to(T760* C,T0* a1);
T0* r760twin(T760* C);
T6 r592is_equal(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
T0* r592Arguments(void);
void r592make(T592* C,T0* a1);
T0* r592message(T592* C,T0* a1);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
T0* r592default_message(T592* C);
T6 r702is_closed(T702* C);
void r702old_close(T702* C);
T6 r702is_equal(T702* C,T0* a1);
T6 r702se_assigned_from(T0* a1);
void r702close(T702* C);
void r702make(T702* C,T0* a1);
void r702old_put_string(T702* C,T0* a1);
T6 r702conforms_to(T702* C,T0* a1);
void r702connect_to(T702* C,T0* a1);
void r702put_line(T702* C,T0* a1);
T0* r702twin(T702* C);
void r702open_write(T702* C);
T0* r206new_class(T0* a1,T2 a2,T0* a3);
T6 r206is_equal(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
T6 r206conforms_to(T206* C,T0* a1);
T0* r206twin(T206* C);
void r128print_cluster(T128* C,T0* a1,T0* a2);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
void r128print_ace_file(T128* C,T0* a1,T0* a2);
void r128print_exported_class(T0* a1,T2 a2,T0* a3);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128print_precompile_ace_file(T128* C,T0* a1,T0* a2);
void r128generate_cluster(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
void r128print_link_libraries(T0* a1,T0* a2);
void r128generate_system(T128* C,T0* a1);
void r128print_include_directories(T0* a1,T0* a2);
T6 r540is_equal(T540* C,T0* a1);
T539 r540item(T540* C);
T6 r540se_assigned_from(T0* a1);
T6 r540conforms_to(T540* C,T0* a1);
void r540make_from_character(T540* C,T3 a1);
T0* r540twin(T540* C);
T6 r759is_equal(T759* C,T0* a1);
T6 r759se_assigned_from(T0* a1);
void r759make_from_implementation(T759* C,T0* a1);
T6 r759conforms_to(T759* C,T0* a1);
T0* r759twin(T759* C);
void r660set_last_cell(T660* C,T0* a1);
void r660copy(T660* C,T0* a1);
void r660wipe_out(T660* C);
void r660remove_first(T660* C);
T0* r660cursor_item(T0* a1);
T6 r660cursor_is_last(T660* C,T0* a1);
T6 r660is_equal(T660* C,T0* a1);
void r660remove_traversing_cursor(T660* C,T0* a1);
void r660cursor_go_after(T660* C,T0* a1);
void r660move_all_cursors_after(T660* C);
void r660add_traversing_cursor(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
T6 r660cursor_before(T0* a1);
T6 r660same_type(T660* C,T0* a1);
void r660make(T660* C);
T0* r660first_element(T660* C);
void r660remove_last(T660* C);
T6 r660cursor_after(T0* a1);
T6 r660conforms_to(T660* C,T0* a1);
void r660cursor_forth(T660* C,T0* a1);
void r660move_last_cursors_after(T660* C);
void r660cursor_start(T660* C,T0* a1);
T0* r660twin(T660* C);
T0* r660new_cursor(T660* C);
T6 r660cursor_is_first(T660* C,T0* a1);
void r660remove_at_cursor(T660* C,T0* a1);
void r660put_last(T660* C,T0* a1);
void r660move_all_cursors(T660* C,T0* a1,T0* a2);
T6 r660cursor_off(T0* a1);
extern T0*oBC106template_expander;
T6 r105is_equal(T105* C,T0* a1);
T6 r105se_assigned_from(T0* a1);
void r105make(T105* C);
T6 r105conforms_to(T105* C,T0* a1);
T0* r105twin(T105* C);
T0* r105expanded_variables(T105* C,T0* a1);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
void r134make(T134* C,T0* a1,T0* a2);
T6 r134conforms_to(T134* C,T0* a1);
void r134execute(T134* C);
T0* r134twin(T134* C);
T6 r751is_equal(T751* C,T0* a1);
T6 r751se_assigned_from(T0* a1);
void r751make(T751* C,T0* a1,T0* a2);
T6 r751conforms_to(T751* C,T0* a1);
T0* r751twin(T751* C);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
T0* r101Arguments(void);
void r101make(T101* C,T0* a1);
T0* r101message(T101* C,T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T0* r101default_message(T101* C);
void r104print_cluster(T104* C,T0* a1,T0* a2);
void r104print_loadpath_clusters(T104* C,T0* a1,T0* a2);
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104print_loadpath_cluster(T104* C,T0* a1,T0* a2);
void r104print_ace_file(T104* C,T0* a1,T0* a2);
void r104generate_cecil_file(T104* C,T0* a1);
void r104print_exported_class(T0* a1,T0* a2);
void r104print_clusters(T104* C,T0* a1,T0* a2);
T6 r104conforms_to(T104* C,T0* a1);
void r104generate_cluster(T104* C,T0* a1);
T0* r104twin(T104* C);
void r104print_options(T0* a1,T2 a2,T0* a3);
void r104print_exported_classes(T0* a1,T0* a2);
void r104print_indentation(T2 a1,T0* a2);
void r104print_link_libraries(T0* a1,T0* a2);
void r104generate_system(T104* C,T0* a1);
void r104print_include_directories(T0* a1,T0* a2);
T6 r753is_equal(T753* C,T0* a1);
T6 r753se_assigned_from(T0* a1);
void r753make_from_implementation(T753* C,T0* a1);
T6 r753conforms_to(T753* C,T0* a1);
T0* r753twin(T753* C);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157put_line(T0* a1);
T0* r157twin(T157* C);
T6 r713is_equal(T713* C,T0* a1);
T6 r713se_assigned_from(T0* a1);
T0* r713Arguments(void);
void r713make(T713* C,T0* a1);
T0* r713message(T713* C,T0* a1);
T6 r713conforms_to(T713* C,T0* a1);
T0* r713twin(T713* C);
T0* r713default_message(T713* C);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133execute_generators(T133* C,T0* a1);
void r133make(T133* C,T0* a1,T0* a2);
T6 r133conforms_to(T133* C,T0* a1);
void r133execute(T133* C);
T0* r133twin(T133* C);
T6 r198is_equal(T198* C,T0* a1);
T6 r198se_assigned_from(T0* a1);
void r198unmount_root(T198* C,T0* a1);
void r198make(T198* C,T0* a1,T0* a2);
void r198mount(T198* C,T0* a1);
T6 r198conforms_to(T198* C,T0* a1);
void r198unmount(T198* C);
T0* r198twin(T198* C);
void r198set_excluded(T198* C,T0* a1);
void r198mount_root(T198* C,T0* a1);
void r471yy_build_tables(T471* C);
extern T0*oBC472yy_meta_template;
extern int fBC472yy_meta_template;
T0* r471yy_meta_template(void);
extern T0*oBC471yycheck_template;
extern int fBC471yycheck_template;
T0* r471yycheck_template(void);
T6 r471is_equal(T471* C,T0* a1);
extern T0*oBC472yy_accept_template;
extern int fBC472yy_accept_template;
T0* r471yy_accept_template(void);
extern T0*oBC472yy_base_template;
extern int fBC472yy_base_template;
T0* r471yy_base_template(void);
void r471yy_build_parser_tables(T471* C);
T6 r471se_assigned_from(T0* a1);
extern T0*oBC471yytable_template;
extern int fBC471yytable_template;
T0* r471yytable_template(void);
T0* r471yyfixed_array(T0* a1);
extern T0*oBC471yypgoto_template;
extern int fBC471yypgoto_template;
T0* r471yypgoto_template(void);
extern T0*oBC481Empty_buffer;
extern int fBC481Empty_buffer;
T0* r471Empty_buffer(void);
void r471yy_set_content(T471* C,T0* a1);
extern T0*oBC472yy_nxt_template;
extern int fBC472yy_nxt_template;
T0* r471yy_nxt_template(void);
extern T0*oBC472yy_chk_template;
extern int fBC472yy_chk_template;
T0* r471yy_chk_template(void);
extern T0*oBC471yypact_template;
extern int fBC471yypact_template;
T0* r471yypact_template(void);
void r471make_parser_skeleton(T471* C);
extern T0*oBC471yydefact_template;
extern int fBC471yydefact_template;
T0* r471yydefact_template(void);
extern T0*oBC472yy_def_template;
extern int fBC472yy_def_template;
T0* r471yy_def_template(void);
T6 r471conforms_to(T471* C,T0* a1);
extern T0*oBC472yy_ec_template;
extern int fBC472yy_ec_template;
T0* r471yy_ec_template(void);
void r471make_with_buffer(T471* C,T0* a1);
void r471yy_initialize(T471* C);
extern T0*oBC471yyr1_template;
extern int fBC471yyr1_template;
T0* r471yyr1_template(void);
void r471make_with_factory(T471* C,T0* a1,T0* a2,T0* a3);
T0* r471twin(T471* C);
void r471yy_load_input_buffer(T471* C);
extern T0*oBC471yytranslate_template;
extern int fBC471yytranslate_template;
T0* r471yytranslate_template(void);
T0* r471yy_fixed_array(T0* a1);
extern T0*oBC471yyr2_template;
extern int fBC471yyr2_template;
T0* r471yyr2_template(void);
extern T0*oBC471yydefgoto_template;
extern int fBC471yydefgoto_template;
T0* r471yydefgoto_template(void);
void r471make_eiffel_scanner(T471* C,T0* a1,T0* a2);
void r180disconnect(T180* C);
T6 r180is_equal(T180* C,T0* a1);
T6 r180se_assigned_from(T0* a1);
void r180read_character(T180* C);
T6 r180conforms_to(T180* C,T0* a1);
T6 r180end_of_input(T180* C);
void r180connect_to(T180* C,T0* a1);
T0* r180twin(T180* C);
T6 r241is_equal(T241* C,T0* a1);
T6 r241se_assigned_from(T0* a1);
void r241make(T241* C,T0* a1,T0* a2);
T6 r241conforms_to(T241* C,T0* a1);
T0* r241twin(T241* C);
T6 r586is_equal(T586* C,T0* a1);
T6 r586se_assigned_from(T0* a1);
T0* r586Arguments(void);
void r586make(T586* C,T0* a1,T0* a2);
T0* r586message(T586* C,T0* a1);
T6 r586conforms_to(T586* C,T0* a1);
T0* r586twin(T586* C);
T0* r586default_message(T586* C);
T6 r174is_equal(T174* C,T0* a1);
T6 r174se_assigned_from(T0* a1);
T6 r174conforms_to(T174* C,T0* a1);
void r174make_basic_classes(T174* C);
T0* r174eiffel_class(T174* C,T0* a1);
void r174set_mounted_clusters(T174* C,T0* a1);
void r174make_with_factory(T174* C,T0* a1,T0* a2,T0* a3);
T0* r174twin(T174* C);
void r174merge_externals(T174* C);
extern T0*oBC178uc_optimize;
extern int fBC178uc_optimize;
T0* r189uc_optimize(void);
void r189validate_named_cluster(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_check;
extern int fBC178uc_check;
T0* r189uc_check(void);
void r189validate_root(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_external;
extern int fBC178uc_external;
T0* r189uc_external(void);
void r189validate_external(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_exclude;
extern int fBC178uc_exclude;
T0* r189uc_exclude(void);
void r189validate_mount(T189* C,T0* a1,T0* a2);
T6 r189is_equal(T189* C,T0* a1);
void r189validate_system_doc(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_invariant;
extern int fBC178uc_invariant;
T0* r189uc_invariant(void);
T6 r189se_assigned_from(T0* a1);
void r189validate_cluster(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_description;
extern int fBC178uc_description;
T0* r189uc_description(void);
extern T0*oBC178uc_mount;
extern int fBC178uc_mount;
T0* r189uc_mount(void);
extern T0*oBC178uc_debug;
extern int fBC178uc_debug;
T0* r189uc_debug(void);
extern T0*oBC178uc_option;
extern int fBC178uc_option;
T0* r189uc_option(void);
extern T0*oBC178uc_root;
extern int fBC178uc_root;
T0* r189uc_root(void);
void r189validate_system(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_feature;
extern int fBC178uc_feature;
T0* r189uc_feature(void);
extern T0*oBC178uc_class;
extern int fBC178uc_class;
T0* r189uc_class(void);
extern T0*oBC178uc_loop;
extern int fBC178uc_loop;
T0* r189uc_loop(void);
T6 r189conforms_to(T189* C,T0* a1);
void r189validate_cluster_doc(T189* C,T0* a1,T0* a2);
void r189validate_export(T189* C,T0* a1,T0* a2);
T0* r189uc_cluster(void);
void r189validate_exclude(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_export;
extern int fBC178uc_export;
T0* r189uc_export(void);
extern T0*oBC178uc_link_library;
extern int fBC178uc_link_library;
T0* r189uc_link_library(void);
extern T0*oBC178uc_include_dir;
extern int fBC178uc_include_dir;
T0* r189uc_include_dir(void);
extern T0*oBC178uc_location;
extern int fBC178uc_location;
T0* r189uc_location(void);
T0* r189twin(T189* C);
T0* r189uc_system(void);
extern T0*oBC178uc_creation;
extern int fBC178uc_creation;
T0* r189uc_creation(void);
extern T0*oBC178uc_name;
extern int fBC178uc_name;
T0* r189uc_name(void);
extern T0*oBC178uc_require;
extern int fBC178uc_require;
T0* r189uc_require(void);
void r189validate_option(T189* C,T0* a1,T0* a2);
extern T0*oBC178uc_ensure;
extern int fBC178uc_ensure;
T0* r189uc_ensure(void);
void r130print_cluster(T130* C,T0* a1,T0* a2);
T6 r130is_equal(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
void r130print_ace_file(T130* C,T0* a1,T0* a2);
void r130print_exported_class(T0* a1,T2 a2,T0* a3);
void r130print_component(T0* a1);
void r130print_clusters(T130* C,T0* a1,T0* a2);
T6 r130conforms_to(T130* C,T0* a1);
void r130print_precompile_ace_file(T130* C,T0* a1,T0* a2);
void r130generate_cluster(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130print_link_libraries(T0* a1,T0* a2);
void r130generate_system(T130* C,T0* a1);
void r130print_include_directories(T0* a1,T0* a2);
T6 r589is_equal(T589* C,T0* a1);
T6 r589se_assigned_from(T0* a1);
T0* r589Arguments(void);
void r589make(T589* C,T0* a1,T0* a2,T0* a3);
T0* r589message(T589* C,T0* a1);
T6 r589conforms_to(T589* C,T0* a1);
T0* r589twin(T589* C);
T0* r589default_message(T589* C);
T6 r700is_equal(T700* C,T0* a1);
T6 r700se_assigned_from(T0* a1);
T0* r700Arguments(void);
void r700make(T700* C,T0* a1);
T0* r700message(T700* C,T0* a1);
T6 r700conforms_to(T700* C,T0* a1);
T0* r700twin(T700* C);
T0* r700default_message(T700* C);
T6 r567is_equal(T567* C,T0* a1);
T6 r567se_assigned_from(T0* a1);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567expand_from_hash_table(T0* a1,T0* a2);
T0* r567twin(T567* C);
void r494set_position(T494* C,T2 a1,T2 a2,T2 a3);
T6 r494is_equal(T494* C,T0* a1);
extern T2 oBC494lower;
extern int fBC494lower;
T2 r494lower(void);
T6 r494se_assigned_from(T0* a1);
void r494make(T494* C,T0* a1);
extern T0*oBC183STRING_BUFFER_;
T6 r494conforms_to(T494* C,T0* a1);
void r494make_from_buffer(T494* C,T0* a1);
T0* r494twin(T494* C);
extern T0*oBC537utils;
T2 r537item_code(T537* C,T2 a1);
T6 r537is_equal(T537* C,T0* a1);
T6 r537se_assigned_from(T0* a1);
void r537make(T537* C);
void r537insert(T537* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r537add_to_storage_count(T537* C,T2 a1);
void r537insert_code(T537* C,T2 a1,T2 a2);
T6 r537conforms_to(T537* C,T0* a1);
extern T6 oBC537optimize_access;
void r537storage_move(T537* C,T2 a1,T2 a2,T2 a3);
T0* r537twin(T537* C);
void r537find_position(T537* C,T2 a1);
T6 r500same_identifier(T500* C,T0* a1);
T6 r500is_equal(T500* C,T0* a1);
T6 r500se_assigned_from(T0* a1);
T6 r500same_type(T500* C,T0* a1);
void r500make(T500* C,T0* a1,T0* a2);
T6 r500same_feature_name(T500* C,T0* a1);
T6 r500conforms_to(T500* C,T0* a1);
T0* r500twin(T500* C);
T6 r236is_equal(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
void r236make(T236* C,T0* a1);
T6 r236conforms_to(T236* C,T0* a1);
void r236set_current_class(T236* C,T0* a1);
T0* r236twin(T236* C);
T6 r560is_equal(T560* C,T0* a1);
T6 r560se_assigned_from(T0* a1);
void r560make_from_implementation(T560* C,T0* a1);
void r560_185Pmake_from_implementation(T560* C,T0* a1);
T6 r560conforms_to(T560* C,T0* a1);
T0* r560twin(T560* C);
T6 r560cursor_off(T560* C,T0* a1);
void r129print_cluster(T129* C,T0* a1,T0* a2);
void r129print_esd_file(T129* C,T0* a1,T0* a2);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
T0* r129clone(T0* a1);
void r129print_clusters(T129* C,T0* a1,T0* a2);
T0* r129remove_all_characters(T0* a1,T3 a2);
T6 r129conforms_to(T129* C,T0* a1);
void r129print_eld_file(T129* C,T0* a1,T0* a2);
void r129generate_cluster(T129* C,T0* a1);
T0* r129twin(T129* C);
void r129print_options(T0* a1,T2 a2,T0* a3);
void r129print_indentation(T2 a1,T0* a2);
void r129generate_system(T129* C,T0* a1);
T0* r536create_representation(T536* C);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
T6 r536conforms_to(T536* C,T0* a1);
T0* r536twin(T536* C);
T6 r594is_equal(T594* C,T0* a1);
T6 r594se_assigned_from(T0* a1);
T0* r594Arguments(void);
void r594make(T594* C,T0* a1);
T0* r594message(T594* C,T0* a1);
T6 r594conforms_to(T594* C,T0* a1);
T0* r594twin(T594* C);
T0* r594default_message(T594* C);
T6 r504is_equal(T504* C,T0* a1);
T6 r504se_assigned_from(T0* a1);
void r504make(T504* C,T0* a1,T0* a2);
T6 r504conforms_to(T504* C,T0* a1);
T0* r504twin(T504* C);
T0* r190uc_optimize(void);
T0* r190uc_check(void);
T0* r190uc_external(void);
T0* r190uc_exclude(void);
T0* r190new_cluster(T190* C,T0* a1);
T0* r190new_exported_feature(T0* a1);
T6 r190is_equal(T190* C,T0* a1);
T0* r190new_export(T0* a1);
T0* r190uc_invariant(void);
T6 r190se_assigned_from(T0* a1);
T0* r190new_options(T0* a1);
T0* r190new_universe(T190* C,T0* a1);
T6 r190is_false(T0* a1);
T0* r190uc_mount(void);
T0* r190uc_debug(void);
T0* r190uc_option(void);
void r190make(T190* C,T0* a1,T0* a2);
T0* r190uc_root(void);
extern T0*oBC191Execution_environment;
T0* r190uc_feature(void);
T0* r190uc_class(void);
T0* r190uc_loop(void);
T6 r190conforms_to(T190* C,T0* a1);
extern T0*oBC178uc_abstract;
extern int fBC178uc_abstract;
T0* r190uc_abstract(void);
T0* r190new_externals(T0* a1);
extern T0*oBC178uc_alias;
extern int fBC178uc_alias;
T0* r190uc_alias(void);
T0* r190uc_cluster(void);
extern T0*oBC178uc_enable;
extern int fBC178uc_enable;
T0* r190uc_enable(void);
T0* r190uc_export(void);
T0* r190uc_link_library(void);
T6 r190is_true(T0* a1);
T0* r190uc_include_dir(void);
T0* r190uc_location(void);
T0* r190twin(T190* C);
T0* r190new_mount(T190* C,T0* a1);
T0* r190uc_creation(void);
T0* r190uc_require(void);
T0* r190uc_name(void);
T0* r190uc_ensure(void);
T6 r755is_equal(T755* C,T0* a1);
T6 r755se_assigned_from(T0* a1);
void r755make(T755* C,T0* a1,T0* a2);
T6 r755conforms_to(T755* C,T0* a1);
T0* r755twin(T755* C);
void r665copy(T665* C,T0* a1);
void r665make_clashes(T665* C,T2 a1);
void r665search_position(T665* C,T0* a1);
T6 r665is_equal(T665* C,T0* a1);
void r665remove_traversing_cursor(T665* C,T0* a1);
void r665clone_slots(T665* C);
T0* r665item(T665* C,T0* a1);
void r665clone_clashes(T665* C);
void r665move_all_cursors_after(T665* C);
void r665make_items(T665* C,T2 a1);
void r665add_traversing_cursor(T665* C,T0* a1);
T6 r665se_assigned_from(T0* a1);
T0* r665clone(T0* a1);
T6 r665same_type(T665* C,T0* a1);
void r665make(T665* C,T2 a1);
void r665clone_items(T665* C);
T6 r665conforms_to(T665* C,T0* a1);
T6 r665has(T665* C,T0* a1);
void r665make_keys(T665* C,T2 a1);
T2 r665hash_position(T665* C,T0* a1);
void r665clone_keys(T665* C);
void r665make_with_equality_testers(T665* C,T2 a1,T0* a2,T0* a3);
T6 r665cursor_same_position(T0* a1,T0* a2);
T0* r665twin(T665* C);
T0* r665new_cursor(T665* C);
void r665make_slots(T665* C,T2 a1);
T2 r665new_modulus(T2 a1);
T6 r665cursor_off(T0* a1);
T6 r591is_equal(T591* C,T0* a1);
T6 r591se_assigned_from(T0* a1);
T0* r591Arguments(void);
void r591make(T591* C,T0* a1,T0* a2);
T0* r591message(T591* C,T0* a1);
T6 r591conforms_to(T591* C,T0* a1);
T0* r591twin(T591* C);
T0* r591default_message(T591* C);
void r196copy(T196* C,T0* a1);
T0* r196substring(T196* C,T2 a1,T2 a2);
T2 r196occurrences(T196* C,T539 a1);
T2 r196count(T196* C);
T2 r196item_code(T196* C,T2 a1);
T6 r196is_equal(T196* C,T0* a1);
T539 r196item(T196* C,T2 a1);
extern T0*oBC196utf8utils;
void r196append_uc_string(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196make_from_string(T196* C,T0* a1);
T2 r196index_of(T196* C,T539 a1,T2 a2);
void r196make(T196* C,T2 a1);
void r196append_string(T196* C,T0* a1);
T2 r196hash_code(T196* C);
T6 r196conforms_to(T196* C,T0* a1);
void r196append_ucc_code(T196* C,T2 a1);
T6 r196empty(T196* C);
T0* r196twin(T196* C);
T0* r196to_utf8(T196* C);
T2 r196three_way_comparison(T196* C,T0* a1);
extern T0*oBC196i_settings;
void r196make_from_utf8(T196* C,T0* a1);
T6 r77is_equal(T77* C,T0* a1);
T6 r77se_assigned_from(T0* a1);
void r77execute_generators(T77* C,T0* a1);
void r77make(T77* C,T0* a1,T0* a2);
T6 r77conforms_to(T77* C,T0* a1);
void r77execute(T77* C);
T0* r77twin(T77* C);
T6 r754is_equal(T754* C,T0* a1);
T6 r754se_assigned_from(T0* a1);
void r754make_from_implementation(T754* C,T0* a1);
T6 r754conforms_to(T754* C,T0* a1);
T0* r754twin(T754* C);
void r757set_last_cell(T757* C,T0* a1);
void r757copy(T757* C,T0* a1);
void r757wipe_out(T757* C);
void r757remove_first(T757* C);
T0* r757cursor_item(T0* a1);
T6 r757cursor_is_last(T757* C,T0* a1);
void r757add_attributes(T757* C,T0* a1,T0* a2);
T6 r757is_equal(T757* C,T0* a1);
void r757remove_traversing_cursor(T757* C,T0* a1);
void r757make_root(T757* C,T0* a1,T0* a2);
void r757cursor_go_after(T757* C,T0* a1);
void r757move_all_cursors_after(T757* C);
void r757add_traversing_cursor(T757* C,T0* a1);
T6 r757se_assigned_from(T0* a1);
T6 r757cursor_before(T0* a1);
void r757make_child(T757* C,T0* a1,T0* a2,T0* a3);
T6 r757same_type(T757* C,T0* a1);
void r757remove_last(T757* C);
T6 r757cursor_after(T0* a1);
T6 r757conforms_to(T757* C,T0* a1);
void r757cursor_forth(T757* C,T0* a1);
void r757move_last_cursors_after(T757* C);
void r757cursor_start(T757* C,T0* a1);
T0* r757twin(T757* C);
void r757force_last(T757* C,T0* a1);
T0* r757new_cursor(T757* C);
T6 r757cursor_is_first(T757* C,T0* a1);
void r757remove_at_cursor(T757* C,T0* a1);
void r757put_last(T757* C,T0* a1);
void r757move_all_cursors(T757* C,T0* a1,T0* a2);
T6 r757cursor_off(T0* a1);
T0* r749out(T749* C);
T6 r749is_equal(T749* C,T0* a1);
T6 r749se_assigned_from(T0* a1);
T0* r749clone(T0* a1);
void r749out_in_tagged_out_memory(T749* C);
T6 r749conforms_to(T749* C,T0* a1);
T0* r749twin(T749* C);
void r722fill(T722* C);
void r722compact_left(T722* C);
T2 r722count(T722* C);
void r722set_position(T722* C,T2 a1,T2 a2,T2 a3);
T6 r722is_equal(T722* C,T0* a1);
T2 r722lower(void);
T6 r722se_assigned_from(T0* a1);
void r722make_from_string(T722* C,T0* a1);
T6 r722conforms_to(T722* C,T0* a1);
void r722make_from_buffer(T722* C,T0* a1);
void r722resize(T722* C);
void r722make_with_size(T722* C,T0* a1,T2 a2);
T0* r722twin(T722* C);
void r722set_file(T722* C,T0* a1);
void r722flush(T722* C);
T6 r136is_equal(T136* C,T0* a1);
T6 r136se_assigned_from(T0* a1);
void r136make(T136* C);
void r136old_put_string(T0* a1);
T6 r136conforms_to(T136* C,T0* a1);
void r136put_line(T0* a1);
T0* r136twin(T136* C);
T0* r203full_name(T203* C,T3 a1);
void r203set_mounted_subclusters(T203* C,T0* a1);
T6 r203is_equal(T203* C,T0* a1);
void r203remove_cluster(T203* C,T0* a1);
void r203set_subclusters(T203* C,T0* a1);
T6 r203se_assigned_from(T0* a1);
void r203unmount_root(T203* C,T0* a1);
T0* r203full_pathname(T203* C);
void r203make(T203* C,T0* a1,T0* a2);
void r203mount(T203* C,T0* a1);
T6 r203conforms_to(T203* C,T0* a1);
void r203unmount(T203* C);
T0* r203twin(T203* C);
void r203merge_externals(T203* C,T0* a1);
void r203mount_root(T203* C,T0* a1);
T6 r158is_equal(T158* C,T0* a1);
T6 r158se_assigned_from(T0* a1);
void r158make(T158* C);
void r158old_put_string(T0* a1);
T6 r158conforms_to(T158* C,T0* a1);
void r158put_line(T0* a1);
T0* r158twin(T158* C);
T0* r727out(T727* C);
T6 r727is_equal(T727* C,T0* a1);
T6 r727se_assigned_from(T0* a1);
T0* r727clone(T0* a1);
void r727make(T727* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r727conforms_to(T727* C,T0* a1);
T0* r727twin(T727* C);
T6 r542is_equal(T542* C,T0* a1);
T6 r542se_assigned_from(T0* a1);
void r542make_from_implementation(T542* C,T0* a1);
T6 r542conforms_to(T542* C,T0* a1);
T0* r542twin(T542* C);
T6 r635is_equal(T635* C,T0* a1);
T6 r635se_assigned_from(T0* a1);
void r635make(T635* C,T0* a1,T0* a2);
T6 r635conforms_to(T635* C,T0* a1);
T0* r635twin(T635* C);
T0* r656next_open_composite(T0* a1);
void r656enable_position_table(T656* C);
T6 r656is_equal(T656* C,T0* a1);
void r656_182Pparse_from_stream(T656* C,T0* a1);
void r656on_content(T656* C,T0* a1);
T6 r656se_assigned_from(T0* a1);
void r656on_processing_instruction(T656* C,T0* a1,T0* a2);
void r656on_start_tag(T656* C,T0* a1,T0* a2,T0* a3);
void r656make_from_implementation_event(T656* C,T0* a1);
void r656make_from_implementation(T656* C,T0* a1);
void r656handle_position(T656* C,T0* a1);
void r656on_comment(T656* C,T0* a1);
void r656parse_from_stream(T656* C,T0* a1);
void r656on_end_tag(T656* C,T0* a1,T0* a2);
T6 r656conforms_to(T656* C,T0* a1);
void r656reset(T656* C);
T0* r656twin(T656* C);
T6 r181is_equal(T181* C,T0* a1);
T6 r181se_assigned_from(T0* a1);
void r181make_from_implementation(T181* C,T0* a1);
T6 r181is_correct(T181* C);
T6 r181conforms_to(T181* C,T0* a1);
T0* r181last_error_extended_description(T181* C);
T0* r181twin(T181* C);
T6 r538is_equal(T538* C,T0* a1);
T6 r538se_assigned_from(T0* a1);
void r538make(T538* C);
void r538insert(T538* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r538insert_code(T538* C,T2 a1,T2 a2);
void r538move(T538* C,T2 a1,T2 a2,T2 a3);
T6 r538conforms_to(T538* C,T0* a1);
void r538storage_ensure_capacity(T538* C,T2 a1);
T0* r538twin(T538* C);
void r192_195Pmake_from_implementation(T192* C,T0* a1);
T6 r192is_equal(T192* C,T0* a1);
T6 r192has_attribute_by_name(T192* C,T0* a1);
T6 r192se_assigned_from(T0* a1);
T0* r192attribute_by_name(T192* C,T0* a1);
void r192_185P_195Pmake_from_implementation(T192* C,T0* a1);
void r192make_from_implementation(T192* C,T0* a1);
T6 r192equal(T0* a1,T0* a2);
T6 r192conforms_to(T192* C,T0* a1);
T0* r192twin(T192* C);
T6 r192has_element_by_name(T192* C,T0* a1);
T0* r192element_by_name(T192* C,T0* a1);
T6 r192cursor_off(T192* C,T0* a1);
void r718yy_do_action(T718* C,T2 a1);
extern T0*oBC719yytable_template;
extern int fBC719yytable_template;
T0* r718yytable_template(void);
T0* r718empty_ucstring(void);
void r718make_parser_skeleton(T718* C);
T2 r718yy_at_beginning_of_line(T718* C);
void r718fatal_error(T0* a1);
T0* r718yytype1(T0* a1);
T0* r718yytype2(T0* a1);
T0* r718yytype3(T0* a1);
T0* r718yytype4(T0* a1);
void r718handle_found_text(T718* C);
void r718parse(T718* C);
void r718set_input_buffer(T718* C,T0* a1);
T2 r718yy_translate(T718* C,T2 a1);
extern T0*oBC720yy_ec_template;
extern int fBC720yy_ec_template;
T0* r718yy_ec_template(void);
void r718yy_execute_action(T718* C,T2 a1);
extern T0*oBC719yytranslate_template;
extern int fBC719yytranslate_template;
T0* r718yytranslate_template(void);
void r718clear_stacks(T718* C);
extern T0*oBC720yy_def_template;
extern int fBC720yy_def_template;
T0* r718yy_def_template(void);
T3 r718text_item(T718* C,T2 a1);
void r718yy_load_input_buffer(T718* C);
extern T539 oBC719uc_collon;
extern int fBC719uc_collon;
T539 r718uc_collon(void);
extern T0*oBC719yyr1_template;
extern int fBC719yyr1_template;
T0* r718yyr1_template(void);
void r718make_with_buffer(T718* C,T0* a1);
T2 r718yy_null_trans_state(T718* C,T2 a1);
T0* r718position(T718* C);
extern T0*oBC720yy_accept_template;
extern int fBC720yy_accept_template;
T0* r718yy_accept_template(void);
void r718read_token(T718* C);
extern T0*oBC719yyr2_template;
extern int fBC719yyr2_template;
T0* r718yyr2_template(void);
T2 r718yy_previous_state(T718* C);
extern T0*oBC719yypgoto_template;
extern int fBC719yypgoto_template;
T0* r718yypgoto_template(void);
void r718yy_refill_input_buffer(T718* C);
T0* r718yy_fixed_array(T0* a1);
T6 r718conforms_to(T718* C,T0* a1);
extern T0*oBC720yy_meta_template;
extern int fBC720yy_meta_template;
T0* r718yy_meta_template(void);
extern T0*oBC720yy_base_template;
extern int fBC720yy_base_template;
T0* r718yy_base_template(void);
T0* r718twin(T718* C);
T0* r718clone(T0* a1);
T0* r718new_file_buffer(T0* a1);
void r718yy_initialize(T718* C);
void r718reset(T718* C);
T0* r718text(T718* C);
extern T0*oBC720yy_nxt_template;
extern int fBC720yy_nxt_template;
T0* r718yy_nxt_template(void);
void r718parse_from_stream(T718* C,T0* a1);
void r718yy_set_line_column(T718* C);
void r718yy_build_parser_tables(T718* C);
T0* r718split_name_and_prefix(T0* a1);
T6 r718is_equal(T718* C,T0* a1);
void r718report_error(T718* C,T0* a1);
extern T0*oBC719yydefact_template;
extern int fBC719yydefact_template;
T0* r718yydefact_template(void);
extern T0*oBC720yy_chk_template;
extern int fBC720yy_chk_template;
T0* r718yy_chk_template(void);
extern T0*oBC719yycheck_template;
extern int fBC719yycheck_template;
T0* r718yycheck_template(void);
void r718make(T718* C);
T0* r718yyfixed_array(T0* a1);
void r718yy_clear_all(T718* C);
extern T0*oBC719yydefgoto_template;
extern int fBC719yydefgoto_template;
T0* r718yydefgoto_template(void);
void r718yy_set_content(T718* C,T0* a1);
extern T0*oBC719yypact_template;
extern int fBC719yypact_template;
T0* r718yypact_template(void);
void r718set_start_condition(T718* C,T2 a1);
T6 r718se_assigned_from(T0* a1);
void r718yy_build_tables(T718* C);
T6 r66is_equal(T66* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r66command_arguments(void);
T6 r66se_assigned_from(T0* a1);
T6 r66conforms_to(T66* C,T0* a1);
T0* r66twin(T66* C);
T0* r66argument(T2 a1);
T6 r653is_equal(T653* C,T0* a1);
T6 r653se_assigned_from(T0* a1);
void r653make(T653* C);
T6 r653conforms_to(T653* C,T0* a1);
T0* r653twin(T653* C);
void r32_33Preport_error(T32* C,T0* a1);
void r32report_missing_element_error(T32* C,T0* a1,T0* a2,T0* a3);
T6 r32is_equal(T32* C,T0* a1);
void r32report_no_parser_available_error(T32* C);
T6 r32se_assigned_from(T0* a1);
void r32report_missing_attribute_error(T32* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC34null_output_stream;
extern int fBC34null_output_stream;
T0* r32null_output_stream(void);
void r32report_cannot_write_file_error(T32* C,T0* a1);
void r32make(T32* C);
void r32report_cannot_read_file_error(T32* C,T0* a1);
void r32report_parser_error(T32* C,T0* a1);
T0* r32message(T0* a1);
void r32report_invalid_expression_error(T32* C,T0* a1,T0* a2);
T6 r32conforms_to(T32* C,T0* a1);
void r32report_not_xace_file_error(T32* C,T0* a1);
void r32report_wrong_root_element_error(T32* C,T0* a1,T0* a2);
void r32report_unknown_element_error(T32* C,T0* a1,T0* a2,T0* a3);
T0* r32twin(T32* C);
void r32report_error(T32* C,T0* a1);
T6 r562is_expression_true(T562* C,T0* a1);
T6 r562should_strip_element(T562* C,T0* a1,T0* a2);
T6 r562is_equal(T562* C,T0* a1);
T6 r562se_assigned_from(T0* a1);
void r562preprocess_composite(T562* C,T0* a1,T0* a2);
extern T0*oBC178uc_equal;
extern int fBC178uc_equal;
T0* r562uc_equal(void);
T6 r562is_valid_expression(T0* a1);
extern T0*oBC178uc_closing_curly_brace;
extern int fBC178uc_closing_curly_brace;
T0* r562uc_closing_curly_brace(void);
void r562make(T562* C,T0* a1,T0* a2);
extern T0*oBC178uc_unless;
extern int fBC178uc_unless;
T0* r562uc_unless(void);
extern T0*oBC178uc_if;
extern int fBC178uc_if;
T0* r562uc_if(void);
T6 r562conforms_to(T562* C,T0* a1);
extern T0*oBC178uc_opening_curly_brace;
extern int fBC178uc_opening_curly_brace;
T0* r562uc_opening_curly_brace(void);
T0* r562twin(T562* C);
void r562expand_attribute_variables(T562* C,T0* a1);
extern T0*oBC178uc_dollar;
extern int fBC178uc_dollar;
T0* r562uc_dollar(void);
T0* r199split_on_first(T0* a1,T3 a2);
T6 r199is_equal(T199* C,T0* a1);
void r199remove_cluster(T199* C,T0* a1);
T6 r199se_assigned_from(T0* a1);
T0* r199clone(T0* a1);
void r199make_empty(T199* C);
void r199make(T199* C,T0* a1);
void r199set_parent(T199* C,T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199twin(T199* C);
T0* r199split_string(T0* a1,T3 a2);
void r199merge_externals(T199* C,T0* a1);
extern T0*oBC135error;
extern int fBC135error;
T0* r135error(void);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
extern T0*oBC135input;
extern int fBC135input;
T0* r135input(void);
extern T0*oBC135output;
extern int fBC135output;
T0* r135output(void);
T6 r135conforms_to(T135* C,T0* a1);
T0* r135twin(T135* C);
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
extern T0*oBC42developer_exception_name_memory;
void r42raise(T42* C,T0* a1);
T6 r42is_equal(T42* C,T0* a1);
T6 r42se_assigned_from(T0* a1);
T6 r42conforms_to(T42* C,T0* a1);
T0* r42twin(T42* C);
T6 r37is_equal(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
T6 r37conforms_to(T37* C,T0* a1);
T6 r37_px_60(T37* C,T0* a1);
T0* r37twin(T37* C);
T6 r172is_equal(T172* C,T0* a1);
T6 r172se_assigned_from(T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r568is_equal(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
T6 r568conforms_to(T568* C,T0* a1);
T3 r568to_character(T2 a1);
T0* r568twin(T568* C);
extern T0*oBC534factory;
extern int fBC534factory;
T0* r534factory(void);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r698is_equal(T698* C,T0* a1);
T6 r698se_assigned_from(T0* a1);
T6 r698conforms_to(T698* C,T0* a1);
T0* r698twin(T698* C);
T0* r179name(T0* a1);
T6 r179is_equal(T179* C,T0* a1);
T0* r179make_file_open_read(T0* a1);
T6 r179se_assigned_from(T0* a1);
T6 r179is_open_read(T0* a1);
void r179close(T0* a1);
T6 r179conforms_to(T179* C,T0* a1);
T6 r179end_of_input(T0* a1);
T2 r179read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r179twin(T179* C);
void r16process_cluster(T16* C);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
void r16process_xace_file(T16* C,T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
void r16process_system(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_output(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1,T0* a2);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r98is_equal(T98* C,T0* a1);
T6 r98se_assigned_from(T0* a1);
T6 r98is_integer(T0* a1);
T6 r98same_case_insensitive(T0* a1,T0* a2);
T0* r98make(T2 a1);
T6 r98conforms_to(T98* C,T0* a1);
T2 r98case_insensitive_hash_code(T0* a1);
T0* r98twin(T98* C);
T6 r539_px_60(T539* C,T539 a1);
T6 r539_px_62(T539* C,T539 a1);
T6 r595is_equal(T595* C,T0* a1);
T0* r595variable_value(T0* a1);
T6 r595se_assigned_from(T0* a1);
T0* r595get_environment_variable(T0* a1);
T6 r595conforms_to(T595* C,T0* a1);
T0* r595interpreted_string(T0* a1);
T0* r595twin(T595* C);
T2 r564nr_of_following_octets(T3 a1);
T6 r564is_equal(T564* C,T0* a1);
T6 r564se_assigned_from(T0* a1);
void r564read_code(T564* C,T0* a1,T2 a2);
void r564put_code(T2 a1,T0* a2,T2 a3);
void r564read_following_octet(T564* C,T0* a1);
T6 r564conforms_to(T564* C,T0* a1);
T3 r564code_to_character(T2 a1);
T2 r564octet_size(T2 a1);
T0* r564twin(T564* C);
extern T0*oBC564specific;
T6 r564is_leading_octet(T3 a1);
T2 r564read_leading_octet(T564* C,T0* a1,T2 a2);
T6 r696is_equal(T696* C,T0* a1);
T6 r696se_assigned_from(T0* a1);
T0* r696new_event_parser_imp(void);
T6 r696conforms_to(T696* C,T0* a1);
T0* r696twin(T696* C);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
T6 r76conforms_to(T76* C,T0* a1);
T6 r76_px_60(T76* C,T0* a1);
T0* r76twin(T76* C);
T0* r495substring(T0* a1,T2 a2,T2 a3);
T6 r495is_equal(T495* C,T0* a1);
T6 r495se_assigned_from(T0* a1);
void r495move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r495make(T2 a1);
void r495copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495resize(T0* a1,T2 a2);
T2 r495copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r495twin(T495* C);
T6 r766is_equal(T766* C,T0* a1);
T539 r766item(T766* C);
T6 r766se_assigned_from(T0* a1);
T6 r766conforms_to(T766* C,T0* a1);
T0* r766twin(T766* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 767
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms564_336971577;
extern T7*ms104_1975394;
extern T7*ms128_2122613;
extern T7*ms128_2071896;
extern T7*ms131_716962150;
extern T7*ms481_0;
extern T7*ms129_50294715;
extern T7*ms104_1254606809;
extern T7*ms131_728778652;
extern T7*ms131_1147aaa;
extern T7*ms16_16036;
extern T7*ms128_2259966;
extern T7*ms131_902203551;
extern T7*ms128_1978068077;
extern T7*ms178_434665;
extern T7*ms130_2120668389;
extern T7*ms128_710556862;
extern T7*ms131_29282762;
extern T7*ms104_1205954912;
extern T7*ms131_2057213670;
extern T7*ms129_171550;
extern T7*ms719_38;
extern T7*ms128_1957581;
extern T7*ms719_60;
extern T7*ms719_62;
extern T7*ms175_12184;
extern T7*ms178_627;
extern T7*ms130_1975394a;
extern T7*ms129_1159034081;
extern T7*ms16_1975394;
extern T7*ms178_10208843;
extern T7*ms484_1338477769a;
extern T7*ms130_710556862;
extern T7*ms128_2116863196a;
extern T7*ms104_211;
extern T7*ms129_434665a;
extern T7*ms129_945472392;
extern T7*ms104_322;
extern T7*ms131_1147aaaa;
extern T7*ms104_298;
extern T7*ms131_1147a;
extern T7*ms178_9558536;
extern T7*ms104_1288001260;
extern T7*ms178_1988096;
extern T7*ms131_688131499;
extern T7*ms564_1684857857;
extern T7*ms130_2104;
extern T7*ms129_1566359773;
extern T7*ms130_1644;
extern T7*ms104_1319327951;
extern T7*ms16_403021;
extern T7*ms129_251473637;
extern T7*ms130_214a;
extern T7*ms16_676;
extern T7*ms16_691;
extern T7*ms131_17715339;
extern T7*ms131_2074569081;
extern T7*ms130_229a;
extern T7*ms178_10559665;
extern T7*ms131_214679746;
extern T7*ms29_1878185725;
extern T7*ms104_1837939351;
extern T7*ms104_1366344811;
extern T7*ms130_3175;
extern T7*ms104_1957581;
extern T7*ms136_10;
extern T7*ms16_3301a;
extern T7*ms16_16036a;
extern T7*ms128_10208843a;
extern T7*ms129_3175;
extern T7*ms128_3175aa;
extern T7*ms129_1420513890;
extern T7*ms652_462378139;
extern T7*ms129_273179090;
extern T7*ms130_1300398076;
extern T7*ms131_759686277;
extern T7*ms129_1975394a;
extern T7*ms720_1173251759;
extern T7*ms104_452889;
extern T7*ms130_214;
extern T7*ms130_229;
extern T7*ms130_10208843a;
extern T7*ms129_1173002866;
extern T7*ms131_68075515;
extern T7*ms130_452889a;
extern T7*ms104_1300398076;
extern T7*ms178_1975394;
extern T7*ms129_2094241;
extern T7*ms130_10208843;
extern T7*ms178_2024949725;
extern T7*ms131_848471798;
extern T7*ms131_232aa;
extern T7*ms131_2058319081a;
extern T7*ms130_3175aa;
extern T7*ms178_408086;
extern T7*ms128_1644a;
extern T7*ms136_447851;
extern T7*ms130_1957581a;
extern T7*ms128_1254606809a;
extern T7*ms16_881365921a;
extern T7*ms131_1284536290;
extern T7*ms128_17696;
extern T7*ms128_2120668389;
extern T7*ms131_232;
extern T7*ms593_1214914019;
extern T7*ms131_33314532;
extern T7*ms131_1694763045;
extern T7*ms131_2036724355;
extern T7*ms16_0;
extern T7*ms129_1555371030;
extern T7*ms18_0;
extern T7*ms129_9751715;
extern T7*ms719_38a;
extern T7*ms34_17323;
extern T7*ms719_60a;
extern T7*ms157_10;
extern T7*ms719_62a;
extern T7*ms131_1592316470;
extern T7*ms128_1957581aa;
extern T7*ms130_10031271;
extern T7*ms723_89510;
extern T7*ms590_454072470;
extern T7*ms128_452889;
extern T7*ms104_1940534;
extern T7*ms178_402346;
extern T7*ms16_2246326;
extern T7*ms479_195717202;
extern T7*ms158_10;
extern T7*ms128_3175a;
extern T7*ms129_1975394;
extern T7*ms178_77350;
extern T7*ms178_78002;
extern T7*ms700_512683247;
extern T7*ms19_270;
extern T7*ms179_1338085634;
extern T7*ms131_90563609;
extern T7*ms130_1975394;
extern T7*ms131_711181240;
extern T7*ms178_78263;
extern T7*ms130_1254606809;
extern T7*ms104_10208843;
extern T7*ms131_1147aaaaa;
extern T7*ms130_326648287;
extern T7*ms178_78490;
extern T7*ms484_1338477769;
extern T7*ms130_1957581aa;
extern T7*ms131_1366569951a;
extern T7*ms104_9702826;
extern T7*ms104_431271;
extern T7*ms129_608082268;
extern T7*ms128_1300398076;
extern T7*ms131_1580634761;
extern T7*ms16_881365921aa;
extern T7*ms131_29373882;
extern T7*ms104_9702034;
extern T7*ms104_1957581a;
extern T7*ms129_1254555893;
extern T7*ms178_85591;
extern T7*ms131_1746542221;
extern T7*ms728_35397;
extern T7*ms130_452889;
extern T7*ms130_2122613;
extern T7*ms567_36;
extern T7*ms128_200;
extern T7*ms16_391651;
extern T7*ms128_214;
extern T7*ms131_1122793821;
extern T7*ms128_229;
extern T7*ms728_36572;
extern T7*ms190_79251;
extern T7*ms16_438001;
extern T7*ms104_1644;
extern T7*ms130_1433293834;
extern T7*ms130_2259966;
extern T7*ms104_3175;
extern T7*ms178_9909665;
extern T7*ms131_151663112;
extern T7*ms130_1957581;
extern T7*ms182_40;
extern T7*ms182_41;
extern T7*ms594_988446515;
extern T7*ms131_1250879089;
extern T7*ms567_125;
extern T7*ms131_1147;
extern T7*ms591_820451542;
extern T7*ms567_303;
extern T7*ms16_3301;
extern T7*ms129_194;
extern T7*ms128_17696a;
extern T7*ms592_229;
extern T7*ms16_11153106;
extern T7*ms131_145423907;
extern T7*ms130_1849679439;
extern T7*ms16_3653;
extern T7*ms128_2104;
extern T7*ms131_232a;
extern T7*ms128_1644;
extern T7*ms131_1147aa;
extern T7*ms16_452889;
extern T7*ms128_214a;
extern T7*ms130_15934;
extern T7*ms128_229a;
extern T7*ms130_1644a;
extern T7*ms128_3175aaa;
extern T7*ms728_899222;
extern T7*ms104_93956277;
extern T7*ms128_3175;
extern T7*ms128_1975394a;
extern T7*ms131_1637983727;
extern T7*ms178_2185421;
extern T7*ms104_1885954800;
extern T7*ms29_1415324896;
extern T7*ms130_17696;
extern T7*ms16_881365921aaa;
extern T7*ms129_452889;
extern T7*ms128_169452;
extern T7*ms175_0;
extern T7*ms129_9909665;
extern T7*ms130_2087910503;
extern T7*ms131_1131165100;
extern T7*ms131_168231777;
extern T7*ms128_1254606809;
extern T7*ms16_676a;
extern T7*ms129_2002089708;
extern T7*ms104_15934;
extern T7*ms178_10866961;
extern T7*ms179_0;
extern T7*ms16_691a;
extern T7*ms131_848471798a;
extern T7*ms130_17696a;
extern T7*ms175_1384826;
extern T7*ms131_1366569951;
extern T7*ms128_452889a;
extern T7*ms104_17696;
extern T7*ms104_2087910503;
extern T7*ms101_1515383187;
extern T7*ms130_1978068077;
extern T7*ms589_1179444653;
extern T7*ms586_54177410;
extern T7*ms178_2032026;
extern T7*ms130_3175a;
extern T7*ms178_51843716;
extern T7*ms104_659330894;
extern T7*ms178_16821;
extern T7*ms178_16942;
extern T7*ms104_2087913448;
extern T7*ms104_1849679439;
extern T7*ms128_408086;
extern T7*ms702_10;
extern T7*ms178_17696;
extern T7*ms104_10049231;
extern T7*ms175_2104;
extern T7*ms129_1365895512;
extern T7*ms16_1687334349;
extern T7*ms131_144147230;
extern T7*ms129_1253824715;
extern T7*ms178_399591;
extern T7*ms129_440790;
extern T7*ms483_1539961075;
extern T7*ms129_440825;
extern T7*ms129_48758637;
extern T7*ms128_10208843;
extern T7*ms129_17696;
extern T7*ms178_1289562514;
extern T7*ms18_0a;
extern T7*ms128_659330894;
extern T7*ms178_452889;
extern T7*ms104_696515478;
extern T7*ms128_2116863196;
extern T7*ms129_434665;
extern T7*ms131_145423907a;
extern T7*ms16_881365921;
extern T7*ms190_18036;
extern T7*ms158_447584;
extern T7*ms128_1957581a;
extern T7*ms131_2058319081;
extern T7*ms178_1228681540;
extern T7*ms131_11272528;
extern T7*ms128_1975394;
extern T7*ms131_6860887;
extern T7*ms128_1849679439;
extern T7*ms130_659330894;
extern T7*ms130_408086;
extern T7*ms129_2029061136;
extern T7*ms178_451090;
extern T7*ms728_5467;
extern T7*ms130_49483191;
extern T7*ms131_1840815548;
extern T7*ms131_339006862;
extern T7*ms130_1254606809a;
extern T7*ms129_3175a;
extern T7*ms129_1090800287;
extern T7*ms104_710556862;
extern T7*ms128_2087910503;
extern T7*ms131_1943945795;
extern T7*ms713_1606053737;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma488(int argc,...);
T0* X695new_event_parser_imp(T0*C);
void X29execute(T0*C);
T0* X145item(T0*C);
T6 X145after(T0*C);
void X145forth(T0*C);
void X145start(T0*C);
T2 X146count(T0*C);
T0* X146cursor_item(T0*C,T0* a1);
T6 X146is_empty(T0*C);
T6 X146cursor_after(T0*C,T0* a1);
void X146cursor_forth(T0*C,T0* a1);
void X146cursor_start(T0*C,T0* a1);
T0* X146new_cursor(T0*C);
T0* X528cursor_item(T0*C,T0* a1);
void X528cursor_go_after(T0*C,T0* a1);
T6 X528cursor_after(T0*C,T0* a1);
void X528cursor_forth(T0*C,T0* a1);
void X528cursor_start(T0*C,T0* a1);
T6 X528cursor_off(T0*C,T0* a1);
T539 X540item(T0*C);
T0* X529parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X194parent(T0*C);
T6 X265test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X490clear_all(T0*C,T0* a1);
T0* X490make(T0*C,T2 a1);
T0* X490resize(T0*C,T0* a1,T2 a2);
void X95put_new_line(T0*C);
void X95put_line(T0*C,T0* a1);
void X95put_character(T0*C,T3 a1);
void X95put_string(T0*C,T0* a1);
void X195force_last(T0*C,T0* a1);
T0* X195new_cursor(T0*C);
void X195remove_at_cursor(T0*C,T0* a1);
T0* X195parent(T0*C);
void X262put(T0*C,T0* a1,T2 a2);
T0* X262item(T0*C,T2 a1);
void X262set_all_with(T0*C,T0* a1);
void X262resize(T0*C,T2 a1);
void X494fill(T0*C);
T0* X531new_cursor(T0*C);
void X531remove_at_cursor(T0*C,T0* a1);
void X531put_last(T0*C,T0* a1);
T0* X531parent(T0*C);
void X42raise(T0*C,T0* a1);
T2 X486count(T0*C);
T2 X486item(T0*C,T2 a1);
T2 X486lower(T0*C);
T0* X286make(T0*C,T2 a1);
T0* X286resize(T0*C,T0* a1,T2 a2);
void X177parse_file(T0*C,T0* a1);
void X489put(T0*C,T0* a1,T2 a2);
T0* X489item(T0*C,T2 a1);
void X489set_all_with(T0*C,T0* a1);
void X489resize(T0*C,T2 a1);
T6 X688cursor_is_last(T0*C,T0* a1);
void X688remove_traversing_cursor(T0*C,T0* a1);
void X688cursor_go_after(T0*C,T0* a1);
void X688add_traversing_cursor(T0*C,T0* a1);
void X688cursor_forth(T0*C,T0* a1);
void X688cursor_start(T0*C,T0* a1);
T6 X688cursor_is_first(T0*C,T0* a1);
T2 X533item_code(T0*C,T2 a1);
void X533insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X533insert_code(T0*C,T2 a1,T2 a2);
T6 X173is_connected(T0*C);
void X173read_character(T0*C);
T6 X173end_of_input(T0*C);
T3 X173last_character(T0*C);
T0* X92default_message(T0*C);
void X79generate_cluster(T0*C,T0* a1);
void X79generate_system(T0*C,T0* a1);
T6 T36toT6(T0* source);
T0* T699toT698(int source);
T0* T697toT696(int source);
T0* T2toT37(T2 source);
T2 T37toT2(T0* source);
T0* T6toT36(T6 source);

#ifdef __cplusplus
}
#endif
