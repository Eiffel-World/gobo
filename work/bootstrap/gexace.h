#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #11 (Fri November 23th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S302 T302;
typedef struct S743 T743;
typedef struct S762 T762;
typedef struct S515 T515;
typedef struct S487 T487;
typedef struct S591 T591;
typedef struct S476 T476;
typedef struct S599 T599;
typedef struct S662 T662;
typedef struct S101 T101;
typedef struct S153 T153;
typedef struct S664 T664;
typedef struct S248 T248;
typedef struct S172 T172;
typedef struct S574 T574;
typedef struct S580 T580;
typedef struct S602 T602;
typedef struct S628 T628;
typedef struct S415 T415;
typedef struct S611 T611;
typedef struct S571 T571;
typedef struct S256 T256;
typedef struct S189 T189;
typedef struct S703 T703;
typedef struct S385 T385;
typedef struct S216 T216;
typedef struct S234 T234;
typedef struct S221 T221;
typedef struct S134 T134;
typedef struct S504 T504;
typedef struct S220 T220;
typedef struct S232 T232;
typedef struct S226 T226;
typedef struct S520 T520;
typedef struct S640 T640;
typedef struct S647 T647;
typedef struct S709 T709;
typedef struct S40 T40;
typedef struct S643 T643;
typedef struct S506 T506;
typedef struct S344 T344;
typedef struct S575 T575;
typedef struct S277 T277;
typedef struct S398 T398;
typedef struct S579 T579;
typedef struct S121 T121;
typedef struct S305 T305;
typedef struct S190 T190;
typedef struct S88 T88;
typedef struct S730 T730;
typedef struct S130 T130;
typedef struct S164 T164;
typedef struct S725 T725;
typedef struct S607 T607;
typedef struct S36 T36;
typedef struct S511 T511;
typedef struct S514 T514;
typedef struct S416 T416;
typedef struct S463 T463;
typedef struct S340 T340;
typedef struct S140 T140;
typedef struct S746 T746;
typedef struct S471 T471;
typedef struct S626 T626;
typedef struct S606 T606;
typedef struct S659 T659;
typedef struct S171 T171;
typedef struct S760 T760;
typedef struct S601 T601;
typedef struct S589 T589;
typedef struct S30 T30;
typedef struct S710 T710;
typedef struct S228 T228;
typedef struct S553 T553;
typedef struct S370 T370;
typedef struct S541 T541;
typedef struct S433 T433;
typedef struct S646 T646;
typedef struct S225 T225;
typedef struct S127 T127;
typedef struct S447 T447;
typedef struct S682 T682;
typedef struct S552 T552;
typedef struct S307 T307;
typedef struct S229 T229;
typedef struct S759 T759;
typedef struct S671 T671;
typedef struct S104 T104;
typedef struct S217 T217;
typedef struct S133 T133;
typedef struct S751 T751;
typedef struct S100 T100;
typedef struct S731 T731;
typedef struct S324 T324;
typedef struct S103 T103;
typedef struct S251 T251;
typedef struct S753 T753;
typedef struct S222 T222;
typedef struct S156 T156;
typedef struct S690 T690;
typedef struct S715 T715;
typedef struct S35 T35;
typedef struct S442 T442;
typedef struct S399 T399;
typedef struct S518 T518;
typedef struct S326 T326;
typedef struct S525 T525;
typedef struct S443 T443;
typedef struct S151 T151;
typedef struct S72 T72;
typedef int T605;
typedef struct S132 T132;
typedef struct S64 T64;
typedef struct S490 T490;
typedef struct S615 T615;
typedef struct S7 T7;
typedef struct S260 T260;
typedef struct S595 T595;
typedef struct S187 T187;
typedef struct S203 T203;
typedef struct S389 T389;
typedef struct S458 T458;
typedef struct S528 T528;
typedef struct S129 T129;
typedef struct S768 T768;
typedef struct S320 T320;
typedef struct S343 T343;
typedef struct S598 T598;
typedef struct S707 T707;
typedef struct S708 T708;
typedef struct S577 T577;
typedef struct S351 T351;
typedef struct S273 T273;
typedef struct S718 T718;
typedef struct S287 T287;
typedef struct S462 T462;
typedef struct S510 T510;
typedef struct S694 T694;
typedef struct S469 T469;
typedef struct S298 T298;
typedef struct S16 T16;
typedef struct S537 T537;
typedef struct S255 T255;
typedef struct S572 T572;
typedef struct S128 T128;
typedef struct S729 T729;
typedef struct S97 T97;
typedef struct S716 T716;
typedef struct S533 T533;
typedef struct S603 T603;
typedef struct S522 T522;
typedef struct S218 T218;
typedef struct S388 T388;
typedef struct S755 T755;
typedef struct S204 T204;
typedef struct S259 T259;
typedef struct S676 T676;
typedef struct S600 T600;
typedef struct S117 T117;
typedef struct S472 T472;
typedef struct S576 T576;
typedef struct S114 T114;
typedef struct S76 T76;
typedef struct S604 T604;
typedef struct S754 T754;
typedef struct S757 T757;
typedef struct S749 T749;
typedef struct S141 T141;
typedef struct S724 T724;
typedef struct S135 T135;
typedef struct S706 T706;
typedef struct S157 T157;
typedef struct S727 T727;
typedef struct S554 T554;
typedef struct S645 T645;
typedef struct S123 T123;
typedef struct S551 T551;
typedef struct S99 T99;
typedef struct S505 T505;
typedef struct S693 T693;
typedef struct S667 T667;
typedef struct S196 T196;
typedef struct S206 T206;
typedef struct S75 T75;
typedef struct S629 T629;
typedef struct S720 T720;
typedef struct S83 T83;
typedef struct S126 T126;
typedef struct S281 T281;
typedef struct S411 T411;
typedef struct S308 T308;
typedef struct S530 T530;
typedef struct S284 T284;
typedef struct S440 T440;
typedef struct S271 T271;
typedef struct S569 T569;
typedef struct S566 T566;
typedef struct S65 T65;
typedef struct S419 T419;
typedef struct S663 T663;
typedef struct S31 T31;
typedef struct S430 T430;
typedef struct S60 T60;
typedef struct S372 T372;

/*C Header Pass 2 :*/
typedef T0**T475;
typedef T0**T346;
typedef T6*T613;
typedef T0**T283;
typedef T0**T231;
typedef T0**T446;
typedef T0**T236;
typedef T0**T532;
typedef T0**T74;
typedef T3*T9;
typedef T0**T697;
typedef T0**T304;
typedef T0**T418;
typedef T0**T391;
typedef T0**T279;
typedef T2*T119;
typedef T0**T509;

/*C Header Pass 3 :*/

/*C Header Pass 4 :*/
struct S302{Tid id;T304 _storage;T2 _capacity;T2 _upper;};
extern T302 M302;
struct S743{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T743 M743;
struct S762{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T762 M762;
struct S515{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T515 M515;
struct S487{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T487 M487;
struct S591{Tid id;T0* _item;T0* _right;};
extern T591 M591;
struct S476{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T476 M476;
struct S599{Tid id;T0* _parameters;};
extern T599 M599;
struct S662{Tid id;T0* _parameters;};
extern T662 M662;
struct S101{Tid id;T0* _item;T0* _right;};
extern T101 M101;
struct S153{Tid id;T0* _item;T0* _right;};
extern T153 M153;
struct S664{Tid id;T0* _event_parser_factory;};
extern T664 M664;
struct S248{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T248 M248;
struct S172{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T172 M172;
struct S574{Tid id;T0* _variables;T0* _error_handler;};
extern T574 M574;
struct S580{Tid id;T0* _first;T0* _second;};
extern T580 M580;
struct S602{Tid id;T0* _parameters;};
extern T602 M602;
struct S628{Tid id;T0* _class_name;T0* _features;};
extern T628 M628;
struct S415{Tid id;T418 _storage;T2 _capacity;T2 _upper;};
extern T415 M415;
struct S611{Tid id;T613 _storage;T2 _capacity;T2 _upper;};
extern T611 M611;
struct S571{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T571 M571;
struct S189{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T189 M189;
struct S703{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T703 M703;
struct S385{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T385 M385;
struct S216{Tid id;T0* _clusters;};
extern T216 M216;
struct S234{Tid id;T236 _storage;T2 _capacity;T2 _upper;};
extern T234 M234;
struct S221{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T221 M221;
struct S134{Tid id;};
extern T134 M134;
struct S256{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T256 M256;
struct S504{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T504 M504;
struct S220{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T220 M220;
struct S232{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T232 M232;
struct S226{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T226 M226;
struct S520{Tid id;T0* _parents;};
extern T520 M520;
struct S640{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T640 M640;
struct S647{Tid id;T0* _item;T0* _right;};
extern T647 M647;
struct S709{Tid id;};
extern T709 M709;
struct S40{Tid id;};
extern T40 M40;
struct S643{Tid id;T0* _item;T0* _right;};
extern T643 M643;
struct S506{Tid id;};
extern T506 M506;
struct S344{Tid id;};
extern T344 M344;
struct S575{Tid id;T0* _table;};
extern T575 M575;
struct S277{Tid id;T279 _storage;T2 _capacity;T2 _upper;};
extern T277 M277;
struct S398{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T398 M398;
struct S579{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T579 M579;
struct S121{Tid id;};
extern T121 M121;
struct S305{Tid id;};
extern T305 M305;
struct S190{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T190 M190;
struct S88{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T88 M88;
struct S730{Tid id;T0* _first;T0* _second;};
extern T730 M730;
struct S130{Tid id;T0* _output_filename;T0* _error_handler;};
extern T130 M130;
struct S164{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T164 M164;
struct S725{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T725 M725;
struct S607{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T607 M607;
struct S36{Tid id;T2 _item;};
extern T36 M36;
struct S511{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T511 M511;
struct S514{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T514 M514;
struct S416{Tid id;};
extern T416 M416;
struct S463{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T463 M463;
struct S340{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T340 M340;
struct S140{Tid id;T0* _first;T0* _second;};
extern T140 M140;
struct S746{Tid id;T0* _item;T0* _right;};
extern T746 M746;
struct S471{Tid id;T475 _storage;T2 _capacity;T2 _upper;};
extern T471 M471;
struct S626{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T626 M626;
struct S606{Tid id;T3 _value;};
extern T606 M606;
struct S659{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T659 M659;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S760{Tid id;T0* _parent;T0* _data;};
extern T760 M760;
struct S601{Tid id;T0* _parameters;};
extern T601 M601;
struct S589{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T589 M589;
struct S30{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T30 M30;
struct S710{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T710 M710;
struct S228{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T228 M228;
struct S553{Tid id;};
extern T553 M553;
struct S370{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T370 M370;
struct S541{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T541 M541;
struct S433{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T433 M433;
struct S646{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T646 M646;
struct S225{Tid id;};
extern T225 M225;
struct S127{Tid id;T0* _output_filename;T0* _error_handler;};
extern T127 M127;
struct S447{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T447 M447;
struct S682{Tid id;};
extern T682 M682;
struct S552{Tid id;};
extern T552 M552;
struct S307{Tid id;};
extern T307 M307;
struct S229{Tid id;T231 _storage;T2 _capacity;T2 _upper;};
extern T229 M229;
struct S759{Tid id;T0* _implementation;};
extern T759 M759;
struct S671{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T671 M671;
struct S104{Tid id;T0* _defined_values;};
extern T104 M104;
struct S133{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T133 M133;
struct S751{Tid id;T0* _parent;T0* _content;};
extern T751 M751;
struct S100{Tid id;T0* _parameters;};
extern T100 M100;
struct S731{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T731 M731;
struct S324{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T324 M324;
struct S103{Tid id;T0* _output_filename;T0* _error_handler;};
extern T103 M103;
struct S251{Tid id;};
extern T251 M251;
struct S753{Tid id;T0* _implementation;};
extern T753 M753;
struct S156{Tid id;T0* _name;};
extern T156 M156;
struct S690{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T690 M690;
struct S715{Tid id;T0* _parameters;};
extern T715 M715;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S442{Tid id;T446 _storage;T2 _capacity;T2 _upper;};
extern T442 M442;
struct S399{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T399 M399;
struct S326{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T326 M326;
struct S525{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T525 M525;
struct S443{Tid id;};
extern T443 M443;
struct S151{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T151 M151;
struct S72{Tid id;T74 _storage;T2 _capacity;T2 _upper;};
extern T72 M72;
extern T605 M605;
struct S132{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T132 M132;
struct S217{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T217 M217;
struct S64{Tid id;T0* _item;T0* _right;};
extern T64 M64;
struct S490{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T490 M490;
struct S615{Tid id;};
extern T615 M615;
struct S260{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T260 M260;
struct S595{Tid id;T0* _parameters;};
extern T595 M595;
struct S187{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T187 M187;
struct S203{Tid id;T0* _error_handler;T6 _has_error;};
extern T203 M203;
struct S389{Tid id;};
extern T389 M389;
struct S458{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T458 M458;
struct S528{Tid id;};
extern T528 M528;
struct S129{Tid id;T0* _output_filename;T0* _error_handler;};
extern T129 M129;
struct S768{Tid id;};
extern T768 M768;
struct S320{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T320 M320;
struct S343{Tid id;T346 _storage;T2 _capacity;T2 _upper;};
extern T343 M343;
struct S598{Tid id;T0* _parameters;};
extern T598 M598;
struct S707{Tid id;};
extern T707 M707;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S708{Tid id;T0* _parameters;};
extern T708 M708;
struct S577{Tid id;};
extern T577 M577;
struct S351{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T351 M351;
struct S273{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T273 M273;
struct S718{Tid id;T0* _item;T0* _right;};
extern T718 M718;
struct S287{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T287 M287;
struct S462{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T462 M462;
struct S510{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T510 M510;
struct S694{Tid id;};
extern T694 M694;
struct S469{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T469 M469;
struct S298{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T298 M298;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S518{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T518 M518;
struct S537{Tid id;};
extern T537 M537;
struct S255{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T255 M255;
struct S572{Tid id;T0* _namespaces;T0* _implementation;};
extern T572 M572;
struct S128{Tid id;T0* _output_filename;T0* _error_handler;};
extern T128 M128;
struct S729{Tid id;T0* _first;T0* _second;};
extern T729 M729;
struct S97{Tid id;};
extern T97 M97;
struct S716{Tid id;T0* _item;T0* _right;};
extern T716 M716;
struct S533{Tid id;};
extern T533 M533;
struct S603{Tid id;T0* _parameters;};
extern T603 M603;
struct S522{Tid id;T0* _class_name;T0* _base_class;};
extern T522 M522;
struct S218{Tid id;T0* _clusters;};
extern T218 M218;
struct S388{Tid id;T391 _storage;T2 _capacity;T2 _upper;};
extern T388 M388;
struct S755{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T755 M755;
struct S204{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T204 M204;
struct S259{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T259 M259;
struct S676{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T676 M676;
struct S600{Tid id;T0* _parameters;};
extern T600 M600;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S472{Tid id;};
extern T472 M472;
struct S576{Tid id;T2 _code;};
extern T576 M576;
struct S114{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T114 M114;
struct S76{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T76 M76;
struct S604{Tid id;};
extern T604 M604;
struct S754{Tid id;T0* _implementation;};
extern T754 M754;
struct S757{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T757 M757;
struct S749{Tid id;T0* _uri;};
extern T749 M749;
struct S141{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T141 M141;
struct S724{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T724 M724;
struct S135{Tid id;T0* _name;};
extern T135 M135;
struct S222{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T222 M222;
struct S706{Tid id;};
extern T706 M706;
struct S157{Tid id;T0* _name;};
extern T157 M157;
struct S727{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T727 M727;
struct S554{Tid id;T0* _implementation;};
extern T554 M554;
struct S645{Tid id;T0* _feature_name;T0* _external_name;};
extern T645 M645;
struct S123{Tid id;};
extern T123 M123;
struct S551{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;};
extern T551 M551;
struct S99{Tid id;T74 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T99 M99;
struct S505{Tid id;T509 _storage;T2 _capacity;T2 _upper;};
extern T505 M505;
struct S693{Tid id;T697 _storage;T2 _capacity;T2 _upper;};
extern T693 M693;
struct S667{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T667 M667;
struct S196{Tid id;T0* _implementation;};
extern T196 M196;
struct S206{Tid id;T0* _namespaces;T0* _implementation;};
extern T206 M206;
struct S75{Tid id;T3 _item;};
extern T75 M75;
struct S629{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T629 M629;
struct S720{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_column;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T2 _last_token;T0* _input_buffer;T2 _line;T2 _yy_end;T2 _yy_start;T2 _yy_position;T2 _yy_more_len;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T720 M720;
struct S83{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T83 M83;
struct S126{Tid id;};
extern T126 M126;
struct S281{Tid id;T283 _storage;T2 _capacity;T2 _upper;};
extern T281 M281;
struct S411{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T411 M411;
struct S308{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T308 M308;
struct S530{Tid id;T532 _storage;T2 _capacity;T2 _upper;};
extern T530 M530;
struct S284{Tid id;};
extern T284 M284;
struct S440{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T440 M440;
struct S271{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T271 M271;
struct S569{Tid id;};
extern T569 M569;
struct S566{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T566 M566;
struct S65{Tid id;T0* _program_name;};
extern T65 M65;
struct S419{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T419 M419;
struct S663{Tid id;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T663 M663;
struct S31{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T31 M31;
struct S430{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T430 M430;
struct S60{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T60 M60;
struct S372{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T372 M372;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r475clear_all(T475 C,T2 a1);
T475 r475realloc(T475 C,T2 a1,T2 a2);
void r475set_all_with(T475 C,T0* a1,T2 a2);
T6 r475fast_memcmp(T475 C,T475 a1,T2 a2);
void r475clear(T475 C,T2 a1,T2 a2);
void r475copy_from(T475 C,T475 a1,T2 a2);
void r346clear_all(T346 C,T2 a1);
T346 r346realloc(T346 C,T2 a1,T2 a2);
void r346set_all_with(T346 C,T0* a1,T2 a2);
T6 r346fast_memcmp(T346 C,T346 a1,T2 a2);
void r346clear(T346 C,T2 a1,T2 a2);
void r346copy_from(T346 C,T346 a1,T2 a2);
void r613clear_all(T613 C,T2 a1);
T613 r613realloc(T613 C,T2 a1,T2 a2);
void r613set_all_with(T613 C,T6 a1,T2 a2);
T6 r613fast_memcmp(T613 C,T613 a1,T2 a2);
void r613clear(T613 C,T2 a1,T2 a2);
void r613copy_from(T613 C,T613 a1,T2 a2);
void r283clear_all(T283 C,T2 a1);
T283 r283realloc(T283 C,T2 a1,T2 a2);
void r283set_all_with(T283 C,T0* a1,T2 a2);
T6 r283fast_memcmp(T283 C,T283 a1,T2 a2);
void r283clear(T283 C,T2 a1,T2 a2);
void r283copy_from(T283 C,T283 a1,T2 a2);
void r231clear_all(T231 C,T2 a1);
T231 r231realloc(T231 C,T2 a1,T2 a2);
void r231set_all_with(T231 C,T0* a1,T2 a2);
T6 r231fast_memcmp(T231 C,T231 a1,T2 a2);
void r231clear(T231 C,T2 a1,T2 a2);
void r231copy_from(T231 C,T231 a1,T2 a2);
void r446clear_all(T446 C,T2 a1);
T446 r446realloc(T446 C,T2 a1,T2 a2);
void r446set_all_with(T446 C,T0* a1,T2 a2);
T6 r446fast_memcmp(T446 C,T446 a1,T2 a2);
void r446clear(T446 C,T2 a1,T2 a2);
void r446copy_from(T446 C,T446 a1,T2 a2);
void r236clear_all(T236 C,T2 a1);
T236 r236realloc(T236 C,T2 a1,T2 a2);
void r236set_all_with(T236 C,T0* a1,T2 a2);
T6 r236fast_memcmp(T236 C,T236 a1,T2 a2);
void r236clear(T236 C,T2 a1,T2 a2);
void r236copy_from(T236 C,T236 a1,T2 a2);
void r532clear_all(T532 C,T2 a1);
T532 r532realloc(T532 C,T2 a1,T2 a2);
void r532set_all_with(T532 C,T0* a1,T2 a2);
T6 r532fast_memcmp(T532 C,T532 a1,T2 a2);
void r532clear(T532 C,T2 a1,T2 a2);
void r532copy_from(T532 C,T532 a1,T2 a2);
void r74clear_all(T74 C,T2 a1);
T74 r74realloc(T74 C,T2 a1,T2 a2);
T6 r74fast_memcmp(T74 C,T74 a1,T2 a2);
void r74set_all_with(T74 C,T0* a1,T2 a2);
void r74clear(T74 C,T2 a1,T2 a2);
void r74copy_from(T74 C,T74 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r697clear_all(T697 C,T2 a1);
T697 r697realloc(T697 C,T2 a1,T2 a2);
void r697set_all_with(T697 C,T0* a1,T2 a2);
T6 r697fast_memcmp(T697 C,T697 a1,T2 a2);
void r697clear(T697 C,T2 a1,T2 a2);
void r697copy_from(T697 C,T697 a1,T2 a2);
void r304clear_all(T304 C,T2 a1);
T304 r304realloc(T304 C,T2 a1,T2 a2);
void r304set_all_with(T304 C,T0* a1,T2 a2);
T6 r304fast_memcmp(T304 C,T304 a1,T2 a2);
void r304clear(T304 C,T2 a1,T2 a2);
void r304copy_from(T304 C,T304 a1,T2 a2);
void r418clear_all(T418 C,T2 a1);
T418 r418realloc(T418 C,T2 a1,T2 a2);
void r418set_all_with(T418 C,T0* a1,T2 a2);
T6 r418fast_memcmp(T418 C,T418 a1,T2 a2);
void r418clear(T418 C,T2 a1,T2 a2);
void r418copy_from(T418 C,T418 a1,T2 a2);
void r391clear_all(T391 C,T2 a1);
T391 r391realloc(T391 C,T2 a1,T2 a2);
void r391set_all_with(T391 C,T0* a1,T2 a2);
T6 r391fast_memcmp(T391 C,T391 a1,T2 a2);
void r391clear(T391 C,T2 a1,T2 a2);
void r391copy_from(T391 C,T391 a1,T2 a2);
void r279clear_all(T279 C,T2 a1);
T279 r279realloc(T279 C,T2 a1,T2 a2);
void r279set_all_with(T279 C,T0* a1,T2 a2);
T6 r279fast_memcmp(T279 C,T279 a1,T2 a2);
void r279clear(T279 C,T2 a1,T2 a2);
void r279copy_from(T279 C,T279 a1,T2 a2);
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
void r119set_all_with(T119 C,T2 a1,T2 a2);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r509clear_all(T509 C,T2 a1);
T509 r509realloc(T509 C,T2 a1,T2 a2);
void r509set_all_with(T509 C,T0* a1,T2 a2);
T6 r509fast_memcmp(T509 C,T509 a1,T2 a2);
void r509clear(T509 C,T2 a1,T2 a2);
void r509copy_from(T509 C,T509 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r302copy(T302* C,T0* a1);
T6 r302is_equal(T302* C,T0* a1);
T6 r302se_assigned_from(T0* a1);
void r302make(T302* C,T2 a1);
T6 r302conforms_to(T302* C,T0* a1);
void r302resize(T302* C,T2 a1);
T0* r302twin(T302* C);
void r415copy(T415* C,T0* a1);
T6 r415is_equal(T415* C,T0* a1);
T6 r415se_assigned_from(T0* a1);
void r415make(T415* C,T2 a1);
T6 r415conforms_to(T415* C,T0* a1);
void r415resize(T415* C,T2 a1);
T0* r415twin(T415* C);
void r611copy(T611* C,T0* a1);
T6 r611is_equal(T611* C,T0* a1);
T6 r611se_assigned_from(T0* a1);
void r611make(T611* C,T2 a1);
T6 r611conforms_to(T611* C,T0* a1);
void r611resize(T611* C,T2 a1);
T0* r611twin(T611* C);
void r234copy(T234* C,T0* a1);
T6 r234is_equal(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
void r234make(T234* C,T2 a1);
T6 r234conforms_to(T234* C,T0* a1);
void r234resize(T234* C,T2 a1);
T0* r234twin(T234* C);
void r504copy(T504* C,T0* a1);
T2 r504count(T504* C);
T6 r504is_equal(T504* C,T0* a1);
T2 r504item(T504* C,T2 a1);
T6 r504se_assigned_from(T0* a1);
T6 r504conforms_to(T504* C,T0* a1);
T0* r504twin(T504* C);
void r277copy(T277* C,T0* a1);
T6 r277is_equal(T277* C,T0* a1);
T6 r277se_assigned_from(T0* a1);
void r277make(T277* C,T2 a1);
T6 r277conforms_to(T277* C,T0* a1);
void r277resize(T277* C,T2 a1);
T0* r277twin(T277* C);
void r471copy(T471* C,T0* a1);
T6 r471is_equal(T471* C,T0* a1);
T6 r471se_assigned_from(T0* a1);
void r471make(T471* C,T2 a1);
T6 r471conforms_to(T471* C,T0* a1);
void r471resize(T471* C,T2 a1);
T0* r471twin(T471* C);
void r229copy(T229* C,T0* a1);
T6 r229is_equal(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
void r229make(T229* C,T2 a1);
T6 r229conforms_to(T229* C,T0* a1);
void r229resize(T229* C,T2 a1);
T0* r229twin(T229* C);
void r442copy(T442* C,T0* a1);
T6 r442is_equal(T442* C,T0* a1);
T6 r442se_assigned_from(T0* a1);
void r442make(T442* C,T2 a1);
T6 r442conforms_to(T442* C,T0* a1);
void r442resize(T442* C,T2 a1);
T0* r442twin(T442* C);
void r72copy(T72* C,T0* a1);
T2 r72count(T72* C);
T6 r72is_equal(T72* C,T0* a1);
T0* r72item(T72* C,T2 a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r343copy(T343* C,T0* a1);
T6 r343is_equal(T343* C,T0* a1);
T6 r343se_assigned_from(T0* a1);
void r343make(T343* C,T2 a1);
T6 r343conforms_to(T343* C,T0* a1);
void r343resize(T343* C,T2 a1);
T0* r343twin(T343* C);
void r388copy(T388* C,T0* a1);
T6 r388is_equal(T388* C,T0* a1);
T6 r388se_assigned_from(T0* a1);
void r388make(T388* C,T2 a1);
T6 r388conforms_to(T388* C,T0* a1);
void r388resize(T388* C,T2 a1);
T0* r388twin(T388* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T2 a1);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r117with_capacity(T117* C,T2 a1);
void r117from_collection(T117* C,T0* a1);
void r99copy(T99* C,T0* a1);
T2 r99count(T99* C);
T6 r99is_equal(T99* C,T0* a1);
T0* r99item(T99* C,T2 a1);
T6 r99valid_index(T99* C,T2 a1);
T6 r99se_assigned_from(T0* a1);
void r99make(T99* C,T2 a1,T2 a2);
T6 r99conforms_to(T99* C,T0* a1);
T0* r99twin(T99* C);
void r505copy(T505* C,T0* a1);
T2 r505count(T505* C);
T6 r505is_equal(T505* C,T0* a1);
T0* r505item(T505* C,T2 a1);
T6 r505se_assigned_from(T0* a1);
void r505make(T505* C,T2 a1);
T6 r505conforms_to(T505* C,T0* a1);
void r505resize(T505* C,T2 a1);
T0* r505twin(T505* C);
void r693copy(T693* C,T0* a1);
T6 r693is_equal(T693* C,T0* a1);
T6 r693se_assigned_from(T0* a1);
void r693make(T693* C,T2 a1);
T6 r693conforms_to(T693* C,T0* a1);
void r693resize(T693* C,T2 a1);
T0* r693twin(T693* C);
void r281copy(T281* C,T0* a1);
T2 r281count(T281* C);
T6 r281is_equal(T281* C,T0* a1);
T0* r281item(T281* C,T2 a1);
T6 r281se_assigned_from(T0* a1);
void r281make(T281* C,T2 a1);
T6 r281conforms_to(T281* C,T0* a1);
void r281resize(T281* C,T2 a1);
T0* r281twin(T281* C);
void r530copy(T530* C,T0* a1);
T6 r530is_equal(T530* C,T0* a1);
T6 r530se_assigned_from(T0* a1);
void r530make(T530* C,T2 a1);
T6 r530conforms_to(T530* C,T0* a1);
void r530resize(T530* C,T2 a1);
T0* r530twin(T530* C);
void r743copy(T743* C,T0* a1);
void r743set(T743* C,T0* a1,T6 a2,T6 a3);
T6 r743is_equal(T743* C,T0* a1);
T6 r743same_position(T743* C,T0* a1);
T6 r743se_assigned_from(T0* a1);
T6 r743same_type(T743* C,T0* a1);
void r743make(T743* C,T0* a1);
T6 r743conforms_to(T743* C,T0* a1);
void r743set_after(T743* C);
T0* r743twin(T743* C);
void r487copy(T487* C,T0* a1);
T6 r487is_equal(T487* C,T0* a1);
T6 r487same_position(T487* C,T0* a1);
T6 r487se_assigned_from(T0* a1);
T6 r487same_type(T487* C,T0* a1);
T6 r487off(T487* C);
T6 r487conforms_to(T487* C,T0* a1);
T0* r487twin(T487* C);
T6 r591is_equal(T591* C,T0* a1);
T6 r591se_assigned_from(T0* a1);
T6 r591conforms_to(T591* C,T0* a1);
T0* r591twin(T591* C);
void r476copy(T476* C,T0* a1);
T6 r476is_equal(T476* C,T0* a1);
void r476remove_traversing_cursor(T476* C,T0* a1);
void r476move_all_cursors_after(T476* C);
void r476add_traversing_cursor(T476* C,T0* a1);
T6 r476se_assigned_from(T0* a1);
T0* r476clone(T0* a1);
T6 r476cursor_before(T0* a1);
T6 r476same_type(T476* C,T0* a1);
void r476make(T476* C,T2 a1);
T6 r476cursor_after(T0* a1);
T6 r476conforms_to(T476* C,T0* a1);
T6 r476cursor_same_position(T0* a1,T0* a2);
T0* r476twin(T476* C);
T0* r476new_cursor(T476* C);
T6 r476cursor_off(T0* a1);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T6 r153is_equal(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
void r248copy(T248* C,T0* a1);
T6 r248is_equal(T248* C,T0* a1);
T0* r248item(T248* C);
T6 r248same_position(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
T6 r248after(T248* C);
T6 r248same_type(T248* C,T0* a1);
T2 r248index(T248* C);
T6 r248off(T248* C);
T6 r248conforms_to(T248* C,T0* a1);
T0* r248twin(T248* C);
T6 r580is_equal(T580* C,T0* a1);
T6 r580se_assigned_from(T0* a1);
void r580make(T580* C,T0* a1,T0* a2);
T6 r580conforms_to(T580* C,T0* a1);
T0* r580twin(T580* C);
void r703copy(T703* C,T0* a1);
void r703set(T703* C,T0* a1,T6 a2,T6 a3);
T6 r703is_equal(T703* C,T0* a1);
T6 r703same_position(T703* C,T0* a1);
T6 r703se_assigned_from(T0* a1);
T6 r703is_first(T703* C);
T6 r703is_last(T703* C);
T6 r703same_type(T703* C,T0* a1);
void r703make(T703* C,T0* a1);
void r703forth(T703* C);
T6 r703conforms_to(T703* C,T0* a1);
void r703start(T703* C);
void r703go_after(T703* C);
void r703set_after(T703* C);
T0* r703twin(T703* C);
void r385copy(T385* C,T0* a1);
T6 r385is_equal(T385* C,T0* a1);
T6 r385same_position(T385* C,T0* a1);
T6 r385se_assigned_from(T0* a1);
T6 r385same_type(T385* C,T0* a1);
void r385make(T385* C,T0* a1);
T6 r385off(T385* C);
T6 r385conforms_to(T385* C,T0* a1);
T0* r385twin(T385* C);
T2 r232new_capacity(T2 a1);
void r232copy(T232* C,T0* a1);
void r232clear_items(T232* C,T2 a1,T2 a2);
T6 r232extendible(T232* C,T2 a1);
T0* r232cursor_item(T232* C,T0* a1);
T6 r232is_equal(T232* C,T0* a1);
void r232remove_traversing_cursor(T232* C,T0* a1);
void r232move_all_cursors_after(T232* C);
void r232add_traversing_cursor(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
T0* r232clone(T0* a1);
void r232move_left(T232* C,T2 a1,T2 a2);
T6 r232cursor_before(T0* a1);
T6 r232same_type(T232* C,T0* a1);
void r232make(T232* C,T2 a1);
void r232remove(T232* C,T2 a1);
void r232move_cursors_left(T232* C,T2 a1);
void r232remove_last(T232* C);
T6 r232cursor_after(T0* a1);
T6 r232conforms_to(T232* C,T0* a1);
T2 r232cursor_index(T232* C,T0* a1);
void r232cursor_forth(T232* C,T0* a1);
void r232resize(T232* C,T2 a1);
T6 r232cursor_same_position(T0* a1,T0* a2);
void r232move_last_cursors_after(T232* C);
void r232delete(T232* C,T0* a1);
void r232cursor_start(T232* C,T0* a1);
T0* r232twin(T232* C);
void r232force_last(T232* C,T0* a1);
T0* r232new_cursor(T232* C);
void r232put_last(T232* C,T0* a1);
T6 r232cursor_off(T0* a1);
void r640copy(T640* C,T0* a1);
void r640set(T640* C,T0* a1,T6 a2,T6 a3);
T6 r640is_equal(T640* C,T0* a1);
T6 r640same_position(T640* C,T0* a1);
T6 r640se_assigned_from(T0* a1);
T6 r640same_type(T640* C,T0* a1);
void r640make(T640* C,T0* a1);
T6 r640conforms_to(T640* C,T0* a1);
void r640set_after(T640* C);
T0* r640twin(T640* C);
T6 r647is_equal(T647* C,T0* a1);
T6 r647se_assigned_from(T0* a1);
T6 r647conforms_to(T647* C,T0* a1);
T0* r647twin(T647* C);
T6 r643is_equal(T643* C,T0* a1);
T6 r643se_assigned_from(T0* a1);
T6 r643conforms_to(T643* C,T0* a1);
T0* r643twin(T643* C);
void r506clear_all(T0* a1);
T6 r506is_equal(T506* C,T0* a1);
T6 r506se_assigned_from(T0* a1);
T0* r506make(T2 a1);
T6 r506conforms_to(T506* C,T0* a1);
T0* r506resize(T0* a1,T2 a2);
T0* r506twin(T506* C);
T6 r344is_equal(T344* C,T0* a1);
T6 r344se_assigned_from(T0* a1);
T0* r344make(T2 a1);
T6 r344conforms_to(T344* C,T0* a1);
T0* r344resize(T0* a1,T2 a2);
T0* r344twin(T344* C);
T6 r398is_equal(T398* C,T0* a1);
T6 r398se_assigned_from(T0* a1);
void r398make(T398* C,T2 a1);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398twin(T398* C);
void r579copy(T579* C,T0* a1);
void r579set(T579* C,T0* a1,T6 a2,T6 a3);
T6 r579is_equal(T579* C,T0* a1);
T6 r579same_position(T579* C,T0* a1);
T6 r579se_assigned_from(T0* a1);
T6 r579same_type(T579* C,T0* a1);
void r579make(T579* C,T0* a1);
T6 r579conforms_to(T579* C,T0* a1);
void r579set_after(T579* C);
T0* r579twin(T579* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
T0* r121to_fixed_array(T0* a1);
T0* r121make(T2 a1);
T0* r121make_from_array(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T0* r121resize(T0* a1,T2 a2);
T0* r121twin(T121* C);
void r305clear_all(T0* a1);
T6 r305is_equal(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
T0* r305make(T2 a1);
T6 r305conforms_to(T305* C,T0* a1);
T0* r305resize(T0* a1,T2 a2);
T0* r305twin(T305* C);
void r88copy(T88* C,T0* a1);
void r88set(T88* C,T0* a1,T6 a2,T6 a3);
T6 r88is_equal(T88* C,T0* a1);
T6 r88same_position(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T6 r88same_type(T88* C,T0* a1);
void r88make(T88* C,T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88set_after(T88* C);
T0* r88twin(T88* C);
T6 r730is_equal(T730* C,T0* a1);
T6 r730se_assigned_from(T0* a1);
void r730make(T730* C,T0* a1,T0* a2);
T6 r730conforms_to(T730* C,T0* a1);
T0* r730twin(T730* C);
void r164copy(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
T0* r164item(T164* C);
T6 r164same_position(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
T6 r164after(T164* C);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C,T0* a1);
void r164forth(T164* C);
T6 r164off(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
void r164start(T164* C);
T0* r164twin(T164* C);
T2 r607new_capacity(T2 a1);
void r607copy(T607* C,T0* a1);
void r607force(T607* C,T6 a1,T0* a2);
T0* r607keys_item(T607* C,T2 a1);
void r607make_clashes(T607* C,T2 a1);
T6 r607cursor_item(T607* C,T0* a1);
void r607search_position(T607* C,T0* a1);
T6 r607is_equal(T607* C,T0* a1);
void r607remove_traversing_cursor(T607* C,T0* a1);
void r607clone_slots(T607* C);
extern T0*oBC108FIXED_INTEGER_ARRAY_;
void r607keys_resize(T607* C,T2 a1);
T6 r607item(T607* C,T0* a1);
void r607clone_clashes(T607* C);
void r607move_all_cursors_after(T607* C);
void r607make_items(T607* C,T2 a1);
void r607add_traversing_cursor(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
T0* r607clone(T0* a1);
T6 r607same_type(T607* C,T0* a1);
void r607make(T607* C,T2 a1);
T0* r607cursor_key(T607* C,T0* a1);
void r607clone_items(T607* C);
T6 r607cursor_after(T0* a1);
T6 r607conforms_to(T607* C,T0* a1);
T6 r607has(T607* C,T0* a1);
void r607make_keys(T607* C,T2 a1);
T2 r607hash_position(T607* C,T0* a1);
void r607cursor_forth(T607* C,T0* a1);
void r607items_resize(T607* C,T2 a1);
void r607clone_keys(T607* C);
void r607make_with_equality_testers(T607* C,T2 a1,T0* a2,T0* a3);
void r607resize(T607* C,T2 a1);
T6 r607cursor_same_position(T0* a1,T0* a2);
void r607cursor_start(T607* C,T0* a1);
void r607clashes_resize(T607* C,T2 a1);
void r607slots_resize(T607* C,T2 a1);
T0* r607twin(T607* C);
T0* r607new_cursor(T607* C);
void r607make_slots(T607* C,T2 a1);
void r607keys_put(T607* C,T0* a1,T2 a2);
T2 r607new_modulus(T2 a1);
T6 r607cursor_off(T0* a1);
T6 r416is_equal(T416* C,T0* a1);
T6 r416se_assigned_from(T0* a1);
T0* r416make(T2 a1);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416resize(T0* a1,T2 a2);
T0* r416twin(T416* C);
void r463copy(T463* C,T0* a1);
void r463make_clashes(T463* C,T2 a1);
void r463search_position(T463* C,T0* a1);
T6 r463is_equal(T463* C,T0* a1);
void r463remove_traversing_cursor(T463* C,T0* a1);
void r463clone_slots(T463* C);
T2 r463item(T463* C,T0* a1);
void r463clone_clashes(T463* C);
void r463move_all_cursors_after(T463* C);
void r463make_items(T463* C,T2 a1);
void r463add_traversing_cursor(T463* C,T0* a1);
T6 r463se_assigned_from(T0* a1);
T0* r463clone(T0* a1);
T6 r463same_type(T463* C,T0* a1);
void r463clone_items(T463* C);
T6 r463conforms_to(T463* C,T0* a1);
T6 r463has(T463* C,T0* a1);
void r463make_keys(T463* C,T2 a1);
T2 r463hash_position(T463* C,T0* a1);
void r463clone_keys(T463* C);
void r463make_with_equality_testers(T463* C,T2 a1,T0* a2,T0* a3);
T6 r463cursor_same_position(T0* a1,T0* a2);
T0* r463twin(T463* C);
T0* r463new_cursor(T463* C);
void r463make_slots(T463* C,T2 a1);
T2 r463new_modulus(T2 a1);
T6 r463cursor_off(T0* a1);
void r340copy(T340* C,T0* a1);
T6 r340is_equal(T340* C,T0* a1);
T6 r340same_position(T340* C,T0* a1);
T6 r340se_assigned_from(T0* a1);
T6 r340same_type(T340* C,T0* a1);
void r340make(T340* C,T0* a1);
T6 r340off(T340* C);
T6 r340conforms_to(T340* C,T0* a1);
T0* r340twin(T340* C);
T6 r140is_equal(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140make(T140* C,T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140twin(T140* C);
T6 r746is_equal(T746* C,T0* a1);
T6 r746se_assigned_from(T0* a1);
T6 r746conforms_to(T746* C,T0* a1);
T0* r746twin(T746* C);
void r626copy(T626* C,T0* a1);
T0* r626key(T626* C);
T6 r626is_equal(T626* C,T0* a1);
T6 r626item(T626* C);
T6 r626same_position(T626* C,T0* a1);
T6 r626se_assigned_from(T0* a1);
T6 r626after(T626* C);
T6 r626same_type(T626* C,T0* a1);
void r626make(T626* C,T0* a1);
T6 r626off(T626* C);
T6 r626conforms_to(T626* C,T0* a1);
T0* r626twin(T626* C);
void r659copy(T659* C,T0* a1);
void r659set(T659* C,T0* a1,T6 a2,T6 a3);
T6 r659is_equal(T659* C,T0* a1);
T6 r659same_position(T659* C,T0* a1);
T6 r659se_assigned_from(T0* a1);
T6 r659is_last(T659* C);
T6 r659same_type(T659* C,T0* a1);
void r659make(T659* C,T0* a1);
T6 r659conforms_to(T659* C,T0* a1);
void r659set_after(T659* C);
T0* r659twin(T659* C);
void r589copy(T589* C,T0* a1);
T6 r589is_equal(T589* C,T0* a1);
void r589remove_traversing_cursor(T589* C,T0* a1);
void r589move_all_cursors_after(T589* C);
void r589add_traversing_cursor(T589* C,T0* a1);
T6 r589se_assigned_from(T0* a1);
T6 r589same_type(T589* C,T0* a1);
void r589make(T589* C);
T6 r589conforms_to(T589* C,T0* a1);
void r589cursor_forth(T589* C,T0* a1);
void r589cursor_start(T589* C,T0* a1);
T0* r589twin(T589* C);
T0* r589new_cursor(T589* C);
void r589put_last(T589* C,T0* a1);
T6 r589cursor_off(T0* a1);
void r30copy(T30* C,T0* a1);
void r30set(T30* C,T0* a1,T6 a2,T6 a3);
T6 r30is_equal(T30* C,T0* a1);
T6 r30same_position(T30* C,T0* a1);
T6 r30se_assigned_from(T0* a1);
T6 r30same_type(T30* C,T0* a1);
void r30make(T30* C,T0* a1);
T6 r30conforms_to(T30* C,T0* a1);
void r30set_after(T30* C);
T0* r30twin(T30* C);
T2 r228new_capacity(T2 a1);
void r228copy(T228* C,T0* a1);
T6 r228extendible(T228* C,T2 a1);
T6 r228is_equal(T228* C,T0* a1);
void r228remove_traversing_cursor(T228* C,T0* a1);
void r228move_all_cursors_after(T228* C);
void r228add_traversing_cursor(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
T0* r228clone(T0* a1);
T6 r228cursor_before(T0* a1);
T6 r228same_type(T228* C,T0* a1);
void r228make(T228* C,T2 a1);
T6 r228cursor_after(T0* a1);
T6 r228conforms_to(T228* C,T0* a1);
void r228resize(T228* C,T2 a1);
T6 r228cursor_same_position(T0* a1,T0* a2);
T0* r228twin(T228* C);
void r228force_last(T228* C,T0* a1);
T0* r228new_cursor(T228* C);
void r228put_last(T228* C,T0* a1);
T6 r228cursor_off(T0* a1);
void r370copy(T370* C,T0* a1);
T6 r370is_equal(T370* C,T0* a1);
T6 r370same_position(T370* C,T0* a1);
T6 r370se_assigned_from(T0* a1);
T6 r370same_type(T370* C,T0* a1);
void r370make(T370* C,T0* a1);
T6 r370off(T370* C);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
void r541copy(T541* C,T0* a1);
T6 r541is_equal(T541* C,T0* a1);
T6 r541same_position(T541* C,T0* a1);
T6 r541se_assigned_from(T0* a1);
T6 r541same_type(T541* C,T0* a1);
void r541make(T541* C,T0* a1);
T6 r541off(T541* C);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541twin(T541* C);
void r433copy(T433* C,T0* a1);
void r433make_clashes(T433* C,T2 a1);
void r433search_position(T433* C,T0* a1);
T6 r433is_equal(T433* C,T0* a1);
void r433remove_traversing_cursor(T433* C,T0* a1);
void r433clone_slots(T433* C);
T2 r433item(T433* C,T0* a1);
void r433clone_clashes(T433* C);
void r433move_all_cursors_after(T433* C);
void r433make_items(T433* C,T2 a1);
void r433add_traversing_cursor(T433* C,T0* a1);
T6 r433se_assigned_from(T0* a1);
T0* r433clone(T0* a1);
T6 r433same_type(T433* C,T0* a1);
void r433clone_items(T433* C);
T6 r433conforms_to(T433* C,T0* a1);
T6 r433has(T433* C,T0* a1);
void r433make_keys(T433* C,T2 a1);
T2 r433hash_position(T433* C,T0* a1);
void r433clone_keys(T433* C);
void r433make_with_equality_testers(T433* C,T2 a1,T0* a2,T0* a3);
T6 r433cursor_same_position(T0* a1,T0* a2);
T0* r433twin(T433* C);
T0* r433new_cursor(T433* C);
void r433make_slots(T433* C,T2 a1);
T2 r433new_modulus(T2 a1);
T6 r433cursor_off(T0* a1);
void r646copy(T646* C,T0* a1);
T6 r646cursor_is_last(T646* C,T0* a1);
T6 r646is_equal(T646* C,T0* a1);
void r646remove_traversing_cursor(T646* C,T0* a1);
void r646move_all_cursors_after(T646* C);
void r646add_traversing_cursor(T646* C,T0* a1);
T6 r646se_assigned_from(T0* a1);
T6 r646same_type(T646* C,T0* a1);
void r646make(T646* C);
T6 r646conforms_to(T646* C,T0* a1);
void r646cursor_forth(T646* C,T0* a1);
void r646cursor_start(T646* C,T0* a1);
T0* r646twin(T646* C);
void r646force_last(T646* C,T0* a1);
T0* r646new_cursor(T646* C);
T6 r646cursor_off(T0* a1);
void r447copy(T447* C,T0* a1);
T6 r447is_equal(T447* C,T0* a1);
void r447remove_traversing_cursor(T447* C,T0* a1);
void r447move_all_cursors_after(T447* C);
void r447add_traversing_cursor(T447* C,T0* a1);
T6 r447se_assigned_from(T0* a1);
T0* r447clone(T0* a1);
T6 r447cursor_before(T0* a1);
T6 r447same_type(T447* C,T0* a1);
void r447make(T447* C,T2 a1);
T6 r447cursor_after(T0* a1);
T6 r447conforms_to(T447* C,T0* a1);
T6 r447cursor_same_position(T0* a1,T0* a2);
T0* r447twin(T447* C);
T0* r447new_cursor(T447* C);
T6 r447cursor_off(T0* a1);
T6 r682is_equal(T682* C,T0* a1);
T6 r682se_assigned_from(T0* a1);
T6 r682conforms_to(T682* C,T0* a1);
T6 r682test(T0* a1,T0* a2);
T0* r682twin(T682* C);
T6 r307is_equal(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T0* r307make(T2 a1);
T6 r307conforms_to(T307* C,T0* a1);
T0* r307resize(T0* a1,T2 a2);
T0* r307twin(T307* C);
void r731copy(T731* C,T0* a1);
T0* r731cursor_item(T0* a1);
T6 r731is_equal(T731* C,T0* a1);
void r731remove_traversing_cursor(T731* C,T0* a1);
void r731move_all_cursors_after(T731* C);
void r731add_traversing_cursor(T731* C,T0* a1);
T6 r731se_assigned_from(T0* a1);
T6 r731cursor_before(T0* a1);
T6 r731same_type(T731* C,T0* a1);
void r731make(T731* C);
T6 r731cursor_after(T0* a1);
T6 r731conforms_to(T731* C,T0* a1);
void r731cursor_forth(T731* C,T0* a1);
void r731cursor_start(T731* C,T0* a1);
T0* r731twin(T731* C);
T0* r731new_cursor(T731* C);
void r731put_last(T731* C,T0* a1);
T6 r731cursor_off(T0* a1);
void r324copy(T324* C,T0* a1);
T6 r324is_equal(T324* C,T0* a1);
T6 r324same_position(T324* C,T0* a1);
T6 r324se_assigned_from(T0* a1);
T6 r324same_type(T324* C,T0* a1);
void r324make(T324* C,T0* a1);
T6 r324off(T324* C);
T6 r324conforms_to(T324* C,T0* a1);
T0* r324twin(T324* C);
T6 r251is_equal(T251* C,T0* a1);
T6 r251se_assigned_from(T0* a1);
T0* r251make(T2 a1);
T6 r251conforms_to(T251* C,T0* a1);
T0* r251resize(T0* a1,T2 a2);
T0* r251twin(T251* C);
void r690copy(T690* C,T0* a1);
T6 r690is_equal(T690* C,T0* a1);
T0* r690item(T690* C);
T6 r690same_position(T690* C,T0* a1);
T6 r690se_assigned_from(T0* a1);
T6 r690after(T690* C);
T6 r690same_type(T690* C,T0* a1);
void r690make(T690* C,T0* a1);
T6 r690off(T690* C);
T6 r690conforms_to(T690* C,T0* a1);
T0* r690twin(T690* C);
void r399copy(T399* C,T0* a1);
T6 r399is_equal(T399* C,T0* a1);
void r399remove_traversing_cursor(T399* C,T0* a1);
void r399move_all_cursors_after(T399* C);
void r399add_traversing_cursor(T399* C,T0* a1);
T6 r399se_assigned_from(T0* a1);
T0* r399clone(T0* a1);
T6 r399cursor_before(T0* a1);
T6 r399same_type(T399* C,T0* a1);
void r399make(T399* C,T2 a1);
T6 r399cursor_after(T0* a1);
T6 r399conforms_to(T399* C,T0* a1);
T6 r399cursor_same_position(T0* a1,T0* a2);
T0* r399twin(T399* C);
T0* r399new_cursor(T399* C);
T6 r399cursor_off(T0* a1);
void r326copy(T326* C,T0* a1);
void r326make_clashes(T326* C,T2 a1);
void r326search_position(T326* C,T2 a1);
T6 r326is_equal(T326* C,T0* a1);
void r326remove_traversing_cursor(T326* C,T0* a1);
void r326clone_slots(T326* C);
T0* r326item(T326* C,T2 a1);
void r326clone_clashes(T326* C);
void r326move_all_cursors_after(T326* C);
void r326make_items(T326* C,T2 a1);
void r326add_traversing_cursor(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T0* r326clone(T0* a1);
T6 r326same_type(T326* C,T0* a1);
void r326clone_items(T326* C);
T6 r326conforms_to(T326* C,T0* a1);
T6 r326has(T326* C,T2 a1);
void r326make_keys(T326* C,T2 a1);
T2 r326hash_position(T326* C,T2 a1);
void r326clone_keys(T326* C);
void r326make_with_equality_testers(T326* C,T2 a1,T0* a2,T0* a3);
T6 r326cursor_same_position(T0* a1,T0* a2);
T0* r326twin(T326* C);
T0* r326new_cursor(T326* C);
void r326make_slots(T326* C,T2 a1);
T2 r326new_modulus(T2 a1);
T6 r326cursor_off(T0* a1);
T2 r525new_capacity(T2 a1);
void r525copy(T525* C,T0* a1);
void r525force(T525* C,T0* a1,T0* a2);
void r525make_clashes(T525* C,T2 a1);
void r525search_position(T525* C,T0* a1);
T6 r525is_equal(T525* C,T0* a1);
void r525remove_traversing_cursor(T525* C,T0* a1);
void r525clone_slots(T525* C);
void r525keys_resize(T525* C,T2 a1);
void r525clone_clashes(T525* C);
T0* r525item(T525* C,T0* a1);
void r525move_all_cursors_after(T525* C);
void r525make_items(T525* C,T2 a1);
void r525add_traversing_cursor(T525* C,T0* a1);
T6 r525se_assigned_from(T0* a1);
T0* r525clone(T0* a1);
T6 r525same_type(T525* C,T0* a1);
void r525make(T525* C,T2 a1);
void r525clone_items(T525* C);
T6 r525conforms_to(T525* C,T0* a1);
T6 r525has(T525* C,T0* a1);
void r525make_keys(T525* C,T2 a1);
T2 r525hash_position(T525* C,T0* a1);
void r525items_resize(T525* C,T2 a1);
void r525clone_keys(T525* C);
void r525make_with_equality_testers(T525* C,T2 a1,T0* a2,T0* a3);
void r525resize(T525* C,T2 a1);
T6 r525cursor_same_position(T0* a1,T0* a2);
void r525clashes_resize(T525* C,T2 a1);
void r525slots_resize(T525* C,T2 a1);
T0* r525twin(T525* C);
T0* r525new_cursor(T525* C);
void r525make_slots(T525* C,T2 a1);
T2 r525new_modulus(T2 a1);
T6 r525cursor_off(T0* a1);
T6 r443is_equal(T443* C,T0* a1);
T6 r443se_assigned_from(T0* a1);
T0* r443make(T2 a1);
T6 r443conforms_to(T443* C,T0* a1);
T0* r443resize(T0* a1,T2 a2);
T0* r443twin(T443* C);
void r151copy(T151* C,T0* a1);
void r151append_last(T151* C,T0* a1);
T0* r151cursor_item(T0* a1);
T6 r151cursor_is_last(T151* C,T0* a1);
T6 r151is_equal(T151* C,T0* a1);
void r151remove_traversing_cursor(T151* C,T0* a1);
void r151move_all_cursors_after(T151* C);
void r151add_traversing_cursor(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
T6 r151same_type(T151* C,T0* a1);
void r151make(T151* C);
T6 r151cursor_after(T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
void r151cursor_forth(T151* C,T0* a1);
void r151make_from_linear(T151* C,T0* a1);
void r151cursor_start(T151* C,T0* a1);
T0* r151twin(T151* C);
void r151force_last(T151* C,T0* a1);
T0* r151new_cursor(T151* C);
void r151put_last(T151* C,T0* a1);
T6 r151cursor_off(T0* a1);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r615is_equal(T615* C,T0* a1);
T6 r615se_assigned_from(T0* a1);
T0* r615make(T2 a1);
T6 r615conforms_to(T615* C,T0* a1);
T0* r615resize(T0* a1,T2 a2);
T0* r615twin(T615* C);
T6 r389is_equal(T389* C,T0* a1);
T6 r389se_assigned_from(T0* a1);
T0* r389make(T2 a1);
T6 r389conforms_to(T389* C,T0* a1);
T0* r389resize(T0* a1,T2 a2);
T0* r389twin(T389* C);
void r458copy(T458* C,T0* a1);
T6 r458is_equal(T458* C,T0* a1);
T6 r458same_position(T458* C,T0* a1);
T6 r458se_assigned_from(T0* a1);
T6 r458same_type(T458* C,T0* a1);
T6 r458off(T458* C);
T6 r458conforms_to(T458* C,T0* a1);
T0* r458twin(T458* C);
T6 r528is_equal(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
T6 r528conforms_to(T528* C,T0* a1);
T6 r528test(T0* a1,T0* a2);
T0* r528twin(T528* C);
void r320copy(T320* C,T0* a1);
T6 r320is_equal(T320* C,T0* a1);
T6 r320same_position(T320* C,T0* a1);
T6 r320se_assigned_from(T0* a1);
T6 r320same_type(T320* C,T0* a1);
void r320make(T320* C,T0* a1);
T6 r320off(T320* C);
T6 r320conforms_to(T320* C,T0* a1);
T0* r320twin(T320* C);
void r351copy(T351* C,T0* a1);
void r351make_equal(T351* C,T2 a1);
void r351make_clashes(T351* C,T2 a1);
void r351search_position(T351* C,T0* a1);
T6 r351is_equal(T351* C,T0* a1);
void r351remove_traversing_cursor(T351* C,T0* a1);
void r351clone_slots(T351* C);
T0* r351items_item(T351* C,T2 a1);
void r351clone_clashes(T351* C);
void r351move_all_cursors_after(T351* C);
void r351make_items(T351* C,T2 a1);
void r351add_traversing_cursor(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T0* r351clone(T0* a1);
T6 r351same_type(T351* C,T0* a1);
void r351make(T351* C,T2 a1);
T6 r351equal(T0* a1,T0* a2);
void r351clone_items(T351* C);
T6 r351same_equality_tester(T351* C,T0* a1);
T6 r351conforms_to(T351* C,T0* a1);
T6 r351has(T351* C,T0* a1);
T2 r351hash_position(T351* C,T0* a1);
T6 r351cursor_same_position(T0* a1,T0* a2);
T0* r351twin(T351* C);
T0* r351new_cursor(T351* C);
void r351make_slots(T351* C,T2 a1);
T2 r351new_modulus(T2 a1);
T6 r351cursor_off(T0* a1);
void r273copy(T273* C,T0* a1);
void r273wipe_out(T273* C);
T0* r273keys_item(T273* C,T2 a1);
void r273make_clashes(T273* C,T2 a1);
void r273put(T273* C,T0* a1,T0* a2);
void r273search_position(T273* C,T0* a1);
T6 r273is_equal(T273* C,T0* a1);
void r273remove_traversing_cursor(T273* C,T0* a1);
void r273clone_slots(T273* C);
void r273keys_resize(T273* C,T2 a1);
T0* r273item(T273* C,T0* a1);
void r273clone_clashes(T273* C);
void r273make_items(T273* C,T2 a1);
void r273move_all_cursors_after(T273* C);
void r273add_traversing_cursor(T273* C,T0* a1);
T6 r273se_assigned_from(T0* a1);
T0* r273clone(T0* a1);
T6 r273same_type(T273* C,T0* a1);
void r273slots_wipe_out(T273* C);
void r273make(T273* C,T2 a1);
void r273clashes_wipe_out(T273* C);
void r273clone_items(T273* C);
T6 r273conforms_to(T273* C,T0* a1);
T6 r273has(T273* C,T0* a1);
void r273make_keys(T273* C,T2 a1);
T2 r273hash_position(T273* C,T0* a1);
void r273items_wipe_out(T273* C);
void r273items_resize(T273* C,T2 a1);
void r273clone_keys(T273* C);
void r273make_with_equality_testers(T273* C,T2 a1,T0* a2,T0* a3);
void r273resize(T273* C,T2 a1);
T6 r273cursor_same_position(T0* a1,T0* a2);
void r273clashes_resize(T273* C,T2 a1);
void r273slots_resize(T273* C,T2 a1);
T0* r273twin(T273* C);
void r273keys_wipe_out(T273* C);
T0* r273new_cursor(T273* C);
void r273make_slots(T273* C,T2 a1);
void r273keys_put(T273* C,T0* a1,T2 a2);
T2 r273new_modulus(T2 a1);
T6 r273cursor_off(T0* a1);
T6 r718is_equal(T718* C,T0* a1);
T6 r718se_assigned_from(T0* a1);
T6 r718conforms_to(T718* C,T0* a1);
T0* r718twin(T718* C);
void r287copy(T287* C,T0* a1);
T6 r287is_equal(T287* C,T0* a1);
void r287remove_traversing_cursor(T287* C,T0* a1);
void r287move_all_cursors_after(T287* C);
void r287add_traversing_cursor(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
T6 r287same_type(T287* C,T0* a1);
void r287make(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
T0* r287new_cursor(T287* C);
T6 r462is_equal(T462* C,T0* a1);
T6 r462se_assigned_from(T0* a1);
void r462make(T462* C,T2 a1);
T6 r462conforms_to(T462* C,T0* a1);
T0* r462twin(T462* C);
T6 r694is_equal(T694* C,T0* a1);
T6 r694se_assigned_from(T0* a1);
T0* r694make(T2 a1);
T6 r694conforms_to(T694* C,T0* a1);
T0* r694resize(T0* a1,T2 a2);
T0* r694twin(T694* C);
void r469copy(T469* C,T0* a1);
T6 r469is_equal(T469* C,T0* a1);
T6 r469same_position(T469* C,T0* a1);
T6 r469se_assigned_from(T0* a1);
T6 r469same_type(T469* C,T0* a1);
void r469make(T469* C,T0* a1);
T6 r469off(T469* C);
T6 r469conforms_to(T469* C,T0* a1);
T0* r469twin(T469* C);
void r298copy(T298* C,T0* a1);
T6 r298is_equal(T298* C,T0* a1);
T6 r298same_position(T298* C,T0* a1);
T6 r298se_assigned_from(T0* a1);
T6 r298same_type(T298* C,T0* a1);
void r298make(T298* C,T0* a1);
T6 r298conforms_to(T298* C,T0* a1);
void r298set_after(T298* C);
T0* r298twin(T298* C);
T6 r537is_equal(T537* C,T0* a1);
T6 r537se_assigned_from(T0* a1);
T0* r537make(T2 a1);
T6 r537conforms_to(T537* C,T0* a1);
T0* r537resize(T0* a1,T2 a2);
T0* r537twin(T537* C);
T6 r729is_equal(T729* C,T0* a1);
T6 r729se_assigned_from(T0* a1);
void r729make(T729* C,T0* a1,T0* a2);
T6 r729conforms_to(T729* C,T0* a1);
T0* r729twin(T729* C);
T6 r716is_equal(T716* C,T0* a1);
T6 r716se_assigned_from(T0* a1);
T6 r716conforms_to(T716* C,T0* a1);
T0* r716twin(T716* C);
T6 r533is_equal(T533* C,T0* a1);
T6 r533se_assigned_from(T0* a1);
T0* r533make(T2 a1);
T6 r533conforms_to(T533* C,T0* a1);
T0* r533resize(T0* a1,T2 a2);
T0* r533twin(T533* C);
void r259copy(T259* C,T0* a1);
T6 r259is_equal(T259* C,T0* a1);
T0* r259item(T259* C);
T6 r259same_position(T259* C,T0* a1);
T6 r259se_assigned_from(T0* a1);
T6 r259after(T259* C);
T6 r259same_type(T259* C,T0* a1);
void r259make(T259* C,T0* a1);
T6 r259off(T259* C);
T6 r259conforms_to(T259* C,T0* a1);
T0* r259twin(T259* C);
T6 r472is_equal(T472* C,T0* a1);
T6 r472se_assigned_from(T0* a1);
T0* r472make(T2 a1);
T6 r472conforms_to(T472* C,T0* a1);
T0* r472resize(T0* a1,T2 a2);
T0* r472twin(T472* C);
T2 r114new_capacity(T2 a1);
void r114copy(T114* C,T0* a1);
void r114force(T114* C,T0* a1,T0* a2);
T0* r114keys_item(T114* C,T2 a1);
T2 r114clashes_item(T114* C,T2 a1);
void r114make_clashes(T114* C,T2 a1);
T0* r114cursor_item(T114* C,T0* a1);
void r114search_position(T114* C,T0* a1);
T6 r114is_equal(T114* C,T0* a1);
void r114remove_traversing_cursor(T114* C,T0* a1);
void r114clone_slots(T114* C);
void r114keys_resize(T114* C,T2 a1);
T0* r114items_item(T114* C,T2 a1);
T0* r114item(T114* C,T0* a1);
void r114clone_clashes(T114* C);
void r114move_all_cursors_after(T114* C);
void r114make_items(T114* C,T2 a1);
void r114add_traversing_cursor(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
T2 r114slots_item(T114* C,T2 a1);
T6 r114same_type(T114* C,T0* a1);
void r114make(T114* C,T2 a1);
void r114clone_items(T114* C);
T6 r114cursor_after(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has(T114* C,T0* a1);
void r114make_keys(T114* C,T2 a1);
T2 r114hash_position(T114* C,T0* a1);
void r114cursor_forth(T114* C,T0* a1);
void r114items_resize(T114* C,T2 a1);
void r114clone_keys(T114* C);
void r114make_with_equality_testers(T114* C,T2 a1,T0* a2,T0* a3);
void r114resize(T114* C,T2 a1);
T6 r114cursor_same_position(T0* a1,T0* a2);
void r114cursor_start(T114* C,T0* a1);
void r114clashes_resize(T114* C,T2 a1);
void r114slots_resize(T114* C,T2 a1);
T0* r114twin(T114* C);
T0* r114new_cursor(T114* C);
void r114make_slots(T114* C,T2 a1);
void r114keys_put(T114* C,T0* a1,T2 a2);
T2 r114new_modulus(T2 a1);
T6 r114cursor_off(T0* a1);
void r114items_put(T114* C,T0* a1,T2 a2);
void r141copy(T141* C,T0* a1);
void r141set(T141* C,T0* a1,T6 a2,T6 a3);
T6 r141is_equal(T141* C,T0* a1);
T6 r141same_position(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
T6 r141is_last(T141* C);
T6 r141same_type(T141* C,T0* a1);
void r141make(T141* C,T0* a1);
T6 r141conforms_to(T141* C,T0* a1);
void r141set_after(T141* C);
T0* r141twin(T141* C);
void r123clear_all(T0* a1);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
void r629copy(T629* C,T0* a1);
void r629append_last(T629* C,T0* a1);
T0* r629cursor_item(T0* a1);
T6 r629is_equal(T629* C,T0* a1);
void r629remove_traversing_cursor(T629* C,T0* a1);
void r629cursor_go_after(T629* C,T0* a1);
void r629move_all_cursors_after(T629* C);
void r629add_traversing_cursor(T629* C,T0* a1);
T6 r629se_assigned_from(T0* a1);
T6 r629same_type(T629* C,T0* a1);
void r629make(T629* C);
T6 r629cursor_after(T0* a1);
T6 r629conforms_to(T629* C,T0* a1);
void r629cursor_forth(T629* C,T0* a1);
void r629make_from_linear(T629* C,T0* a1);
void r629cursor_start(T629* C,T0* a1);
T0* r629twin(T629* C);
void r629force_last(T629* C,T0* a1);
T0* r629new_cursor(T629* C);
T6 r629cursor_off(T0* a1);
void r83copy(T83* C,T0* a1);
T0* r83cursor_item(T0* a1);
T6 r83is_equal(T83* C,T0* a1);
void r83remove_traversing_cursor(T83* C,T0* a1);
void r83move_all_cursors_after(T83* C);
void r83add_traversing_cursor(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
T6 r83same_type(T83* C,T0* a1);
void r83make(T83* C);
T6 r83cursor_after(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
void r83cursor_forth(T83* C,T0* a1);
void r83cursor_start(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83force_last(T83* C,T0* a1);
T0* r83new_cursor(T83* C);
T6 r83cursor_off(T0* a1);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
T6 r126conforms_to(T126* C,T0* a1);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
void r411copy(T411* C,T0* a1);
T6 r411is_equal(T411* C,T0* a1);
T6 r411same_position(T411* C,T0* a1);
T6 r411se_assigned_from(T0* a1);
T6 r411same_type(T411* C,T0* a1);
T6 r411off(T411* C);
T6 r411conforms_to(T411* C,T0* a1);
T0* r411twin(T411* C);
void r308copy(T308* C,T0* a1);
void r308wipe_out(T308* C);
void r308make_clashes(T308* C,T2 a1);
void r308search_position(T308* C,T2 a1);
T6 r308is_equal(T308* C,T0* a1);
void r308remove_traversing_cursor(T308* C,T0* a1);
void r308clone_slots(T308* C);
T0* r308item(T308* C,T2 a1);
void r308clone_clashes(T308* C);
void r308make_items(T308* C,T2 a1);
void r308move_all_cursors_after(T308* C);
void r308add_traversing_cursor(T308* C,T0* a1);
T6 r308se_assigned_from(T0* a1);
T0* r308clone(T0* a1);
T6 r308same_type(T308* C,T0* a1);
void r308slots_wipe_out(T308* C);
void r308clashes_wipe_out(T308* C);
void r308clone_items(T308* C);
T6 r308conforms_to(T308* C,T0* a1);
T6 r308has(T308* C,T2 a1);
void r308make_keys(T308* C,T2 a1);
T2 r308hash_position(T308* C,T2 a1);
void r308items_wipe_out(T308* C);
void r308clone_keys(T308* C);
void r308make_with_equality_testers(T308* C,T2 a1,T0* a2,T0* a3);
T6 r308cursor_same_position(T0* a1,T0* a2);
T0* r308twin(T308* C);
void r308keys_wipe_out(T308* C);
T0* r308new_cursor(T308* C);
void r308make_slots(T308* C,T2 a1);
T2 r308new_modulus(T2 a1);
T6 r308cursor_off(T0* a1);
T6 r284is_equal(T284* C,T0* a1);
T6 r284se_assigned_from(T0* a1);
T6 r284conforms_to(T284* C,T0* a1);
T6 r284test(T0* a1,T0* a2);
T0* r284twin(T284* C);
void r440copy(T440* C,T0* a1);
T6 r440is_equal(T440* C,T0* a1);
T6 r440same_position(T440* C,T0* a1);
T6 r440se_assigned_from(T0* a1);
T6 r440same_type(T440* C,T0* a1);
void r440make(T440* C,T0* a1);
T6 r440off(T440* C);
T6 r440conforms_to(T440* C,T0* a1);
T0* r440twin(T440* C);
void r271copy(T271* C,T0* a1);
T0* r271keys_item(T271* C,T2 a1);
void r271make_clashes(T271* C,T2 a1);
T0* r271cursor_item(T271* C,T0* a1);
void r271search_position(T271* C,T0* a1);
T6 r271is_equal(T271* C,T0* a1);
void r271remove_traversing_cursor(T271* C,T0* a1);
void r271clone_slots(T271* C);
T0* r271item(T271* C,T0* a1);
void r271clone_clashes(T271* C);
void r271move_all_cursors_after(T271* C);
void r271make_items(T271* C,T2 a1);
void r271add_traversing_cursor(T271* C,T0* a1);
T6 r271se_assigned_from(T0* a1);
T0* r271clone(T0* a1);
T6 r271same_type(T271* C,T0* a1);
void r271make(T271* C,T2 a1);
void r271clone_items(T271* C);
T6 r271cursor_after(T0* a1);
T6 r271conforms_to(T271* C,T0* a1);
T6 r271has(T271* C,T0* a1);
void r271make_keys(T271* C,T2 a1);
T2 r271hash_position(T271* C,T0* a1);
void r271cursor_forth(T271* C,T0* a1);
void r271clone_keys(T271* C);
void r271make_with_equality_testers(T271* C,T2 a1,T0* a2,T0* a3);
T6 r271cursor_same_position(T0* a1,T0* a2);
void r271cursor_start(T271* C,T0* a1);
T0* r271twin(T271* C);
T0* r271new_cursor(T271* C);
void r271make_slots(T271* C,T2 a1);
T2 r271new_modulus(T2 a1);
T6 r271cursor_off(T0* a1);
T6 r569is_equal(T569* C,T0* a1);
T6 r569se_assigned_from(T0* a1);
T0* r569make(T2 a1);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569resize(T0* a1,T2 a2);
T0* r569twin(T569* C);
void r566copy(T566* C,T0* a1);
T6 r566is_equal(T566* C,T0* a1);
T6 r566same_position(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T6 r566same_type(T566* C,T0* a1);
T6 r566off(T566* C);
T6 r566conforms_to(T566* C,T0* a1);
T0* r566twin(T566* C);
void r419copy(T419* C,T0* a1);
T6 r419is_equal(T419* C,T0* a1);
void r419remove_traversing_cursor(T419* C,T0* a1);
void r419move_all_cursors_after(T419* C);
void r419add_traversing_cursor(T419* C,T0* a1);
T6 r419se_assigned_from(T0* a1);
T0* r419clone(T0* a1);
T6 r419cursor_before(T0* a1);
T6 r419same_type(T419* C,T0* a1);
void r419make(T419* C,T2 a1);
T6 r419cursor_after(T0* a1);
T6 r419conforms_to(T419* C,T0* a1);
T6 r419cursor_same_position(T0* a1,T0* a2);
T0* r419twin(T419* C);
T0* r419new_cursor(T419* C);
T6 r419cursor_off(T0* a1);
void r430copy(T430* C,T0* a1);
T6 r430is_equal(T430* C,T0* a1);
T6 r430same_position(T430* C,T0* a1);
T6 r430se_assigned_from(T0* a1);
T6 r430same_type(T430* C,T0* a1);
T6 r430off(T430* C);
T6 r430conforms_to(T430* C,T0* a1);
T0* r430twin(T430* C);
void r60copy(T60* C,T0* a1);
T6 r60is_equal(T60* C,T0* a1);
void r60remove_traversing_cursor(T60* C,T0* a1);
void r60move_all_cursors_after(T60* C);
void r60add_traversing_cursor(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
T6 r60same_type(T60* C,T0* a1);
void r60make(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
void r60cursor_forth(T60* C,T0* a1);
void r60cursor_start(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60force_last(T60* C,T0* a1);
T0* r60new_cursor(T60* C);
T6 r60cursor_off(T0* a1);
void r372copy(T372* C,T0* a1);
T0* r372keys_item(T372* C,T2 a1);
void r372make_clashes(T372* C,T2 a1);
void r372search_position(T372* C,T0* a1);
T6 r372is_equal(T372* C,T0* a1);
void r372remove_traversing_cursor(T372* C,T0* a1);
void r372clone_slots(T372* C);
T0* r372item(T372* C,T0* a1);
void r372clone_clashes(T372* C);
void r372move_all_cursors_after(T372* C);
void r372make_items(T372* C,T2 a1);
void r372add_traversing_cursor(T372* C,T0* a1);
T6 r372se_assigned_from(T0* a1);
T0* r372clone(T0* a1);
T6 r372same_type(T372* C,T0* a1);
void r372make(T372* C,T2 a1);
void r372clone_items(T372* C);
T6 r372conforms_to(T372* C,T0* a1);
T6 r372has(T372* C,T0* a1);
void r372make_keys(T372* C,T2 a1);
T2 r372hash_position(T372* C,T0* a1);
void r372clone_keys(T372* C);
void r372make_with_equality_testers(T372* C,T2 a1,T0* a2,T0* a3);
T6 r372cursor_same_position(T0* a1,T0* a2);
T0* r372twin(T372* C);
T0* r372new_cursor(T372* C);
void r372make_slots(T372* C,T2 a1);
T2 r372new_modulus(T2 a1);
T6 r372cursor_off(T0* a1);
T6 r762is_equal(T762* C,T0* a1);
T6 r762se_assigned_from(T0* a1);
void r762make(T762* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r762conforms_to(T762* C,T0* a1);
T0* r762twin(T762* C);
T6 r515is_equal(T515* C,T0* a1);
T6 r515se_assigned_from(T0* a1);
void r515make(T515* C,T0* a1,T2 a2,T2 a3);
T6 r515conforms_to(T515* C,T0* a1);
T0* r515twin(T515* C);
T6 r599is_equal(T599* C,T0* a1);
T6 r599se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r599Arguments(void);
void r599make(T599* C,T0* a1,T0* a2,T0* a3);
T0* r599message(T599* C,T0* a1);
T6 r599conforms_to(T599* C,T0* a1);
T0* r599twin(T599* C);
T0* r599default_message(T599* C);
extern T0*oBC93STRING_;
T6 r662is_equal(T662* C,T0* a1);
T6 r662se_assigned_from(T0* a1);
T0* r662Arguments(void);
void r662make(T662* C,T0* a1,T0* a2,T0* a3);
T0* r662message(T662* C,T0* a1);
T6 r662conforms_to(T662* C,T0* a1);
T0* r662twin(T662* C);
T0* r662default_message(T662* C);
T6 r664is_equal(T664* C,T0* a1);
T0* r664new_tree_parser(T664* C);
T6 r664se_assigned_from(T0* a1);
T0* r664new_tree_parser_imp(T664* C);
T6 r664conforms_to(T664* C,T0* a1);
T0* r664twin(T664* C);
T6 r664is_available(T664* C);
T6 r172is_closed(T172* C);
void r172old_close(T172* C);
T6 r172is_equal(T172* C,T0* a1);
T2 r172read_to_string(T172* C,T0* a1,T2 a2,T2 a3);
void r172open_read(T172* C);
T6 r172se_assigned_from(T0* a1);
void r172old_read_character(T172* C);
T6 r172old_end_of_file(T172* C);
void r172read_character(T172* C);
void r172close(T172* C);
void r172make(T172* C,T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
void r172connect_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r571is_equal(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
void r571make_with_variables(T571* C,T0* a1,T0* a2);
T6 r571conforms_to(T571* C,T0* a1);
extern T0*oBC191uc_cluster;
extern int fBC191uc_cluster;
T0* r571uc_cluster(void);
void r571parse_file(T571* C,T0* a1);
T0* r571twin(T571* C);
extern T0*oBC191uc_system;
extern int fBC191uc_system;
T0* r571uc_system(void);
T0* r571new_unicode_string(T0* a1);
T6 r602is_equal(T602* C,T0* a1);
T6 r602se_assigned_from(T0* a1);
T0* r602Arguments(void);
void r602make(T602* C);
T0* r602message(T602* C,T0* a1);
T6 r602conforms_to(T602* C,T0* a1);
T0* r602twin(T602* C);
T0* r602default_message(T602* C);
T6 r628is_equal(T628* C,T0* a1);
T6 r628se_assigned_from(T0* a1);
void r628make(T628* C,T0* a1);
T6 r628conforms_to(T628* C,T0* a1);
T0* r628twin(T628* C);
T6 r189is_equal(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
void r189make_with_variables(T189* C,T0* a1,T0* a2);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189uc_cluster(void);
void r189parse_file(T189* C,T0* a1);
T0* r189twin(T189* C);
T0* r189uc_system(void);
T0* r189new_unicode_string(T0* a1);
T6 r216is_equal(T216* C,T0* a1);
T6 r216se_assigned_from(T0* a1);
void r216unmount_root(T216* C,T0* a1);
void r216make(T216* C,T0* a1);
void r216mount(T216* C,T0* a1);
T6 r216conforms_to(T216* C,T0* a1);
void r216unmount(T216* C);
T0* r216twin(T216* C);
void r216mount_root(T216* C,T0* a1);
void r221set_optimize(T221* C,T6 a1);
T6 r221is_equal(T221* C,T0* a1);
void r221set_ensure(T221* C,T6 a1);
T6 r221se_assigned_from(T0* a1);
void r221make(T221* C);
void r221set_check(T221* C,T6 a1);
T6 r221conforms_to(T221* C,T0* a1);
void r221set_invariant(T221* C,T6 a1);
void r221set_loop(T221* C,T6 a1);
void r221set_debug(T221* C,T6 a1);
T0* r221twin(T221* C);
void r221set_require(T221* C,T6 a1);
T6 r256is_equal(T256* C,T0* a1);
T6 r256se_assigned_from(T0* a1);
void r256make(T256* C,T0* a1,T2 a2,T0* a3);
T6 r256conforms_to(T256* C,T0* a1);
T0* r256twin(T256* C);
T6 r220has_exported_features(T220* C);
T6 r220is_equal(T220* C,T0* a1);
T6 r220se_assigned_from(T0* a1);
void r220merge(T220* C,T0* a1);
void r220make(T220* C);
T6 r220is_empty(T220* C);
T6 r220conforms_to(T220* C,T0* a1);
T0* r220cloned_externals(T220* C);
T6 r220has_include_directories(T220* C);
T6 r220has_link_libraries(T220* C);
T0* r220twin(T220* C);
T6 r226is_equal(T226* C,T0* a1);
T6 r226se_assigned_from(T0* a1);
extern T0*oBC34std;
T6 r226conforms_to(T226* C,T0* a1);
T0* r226twin(T226* C);
void r226make_standard(T226* C);
T6 r520is_equal(T520* C,T0* a1);
T6 r520se_assigned_from(T0* a1);
T6 r520conforms_to(T520* C,T0* a1);
T0* r520twin(T520* C);
void r575put(T575* C,T0* a1,T0* a2);
T6 r575is_equal(T575* C,T0* a1);
T0* r575item(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
void r575make(T575* C);
T6 r575conforms_to(T575* C,T0* a1);
T0* r575twin(T575* C);
T6 r190is_equal(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
void r190make_with_variables(T190* C,T0* a1,T0* a2);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190uc_cluster(void);
void r190parse_file(T190* C,T0* a1);
T0* r190twin(T190* C);
T0* r190uc_system(void);
T0* r190new_unicode_string(T0* a1);
void r130print_cluster(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130is_equal(T130* C,T0* a1);
void r130print_externals(T0* a1,T2 a2,T0* a3);
void r130print_xml_cluster_file(T130* C,T0* a1,T0* a2);
T6 r130se_assigned_from(T0* a1);
void r130print_exported_class(T0* a1,T2 a2,T0* a3);
void r130print_clusters(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130conforms_to(T130* C,T0* a1);
void r130generate_cluster(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130print_link_libraries(T0* a1,T2 a2,T0* a3);
void r130generate_system(T130* C,T0* a1);
void r130print_xml_system_file(T130* C,T0* a1,T0* a2);
void r130print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r725is_equal(T725* C,T0* a1);
T2 r725read_to_string(T725* C,T0* a1,T2 a2,T2 a3);
T6 r725se_assigned_from(T0* a1);
void r725old_read_character(T725* C);
T6 r725old_end_of_file(T725* C);
void r725read_character(T725* C);
void r725make(T725* C);
T6 r725conforms_to(T725* C,T0* a1);
T0* r725twin(T725* C);
T0* r511substring(T511* C,T2 a1,T2 a2);
void r511fill_from_string(T511* C,T0* a1,T2 a2);
T6 r511is_equal(T511* C,T0* a1);
T2 r511fill_from_stream(T511* C,T0* a1,T2 a2,T2 a3);
T6 r511se_assigned_from(T0* a1);
void r511move_left(T511* C,T2 a1,T2 a2,T2 a3);
void r511make(T511* C,T2 a1);
T6 r511conforms_to(T511* C,T0* a1);
void r511resize(T511* C,T2 a1);
T0* r511twin(T511* C);
T6 r514is_equal(T514* C,T0* a1);
T6 r514se_assigned_from(T0* a1);
void r514make(T514* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r514conforms_to(T514* C,T0* a1);
T0* r514twin(T514* C);
T6 r606is_equal(T606* C,T0* a1);
T6 r606se_assigned_from(T0* a1);
T6 r606conforms_to(T606* C,T0* a1);
T6 r606is_undefined(T606* C);
T0* r606twin(T606* C);
T6 r760is_equal(T760* C,T0* a1);
T6 r760se_assigned_from(T0* a1);
void r760make(T760* C,T0* a1,T0* a2);
T6 r760conforms_to(T760* C,T0* a1);
T0* r760twin(T760* C);
T6 r601is_equal(T601* C,T0* a1);
T6 r601se_assigned_from(T0* a1);
T0* r601Arguments(void);
void r601make(T601* C,T0* a1);
T0* r601message(T601* C,T0* a1);
T6 r601conforms_to(T601* C,T0* a1);
T0* r601twin(T601* C);
T0* r601default_message(T601* C);
T6 r710is_closed(T710* C);
void r710old_close(T710* C);
T6 r710is_equal(T710* C,T0* a1);
T6 r710se_assigned_from(T0* a1);
void r710close(T710* C);
void r710make(T710* C,T0* a1);
void r710old_put_string(T710* C,T0* a1);
T6 r710conforms_to(T710* C,T0* a1);
void r710connect_to(T710* C,T0* a1);
void r710put_line(T710* C,T0* a1);
T0* r710twin(T710* C);
void r710open_write(T710* C);
T0* r225new_class(T0* a1,T2 a2,T0* a3);
T6 r225is_equal(T225* C,T0* a1);
T6 r225se_assigned_from(T0* a1);
T6 r225conforms_to(T225* C,T0* a1);
T0* r225twin(T225* C);
void r127print_cluster(T127* C,T0* a1,T0* a2);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127print_ace_file(T127* C,T0* a1,T0* a2);
void r127print_exported_class(T0* a1,T2 a2,T0* a3);
void r127print_clusters(T127* C,T0* a1,T0* a2);
T6 r127conforms_to(T127* C,T0* a1);
void r127print_precompile_ace_file(T127* C,T0* a1,T0* a2);
void r127generate_cluster(T127* C,T0* a1);
T0* r127twin(T127* C);
void r127print_options(T0* a1,T2 a2,T0* a3);
void r127print_indentation(T2 a1,T0* a2);
void r127print_link_libraries(T0* a1,T0* a2);
void r127generate_system(T127* C,T0* a1);
void r127print_include_directories(T0* a1,T0* a2);
T6 r759is_equal(T759* C,T0* a1);
T6 r759se_assigned_from(T0* a1);
void r759make_from_implementation(T759* C,T0* a1);
T6 r759conforms_to(T759* C,T0* a1);
T0* r759twin(T759* C);
void r671set_last_cell(T671* C,T0* a1);
void r671copy(T671* C,T0* a1);
void r671wipe_out(T671* C);
void r671remove_first(T671* C);
T0* r671cursor_item(T0* a1);
T6 r671cursor_is_last(T671* C,T0* a1);
T6 r671is_equal(T671* C,T0* a1);
void r671remove_traversing_cursor(T671* C,T0* a1);
void r671cursor_go_after(T671* C,T0* a1);
void r671move_all_cursors_after(T671* C);
void r671add_traversing_cursor(T671* C,T0* a1);
T6 r671se_assigned_from(T0* a1);
T6 r671cursor_before(T0* a1);
T6 r671same_type(T671* C,T0* a1);
void r671make(T671* C);
T0* r671first_element(T671* C);
void r671remove_last(T671* C);
T6 r671cursor_after(T0* a1);
T6 r671conforms_to(T671* C,T0* a1);
void r671cursor_forth(T671* C,T0* a1);
void r671move_last_cursors_after(T671* C);
void r671cursor_start(T671* C,T0* a1);
T0* r671twin(T671* C);
T0* r671new_cursor(T671* C);
T6 r671cursor_is_first(T671* C,T0* a1);
void r671remove_at_cursor(T671* C,T0* a1);
void r671put_last(T671* C,T0* a1);
void r671move_all_cursors(T671* C,T0* a1,T0* a2);
T6 r671cursor_off(T0* a1);
T6 r104is_defined(T104* C,T0* a1);
extern T0*oBC105template_expander;
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104make(T104* C);
T6 r104conforms_to(T104* C,T0* a1);
T0* r104twin(T104* C);
void r104define_value(T104* C,T0* a1,T0* a2);
T0* r104expanded_variables(T104* C,T0* a1);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133make(T133* C,T0* a1,T0* a2);
T6 r133conforms_to(T133* C,T0* a1);
void r133execute(T133* C);
T0* r133twin(T133* C);
T6 r751is_equal(T751* C,T0* a1);
T6 r751se_assigned_from(T0* a1);
void r751make(T751* C,T0* a1,T0* a2);
T6 r751conforms_to(T751* C,T0* a1);
T0* r751twin(T751* C);
T6 r100is_equal(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100Arguments(void);
void r100make(T100* C,T0* a1);
T0* r100message(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100default_message(T100* C);
void r103print_cluster(T103* C,T0* a1,T0* a2);
void r103print_loadpath_clusters(T103* C,T0* a1,T0* a2);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_loadpath_cluster(T103* C,T0* a1,T0* a2);
void r103print_ace_file(T103* C,T0* a1,T0* a2);
void r103generate_cecil_file(T103* C,T0* a1);
void r103print_exported_class(T0* a1,T0* a2);
void r103print_clusters(T103* C,T0* a1,T0* a2);
T6 r103conforms_to(T103* C,T0* a1);
void r103generate_cluster(T103* C,T0* a1);
T0* r103twin(T103* C);
void r103print_options(T0* a1,T2 a2,T0* a3);
void r103print_exported_classes(T0* a1,T0* a2);
void r103print_indentation(T2 a1,T0* a2);
void r103print_link_libraries(T0* a1,T0* a2);
void r103generate_system(T103* C,T0* a1);
void r103print_include_directories(T0* a1,T0* a2);
T6 r753is_equal(T753* C,T0* a1);
T6 r753se_assigned_from(T0* a1);
void r753make_from_implementation(T753* C,T0* a1);
T6 r753conforms_to(T753* C,T0* a1);
T0* r753twin(T753* C);
T6 r156is_equal(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
T6 r156conforms_to(T156* C,T0* a1);
void r156put_line(T0* a1);
T0* r156twin(T156* C);
T6 r715is_equal(T715* C,T0* a1);
T6 r715se_assigned_from(T0* a1);
T0* r715Arguments(void);
void r715make(T715* C,T0* a1);
T0* r715message(T715* C,T0* a1);
T6 r715conforms_to(T715* C,T0* a1);
T0* r715twin(T715* C);
T0* r715default_message(T715* C);
T6 r132is_equal(T132* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132execute_generators(T132* C,T0* a1);
void r132make(T132* C,T0* a1,T0* a2);
T6 r132conforms_to(T132* C,T0* a1);
void r132execute(T132* C);
T0* r132twin(T132* C);
T6 r217is_equal(T217* C,T0* a1);
T6 r217se_assigned_from(T0* a1);
void r217unmount_root(T217* C,T0* a1);
void r217make(T217* C,T0* a1,T0* a2);
void r217mount(T217* C,T0* a1);
T6 r217conforms_to(T217* C,T0* a1);
void r217unmount(T217* C);
T0* r217twin(T217* C);
void r217set_excluded(T217* C,T0* a1);
void r217mount_root(T217* C,T0* a1);
void r490yy_build_tables(T490* C);
extern T0*oBC491yy_meta_template;
extern int fBC491yy_meta_template;
T0* r490yy_meta_template(void);
extern T0*oBC490yycheck_template;
extern int fBC490yycheck_template;
T0* r490yycheck_template(void);
T6 r490is_equal(T490* C,T0* a1);
extern T0*oBC491yy_accept_template;
extern int fBC491yy_accept_template;
T0* r490yy_accept_template(void);
extern T0*oBC491yy_base_template;
extern int fBC491yy_base_template;
T0* r490yy_base_template(void);
void r490yy_build_parser_tables(T490* C);
T6 r490se_assigned_from(T0* a1);
extern T0*oBC490yytable_template;
extern int fBC490yytable_template;
T0* r490yytable_template(void);
T0* r490yyfixed_array(T0* a1);
extern T0*oBC490yypgoto_template;
extern int fBC490yypgoto_template;
T0* r490yypgoto_template(void);
extern T0*oBC498Empty_buffer;
extern int fBC498Empty_buffer;
T0* r490Empty_buffer(void);
void r490yy_set_content(T490* C,T0* a1);
extern T0*oBC491yy_nxt_template;
extern int fBC491yy_nxt_template;
T0* r490yy_nxt_template(void);
extern T0*oBC491yy_chk_template;
extern int fBC491yy_chk_template;
T0* r490yy_chk_template(void);
extern T0*oBC490yypact_template;
extern int fBC490yypact_template;
T0* r490yypact_template(void);
void r490make_parser_skeleton(T490* C);
extern T0*oBC490yydefact_template;
extern int fBC490yydefact_template;
T0* r490yydefact_template(void);
extern T0*oBC491yy_def_template;
extern int fBC491yy_def_template;
T0* r490yy_def_template(void);
T6 r490conforms_to(T490* C,T0* a1);
extern T0*oBC491yy_ec_template;
extern int fBC491yy_ec_template;
T0* r490yy_ec_template(void);
void r490make_with_buffer(T490* C,T0* a1);
void r490yy_initialize(T490* C);
extern T0*oBC490yyr1_template;
extern int fBC490yyr1_template;
T0* r490yyr1_template(void);
void r490make_with_factory(T490* C,T0* a1,T0* a2,T0* a3);
T0* r490twin(T490* C);
void r490yy_load_input_buffer(T490* C);
extern T0*oBC490yytranslate_template;
extern int fBC490yytranslate_template;
T0* r490yytranslate_template(void);
T0* r490yy_fixed_array(T0* a1);
extern T0*oBC490yyr2_template;
extern int fBC490yyr2_template;
T0* r490yyr2_template(void);
extern T0*oBC490yydefgoto_template;
extern int fBC490yydefgoto_template;
T0* r490yydefgoto_template(void);
void r490make_eiffel_scanner(T490* C,T0* a1,T0* a2);
T6 r260is_equal(T260* C,T0* a1);
T6 r260se_assigned_from(T0* a1);
void r260make(T260* C,T0* a1,T0* a2);
T6 r260conforms_to(T260* C,T0* a1);
T0* r260twin(T260* C);
T6 r595is_equal(T595* C,T0* a1);
T6 r595se_assigned_from(T0* a1);
T0* r595Arguments(void);
void r595make(T595* C,T0* a1,T0* a2);
T0* r595message(T595* C,T0* a1);
T6 r595conforms_to(T595* C,T0* a1);
T0* r595twin(T595* C);
T0* r595default_message(T595* C);
T6 r187is_equal(T187* C,T0* a1);
T6 r187se_assigned_from(T0* a1);
T6 r187conforms_to(T187* C,T0* a1);
void r187make_basic_classes(T187* C);
T0* r187eiffel_class(T187* C,T0* a1);
void r187set_mounted_clusters(T187* C,T0* a1);
void r187make_with_factory(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187twin(T187* C);
void r187merge_externals(T187* C);
extern T0*oBC191uc_optimize;
extern int fBC191uc_optimize;
T0* r203uc_optimize(void);
void r203validate_named_cluster(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_check;
extern int fBC191uc_check;
T0* r203uc_check(void);
void r203validate_root(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_external;
extern int fBC191uc_external;
T0* r203uc_external(void);
void r203validate_external(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_exclude;
extern int fBC191uc_exclude;
T0* r203uc_exclude(void);
void r203validate_mount(T203* C,T0* a1,T0* a2);
T6 r203is_equal(T203* C,T0* a1);
void r203validate_system_doc(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_invariant;
extern int fBC191uc_invariant;
T0* r203uc_invariant(void);
T6 r203se_assigned_from(T0* a1);
void r203validate_cluster(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_description;
extern int fBC191uc_description;
T0* r203uc_description(void);
extern T0*oBC191uc_mount;
extern int fBC191uc_mount;
T0* r203uc_mount(void);
extern T0*oBC191uc_debug;
extern int fBC191uc_debug;
T0* r203uc_debug(void);
extern T0*oBC191uc_option;
extern int fBC191uc_option;
T0* r203uc_option(void);
extern T0*oBC191uc_root;
extern int fBC191uc_root;
T0* r203uc_root(void);
void r203validate_system(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_feature;
extern int fBC191uc_feature;
T0* r203uc_feature(void);
extern T0*oBC191uc_class;
extern int fBC191uc_class;
T0* r203uc_class(void);
extern T0*oBC191uc_loop;
extern int fBC191uc_loop;
T0* r203uc_loop(void);
T6 r203conforms_to(T203* C,T0* a1);
void r203validate_cluster_doc(T203* C,T0* a1,T0* a2);
void r203validate_export(T203* C,T0* a1,T0* a2);
T0* r203uc_cluster(void);
void r203validate_exclude(T203* C,T0* a1,T0* a2);
extern T0*oBC191uc_export;
extern int fBC191uc_export;
T0* r203uc_export(void);
extern T0*oBC191uc_link_library;
extern int fBC191uc_link_library;
T0* r203uc_link_library(void);
extern T0*oBC191uc_include_dir;
extern int fBC191uc_include_dir;
T0* r203uc_include_dir(void);
extern T0*oBC191uc_location;
extern int fBC191uc_location;
T0* r203uc_location(void);
T0* r203twin(T203* C);
T0* r203uc_system(void);
extern T0*oBC191uc_creation;
extern int fBC191uc_creation;
T0* r203uc_creation(void);
extern T0*oBC191uc_name;
extern int fBC191uc_name;
T0* r203uc_name(void);
extern T0*oBC191uc_require;
extern int fBC191uc_require;
T0* r203uc_require(void);
void r203validate_option(T203* C,T0* a1,T0* a2);
T0* r203new_unicode_string(T0* a1);
extern T0*oBC191uc_ensure;
extern int fBC191uc_ensure;
T0* r203uc_ensure(void);
void r129print_cluster(T129* C,T0* a1,T0* a2);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129print_ace_file(T129* C,T0* a1,T0* a2);
void r129print_exported_class(T0* a1,T2 a2,T0* a3);
void r129print_component(T0* a1);
void r129print_clusters(T129* C,T0* a1,T0* a2);
T6 r129conforms_to(T129* C,T0* a1);
void r129print_precompile_ace_file(T129* C,T0* a1,T0* a2);
void r129generate_cluster(T129* C,T0* a1);
T0* r129twin(T129* C);
void r129print_options(T0* a1,T2 a2,T0* a3);
void r129print_indentation(T2 a1,T0* a2);
void r129print_link_libraries(T0* a1,T0* a2);
void r129generate_system(T129* C,T0* a1);
void r129print_include_directories(T0* a1,T0* a2);
T6 r598is_equal(T598* C,T0* a1);
T6 r598se_assigned_from(T0* a1);
T0* r598Arguments(void);
void r598make(T598* C,T0* a1,T0* a2,T0* a3);
T0* r598message(T598* C,T0* a1);
T6 r598conforms_to(T598* C,T0* a1);
T0* r598twin(T598* C);
T0* r598default_message(T598* C);
T6 r708is_equal(T708* C,T0* a1);
T6 r708se_assigned_from(T0* a1);
T0* r708Arguments(void);
void r708make(T708* C,T0* a1);
T0* r708message(T708* C,T0* a1);
T6 r708conforms_to(T708* C,T0* a1);
T0* r708twin(T708* C);
T0* r708default_message(T708* C);
T6 r577is_equal(T577* C,T0* a1);
T6 r577se_assigned_from(T0* a1);
T6 r577conforms_to(T577* C,T0* a1);
T0* r577expand_from_hash_table(T0* a1,T0* a2);
T0* r577twin(T577* C);
void r510set_position(T510* C,T2 a1,T2 a2,T2 a3);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
void r510make(T510* C,T0* a1);
T6 r510conforms_to(T510* C,T0* a1);
void r510make_from_buffer(T510* C,T0* a1);
T0* r510twin(T510* C);
T6 r518same_identifier(T518* C,T0* a1);
T6 r518is_equal(T518* C,T0* a1);
T6 r518se_assigned_from(T0* a1);
T6 r518same_type(T518* C,T0* a1);
void r518make(T518* C,T0* a1,T0* a2);
T6 r518same_feature_name(T518* C,T0* a1);
T6 r518conforms_to(T518* C,T0* a1);
T0* r518twin(T518* C);
T6 r255is_equal(T255* C,T0* a1);
T6 r255se_assigned_from(T0* a1);
void r255make(T255* C,T0* a1);
T6 r255conforms_to(T255* C,T0* a1);
void r255set_current_class(T255* C,T0* a1);
T0* r255twin(T255* C);
T6 r572is_equal(T572* C,T0* a1);
void r572_199Pmake_from_implementation(T572* C,T0* a1);
T6 r572se_assigned_from(T0* a1);
void r572make_from_implementation(T572* C,T0* a1);
T6 r572conforms_to(T572* C,T0* a1);
T0* r572twin(T572* C);
T6 r572cursor_off(T572* C,T0* a1);
void r128print_cluster(T128* C,T0* a1,T0* a2);
void r128print_esd_file(T128* C,T0* a1,T0* a2);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T0* r128clone(T0* a1);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T0* r128remove_all_characters(T0* a1,T3 a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128print_eld_file(T128* C,T0* a1,T0* a2);
void r128generate_cluster(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
void r128print_link_libraries(T0* a1,T0* a2);
void r128generate_system(T128* C,T0* a1);
T6 r603is_equal(T603* C,T0* a1);
T6 r603se_assigned_from(T0* a1);
T0* r603Arguments(void);
void r603make(T603* C,T0* a1);
T0* r603message(T603* C,T0* a1);
T6 r603conforms_to(T603* C,T0* a1);
T0* r603twin(T603* C);
T0* r603default_message(T603* C);
T6 r522is_equal(T522* C,T0* a1);
T6 r522se_assigned_from(T0* a1);
void r522make(T522* C,T0* a1,T0* a2);
T6 r522conforms_to(T522* C,T0* a1);
T0* r522twin(T522* C);
T0* r204uc_optimize(void);
T0* r204uc_check(void);
T0* r204uc_external(void);
T0* r204uc_exclude(void);
T0* r204new_cluster(T204* C,T0* a1);
T0* r204new_exported_feature(T0* a1);
T6 r204is_equal(T204* C,T0* a1);
T0* r204new_export(T0* a1);
T0* r204uc_invariant(void);
T6 r204se_assigned_from(T0* a1);
T0* r204new_options(T0* a1);
T0* r204new_universe(T204* C,T0* a1);
T6 r204is_false(T0* a1);
T0* r204uc_mount(void);
T0* r204uc_debug(void);
T0* r204uc_option(void);
void r204make(T204* C,T0* a1,T0* a2);
T0* r204uc_root(void);
extern T0*oBC205Execution_environment;
T0* r204uc_feature(void);
T0* r204uc_class(void);
T0* r204uc_loop(void);
T6 r204conforms_to(T204* C,T0* a1);
extern T0*oBC191uc_abstract;
extern int fBC191uc_abstract;
T0* r204uc_abstract(void);
T0* r204new_externals(T0* a1);
extern T0*oBC191uc_alias;
extern int fBC191uc_alias;
T0* r204uc_alias(void);
T0* r204uc_cluster(void);
extern T0*oBC191uc_enable;
extern int fBC191uc_enable;
T0* r204uc_enable(void);
T0* r204uc_export(void);
T0* r204uc_link_library(void);
T6 r204is_true(T0* a1);
T0* r204uc_include_dir(void);
T0* r204uc_location(void);
T0* r204twin(T204* C);
T0* r204new_mount(T204* C,T0* a1);
T0* r204uc_creation(void);
T0* r204uc_require(void);
T0* r204uc_name(void);
T0* r204new_unicode_string(T0* a1);
T0* r204uc_ensure(void);
T6 r755is_equal(T755* C,T0* a1);
T6 r755se_assigned_from(T0* a1);
void r755make(T755* C,T0* a1,T0* a2);
T6 r755conforms_to(T755* C,T0* a1);
T0* r755twin(T755* C);
T2 r676new_capacity(T2 a1);
void r676copy(T676* C,T0* a1);
void r676force(T676* C,T0* a1,T0* a2);
void r676make_clashes(T676* C,T2 a1);
void r676make_non_equal(T676* C,T2 a1);
T0* r676cursor_item(T676* C,T0* a1);
void r676search_position(T676* C,T0* a1);
T6 r676is_equal(T676* C,T0* a1);
void r676remove_traversing_cursor(T676* C,T0* a1);
void r676clone_slots(T676* C);
void r676keys_resize(T676* C,T2 a1);
T0* r676item(T676* C,T0* a1);
void r676clone_clashes(T676* C);
void r676move_all_cursors_after(T676* C);
void r676make_items(T676* C,T2 a1);
void r676add_traversing_cursor(T676* C,T0* a1);
T6 r676se_assigned_from(T0* a1);
T0* r676clone(T0* a1);
T6 r676same_type(T676* C,T0* a1);
void r676make(T676* C,T2 a1);
void r676clone_items(T676* C);
T6 r676cursor_after(T0* a1);
T6 r676conforms_to(T676* C,T0* a1);
T6 r676has(T676* C,T0* a1);
void r676make_keys(T676* C,T2 a1);
T2 r676hash_position(T676* C,T0* a1);
void r676cursor_forth(T676* C,T0* a1);
void r676items_resize(T676* C,T2 a1);
void r676clone_keys(T676* C);
void r676resize(T676* C,T2 a1);
void r676make_with_equality_testers(T676* C,T2 a1,T0* a2,T0* a3);
T6 r676cursor_same_position(T0* a1,T0* a2);
void r676cursor_start(T676* C,T0* a1);
void r676clashes_resize(T676* C,T2 a1);
void r676slots_resize(T676* C,T2 a1);
T0* r676twin(T676* C);
T0* r676new_cursor(T676* C);
void r676make_slots(T676* C,T2 a1);
T2 r676new_modulus(T2 a1);
T6 r676cursor_off(T0* a1);
T6 r600is_equal(T600* C,T0* a1);
T6 r600se_assigned_from(T0* a1);
T0* r600Arguments(void);
void r600make(T600* C,T0* a1,T0* a2);
T0* r600message(T600* C,T0* a1);
T6 r600conforms_to(T600* C,T0* a1);
T0* r600twin(T600* C);
T0* r600default_message(T600* C);
void r551copy(T551* C,T0* a1);
T0* r551substring(T551* C,T2 a1,T2 a2);
T2 r551occurrences(T551* C,T0* a1);
T2 r551item_code(T551* C,T2 a1);
void r551put_latin1(T551* C,T3 a1,T2 a2);
extern T0*oBC213Platform;
T6 r551is_equal(T551* C,T0* a1);
T2 r551index_of_code(T551* C,T2 a1,T2 a2);
T3 r551latin1_item(T551* C,T2 a1);
T0* r551item(T551* C,T2 a1);
void r551resize_byte_storage(T551* C,T2 a1);
void r551prepend(T551* C,T0* a1);
void r551append(T551* C,T0* a1);
T6 r551se_assigned_from(T0* a1);
T2 r551byte_index(T551* C,T2 a1);
void r551make_from_string(T551* C,T0* a1);
T2 r551index_of(T551* C,T0* a1,T2 a2);
void r551move_bytes_right(T551* C,T2 a1,T2 a2);
T2 r551next_byte_index(T551* C,T2 a1);
T6 r551same_type(T551* C,T0* a1);
T6 r551is_integer(T551* C);
void r551remove_tail(T551* C,T2 a1);
void r551make(T551* C,T2 a1);
void r551append_string(T551* C,T0* a1);
T2 r551code_occurrences(T551* C,T2 a1);
void r551make_filled(T551* C,T3 a1,T2 a2);
T2 r551item_code_at_byte_index(T551* C,T2 a1);
void r551extend(T551* C,T3 a1);
T2 r551hash_code(T551* C);
T2 r551index_of_latin1(T551* C,T3 a1,T2 a2);
T6 r551conforms_to(T551* C,T0* a1);
T2 r551to_integer(T551* C);
void r551append_latin1(T551* C,T3 a1);
void r551put_code_at_byte_index(T551* C,T2 a1,T2 a2,T2 a3);
void r551resize(T551* C,T2 a1);
extern T0*oBC211INTEGER_;
void r551put_string_at_byte_index(T551* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC193utf8;
void r551from_external_copy(T551* C,T8 a1);
void r551move_bytes_left(T551* C,T2 a1,T2 a2);
void r551old_make(T551* C,T2 a1);
T8 r551to_external(T551* C);
T0* r551twin(T551* C);
T0* r551to_utf8(T551* C);
T3 r551latin1_item_at_byte_index(T551* C,T2 a1);
void r551put_latin1_at_byte_index(T551* C,T3 a1,T2 a2,T2 a3);
void r551make_from_utf8(T551* C,T0* a1);
void r551swap(T551* C,T2 a1,T2 a2);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76execute_generators(T76* C,T0* a1);
void r76make(T76* C,T0* a1,T0* a2);
T6 r76conforms_to(T76* C,T0* a1);
void r76execute(T76* C);
T0* r76twin(T76* C);
T6 r754is_equal(T754* C,T0* a1);
T6 r754se_assigned_from(T0* a1);
void r754make_from_implementation(T754* C,T0* a1);
T6 r754conforms_to(T754* C,T0* a1);
T0* r754twin(T754* C);
void r757set_last_cell(T757* C,T0* a1);
void r757copy(T757* C,T0* a1);
void r757wipe_out(T757* C);
void r757remove_first(T757* C);
T0* r757cursor_item(T0* a1);
T6 r757cursor_is_last(T757* C,T0* a1);
void r757add_attributes(T757* C,T0* a1,T0* a2);
T6 r757is_equal(T757* C,T0* a1);
void r757remove_traversing_cursor(T757* C,T0* a1);
void r757make_root(T757* C,T0* a1,T0* a2);
void r757cursor_go_after(T757* C,T0* a1);
void r757move_all_cursors_after(T757* C);
void r757add_traversing_cursor(T757* C,T0* a1);
T6 r757se_assigned_from(T0* a1);
T6 r757cursor_before(T0* a1);
void r757make_child(T757* C,T0* a1,T0* a2,T0* a3);
T6 r757same_type(T757* C,T0* a1);
void r757remove_last(T757* C);
T6 r757cursor_after(T0* a1);
T6 r757conforms_to(T757* C,T0* a1);
void r757cursor_forth(T757* C,T0* a1);
void r757move_last_cursors_after(T757* C);
void r757cursor_start(T757* C,T0* a1);
T0* r757twin(T757* C);
void r757force_last(T757* C,T0* a1);
T0* r757new_cursor(T757* C);
T6 r757cursor_is_first(T757* C,T0* a1);
void r757remove_at_cursor(T757* C,T0* a1);
void r757put_last(T757* C,T0* a1);
void r757move_all_cursors(T757* C,T0* a1,T0* a2);
T6 r757cursor_off(T0* a1);
T0* r749out(T749* C);
T6 r749is_equal(T749* C,T0* a1);
T6 r749se_assigned_from(T0* a1);
T0* r749clone(T0* a1);
void r749out_in_tagged_out_memory(T749* C);
T6 r749conforms_to(T749* C,T0* a1);
T0* r749twin(T749* C);
void r724fill(T724* C);
void r724compact_left(T724* C);
void r724set_position(T724* C,T2 a1,T2 a2,T2 a3);
T6 r724is_equal(T724* C,T0* a1);
T6 r724se_assigned_from(T0* a1);
void r724make_from_string(T724* C,T0* a1);
T6 r724conforms_to(T724* C,T0* a1);
void r724make_from_buffer(T724* C,T0* a1);
void r724resize(T724* C);
void r724make_with_size(T724* C,T0* a1,T2 a2);
T0* r724twin(T724* C);
void r724set_file(T724* C,T0* a1);
void r724flush(T724* C);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135make(T135* C);
void r135old_put_string(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
void r135put_line(T0* a1);
T0* r135twin(T135* C);
T0* r222full_name(T222* C,T3 a1);
void r222set_mounted_subclusters(T222* C,T0* a1);
T6 r222is_equal(T222* C,T0* a1);
void r222remove_cluster(T222* C,T0* a1);
void r222set_subclusters(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
void r222unmount_root(T222* C,T0* a1);
T0* r222full_pathname(T222* C);
void r222make(T222* C,T0* a1,T0* a2);
void r222mount(T222* C,T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222unmount(T222* C);
T0* r222twin(T222* C);
void r222merge_externals(T222* C,T0* a1);
void r222mount_root(T222* C,T0* a1);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
void r157make(T157* C);
void r157old_put_string(T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157put_line(T0* a1);
T0* r157twin(T157* C);
T0* r727out(T727* C);
T6 r727is_equal(T727* C,T0* a1);
T6 r727se_assigned_from(T0* a1);
T0* r727clone(T0* a1);
void r727make(T727* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r727conforms_to(T727* C,T0* a1);
T0* r727twin(T727* C);
T6 r554is_equal(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
void r554make_from_implementation(T554* C,T0* a1);
T6 r554conforms_to(T554* C,T0* a1);
T0* r554twin(T554* C);
T6 r645is_equal(T645* C,T0* a1);
T6 r645se_assigned_from(T0* a1);
void r645make(T645* C,T0* a1,T0* a2);
T6 r645conforms_to(T645* C,T0* a1);
T0* r645twin(T645* C);
T0* r667next_open_composite(T0* a1);
void r667enable_position_table(T667* C);
T6 r667is_equal(T667* C,T0* a1);
void r667on_content(T667* C,T0* a1);
T6 r667se_assigned_from(T0* a1);
void r667on_processing_instruction(T667* C,T0* a1,T0* a2);
void r667on_start_tag(T667* C,T0* a1,T0* a2,T0* a3);
void r667make_from_implementation_event(T667* C,T0* a1);
void r667make_from_implementation(T667* C,T0* a1);
void r667handle_position(T667* C,T0* a1);
void r667on_comment(T667* C,T0* a1);
void r667parse_from_stream(T667* C,T0* a1);
void r667on_end_tag(T667* C,T0* a1,T0* a2);
void r667_197Pparse_from_stream(T667* C,T0* a1);
T6 r667conforms_to(T667* C,T0* a1);
void r667reset(T667* C);
T0* r667twin(T667* C);
T6 r196is_equal(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
T0* r196clone(T0* a1);
void r196make_from_implementation(T196* C,T0* a1);
T6 r196is_correct(T196* C);
T6 r196conforms_to(T196* C,T0* a1);
T0* r196last_error_extended_description(T196* C);
T0* r196twin(T196* C);
T6 r206is_equal(T206* C,T0* a1);
T6 r206has_attribute_by_name(T206* C,T0* a1);
void r206_199Pmake_from_implementation(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
T0* r206attribute_by_name(T206* C,T0* a1);
void r206make_from_implementation(T206* C,T0* a1);
T6 r206equal(T0* a1,T0* a2);
T6 r206conforms_to(T206* C,T0* a1);
T0* r206twin(T206* C);
T6 r206has_element_by_name(T206* C,T0* a1);
T0* r206element_by_name(T206* C,T0* a1);
T6 r206cursor_off(T206* C,T0* a1);
void r720yy_do_action(T720* C,T2 a1);
extern T0*oBC721yytable_template;
extern int fBC721yytable_template;
T0* r720yytable_template(void);
T0* r720empty_ucstring(void);
void r720make_parser_skeleton(T720* C);
T2 r720yy_at_beginning_of_line(T720* C);
void r720fatal_error(T0* a1);
T0* r720yytype1(T0* a1);
T0* r720yytype2(T0* a1);
T0* r720yytype3(T0* a1);
T0* r720yytype4(T0* a1);
void r720handle_found_text(T720* C);
void r720parse(T720* C);
void r720set_input_buffer(T720* C,T0* a1);
T2 r720yy_translate(T720* C,T2 a1);
extern T0*oBC722yy_ec_template;
extern int fBC722yy_ec_template;
T0* r720yy_ec_template(void);
void r720yy_execute_action(T720* C,T2 a1);
extern T0*oBC721yytranslate_template;
extern int fBC721yytranslate_template;
T0* r720yytranslate_template(void);
void r720clear_stacks(T720* C);
extern T0*oBC722yy_def_template;
extern int fBC722yy_def_template;
T0* r720yy_def_template(void);
T3 r720text_item(T720* C,T2 a1);
void r720yy_load_input_buffer(T720* C);
extern T0*oBC721uc_collon;
extern int fBC721uc_collon;
T0* r720uc_collon(void);
extern T0*oBC721yyr1_template;
extern int fBC721yyr1_template;
T0* r720yyr1_template(void);
void r720make_with_buffer(T720* C,T0* a1);
T2 r720yy_null_trans_state(T720* C,T2 a1);
T0* r720position(T720* C);
extern T0*oBC722yy_accept_template;
extern int fBC722yy_accept_template;
T0* r720yy_accept_template(void);
void r720read_token(T720* C);
extern T0*oBC721yyr2_template;
extern int fBC721yyr2_template;
T0* r720yyr2_template(void);
T2 r720yy_previous_state(T720* C);
extern T0*oBC721yypgoto_template;
extern int fBC721yypgoto_template;
T0* r720yypgoto_template(void);
void r720yy_refill_input_buffer(T720* C);
T0* r720yy_fixed_array(T0* a1);
T6 r720conforms_to(T720* C,T0* a1);
extern T0*oBC722yy_meta_template;
extern int fBC722yy_meta_template;
T0* r720yy_meta_template(void);
extern T0*oBC722yy_base_template;
extern int fBC722yy_base_template;
T0* r720yy_base_template(void);
T0* r720twin(T720* C);
T0* r720clone(T0* a1);
T0* r720new_file_buffer(T0* a1);
void r720yy_initialize(T720* C);
void r720reset(T720* C);
T0* r720text(T720* C);
extern T0*oBC722yy_nxt_template;
extern int fBC722yy_nxt_template;
T0* r720yy_nxt_template(void);
void r720parse_from_stream(T720* C,T0* a1);
void r720yy_set_line_column(T720* C);
void r720yy_build_parser_tables(T720* C);
T0* r720new_unicode_character(T3 a1);
T0* r720new_unicode_string(T0* a1);
T0* r720split_name_and_prefix(T0* a1);
T6 r720is_equal(T720* C,T0* a1);
void r720report_error(T720* C,T0* a1);
extern T0*oBC721yydefact_template;
extern int fBC721yydefact_template;
T0* r720yydefact_template(void);
extern T0*oBC722yy_chk_template;
extern int fBC722yy_chk_template;
T0* r720yy_chk_template(void);
extern T0*oBC721yycheck_template;
extern int fBC721yycheck_template;
T0* r720yycheck_template(void);
void r720make(T720* C);
T0* r720yyfixed_array(T0* a1);
void r720yy_clear_all(T720* C);
extern T0*oBC721yydefgoto_template;
extern int fBC721yydefgoto_template;
T0* r720yydefgoto_template(void);
void r720yy_set_content(T720* C,T0* a1);
extern T0*oBC721yypact_template;
extern int fBC721yypact_template;
T0* r720yypact_template(void);
void r720set_start_condition(T720* C,T2 a1);
T6 r720se_assigned_from(T0* a1);
void r720yy_build_tables(T720* C);
T6 r65is_equal(T65* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r65command_arguments(void);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T0* r65argument(T2 a1);
T6 r663is_equal(T663* C,T0* a1);
extern T0*oBC663ep_event_fact;
T6 r663se_assigned_from(T0* a1);
void r663make(T663* C);
T6 r663conforms_to(T663* C,T0* a1);
extern T0*oBC663ef_event_fact;
T0* r663twin(T663* C);
void r31report_missing_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
void r31report_no_parser_available_error(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31report_missing_attribute_error(T31* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC33null_output_stream;
extern int fBC33null_output_stream;
T0* r31null_output_stream(void);
void r31report_cannot_write_file_error(T31* C,T0* a1);
void r31make(T31* C);
void r31report_cannot_read_file_error(T31* C,T0* a1);
void r31report_parser_error(T31* C,T0* a1);
T0* r31message(T0* a1);
void r31report_invalid_expression_error(T31* C,T0* a1,T0* a2);
void r31_32Preport_error(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31report_not_xace_file_error(T31* C,T0* a1);
void r31report_wrong_root_element_error(T31* C,T0* a1,T0* a2);
void r31report_unknown_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T0* r31twin(T31* C);
void r31report_error(T31* C,T0* a1);
T6 r574is_expression_true(T574* C,T0* a1);
T6 r574should_strip_element(T574* C,T0* a1,T0* a2);
T6 r574is_equal(T574* C,T0* a1);
T6 r574se_assigned_from(T0* a1);
void r574preprocess_composite(T574* C,T0* a1,T0* a2);
T0* r574new_unicode_string_from_utf8(T0* a1);
extern T0*oBC191uc_equal;
extern int fBC191uc_equal;
T0* r574uc_equal(void);
T6 r574is_valid_expression(T0* a1);
T0* r574new_unicode_character(T3 a1);
extern T0*oBC191uc_closing_curly_brace;
extern int fBC191uc_closing_curly_brace;
T0* r574uc_closing_curly_brace(void);
void r574make(T574* C,T0* a1,T0* a2);
extern T0*oBC191uc_unless;
extern int fBC191uc_unless;
T0* r574uc_unless(void);
extern T0*oBC191uc_if;
extern int fBC191uc_if;
T0* r574uc_if(void);
T6 r574conforms_to(T574* C,T0* a1);
extern T0*oBC191uc_opening_curly_brace;
extern int fBC191uc_opening_curly_brace;
T0* r574uc_opening_curly_brace(void);
T0* r574twin(T574* C);
void r574expand_attribute_variables(T574* C,T0* a1);
T0* r574new_unicode_string(T0* a1);
extern T0*oBC191uc_dollar;
extern int fBC191uc_dollar;
T0* r574uc_dollar(void);
T0* r218split_on_first(T0* a1,T3 a2);
T6 r218is_equal(T218* C,T0* a1);
void r218remove_cluster(T218* C,T0* a1);
T6 r218se_assigned_from(T0* a1);
T0* r218clone(T0* a1);
void r218make_empty(T218* C);
void r218make(T218* C,T0* a1);
void r218set_parent(T218* C,T0* a1);
T6 r218conforms_to(T218* C,T0* a1);
T0* r218twin(T218* C);
T0* r218split_string(T0* a1,T3 a2);
void r218merge_externals(T218* C,T0* a1);
T6 r576is_equal(T576* C,T0* a1);
T6 r576se_assigned_from(T0* a1);
T6 r576conforms_to(T576* C,T0* a1);
void r576make_from_character(T576* C,T3 a1);
T0* r576twin(T576* C);
extern T0*oBC134error;
extern int fBC134error;
T0* r134error(void);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
extern T0*oBC134input;
extern int fBC134input;
T0* r134input(void);
extern T0*oBC134output;
extern int fBC134output;
T0* r134output(void);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134twin(T134* C);
T6 r709is_equal(T709* C,T0* a1);
T6 r709se_assigned_from(T0* a1);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
T6 r40is_equal(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T6 r36_px_60(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T2 r553string_byte_count(T0* a1);
T2 r553encoded_next_value(T3 a1);
T6 r553is_equal(T553* C,T0* a1);
T6 r553se_assigned_from(T0* a1);
T2 r553encoded_first_value(T3 a1);
T6 r553conforms_to(T553* C,T0* a1);
T2 r553code_byte_count(T2 a1);
T2 r553encoded_byte_count(T3 a1);
T2 r553latin1_byte_count(T3 a1);
T0* r553twin(T553* C);
T6 r552is_equal(T552* C,T0* a1);
T6 r552se_assigned_from(T0* a1);
T6 r552conforms_to(T552* C,T0* a1);
T3 r552to_character(T2 a1);
T0* r552twin(T552* C);
T6 r35is_equal(T35* C,T0* a1);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T0* r605get_environment_variable(T0* a1);
T6 r768is_equal(T768* C,T0* a1);
T6 r768se_assigned_from(T0* a1);
T6 r768conforms_to(T768* C,T0* a1);
T0* r768twin(T768* C);
T6 r707is_equal(T707* C,T0* a1);
T6 r707se_assigned_from(T0* a1);
T6 r707conforms_to(T707* C,T0* a1);
T0* r707twin(T707* C);
void r16process_cluster(T16* C);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
void r16process_xace_file(T16* C,T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
void r16process_system(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_output(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1,T0* a2);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r97is_equal(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
T6 r97is_integer(T0* a1);
T6 r97same_case_insensitive(T0* a1,T0* a2);
T0* r97make(T2 a1);
T6 r97conforms_to(T97* C,T0* a1);
T2 r97case_insensitive_hash_code(T0* a1);
T0* r97twin(T97* C);
T6 r604is_equal(T604* C,T0* a1);
T0* r604variable_value(T0* a1);
T6 r604se_assigned_from(T0* a1);
extern T605 oBC604environment_impl;
T6 r604conforms_to(T604* C,T0* a1);
T0* r604interpreted_string(T0* a1);
T0* r604twin(T604* C);
T6 r706is_equal(T706* C,T0* a1);
T6 r706se_assigned_from(T0* a1);
T0* r706new_event_parser_imp(void);
T6 r706conforms_to(T706* C,T0* a1);
T0* r706twin(T706* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75_px_60(T75* C,T0* a1);
T0* r75twin(T75* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 769
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms103_211;
extern T7*ms600_820451542;
extern T7*ms135_447851;
extern T7*ms103_322;
extern T7*ms721_38;
extern T7*ms103_298;
extern T7*ms721_60;
extern T7*ms721_62;
extern T7*ms721_0a;
extern T7*ms103_1300398076;
extern T7*ms16_16036;
extern T7*ms103_1644;
extern T7*ms129_326648287;
extern T7*ms191_77350;
extern T7*ms129_1957581aa;
extern T7*ms191_78002;
extern T7*ms191_9909665;
extern T7*ms129_49483191;
extern T7*ms103_3175;
extern T7*ms191_78263;
extern T7*ms130_168231777;
extern T7*ms553_0;
extern T7*ms498_0;
extern T7*ms191_78490;
extern T7*ms128_1365895512;
extern T7*ms721_38a;
extern T7*ms129_2120668389;
extern T7*ms721_60a;
extern T7*ms721_62a;
extern T7*ms500_1338477769;
extern T7*ms721_0aa;
extern T7*ms16_1975394;
extern T7*ms128_34;
extern T7*ms127_452889;
extern T7*ms129_1254606809a;
extern T7*ms574_0;
extern T7*ms130_1147;
extern T7*ms191_85591;
extern T7*ms127_2116863196;
extern T7*ms130_145423907a;
extern T7*ms129_408086;
extern T7*ms577_125;
extern T7*ms577_303;
extern T7*ms16_403021;
extern T7*ms191_1289562514;
extern T7*ms16_676;
extern T7*ms16_691;
extern T7*ms135_10;
extern T7*ms127_2104;
extern T7*ms130_232a;
extern T7*ms103_659330894;
extern T7*ms103_93956277;
extern T7*ms127_1644;
extern T7*ms127_1975394a;
extern T7*ms29_1878185725;
extern T7*ms130_2058319081;
extern T7*ms127_214a;
extern T7*ms129_2104;
extern T7*ms127_229a;
extern T7*ms129_1644;
extern T7*ms127_1849679439;
extern T7*ms128_2029061136;
extern T7*ms127_3175;
extern T7*ms129_214a;
extern T7*ms103_431271;
extern T7*ms191_2185421;
extern T7*ms129_229a;
extern T7*ms16_3301a;
extern T7*ms127_3175aaa;
extern T7*ms130_1840815548;
extern T7*ms16_16036a;
extern T7*ms103_15934;
extern T7*ms129_3175;
extern T7*ms500_1338477769a;
extern T7*ms191_408086;
extern T7*ms191_1228681540;
extern T7*ms499_1539961075;
extern T7*ms130_144147230;
extern T7*ms721_0;
extern T7*ms129_1975394a;
extern T7*ms128_1090800287;
extern T7*ms128_9909665;
extern T7*ms103_17696;
extern T7*ms127_659330894;
extern T7*ms130_232;
extern T7*ms127_2087910503;
extern T7*ms130_1943945795;
extern T7*ms129_1300398076;
extern T7*ms599_454072470;
extern T7*ms129_452889a;
extern T7*ms204_18036;
extern T7*ms127_452889a;
extern T7*ms191_2032026;
extern T7*ms127_1978068077;
extern T7*ms130_339006862;
extern T7*ms103_10049231;
extern T7*ms130_2057213670;
extern T7*ms191_402346;
extern T7*ms128_16782;
extern T7*ms191_10866961;
extern T7*ms127_2116863196a;
extern T7*ms16_881365921a;
extern T7*ms128_17696;
extern T7*ms103_710556862;
extern T7*ms128_48758637;
extern T7*ms127_10208843;
extern T7*ms128_1159034081;
extern T7*ms127_17696a;
extern T7*ms130_1147aa;
extern T7*ms16_0;
extern T7*ms156_10;
extern T7*ms130_716962150;
extern T7*ms18_0;
extern T7*ms127_1957581a;
extern T7*ms128_1566359773;
extern T7*ms130_728778652;
extern T7*ms191_51843716;
extern T7*ms130_11272528;
extern T7*ms157_10;
extern T7*ms130_2074569081;
extern T7*ms130_902203551;
extern T7*ms129_10208843;
extern T7*ms191_627;
extern T7*ms127_710556862;
extern T7*ms128_452889;
extern T7*ms188_12184;
extern T7*ms127_169452;
extern T7*ms16_2246326;
extern T7*ms128_3175a;
extern T7*ms129_1975394;
extern T7*ms127_1975394;
extern T7*ms130_6860887;
extern T7*ms127_200;
extern T7*ms127_214;
extern T7*ms19_270;
extern T7*ms191_16821;
extern T7*ms127_229;
extern T7*ms129_1957581a;
extern T7*ms128_1420513890;
extern T7*ms191_16942;
extern T7*ms662_462378139;
extern T7*ms191_17696;
extern T7*ms103_1885954800;
extern T7*ms128_945472392;
extern T7*ms725_89510;
extern T7*ms715_1606053737;
extern T7*ms129_1254606809;
extern T7*ms130_688131499;
extern T7*ms16_881365921aa;
extern T7*ms128_1173002866;
extern T7*ms129_3175aa;
extern T7*ms128_251473637;
extern T7*ms128_50294715;
extern T7*ms130_2058319081a;
extern T7*ms103_1189398351;
extern T7*ms129_2122613;
extern T7*ms130_214679746;
extern T7*ms601_229;
extern T7*ms728_35397;
extern T7*ms103_1975394;
extern T7*ms127_2122613;
extern T7*ms129_10031271;
extern T7*ms103_2087910503;
extern T7*ms127_2071896;
extern T7*ms100_1515383187;
extern T7*ms129_659330894;
extern T7*ms130_29282762;
extern T7*ms127_408086;
extern T7*ms127_1254606809a;
extern T7*ms16_391651;
extern T7*ms129_2259966;
extern T7*ms128_194;
extern T7*ms728_36572;
extern T7*ms130_1147aaa;
extern T7*ms127_10208843a;
extern T7*ms127_2259966;
extern T7*ms16_438001;
extern T7*ms191_2024949725;
extern T7*ms128_273179090;
extern T7*ms128_440790;
extern T7*ms128_440825;
extern T7*ms130_759686277;
extern T7*ms130_1284536290;
extern T7*ms127_2120668389;
extern T7*ms129_1957581;
extern T7*ms130_1147a;
extern T7*ms128_434665;
extern T7*ms103_2087913448;
extern T7*ms103_1849679439;
extern T7*ms127_1957581;
extern T7*ms130_1147aaaa;
extern T7*ms129_1433293834;
extern T7*ms130_1694763045;
extern T7*ms130_2036724355;
extern T7*ms157_447584;
extern T7*ms191_9558536;
extern T7*ms191_1988096;
extern T7*ms128_1555371030;
extern T7*ms708_512683247;
extern T7*ms130_17715339;
extern T7*ms128_434665a;
extern T7*ms577_36;
extern T7*ms130_848471798;
extern T7*ms129_214;
extern T7*ms129_229;
extern T7*ms16_3301;
extern T7*ms130_1592316470;
extern T7*ms16_11153106;
extern T7*ms16_3653;
extern T7*ms130_1366569951a;
extern T7*ms16_452889;
extern T7*ms103_1957581;
extern T7*ms210_0;
extern T7*ms728_899222;
extern T7*ms128_3175;
extern T7*ms128_1975394a;
extern T7*ms129_1849679439;
extern T7*ms191_10208843;
extern T7*ms188_1384826;
extern T7*ms722_1173251759;
extern T7*ms29_1415324896;
extern T7*ms129_710556862;
extern T7*ms16_881365921aaa;
extern T7*ms129_452889;
extern T7*ms127_1300398076;
extern T7*ms130_68075515;
extern T7*ms130_1580634761;
extern T7*ms16_676a;
extern T7*ms16_691a;
extern T7*ms598_1179444653;
extern T7*ms128_1254555893;
extern T7*ms191_10559665;
extern T7*ms188_0;
extern T7*ms130_1746542221;
extern T7*ms191_399591;
extern T7*ms129_2087910503;
extern T7*ms130_232aa;
extern T7*ms127_1957581aa;
extern T7*ms602_1214914019;
extern T7*ms191_1975394;
extern T7*ms127_1644a;
extern T7*ms128_171550;
extern T7*ms191_452889;
extern T7*ms130_1122793821;
extern T7*ms128_2094241;
extern T7*ms127_17696;
extern T7*ms103_1254606809;
extern T7*ms130_711181240;
extern T7*ms197_40;
extern T7*ms129_1978068077;
extern T7*ms197_41;
extern T7*ms130_1147aaaaa;
extern T7*ms130_33314532;
extern T7*ms103_1205954912;
extern T7*ms128_608082268;
extern T7*ms191_451090;
extern T7*ms129_15934;
extern T7*ms129_10208843a;
extern T7*ms129_1644a;
extern T7*ms16_1687334349;
extern T7*ms130_1250879089;
extern T7*ms33_17323;
extern T7*ms129_17696;
extern T7*ms18_0a;
extern T7*ms127_3175a;
extern T7*ms103_1288001260;
extern T7*ms16_881365921;
extern T7*ms128_9751715;
extern T7*ms710_10;
extern T7*ms127_3175aa;
extern T7*ms103_1319327951;
extern T7*ms204_79251;
extern T7*ms188_2104;
extern T7*ms130_90563609;
extern T7*ms595_54177410;
extern T7*ms103_1837939351;
extern T7*ms103_1940534;
extern T7*ms103_1366344811;
extern T7*ms103_10208843;
extern T7*ms128_1975394;
extern T7*ms103_452889;
extern T7*ms130_1637983727;
extern T7*ms130_151663112;
extern T7*ms129_17696a;
extern T7*ms728_5467;
extern T7*ms191_434665;
extern T7*ms496_195717202;
extern T7*ms129_3175a;
extern T7*ms130_1131165100;
extern T7*ms130_29373882;
extern T7*ms103_1957581a;
extern T7*ms103_9702826;
extern T7*ms127_1254606809;
extern T7*ms128_2002089708;
extern T7*ms130_848471798a;
extern T7*ms603_988446515;
extern T7*ms130_1366569951;
extern T7*ms103_9702034;
extern T7*ms130_145423907;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma504(int argc,...);
T0* X666new_event_parser_imp(T0*C);
T6 X666is_available(T0*C);
void X29execute(T0*C);
T0* X144item(T0*C);
T6 X144after(T0*C);
void X144forth(T0*C);
void X144start(T0*C);
T2 X145count(T0*C);
T0* X145cursor_item(T0*C,T0* a1);
T6 X145is_empty(T0*C);
T6 X145cursor_after(T0*C,T0* a1);
void X145cursor_forth(T0*C,T0* a1);
void X145cursor_start(T0*C,T0* a1);
T0* X145new_cursor(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7prepend(T0*C,T0* a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
T6 X7is_integer(T0*C);
void X7append_string(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T0* X546cursor_item(T0*C,T0* a1);
void X546cursor_go_after(T0*C,T0* a1);
T6 X546cursor_after(T0*C,T0* a1);
void X546cursor_forth(T0*C,T0* a1);
void X546cursor_start(T0*C,T0* a1);
T6 X546cursor_off(T0*C,T0* a1);
T0* X547parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X208parent(T0*C);
void X164set_next_cursor(T0*C,T0* a1);
T6 X284test(T0*C,T0* a1,T0* a2);
T0* X123make(T0*C,T2 a1);
T0* X123resize(T0*C,T0* a1,T2 a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X506clear_all(T0*C,T0* a1);
T0* X506make(T0*C,T2 a1);
T0* X506resize(T0*C,T0* a1,T2 a2);
void X94put_new_line(T0*C);
void X94put_line(T0*C,T0* a1);
void X94put_character(T0*C,T3 a1);
void X94put_string(T0*C,T0* a1);
T0* X183name(T0*C);
T2 X183read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X183read_character(T0*C);
T6 X183end_of_input(T0*C);
T3 X183last_character(T0*C);
void X209force_last(T0*C,T0* a1);
T0* X209new_cursor(T0*C);
void X209remove_at_cursor(T0*C,T0* a1);
T0* X209parent(T0*C);
void X281put(T0*C,T0* a1,T2 a2);
T0* X281item(T0*C,T2 a1);
void X281set_all_with(T0*C,T0* a1);
void X281resize(T0*C,T2 a1);
void X510fill(T0*C);
T0* X549new_cursor(T0*C);
void X549remove_at_cursor(T0*C,T0* a1);
void X549put_last(T0*C,T0* a1);
T0* X549parent(T0*C);
void X72put(T0*C,T0* a1,T2 a2);
T0* X72item(T0*C,T2 a1);
void X72set_all_with(T0*C,T0* a1);
void X72resize(T0*C,T2 a1);
T2 X502count(T0*C);
T2 X502item(T0*C,T2 a1);
T2 X502lower(T0*C);
T0* X305make(T0*C,T2 a1);
T0* X305resize(T0*C,T0* a1,T2 a2);
void X114force(T0*C,T0* a1,T0* a2);
T0* X114cursor_item(T0*C,T0* a1);
void X114remove_traversing_cursor(T0*C,T0* a1);
T0* X114item(T0*C,T0* a1);
void X114add_traversing_cursor(T0*C,T0* a1);
T6 X114cursor_after(T0*C,T0* a1);
T6 X114has(T0*C,T0* a1);
void X114cursor_forth(T0*C,T0* a1);
T6 X114cursor_same_position(T0*C,T0* a1,T0* a2);
void X114cursor_start(T0*C,T0* a1);
T6 X114cursor_off(T0*C,T0* a1);
void X190parse_file(T0*C,T0* a1);
void X505put(T0*C,T0* a1,T2 a2);
T0* X505item(T0*C,T2 a1);
void X505set_all_with(T0*C,T0* a1);
void X505resize(T0*C,T2 a1);
T6 X699cursor_is_last(T0*C,T0* a1);
void X699remove_traversing_cursor(T0*C,T0* a1);
void X699cursor_go_after(T0*C,T0* a1);
void X699add_traversing_cursor(T0*C,T0* a1);
void X699cursor_forth(T0*C,T0* a1);
void X699cursor_start(T0*C,T0* a1);
T6 X699cursor_is_first(T0*C,T0* a1);
T6 X126test(T0*C,T0* a1,T0* a2);
T0* X91default_message(T0*C);
void X78generate_cluster(T0*C,T0* a1);
void X78generate_system(T0*C,T0* a1);
T6 T35toT6(T0* source);
T0* T2toT36(T2 source);
T2 T36toT2(T0* source);
T0* T6toT35(T6 source);

#ifdef __cplusplus
}
#endif
