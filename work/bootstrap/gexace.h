#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmartEiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 1.0 (Friday December 6th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
http://SmartEiffel.loria.fr
C Compiler options used: 
*/

/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1400) /* MSVC older than v8 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1100) /* WATCOM 11 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "Ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((signed char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
#define SE_BOOST 1
#define SE_EXCEPTIONS 1

/*C Header Pass 1 :*/
typedef void*T663;
typedef struct S483 T483;
typedef struct S641 T641;
typedef struct S344 T344;
typedef void*T645;
typedef struct S329 T329;
typedef struct S683 T683;
typedef struct S356 T356;
typedef struct S373 T373;
typedef struct S375 T375;
typedef struct S561 T561;
typedef struct S550 T550;
typedef struct S113 T113;
typedef struct S178 T178;
typedef void*T661;
typedef struct S284 T284;
typedef struct S626 T626;
typedef struct S193 T193;
typedef struct S402 T402;
typedef struct S318 T318;
typedef struct S413 T413;
typedef void*T666;
typedef struct S131 T131;
typedef struct S452 T452;
typedef struct S664 T664;
typedef void*T716;
typedef struct S479 T479;
typedef struct S771 T771;
typedef struct S754 T754;
typedef struct S232 T232;
typedef struct S461 T461;
typedef struct S498 T498;
typedef struct S633 T633;
typedef struct S312 T312;
typedef struct S374 T374;
typedef struct S563 T563;
typedef struct S546 T546;
typedef void*T719;
typedef struct S430 T430;
typedef struct S286 T286;
typedef void*T158;
typedef void*T715;
typedef struct S336 T336;
typedef struct S658 T658;
typedef struct S264 T264;
typedef struct S482 T482;
typedef struct S567 T567;
typedef void*T480;
typedef void*T44;
typedef struct S566 T566;
typedef struct S223 T223;
typedef struct S237 T237;
typedef struct S582 T582;
typedef struct S212 T212;
typedef struct S317 T317;
typedef struct S613 T613;
typedef struct S565 T565;
typedef struct S230 T230;
typedef struct S207 T207;
typedef struct S154 T154;
typedef struct S515 T515;
typedef struct S156 T156;
typedef struct S551 T551;
typedef struct S108 T108;
typedef struct S189 T189;
typedef struct S308 T308;
typedef struct S469 T469;
typedef void*T665;
typedef struct S727 T727;
typedef struct S166 T166;
typedef void*T269;
typedef void*T335;
typedef void*T101;
typedef struct S407 T407;
typedef struct S762 T762;
typedef struct S621 T621;
typedef struct S315 T315;
typedef struct S544 T544;
typedef struct S556 T556;
typedef struct S327 T327;
typedef struct S270 T270;
typedef struct S33 T33;
typedef void*T453;
typedef struct S473 T473;
typedef struct S355 T355;
typedef struct S622 T622;
typedef void*T91;
typedef struct S646 T646;
typedef void*T662;
typedef struct S534 T534;
typedef struct S141 T141;
typedef struct S755 T755;
typedef void*T706;
typedef struct S514 T514;
typedef void*T100;
typedef struct S254 T254;
typedef struct S410 T410;
typedef struct S562 T562;
typedef struct S764 T764;
typedef void*T181;
typedef struct S259 T259;
typedef struct S607 T607;
typedef struct S606 T606;
typedef struct S637 T637;
typedef struct S157 T157;
typedef struct S554 T554;
typedef void*T289;
typedef struct S107 T107;
typedef struct S508 T508;
typedef struct S598 T598;
typedef struct S526 T526;
typedef struct S631 T631;
typedef struct S388 T388;
typedef struct S222 T222;
typedef struct S115 T115;
typedef struct S612 T612;
typedef struct S735 T735;
typedef struct S260 T260;
typedef struct S180 T180;
typedef struct S239 T239;
typedef struct S553 T553;
typedef struct S265 T265;
typedef struct S686 T686;
typedef struct S516 T516;
typedef struct S371 T371;
typedef void*T684;
typedef struct S659 T659;
typedef struct S414 T414;
typedef struct S597 T597;
typedef struct S470 T470;
typedef struct S720 T720;
typedef struct S548 T548;
typedef struct S337 T337;
typedef struct S176 T176;
typedef struct S77 T77;
typedef int T334;
typedef void*T209;
typedef struct S68 T68;
typedef void*T502;
typedef struct S732 T732;
typedef struct S7 T7;
typedef struct S737 T737;
typedef void*T468;
typedef struct S557 T557;
typedef struct S654 T654;
typedef struct S386 T386;
typedef struct S236 T236;
typedef struct S390 T390;
typedef struct S696 T696;
typedef struct S713 T713;
typedef struct S578 T578;
typedef struct S450 T450;
typedef void*T743;
typedef struct S332 T332;
typedef struct S552 T552;
typedef struct S564 T564;
typedef struct S429 T429;
typedef struct S559 T559;
typedef void*T406;
typedef struct S34 T34;
typedef struct S627 T627;
typedef struct S463 T463;
typedef void*T756;
typedef struct S717 T717;
typedef struct S577 T577;
typedef void*T656;
typedef struct S594 T594;
typedef struct S12 T12;
typedef struct S611 T611;
typedef struct S415 T415;
typedef struct S305 T305;
typedef struct S736 T736;
typedef struct S271 T271;
typedef struct S221 T221;
typedef struct S507 T507;
typedef struct S143 T143;
typedef void*T79;
typedef struct S404 T404;
typedef struct S129 T129;
typedef void*T428;
typedef struct S555 T555;
typedef struct S257 T257;
typedef void*T288;
typedef struct S314 T314;
typedef struct S376 T376;
typedef struct S602 T602;
typedef struct S560 T560;
typedef struct S83 T83;
typedef struct S125 T125;
typedef struct S92 T92;
typedef struct S333 T333;
typedef struct S760 T760;
typedef struct S167 T167;
typedef struct S648 T648;
typedef struct S159 T159;
typedef void*T408;
typedef struct S163 T163;
typedef struct S574 T574;
typedef struct S647 T647;
typedef struct S307 T307;
typedef void*T670;
typedef struct S533 T533;
typedef struct S256 T256;
typedef struct S484 T484;
typedef struct S509 T509;
typedef struct S99 T99;
typedef struct S718 T718;
typedef struct S106 T106;
typedef struct S435 T435;
typedef struct S617 T617;
typedef struct S213 T213;
typedef struct S112 T112;
typedef struct S651 T651;
typedef void*T136;
typedef struct S708 T708;
typedef struct S462 T462;
typedef struct S162 T162;
typedef void*T137;
typedef struct S389 T389;
typedef struct S400 T400;
typedef struct S632 T632;
typedef struct S298 T298;
typedef struct S71 T71;
typedef struct S558 T558;
typedef struct S144 T144;
typedef struct S64 T64;

/*C Header Pass 2 :*/
typedef T0**T636;
typedef T0**T532;
typedef T0**T630;
typedef T0**T616;
typedef T6*T605;
typedef T0**T759;
typedef T0**T412;
typedef T0**T274;
typedef T0**T610;
typedef T0**T339;
typedef T0**T242;
typedef T0**T268;
typedef T0**T625;
typedef T0**T601;
typedef T0**T78;
typedef T0**T640;
typedef T0**T456;
typedef T3*T9;
typedef T0**T620;
typedef T2*T134;
typedef T0**T501;
typedef T0**T644;

/*C Header Pass 3 :*/
struct S507{T8 _directory_stream;T8 _current_entry;};
int se_cmpT507(T507 o1,T507 o2);

/*C Header Pass 4 :*/
extern T663 M663;
struct S483{T2 _position;T0* _container;T0* _next_cursor;};
extern T483 M483;
struct S641{T644 _storage;T2 _capacity;T2 _upper;};
extern T641 M641;
struct S344{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _special_item_routines;};
extern T344 M344;
struct S329{T0* _item;T0* _right;};
extern T329 M329;
struct S683{T2 _position;T0* _container;};
extern T683 M683;
struct S356{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _key_equality_tester;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _special_item_routines;T0* _special_key_routines;};
extern T356 M356;
struct S373{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _special_routines;T0* _internal_cursor;};
extern T373 M373;
struct S375{T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T375 M375;
struct S561{Tid id;T0* _parameters;};
extern T561 M561;
struct S550{Tid id;T0* _parameters;};
extern T550 M550;
struct S113{T0* _item;T0* _right;};
extern T113 M113;
struct S178{Tid id;T0* _item;T0* _right;};
extern T178 M178;
extern T661 M661;
struct S284{T0* _container;};
extern T284 M284;
struct S626{T0* _system_id;T0* _public_id;};
extern T626 M626;
struct S193{Tid id;T0* _name;T0* _string_name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;T0* _path;T3 _old_last_character;T6 _old_end_of_file;T6 _push_back_flag;T8 _input_stream;T9 _buffer;T6 _end_reached;T2 _buffer_position;T2 _buffer_size;T2 _capacity;};
extern T193 M193;
struct S402{T0* _variables;T0* _error_handler;};
extern T402 M402;
struct S318{T0* _first;T0* _second;};
extern T318 M318;
struct S413{Tid id;};
extern T413 M413;
struct S131{T134 _storage;T2 _capacity;T2 _upper;};
extern T131 M131;
struct S452{T456 _storage;T2 _capacity;T2 _upper;};
extern T452 M452;
struct S664{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T0* _yy_content_area;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _input_resolver;T0* _input_filter;T0* _last_error;T0* _input_name;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _decl_start_sent;T6 _decl_end_sent;};
extern T664 M664;
struct S479{T0* _ast_factory;T0* _error_handler;T6 _is_shallow;T6 _is_ve;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_system;};
extern T479 M479;
struct S771{T0* _item;T0* _right;T0* _left;};
extern T771 M771;
struct S754{T2 _position;T0* _container;};
extern T754 M754;
struct S232{Tid id;T0* _next;T6 _has_error;T0* _last_error;};
extern T232 M232;
struct S461{T2 _count;T0* _first_cell;};
extern T461 M461;
struct S498{T501 _storage;T2 _capacity;T2 _upper;};
extern T498 M498;
struct S312{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T312 M312;
struct S374{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T374 M374;
struct S563{Tid id;T0* _parameters;};
extern T563 M563;
struct S546{Tid id;T0* _parameters;};
extern T546 M546;
struct S430{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T0* _yy_content_area;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _input_resolver;T0* _input_filter;T0* _last_error;T0* _input_name;T0* _last_value;T0* _character_entity;T0* _start_conditions;};
extern T430 M430;
struct S286{T0* _declared_abstract;T0* _declared_address_expression;T0* _declared_arguments;T0* _declared_array_optimization;T0* _declared_assembly;T0* _declared_assertion;T0* _declared_callback;T0* _declared_case_insensitive;T0* _declared_check_vape;T0* _declared_clean;T0* _declared_cls_compliant;T0* _declared_component;T0* _declared_console_application;T0* _declared_create_keyword_extension;T0* _declared_culture;T0* _declared_c_compiler_options;T0* _declared_dead_code_removal;T0* _declared_debug_option;T0* _declared_debug_tag;T0* _declared_debugger;T0* _declared_document;T0* _declared_dotnet_naming_convention;T0* _declared_dynamic_runtime;T0* _declared_exception_trace;T0* _declared_exclude;T0* _declared_export_option;T0* _declared_finalize_option;T0* _declared_flat_fst_optimization;T2 _declared_fst_expansion_factor;T0* _declared_fst_optimization;T0* _declared_garbage_collector;T0* _declared_gc_info;T2 _declared_heap_size;T0* _declared_header;T0* _declared_high_memory_compiler;T0* _declared_il_verifiable;T0* _declared_include;T0* _declared_inlining;T2 _declared_inlining_size;T0* _declared_jumps_optimization;T0* _declared_layout;T0* _declared_layout_optimization;T0* _declared_leaves_optimization;T0* _declared_line_generation;T0* _declared_link;T0* _declared_linker;T0* _declared_linux_fpu_double_precision;T0* _declared_manifest_string_trace;T0* _declared_map;T0* _declared_metadata_cache_path;T0* _declared_msil_assembly_compatibility;T0* _declared_msil_clr_version;T0* _declared_msil_generation;T0* _declared_msil_generation_version;T0* _declared_multithreaded;T0* _declared_namespace;T0* _declared_no_default_lib;T0* _declared_override_cluster;T0* _declared_portable_code_generation;T0* _declared_precompiled;T0* _declared_prefix_option;T0* _declared_profile;T0* _declared_public_key_token;T0* _declared_read_only;T0* _declared_recursive;T0* _declared_reloads_optimization;T0* _declared_shared_library_definition;T0* _declared_split;T2 _declared_stack_size;T0* _declared_storable_filename;T0* _declared_strip_option;T0* _declared_target;T0* _declared_trace;T0* _declared_use_cluster_name_as_namespace;T0* _declared_use_full_cluster_name_as_namespace;T0* _declared_verbose;T0* _declared_version;T0* _declared_visible_filename;T0* _declared_warning;T0* _declared_wedit;};
extern T286 M286;
extern T158 M158;
struct S336{T134 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T336 M336;
struct S658{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T658 M658;
struct S264{T2 _count;T2 _capacity;T0* _storage;T0* _special_routines;T0* _internal_cursor;};
extern T264 M264;
struct S482{T0* _c_compiler_options;T0* _include_directories;T0* _link_libraries;};
extern T482 M482;
struct S567{T0* _item;T0* _right;};
extern T567 M567;
extern T480 M480;
extern T44 M44;
struct S566{Tid id;T0* _parameters;};
extern T566 M566;
struct S223{T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _libraries;};
extern T223 M223;
struct S237{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _key_equality_tester;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _special_item_routines;T0* _special_key_routines;};
extern T237 M237;
struct S582{T0* _item;T0* _right;T0* _left;};
extern T582 M582;
struct S212{T0* _table;};
extern T212 M212;
struct S317{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T317 M317;
struct S565{Tid id;T0* _parameters;};
extern T565 M565;
struct S230{T0* _start;T0* _error;T0* _tree;T0* _last;};
extern T230 M230;
struct S207{T0* _ast_factory;T0* _error_handler;T6 _is_shallow;T6 _is_ve;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;};
extern T207 M207;
struct S154{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T154 M154;
struct S515{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T515 M515;
struct S156{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T6 _is_shallow;T6 _is_ve;T0* _generators;T0* _output_filename;};
extern T156 M156;
struct S551{Tid id;T0* _parameters;};
extern T551 M551;
struct S108{Tid id;T0* _variables;T0* _error_handler;T6 _is_shallow;};
extern T108 M108;
struct S189{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T189 M189;
struct S469{T2 _count;T9 _area;T0* _area_string;};
extern T469 M469;
struct S727{T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T727 M727;
struct S166{T0* _first;T0* _second;};
extern T166 M166;
extern T101 M101;
struct S407{Tid id;T0* _next;T0* _document;T0* _last_position_table;T0* _current_element;T0* _namespace_cache;T0* _source_parser;};
extern T407 M407;
struct S762{T0* _item;T0* _right;T0* _left;};
extern T762 M762;
struct S621{T0* _name;T0* _items;T3 _type;T3 _repetition;T6 _is_character_data_allowed;};
extern T621 M621;
struct S315{T3 _value;};
extern T315 M315;
struct S544{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T544 M544;
struct S556{Tid id;T0* _parameters;};
extern T556 M556;
struct S327{T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T327 M327;
struct S270{T2 _count;T2 _capacity;T0* _storage;T0* _special_routines;T0* _internal_cursor;};
extern T270 M270;
struct S33{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T33 M33;
struct S473{Tid id;T0* _name;T0* _string_name;T0* _path;T9 _buffer;T2 _buffer_position;T2 _capacity;T8 _output_stream;};
extern T473 M473;
struct S355{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T355 M355;
struct S622{T625 _storage;T2 _capacity;T2 _upper;};
extern T622 M622;
extern T91 M91;
struct S646{Tid id;T6 _end_of_input;T3 _last_character;T0* _string;T2 _location;};
extern T646 M646;
struct S534{T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T534 M534;
struct S141{Tid id;T0* _variables;T0* _error_handler;};
extern T141 M141;
struct S755{T759 _storage;T2 _capacity;T2 _upper;};
extern T755 M755;
struct S514{T0* _tag;T0* _assembly_name;T0* _assembly_pathname;T0* _version;T0* _culture;T0* _public_key_token;T0* _class_prefix;};
extern T514 M514;
extern T100 M100;
struct S254{T2 _position;T0* _container;T0* _next_cursor;};
extern T254 M254;
struct S410{T412 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T410 M410;
struct S562{Tid id;T0* _parameters;};
extern T562 M562;
struct S764{Tid id;T0* _parent;T0* _data;};
extern T764 M764;
extern T181 M181;
struct S606{T610 _storage;T2 _capacity;T2 _upper;};
extern T606 M606;
struct S637{T640 _storage;T2 _capacity;T2 _upper;};
extern T637 M637;
struct S157{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T6 _is_shallow;};
extern T157 M157;
struct S554{Tid id;T0* _parameters;};
extern T554 M554;
struct S107{Tid id;T0* _parameters;};
extern T107 M107;
struct S508{Tid id;};
extern T508 M508;
struct S598{T601 _storage;T2 _capacity;T2 _upper;};
extern T598 M598;
struct S526{T0* _item;T0* _right;};
extern T526 M526;
struct S631{T6 _use_namespaces;T0* _first;T2 _count;T0* _second;T0* _tail;};
extern T631 M631;
struct S388{T0* _feature_name;T0* _options;};
extern T388 M388;
struct S222{T0* _name;T0* _options;T0* _clusters;T0* _libraries;T0* _library_prefix;};
extern T222 M222;
struct S115{Tid id;T0* _variables;T0* _error_handler;};
extern T115 M115;
struct S612{T616 _storage;T2 _capacity;T2 _upper;};
extern T612 M612;
struct S735{Tid id;T0* _parent;T0* _content;};
extern T735 M735;
struct S180{Tid id;T0* _name;};
extern T180 M180;
struct S239{T242 _storage;T2 _capacity;T2 _upper;};
extern T239 M239;
struct S553{Tid id;T0* _parameters;};
extern T553 M553;
struct S265{T268 _storage;T2 _capacity;T2 _upper;};
extern T265 M265;
struct S686{T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T686 M686;
struct S516{T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T516 M516;
struct S371{T2 _position;T0* _container;};
extern T371 M371;
struct S659{T3 _item;T0* _right;};
extern T659 M659;
struct S414{Tid id;T0* _next;T6 _forward_xmlns;T0* _context;T0* _element_prefix;T0* _element_local_part;T0* _attributes_prefix;T0* _attributes_local_part;T0* _attributes_value;};
extern T414 M414;
struct S470{T2 _code;};
extern T470 M470;
struct S720{T0* _context;};
extern T720 M720;
struct S548{Tid id;T0* _parameters;};
extern T548 M548;
struct S337{T339 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T337 M337;
struct S176{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T176 M176;
struct S77{T78 _storage;T2 _capacity;T2 _upper;};
extern T77 M77;
extern T334 M334;
extern T209 M209;
struct S68{T0* _item;T0* _right;};
extern T68 M68;
struct S732{T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T732 M732;
struct S737{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _special_item_routines;};
extern T737 M737;
struct S557{Tid id;T0* _parameters;};
extern T557 M557;
struct S654{T2 _item;T0* _right;};
extern T654 M654;
struct S386{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T386 M386;
struct S236{T0* _error_handler;T6 _has_error;};
extern T236 M236;
struct S390{T0* _item;T0* _right;};
extern T390 M390;
struct S696{T6 _before;T0* _container;};
extern T696 M696;
struct S713{T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T713 M713;
struct S578{T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T578 M578;
struct S450{T2 _position;T0* _container;T0* _next_cursor;};
extern T450 M450;
struct S332{T0* _ast_factory;T0* _error_handler;T6 _is_shallow;T6 _is_ve;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_library;};
extern T332 M332;
struct S552{Tid id;T0* _parameters;};
extern T552 M552;
struct S564{Tid id;T0* _parameters;};
extern T564 M564;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S559{Tid id;T0* _parameters;};
extern T559 M559;
extern T406 M406;
struct S34{T0* _error_file;T0* _warning_file;T0* _info_file;T2 _error_count;};
extern T34 M34;
struct S627{T630 _storage;T2 _capacity;T2 _upper;};
extern T627 M627;
struct S613{T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T613 M613;
struct S463{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T463 M463;
struct S717{Tid id;T0* _item;T0* _right;T0* _left;};
extern T717 M717;
struct S577{T0* _item;T0* _right;};
extern T577 M577;
struct S594{T6 _before;T0* _container;};
extern T594 M594;
struct S12{T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;T6 _is_shallow;};
extern T12 M12;
struct S611{T0* _name;T3 _type;T3 _value;T0* _default_value;T6 _is_list_type;T0* _enumeration_list;};
extern T611 M611;
struct S415{Tid id;T6 _yy_lookahead_needed;T2 _string_mode;T0* _dtd_resolver;T0* _entity_resolver;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yytypes1;T0* _yytypes2;T0* _yyss;T2 _yyssp;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _callbacks;T0* _dtd_callbacks;T0* _last_any_value;T0* _last_string_value;T6 _use_namespaces;T0* _last_error_description;T0* _error_positions;T0* _entities;T0* _pe_entities;T6 _in_external_dtd;T0* _scanner;T0* _scanners;T2 _last_token;T0* _yyvs1;T2 _yyvsc1;T2 _yyvsp1;T0* _yyspecial_routines1;T0* _yyvs2;T2 _yyvsc2;T2 _yyvsp2;T0* _yyspecial_routines2;T0* _yyvs3;T2 _yyvsc3;T2 _yyvsp3;T0* _yyspecial_routines3;T0* _yyvs4;T2 _yyvsc4;T2 _yyvsp4;T0* _yyspecial_routines4;T0* _yyvs5;T2 _yyvsc5;T2 _yyvsp5;T0* _yyspecial_routines5;T0* _yyvs6;T2 _yyvsc6;T2 _yyvsp6;T0* _yyspecial_routines6;T0* _yyvs7;T2 _yyvsc7;T2 _yyvsp7;T0* _yyspecial_routines7;T0* _yyvs8;T2 _yyvsc8;T2 _yyvsp8;T0* _yyspecial_routines8;T0* _yyvs9;T2 _yyvsc9;T2 _yyvsp9;T0* _yyspecial_routines9;T0* _yyvs10;T2 _yyvsc10;T2 _yyvsp10;T0* _yyspecial_routines10;T0* _yyvs11;T2 _yyvsc11;T2 _yyvsp11;T0* _yyspecial_routines11;};
extern T415 M415;
struct S305{T0* _element;T0* _character_data;T0* _processing_instruction;T0* _document;T0* _comment;T0* _xml_attribute;T0* _composite;};
extern T305 M305;
struct S736{T2 _count;T0* _first_cell;T0* _last_cell;};
extern T736 M736;
struct S271{T274 _storage;T2 _capacity;T2 _upper;};
extern T271 M271;
struct S221{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _root_element;};
extern T221 M221;
extern T507 M507;
struct S143{Tid id;T0* _variables;T0* _error_handler;T6 _is_shallow;};
extern T143 M143;
extern T79 M79;
struct S404{T0* _item;T0* _right;};
extern T404 M404;
struct S129{T78 _storage;T2 _capacity;T2 _upper;};
extern T129 M129;
extern T428 M428;
struct S555{Tid id;T0* _parameters;};
extern T555 M555;
struct S257{T0* _clusters;};
extern T257 M257;
extern T288 M288;
struct S314{T0* _class_name;T0* _options;T0* _feature_options;};
extern T314 M314;
struct S376{T0* _item;T0* _right;};
extern T376 M376;
struct S602{T605 _storage;T2 _capacity;T2 _upper;};
extern T602 M602;
struct S560{Tid id;T0* _parameters;};
extern T560 M560;
struct S83{Tid id;T9 _storage;T2 _count;T2 _capacity;T2 _byte_count;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T83 M83;
struct S125{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _key_equality_tester;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _special_item_routines;T0* _special_key_routines;};
extern T125 M125;
struct S92{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T6 _is_shallow;T6 _is_ve;T0* _generators;T0* _output_filename;};
extern T92 M92;
struct S333{int _environment_impl;};
extern T333 M333;
struct S760{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T760 M760;
struct S597{T0* _version;T0* _encoding;T6 _stand_alone;};
extern T597 M597;
struct S167{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T167 M167;
struct S648{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T648 M648;
struct S159{Tid id;T2 _buffer_position;T9 _buffer;T2 _capacity;T0* _name;};
extern T159 M159;
extern T408 M408;
struct S260{T6 _is_abstract;T6 _is_recursive;T6 _is_relative;T6 _is_read_only;T6 _is_implicit;T0* _name;T0* _library_prefix;T0* _cluster_prefix;T0* _pathname;T0* _libraries;T0* _options;T0* _class_options;T6 _is_mounted;T0* _parent;T0* _subclusters;};
extern T260 M260;
struct S429{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T0* _yy_content_area;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _input_resolver;T0* _input_filter;T0* _last_error;T0* _input_name;T0* _last_value;T0* _character_entity;T0* _start_conditions;T0* _resolver;T0* _value;T0* _external_id;T6 _in_use;};
extern T429 M429;
struct S163{Tid id;T0* _name;};
extern T163 M163;
struct S574{T0* _source_name;T2 _byte_index;T2 _column;T2 _row;};
extern T574 M574;
struct S647{Tid id;T0* _last_string;T2 _encoding;T0* _utf_queue;T0* _impl;};
extern T647 M647;
struct S307{Tid id;T0* _parent;T0* _name;T0* _namespace;T0* _value;};
extern T307 M307;
struct S533{T0* _class_name;T0* _feature_name;T0* _external_name;};
extern T533 M533;
struct S256{T0* _libraries;};
extern T256 M256;
struct S484{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _key_equality_tester;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _special_item_routines;T0* _special_key_routines;};
extern T484 M484;
struct S509{Tid id;};
extern T509 M509;
struct S99{Tid id;T9 _storage;T2 _count;T2 _capacity;T2 _byte_count;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T99 M99;
struct S718{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T0* _yy_content_area;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _input_resolver;T0* _input_filter;T0* _last_error;T0* _input_name;T0* _last_value;T0* _character_entity;T0* _start_conditions;T0* _resolver;T0* _value;T0* _external_id;T6 _in_use;T6 _pre_sent;T6 _post_sent;};
extern T718 M718;
struct S106{T78 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T106 M106;
struct S435{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _key_equality_tester;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _special_item_routines;T0* _special_key_routines;};
extern T435 M435;
struct S617{T620 _storage;T2 _capacity;T2 _upper;};
extern T617 M617;
struct S213{Tid id;T0* _parent;T0* _name;T0* _namespace;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T213 M213;
struct S112{T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T112 M112;
struct S259{Tid id;T6 _is_root;T0* _pathname;T0* _library;T0* _library_prefix;T0* _position;};
extern T259 M259;
struct S651{T2 _count;T0* _first_cell;T0* _last_cell;};
extern T651 M651;
struct S708{T0* _item;T0* _right;T0* _left;};
extern T708 M708;
struct S462{T2 _count;T0* _first_cell;};
extern T462 M462;
struct S162{T507 _basic_directory;int _environment_impl;};
extern T162 M162;
struct S633{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _special_item_routines;};
extern T633 M633;
struct S389{T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T389 M389;
struct S308{T0* _ns_prefix;T0* _uri;};
extern T308 M308;
struct S400{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T400 M400;
struct S632{T636 _storage;T2 _capacity;T2 _upper;};
extern T632 M632;
struct S607{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T607 M607;
struct S298{T0* _container;};
extern T298 M298;
struct S71{T0* _program_name;};
extern T71 M71;
struct S558{Tid id;T0* _parameters;};
extern T558 M558;
struct S144{Tid id;T0* _variables;T0* _error_handler;};
extern T144 M144;
struct S64{T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T64 M64;
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/

/*
  This file (SmartEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifndef SE_BOOST
    /* To keep track of dump stack to unwind it safely
       before the LONGJMP :
    */
    struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmartEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmartEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define basic_io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define basic_io_read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
  extern int basic_io_read_stdin(char *buffer, int size);
#endif

/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
/*POINTER*/
T6 r8is_null(T8 C);
/*BOOLEAN*/
T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/
T6 r6_px_not(T6 C);
/*BOOLEAN*/
T6 r6_ix_or(T6 C,T6 a1);
/*CHARACTER*/
T6 r3is_digit(T3 C);
/*CHARACTER*/
T6 r3is_separator(T3 C);
/*CHARACTER*/
T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/
T1 r3value(T3 C);
/*CHARACTER*/
T1 r3decimal_value(T3 C);
/*CHARACTER*/
T6 r3_ix_6261(T3 C,T3 a1);
/*CHARACTER*/
T3 r3to_lower(T3 C);
/*CHARACTER*/
T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/
T6 r3_ix_62(T3 C,T3 a1);
/*INTEGER*/
T0* r2out(T2 C);
/*INTEGER*/
void r2append_in(T2 C,T0* a1);
extern T0*oBC17tagged_out_memory;
/*INTEGER_64*/
T3 r11digit(T11 C);
/*NATIVE_ARRAY[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
T636 r636realloc(T636 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
void r636set_all_with(T636 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
void r636clear(T636 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
void r636copy_from(T636 C,T636 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_EXTERNAL_ID]*/
T630 r630realloc(T630 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_EXTERNAL_ID]*/
void r630set_all_with(T630 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_EXTERNAL_ID]*/
void r630clear(T630 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_EXTERNAL_ID]*/
void r630copy_from(T630 C,T630 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
T616 r616realloc(T616 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
void r616set_all_with(T616 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
void r616clear(T616 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
void r616copy_from(T616 C,T616 a1,T2 a2);
/*NATIVE_ARRAY[BOOLEAN]*/
T605 r605realloc(T605 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[BOOLEAN]*/
void r605set_all_with(T605 C,T6 a1,T2 a2);
/*NATIVE_ARRAY[BOOLEAN]*/
void r605clear(T605 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[BOOLEAN]*/
void r605copy_from(T605 C,T605 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
T759 r759realloc(T759 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
void r759clear(T759 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
void r759copy_from(T759 C,T759 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_MOUNTED_LIBRARY]*/
T274 r274realloc(T274 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_MOUNTED_LIBRARY]*/
void r274clear(T274 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_MOUNTED_LIBRARY]*/
void r274copy_from(T274 C,T274 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[STRING]]*/
T610 r610realloc(T610 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[STRING]]*/
void r610set_all_with(T610 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[STRING]]*/
void r610clear(T610 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_BILINKED_LIST[STRING]]*/
void r610copy_from(T610 C,T610 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_LIBRARY]*/
T242 r242realloc(T242 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_LIBRARY]*/
void r242clear(T242 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_LIBRARY]*/
void r242copy_from(T242 C,T242 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_CLUSTER]*/
T268 r268realloc(T268 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_CLUSTER]*/
void r268clear(T268 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ET_XACE_CLUSTER]*/
void r268copy_from(T268 C,T268 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ELEMENT_CONTENT]*/
T625 r625realloc(T625 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ELEMENT_CONTENT]*/
void r625set_all_with(T625 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ELEMENT_CONTENT]*/
void r625clear(T625 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ELEMENT_CONTENT]*/
void r625copy_from(T625 C,T625 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_DECLARATION]*/
T601 r601realloc(T601 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_DECLARATION]*/
void r601set_all_with(T601 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_DECLARATION]*/
void r601clear(T601 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_DECLARATION]*/
void r601copy_from(T601 C,T601 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
T78 r78realloc(T78 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r78set_all_with(T78 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r78clear(T78 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r78copy_from(T78 C,T78 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T640 r640realloc(T640 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r640set_all_with(T640 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r640clear(T640 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r640copy_from(T640 C,T640 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
T456 r456realloc(T456 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r456clear(T456 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r456copy_from(T456 C,T456 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/
T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
T2 r9fast_occurrences(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
T6 r9fast_has(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/
void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ATTRIBUTE_CONTENT]*/
T620 r620realloc(T620 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ATTRIBUTE_CONTENT]*/
void r620set_all_with(T620 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ATTRIBUTE_CONTENT]*/
void r620clear(T620 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_DTD_ATTRIBUTE_CONTENT]*/
void r620copy_from(T620 C,T620 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
T134 r134realloc(T134 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r134set_all_with(T134 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r134clear(T134 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r134copy_from(T134 C,T134 a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[STRING]]*/
T501 r501realloc(T501 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[STRING]]*/
void r501clear(T501 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_HASH_SET[STRING]]*/
void r501copy_from(T501 C,T501 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
T644 r644realloc(T644 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r644set_all_with(T644 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r644clear(T644 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r644copy_from(T644 C,T644 a1,T2 a2);
/*STRING*/
void r7copy(T7* C,T0* a1);
/*STRING*/
T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/
T2 r7occurrences(T7* C,T3 a1);
/*STRING*/
T2 r7item_code(T7* C,T2 a1);
/*STRING*/
void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/
T6 r7is_equal(T7* C,T0* a1);
/*STRING*/
T3 r7item(T7* C,T2 a1);
/*STRING*/
T6 r7valid_index(T7* C,T2 a1);
/*STRING*/
void r7append(T7* C,T0* a1);
/*STRING*/
T6 r7se_assigned_from(T0* a1);
/*STRING*/
void r7make_from_string(T7* C,T0* a1);
/*STRING*/
T6 r7has_substring(T7* C,T0* a1);
/*STRING*/
T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/
T6 r7same_type(T7* C,T0* a1);
/*STRING*/
void r7remove_tail(T7* C,T2 a1);
/*STRING*/
void r7make(T7* C,T2 a1);
/*STRING*/
void r7append_string(T7* C,T0* a1);
/*STRING*/
void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/
void r7remove(T7* C,T2 a1);
/*STRING*/
T0* r7string(T7* C);
/*STRING*/
void r7extend(T7* C,T3 a1);
/*STRING*/
T2 r7hash_code(T7* C);
/*STRING*/
T6 r7conforms_to(T7* C,T0* a1);
/*STRING*/
T6 r7has(T7* C,T3 a1);
/*STRING*/
T2 r7to_integer(T7* C);
/*STRING*/
void r7append_character(T7* C,T3 a1);
/*STRING*/
void r7resize(T7* C,T2 a1);
/*STRING*/
T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/
void r7from_external_copy(T7* C,T8 a1);
/*STRING*/
T8 r7to_external(T7* C);
/*STRING*/
T6 r7same_string(T7* C,T0* a1);
/*STRING*/
T0* r7twin(T7* C);
/*STRING*/
T0* r7_ix_43(T7* C,T0* a1);
/*STRING*/
void r7swap(T7* C,T2 a1,T2 a2);
/*ARRAY[INTEGER]*/
T2 r336count(T336* C);
/*ARRAY[INTEGER]*/
T2 r336item(T336* C,T2 a1);
/*ARRAY[INTEGER]*/
T6 r336valid_index(T336* C,T2 a1);
/*ARRAY[INTEGER]*/
void r336make(T336* C,T2 a1,T2 a2);
/*ARRAY[XM_CALLBACKS_FILTER]*/
T0* r410item(T410* C,T2 a1);
/*ARRAY[ARRAY[INTEGER]]*/
T0* r337item(T337* C,T2 a1);
/*FIXED_ARRAY[STRING]*/
T6 r77valid_index(T77* C,T2 a1);
/*FIXED_ARRAY[STRING]*/
void r77make(T77* C,T2 a1);
/*ARRAY[STRING]*/
T0* r106item(T106* C,T2 a1);
/*ARRAY[STRING]*/
T6 r106valid_index(T106* C,T2 a1);
/*ARRAY[STRING]*/
void r106make(T106* C,T2 a1,T2 a2);
/*DS_HASH_TABLE_CURSOR[DS_HASH_SET[STRING],STRING]*/
T0* r483key(T483* C);
/*DS_HASH_TABLE_CURSOR[DS_HASH_SET[STRING],STRING]*/
T6 r483valid_position(T483* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[DS_HASH_SET[STRING],STRING]*/
T0* r483item(T483* C);
/*DS_HASH_TABLE_CURSOR[DS_HASH_SET[STRING],STRING]*/
T6 r483after(T483* C);
/*DS_HASH_TABLE_CURSOR[DS_HASH_SET[STRING],STRING]*/
void r483make(T483* C,T0* a1);
/*SPECIAL[ANY]*/
T6 r641valid_index(T641* C,T2 a1);
/*SPECIAL[ANY]*/
void r641make(T641* C,T2 a1);
/*SPECIAL[ANY]*/
T0* r641resize(T641* C,T2 a1);
/*SPECIAL[ANY]*/
void r641array_resize(T641* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T2 r344new_capacity(T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r344valid_cursor(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
T6 r344extendible(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344force(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
T0* r344keys_item(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r344valid_slot(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344make_clashes(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r344valid_position(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T0* r344cursor_item(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344search_position(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344remove_traversing_cursor(T344* C,T0* a1);
extern T2 oBC123default_capacity;
/*DS_HASH_SET[STRING]*/
void r344cursor_go_after(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344make_items(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344add_traversing_cursor(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344put_new(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344slots_wipe_out(T344* C);
/*DS_HASH_SET[STRING]*/
void r344make(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344clashes_wipe_out(T344* C);
extern T0*oBC120special_integer_;
/*DS_HASH_SET[STRING]*/
T6 r344cursor_after(T0* a1);
/*DS_HASH_SET[STRING]*/
T6 r344has(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344cursor_search_forth(T344* C,T0* a1,T0* a2);
/*DS_HASH_SET[STRING]*/
T2 r344hash_position(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344cursor_forth(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344items_resize(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344resize(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r344equality_tester_settable(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344cursor_start(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344clashes_resize(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344slots_resize(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344force_last(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
T0* r344new_cursor(T344* C);
/*DS_HASH_SET[STRING]*/
void r344make_slots(T344* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r344put_last(T344* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r344move_all_cursors(T344* C,T2 a1,T2 a2);
/*DS_HASH_SET[STRING]*/
T2 r344new_modulus(T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r344cursor_off(T0* a1);
/*DS_HASH_SET[STRING]*/
void r344compress(T344* C);
/*KL_SPECIAL_ROUTINES[ANY]*/
T0* r645make(T2 a1);
/*KL_SPECIAL_ROUTINES[ANY]*/
T0* r645resize(T0* a1,T2 a2);
/*DS_HASH_SET_CURSOR[XM_EIFFEL_PARSER_NAME]*/
void r683make(T683* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_clashes(T356* C,T2 a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356search_position(T356* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_items(T356* C,T2 a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356put_new(T356* C,T2 a1,T0* a2);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T6 r356has(T356* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_keys(T356* C,T2 a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T2 r356hash_position(T356* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T2 r356found_item(T356* C);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_with_equality_testers(T356* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T6 r356found(T356* C);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_sparse_container(T356* C,T2 a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356search(T356* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T6 r356key_equality_tester_settable(T356* C,T0* a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T0* r356new_cursor(T356* C);
/*DS_HASH_TABLE[INTEGER,STRING]*/
void r356make_slots(T356* C,T2 a1);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T6 r356is_full(T356* C);
/*DS_HASH_TABLE[INTEGER,STRING]*/
T2 r356new_modulus(T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T2 r373new_capacity(T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373valid_cursor(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373extendible(T373* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T0* r373last(T373* C);
/*DS_ARRAYED_LIST[STRING]*/
T0* r373cursor_item(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373remove_traversing_cursor(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373cursor_go_after(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373add_traversing_cursor(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373cursor_before(T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373make(T373* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373cursor_after(T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373has(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T2 r373cursor_index(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373cursor_search_forth(T373* C,T0* a1,T0* a2);
/*DS_ARRAYED_LIST[STRING]*/
void r373cursor_forth(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373resize(T373* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373cursor_start(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r373force_last(T373* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T0* r373new_cursor(T373* C);
/*DS_ARRAYED_LIST[STRING]*/
T6 r373cursor_off(T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
T6 r375valid_cursor(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375remove_traversing_cursor(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375add_traversing_cursor(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375make(T375* C);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
T6 r375cursor_after(T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
T6 r375has(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375cursor_forth(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375cursor_start(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
T0* r375new_cursor(T375* C);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
void r375put_last(T375* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_CLASS_OPTIONS]*/
T6 r375cursor_off(T0* a1);
/*DS_PAIR[XM_POSITION,XM_NODE]*/
void r318make(T318* C,T0* a1,T0* a2);
/*KL_SPECIAL_ROUTINES[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
T0* r666make(T2 a1);
/*KL_SPECIAL_ROUTINES[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
T0* r666resize(T0* a1,T2 a2);
/*SPECIAL[INTEGER]*/
T6 r131valid_index(T131* C,T2 a1);
/*SPECIAL[INTEGER]*/
void r131make(T131* C,T2 a1);
/*SPECIAL[INTEGER]*/
T0* r131resize(T131* C,T2 a1);
/*SPECIAL[INTEGER]*/
void r131array_resize(T131* C,T2 a1);
/*SPECIAL[INTEGER]*/
void r131with_capacity(T131* C,T2 a1);
/*SPECIAL[INTEGER]*/
void r131from_collection(T131* C,T0* a1);
/*SPECIAL[XM_EIFFEL_ENTITY_DEF]*/
T6 r452valid_index(T452* C,T2 a1);
/*SPECIAL[XM_EIFFEL_ENTITY_DEF]*/
void r452make(T452* C,T2 a1);
/*SPECIAL[XM_EIFFEL_ENTITY_DEF]*/
T0* r452resize(T452* C,T2 a1);
/*SPECIAL[XM_EIFFEL_ENTITY_DEF]*/
void r452array_resize(T452* C,T2 a1);
/*KL_SPECIAL_ROUTINES[DS_BILINKED_LIST[STRING]]*/
T0* r716make(T2 a1);
/*KL_SPECIAL_ROUTINES[DS_BILINKED_LIST[STRING]]*/
T0* r716resize(T0* a1,T2 a2);
/*DS_BILINKABLE[XM_DTD_ELEMENT_CONTENT]*/
void r771put_right(T771* C,T0* a1);
/*DS_HASH_SET_CURSOR[XM_NAMESPACE]*/
void r754make(T754* C,T0* a1);
/*DS_LINKED_STACK[XM_EIFFEL_SCANNER]*/
void r461copy(T461* C,T0* a1);
/*DS_LINKED_STACK[XM_EIFFEL_SCANNER]*/
void r461force(T461* C,T0* a1);
/*DS_LINKED_STACK[XM_EIFFEL_SCANNER]*/
void r461remove(T461* C);
/*SPECIAL[DS_HASH_SET[STRING]]*/
T6 r498valid_index(T498* C,T2 a1);
/*SPECIAL[DS_HASH_SET[STRING]]*/
void r498make(T498* C,T2 a1);
/*SPECIAL[DS_HASH_SET[STRING]]*/
T0* r498resize(T498* C,T2 a1);
/*SPECIAL[DS_HASH_SET[STRING]]*/
void r498array_resize(T498* C,T2 a1);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312set(T312* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
T6 r312is_first(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
T6 r312is_last(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312make(T312* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312remove(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312forth(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312start(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312go_after(T312* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r312set_after(T312* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r374valid_position(T374* C,T2 a1);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T0* r374item(T374* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r374after(T374* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T2 r374index(T374* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r374off(T374* C);
/*KL_SPECIAL_ROUTINES[XM_DTD_EXTERNAL_ID]*/
T0* r719make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_DTD_EXTERNAL_ID]*/
T0* r719resize(T0* a1,T2 a2);
/*KL_SPECIAL_ROUTINES[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r715make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r715resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r658set(T658* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
T6 r658is_last(T658* C);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r658make(T658* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r658set_after(T658* C);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
T2 r264new_capacity(T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
T6 r264extendible(T264* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
void r264make(T264* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
void r264resize(T264* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
void r264force_last(T264* C,T0* a1);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
T0* r264new_cursor(T264* C);
/*DS_ARRAYED_LIST[ET_XACE_CLUSTER]*/
void r264put_last(T264* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T2 r237new_capacity(T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237wipe_out(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_clashes(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237valid_slot(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237valid_position(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237search_position(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237keys_resize(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_items(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237move_all_cursors_after(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237has_item(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237slots_wipe_out(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237clashes_wipe_out(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237has(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_keys(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237force_new(T237* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T2 r237hash_position(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237items_wipe_out(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237items_resize(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_with_equality_testers(T237* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237resize(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T0* r237found_item(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237found(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_sparse_container(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237search(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237clashes_resize(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237slots_resize(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T6 r237key_equality_tester_settable(T237* C,T0* a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237keys_wipe_out(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T0* r237new_cursor(T237* C);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
void r237make_slots(T237* C,T2 a1);
/*DS_HASH_TABLE[ET_XACE_LIBRARY,STRING]*/
T2 r237new_modulus(T2 a1);
/*DS_BILINKABLE[XM_POSITION]*/
void r582put_right(T582* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r317set(T317* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r317make(T317* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r317set_after(T317* C);
/*DS_LINKED_LIST_CURSOR[ET_XACE_GENERATOR]*/
void r154set(T154* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[ET_XACE_GENERATOR]*/
void r154make(T154* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[ET_XACE_ASSEMBLY]*/
void r515set(T515* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[ET_XACE_ASSEMBLY]*/
void r515make(T515* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[ET_XACE_ASSEMBLY]*/
void r515set_after(T515* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T6 r189valid_position(T189* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T0* r189item(T189* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T6 r189after(T189* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
void r189make(T189* C,T0* a1);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T6 r189off(T189* C);
/*KL_SPECIAL_ROUTINES[BOOLEAN]*/
T0* r665make(T2 a1);
/*KL_SPECIAL_ROUTINES[BOOLEAN]*/
T0* r665resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727set_last_cell(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r727valid_cursor(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727wipe_out(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727cursor_back(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T0* r727cursor_item(T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727remove_traversing_cursor(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727move_all_cursors_after(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727add_traversing_cursor(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r727cursor_before(T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727make(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727remove_last(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727cursor_finish(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727move_last_cursors_after(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727cursor_go_before(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r727force_last(T727* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T0* r727new_cursor(T727* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r727cursor_off(T0* a1);
/*DS_PAIR[STRING,STRING]*/
void r166make(T166* C,T0* a1,T0* a2);
/*KL_SPECIAL_ROUTINES[ET_XACE_CLUSTER]*/
T0* r269make(T2 a1);
/*KL_SPECIAL_ROUTINES[ET_XACE_CLUSTER]*/
T0* r269resize(T0* a1,T2 a2);
/*KL_SPECIAL_ROUTINES[ET_XACE_LIBRARY]*/
T0* r335make(T2 a1);
/*KL_SPECIAL_ROUTINES[ET_XACE_LIBRARY]*/
T0* r335resize(T0* a1,T2 a2);
/*DS_BILINKABLE[DS_HASH_TABLE[STRING,STRING]]*/
void r762put_right(T762* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[ET_XACE_EXPORTED_FEATURE]*/
void r544set(T544* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[ET_XACE_EXPORTED_FEATURE]*/
void r544make(T544* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[ET_XACE_EXPORTED_FEATURE]*/
void r544set_after(T544* C);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r327valid_cursor(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327remove_traversing_cursor(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327cursor_go_after(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327add_traversing_cursor(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327make(T327* C);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r327cursor_after(T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327cursor_forth(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327cursor_start(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T0* r327new_cursor(T327* C);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r327put_last(T327* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r327cursor_off(T0* a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
T2 r270new_capacity(T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
T6 r270extendible(T270* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
void r270make(T270* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
void r270resize(T270* C,T2 a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
void r270force_last(T270* C,T0* a1);
/*DS_ARRAYED_LIST[ET_XACE_MOUNTED_LIBRARY]*/
T0* r270new_cursor(T270* C);
/*DS_LINKED_LIST_CURSOR[GEXACE_COMMAND]*/
void r33set(T33* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[GEXACE_COMMAND]*/
void r33make(T33* C,T0* a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_ENTITY_DEF]*/
T0* r453make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_ENTITY_DEF]*/
T0* r453resize(T0* a1,T2 a2);
/*DS_HASH_SET_CURSOR[STRING]*/
T6 r355valid_position(T355* C,T2 a1);
/*DS_HASH_SET_CURSOR[STRING]*/
T0* r355item(T355* C);
/*DS_HASH_SET_CURSOR[STRING]*/
T6 r355after(T355* C);
/*DS_HASH_SET_CURSOR[STRING]*/
void r355make(T355* C,T0* a1);
/*DS_HASH_SET_CURSOR[STRING]*/
T6 r355off(T355* C);
/*SPECIAL[XM_DTD_ELEMENT_CONTENT]*/
T6 r622valid_index(T622* C,T2 a1);
/*SPECIAL[XM_DTD_ELEMENT_CONTENT]*/
void r622make(T622* C,T2 a1);
/*SPECIAL[XM_DTD_ELEMENT_CONTENT]*/
T0* r622resize(T622* C,T2 a1);
/*SPECIAL[XM_DTD_ELEMENT_CONTENT]*/
void r622array_resize(T622* C,T2 a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_DECLARATION]*/
T0* r662make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_DECLARATION]*/
T0* r662resize(T0* a1,T2 a2);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T6 r534valid_cursor(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T0* r534cursor_item(T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534remove_traversing_cursor(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534cursor_go_after(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534add_traversing_cursor(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T6 r534cursor_before(T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534make(T534* C);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T6 r534cursor_after(T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T6 r534has(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534cursor_search_forth(T534* C,T0* a1,T0* a2);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534cursor_forth(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534cursor_start(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
void r534force_last(T534* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T0* r534new_cursor(T534* C);
/*DS_LINKED_LIST[ET_XACE_EXPORTED_FEATURE]*/
T6 r534cursor_off(T0* a1);
/*SPECIAL[XM_NAMESPACE]*/
T6 r755valid_index(T755* C,T2 a1);
/*SPECIAL[XM_NAMESPACE]*/
void r755make(T755* C,T2 a1);
/*SPECIAL[XM_NAMESPACE]*/
T0* r755resize(T755* C,T2 a1);
/*SPECIAL[XM_NAMESPACE]*/
void r755array_resize(T755* C,T2 a1);
/*KL_SPECIAL_ROUTINES[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
T0* r706make(T2 a1);
/*KL_SPECIAL_ROUTINES[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
T0* r706resize(T0* a1,T2 a2);
/*DS_HASH_TABLE_CURSOR[ET_XACE_LIBRARY,STRING]*/
T6 r254valid_position(T254* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[ET_XACE_LIBRARY,STRING]*/
void r254make(T254* C,T0* a1);
/*SPECIAL[DS_BILINKED_LIST[STRING]]*/
T6 r606valid_index(T606* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[STRING]]*/
void r606make(T606* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[STRING]]*/
T0* r606resize(T606* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[STRING]]*/
void r606array_resize(T606* C,T2 a1);
/*SPECIAL[XM_EIFFEL_PARSER_NAME]*/
T6 r637valid_index(T637* C,T2 a1);
/*SPECIAL[XM_EIFFEL_PARSER_NAME]*/
void r637make(T637* C,T2 a1);
/*SPECIAL[XM_EIFFEL_PARSER_NAME]*/
T0* r637resize(T637* C,T2 a1);
/*SPECIAL[XM_EIFFEL_PARSER_NAME]*/
void r637array_resize(T637* C,T2 a1);
/*KL_SPECIAL_ROUTINES[ET_XACE_MOUNTED_LIBRARY]*/
T0* r289make(T2 a1);
/*KL_SPECIAL_ROUTINES[ET_XACE_MOUNTED_LIBRARY]*/
T0* r289resize(T0* a1,T2 a2);
/*SPECIAL[XM_EIFFEL_DECLARATION]*/
T6 r598valid_index(T598* C,T2 a1);
/*SPECIAL[XM_EIFFEL_DECLARATION]*/
void r598make(T598* C,T2 a1);
/*SPECIAL[XM_EIFFEL_DECLARATION]*/
T0* r598resize(T598* C,T2 a1);
/*SPECIAL[XM_EIFFEL_DECLARATION]*/
void r598array_resize(T598* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
T6 r612valid_index(T612* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
void r612make(T612* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
T0* r612resize(T612* C,T2 a1);
/*SPECIAL[DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]]*/
void r612array_resize(T612* C,T2 a1);
/*SPECIAL[ET_XACE_LIBRARY]*/
T6 r239valid_index(T239* C,T2 a1);
/*SPECIAL[ET_XACE_LIBRARY]*/
void r239make(T239* C,T2 a1);
/*SPECIAL[ET_XACE_LIBRARY]*/
T0* r239resize(T239* C,T2 a1);
/*SPECIAL[ET_XACE_LIBRARY]*/
void r239array_resize(T239* C,T2 a1);
/*SPECIAL[ET_XACE_CLUSTER]*/
T6 r265valid_index(T265* C,T2 a1);
/*SPECIAL[ET_XACE_CLUSTER]*/
void r265make(T265* C,T2 a1);
/*SPECIAL[ET_XACE_CLUSTER]*/
T0* r265resize(T265* C,T2 a1);
/*SPECIAL[ET_XACE_CLUSTER]*/
void r265array_resize(T265* C,T2 a1);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r686force_first(T686* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r686make(T686* C);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r686force_last(T686* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
T0* r686new_cursor(T686* C);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T6 r516valid_cursor(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516remove_traversing_cursor(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516cursor_go_after(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516add_traversing_cursor(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T6 r516cursor_before(T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516make(T516* C);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T6 r516cursor_after(T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T6 r516has(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516cursor_search_forth(T516* C,T0* a1,T0* a2);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516cursor_forth(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516cursor_start(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
void r516force_last(T516* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T0* r516new_cursor(T516* C);
/*DS_LINKED_LIST[ET_XACE_ASSEMBLY]*/
T6 r516cursor_off(T0* a1);
/*DS_HASH_TABLE_CURSOR[INTEGER,STRING]*/
void r371make(T371* C,T0* a1);
/*KL_SPECIAL_ROUTINES[XM_DTD_ELEMENT_CONTENT]*/
T0* r684make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_DTD_ELEMENT_CONTENT]*/
T0* r684resize(T0* a1,T2 a2);
/*DS_LINKED_LIST[STRING]*/
T6 r176valid_cursor(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
T0* r176last(T176* C);
/*DS_LINKED_LIST[STRING]*/
T0* r176cursor_item(T0* a1);
/*DS_LINKED_LIST[STRING]*/
T6 r176cursor_is_last(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176remove_traversing_cursor(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176cursor_go_after(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
T0* r176item(T176* C,T2 a1);
/*DS_LINKED_LIST[STRING]*/
void r176add_traversing_cursor(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176make(T176* C);
/*DS_LINKED_LIST[STRING]*/
T6 r176cursor_after(T0* a1);
/*DS_LINKED_LIST[STRING]*/
T6 r176has(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176cursor_search_forth(T176* C,T0* a1,T0* a2);
/*DS_LINKED_LIST[STRING]*/
void r176cursor_forth(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176cursor_start(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
void r176force_last(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
T0* r176new_cursor(T176* C);
/*DS_LINKED_LIST[STRING]*/
void r176put_last(T176* C,T0* a1);
/*DS_LINKED_LIST[STRING]*/
T6 r176cursor_off(T0* a1);
/*KL_SPECIAL_ROUTINES[DS_HASH_SET[STRING]]*/
T0* r502make(T2 a1);
/*KL_SPECIAL_ROUTINES[DS_HASH_SET[STRING]]*/
T0* r502resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r732set(T732* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r732set_before(T732* C);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r732make(T732* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r732set_after(T732* C);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r737new_capacity(T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737make_equal(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T0* r737keys_item(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737make_clashes(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737search_position(T737* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T0* r737item(T737* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737make_items(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737make(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T6 r737has(T737* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r737hash_position(T737* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737items_resize(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737resize(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737clashes_resize(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737slots_resize(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737force_last(T737* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T0* r737new_cursor(T737* C);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r737make_slots(T737* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r737new_modulus(T2 a1);
/*KL_ARRAY_ROUTINES[INTEGER]*/
void r468subcopy(T0* a1,T0* a2,T2 a3,T2 a4,T2 a5);
/*DS_LINKED_LIST_CURSOR[ET_XACE_CLASS_OPTIONS]*/
void r386set(T386* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[ET_XACE_CLASS_OPTIONS]*/
void r386make(T386* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ELEMENT_CONTENT]*/
void r696make(T696* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r713set(T713* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r713make(T713* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r713set_after(T713* C);
/*DS_BILINKED_LIST[XM_POSITION]*/
void r578make(T578* C);
/*DS_BILINKED_LIST[XM_POSITION]*/
void r578force_last(T578* C,T0* a1);
/*DS_BILINKED_LIST[XM_POSITION]*/
T0* r578new_cursor(T578* C);
/*DS_HASH_TABLE_CURSOR[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r450valid_position(T450* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r450make(T450* C,T0* a1);
/*KL_EQUALITY_TESTER[XM_NAMESPACE]*/
T6 r743test(T0* a1,T0* a2);
/*SPECIAL[XM_DTD_EXTERNAL_ID]*/
T6 r627valid_index(T627* C,T2 a1);
/*SPECIAL[XM_DTD_EXTERNAL_ID]*/
void r627make(T627* C,T2 a1);
/*SPECIAL[XM_DTD_EXTERNAL_ID]*/
T0* r627resize(T627* C,T2 a1);
/*SPECIAL[XM_DTD_EXTERNAL_ID]*/
void r627array_resize(T627* C,T2 a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r613valid_cursor(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r613cursor_item(T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613remove_traversing_cursor(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613cursor_go_after(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613add_traversing_cursor(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613make(T613* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r613cursor_after(T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r613has(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613cursor_search_forth(T613* C,T0* a1,T0* a2);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613cursor_forth(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613cursor_start(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r613force_last(T613* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r613new_cursor(T613* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r613cursor_off(T0* a1);
/*KL_SPECIAL_ROUTINES[XM_NAMESPACE]*/
T0* r756make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_NAMESPACE]*/
T0* r756resize(T0* a1,T2 a2);
/*DS_BILINKABLE[STRING]*/
void r717put_right(T717* C,T0* a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_PARSER_NAME]*/
T0* r656make(T2 a1);
/*KL_SPECIAL_ROUTINES[XM_EIFFEL_PARSER_NAME]*/
T0* r656resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST_CURSOR[XM_POSITION]*/
void r594make(T594* C,T0* a1);
/*DS_LINKED_QUEUE[STRING]*/
void r736force(T736* C,T0* a1);
/*DS_LINKED_QUEUE[STRING]*/
void r736wipe_out(T736* C);
/*DS_LINKED_QUEUE[STRING]*/
T0* r736item(T736* C);
/*DS_LINKED_QUEUE[STRING]*/
void r736remove(T736* C);
/*SPECIAL[ET_XACE_MOUNTED_LIBRARY]*/
T6 r271valid_index(T271* C,T2 a1);
/*SPECIAL[ET_XACE_MOUNTED_LIBRARY]*/
void r271make(T271* C,T2 a1);
/*SPECIAL[ET_XACE_MOUNTED_LIBRARY]*/
T0* r271resize(T271* C,T2 a1);
/*SPECIAL[ET_XACE_MOUNTED_LIBRARY]*/
void r271array_resize(T271* C,T2 a1);
/*SPECIAL[STRING]*/
T6 r129valid_index(T129* C,T2 a1);
/*SPECIAL[STRING]*/
void r129make(T129* C,T2 a1);
/*SPECIAL[STRING]*/
T0* r129resize(T129* C,T2 a1);
/*SPECIAL[STRING]*/
void r129array_resize(T129* C,T2 a1);
/*SPECIAL[BOOLEAN]*/
T6 r602valid_index(T602* C,T2 a1);
/*SPECIAL[BOOLEAN]*/
void r602make(T602* C,T2 a1);
/*SPECIAL[BOOLEAN]*/
T0* r602resize(T602* C,T2 a1);
/*SPECIAL[BOOLEAN]*/
void r602array_resize(T602* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r125new_capacity(T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125valid_cursor(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125valid_slot(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_clashes(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125valid_position(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r125cursor_item(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125search_position(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125remove_traversing_cursor(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125keys_resize(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125cursor_go_after(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r125item(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_items(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125add_traversing_cursor(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125has_item(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r125value(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125cursor_after(T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125has(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_keys(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125force_new(T125* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125cursor_search_forth(T125* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r125hash_position(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125cursor_forth(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125items_resize(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_with_equality_testers(T125* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125resize(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_sparse_container(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125cursor_start(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125clashes_resize(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125slots_resize(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125key_equality_tester_settable(T125* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125force_last(T125* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r125new_cursor(T125* C);
/*DS_HASH_TABLE[STRING,STRING]*/
void r125make_slots(T125* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r125new_modulus(T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r125cursor_off(T0* a1);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167set(T167* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[STRING]*/
T0* r167item(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
T6 r167is_last(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167make(T167* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167forth(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167start(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167go_after(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167set_after(T167* C);
/*DS_LINKED_LIST_CURSOR[STRING]*/
void r167search_forth(T167* C,T0* a1);
/*KL_EQUALITY_TESTER[XM_EIFFEL_PARSER_NAME]*/
T6 r670test(T0* a1,T0* a2);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T2 r484new_capacity(T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484valid_cursor(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484force(T484* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_clashes(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484valid_slot(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484valid_position(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T0* r484cursor_item(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484search_position(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484remove_traversing_cursor(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484keys_resize(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T0* r484item(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_items(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484add_traversing_cursor(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T0* r484cursor_key(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484cursor_after(T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484has(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_keys(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T2 r484hash_position(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484cursor_forth(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484items_resize(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_with_equality_testers(T484* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484resize(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_sparse_container(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484cursor_start(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484clashes_resize(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484slots_resize(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484key_equality_tester_settable(T484* C,T0* a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T0* r484new_cursor(T484* C);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
void r484make_slots(T484* C,T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T2 r484new_modulus(T2 a1);
/*DS_HASH_TABLE[DS_HASH_SET[STRING],STRING]*/
T6 r484cursor_off(T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r435new_capacity(T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435force(T435* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435wipe_out(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r435valid_slot(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_clashes(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r435valid_position(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435search_position(T435* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435keys_resize(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T0* r435item(T435* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435move_all_cursors_after(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_items(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435slots_wipe_out(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435clashes_wipe_out(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r435has(T435* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_keys(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r435hash_position(T435* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435items_wipe_out(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435items_resize(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435resize(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_with_equality_testers(T435* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_sparse_container(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435clashes_resize(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435slots_resize(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435keys_wipe_out(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r435key_equality_tester_settable(T435* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T0* r435new_cursor(T435* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r435make_slots(T435* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r435new_modulus(T2 a1);
/*SPECIAL[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r617valid_index(T617* C,T2 a1);
/*SPECIAL[XM_DTD_ATTRIBUTE_CONTENT]*/
void r617make(T617* C,T2 a1);
/*SPECIAL[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r617resize(T617* C,T2 a1);
/*SPECIAL[XM_DTD_ATTRIBUTE_CONTENT]*/
void r617array_resize(T617* C,T2 a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
T6 r112valid_cursor(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112remove_traversing_cursor(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112add_traversing_cursor(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112make(T112* C);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
T6 r112cursor_after(T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112cursor_forth(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112cursor_start(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
void r112force_last(T112* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
T0* r112new_cursor(T112* C);
/*DS_LINKED_LIST[ET_XACE_GENERATOR]*/
T6 r112cursor_off(T0* a1);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r651force(T651* C,T3 a1);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r651wipe_out(T651* C);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r651remove(T651* C);
/*KL_SPECIAL_ROUTINES[INTEGER]*/
T0* r136make(T2 a1);
/*KL_SPECIAL_ROUTINES[INTEGER]*/
T0* r136make_from_array(T0* a1);
/*KL_SPECIAL_ROUTINES[INTEGER]*/
T0* r136resize(T0* a1,T2 a2);
/*KL_SPECIAL_ROUTINES[INTEGER]*/
T0* r136to_special(T0* a1);
/*DS_BILINKABLE[XM_DTD_ATTRIBUTE_CONTENT]*/
void r708put_right(T708* C,T0* a1);
/*DS_LINKED_STACK[INTEGER]*/
void r462force(T462* C,T2 a1);
/*DS_LINKED_STACK[INTEGER]*/
void r462remove(T462* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r633new_capacity(T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633make_equal(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T0* r633keys_item(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633make_clashes(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633search_position(T633* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633make_items(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633make(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r633has(T633* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633force_new(T633* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r633hash_position(T633* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633items_resize(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633resize(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633clashes_resize(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633slots_resize(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T0* r633new_cursor(T633* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r633make_slots(T633* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r633new_modulus(T2 a1);
/*KL_SPECIAL_ROUTINES[STRING]*/
T0* r137make(T2 a1);
/*KL_SPECIAL_ROUTINES[STRING]*/
T0* r137resize(T0* a1,T2 a2);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
T6 r389valid_cursor(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389remove_traversing_cursor(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389add_traversing_cursor(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389make(T389* C);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
T6 r389cursor_after(T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
T6 r389has(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389cursor_forth(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389cursor_start(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
T0* r389new_cursor(T389* C);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
void r389put_last(T389* C,T0* a1);
/*DS_LINKED_LIST[ET_XACE_FEATURE_OPTIONS]*/
T6 r389cursor_off(T0* a1);
/*DS_LINKED_LIST_CURSOR[ET_XACE_FEATURE_OPTIONS]*/
void r400set(T400* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[ET_XACE_FEATURE_OPTIONS]*/
void r400make(T400* C,T0* a1);
/*SPECIAL[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
T6 r632valid_index(T632* C,T2 a1);
/*SPECIAL[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
void r632make(T632* C,T2 a1);
/*SPECIAL[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
T0* r632resize(T632* C,T2 a1);
/*SPECIAL[DS_HASH_SET[XM_EIFFEL_PARSER_NAME]]*/
void r632array_resize(T632* C,T2 a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r607valid_cursor(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r607cursor_item(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r607cursor_is_last(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607remove_traversing_cursor(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607cursor_go_after(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r607item(T607* C,T2 a1);
/*DS_BILINKED_LIST[STRING]*/
void r607add_traversing_cursor(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607make(T607* C);
/*DS_BILINKED_LIST[STRING]*/
T6 r607cursor_after(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r607has(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607cursor_search_forth(T607* C,T0* a1,T0* a2);
/*DS_BILINKED_LIST[STRING]*/
void r607cursor_forth(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607cursor_start(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r607force_last(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r607new_cursor(T607* C);
/*DS_BILINKED_LIST[STRING]*/
void r607put_last(T607* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r607cursor_off(T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
T6 r64valid_cursor(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64remove_traversing_cursor(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64add_traversing_cursor(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64make(T64* C);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
T6 r64cursor_after(T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64cursor_forth(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64cursor_start(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
void r64force_last(T64* C,T0* a1);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
T0* r64new_cursor(T64* C);
/*DS_LINKED_LIST[GEXACE_COMMAND]*/
T6 r64cursor_off(T0* a1);
extern T0*oBC22string_;
extern T0*oBC24arguments;
extern int fBC24arguments;
/*ET_XACE_UNKNOWN_ELEMENT_ERROR*/
T0* r561arguments(void);
/*ET_XACE_UNKNOWN_ELEMENT_ERROR*/
void r561make(T561* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_UNKNOWN_ELEMENT_ERROR*/
T0* r561message(T561* C,T0* a1);
/*ET_XACE_UNKNOWN_ELEMENT_ERROR*/
T0* r561default_message(T561* C);
/*ET_XACE_MISSING_ELEMENT_ERROR*/
T0* r550arguments(void);
/*ET_XACE_MISSING_ELEMENT_ERROR*/
void r550make(T550* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_MISSING_ELEMENT_ERROR*/
T0* r550message(T550* C,T0* a1);
/*ET_XACE_MISSING_ELEMENT_ERROR*/
T0* r550default_message(T550* C);
/*KL_TEXT_INPUT_FILE*/
T2 r193_204Pread_to_buffer(T193* C,T0* a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
T6 r193is_closed(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193old_close(T193* C);
/*KL_TEXT_INPUT_FILE*/
T2 r193read_to_string(T193* C,T0* a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
void r193open_read(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193old_read_character(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193read_character(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193fill_buffer(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193close(T193* C);
/*KL_TEXT_INPUT_FILE*/
void r193make(T193* C,T0* a1);
/*KL_TEXT_INPUT_FILE*/
T2 r193read_to_buffer(T193* C,T0* a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
void r193connect_to(T193* C,T0* a1);
/*KL_TEXT_INPUT_FILE*/
void r193old_open_read(T193* C);
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_exported_feature(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_loop;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_options(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_optimize;
/*ET_XACE_LIBRARY_PARSER*/
void r332fill_library(T332* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC36uc_link_library;
extern T0*oBC36uc_location;
/*ET_XACE_LIBRARY_PARSER*/
void r332parse_file(T332* C,T0* a1);
/*ET_XACE_LIBRARY_PARSER*/
void r332make_with_variables_and_factory(T332* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC36uc_class;
/*ET_XACE_LIBRARY_PARSER*/
void r332set_ve(T332* C,T6 a1);
extern T0*oBC20string_equality_tester;
extern T0*oBC36uc_external;
extern T0*oBC36uc_alias;
extern T0*oBC36uc_invariant;
extern T0*oBC36uc_library;
/*ET_XACE_LIBRARY_PARSER*/
T6 r332is_true(T0* a1);
/*ET_XACE_LIBRARY_PARSER*/
void r332set_shallow(T332* C,T6 a1);
extern T0*oBC36uc_export;
extern T0*oBC18execution_environment;
extern T0*oBC36uc_feature;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_library(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_mount;
extern T0*oBC36uc_abstract;
/*ET_XACE_LIBRARY_PARSER*/
void r332fill_externals(T332* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC36uc_enable;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_feature(T332* C,T0* a1,T0* a2);
/*ET_XACE_LIBRARY_PARSER*/
void r332parse_library(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_ensure;
extern T0*oBC36uc_debug;
/*ET_XACE_LIBRARY_PARSER*/
void r332make_with_variables(T332* C,T0* a1,T0* a2);
/*ET_XACE_LIBRARY_PARSER*/
void r332fill_options(T332* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_class(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_option;
extern T0*oBC36uc_name;
extern T0*oBC209option_codes;
extern int fBC209option_codes;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332option_codes(void);
extern T0*oBC36uc_require;
extern T0*oBC36uc_include_dir;
extern T0*oBC36uc_cluster;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_export(T332* C,T0* a1,T0* a2);
/*ET_XACE_LIBRARY_PARSER*/
T6 r332is_false(T0* a1);
extern T0*oBC36uc_relative;
extern T0*oBC36uc_prefix;
extern T0*oBC36uc_value;
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_cluster(T332* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_LIBRARY_PARSER*/
T0* r332new_mount(T332* C,T0* a1,T0* a2);
extern T0*oBC36uc_check;
/*XM_CALLBACKS_NULL*/
T6 r413is_local_part(T0* a1);
extern T0*oBC431normalized_newline;
extern T0*oBC95integer_array_;
/*XM_EIFFEL_SCANNER_DTD*/
T2 r664start_condition(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664set_input_from_resolver(T664* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r664set_input_buffer(T664* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664text_substring(T664* C,T2 a1,T2 a2);
extern T0*oBC430yy_ec_template;
extern int fBC430yy_ec_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_ec_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_execute_action(T664* C,T2 a1);
extern T0*oBC430yy_def_template;
extern int fBC430yy_def_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_def_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
T3 r664text_item(T664* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
T6 r664end_of_file(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664system_literal_text(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_load_input_buffer(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664make_with_buffer(T664* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r664yy_null_trans_state(T664* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r664pop_start_condition(T664* C);
extern T0*oBC430yy_accept_template;
extern int fBC430yy_accept_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_accept_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r664read_token(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r664yy_previous_state(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_refill_input_buffer(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664_430Pread_token(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_fixed_array(T0* a1);
extern T0*oBC430yy_meta_template;
extern int fBC430yy_meta_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_meta_template(void);
extern T0*oBC430yy_base_template;
extern int fBC430yy_base_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_base_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r664_431Pmake_scanner(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664set_input_stream(T664* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r664text_count(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664new_file_buffer(T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r664make_scanner(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_initialize(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664reset(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664push_start_condition(T664* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664text(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664close_input(T664* C);
extern T0*oBC430yy_nxt_template;
extern int fBC430yy_nxt_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_nxt_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_set_line_column(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664_432Preset(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
T6 r664valid_start_condition(T2 a1);
extern T0*oBC434empty_buffer;
extern int fBC434empty_buffer;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664empty_buffer(void);
extern T0*oBC430yy_chk_template;
extern int fBC430yy_chk_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664yy_chk_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_set_content(T664* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r664set_start_condition(T664* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r664error_position(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664yy_build_tables(T664* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r664_433Pset_input_buffer(T664* C,T0* a1);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_system(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_exported_feature(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_options(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
void r479make_with_variables_and_factory(T479* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_SYSTEM_PARSER*/
void r479parse_file(T479* C,T0* a1);
extern T0*oBC36uc_creation;
/*ET_XACE_SYSTEM_PARSER*/
void r479set_ve(T479* C,T6 a1);
/*ET_XACE_SYSTEM_PARSER*/
T6 r479is_true(T0* a1);
/*ET_XACE_SYSTEM_PARSER*/
void r479set_shallow(T479* C,T6 a1);
/*ET_XACE_SYSTEM_PARSER*/
void r479fill_externals(T479* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC36uc_system;
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_feature(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
void r479make_with_variables(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
void r479fill_options(T479* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_class(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479option_codes(void);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_export(T479* C,T0* a1,T0* a2);
/*ET_XACE_SYSTEM_PARSER*/
T6 r479is_false(T0* a1);
/*ET_XACE_SYSTEM_PARSER*/
void r479fill_system(T479* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_cluster(T479* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_SYSTEM_PARSER*/
T0* r479new_mount(T479* C,T0* a1,T0* a2);
extern T0*oBC36uc_root;
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_comment(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_start_tag_finish(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_finish(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_attribute(T232* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_start(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_content(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232make_null(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_content(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_start(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
T6 r232is_local_part(T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_processing_instruction(T232* C,T0* a1,T0* a2);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_start_tag(T232* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_comment(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_end_tag(T232* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_attribute(T232* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_error(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_start_tag_finish(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_error(T232* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_processing_instruction(T232* C,T0* a1,T0* a2);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_finish(T232* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r232on_xml_declaration(T232* C,T0* a1,T0* a2,T6 a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_start_tag(T232* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r232_234Pon_end_tag(T232* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR*/
T0* r563arguments(void);
/*ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR*/
void r563make(T563* C,T0* a1,T0* a2);
/*ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR*/
T0* r563message(T563* C,T0* a1);
/*ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR*/
T0* r563default_message(T563* C);
/*ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING*/
T0* r546arguments(void);
/*ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING*/
void r546make(T546* C,T0* a1);
/*ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING*/
T0* r546message(T546* C,T0* a1);
/*ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING*/
T0* r546default_message(T546* C);
/*XM_EIFFEL_SCANNER*/
T2 r430start_condition(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430set_input_from_resolver(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430yy_chk_template_1(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430yy_chk_template_2(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430set_input_buffer(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r430text_substring(T430* C,T2 a1,T2 a2);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_ec_template(void);
/*XM_EIFFEL_SCANNER*/
void r430yy_execute_action(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_def_template(void);
/*XM_EIFFEL_SCANNER*/
T3 r430text_item(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T6 r430end_of_file(T430* C);
/*XM_EIFFEL_SCANNER*/
T0* r430system_literal_text(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430yy_load_input_buffer(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430make_with_buffer(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T2 r430yy_null_trans_state(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r430pop_start_condition(T430* C);
/*XM_EIFFEL_SCANNER*/
T6 r430is_valid_encoding(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_accept_template(void);
/*XM_EIFFEL_SCANNER*/
void r430read_token(T430* C);
/*XM_EIFFEL_SCANNER*/
T2 r430yy_previous_state(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430yy_refill_input_buffer(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430push_start_condition_dtd_ignore(T430* C);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_fixed_array(T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_meta_template(void);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_base_template(void);
/*XM_EIFFEL_SCANNER*/
void r430set_input_stream(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T2 r430text_count(T430* C);
/*XM_EIFFEL_SCANNER*/
T0* r430new_file_buffer(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430make_scanner(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430yy_initialize(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430reset(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430push_start_condition(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r430text(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430close_input(T430* C);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_nxt_template(void);
/*XM_EIFFEL_SCANNER*/
void r430yy_set_line_column(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430_432Preset(T430* C);
/*XM_EIFFEL_SCANNER*/
T6 r430valid_start_condition(T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r430empty_buffer(void);
/*XM_EIFFEL_SCANNER*/
void r430yy_nxt_template_1(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430yy_nxt_template_2(T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r430yy_chk_template(void);
/*XM_EIFFEL_SCANNER*/
void r430yy_set_content(T430* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
void r430set_start_condition(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r430yy_execute_eof_action(T430* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r430yy_build_tables(T430* C);
/*XM_EIFFEL_SCANNER*/
T0* r430error_position(T430* C);
/*XM_EIFFEL_SCANNER*/
void r430_433Pset_input_buffer(T430* C,T0* a1);
/*ET_XACE_OPTIONS*/
T0* r286msil_assembly_compatibility(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_recursive(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286visible_filename(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_exclude(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T6 r286split(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_flat_fst_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_include_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_il_verifiable(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_arguments_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286manifest_string_trace(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_array_optimization_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_msil_generation(T286* C,T6 a1);
extern T0*oBC286default_document;
/*ET_XACE_OPTIONS*/
T6 r286is_cls_compliant_declared(T286* C);
extern T0*oBC286default_metadata_cache_path;
/*ET_XACE_OPTIONS*/
T6 r286layout_optimization(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_verbose_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_jumps_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_leaves_optimization_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_clean_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_array_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286include(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_reloads_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286clean(T286* C);
/*ET_XACE_OPTIONS*/
T2 r286inlining_size(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_wedit(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_c_compiler_options_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286storable_filename(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_multithreaded(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_cls_compliant(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286verbose(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286linux_fpu_double_precision(T286* C);
extern T0*oBC286default_msil_assembly_compatibility;
extern T0*oBC286default_warning;
extern int fBC286default_warning;
/*ET_XACE_OPTIONS*/
T0* r286default_warning(void);
/*ET_XACE_OPTIONS*/
void r286set_assertion(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
void r286set_map(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286msil_clr_version(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_use_full_cluster_name_as_namespace(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_map_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_line_generation(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286callback(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_address_expression_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286dead_code_removal(T286* C);
extern T0*oBC286default_precompiled;
/*ET_XACE_OPTIONS*/
void r286set_portable_code_generation(T286* C,T6 a1);
extern T0*oBC286default_garbage_collector;
extern int fBC286default_garbage_collector;
/*ET_XACE_OPTIONS*/
T0* r286default_garbage_collector(void);
extern T0*oBC286valid_warning;
extern int fBC286valid_warning;
/*ET_XACE_OPTIONS*/
T0* r286valid_warning(void);
extern T0*oBC286default_storable_filename;
/*ET_XACE_OPTIONS*/
T6 r286is_abstract_declared(T286* C);
extern T0*oBC286default_assertion;
extern int fBC286default_assertion;
/*ET_XACE_OPTIONS*/
T0* r286default_assertion(void);
/*ET_XACE_OPTIONS*/
void r286set_c_compiler_options(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T6 r286is_use_full_cluster_name_as_namespace_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286msil_generation(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_debug_tag(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T6 r286wedit(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_create_keyword_extension_declared(T286* C);
extern T0*oBC286valid_target;
extern int fBC286valid_target;
/*ET_XACE_OPTIONS*/
T0* r286valid_target(void);
extern T0*oBC286default_callback;
extern T0*oBC286valid_layout;
extern int fBC286valid_layout;
/*ET_XACE_OPTIONS*/
T0* r286valid_layout(void);
/*ET_XACE_OPTIONS*/
T6 r286is_dotnet_naming_convention_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_profile_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_link_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286exception_trace(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286high_memory_compiler(T286* C);
extern T0*oBC286default_debug_tag;
extern int fBC286default_debug_tag;
/*ET_XACE_OPTIONS*/
T0* r286default_debug_tag(void);
/*ET_XACE_OPTIONS*/
T6 r286is_read_only_declared(T286* C);
extern T0*oBC286default_include;
extern int fBC286default_include;
/*ET_XACE_OPTIONS*/
T0* r286default_include(void);
/*ET_XACE_OPTIONS*/
void r286set_abstract(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_header_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_layout_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_dynamic_runtime(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286metadata_cache_path(T286* C);
extern T0*oBC286default_export_option;
/*ET_XACE_OPTIONS*/
T0* r286culture(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286export_option(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286leaves_optimization(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_layout_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286no_default_lib(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_strip_option(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_case_insensitive(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_read_only(T286* C,T6 a1);
extern T0*oBC111options;
/*ET_XACE_OPTIONS*/
T6 r286map(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286use_full_cluster_name_as_namespace(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_reloads_optimization_declared(T286* C);
extern T0*oBC286valid_garbage_collector;
extern int fBC286valid_garbage_collector;
/*ET_XACE_OPTIONS*/
T0* r286valid_garbage_collector(void);
/*ET_XACE_OPTIONS*/
T2 r286fst_expansion_factor(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286assembly(T286* C);
extern T0*oBC286default_link;
extern int fBC286default_link;
/*ET_XACE_OPTIONS*/
T0* r286default_link(void);
/*ET_XACE_OPTIONS*/
void r286set_create_keyword_extension(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_console_application(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_case_insensitive_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286c_compiler_options(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_leaves_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286multithreaded(T286* C);
extern T0*oBC286default_msil_clr_version;
/*ET_XACE_OPTIONS*/
T6 r286strip_option(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_gc_info(T286* C,T6 a1);
extern T0*oBC286default_public_key_token;
/*ET_XACE_OPTIONS*/
T0* r286linker(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_trace_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286override_cluster(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_fst_optimization(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_debugger(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286msil_generation_version(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_finalize_option_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_arguments(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T6 r286is_debugger_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_recursive_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286namespace(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286exclude(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_debug_tag_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_multithreaded_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_wedit_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_inlining(T286* C,T0* a1);
extern T0*oBC286default_assembly;
extern T0*oBC286default_target;
extern int fBC286default_target;
/*ET_XACE_OPTIONS*/
T0* r286default_target(void);
/*ET_XACE_OPTIONS*/
T6 r286is_assertion_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286component(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_dynamic_runtime_declared(T286* C);
extern T0*oBC286default_layout;
extern int fBC286default_layout;
/*ET_XACE_OPTIONS*/
T0* r286default_layout(void);
/*ET_XACE_OPTIONS*/
T6 r286create_keyword_extension(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_dead_code_removal_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_manifest_string_trace(T286* C,T6 a1);
extern T0*oBC286default_arguments;
extern int fBC286default_arguments;
/*ET_XACE_OPTIONS*/
T0* r286default_arguments(void);
extern T0*oBC286valid_callback;
extern int fBC286valid_callback;
/*ET_XACE_OPTIONS*/
T0* r286valid_callback(void);
/*ET_XACE_OPTIONS*/
void r286set_finalize_option(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_exception_trace(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T2 r286heap_size(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286array_optimization(T286* C);
extern T0*oBC286default_culture;
extern T0*oBC286valid_assertion;
extern int fBC286valid_assertion;
/*ET_XACE_OPTIONS*/
T0* r286valid_assertion(void);
/*ET_XACE_OPTIONS*/
T0* r286header(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286precompiled(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_linux_fpu_double_precision_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286recursive(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286dynamic_runtime(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_use_cluster_name_as_namespace_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286flat_fst_optimization(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_profile(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286jumps_optimization(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286garbage_collector(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_trace(T286* C,T6 a1);
extern T0*oBC286default_c_compiler_options;
extern int fBC286default_c_compiler_options;
/*ET_XACE_OPTIONS*/
T0* r286default_c_compiler_options(void);
/*ET_XACE_OPTIONS*/
T6 r286is_strip_option_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_exclude_declared(T286* C);
extern T0*oBC286default_dead_code_removal;
extern int fBC286default_dead_code_removal;
/*ET_XACE_OPTIONS*/
T0* r286default_dead_code_removal(void);
/*ET_XACE_OPTIONS*/
T6 r286check_vape(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_exception_trace_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_jumps_optimization_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_msil_generation_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_address_expression(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286reloads_optimization(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286portable_code_generation(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_gc_info_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286assertion(T286* C);
extern T0*oBC286default_override_cluster;
extern T0*oBC286default_exclude;
extern int fBC286default_exclude;
/*ET_XACE_OPTIONS*/
T0* r286default_exclude(void);
/*ET_XACE_OPTIONS*/
void r286set_include(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
void r286set_use_cluster_name_as_namespace(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T0* r286version(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286use_cluster_name_as_namespace(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286inlining(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286console_application(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_verbose(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_linux_fpu_double_precision(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286make(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286debug_option(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286debugger(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_check_vape_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286dotnet_naming_convention(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286il_verifiable(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286trace(T286* C);
extern T0*oBC286default_shared_library_definition;
/*ET_XACE_OPTIONS*/
T0* r286debug_tag(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286shared_library_definition(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_inlining_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286finalize_option(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_debug_option(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_portable_code_generation_declared(T286* C);
extern T0*oBC286default_visible_filename;
extern T0*oBC286valid_linker;
extern int fBC286valid_linker;
/*ET_XACE_OPTIONS*/
T0* r286valid_linker(void);
/*ET_XACE_OPTIONS*/
T6 r286is_fst_optimization_declared(T286* C);
extern T0*oBC286valid_dead_code_removal;
extern int fBC286valid_dead_code_removal;
/*ET_XACE_OPTIONS*/
T0* r286valid_dead_code_removal(void);
extern T0*oBC286default_inlining;
extern int fBC286default_inlining;
/*ET_XACE_OPTIONS*/
T0* r286default_inlining(void);
/*ET_XACE_OPTIONS*/
T6 r286gc_info(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_high_memory_compiler_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_flat_fst_optimization_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_link(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T6 r286cls_compliant(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286link(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286abstract(T286* C);
extern T0*oBC286default_header;
extern int fBC286default_header;
/*ET_XACE_OPTIONS*/
T0* r286default_header(void);
/*ET_XACE_OPTIONS*/
T6 r286fst_optimization(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_split_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_no_default_lib_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_console_application_declared(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_layout_optimization_declared(T286* C);
extern T0*oBC286default_prefix_option;
/*ET_XACE_OPTIONS*/
T0* r286prefix_option(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286read_only(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286address_expression(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_header(T286* C,T0* a1);
/*ET_XACE_OPTIONS*/
T2 r286stack_size(T286* C);
extern T0*oBC286default_version;
/*ET_XACE_OPTIONS*/
T6 r286is_debug_option_declared(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_split(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286line_generation(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286warning(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286public_key_token(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_manifest_string_trace_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286layout(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286target(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286case_insensitive(T286* C);
/*ET_XACE_OPTIONS*/
T6 r286is_line_generation_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286document(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_dotnet_naming_convention(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_clean(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
void r286set_check_vape(T286* C,T6 a1);
/*ET_XACE_OPTIONS*/
T6 r286is_il_verifiable_declared(T286* C);
/*ET_XACE_OPTIONS*/
T0* r286arguments(T286* C);
extern T0*oBC286default_namespace;
/*ET_XACE_OPTIONS*/
void r286set_no_default_lib(T286* C,T6 a1);
extern T0*oBC286valid_inlining;
extern int fBC286valid_inlining;
/*ET_XACE_OPTIONS*/
T0* r286valid_inlining(void);
extern T0*oBC286default_linker;
extern int fBC286default_linker;
/*ET_XACE_OPTIONS*/
T0* r286default_linker(void);
/*ET_XACE_OPTIONS*/
void r286set_dead_code_removal(T286* C,T0* a1);
extern T0*oBC286default_msil_generation_version;
extern T0*oBC286default_component;
/*ET_XACE_OPTIONS*/
T6 r286profile(T286* C);
/*ET_XACE_OPTIONS*/
void r286set_high_memory_compiler(T286* C,T6 a1);
/*ET_XACE_EXTERNALS*/
void r482put_include_directory(T482* C,T0* a1);
/*ET_XACE_EXTERNALS*/
T6 r482has_c_compiler_options(T482* C);
/*ET_XACE_EXTERNALS*/
void r482make(T482* C);
/*ET_XACE_EXTERNALS*/
T6 r482is_empty(T482* C);
/*ET_XACE_EXTERNALS*/
void r482put_c_compiler_options(T482* C,T0* a1);
/*ET_XACE_EXTERNALS*/
T6 r482has_include_directories(T482* C);
/*ET_XACE_EXTERNALS*/
T6 r482has_link_libraries(T482* C);
/*ET_XACE_EXTERNALS*/
void r482put_link_library(T482* C,T0* a1);
/*ET_XACE_BOOLEAN_EXPECTED_ERROR*/
T0* r566arguments(void);
/*ET_XACE_BOOLEAN_EXPECTED_ERROR*/
void r566make(T566* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_BOOLEAN_EXPECTED_ERROR*/
T0* r566message(T566* C,T0* a1);
/*ET_XACE_BOOLEAN_EXPECTED_ERROR*/
T0* r566default_message(T566* C);
/*ET_XACE_SYSTEM*/
void r223mount_libraries(T223* C);
/*ET_XACE_SYSTEM*/
void r223merge_externals(T223* C,T0* a1);
/*ET_XACE_SYSTEM*/
void r223merge_exported_features(T223* C,T0* a1);
/*XM_POSITION_TABLE*/
void r212put(T212* C,T0* a1,T0* a2);
/*XM_POSITION_TABLE*/
T0* r212item(T212* C,T0* a1);
/*XM_POSITION_TABLE*/
void r212make(T212* C);
/*XM_POSITION_TABLE*/
T6 r212has(T212* C,T0* a1);
/*ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING*/
T0* r565arguments(void);
/*ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING*/
void r565make(T565* C,T0* a1);
/*ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING*/
T0* r565message(T565* C,T0* a1);
/*ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING*/
T0* r565default_message(T565* C);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r230callbacks_pipe(T0* a1);
/*XM_TREE_CALLBACKS_PIPE*/
void r230make(T230* C);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r230new_namespace_resolver(void);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r230new_stop_on_error(void);
/*ET_XACE_PARSER*/
T0* r207new_system(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
T0* r207new_exported_feature(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
T0* r207new_options(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
void r207fill_library(T207* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_PARSER*/
void r207make_with_variables_and_factory(T207* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_PARSER*/
void r207parse_file(T207* C,T0* a1);
/*ET_XACE_PARSER*/
T6 r207is_true(T0* a1);
/*ET_XACE_PARSER*/
T0* r207new_library(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
void r207fill_externals(T207* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_PARSER*/
T0* r207new_feature(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
void r207make_with_variables(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
void r207fill_options(T207* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_PARSER*/
T0* r207new_class(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
T0* r207option_codes(void);
/*ET_XACE_PARSER*/
T0* r207new_export(T207* C,T0* a1,T0* a2);
/*ET_XACE_PARSER*/
T6 r207is_false(T0* a1);
/*ET_XACE_PARSER*/
void r207fill_system(T207* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_PARSER*/
T0* r207new_cluster(T207* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_PARSER*/
T0* r207new_mount(T207* C,T0* a1,T0* a2);
/*GEXACE_LIBRARY_COMMAND*/
void r156execute_generators(T156* C,T0* a1);
/*GEXACE_LIBRARY_COMMAND*/
void r156make(T156* C,T0* a1,T0* a2);
/*GEXACE_LIBRARY_COMMAND*/
void r156execute(T156* C);
/*ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r551arguments(void);
/*ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING*/
void r551make(T551* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r551message(T551* C,T0* a1);
/*ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r551default_message(T551* C);
/*ET_XACE_XML_GENERATOR*/
void r108print_cluster(T108* C,T0* a1,T2 a2,T0* a3);
/*ET_XACE_XML_GENERATOR*/
T6 r108is_escaped(T2 a1);
extern T0*oBC109lt_entity;
/*ET_XACE_XML_GENERATOR*/
void r108print_xml_library_file(T108* C,T0* a1,T0* a2);
extern T0*oBC109gt_entity;
extern T0*oBC109amp_entity;
/*ET_XACE_XML_GENERATOR*/
void r108print_mounted_libraries(T108* C,T0* a1,T2 a2,T0* a3);
extern T0*oBC109quot_entity;
/*ET_XACE_XML_GENERATOR*/
void r108print_escaped_character(T2 a1,T0* a2);
/*ET_XACE_XML_GENERATOR*/
void r108print_feature_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_XML_GENERATOR*/
void r108make(T108* C,T0* a1,T0* a2);
/*ET_XACE_XML_GENERATOR*/
void r108print_clusters(T108* C,T0* a1,T2 a2,T0* a3);
/*ET_XACE_XML_GENERATOR*/
void r108print_escaped_string(T0* a1,T0* a2);
/*ET_XACE_XML_GENERATOR*/
void r108print_class_options(T0* a1,T2 a2,T0* a3);
extern T0*oBC108default_system_output_filename;
/*ET_XACE_XML_GENERATOR*/
void r108print_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_XML_GENERATOR*/
void r108print_indentation(T2 a1,T0* a2);
/*ET_XACE_XML_GENERATOR*/
void r108print_xml_system_file(T108* C,T0* a1,T0* a2);
extern T0*oBC108default_library_output_filename;
/*ET_XACE_XML_GENERATOR*/
void r108print_quote_escaped_string(T0* a1,T0* a2);
/*YY_FILE_BUFFER*/
void r648fill(T648* C);
/*YY_FILE_BUFFER*/
void r648compact_left(T648* C);
/*YY_FILE_BUFFER*/
void r648set_position(T648* C,T2 a1,T2 a2,T2 a3);
/*YY_FILE_BUFFER*/
T0* r648name(T648* C);
extern T2 oBC463default_capacity;
/*YY_FILE_BUFFER*/
void r648make_from_string(T648* C,T0* a1);
/*YY_FILE_BUFFER*/
void r648make_from_buffer(T648* C,T0* a1);
/*YY_FILE_BUFFER*/
void r648resize(T648* C);
/*YY_FILE_BUFFER*/
T0* r648new_default_buffer(T2 a1);
/*YY_FILE_BUFFER*/
void r648make_with_size(T648* C,T0* a1,T2 a2);
/*YY_FILE_BUFFER*/
void r648set_file(T648* C,T0* a1);
/*YY_FILE_BUFFER*/
void r648flush(T648* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_start_tag_finish(T407* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407enable_position_table(T407* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_finish(T407* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_content(T407* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407make_null(T407* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_start(T407* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
T6 r407is_local_part(T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_processing_instruction(T407* C,T0* a1,T0* a2);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_start_tag(T407* C,T0* a1,T0* a2,T0* a3);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407handle_position(T407* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_comment(T407* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_end_tag(T407* C,T0* a1,T0* a2,T0* a3);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_attribute(T407* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_CALLBACKS_TO_TREE_FILTER*/
T0* r407new_namespace(T407* C,T0* a1,T0* a2);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_error(T407* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r407on_xml_declaration(T407* C,T0* a1,T0* a2,T6 a3);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_choice(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_mixed(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621set_content_mixed(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_empty(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621set_default(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_any(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_sequence(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_list(T621* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r621make_name(T621* C,T0* a1);
/*XM_DTD_ELEMENT_CONTENT*/
void r621set_content_any(T621* C);
/*UT_TRISTATE*/
T6 r315is_undefined(T315* C);
/*UT_MESSAGE*/
T0* r556arguments(void);
/*UT_MESSAGE*/
void r556make(T556* C,T0* a1);
/*UT_MESSAGE*/
T0* r556message(T556* C,T0* a1);
/*UT_MESSAGE*/
T0* r556default_message(T556* C);
/*KL_TEXT_OUTPUT_FILE*/
T6 r473is_closed(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473old_close(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473old_open_write(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473close(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473make(T473* C,T0* a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473old_put_string(T473* C,T0* a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473old_put_character(T473* C,T3 a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473connect_to(T473* C,T0* a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473put_integer(T473* C,T2 a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473put_line(T473* C,T0* a1);
/*KL_TEXT_OUTPUT_FILE*/
void r473old_make(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473open_write(T473* C);
/*KL_TEXT_OUTPUT_FILE*/
void r473write_buffer(T473* C);
extern T0*oBC646name;
/*KL_STRING_INPUT_STREAM*/
T2 r646read_to_string(T646* C,T0* a1,T2 a2,T2 a3);
/*KL_STRING_INPUT_STREAM*/
void r646read_character(T646* C);
/*KL_STRING_INPUT_STREAM*/
void r646make(T646* C,T0* a1);
/*KL_STRING_INPUT_STREAM*/
T2 r646read_to_buffer(T646* C,T0* a1,T2 a2,T2 a3);
/*ET_XACE_ISE_GENERATOR*/
void r141print_cluster(T141* C,T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
T6 r141print_cluster_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_ISE_GENERATOR*/
T0* r141replace_all_characters(T0* a1,T3 a2,T3 a3);
/*ET_XACE_ISE_GENERATOR*/
void r141print_c_compiler_options_and_include_directories(T141* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_ISE_GENERATOR*/
T0* r141clone(T0* a1);
/*ET_XACE_ISE_GENERATOR*/
T6 r141is_lace_keyword(T0* a1);
/*ET_XACE_ISE_GENERATOR*/
T6 r141is_windows(T141* C);
/*ET_XACE_ISE_GENERATOR*/
void r141print_ace_file(T141* C,T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
void r141make(T141* C,T0* a1,T0* a2);
extern T0*oBC14operating_system;
/*ET_XACE_ISE_GENERATOR*/
void r141print_clusters(T141* C,T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
void r141print_assemblies(T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
T6 r141print_class_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_ISE_GENERATOR*/
void r141print_precompile_ace_file(T141* C,T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
void r141print_escaped_name(T0* a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
void r141print_options(T0* a1,T2 a2,T0* a3);
extern T0*oBC141lace_keywords;
/*ET_XACE_ISE_GENERATOR*/
void r141print_indentation(T2 a1,T0* a2);
/*ET_XACE_ISE_GENERATOR*/
void r141print_link_libraries(T141* C,T0* a1,T0* a2);
/*ET_XACE_ASSEMBLY*/
void r514make(T514* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
/*ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r562arguments(void);
/*ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING*/
void r562make(T562* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r562message(T562* C,T0* a1);
/*ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING*/
T0* r562default_message(T562* C);
/*XM_COMMENT*/
void r764make_last_in_document(T764* C,T0* a1,T0* a2);
/*XM_COMMENT*/
void r764make_last(T764* C,T0* a1,T0* a2);
/*GEXACE_VALIDATE_COMMAND*/
void r157make(T157* C,T0* a1,T0* a2);
/*GEXACE_VALIDATE_COMMAND*/
void r157execute(T157* C);
/*ET_XACE_UNKNOWN_OPTION_NAME_WARNING*/
T0* r554arguments(void);
/*ET_XACE_UNKNOWN_OPTION_NAME_WARNING*/
void r554make(T554* C,T0* a1,T0* a2);
/*ET_XACE_UNKNOWN_OPTION_NAME_WARNING*/
T0* r554message(T554* C,T0* a1);
/*ET_XACE_UNKNOWN_OPTION_NAME_WARNING*/
T0* r554default_message(T554* C);
/*UT_USAGE_MESSAGE*/
T0* r107arguments(void);
/*UT_USAGE_MESSAGE*/
void r107make(T107* C,T0* a1);
/*UT_USAGE_MESSAGE*/
T0* r107message(T107* C,T0* a1);
/*UT_USAGE_MESSAGE*/
T0* r107default_message(T107* C);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r508clone(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r508pathname(T0* a1,T0* a2);
/*XM_EIFFEL_PARSER_NAME*/
void r631make_no_namespaces(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
void r631make_namespaces(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631last(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r631is_equal(T631* C,T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631item(T631* C,T2 a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631clone(T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T2 r631hash_code(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r631can_force_last(T631* C,T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T6 r631same_string(T0* a1,T0* a2);
/*XM_EIFFEL_PARSER_NAME*/
void r631force_last(T631* C,T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631ns_prefix(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631local_part(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r631is_namespace_name(T631* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r631new_string_bilinked_list(void);
/*ET_XACE_FEATURE_OPTIONS*/
void r388make(T388* C,T0* a1,T0* a2);
/*ET_XACE_LIBRARY*/
void r222merge_libraries(T222* C,T0* a1,T0* a2);
/*ET_XACE_LIBRARY*/
void r222mount_libraries(T222* C);
/*ET_XACE_LIBRARY*/
void r222set_library_prefix(T222* C,T0* a1);
/*ET_XACE_LIBRARY*/
void r222merge_externals(T222* C,T0* a1);
/*ET_XACE_LIBRARY*/
void r222set_clusters(T222* C,T0* a1);
/*ET_XACE_SE_GENERATOR*/
void r115print_cluster(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115generate_library(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_loadpath_clusters(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
T6 r115print_cluster_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_SE_GENERATOR*/
void r115print_loadpath_cluster(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_ace_file(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115generate_cecil_file(T115* C,T0* a1);
/*ET_XACE_SE_GENERATOR*/
void r115print_c_compiler_options(T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115make(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_clusters(T115* C,T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_generate(T0* a1,T2 a2,T0* a3);
/*ET_XACE_SE_GENERATOR*/
T6 r115print_class_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_SE_GENERATOR*/
void r115print_escaped_name(T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_SE_GENERATOR*/
void r115print_indentation(T2 a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_link_libraries(T0* a1,T0* a2);
/*ET_XACE_SE_GENERATOR*/
void r115print_include_directories(T0* a1,T0* a2);
/*XM_CHARACTER_DATA*/
void r735make_last(T735* C,T0* a1,T0* a2);
/*KL_NULL_TEXT_OUTPUT_STREAM*/
void r180put_integer(T2 a1);
/*KL_NULL_TEXT_OUTPUT_STREAM*/
void r180put_line(T0* a1);
/*UT_CANNOT_WRITE_TO_FILE_ERROR*/
T0* r553arguments(void);
/*UT_CANNOT_WRITE_TO_FILE_ERROR*/
void r553make(T553* C,T0* a1);
/*UT_CANNOT_WRITE_TO_FILE_ERROR*/
T0* r553message(T553* C,T0* a1);
/*UT_CANNOT_WRITE_TO_FILE_ERROR*/
T0* r553default_message(T553* C);
/*XM_NAMESPACE_RESOLVER*/
void r414on_start_tag_finish(T414* C);
/*XM_NAMESPACE_RESOLVER*/
void r414on_delayed_attributes(T414* C);
/*XM_NAMESPACE_RESOLVER*/
void r414on_finish(T414* C);
/*XM_NAMESPACE_RESOLVER*/
void r414on_content(T414* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r414make_null(T414* C);
/*XM_NAMESPACE_RESOLVER*/
T0* r414clone(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r414on_start(T414* C);
/*XM_NAMESPACE_RESOLVER*/
T6 r414is_local_part(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
T6 r414is_xmlns(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r414on_processing_instruction(T414* C,T0* a1,T0* a2);
/*XM_NAMESPACE_RESOLVER*/
T0* r414new_string_queue(void);
/*XM_NAMESPACE_RESOLVER*/
void r414on_start_tag(T414* C,T0* a1,T0* a2,T0* a3);
/*XM_NAMESPACE_RESOLVER*/
T6 r414has_prefix(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r414on_comment(T414* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r414on_end_tag(T414* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC109xmlns_namespace;
extern T0*oBC109xml_prefix;
/*XM_NAMESPACE_RESOLVER*/
void r414attributes_make(T414* C);
extern T0*oBC109xmlns;
/*XM_NAMESPACE_RESOLVER*/
void r414on_attribute(T414* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_NAMESPACE_RESOLVER*/
void r414_234Pon_start_tag_finish(T414* C);
extern T0*oBC109default_namespace;
/*XM_NAMESPACE_RESOLVER*/
void r414on_error(T414* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
T6 r414same_string(T0* a1,T0* a2);
/*XM_NAMESPACE_RESOLVER*/
void r414attributes_remove(T414* C);
/*XM_NAMESPACE_RESOLVER*/
void r414attributes_force(T414* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC109xml_prefix_namespace;
/*XM_NAMESPACE_RESOLVER*/
void r414on_xml_declaration(T414* C,T0* a1,T0* a2,T6 a3);
/*XM_NAMESPACE_RESOLVER*/
void r414_234Pon_end_tag(T414* C,T0* a1,T0* a2,T0* a3);
/*XM_NAMESPACE_RESOLVER*/
T6 r414is_xml(T0* a1);
/*XM_EIFFEL_CHARACTER_ENTITY*/
void r470from_hexadecimal(T470* C,T0* a1);
extern T0*oBC86utf8;
/*XM_EIFFEL_CHARACTER_ENTITY*/
T0* r470to_utf8(T470* C);
/*XM_EIFFEL_CHARACTER_ENTITY*/
T6 r470is_valid(T470* C);
/*XM_EIFFEL_CHARACTER_ENTITY*/
void r470from_decimal(T470* C,T0* a1);
extern T0*oBC80unicode;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r720new_string_string_table(void);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T6 r720shallow_has(T720* C,T0* a1);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
void r720make(T720* C);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r720resolve(T720* C,T0* a1);
extern T0*oBC720default_pseudo_prefix;
extern int fBC720default_pseudo_prefix;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r720default_pseudo_prefix(void);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T6 r720has(T720* C,T0* a1);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r720resolve_default(T720* C);
extern T0*oBC720default_namespace;
extern int fBC720default_namespace;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r720default_namespace(void);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
void r720pop(T720* C);
/*ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR*/
T0* r548arguments(void);
/*ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR*/
void r548make(T548* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR*/
T0* r548message(T548* C,T0* a1);
/*ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR*/
T0* r548default_message(T548* C);
/*ET_XACE_INVALID_EXPRESSION_ERROR*/
T0* r557arguments(void);
/*ET_XACE_INVALID_EXPRESSION_ERROR*/
void r557make(T557* C,T0* a1,T0* a2);
/*ET_XACE_INVALID_EXPRESSION_ERROR*/
T0* r557message(T557* C,T0* a1);
/*ET_XACE_INVALID_EXPRESSION_ERROR*/
T0* r557default_message(T557* C);
/*ET_XACE_VALIDATOR*/
void r236validate_named_cluster(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_root(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_library(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_external(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_feature(T236* C,T0* a1,T0* a2);
extern T0*oBC36uc_exclude;
/*ET_XACE_VALIDATOR*/
void r236validate_mount(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_system_doc(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_cluster(T236* C,T0* a1,T0* a2);
extern T0*oBC36uc_description;
/*ET_XACE_VALIDATOR*/
void r236validate_system(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_export(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_exclude(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_library_doc(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_option(T236* C,T0* a1,T0* a2);
/*ET_XACE_VALIDATOR*/
void r236validate_class(T236* C,T0* a1,T0* a2);
/*ET_XACE_MISSING_ATTRIBUTE_ERROR*/
T0* r552arguments(void);
/*ET_XACE_MISSING_ATTRIBUTE_ERROR*/
void r552make(T552* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_MISSING_ATTRIBUTE_ERROR*/
T0* r552message(T552* C,T0* a1);
/*ET_XACE_MISSING_ATTRIBUTE_ERROR*/
T0* r552default_message(T552* C);
/*ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR*/
T0* r564arguments(void);
/*ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR*/
void r564make(T564* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR*/
T0* r564message(T564* C,T0* a1);
/*ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR*/
T0* r564default_message(T564* C);
/*ET_XACE_NOT_XACE_FILE_ERROR*/
T0* r559arguments(void);
/*ET_XACE_NOT_XACE_FILE_ERROR*/
void r559make(T559* C,T0* a1);
/*ET_XACE_NOT_XACE_FILE_ERROR*/
T0* r559message(T559* C,T0* a1);
/*ET_XACE_NOT_XACE_FILE_ERROR*/
T0* r559default_message(T559* C);
/*UT_TEMPLATE_EXPANDER*/
T0* r406expand_from_values(T0* a1,T0* a2);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_obsolete_exclude_element_warning(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_non_empty_attribute_expected_error(T34* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_missing_element_error(T34* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34_37Preport_error_message(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34enable_verbose(T34* C);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_element_obsoleted_by_element_warning(T34* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_missing_attribute_error(T34* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC38null_output_stream;
extern int fBC38null_output_stream;
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
T0* r34null_output_stream(void);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_cannot_write_file_error(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_unknown_option_warning(T34* C,T0* a1,T0* a2);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_warning_message(T34* C,T0* a1);
extern T0*oBC39std;
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34make(T34* C);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_cannot_read_file_error(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_parser_error(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
T0* r34message(T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_invalid_expression_error(T34* C,T0* a1,T0* a2);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_positive_integer_expected_error(T34* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_not_xace_file_error(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_wrong_root_element_error(T34* C,T0* a1,T0* a2);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_unknown_element_error(T34* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_attribute_obsoleted_by_element_warning(T34* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_multiple_library_prefix_error(T34* C,T0* a1,T0* a2);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_wrong_attribute_value_error(T34* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_obsolete_cluster_element_warning(T34* C,T0* a1);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_boolean_expected_error(T34* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34make_standard(T34* C);
/*ET_XACE_DEFAULT_ERROR_HANDLER*/
void r34report_error_message(T34* C,T0* a1);
/*YY_BUFFER*/
void r463set_position(T463* C,T2 a1,T2 a2,T2 a3);
/*YY_BUFFER*/
T0* r463name(void);
/*YY_BUFFER*/
void r463make(T463* C,T0* a1);
/*YY_BUFFER*/
void r463make_from_buffer(T463* C,T0* a1);
/*YY_BUFFER*/
T0* r463new_default_buffer(T2 a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611set_enumeration_list(T611* C,T0* a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
T6 r611is_value_required(T611* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611set_enumeration(T611* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611set_default_value(T611* C,T0* a1);
extern T0*oBC611default_enumeration_list;
extern int fBC611default_enumeration_list;
/*XM_DTD_ATTRIBUTE_CONTENT*/
T0* r611default_enumeration_list(void);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611make(T611* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611copy_default(T611* C,T0* a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r611set_value_fixed(T611* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T6 r415is_correct(T415* C);
/*XM_EIFFEL_PARSER*/
void r415yy_do_action(T415* C,T2 a1);
/*XM_EIFFEL_PARSER*/
T2 r415maximum_item_code(T0* a1);
/*XM_EIFFEL_PARSER*/
void r415on_end_tag(T415* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC415yytable_template;
extern int fBC415yytable_template;
/*XM_EIFFEL_PARSER*/
T0* r415yytable_template(void);
/*XM_EIFFEL_PARSER*/
void r415reset_error_state(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415defined_entity_referenced(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415on_attribute(T415* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_EIFFEL_PARSER*/
T0* r415new_entities_table(void);
/*XM_EIFFEL_PARSER*/
void r415on_start_tag_finish(T415* C);
/*XM_EIFFEL_PARSER*/
T6 r415is_local_part(T0* a1);
/*XM_EIFFEL_PARSER*/
void r415when_external_dtd(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415yy_do_error_action(T415* C,T2 a1);
/*XM_EIFFEL_PARSER*/
T6 r415is_string_mode_latin1(T415* C);
/*XM_EIFFEL_PARSER*/
void r415parse(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415new_dtd_external_id(void);
/*XM_EIFFEL_PARSER*/
void r415parse_with_events(T415* C);
/*XM_EIFFEL_PARSER*/
void r415when_entity_declared(T415* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415on_error(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415new_literal_entity(T0* a1);
extern T0*oBC415yytranslate_template;
extern int fBC415yytranslate_template;
/*XM_EIFFEL_PARSER*/
T0* r415yytranslate_template(void);
/*XM_EIFFEL_PARSER*/
void r415process_pe_entity(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415new_unicode_string_from_utf8(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415positions(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415new_name_set(void);
/*XM_EIFFEL_PARSER*/
void r415yy_push_last_value(T415* C,T2 a1);
/*XM_EIFFEL_PARSER*/
T0* r415new_unicode_string_empty(void);
/*XM_EIFFEL_PARSER*/
void r415yy_push_error_value(T415* C);
/*XM_EIFFEL_PARSER*/
void r415on_start(T415* C);
/*XM_EIFFEL_PARSER*/
T6 r415syntax_error(T415* C);
extern T0*oBC415yyr1_template;
extern int fBC415yyr1_template;
/*XM_EIFFEL_PARSER*/
T0* r415yyr1_template(void);
/*XM_EIFFEL_PARSER*/
T0* r415new_external_entity(T415* C,T0* a1);
extern T0*oBC415yytypes1_template;
extern int fBC415yytypes1_template;
/*XM_EIFFEL_PARSER*/
T0* r415yytypes1_template(void);
/*XM_EIFFEL_PARSER*/
T0* r415onstring_ascii(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415position(T415* C);
/*XM_EIFFEL_PARSER*/
void r415on_finish(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415new_dtd_attribute_content(void);
/*XM_EIFFEL_PARSER*/
void r415read_token(T415* C);
/*XM_EIFFEL_PARSER*/
T6 r415is_string_mode_unicode(T415* C);
/*XM_EIFFEL_PARSER*/
void r415on_attribute_declarations(T415* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415yy_init_value_stacks(T415* C);
extern T0*oBC415yypgoto_template;
extern int fBC415yypgoto_template;
/*XM_EIFFEL_PARSER*/
T0* r415yypgoto_template(void);
/*XM_EIFFEL_PARSER*/
void r415process_entity_scanner(T415* C,T0* a1);
extern T0*oBC415yytypes2_template;
extern int fBC415yytypes2_template;
/*XM_EIFFEL_PARSER*/
T0* r415yytypes2_template(void);
/*XM_EIFFEL_PARSER*/
void r415namespace_force_last(T415* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415when_pe_entity_declared(T415* C,T0* a1,T0* a2);
extern T0*oBC84integer_;
/*XM_EIFFEL_PARSER*/
T0* r415shared_empty_string(T415* C);
/*XM_EIFFEL_PARSER*/
void r415set_element_repetition(T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415on_doctype(T415* C,T0* a1,T0* a2,T6 a3);
/*XM_EIFFEL_PARSER*/
T0* r415clone(T0* a1);
/*XM_EIFFEL_PARSER*/
void r415make_scanner(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415new_namespace_name(T415* C);
/*XM_EIFFEL_PARSER*/
void r415reset(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415new_string_bilinked_list(void);
extern T0*oBC416null_resolver;
/*XM_EIFFEL_PARSER*/
void r415yy_clear_value_stacks(T415* C);
/*XM_EIFFEL_PARSER*/
void r415resolve_external_id(T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415parse_from_stream(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415yy_build_parser_tables(T415* C);
/*XM_EIFFEL_PARSER*/
void r415force_error(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415on_start_tag(T415* C,T0* a1,T0* a2,T0* a3);
/*XM_EIFFEL_PARSER*/
T0* r415element_name(T0* a1);
/*XM_EIFFEL_PARSER*/
void r415on_processing_instruction(T415* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r415apply_encoding(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415external_entity_to_string(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415setup_error_state(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415last_error_extended_description(T415* C);
/*XM_EIFFEL_PARSER*/
void r415report_error(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r415entity_referenced_in_entity_value(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415on_content(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415make_parser(T415* C);
extern T0*oBC415yydefact_template;
extern int fBC415yydefact_template;
/*XM_EIFFEL_PARSER*/
T0* r415yydefact_template(void);
extern T0*oBC416shared_empty_string_uc;
extern int fBC416shared_empty_string_uc;
/*XM_EIFFEL_PARSER*/
T0* r415shared_empty_string_uc(void);
/*XM_EIFFEL_PARSER*/
T6 r415is_string_mode_ascii(T415* C);
extern T0*oBC415yycheck_template;
extern int fBC415yycheck_template;
/*XM_EIFFEL_PARSER*/
T0* r415yycheck_template(void);
/*XM_EIFFEL_PARSER*/
T0* r415new_dtd_attribute_content_list(void);
/*XM_EIFFEL_PARSER*/
void r415make(T415* C);
/*XM_EIFFEL_PARSER*/
void r415on_xml_declaration(T415* C,T0* a1,T0* a2,T6 a3);
/*XM_EIFFEL_PARSER*/
T0* r415new_positions(T415* C);
/*XM_EIFFEL_PARSER*/
T0* r415yyfixed_array(T0* a1);
extern T0*oBC415yydefgoto_template;
extern int fBC415yydefgoto_template;
/*XM_EIFFEL_PARSER*/
T0* r415yydefgoto_template(void);
/*XM_EIFFEL_PARSER*/
void r415yy_pop_last_value(T415* C,T2 a1);
/*XM_EIFFEL_PARSER*/
void r415process_entity(T415* C,T0* a1);
extern T0*oBC415yypact_template;
extern int fBC415yypact_template;
/*XM_EIFFEL_PARSER*/
T0* r415yypact_template(void);
/*XM_EIFFEL_PARSER*/
void r415on_comment(T415* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r415process_attribute_entity(T415* C,T0* a1);
extern T0*oBC416shared_empty_string_string;
extern int fBC416shared_empty_string_string;
/*XM_EIFFEL_PARSER*/
T0* r415shared_empty_string_string(void);
/*XM_EIFFEL_PARSER*/
T0* r415onstring_utf8(T415* C,T0* a1);
/*XM_DOCUMENT*/
void r221set_last_cell(T221* C,T0* a1);
/*XM_DOCUMENT*/
T6 r221valid_cursor(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221wipe_out(T221* C);
/*XM_DOCUMENT*/
void r221remove_first(T221* C);
extern T0*oBC215default_ns;
extern int fBC215default_ns;
/*XM_DOCUMENT*/
T0* r221default_ns(void);
/*XM_DOCUMENT*/
T0* r221cursor_item(T0* a1);
/*XM_DOCUMENT*/
T6 r221cursor_is_last(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221remove_traversing_cursor(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221cursor_go_after(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221move_all_cursors_after(T221* C);
/*XM_DOCUMENT*/
void r221add_traversing_cursor(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221remove_previous_root_element(T221* C);
/*XM_DOCUMENT*/
void r221before_addition(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221remove_last(T221* C);
/*XM_DOCUMENT*/
T6 r221cursor_after(T0* a1);
/*XM_DOCUMENT*/
void r221make_with_root_named(T221* C,T0* a1,T0* a2);
/*XM_DOCUMENT*/
void r221equality_delete(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221cursor_forth(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221move_last_cursors_after(T221* C);
/*XM_DOCUMENT*/
void r221cursor_start(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221_63Pforce_last(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221force_last(T221* C,T0* a1);
/*XM_DOCUMENT*/
T0* r221new_cursor(T221* C);
/*XM_DOCUMENT*/
T6 r221cursor_is_first(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221list_make(T221* C);
/*XM_DOCUMENT*/
void r221remove_at_cursor(T221* C,T0* a1);
/*XM_DOCUMENT*/
void r221move_all_cursors(T221* C,T0* a1,T0* a2);
/*XM_DOCUMENT*/
T6 r221cursor_off(T0* a1);
/*XM_DOCUMENT*/
void r221set_root_element(T221* C,T0* a1);
/*ET_XACE_VE_GENERATOR*/
void r143print_cluster(T143* C,T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
T6 r143is_escaped(T2 a1);
/*ET_XACE_VE_GENERATOR*/
void r143print_xml_library_file(T143* C,T0* a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_mounted_libraries(T143* C,T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143print_escaped_character(T2 a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_feature_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143make(T143* C,T0* a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_clusters(T143* C,T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143print_console_application_option(T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143print_escaped_string(T0* a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_class_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143print_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE_GENERATOR*/
void r143print_indentation(T2 a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_xml_system_file(T143* C,T0* a1,T0* a2);
/*ET_XACE_VE_GENERATOR*/
void r143print_quote_escaped_string(T0* a1,T0* a2);
/*UT_CANNOT_READ_FILE_ERROR*/
T0* r555arguments(void);
/*UT_CANNOT_READ_FILE_ERROR*/
void r555make(T555* C,T0* a1);
/*UT_CANNOT_READ_FILE_ERROR*/
T0* r555message(T555* C,T0* a1);
/*UT_CANNOT_READ_FILE_ERROR*/
T0* r555default_message(T555* C);
/*ET_XACE_CLUSTERS*/
void r257merge_assemblies(T257* C,T0* a1);
/*ET_XACE_CLUSTERS*/
void r257make_empty(T257* C);
/*ET_XACE_CLUSTERS*/
void r257merge_libraries(T257* C,T0* a1,T0* a2);
/*ET_XACE_CLUSTERS*/
void r257make(T257* C,T0* a1);
/*ET_XACE_CLUSTERS*/
void r257set_parent(T257* C,T0* a1);
/*ET_XACE_CLUSTERS*/
void r257set_mounted(T257* C,T6 a1);
/*ET_XACE_CLUSTERS*/
void r257mount_libraries(T257* C,T0* a1,T0* a2);
/*ET_XACE_CLUSTERS*/
void r257set_library_prefix(T257* C,T0* a1);
/*ET_XACE_CLUSTERS*/
void r257merge_externals(T257* C,T0* a1);
/*ET_XACE_CLUSTERS*/
void r257merge_exported_features(T257* C,T0* a1);
/*ET_XACE_AST_FACTORY*/
T0* r288new_cluster(T0* a1,T0* a2);
/*ET_XACE_AST_FACTORY*/
T0* r288new_mounted_library(T0* a1,T0* a2,T0* a3);
/*ET_XACE_AST_FACTORY*/
T0* r288new_mounted_libraries(void);
/*ET_XACE_AST_FACTORY*/
T0* r288new_options(void);
/*ET_XACE_AST_FACTORY*/
T0* r288new_system(T0* a1);
/*ET_XACE_AST_FACTORY*/
T0* r288new_feature_options(T0* a1,T0* a2);
/*ET_XACE_AST_FACTORY*/
T0* r288new_clusters(T0* a1);
/*ET_XACE_AST_FACTORY*/
T0* r288new_class_options(T0* a1,T0* a2);
/*ET_XACE_AST_FACTORY*/
T0* r288new_library(void);
/*ET_XACE_CLASS_OPTIONS*/
void r314put_feature_option(T314* C,T0* a1);
/*ET_XACE_CLASS_OPTIONS*/
void r314make(T314* C,T0* a1,T0* a2);
/*ET_XACE_WRONG_ROOT_ELEMENT_ERROR*/
T0* r560arguments(void);
/*ET_XACE_WRONG_ROOT_ELEMENT_ERROR*/
void r560make(T560* C,T0* a1,T0* a2);
/*ET_XACE_WRONG_ROOT_ELEMENT_ERROR*/
T0* r560message(T560* C,T0* a1);
/*ET_XACE_WRONG_ROOT_ELEMENT_ERROR*/
T0* r560default_message(T560* C);
/*UC_STRING*/
void r83copy(T83* C,T0* a1);
/*UC_STRING*/
T0* r83substring(T83* C,T2 a1,T2 a2);
/*UC_STRING*/
T2 r83occurrences(T83* C,T3 a1);
/*UC_STRING*/
void r83reset_byte_index_cache(T83* C);
/*UC_STRING*/
void r83wipe_out(T83* C);
/*UC_STRING*/
T6 r83same_unicode_string(T83* C,T0* a1);
/*UC_STRING*/
T2 r83item_code(T83* C,T2 a1);
/*UC_STRING*/
T3 r83character_item_at_byte_index(T83* C,T2 a1);
/*UC_STRING*/
void r83_7Pmake(T83* C,T2 a1);
/*UC_STRING*/
void r83put(T83* C,T3 a1,T2 a2);
/*UC_STRING*/
void r83remove_between(T83* C,T2 a1,T2 a2);
/*UC_STRING*/
T6 r83is_equal(T83* C,T0* a1);
/*UC_STRING*/
T2 r83index_of_code(T83* C,T2 a1,T2 a2);
/*UC_STRING*/
T3 r83item(T83* C,T2 a1);
/*UC_STRING*/
void r83resize_byte_storage(T83* C,T2 a1);
/*UC_STRING*/
T6 r83valid_index(T83* C,T2 a1);
/*UC_STRING*/
void r83append(T83* C,T0* a1);
/*UC_STRING*/
T6 r83se_assigned_from(T0* a1);
/*UC_STRING*/
T2 r83byte_index(T83* C,T2 a1);
/*UC_STRING*/
T0* r83clone(T0* a1);
/*UC_STRING*/
void r83make_from_string(T83* C,T0* a1);
/*UC_STRING*/
T6 r83has_substring(T83* C,T0* a1);
/*UC_STRING*/
T2 r83index_of(T83* C,T3 a1,T2 a2);
/*UC_STRING*/
void r83move_bytes_right(T83* C,T2 a1,T2 a2);
/*UC_STRING*/
void r83set_count(T83* C,T2 a1);
/*UC_STRING*/
T2 r83next_byte_index(T83* C,T2 a1);
/*UC_STRING*/
T6 r83same_type(T83* C,T0* a1);
/*UC_STRING*/
void r83remove_tail(T83* C,T2 a1);
extern T0*oBC83dummy_uc_string;
extern int fBC83dummy_uc_string;
/*UC_STRING*/
T0* r83dummy_uc_string(void);
/*UC_STRING*/
void r83make(T83* C,T2 a1);
/*UC_STRING*/
void r83append_string(T83* C,T0* a1);
/*UC_STRING*/
T2 r83code_occurrences(T83* C,T2 a1);
/*UC_STRING*/
void r83make_filled(T83* C,T3 a1,T2 a2);
/*UC_STRING*/
void r83remove(T83* C,T2 a1);
/*UC_STRING*/
void r83append_substring(T83* C,T0* a1,T2 a2,T2 a3);
/*UC_STRING*/
T2 r83item_code_at_byte_index(T83* C,T2 a1);
/*UC_STRING*/
T0* r83string(T83* C);
extern T0*oBC82platform;
/*UC_STRING*/
void r83extend(T83* C,T3 a1);
/*UC_STRING*/
T2 r83hash_code(T83* C);
/*UC_STRING*/
T0* r83prefixed_string(T83* C,T0* a1);
/*UC_STRING*/
T6 r83conforms_to(T83* C,T0* a1);
/*UC_STRING*/
T6 r83has(T83* C,T3 a1);
/*UC_STRING*/
void r83keep_head(T83* C,T2 a1);
/*UC_STRING*/
T2 r83to_integer(T83* C);
/*UC_STRING*/
T0* r83new_empty_string(T2 a1);
/*UC_STRING*/
void r83append_character(T83* C,T3 a1);
/*UC_STRING*/
void r83make_from_substring(T83* C,T0* a1,T2 a2,T2 a3);
/*UC_STRING*/
void r83put_code_at_byte_index(T83* C,T2 a1,T2 a2,T2 a3);
/*UC_STRING*/
void r83fill_with(T83* C,T3 a1);
/*UC_STRING*/
void r83put_character_at_byte_index(T83* C,T3 a1,T2 a2,T2 a3);
/*UC_STRING*/
void r83_7Pappend_string(T83* C,T0* a1);
/*UC_STRING*/
void r83resize(T83* C,T2 a1);
/*UC_STRING*/
void r83put_substring_at_byte_index(T83* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*UC_STRING*/
T2 r83substring_index(T83* C,T0* a1,T2 a2);
/*UC_STRING*/
void r83from_external_copy(T83* C,T8 a1);
/*UC_STRING*/
T3 r83byte_item(T83* C,T2 a1);
/*UC_STRING*/
void r83move_bytes_left(T83* C,T2 a1,T2 a2);
/*UC_STRING*/
T8 r83to_external(T83* C);
/*UC_STRING*/
T6 r83same_string(T83* C,T0* a1);
/*UC_STRING*/
T0* r83twin(T83* C);
/*UC_STRING*/
T0* r83to_utf8(T83* C);
/*UC_STRING*/
T0* r83_ix_43(T83* C,T0* a1);
/*UC_STRING*/
T2 r83_7Phash_code(T83* C);
/*UC_STRING*/
T2 r83unicode_substring_index(T83* C,T0* a1,T2 a2);
/*UC_STRING*/
void r83swap(T83* C,T2 a1,T2 a2);
/*GEXACE_SYSTEM_COMMAND*/
void r92execute_generators(T92* C,T0* a1);
/*GEXACE_SYSTEM_COMMAND*/
void r92make(T92* C,T0* a1,T0* a2);
/*GEXACE_SYSTEM_COMMAND*/
void r92execute(T92* C);
/*XM_PROCESSING_INSTRUCTION*/
void r760make_last_in_document(T760* C,T0* a1,T0* a2,T0* a3);
/*XM_PROCESSING_INSTRUCTION*/
void r760make_last(T760* C,T0* a1,T0* a2,T0* a3);
/*XM_EIFFEL_DECLARATION*/
void r597process(T597* C,T0* a1);
/*XM_EIFFEL_DECLARATION*/
void r597make(T597* C);
/*KL_STDOUT_FILE*/
void r159make(T159* C);
/*KL_STDOUT_FILE*/
void r159old_put_string(T159* C,T0* a1);
/*KL_STDOUT_FILE*/
void r159old_put_character(T159* C,T3 a1);
/*KL_STDOUT_FILE*/
void r159put_integer(T159* C,T2 a1);
/*KL_STDOUT_FILE*/
void r159put_line(T159* C,T0* a1);
/*KL_STDOUT_FILE*/
void r159old_make(T159* C);
/*KL_STDOUT_FILE*/
void r159write_buffer(T159* C);
/*KL_STDOUT_FILE*/
void r159put_string(T159* C,T0* a1);
extern T0*oBC13unix_file_system;
/*ET_XACE_CLUSTER*/
T6 r260is_fully_abstract(T260* C);
/*ET_XACE_CLUSTER*/
T0* r260prefixed_name(T260* C);
/*ET_XACE_CLUSTER*/
void r260set_subclusters(T260* C,T0* a1);
extern T0*oBC13file_system;
extern int fBC13file_system;
/*ET_XACE_CLUSTER*/
T0* r260file_system(void);
/*ET_XACE_CLUSTER*/
void r260merge_assemblies(T260* C,T0* a1);
/*ET_XACE_CLUSTER*/
void r260merge_libraries(T260* C,T0* a1,T0* a2);
/*ET_XACE_CLUSTER*/
T0* r260full_pathname(T260* C);
/*ET_XACE_CLUSTER*/
void r260make(T260* C,T0* a1,T0* a2);
/*ET_XACE_CLUSTER*/
void r260set_mounted(T260* C,T6 a1);
/*ET_XACE_CLUSTER*/
void r260put_class_option(T260* C,T0* a1);
/*ET_XACE_CLUSTER*/
void r260set_library_prefix(T260* C,T0* a1);
extern T0*oBC13windows_file_system;
/*ET_XACE_CLUSTER*/
void r260merge_externals(T260* C,T0* a1);
/*ET_XACE_CLUSTER*/
void r260merge_exported_features(T260* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429normalized_newline(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r429is_literal(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r429start_condition(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429set_input_from_resolver(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_chk_template_1(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_chk_template_2(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429set_input_buffer(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429text_substring(T429* C,T2 a1,T2 a2);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_ec_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_execute_action(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_def_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
T3 r429text_item(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r429end_of_file(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429system_literal_text(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_load_input_buffer(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429apply_input_buffer(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429make_with_buffer(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r429yy_null_trans_state(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429pop_start_condition(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r429is_valid_encoding(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_accept_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429read_token(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r429yy_previous_state(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_refill_input_buffer(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429push_start_condition_dtd_ignore(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429_430Pread_token(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_fixed_array(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_meta_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_base_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429set_input_stream(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429_431Preset(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r429text_count(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429new_file_buffer(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429make_scanner(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_initialize(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429reset(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429push_start_condition(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429text(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429close_input(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_nxt_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_set_line_column(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r429valid_start_condition(T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429make_literal(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429empty_buffer(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_nxt_template_1(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_nxt_template_2(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429yy_chk_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_set_content(T429* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429set_start_condition(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_execute_eof_action(T429* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r429_432P_431Preset(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r429error_position(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429yy_build_tables(T429* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r429make_external(T429* C,T0* a1,T0* a2);
/*XM_EIFFEL_ENTITY_DEF*/
void r429_433Pset_input_buffer(T429* C,T0* a1);
/*KL_STDERR_FILE*/
void r163make(T163* C);
/*KL_STDERR_FILE*/
void r163old_put_string(T0* a1);
/*KL_STDERR_FILE*/
void r163put_integer(T2 a1);
/*KL_STDERR_FILE*/
void r163put_line(T0* a1);
/*KL_STDERR_FILE*/
void r163put_string(T0* a1);
/*XM_DEFAULT_POSITION*/
T0* r574out(T574* C);
/*XM_DEFAULT_POSITION*/
void r574make(T574* C,T0* a1,T2 a2,T2 a3,T2 a4);
/*XM_EIFFEL_INPUT_STREAM*/
void r647make_from_stream(T647* C,T0* a1);
/*XM_EIFFEL_INPUT_STREAM*/
T0* r647name(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
T2 r647_203Pread_to_string(T647* C,T0* a1,T2 a2,T2 a3);
/*XM_EIFFEL_INPUT_STREAM*/
T2 r647read_to_string(T647* C,T0* a1,T2 a2,T2 a3);
/*XM_EIFFEL_INPUT_STREAM*/
T2 r647most_significant(T647* C,T3 a1,T3 a2);
/*XM_EIFFEL_INPUT_STREAM*/
T6 r647is_valid_encoding(T0* a1);
/*XM_EIFFEL_INPUT_STREAM*/
void r647noqueue_read_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
T0* r647clone(T0* a1);
/*XM_EIFFEL_INPUT_STREAM*/
void r647read_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
T6 r647is_open_read(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
void r647utf16_detect_read_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
T6 r647is_applicable_encoding(T647* C,T0* a1);
/*XM_EIFFEL_INPUT_STREAM*/
T2 r647least_significant(T647* C,T3 a1,T3 a2);
/*XM_EIFFEL_INPUT_STREAM*/
T2 r647read_to_buffer(T647* C,T0* a1,T2 a2,T2 a3);
/*XM_EIFFEL_INPUT_STREAM*/
T6 r647end_of_input(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
void r647append_character(T647* C,T2 a1);
/*XM_EIFFEL_INPUT_STREAM*/
void r647latin1_read_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
void r647utf16_read_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
T3 r647last_character(T647* C);
/*XM_EIFFEL_INPUT_STREAM*/
void r647read_string(T647* C,T2 a1);
extern T0*oBC85utf16;
extern T0*oBC647utf8_buffer;
/*XM_EIFFEL_INPUT_STREAM*/
void r647set_encoding(T647* C,T0* a1);
/*XM_ATTRIBUTE*/
void r307make_last(T307* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_EXPORTED_FEATURE*/
void r533make(T533* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_MOUNTED_LIBRARIES*/
T0* r256item(T256* C,T0* a1);
/*ET_XACE_MOUNTED_LIBRARIES*/
T0* r256clone(T0* a1);
/*ET_XACE_MOUNTED_LIBRARIES*/
void r256make_empty(T256* C);
/*ET_XACE_MOUNTED_LIBRARIES*/
void r256merge_libraries(T256* C,T0* a1,T0* a2);
/*ET_XACE_MOUNTED_LIBRARIES*/
void r256set_root(T256* C,T6 a1);
/*ET_XACE_MOUNTED_LIBRARIES*/
void r256mount_libraries(T256* C,T0* a1);
/*ET_XACE_MOUNTED_LIBRARIES*/
void r256merge_externals(T256* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r509clone(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r509pathname(T0* a1,T0* a2);
/*UC_UTF8_STRING*/
void r99copy(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T0* r99substring(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T2 r99occurrences(T99* C,T3 a1);
/*UC_UTF8_STRING*/
void r99reset_byte_index_cache(T99* C);
/*UC_UTF8_STRING*/
T2 r99shifted_byte_index(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r99wipe_out(T99* C);
/*UC_UTF8_STRING*/
T6 r99same_unicode_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r99item_code(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T3 r99character_item_at_byte_index(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99_7Pmake(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99put(T99* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r99remove_between(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T6 r99is_equal(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r99index_of_code(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T3 r99item(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99resize_byte_storage(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r99valid_index(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99append(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T6 r99se_assigned_from(T0* a1);
/*UC_UTF8_STRING*/
T2 r99byte_index(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T0* r99clone(T0* a1);
/*UC_UTF8_STRING*/
void r99make_from_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T6 r99has_substring(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r99index_of(T99* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r99move_bytes_right(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r99set_count(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T2 r99next_byte_index(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r99same_type(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T0* r99dummy_uc_string(void);
/*UC_UTF8_STRING*/
void r99remove_tail(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99make(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99append_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r99code_occurrences(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99make_filled(T99* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r99remove(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99append_substring(T99* C,T0* a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
T2 r99item_code_at_byte_index(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T0* r99string(T99* C);
/*UC_UTF8_STRING*/
void r99extend(T99* C,T3 a1);
/*UC_UTF8_STRING*/
T2 r99hash_code(T99* C);
/*UC_UTF8_STRING*/
T0* r99prefixed_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T6 r99conforms_to(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T6 r99has(T99* C,T3 a1);
/*UC_UTF8_STRING*/
void r99keep_head(T99* C,T2 a1);
/*UC_UTF8_STRING*/
T2 r99to_integer(T99* C);
/*UC_UTF8_STRING*/
T0* r99new_empty_string(T2 a1);
/*UC_UTF8_STRING*/
void r99append_character(T99* C,T3 a1);
/*UC_UTF8_STRING*/
void r99put_code_at_byte_index(T99* C,T2 a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r99make_from_substring(T99* C,T0* a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r99fill_with(T99* C,T3 a1);
/*UC_UTF8_STRING*/
void r99put_character_at_byte_index(T99* C,T3 a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r99_7Pappend_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
void r99resize(T99* C,T2 a1);
/*UC_UTF8_STRING*/
void r99put_substring_at_byte_index(T99* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*UC_UTF8_STRING*/
T2 r99substring_index(T99* C,T0* a1,T2 a2);
/*UC_UTF8_STRING*/
void r99append_utf8(T99* C,T0* a1);
/*UC_UTF8_STRING*/
void r99from_external_copy(T99* C,T8 a1);
/*UC_UTF8_STRING*/
void r99move_bytes_left(T99* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T8 r99to_external(T99* C);
/*UC_UTF8_STRING*/
T6 r99same_string(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T0* r99twin(T99* C);
/*UC_UTF8_STRING*/
T0* r99to_utf8(T99* C);
/*UC_UTF8_STRING*/
T0* r99_ix_43(T99* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r99unicode_substring_index(T99* C,T0* a1,T2 a2);
/*UC_UTF8_STRING*/
T2 r99_7Phash_code(T99* C);
/*UC_UTF8_STRING*/
void r99make_from_utf8(T99* C,T0* a1);
/*UC_UTF8_STRING*/
void r99swap(T99* C,T2 a1,T2 a2);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_429Preset(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718normalized_newline(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T6 r718is_literal(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r718start_condition(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718set_input_from_resolver(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718set_input_buffer(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718text_substring(T718* C,T2 a1,T2 a2);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_ec_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_execute_action(T718* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_431P_429Preset(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_def_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T3 r718text_item(T718* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T6 r718end_of_file(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718system_literal_text(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_load_input_buffer(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718apply_input_buffer(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718make_with_buffer(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r718yy_null_trans_state(T718* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718pop_start_condition(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_accept_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718read_token(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r718yy_previous_state(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_refill_input_buffer(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_fixed_array(T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_meta_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_base_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718set_input_stream(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r718text_count(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718new_file_buffer(T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718make_scanner(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_initialize(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718reset(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718push_start_condition(T718* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718text(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718make_def(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718reset_sent(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718close_input(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_nxt_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_set_line_column(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T6 r718valid_start_condition(T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718make_literal(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_432P_431P_429Preset(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718empty_buffer(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718yy_chk_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_429Pread_token(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_set_content(T718* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718set_start_condition(T718* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r718error_position(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718yy_build_tables(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_430P_429Pread_token(T718* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718make_external(T718* C,T0* a1,T0* a2);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r718_433Pset_input_buffer(T718* C,T0* a1);
/*XM_ELEMENT*/
void r213set_last_cell(T213* C,T0* a1);
/*XM_ELEMENT*/
T6 r213attribute_same_name(T0* a1,T0* a2);
/*XM_ELEMENT*/
T6 r213valid_cursor(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213wipe_out(T213* C);
/*XM_ELEMENT*/
void r213remove_first(T213* C);
/*XM_ELEMENT*/
T0* r213cursor_item(T0* a1);
/*XM_ELEMENT*/
void r213_63P_220Pforce_last(T213* C,T0* a1);
/*XM_ELEMENT*/
T6 r213cursor_is_last(T213* C,T0* a1);
/*XM_ELEMENT*/
T6 r213same_namespace(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213remove_traversing_cursor(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213make_root(T213* C,T0* a1,T0* a2,T0* a3);
/*XM_ELEMENT*/
void r213cursor_go_after(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213move_all_cursors_after(T213* C);
/*XM_ELEMENT*/
T6 r213has_attribute_by_name(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213add_traversing_cursor(T213* C,T0* a1);
/*XM_ELEMENT*/
T0* r213attribute_by_name(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213make(T213* C,T0* a1,T0* a2,T0* a3);
/*XM_ELEMENT*/
T0* r213parent_element(T213* C);
/*XM_ELEMENT*/
void r213before_addition(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213remove_last(T213* C);
/*XM_ELEMENT*/
T6 r213cursor_after(T0* a1);
/*XM_ELEMENT*/
void r213make_last(T213* C,T0* a1,T0* a2,T0* a3);
/*XM_ELEMENT*/
void r213equality_delete(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213cursor_forth(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213move_last_cursors_after(T213* C);
/*XM_ELEMENT*/
void r213cursor_start(T213* C,T0* a1);
/*XM_ELEMENT*/
T6 r213same_string(T0* a1,T0* a2);
/*XM_ELEMENT*/
void r213force_last(T213* C,T0* a1);
/*XM_ELEMENT*/
T0* r213new_cursor(T213* C);
/*XM_ELEMENT*/
T6 r213has_element_by_name(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213_220Pforce_last(T213* C,T0* a1);
/*XM_ELEMENT*/
T6 r213cursor_is_first(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213list_make(T213* C);
/*XM_ELEMENT*/
void r213remove_at_cursor(T213* C,T0* a1);
/*XM_ELEMENT*/
T0* r213element_by_name(T213* C,T0* a1);
/*XM_ELEMENT*/
void r213move_all_cursors(T213* C,T0* a1,T0* a2);
/*XM_ELEMENT*/
T6 r213cursor_off(T0* a1);
/*XM_ELEMENT*/
T6 r213named_same_name(T213* C,T0* a1,T0* a2);
/*ET_XACE_MOUNTED_LIBRARY*/
void r259make(T259* C,T0* a1,T0* a2,T0* a3);
/*ET_XACE_MOUNTED_LIBRARY*/
T0* r259twin(T259* C);
/*XM_NAMESPACE*/
T6 r308is_equal(T308* C,T0* a1);
/*XM_NAMESPACE*/
void r308make(T308* C,T0* a1,T0* a2);
/*XM_NAMESPACE*/
T2 r308hash_code(T308* C);
/*XM_NAMESPACE*/
T6 r308same_prefix(T308* C,T0* a1);
extern T0*oBC17command_arguments;
extern int fBC17command_arguments;
/*KL_ARGUMENTS*/
T0* r71command_arguments(void);
/*KL_ARGUMENTS*/
T0* r71argument(T2 a1);
/*ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR*/
T0* r558arguments(void);
/*ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR*/
void r558make(T558* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR*/
T0* r558message(T558* C,T0* a1);
/*ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR*/
T0* r558default_message(T558* C);
/*ET_XACE_VE41_GENERATOR*/
void r144print_cluster(T144* C,T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_esd_file(T144* C,T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144merge_interface_classes(T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
T0* r144clone(T0* a1);
/*ET_XACE_VE41_GENERATOR*/
void r144merge_callbacks(T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144make(T144* C,T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_clusters(T144* C,T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
T0* r144remove_all_characters(T0* a1,T3 a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_eld_file(T144* C,T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_callbacks(T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_escaped_name(T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_options(T0* a1,T2 a2,T0* a3);
/*ET_XACE_VE41_GENERATOR*/
void r144print_indentation(T2 a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_interface_classes(T0* a1,T0* a2);
/*ET_XACE_VE41_GENERATOR*/
void r144print_link_libraries(T0* a1,T0* a2);
/*ET_XACE_PREPROCESSOR*/
T6 r402is_expression_true(T402* C,T0* a1);
/*ET_XACE_PREPROCESSOR*/
T6 r402should_strip_element(T402* C,T0* a1,T0* a2);
extern T0*oBC403template_expander;
/*ET_XACE_PREPROCESSOR*/
void r402preprocess_element(T402* C,T0* a1,T0* a2);
/*ET_XACE_PREPROCESSOR*/
T6 r402is_valid_expression(T0* a1);
/*ET_XACE_PREPROCESSOR*/
void r402make(T402* C,T0* a1,T0* a2);
extern T0*oBC36uc_unless;
extern T0*oBC36uc_if;
/*ET_XACE_PREPROCESSOR*/
void r402expand_attribute_variables(T402* C,T0* a1);
/*KL_CHARACTER_BUFFER*/
T0* r469substring(T469* C,T2 a1,T2 a2);
/*KL_CHARACTER_BUFFER*/
void r469fill_from_string(T469* C,T0* a1,T2 a2);
/*KL_CHARACTER_BUFFER*/
T2 r469fill_from_stream(T469* C,T0* a1,T2 a2,T2 a3);
/*KL_CHARACTER_BUFFER*/
void r469move_left(T469* C,T2 a1,T2 a2,T2 a3);
/*KL_CHARACTER_BUFFER*/
void r469make(T469* C,T2 a1);
/*KL_CHARACTER_BUFFER*/
void r469resize(T469* C,T2 a1);
/*UC_UTF16_ROUTINES*/
T6 r661is_endian_detection_character_least_first(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T6 r661is_high_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T6 r661is_low_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T6 r661is_endian_detection_character_most_first(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T6 r661is_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T2 r661least_10_bits(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T2 r661surrogate(T2 a1,T2 a2);
extern T0*oBC158error;
extern int fBC158error;
/*KL_STANDARD_FILES*/
T0* r158error(void);
extern T0*oBC158output;
extern int fBC158output;
/*KL_STANDARD_FILES*/
T0* r158output(void);
extern T2 oBC480maximum_character_code;
extern int fBC480maximum_character_code;
/*KL_PLATFORM*/
T2 r480maximum_character_code(T480* C);
extern T2 oBC480maximum_integer;
extern T0*oBC102lowercase_24;
extern int fBC102lowercase_24;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_24(void);
extern T0*oBC102lowercase_21;
extern int fBC102lowercase_21;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_21(void);
extern T0*oBC102lowercase_06;
extern int fBC102lowercase_06;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_06(void);
extern T0*oBC102lowercase_05;
extern int fBC102lowercase_05;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_05(void);
extern T0*oBC102lowercase_04;
extern int fBC102lowercase_04;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_04(void);
extern T0*oBC102lowercase_03;
extern int fBC102lowercase_03;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_03(void);
extern T0*oBC102lowercase_02;
extern int fBC102lowercase_02;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_02(void);
extern T0*oBC102lowercase_01;
extern int fBC102lowercase_01;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_01(void);
extern T0*oBC102lowercase_00;
extern int fBC102lowercase_00;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_00(void);
extern T0*oBC102lowercase_ff;
extern int fBC102lowercase_ff;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_ff(void);
/*UC_UNICODE_ROUTINES*/
T2 r101lower_code(T2 a1);
/*UC_UNICODE_ROUTINES*/
T6 r101valid_code(T2 a1);
extern T0*oBC102lowercase_1f;
extern int fBC102lowercase_1f;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_1f(void);
extern T0*oBC102lowercase_1e;
extern int fBC102lowercase_1e;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase_1e(void);
extern T0*oBC102lowercase;
extern int fBC102lowercase;
/*UC_UNICODE_ROUTINES*/
T0* r101lowercase(void);
/*UC_UTF8_ROUTINES*/
T2 r91encoded_next_value(T3 a1);
/*UC_UTF8_ROUTINES*/
T2 r91character_byte_count(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r91is_endian_detection_character(T3 a1,T3 a2,T3 a3);
/*UC_UTF8_ROUTINES*/
T2 r91encoded_first_value(T3 a1);
/*UC_UTF8_ROUTINES*/
T2 r91code_byte_count(T2 a1);
/*UC_UTF8_ROUTINES*/
T2 r91encoded_byte_count(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r91is_encoded_first_byte(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r91is_encoded_next_byte(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r91is_endian_detection_character_start(T3 a1,T3 a2);
/*UC_UTF8_ROUTINES*/
void r91append_code_to_utf8(T0* a1,T2 a2);
/*UC_UTF8_ROUTINES*/
T0* r91to_utf8(T0* a1);
/*UC_UTF8_ROUTINES*/
T6 r91valid_utf8(T0* a1);
/*UC_UTF8_ROUTINES*/
T2 r91substring_byte_count(T0* a1,T2 a2,T2 a3);
/*KL_INTEGER_ROUTINES*/
T3 r100to_character(T2 a1);
/*UC_STRING_EQUALITY_TESTER*/
T6 r181test(T0* a1,T0* a2);
/*SYSTEM*/
T0* r334get_environment_variable(T0* a1);
/*ET_XACE_OPTION_NAMES*/
T0* r209option_codes(void);
/*GEXACE*/
void r12process_cluster(T12* C);
/*GEXACE*/
T0* r12split_on_first(T0* a1,T3 a2);
/*GEXACE*/
void r12process_options(T12* C);
/*GEXACE*/
void r12process_arguments(T12* C);
/*GEXACE*/
T0* r12arguments(void);
/*GEXACE*/
T6 r12has_next_option_value(T12* C);
/*GEXACE*/
void r12process_xace_file(T12* C,T0* a1);
/*GEXACE*/
T6 r12is_next_option_long_option(T12* C);
extern T0*oBC12usage_message;
extern int fBC12usage_message;
/*GEXACE*/
T0* r12usage_message(void);
/*GEXACE*/
T0* r12next_option_value(T12* C);
/*GEXACE*/
void r12make(T12* C);
/*GEXACE*/
void r12process_command(T12* C);
/*GEXACE*/
T6 r12is_valid_option_position(T2 a1);
/*GEXACE*/
void r12process_system(T12* C);
extern T0*oBC19exceptions;
/*GEXACE*/
void r12process_define_string(T12* C,T0* a1);
/*GEXACE*/
void r12process_output(T12* C,T0* a1);
/*GEXACE*/
void r12process_validate(T12* C);
/*GEXACE*/
T0* r12next_option(T12* C);
/*GEXACE*/
T6 r12has_next_option(T12* C);
/*GEXACE*/
void r12process_library(T12* C);
/*GEXACE*/
void r12process_define(T12* C);
/*GEXACE*/
T0* r12split_string(T0* a1,T3 a2);
/*GEXACE*/
void r12process_compilers(T12* C,T0* a1,T0* a2);
/*GEXACE*/
T6 r12match_long_option(T12* C,T0* a1);
/*GEXACE*/
void r12consume_option(T12* C);
/*XM_NODE_TYPER*/
void r305process_comment(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305process_processing_instruction(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305process_document(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305process_element(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305process_attribute(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305process_character_data(T305* C,T0* a1);
/*XM_NODE_TYPER*/
void r305reset(T305* C);
/*BASIC_DIRECTORY*/
void r507connect_to_current_working_directory(T507* C);
/*BASIC_DIRECTORY*/
void r507disconnect(T507* C);
extern T0*oBC507last_entry;
/*KL_STRING_ROUTINES*/
void r79wipe_out(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r79as_string(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r79clone(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r79appended_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T6 r79is_integer(T0* a1);
/*KL_STRING_ROUTINES*/
T6 r79same_case_insensitive(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T2 r79hexadecimal_to_integer(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r79appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
/*KL_STRING_ROUTINES*/
T0* r79new_empty_string(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
T0* r79concat(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T6 r79is_hexadecimal(T0* a1);
/*KL_STRING_ROUTINES*/
T6 r79same_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T6 r79elks_same_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
void r79append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
/*XM_NULL_EXTERNAL_RESOLVER*/
T0* r428last_error(void);
/*KL_EXECUTION_ENVIRONMENT*/
T0* r333variable_value(T333* C,T0* a1);
/*KL_EXECUTION_ENVIRONMENT*/
T0* r333interpreted_string(T333* C,T0* a1);
/*KL_OPERATING_SYSTEM*/
T0* r162current_working_directory(T162* C);
/*KL_OPERATING_SYSTEM*/
T0* r162variable_value(T162* C,T0* a1);
/*KL_OPERATING_SYSTEM*/
T0* r162clone(T0* a1);
extern T6 oBC162is_windows;
extern int fBC162is_windows;
/*KL_OPERATING_SYSTEM*/
T6 r162is_windows(T162* C);
extern T6 oBC162is_unix;
extern int fBC162is_unix;
/*KL_OPERATING_SYSTEM*/
T6 r162is_unix(T162* C);
extern T12*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 773
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms209_49483191;
extern T7*ms209_2063276;
extern T7*ms556_229;
extern T7*ms562_687495638;
extern T7*ms209_765701343;
extern T7*ms209_51843716;
extern T7*ms209_295494129;
extern T7*ms473_10;
extern T7*ms209_2040823781;
extern T7*ms209_139303084;
extern T7*ms221_17696;
extern T7*ms559_512683247;
extern T7*ms208_79251;
extern T7*ms209_1846843898;
extern T7*ms209_2248290;
extern T7*ms419_1864547461;
extern T7*ms419_2065551545;
extern T7*ms209_10342028;
extern T7*ms209_722497341;
extern T7*ms463_6934577;
extern T7*ms209_692313432;
extern T7*ms143_2206146;
extern T7*ms419_498324258;
extern T7*ms209_1493399999;
extern T7*ms565_1431649392;
extern T7*ms209_2250778;
extern T7*ms209_2246326;
extern T7*ms209_1365755180;
extern T7*ms209_9670277;
extern T7*ms554_2012633470;
extern T7*ms419_993001251;
extern T7*ms209_1969927992;
extern T7*ms209_1962309625;
extern T7*ms419_930325994;
extern T7*ms209_662126768;
extern T7*ms209_19162620;
extern T7*ms209_454340;
extern T7*ms209_1711858390;
extern T7*ms209_2052034769;
extern T7*ms107_1515383187;
extern T7*ms32_1415324896;
extern T7*ms209_2191641;
extern T7*ms546_199682375;
extern T7*ms209_1498131510;
extern T7*ms419_1787513656;
extern T7*ms209_48856070;
extern T7*ms560_820451542;
extern T7*ms209_2185421;
extern T7*ms414_473224273;
extern T7*ms553_1606053737;
extern T7*ms115_431271;
extern T7*ms419_429369815;
extern T7*ms209_9901966;
extern T7*ms209_554402727;
extern T7*ms555_988446515;
extern T7*ms419_766510371;
extern T7*ms419_1383485945;
extern T7*ms209_484842691;
extern T7*ms647_11156230;
extern T7*ms419_1040340337;
extern T7*ms209_52771526;
extern T7*ms209_437070;
extern T7*ms561_454072470;
extern T7*ms209_275120843;
extern T7*ms209_2032026;
extern T7*ms209_440571;
extern T7*ms144_440790;
extern T7*ms144_440825;
extern T7*ms563_2131726096;
extern T7*ms209_10365093;
extern T7*ms557_54177410;
extern T7*ms597_90456;
extern T7*ms647_90456;
extern T7*ms647_259593324;
extern T7*ms209_54423316;
extern T7*ms209_1406738851;
extern T7*ms163_10;
extern T7*ms209_9786069;
extern T7*ms209_232608820;
extern T7*ms208_18036;
extern T7*ms115_9702826;
extern T7*ms548_1173656100;
extern T7*ms32_2045384695;
extern T7*ms159_10;
extern T7*ms419_1718816811;
extern T7*ms209_10030586;
extern T7*ms419_758578972;
extern T7*ms209_702131887;
extern T7*ms647_452299;
extern T7*ms209_279458336;
extern T7*ms209_234165132;
extern T7*ms551_1143561908;
extern T7*ms209_1138822190;
extern T7*ms209_1817115202;
extern T7*ms419_224621212;
extern T7*ms416_42;
extern T7*ms416_43;
extern T7*ms416_63;
extern T7*ms83_0;
extern T7*ms141_2071896;
extern T7*ms79_0;
extern T7*ms91_0;
extern T7*ms419_313350252;
extern T7*ms209_1831836695;
extern T7*ms209_416726;
extern T7*ms209_388005040;
extern T7*ms209_523691556;
extern T7*ms209_48929738;
extern T7*ms419_414094759;
extern T7*ms180_10;
extern T7*ms552_1179444653;
extern T7*ms209_1155828738;
extern T7*ms209_420169;
extern T7*ms419_1232318322;
extern T7*ms209_78002;
extern T7*ms209_1619639801;
extern T7*ms209_1998096;
extern T7*ms209_78263;
extern T7*ms209_78331;
extern T7*ms209_78279;
extern T7*ms115_1319327951;
extern T7*ms209_736662644;
extern T7*ms209_78490;
extern T7*ms209_78495;
extern T7*ms431_32;
extern T7*ms419_620986269;
extern T7*ms209_1376979093;
extern T7*ms209_408086;
extern T7*ms209_90041;
extern T7*ms558_802821753;
extern T7*ms209_90141;
extern T7*ms209_335219475;
extern T7*ms209_1994621;
extern T7*ms419_1785408556;
extern T7*ms209_50458336;
extern T7*ms419_225532234;
extern T7*ms209_914215870;
extern T7*ms564_105797387;
extern T7*ms209_9814236;
extern T7*ms419_1983024392;
extern T7*ms209_53099313;
extern T7*ms209_1085709462;
extern T7*ms209_52654521;
extern T7*ms209_9558536;
extern T7*ms209_1988096;
extern T7*ms208_0;
extern T7*ms550_462378139;
extern T7*ms414_2055053662;
extern T7*ms209_89216;
extern T7*ms209_403369;
extern T7*ms222_0;
extern T7*ms419_880035048;
extern T7*ms209_402346;
extern T7*ms209_89771;
extern T7*ms209_10049231;
extern T7*ms209_39972254;
extern T7*ms209_89862;
extern T7*ms209_2141685;
extern T7*ms419_729820516;
extern T7*ms597_1503;
extern T7*ms143_2206146a;
extern T7*ms419_1105337616;
extern T7*ms260_0;
extern T7*ms419_1639807481;
extern T7*ms209_9946191;
extern T7*ms209_3073;
extern T7*ms141_2071896a;
extern T7*ms209_3139;
extern T7*ms209_3148;
extern T7*ms209_3226;
extern T7*ms209_1040155018;
extern T7*ms209_3322;
extern T7*ms209_1885450085;
extern T7*ms209_783353191;
extern T7*ms197_250860571;
extern T7*ms209_243833461;
extern T7*ms419_1389019675;
extern T7*ms419_1680506019;
extern T7*ms209_1570582567;
extern T7*ms209_1991783165;
extern T7*ms419_1806545392;
extern T7*ms566_1003460429;
extern T7*ms209_15741;
extern T7*ms209_264596220;
extern T7*ms209_49076540;
extern T7*ms209_17221;
extern T7*ms419_2083254325;
extern T7*ms209_17176;
extern T7*ms209_537250837;
extern T7*ms209_16782;
extern T7*ms431_192;
extern T7*ms419_1806352573;
extern T7*ms209_54326661;
extern T7*ms209_1183150341;
extern T7*ms419_513387338;
extern T7*ms209_1957581;
extern T7*ms419_438332871;
extern T7*ms209_11230216;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/manifest_string_trace.h) is automatically
  included when the -manifest_string_trace command line flag is used.
*/

EIF_STRING se_ms_trace(int count, char* c_string, int li, int co, char* path);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void*se_ma410(int argc,...);
void*se_ma106(int argc,...);
void*se_ma336(int argc,...);
void*se_ma337(int argc,...);
T0* X303cursor_item(T0*C,T0* a1);
void X303cursor_go_after(T0*C,T0* a1);
T6 X303cursor_after(T0*C,T0* a1);
void X303cursor_forth(T0*C,T0* a1);
void X303cursor_start(T0*C,T0* a1);
T6 X83same_unicode_string(T0*C,T0* a1);
T0* X83as_string(T0*C);
T2 X83byte_index(T0*C,T2 a1);
T2 X83next_byte_index(T0*C,T2 a1);
T6 X83same_type(T0*C,T0* a1);
void X83append_string(T0*C,T0* a1);
void X83append_substring(T0*C,T0* a1,T2 a2,T2 a3);
T2 X83item_code_at_byte_index(T0*C,T2 a1);
T0* X83prefixed_string(T0*C,T0* a1);
T0* X83new_empty_string(T0*C,T2 a1);
T3 X83byte_item(T0*C,T2 a1);
T0* X83to_utf8(T0*C);
T0* X83_ix_43(T0*C,T0* a1);
void X32execute(T0*C);
T0* X170item(T0*C);
T6 X170after(T0*C);
void X170forth(T0*C);
void X170start(T0*C);
void X170go_after(T0*C);
void X170search_forth(T0*C,T0* a1);
T0* X173cursor_item(T0*C,T0* a1);
void X173cursor_go_after(T0*C,T0* a1);
T6 X173cursor_after(T0*C,T0* a1);
void X173cursor_search_forth(T0*C,T0* a1,T0* a2);
void X173cursor_forth(T0*C,T0* a1);
void X173cursor_start(T0*C,T0* a1);
T0* X173new_cursor(T0*C);
T6 X173cursor_off(T0*C,T0* a1);
T0* X7substring(T0*C,T2 a1,T2 a2);
T2 X7occurrences(T0*C,T3 a1);
void X7wipe_out(T0*C);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T6 X7has_substring(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
void X7remove(T0*C,T2 a1);
T6 X7is_empty(T0*C);
T0* X7string(T0*C);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T6 X7has(T0*C,T3 a1);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T6 X7same_string(T0*C,T0* a1);
T0* X7twin(T0*C);
T0* X7_ix_43(T0*C,T0* a1);
void X7swap(T0*C,T2 a1,T2 a2);
T0* X304cursor_item(T0*C,T0* a1);
T6 X304cursor_after(T0*C,T0* a1);
void X304cursor_forth(T0*C,T0* a1);
void X304cursor_start(T0*C,T0* a1);
void X178put_right(T0*C,T0* a1);
T0* X175last(T0*C);
T0* X175cursor_item(T0*C,T0* a1);
T0* X175item(T0*C,T2 a1);
T6 X175cursor_after(T0*C,T0* a1);
void X175cursor_forth(T0*C,T0* a1);
void X175cursor_start(T0*C,T0* a1);
void X175force_last(T0*C,T0* a1);
T0* X175new_cursor(T0*C);
T0* X15twin(T0*C);
void X215process(T0*C,T0* a1);
void X429apply_input_buffer(T0*C);
T6 X17se_assigned_from(T0*C,T0* a1);
T6 X17conforms_to(T0*C,T0* a1);
void X96put_new_line(T0*C);
void X96put_integer(T0*C,T2 a1);
void X96put_line(T0*C,T0* a1);
void X96put_character(T0*C,T3 a1);
void X96put_string(T0*C,T0* a1);
T6 X203is_closable(T0*C);
T0* X203name(T0*C);
T2 X203read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X203read_character(T0*C);
T6 X203is_open_read(T0*C);
void X203close(T0*C);
T2 X203read_to_buffer(T0*C,T0* a1,T2 a2,T2 a3);
T6 X203end_of_input(T0*C);
T3 X203last_character(T0*C);
void X219process(T0*C,T0* a1);
void X219equality_delete(T0*C,T0* a1);
T0* X219new_cursor(T0*C);
void X463fill(T0*C);
T0* X463name(T0*C);
void X167set(T0*C,T0* a1,T6 a2,T6 a3);
T0* X167item(T0*C);
void X167set_next_cursor(T0*C,T0* a1);
T6 X167after(T0*C);
T6 X167is_last(T0*C);
void X167forth(T0*C);
void X167start(T0*C);
void X167set_after(T0*C);
T6 X167before(T0*C);
void X235on_start_tag_finish(T0*C);
void X235on_finish(T0*C);
void X235on_content(T0*C,T0* a1);
void X235on_start(T0*C);
void X235on_processing_instruction(T0*C,T0* a1,T0* a2);
void X235on_start_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X235on_comment(T0*C,T0* a1);
void X235on_end_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X235on_attribute(T0*C,T0* a1,T0* a2,T0* a3,T0* a4);
void X235on_error(T0*C,T0* a1);
void X235on_xml_declaration(T0*C,T0* a1,T0* a2,T6 a3);
T0* X168item(T0*C);
T6 X168after(T0*C);
void X168forth(T0*C);
void X168start(T0*C);
T6 X310cursor_is_last(T0*C,T0* a1);
void X310cursor_go_after(T0*C,T0* a1);
void X310cursor_forth(T0*C,T0* a1);
void X310cursor_start(T0*C,T0* a1);
T6 X310cursor_is_first(T0*C,T0* a1);
void X310remove_at_cursor(T0*C,T0* a1);
T6 X176cursor_is_last(T0*C,T0* a1);
void X176cursor_go_after(T0*C,T0* a1);
void X176cursor_search_forth(T0*C,T0* a1,T0* a2);
void X176cursor_forth(T0*C,T0* a1);
void X176cursor_start(T0*C,T0* a1);
void X176force_last(T0*C,T0* a1);
T0* X176new_cursor(T0*C);
void X176put_last(T0*C,T0* a1);
T0* X94default_message(T0*C);
void X430read_token(T0*C);
void X430close_input(T0*C);
void X430set_input_from_resolver(T0*C,T0* a1);
void X430set_input_stream(T0*C,T0* a1);
T0* X171container(T0*C);
void X110generate_library(T0*C,T0* a1,T0* a2);
T0* X110default_system_output_filename(T0*C);
void X110generate_system(T0*C,T0* a1,T0* a2);
T0* X110default_library_output_filename(T0*C);
T0* X505pathname(T0*C,T0* a1,T0* a2);

#ifdef __cplusplus
}
#endif
