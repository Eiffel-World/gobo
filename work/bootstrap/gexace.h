#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #20 (Thursday March 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S301 T301;
typedef struct S752 T752;
typedef struct S499 T499;
typedef struct S611 T611;
typedef struct S281 T281;
typedef struct S488 T488;
typedef struct S619 T619;
typedef struct S682 T682;
typedef struct S101 T101;
typedef struct S153 T153;
typedef struct S684 T684;
typedef struct S242 T242;
typedef struct S172 T172;
typedef struct S591 T591;
typedef struct S600 T600;
typedef struct S622 T622;
typedef struct S648 T648;
typedef struct S432 T432;
typedef struct S631 T631;
typedef struct S589 T589;
typedef struct S259 T259;
typedef struct S545 T545;
typedef struct S189 T189;
typedef struct S558 T558;
typedef struct S402 T402;
typedef struct S210 T210;
typedef struct S228 T228;
typedef struct S215 T215;
typedef struct S134 T134;
typedef struct S517 T517;
typedef struct S214 T214;
typedef struct S226 T226;
typedef struct S220 T220;
typedef struct S532 T532;
typedef struct S660 T660;
typedef struct S667 T667;
typedef struct S740 T740;
typedef struct S40 T40;
typedef struct S663 T663;
typedef struct S523 T523;
typedef struct S361 T361;
typedef struct S41 T41;
typedef struct S592 T592;
typedef struct S311 T311;
typedef struct S414 T414;
typedef struct S599 T599;
typedef struct S121 T121;
typedef struct S296 T296;
typedef struct S190 T190;
typedef struct S88 T88;
typedef struct S738 T738;
typedef struct S130 T130;
typedef struct S164 T164;
typedef struct S733 T733;
typedef struct S627 T627;
typedef struct S36 T36;
typedef struct S528 T528;
typedef struct S531 T531;
typedef struct S433 T433;
typedef struct S480 T480;
typedef struct S356 T356;
typedef struct S140 T140;
typedef struct S755 T755;
typedef struct S270 T270;
typedef struct S646 T646;
typedef struct S626 T626;
typedef struct S679 T679;
typedef struct S171 T171;
typedef struct S621 T621;
typedef struct S609 T609;
typedef struct S30 T30;
typedef struct S720 T720;
typedef struct S222 T222;
typedef struct S387 T387;
typedef struct S550 T550;
typedef struct S450 T450;
typedef struct S666 T666;
typedef struct S219 T219;
typedef struct S127 T127;
typedef struct S464 T464;
typedef struct S701 T701;
typedef struct S597 T597;
typedef struct S340 T340;
typedef struct S223 T223;
typedef struct S565 T565;
typedef struct S762 T762;
typedef struct S104 T104;
typedef struct S211 T211;
typedef struct S133 T133;
typedef struct S100 T100;
typedef struct S739 T739;
typedef struct S322 T322;
typedef struct S103 T103;
typedef struct S245 T245;
typedef struct S760 T760;
typedef struct S216 T216;
typedef struct S156 T156;
typedef struct S595 T595;
typedef struct S709 T709;
typedef struct S725 T725;
typedef struct S35 T35;
typedef struct S459 T459;
typedef struct S416 T416;
typedef struct S249 T249;
typedef struct S342 T342;
typedef struct S261 T261;
typedef struct S460 T460;
typedef struct S151 T151;
typedef struct S72 T72;
typedef int T625;
typedef struct S132 T132;
typedef struct S64 T64;
typedef struct S502 T502;
typedef struct S635 T635;
typedef struct S7 T7;
typedef struct S521 T521;
typedef struct S306 T306;
typedef struct S615 T615;
typedef struct S187 T187;
typedef struct S202 T202;
typedef struct S406 T406;
typedef struct S475 T475;
typedef struct S264 T264;
typedef struct S129 T129;
typedef struct S767 T767;
typedef struct S360 T360;
typedef struct S618 T618;
typedef struct S718 T718;
typedef struct S719 T719;
typedef struct S596 T596;
typedef struct S368 T368;
typedef struct S307 T307;
typedef struct S726 T726;
typedef struct S326 T326;
typedef struct S478 T478;
typedef struct S527 T527;
typedef struct S713 T713;
typedef struct S486 T486;
typedef struct S337 T337;
typedef struct S16 T16;
typedef struct S568 T568;
typedef struct S302 T302;
typedef struct S305 T305;
typedef struct S590 T590;
typedef struct S128 T128;
typedef struct S737 T737;
typedef struct S97 T97;
typedef struct S561 T561;
typedef struct S567 T567;
typedef struct S209 T209;
typedef struct S273 T273;
typedef struct S623 T623;
typedef struct S536 T536;
typedef struct S212 T212;
typedef struct S405 T405;
typedef struct S203 T203;
typedef struct S292 T292;
typedef struct S695 T695;
typedef struct S620 T620;
typedef struct S117 T117;
typedef struct S275 T275;
typedef struct S570 T570;
typedef struct S114 T114;
typedef struct S76 T76;
typedef struct S624 T624;
typedef struct S761 T761;
typedef struct S593 T593;
typedef struct S758 T758;
typedef struct S141 T141;
typedef struct S732 T732;
typedef struct S135 T135;
typedef struct S717 T717;
typedef struct S157 T157;
typedef struct S735 T735;
typedef struct S573 T573;
typedef struct S665 T665;
typedef struct S123 T123;
typedef struct S99 T99;
typedef struct S522 T522;
typedef struct S712 T712;
typedef struct S687 T687;
typedef struct S195 T195;
typedef struct S569 T569;
typedef struct S205 T205;
typedef struct S75 T75;
typedef struct S649 T649;
typedef struct S728 T728;
typedef struct S83 T83;
typedef struct S126 T126;
typedef struct S295 T295;
typedef struct S428 T428;
typedef struct S768 T768;
typedef struct S266 T266;
typedef struct S280 T280;
typedef struct S457 T457;
typedef struct S277 T277;
typedef struct S587 T587;
typedef struct S540 T540;
typedef struct S584 T584;
typedef struct S65 T65;
typedef struct S436 T436;
typedef struct S683 T683;
typedef struct S31 T31;
typedef struct S447 T447;
typedef struct S60 T60;
typedef struct S389 T389;

/*C Header Pass 2 :*/
typedef T0**T272;
typedef T0**T363;
typedef T6*T633;
typedef T0**T299;
typedef T0**T225;
typedef T0**T463;
typedef T0**T230;
typedef T0**T268;
typedef T0**T74;
typedef T3*T9;
typedef T0**T716;
typedef T0**T304;
typedef T0**T435;
typedef T0**T408;
typedef T0**T313;
typedef T2*T119;
typedef T0**T526;

/*C Header Pass 3 :*/
struct S570{T2 _i_code;};
int se_cmpT570(T570 o1,T570 o2);

/*C Header Pass 4 :*/
struct S301{Tid id;T304 _storage;T2 _capacity;T2 _upper;};
extern T301 M301;
struct S752{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T752 M752;
struct S499{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T499 M499;
struct S611{Tid id;T0* _item;T0* _right;};
extern T611 M611;
struct S281{Tid id;};
extern T281 M281;
struct S488{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T488 M488;
struct S619{Tid id;T0* _parameters;};
extern T619 M619;
struct S682{Tid id;T0* _parameters;};
extern T682 M682;
struct S101{Tid id;T0* _item;T0* _right;};
extern T101 M101;
struct S153{Tid id;T0* _item;T0* _right;};
extern T153 M153;
struct S684{Tid id;T0* _event_parser_factory;};
extern T684 M684;
struct S242{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T242 M242;
struct S172{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T172 M172;
struct S591{Tid id;T0* _variables;T0* _error_handler;};
extern T591 M591;
struct S600{Tid id;T0* _first;T0* _second;};
extern T600 M600;
struct S622{Tid id;T0* _parameters;};
extern T622 M622;
struct S648{Tid id;T0* _class_name;T0* _features;};
extern T648 M648;
struct S432{Tid id;T435 _storage;T2 _capacity;T2 _upper;};
extern T432 M432;
struct S631{Tid id;T633 _storage;T2 _capacity;T2 _upper;};
extern T631 M631;
struct S589{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T589 M589;
struct S545{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T545 M545;
struct S189{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T189 M189;
struct S558{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T558 M558;
struct S402{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T402 M402;
struct S210{Tid id;T0* _clusters;};
extern T210 M210;
struct S228{Tid id;T230 _storage;T2 _capacity;T2 _upper;};
extern T228 M228;
struct S215{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T215 M215;
struct S134{Tid id;};
extern T134 M134;
struct S259{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T259 M259;
struct S517{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T517 M517;
struct S214{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries_directories;T0* _link_libraries;};
extern T214 M214;
struct S226{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T226 M226;
struct S220{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T220 M220;
struct S532{Tid id;T0* _parents;};
extern T532 M532;
struct S660{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T660 M660;
struct S667{Tid id;T0* _item;T0* _right;};
extern T667 M667;
struct S740{Tid id;};
extern T740 M740;
struct S40{Tid id;};
extern T40 M40;
struct S663{Tid id;T0* _item;T0* _right;};
extern T663 M663;
struct S523{Tid id;};
extern T523 M523;
struct S361{Tid id;};
extern T361 M361;
struct S41{Tid id;};
extern T41 M41;
struct S592{Tid id;T0* _table;};
extern T592 M592;
struct S311{Tid id;T313 _storage;T2 _capacity;T2 _upper;};
extern T311 M311;
struct S414{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T414 M414;
struct S599{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T599 M599;
struct S121{Tid id;};
extern T121 M121;
struct S296{Tid id;};
extern T296 M296;
struct S190{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T190 M190;
struct S88{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T88 M88;
struct S738{Tid id;T0* _first;T0* _second;};
extern T738 M738;
struct S130{Tid id;T0* _output_filename;T0* _error_handler;};
extern T130 M130;
struct S164{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T164 M164;
struct S733{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T733 M733;
struct S627{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T627 M627;
struct S36{Tid id;T2 _item;};
extern T36 M36;
struct S528{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T528 M528;
struct S531{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T531 M531;
struct S433{Tid id;};
extern T433 M433;
struct S480{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T480 M480;
struct S356{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T356 M356;
struct S140{Tid id;T0* _first;T0* _second;};
extern T140 M140;
struct S755{Tid id;T0* _item;T0* _right;};
extern T755 M755;
struct S270{Tid id;T272 _storage;T2 _capacity;T2 _upper;};
extern T270 M270;
struct S646{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T646 M646;
struct S626{Tid id;T3 _value;};
extern T626 M626;
struct S679{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T679 M679;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S621{Tid id;T0* _parameters;};
extern T621 M621;
struct S609{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T609 M609;
struct S30{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T30 M30;
struct S720{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T720 M720;
struct S222{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T222 M222;
struct S387{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T387 M387;
struct S550{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T550 M550;
struct S450{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T450 M450;
struct S666{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T666 M666;
struct S219{Tid id;};
extern T219 M219;
struct S127{Tid id;T0* _output_filename;T0* _error_handler;};
extern T127 M127;
struct S464{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T464 M464;
struct S701{Tid id;};
extern T701 M701;
struct S597{Tid id;};
extern T597 M597;
struct S340{Tid id;};
extern T340 M340;
struct S223{Tid id;T225 _storage;T2 _capacity;T2 _upper;};
extern T223 M223;
struct S565{Tid id;};
extern T565 M565;
struct S762{Tid id;T0* _parent;T0* _data;};
extern T762 M762;
struct S104{Tid id;T0* _defined_values;};
extern T104 M104;
struct S133{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T133 M133;
struct S100{Tid id;T0* _parameters;};
extern T100 M100;
struct S739{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T739 M739;
struct S322{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T322 M322;
struct S103{Tid id;T0* _output_filename;T0* _error_handler;};
extern T103 M103;
struct S245{Tid id;};
extern T245 M245;
struct S760{Tid id;T0* _parent;T0* _content;};
extern T760 M760;
struct S156{Tid id;T0* _name;};
extern T156 M156;
struct S595{Tid id;T0* _item;};
extern T595 M595;
struct S709{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T709 M709;
struct S725{Tid id;T0* _parameters;};
extern T725 M725;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S459{Tid id;T463 _storage;T2 _capacity;T2 _upper;};
extern T459 M459;
struct S416{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T416 M416;
struct S342{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T342 M342;
struct S261{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T261 M261;
struct S460{Tid id;};
extern T460 M460;
struct S151{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T151 M151;
struct S72{Tid id;T74 _storage;T2 _capacity;T2 _upper;};
extern T72 M72;
extern T625 M625;
struct S132{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T132 M132;
struct S211{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T211 M211;
struct S64{Tid id;T0* _item;T0* _right;};
extern T64 M64;
struct S502{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yytable;T0* _yyvs;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_acclist;T0* _yy_state_stack;T6 _use_create_keyword;T0* _yypgoto;T0* _yyss;T2 _position;T2 _yy_start_state;T2 _yy_column;T0* _yy_nxt;T0* _yy_base;T0* _yy_accept;T0* _filename;T0* _ast_factory;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T0* _yy_content;T2 _yy_end;T2 _yy_position;T0* _yy_meta;T0* _universe;};
extern T502 M502;
struct S635{Tid id;};
extern T635 M635;
struct S521{Tid id;};
extern T521 M521;
struct S306{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T2 _first_seed;T0* _seeds;};
extern T306 M306;
struct S615{Tid id;T0* _parameters;};
extern T615 M615;
struct S187{Tid id;T0* _root_class;T0* _classes;T0* _features;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T187 M187;
struct S202{Tid id;T0* _error_handler;T6 _has_error;};
extern T202 M202;
struct S406{Tid id;};
extern T406 M406;
struct S475{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T475 M475;
struct S264{Tid id;};
extern T264 M264;
struct S129{Tid id;T0* _output_filename;T0* _error_handler;};
extern T129 M129;
struct S767{Tid id;};
extern T767 M767;
struct S360{Tid id;T363 _storage;T2 _capacity;T2 _upper;};
extern T360 M360;
struct S618{Tid id;T0* _parameters;};
extern T618 M618;
struct S718{Tid id;};
extern T718 M718;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S719{Tid id;T0* _parameters;};
extern T719 M719;
struct S596{Tid id;};
extern T596 M596;
struct S368{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T368 M368;
struct S307{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T307 M307;
struct S726{Tid id;T0* _item;T0* _right;};
extern T726 M726;
struct S326{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T326 M326;
struct S478{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T478 M478;
struct S527{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T527 M527;
struct S713{Tid id;};
extern T713 M713;
struct S486{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T486 M486;
struct S337{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T337 M337;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S568{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T568 M568;
struct S249{Tid id;T2 _compressed_position;T0* _name;};
extern T249 M249;
struct S302{Tid id;};
extern T302 M302;
struct S305{Tid id;T0* _current_class;T0* _named_features;T2 _nb_seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T305 M305;
struct S590{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _root_element;};
extern T590 M590;
struct S128{Tid id;T0* _output_filename;T0* _error_handler;};
extern T128 M128;
struct S737{Tid id;T0* _first;T0* _second;};
extern T737 M737;
struct S97{Tid id;};
extern T97 M97;
struct S561{Tid id;T0* _item;T0* _right;};
extern T561 M561;
struct S567{Tid id;T2 _type;};
extern T567 M567;
struct S273{Tid id;};
extern T273 M273;
struct S623{Tid id;T0* _parameters;};
extern T623 M623;
struct S536{Tid id;T0* _class_name;T0* _type_mark;T0* _base_class;};
extern T536 M536;
struct S212{Tid id;T0* _clusters;};
extern T212 M212;
struct S405{Tid id;T408 _storage;T2 _capacity;T2 _upper;};
extern T405 M405;
struct S203{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T203 M203;
struct S292{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T292 M292;
struct S695{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T695 M695;
struct S620{Tid id;T0* _parameters;};
extern T620 M620;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S209{Tid id;T0* _i_representation;};
extern T209 M209;
struct S275{Tid id;};
extern T275 M275;
extern T570 M570;
struct S114{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T114 M114;
struct S76{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T76 M76;
struct S624{Tid id;};
extern T624 M624;
struct S761{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T761 M761;
struct S593{Tid id;T2 _last_code;T2 _next_pos;};
extern T593 M593;
struct S758{Tid id;T0* _uri;};
extern T758 M758;
struct S141{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T141 M141;
struct S732{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T732 M732;
struct S135{Tid id;T0* _name;};
extern T135 M135;
struct S216{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T216 M216;
struct S717{Tid id;};
extern T717 M717;
struct S157{Tid id;T0* _name;};
extern T157 M157;
struct S735{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T735 M735;
struct S573{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T573 M573;
struct S665{Tid id;T0* _feature_name;T0* _external_name;};
extern T665 M665;
struct S123{Tid id;};
extern T123 M123;
struct S99{Tid id;T74 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T99 M99;
struct S522{Tid id;T526 _storage;T2 _capacity;T2 _upper;};
extern T522 M522;
struct S712{Tid id;T716 _storage;T2 _capacity;T2 _upper;};
extern T712 M712;
struct S687{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T687 M687;
struct S195{Tid id;T0* _implementation;};
extern T195 M195;
struct S569{Tid id;T2 _count;T0* _storage;};
extern T569 M569;
struct S205{Tid id;T0* _parent;T0* _ns_prefix;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _name;T2 _count;};
extern T205 M205;
struct S75{Tid id;T3 _item;};
extern T75 M75;
struct S649{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T649 M649;
struct S728{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_column;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T2 _last_token;T0* _input_buffer;T2 _line;T2 _yy_end;T2 _yy_start;T2 _yy_position;T2 _yy_more_len;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T728 M728;
struct S83{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T83 M83;
struct S126{Tid id;};
extern T126 M126;
struct S295{Tid id;T299 _storage;T2 _capacity;T2 _upper;};
extern T295 M295;
struct S428{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T428 M428;
struct S768{Tid id;T2 _i_code;};
extern T768 M768;
struct S266{Tid id;T268 _storage;T2 _capacity;T2 _upper;};
extern T266 M266;
struct S280{Tid id;};
extern T280 M280;
struct S457{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T457 M457;
struct S277{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T277 M277;
struct S587{Tid id;};
extern T587 M587;
struct S540{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T540 M540;
struct S584{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T584 M584;
struct S65{Tid id;T0* _program_name;};
extern T65 M65;
struct S436{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T436 M436;
struct S683{Tid id;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T683 M683;
struct S31{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T31 M31;
struct S447{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T447 M447;
struct S60{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T60 M60;
struct S389{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T389 M389;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r272clear_all(T272 C,T2 a1);
T272 r272realloc(T272 C,T2 a1,T2 a2);
void r272set_all_with(T272 C,T0* a1,T2 a2);
T6 r272fast_memcmp(T272 C,T272 a1,T2 a2);
void r272clear(T272 C,T2 a1,T2 a2);
void r272copy_from(T272 C,T272 a1,T2 a2);
void r363clear_all(T363 C,T2 a1);
T363 r363realloc(T363 C,T2 a1,T2 a2);
void r363set_all_with(T363 C,T0* a1,T2 a2);
T6 r363fast_memcmp(T363 C,T363 a1,T2 a2);
void r363clear(T363 C,T2 a1,T2 a2);
void r363copy_from(T363 C,T363 a1,T2 a2);
void r633clear_all(T633 C,T2 a1);
T633 r633realloc(T633 C,T2 a1,T2 a2);
void r633set_all_with(T633 C,T6 a1,T2 a2);
T6 r633fast_memcmp(T633 C,T633 a1,T2 a2);
void r633clear(T633 C,T2 a1,T2 a2);
void r633copy_from(T633 C,T633 a1,T2 a2);
void r299clear_all(T299 C,T2 a1);
T299 r299realloc(T299 C,T2 a1,T2 a2);
void r299set_all_with(T299 C,T0* a1,T2 a2);
T6 r299fast_memcmp(T299 C,T299 a1,T2 a2);
void r299clear(T299 C,T2 a1,T2 a2);
void r299copy_from(T299 C,T299 a1,T2 a2);
void r225clear_all(T225 C,T2 a1);
T225 r225realloc(T225 C,T2 a1,T2 a2);
void r225set_all_with(T225 C,T0* a1,T2 a2);
T6 r225fast_memcmp(T225 C,T225 a1,T2 a2);
void r225clear(T225 C,T2 a1,T2 a2);
void r225copy_from(T225 C,T225 a1,T2 a2);
void r463clear_all(T463 C,T2 a1);
T463 r463realloc(T463 C,T2 a1,T2 a2);
void r463set_all_with(T463 C,T0* a1,T2 a2);
T6 r463fast_memcmp(T463 C,T463 a1,T2 a2);
void r463clear(T463 C,T2 a1,T2 a2);
void r463copy_from(T463 C,T463 a1,T2 a2);
void r230clear_all(T230 C,T2 a1);
T230 r230realloc(T230 C,T2 a1,T2 a2);
void r230set_all_with(T230 C,T0* a1,T2 a2);
T6 r230fast_memcmp(T230 C,T230 a1,T2 a2);
void r230clear(T230 C,T2 a1,T2 a2);
void r230copy_from(T230 C,T230 a1,T2 a2);
void r268clear_all(T268 C,T2 a1);
T268 r268realloc(T268 C,T2 a1,T2 a2);
void r268set_all_with(T268 C,T0* a1,T2 a2);
T6 r268fast_memcmp(T268 C,T268 a1,T2 a2);
void r268clear(T268 C,T2 a1,T2 a2);
void r268copy_from(T268 C,T268 a1,T2 a2);
void r74clear_all(T74 C,T2 a1);
T74 r74realloc(T74 C,T2 a1,T2 a2);
T6 r74fast_memcmp(T74 C,T74 a1,T2 a2);
void r74set_all_with(T74 C,T0* a1,T2 a2);
void r74clear(T74 C,T2 a1,T2 a2);
void r74copy_from(T74 C,T74 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r716clear_all(T716 C,T2 a1);
T716 r716realloc(T716 C,T2 a1,T2 a2);
void r716set_all_with(T716 C,T0* a1,T2 a2);
T6 r716fast_memcmp(T716 C,T716 a1,T2 a2);
void r716clear(T716 C,T2 a1,T2 a2);
void r716copy_from(T716 C,T716 a1,T2 a2);
void r304clear_all(T304 C,T2 a1);
T304 r304realloc(T304 C,T2 a1,T2 a2);
void r304set_all_with(T304 C,T0* a1,T2 a2);
T6 r304fast_memcmp(T304 C,T304 a1,T2 a2);
void r304clear(T304 C,T2 a1,T2 a2);
void r304copy_from(T304 C,T304 a1,T2 a2);
void r435clear_all(T435 C,T2 a1);
T435 r435realloc(T435 C,T2 a1,T2 a2);
void r435set_all_with(T435 C,T0* a1,T2 a2);
T6 r435fast_memcmp(T435 C,T435 a1,T2 a2);
void r435clear(T435 C,T2 a1,T2 a2);
void r435copy_from(T435 C,T435 a1,T2 a2);
void r408clear_all(T408 C,T2 a1);
T408 r408realloc(T408 C,T2 a1,T2 a2);
void r408set_all_with(T408 C,T0* a1,T2 a2);
T6 r408fast_memcmp(T408 C,T408 a1,T2 a2);
void r408clear(T408 C,T2 a1,T2 a2);
void r408copy_from(T408 C,T408 a1,T2 a2);
void r313clear_all(T313 C,T2 a1);
T313 r313realloc(T313 C,T2 a1,T2 a2);
void r313set_all_with(T313 C,T0* a1,T2 a2);
T6 r313fast_memcmp(T313 C,T313 a1,T2 a2);
void r313clear(T313 C,T2 a1,T2 a2);
void r313copy_from(T313 C,T313 a1,T2 a2);
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
void r119move(T119 C,T2 a1,T2 a2,T2 a3);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119set_all_with(T119 C,T2 a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r526clear_all(T526 C,T2 a1);
T526 r526realloc(T526 C,T2 a1,T2 a2);
void r526set_all_with(T526 C,T0* a1,T2 a2);
T6 r526fast_memcmp(T526 C,T526 a1,T2 a2);
void r526clear(T526 C,T2 a1,T2 a2);
void r526copy_from(T526 C,T526 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7remove_tail(T7* C,T2 a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
T2 r7substring_index(T7* C,T0* a1,T2 a2);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r301copy(T301* C,T0* a1);
T6 r301is_equal(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
void r301make(T301* C,T2 a1);
T6 r301conforms_to(T301* C,T0* a1);
void r301resize(T301* C,T2 a1);
T0* r301twin(T301* C);
void r432copy(T432* C,T0* a1);
T6 r432is_equal(T432* C,T0* a1);
T6 r432se_assigned_from(T0* a1);
void r432make(T432* C,T2 a1);
T6 r432conforms_to(T432* C,T0* a1);
void r432resize(T432* C,T2 a1);
T0* r432twin(T432* C);
void r631copy(T631* C,T0* a1);
T6 r631is_equal(T631* C,T0* a1);
T6 r631se_assigned_from(T0* a1);
void r631make(T631* C,T2 a1);
T6 r631conforms_to(T631* C,T0* a1);
void r631resize(T631* C,T2 a1);
T0* r631twin(T631* C);
void r228copy(T228* C,T0* a1);
T6 r228is_equal(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
void r228make(T228* C,T2 a1);
T6 r228conforms_to(T228* C,T0* a1);
void r228resize(T228* C,T2 a1);
T0* r228twin(T228* C);
void r517copy(T517* C,T0* a1);
T2 r517count(T517* C);
T6 r517is_equal(T517* C,T0* a1);
T2 r517item(T517* C,T2 a1);
T6 r517se_assigned_from(T0* a1);
void r517make(T517* C,T2 a1,T2 a2);
T6 r517conforms_to(T517* C,T0* a1);
void r517resize(T517* C,T2 a1,T2 a2);
T0* r517twin(T517* C);
void r311copy(T311* C,T0* a1);
T6 r311is_equal(T311* C,T0* a1);
T6 r311se_assigned_from(T0* a1);
void r311make(T311* C,T2 a1);
T6 r311conforms_to(T311* C,T0* a1);
void r311resize(T311* C,T2 a1);
T0* r311twin(T311* C);
void r270copy(T270* C,T0* a1);
T6 r270is_equal(T270* C,T0* a1);
T6 r270se_assigned_from(T0* a1);
void r270make(T270* C,T2 a1);
T6 r270conforms_to(T270* C,T0* a1);
void r270resize(T270* C,T2 a1);
T0* r270twin(T270* C);
void r223copy(T223* C,T0* a1);
T6 r223is_equal(T223* C,T0* a1);
T6 r223se_assigned_from(T0* a1);
void r223make(T223* C,T2 a1);
T6 r223conforms_to(T223* C,T0* a1);
void r223resize(T223* C,T2 a1);
T0* r223twin(T223* C);
void r459copy(T459* C,T0* a1);
T6 r459is_equal(T459* C,T0* a1);
T6 r459se_assigned_from(T0* a1);
void r459make(T459* C,T2 a1);
T6 r459conforms_to(T459* C,T0* a1);
void r459resize(T459* C,T2 a1);
T0* r459twin(T459* C);
void r72copy(T72* C,T0* a1);
T6 r72is_equal(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r360copy(T360* C,T0* a1);
T6 r360is_equal(T360* C,T0* a1);
T6 r360se_assigned_from(T0* a1);
void r360make(T360* C,T2 a1);
T6 r360conforms_to(T360* C,T0* a1);
void r360resize(T360* C,T2 a1);
T0* r360twin(T360* C);
void r405copy(T405* C,T0* a1);
T6 r405is_equal(T405* C,T0* a1);
T6 r405se_assigned_from(T0* a1);
void r405make(T405* C,T2 a1);
T6 r405conforms_to(T405* C,T0* a1);
void r405resize(T405* C,T2 a1);
T0* r405twin(T405* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T2 a1);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r117with_capacity(T117* C,T2 a1);
void r117from_collection(T117* C,T0* a1);
void r99copy(T99* C,T0* a1);
T2 r99count(T99* C);
T6 r99is_equal(T99* C,T0* a1);
T0* r99item(T99* C,T2 a1);
T6 r99valid_index(T99* C,T2 a1);
T6 r99se_assigned_from(T0* a1);
void r99make(T99* C,T2 a1,T2 a2);
T6 r99conforms_to(T99* C,T0* a1);
T0* r99twin(T99* C);
void r522copy(T522* C,T0* a1);
T2 r522count(T522* C);
T6 r522is_equal(T522* C,T0* a1);
T0* r522item(T522* C,T2 a1);
T6 r522se_assigned_from(T0* a1);
void r522make(T522* C,T2 a1);
T6 r522conforms_to(T522* C,T0* a1);
void r522resize(T522* C,T2 a1);
T0* r522twin(T522* C);
void r712copy(T712* C,T0* a1);
T6 r712is_equal(T712* C,T0* a1);
T6 r712se_assigned_from(T0* a1);
void r712make(T712* C,T2 a1);
T6 r712conforms_to(T712* C,T0* a1);
void r712resize(T712* C,T2 a1);
T0* r712twin(T712* C);
void r295copy(T295* C,T0* a1);
T2 r295count(T295* C);
T6 r295is_equal(T295* C,T0* a1);
T0* r295item(T295* C,T2 a1);
T6 r295se_assigned_from(T0* a1);
void r295make(T295* C,T2 a1);
T6 r295conforms_to(T295* C,T0* a1);
void r295resize(T295* C,T2 a1);
T0* r295twin(T295* C);
void r266copy(T266* C,T0* a1);
T6 r266is_equal(T266* C,T0* a1);
T6 r266se_assigned_from(T0* a1);
void r266make(T266* C,T2 a1);
T6 r266conforms_to(T266* C,T0* a1);
void r266resize(T266* C,T2 a1);
T0* r266twin(T266* C);
void r752copy(T752* C,T0* a1);
void r752set(T752* C,T0* a1,T6 a2,T6 a3);
T6 r752is_equal(T752* C,T0* a1);
T6 r752same_position(T752* C,T0* a1);
T6 r752se_assigned_from(T0* a1);
T6 r752same_type(T752* C,T0* a1);
void r752make(T752* C,T0* a1);
T6 r752conforms_to(T752* C,T0* a1);
void r752set_after(T752* C);
T0* r752twin(T752* C);
void r499copy(T499* C,T0* a1);
T6 r499is_equal(T499* C,T0* a1);
T6 r499same_position(T499* C,T0* a1);
T6 r499se_assigned_from(T0* a1);
T6 r499same_type(T499* C,T0* a1);
T6 r499off(T499* C);
T6 r499conforms_to(T499* C,T0* a1);
T0* r499twin(T499* C);
T6 r611is_equal(T611* C,T0* a1);
T6 r611se_assigned_from(T0* a1);
T6 r611conforms_to(T611* C,T0* a1);
T0* r611twin(T611* C);
void r488copy(T488* C,T0* a1);
T6 r488is_equal(T488* C,T0* a1);
void r488remove_traversing_cursor(T488* C,T0* a1);
void r488move_all_cursors_after(T488* C);
void r488add_traversing_cursor(T488* C,T0* a1);
T6 r488se_assigned_from(T0* a1);
T0* r488clone(T0* a1);
T6 r488cursor_before(T0* a1);
T6 r488same_type(T488* C,T0* a1);
void r488make(T488* C,T2 a1);
T6 r488cursor_after(T0* a1);
T6 r488conforms_to(T488* C,T0* a1);
T6 r488cursor_same_position(T0* a1,T0* a2);
T0* r488twin(T488* C);
T0* r488new_cursor(T488* C);
T6 r488cursor_off(T0* a1);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T6 r153is_equal(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
void r242copy(T242* C,T0* a1);
T6 r242is_equal(T242* C,T0* a1);
T0* r242item(T242* C);
T6 r242same_position(T242* C,T0* a1);
T6 r242se_assigned_from(T0* a1);
T6 r242after(T242* C);
T6 r242same_type(T242* C,T0* a1);
T2 r242index(T242* C);
T6 r242off(T242* C);
T6 r242conforms_to(T242* C,T0* a1);
T0* r242twin(T242* C);
T6 r600is_equal(T600* C,T0* a1);
T6 r600se_assigned_from(T0* a1);
void r600make(T600* C,T0* a1,T0* a2);
T6 r600conforms_to(T600* C,T0* a1);
T0* r600twin(T600* C);
void r545copy(T545* C,T0* a1);
T6 r545is_equal(T545* C,T0* a1);
T6 r545same_position(T545* C,T0* a1);
T6 r545se_assigned_from(T0* a1);
T6 r545same_type(T545* C,T0* a1);
T6 r545off(T545* C);
T6 r545conforms_to(T545* C,T0* a1);
T0* r545twin(T545* C);
void r558copy(T558* C,T0* a1);
void r558set(T558* C,T0* a1,T6 a2,T6 a3);
T6 r558is_equal(T558* C,T0* a1);
T6 r558same_position(T558* C,T0* a1);
T6 r558se_assigned_from(T0* a1);
T6 r558is_first(T558* C);
T6 r558is_last(T558* C);
T6 r558same_type(T558* C,T0* a1);
void r558make(T558* C,T0* a1);
void r558forth(T558* C);
T6 r558conforms_to(T558* C,T0* a1);
void r558start(T558* C);
void r558go_after(T558* C);
void r558set_after(T558* C);
T0* r558twin(T558* C);
void r402copy(T402* C,T0* a1);
T6 r402is_equal(T402* C,T0* a1);
T6 r402same_position(T402* C,T0* a1);
T6 r402se_assigned_from(T0* a1);
T6 r402same_type(T402* C,T0* a1);
void r402make(T402* C,T0* a1);
T6 r402off(T402* C);
T6 r402conforms_to(T402* C,T0* a1);
T0* r402twin(T402* C);
T2 r226new_capacity(T2 a1);
void r226copy(T226* C,T0* a1);
void r226clear_items(T226* C,T2 a1,T2 a2);
T6 r226extendible(T226* C,T2 a1);
T0* r226cursor_item(T226* C,T0* a1);
T6 r226is_equal(T226* C,T0* a1);
void r226remove_traversing_cursor(T226* C,T0* a1);
void r226move_all_cursors_after(T226* C);
void r226add_traversing_cursor(T226* C,T0* a1);
T6 r226se_assigned_from(T0* a1);
T0* r226clone(T0* a1);
void r226move_left(T226* C,T2 a1,T2 a2);
T6 r226cursor_before(T0* a1);
T6 r226same_type(T226* C,T0* a1);
void r226make(T226* C,T2 a1);
void r226remove(T226* C,T2 a1);
void r226move_cursors_left(T226* C,T2 a1);
void r226remove_last(T226* C);
T6 r226cursor_after(T0* a1);
T6 r226conforms_to(T226* C,T0* a1);
T2 r226cursor_index(T226* C,T0* a1);
void r226cursor_forth(T226* C,T0* a1);
void r226resize(T226* C,T2 a1);
T6 r226cursor_same_position(T0* a1,T0* a2);
void r226move_last_cursors_after(T226* C);
void r226delete(T226* C,T0* a1);
void r226cursor_start(T226* C,T0* a1);
T0* r226twin(T226* C);
void r226force_last(T226* C,T0* a1);
T0* r226new_cursor(T226* C);
void r226put_last(T226* C,T0* a1);
T6 r226cursor_off(T0* a1);
void r660copy(T660* C,T0* a1);
void r660set(T660* C,T0* a1,T6 a2,T6 a3);
T6 r660is_equal(T660* C,T0* a1);
T6 r660same_position(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
T6 r660same_type(T660* C,T0* a1);
void r660make(T660* C,T0* a1);
T6 r660conforms_to(T660* C,T0* a1);
void r660set_after(T660* C);
T0* r660twin(T660* C);
T6 r667is_equal(T667* C,T0* a1);
T6 r667se_assigned_from(T0* a1);
T6 r667conforms_to(T667* C,T0* a1);
T0* r667twin(T667* C);
T6 r663is_equal(T663* C,T0* a1);
T6 r663se_assigned_from(T0* a1);
T6 r663conforms_to(T663* C,T0* a1);
T0* r663twin(T663* C);
void r523clear_all(T0* a1);
T6 r523is_equal(T523* C,T0* a1);
T6 r523se_assigned_from(T0* a1);
T0* r523make(T2 a1);
T6 r523conforms_to(T523* C,T0* a1);
T0* r523resize(T0* a1,T2 a2);
T0* r523twin(T523* C);
T6 r361is_equal(T361* C,T0* a1);
T6 r361se_assigned_from(T0* a1);
T0* r361make(T2 a1);
T6 r361conforms_to(T361* C,T0* a1);
T0* r361resize(T0* a1,T2 a2);
T0* r361twin(T361* C);
T6 r414is_equal(T414* C,T0* a1);
T6 r414se_assigned_from(T0* a1);
void r414make(T414* C,T2 a1);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
void r599copy(T599* C,T0* a1);
void r599set(T599* C,T0* a1,T6 a2,T6 a3);
T6 r599is_equal(T599* C,T0* a1);
T6 r599same_position(T599* C,T0* a1);
T6 r599se_assigned_from(T0* a1);
T6 r599same_type(T599* C,T0* a1);
void r599make(T599* C,T0* a1);
T6 r599conforms_to(T599* C,T0* a1);
void r599set_after(T599* C);
T0* r599twin(T599* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
T0* r121to_fixed_array(T0* a1);
T0* r121make(T2 a1);
T0* r121make_from_array(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T0* r121resize(T0* a1,T2 a2);
T0* r121twin(T121* C);
void r296clear_all(T0* a1);
T6 r296is_equal(T296* C,T0* a1);
T6 r296se_assigned_from(T0* a1);
T0* r296make(T2 a1);
T6 r296conforms_to(T296* C,T0* a1);
T0* r296resize(T0* a1,T2 a2);
T0* r296twin(T296* C);
void r88copy(T88* C,T0* a1);
void r88set(T88* C,T0* a1,T6 a2,T6 a3);
T6 r88is_equal(T88* C,T0* a1);
T6 r88same_position(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T6 r88same_type(T88* C,T0* a1);
void r88make(T88* C,T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88set_after(T88* C);
T0* r88twin(T88* C);
T6 r738is_equal(T738* C,T0* a1);
T6 r738se_assigned_from(T0* a1);
void r738make(T738* C,T0* a1,T0* a2);
T6 r738conforms_to(T738* C,T0* a1);
T0* r738twin(T738* C);
void r164copy(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
T0* r164item(T164* C);
T6 r164same_position(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
T6 r164after(T164* C);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C,T0* a1);
T6 r164off(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
T0* r164twin(T164* C);
T2 r627new_capacity(T2 a1);
void r627copy(T627* C,T0* a1);
void r627force(T627* C,T6 a1,T0* a2);
void r627make_clashes(T627* C,T2 a1);
T6 r627cursor_item(T627* C,T0* a1);
void r627search_position(T627* C,T0* a1);
T6 r627is_equal(T627* C,T0* a1);
void r627remove_traversing_cursor(T627* C,T0* a1);
void r627clone_slots(T627* C);
extern T0*oBC108FIXED_INTEGER_ARRAY_;
void r627keys_resize(T627* C,T2 a1);
T6 r627item(T627* C,T0* a1);
void r627clone_clashes(T627* C);
void r627move_all_cursors_after(T627* C);
void r627make_items(T627* C,T2 a1);
void r627add_traversing_cursor(T627* C,T0* a1);
T6 r627se_assigned_from(T0* a1);
T0* r627clone(T0* a1);
T6 r627same_type(T627* C,T0* a1);
void r627make(T627* C,T2 a1);
T0* r627cursor_key(T627* C,T0* a1);
void r627clone_items(T627* C);
T6 r627cursor_after(T0* a1);
T6 r627conforms_to(T627* C,T0* a1);
T6 r627has(T627* C,T0* a1);
void r627make_keys(T627* C,T2 a1);
T2 r627hash_position(T627* C,T0* a1);
void r627cursor_forth(T627* C,T0* a1);
void r627items_resize(T627* C,T2 a1);
void r627clone_keys(T627* C);
void r627make_with_equality_testers(T627* C,T2 a1,T0* a2,T0* a3);
void r627resize(T627* C,T2 a1);
T6 r627cursor_same_position(T0* a1,T0* a2);
void r627cursor_start(T627* C,T0* a1);
void r627clashes_resize(T627* C,T2 a1);
void r627slots_resize(T627* C,T2 a1);
T0* r627twin(T627* C);
T0* r627new_cursor(T627* C);
void r627make_slots(T627* C,T2 a1);
T2 r627new_modulus(T2 a1);
T6 r627cursor_off(T0* a1);
T6 r433is_equal(T433* C,T0* a1);
T6 r433se_assigned_from(T0* a1);
T0* r433make(T2 a1);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433resize(T0* a1,T2 a2);
T0* r433twin(T433* C);
void r480copy(T480* C,T0* a1);
void r480make_clashes(T480* C,T2 a1);
void r480search_position(T480* C,T0* a1);
T6 r480is_equal(T480* C,T0* a1);
void r480remove_traversing_cursor(T480* C,T0* a1);
void r480clone_slots(T480* C);
T2 r480item(T480* C,T0* a1);
void r480clone_clashes(T480* C);
void r480move_all_cursors_after(T480* C);
void r480make_items(T480* C,T2 a1);
void r480add_traversing_cursor(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
T0* r480clone(T0* a1);
T6 r480same_type(T480* C,T0* a1);
void r480clone_items(T480* C);
T6 r480conforms_to(T480* C,T0* a1);
T6 r480has(T480* C,T0* a1);
void r480make_keys(T480* C,T2 a1);
T2 r480hash_position(T480* C,T0* a1);
void r480clone_keys(T480* C);
void r480make_with_equality_testers(T480* C,T2 a1,T0* a2,T0* a3);
T6 r480cursor_same_position(T0* a1,T0* a2);
T0* r480twin(T480* C);
T0* r480new_cursor(T480* C);
void r480make_slots(T480* C,T2 a1);
T2 r480new_modulus(T2 a1);
T6 r480cursor_off(T0* a1);
void r356copy(T356* C,T0* a1);
T6 r356is_equal(T356* C,T0* a1);
T6 r356same_position(T356* C,T0* a1);
T6 r356se_assigned_from(T0* a1);
T6 r356same_type(T356* C,T0* a1);
void r356make(T356* C,T0* a1);
T6 r356off(T356* C);
T6 r356conforms_to(T356* C,T0* a1);
T0* r356twin(T356* C);
T6 r140is_equal(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140make(T140* C,T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140twin(T140* C);
T6 r755is_equal(T755* C,T0* a1);
T6 r755se_assigned_from(T0* a1);
T6 r755conforms_to(T755* C,T0* a1);
T0* r755twin(T755* C);
void r646copy(T646* C,T0* a1);
T0* r646key(T646* C);
T6 r646is_equal(T646* C,T0* a1);
T6 r646item(T646* C);
T6 r646same_position(T646* C,T0* a1);
T6 r646se_assigned_from(T0* a1);
T6 r646after(T646* C);
T6 r646same_type(T646* C,T0* a1);
void r646make(T646* C,T0* a1);
T6 r646off(T646* C);
T6 r646conforms_to(T646* C,T0* a1);
T0* r646twin(T646* C);
void r679copy(T679* C,T0* a1);
void r679set(T679* C,T0* a1,T6 a2,T6 a3);
T6 r679is_equal(T679* C,T0* a1);
T6 r679same_position(T679* C,T0* a1);
T6 r679se_assigned_from(T0* a1);
T6 r679is_last(T679* C);
T6 r679same_type(T679* C,T0* a1);
void r679make(T679* C,T0* a1);
T6 r679conforms_to(T679* C,T0* a1);
void r679set_after(T679* C);
T0* r679twin(T679* C);
void r609copy(T609* C,T0* a1);
T6 r609is_equal(T609* C,T0* a1);
void r609remove_traversing_cursor(T609* C,T0* a1);
void r609move_all_cursors_after(T609* C);
void r609add_traversing_cursor(T609* C,T0* a1);
T6 r609se_assigned_from(T0* a1);
T6 r609same_type(T609* C,T0* a1);
void r609make(T609* C);
T6 r609conforms_to(T609* C,T0* a1);
void r609cursor_forth(T609* C,T0* a1);
void r609cursor_start(T609* C,T0* a1);
T0* r609twin(T609* C);
T0* r609new_cursor(T609* C);
void r609put_last(T609* C,T0* a1);
T6 r609cursor_off(T0* a1);
void r30copy(T30* C,T0* a1);
void r30set(T30* C,T0* a1,T6 a2,T6 a3);
T6 r30is_equal(T30* C,T0* a1);
T6 r30same_position(T30* C,T0* a1);
T6 r30se_assigned_from(T0* a1);
T6 r30same_type(T30* C,T0* a1);
void r30make(T30* C,T0* a1);
T6 r30conforms_to(T30* C,T0* a1);
void r30set_after(T30* C);
T0* r30twin(T30* C);
T2 r222new_capacity(T2 a1);
void r222copy(T222* C,T0* a1);
T6 r222extendible(T222* C,T2 a1);
T6 r222is_equal(T222* C,T0* a1);
void r222remove_traversing_cursor(T222* C,T0* a1);
void r222move_all_cursors_after(T222* C);
void r222add_traversing_cursor(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
T0* r222clone(T0* a1);
T6 r222cursor_before(T0* a1);
T6 r222same_type(T222* C,T0* a1);
void r222make(T222* C,T2 a1);
T6 r222cursor_after(T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222resize(T222* C,T2 a1);
T6 r222cursor_same_position(T0* a1,T0* a2);
T0* r222twin(T222* C);
void r222force_last(T222* C,T0* a1);
T0* r222new_cursor(T222* C);
void r222put_last(T222* C,T0* a1);
T6 r222cursor_off(T0* a1);
void r387copy(T387* C,T0* a1);
T6 r387is_equal(T387* C,T0* a1);
T6 r387same_position(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
T6 r387same_type(T387* C,T0* a1);
void r387make(T387* C,T0* a1);
T6 r387off(T387* C);
T6 r387conforms_to(T387* C,T0* a1);
T0* r387twin(T387* C);
void r550copy(T550* C,T0* a1);
T6 r550is_equal(T550* C,T0* a1);
T6 r550same_position(T550* C,T0* a1);
T6 r550se_assigned_from(T0* a1);
T6 r550same_type(T550* C,T0* a1);
void r550make(T550* C,T0* a1);
T6 r550off(T550* C);
T6 r550conforms_to(T550* C,T0* a1);
T0* r550twin(T550* C);
void r450copy(T450* C,T0* a1);
void r450make_clashes(T450* C,T2 a1);
void r450search_position(T450* C,T0* a1);
T6 r450is_equal(T450* C,T0* a1);
void r450remove_traversing_cursor(T450* C,T0* a1);
void r450clone_slots(T450* C);
T2 r450item(T450* C,T0* a1);
void r450clone_clashes(T450* C);
void r450move_all_cursors_after(T450* C);
void r450make_items(T450* C,T2 a1);
void r450add_traversing_cursor(T450* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
T0* r450clone(T0* a1);
T6 r450same_type(T450* C,T0* a1);
void r450clone_items(T450* C);
T6 r450conforms_to(T450* C,T0* a1);
T6 r450has(T450* C,T0* a1);
void r450make_keys(T450* C,T2 a1);
T2 r450hash_position(T450* C,T0* a1);
void r450clone_keys(T450* C);
void r450make_with_equality_testers(T450* C,T2 a1,T0* a2,T0* a3);
T6 r450cursor_same_position(T0* a1,T0* a2);
T0* r450twin(T450* C);
T0* r450new_cursor(T450* C);
void r450make_slots(T450* C,T2 a1);
T2 r450new_modulus(T2 a1);
T6 r450cursor_off(T0* a1);
void r666copy(T666* C,T0* a1);
T6 r666cursor_is_last(T666* C,T0* a1);
T6 r666is_equal(T666* C,T0* a1);
void r666remove_traversing_cursor(T666* C,T0* a1);
void r666move_all_cursors_after(T666* C);
void r666add_traversing_cursor(T666* C,T0* a1);
T6 r666se_assigned_from(T0* a1);
T6 r666same_type(T666* C,T0* a1);
void r666make(T666* C);
T6 r666conforms_to(T666* C,T0* a1);
void r666cursor_forth(T666* C,T0* a1);
void r666cursor_start(T666* C,T0* a1);
T0* r666twin(T666* C);
void r666force_last(T666* C,T0* a1);
T0* r666new_cursor(T666* C);
T6 r666cursor_off(T0* a1);
void r464copy(T464* C,T0* a1);
T6 r464is_equal(T464* C,T0* a1);
void r464remove_traversing_cursor(T464* C,T0* a1);
void r464move_all_cursors_after(T464* C);
void r464add_traversing_cursor(T464* C,T0* a1);
T6 r464se_assigned_from(T0* a1);
T0* r464clone(T0* a1);
T6 r464cursor_before(T0* a1);
T6 r464same_type(T464* C,T0* a1);
void r464make(T464* C,T2 a1);
T6 r464cursor_after(T0* a1);
T6 r464conforms_to(T464* C,T0* a1);
T6 r464cursor_same_position(T0* a1,T0* a2);
T0* r464twin(T464* C);
T0* r464new_cursor(T464* C);
T6 r464cursor_off(T0* a1);
T6 r701is_equal(T701* C,T0* a1);
T6 r701se_assigned_from(T0* a1);
T6 r701conforms_to(T701* C,T0* a1);
T6 r701test(T0* a1,T0* a2);
T0* r701twin(T701* C);
T6 r340is_equal(T340* C,T0* a1);
T6 r340se_assigned_from(T0* a1);
T0* r340make(T2 a1);
T6 r340conforms_to(T340* C,T0* a1);
T0* r340resize(T0* a1,T2 a2);
T0* r340twin(T340* C);
void r739copy(T739* C,T0* a1);
T0* r739cursor_item(T0* a1);
T6 r739is_equal(T739* C,T0* a1);
void r739remove_traversing_cursor(T739* C,T0* a1);
void r739move_all_cursors_after(T739* C);
void r739add_traversing_cursor(T739* C,T0* a1);
T6 r739se_assigned_from(T0* a1);
T6 r739cursor_before(T0* a1);
T6 r739same_type(T739* C,T0* a1);
void r739make(T739* C);
T6 r739cursor_after(T0* a1);
T6 r739conforms_to(T739* C,T0* a1);
void r739cursor_forth(T739* C,T0* a1);
void r739cursor_start(T739* C,T0* a1);
T0* r739twin(T739* C);
T0* r739new_cursor(T739* C);
void r739put_last(T739* C,T0* a1);
T6 r739cursor_off(T0* a1);
void r322copy(T322* C,T0* a1);
T6 r322is_equal(T322* C,T0* a1);
T6 r322same_position(T322* C,T0* a1);
T6 r322se_assigned_from(T0* a1);
T6 r322same_type(T322* C,T0* a1);
void r322make(T322* C,T0* a1);
T6 r322off(T322* C);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322twin(T322* C);
T6 r245is_equal(T245* C,T0* a1);
T6 r245se_assigned_from(T0* a1);
T0* r245make(T2 a1);
T6 r245conforms_to(T245* C,T0* a1);
T0* r245resize(T0* a1,T2 a2);
T0* r245twin(T245* C);
T6 r595is_equal(T595* C,T0* a1);
T6 r595se_assigned_from(T0* a1);
T6 r595conforms_to(T595* C,T0* a1);
T0* r595twin(T595* C);
void r709copy(T709* C,T0* a1);
T6 r709is_equal(T709* C,T0* a1);
T6 r709same_position(T709* C,T0* a1);
T6 r709se_assigned_from(T0* a1);
T6 r709same_type(T709* C,T0* a1);
void r709make(T709* C,T0* a1);
T6 r709off(T709* C);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
void r416copy(T416* C,T0* a1);
T6 r416is_equal(T416* C,T0* a1);
void r416remove_traversing_cursor(T416* C,T0* a1);
void r416move_all_cursors_after(T416* C);
void r416add_traversing_cursor(T416* C,T0* a1);
T6 r416se_assigned_from(T0* a1);
T0* r416clone(T0* a1);
T6 r416cursor_before(T0* a1);
T6 r416same_type(T416* C,T0* a1);
void r416make(T416* C,T2 a1);
T6 r416cursor_after(T0* a1);
T6 r416conforms_to(T416* C,T0* a1);
T6 r416cursor_same_position(T0* a1,T0* a2);
T0* r416twin(T416* C);
T0* r416new_cursor(T416* C);
T6 r416cursor_off(T0* a1);
void r342copy(T342* C,T0* a1);
void r342make_clashes(T342* C,T2 a1);
void r342search_position(T342* C,T2 a1);
T6 r342is_equal(T342* C,T0* a1);
void r342remove_traversing_cursor(T342* C,T0* a1);
void r342clone_slots(T342* C);
T0* r342item(T342* C,T2 a1);
void r342clone_clashes(T342* C);
void r342move_all_cursors_after(T342* C);
void r342make_items(T342* C,T2 a1);
void r342add_traversing_cursor(T342* C,T0* a1);
T6 r342se_assigned_from(T0* a1);
T0* r342clone(T0* a1);
T6 r342same_type(T342* C,T0* a1);
void r342clone_items(T342* C);
T6 r342conforms_to(T342* C,T0* a1);
T6 r342has(T342* C,T2 a1);
void r342make_keys(T342* C,T2 a1);
T2 r342hash_position(T342* C,T2 a1);
void r342clone_keys(T342* C);
void r342make_with_equality_testers(T342* C,T2 a1,T0* a2,T0* a3);
T6 r342cursor_same_position(T0* a1,T0* a2);
T0* r342twin(T342* C);
T0* r342new_cursor(T342* C);
void r342make_slots(T342* C,T2 a1);
T2 r342new_modulus(T2 a1);
T6 r342cursor_off(T0* a1);
T2 r261new_capacity(T2 a1);
void r261copy(T261* C,T0* a1);
void r261make_clashes(T261* C,T2 a1);
void r261search_position(T261* C,T0* a1);
T6 r261is_equal(T261* C,T0* a1);
void r261remove_traversing_cursor(T261* C,T0* a1);
void r261clone_slots(T261* C);
void r261keys_resize(T261* C,T2 a1);
void r261clone_clashes(T261* C);
T0* r261item(T261* C,T0* a1);
void r261move_all_cursors_after(T261* C);
void r261make_items(T261* C,T2 a1);
void r261add_traversing_cursor(T261* C,T0* a1);
T6 r261se_assigned_from(T0* a1);
T0* r261clone(T0* a1);
T6 r261same_type(T261* C,T0* a1);
void r261make(T261* C,T2 a1);
void r261clone_items(T261* C);
T6 r261conforms_to(T261* C,T0* a1);
T6 r261has(T261* C,T0* a1);
void r261make_keys(T261* C,T2 a1);
T2 r261hash_position(T261* C,T0* a1);
void r261items_resize(T261* C,T2 a1);
void r261clone_keys(T261* C);
void r261make_with_equality_testers(T261* C,T2 a1,T0* a2,T0* a3);
void r261resize(T261* C,T2 a1);
T6 r261cursor_same_position(T0* a1,T0* a2);
void r261clashes_resize(T261* C,T2 a1);
void r261slots_resize(T261* C,T2 a1);
T0* r261twin(T261* C);
void r261force_last(T261* C,T0* a1,T0* a2);
T0* r261new_cursor(T261* C);
void r261make_slots(T261* C,T2 a1);
T2 r261new_modulus(T2 a1);
T6 r261cursor_off(T0* a1);
T6 r460is_equal(T460* C,T0* a1);
T6 r460se_assigned_from(T0* a1);
T0* r460make(T2 a1);
T6 r460conforms_to(T460* C,T0* a1);
T0* r460resize(T0* a1,T2 a2);
T0* r460twin(T460* C);
void r151copy(T151* C,T0* a1);
void r151append_last(T151* C,T0* a1);
T0* r151cursor_item(T0* a1);
T6 r151cursor_is_last(T151* C,T0* a1);
T6 r151is_equal(T151* C,T0* a1);
void r151remove_traversing_cursor(T151* C,T0* a1);
void r151move_all_cursors_after(T151* C);
void r151add_traversing_cursor(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
T6 r151same_type(T151* C,T0* a1);
void r151make(T151* C);
T6 r151cursor_after(T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
void r151cursor_forth(T151* C,T0* a1);
void r151make_from_linear(T151* C,T0* a1);
void r151cursor_start(T151* C,T0* a1);
T0* r151twin(T151* C);
void r151force_last(T151* C,T0* a1);
T0* r151new_cursor(T151* C);
void r151put_last(T151* C,T0* a1);
T6 r151cursor_off(T0* a1);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r635is_equal(T635* C,T0* a1);
T6 r635se_assigned_from(T0* a1);
T0* r635make(T2 a1);
T6 r635conforms_to(T635* C,T0* a1);
T0* r635resize(T0* a1,T2 a2);
T0* r635twin(T635* C);
void r521subcopy(T0* a1,T0* a2,T2 a3,T2 a4,T2 a5);
T6 r521is_equal(T521* C,T0* a1);
T6 r521se_assigned_from(T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
T0* r521twin(T521* C);
T6 r406is_equal(T406* C,T0* a1);
T6 r406se_assigned_from(T0* a1);
T0* r406make(T2 a1);
T6 r406conforms_to(T406* C,T0* a1);
T0* r406resize(T0* a1,T2 a2);
T0* r406twin(T406* C);
void r475copy(T475* C,T0* a1);
T6 r475is_equal(T475* C,T0* a1);
T6 r475same_position(T475* C,T0* a1);
T6 r475se_assigned_from(T0* a1);
T6 r475same_type(T475* C,T0* a1);
T6 r475off(T475* C);
T6 r475conforms_to(T475* C,T0* a1);
T0* r475twin(T475* C);
T6 r264is_equal(T264* C,T0* a1);
T6 r264se_assigned_from(T0* a1);
T6 r264conforms_to(T264* C,T0* a1);
T6 r264test(T0* a1,T0* a2);
T0* r264twin(T264* C);
void r368copy(T368* C,T0* a1);
void r368make_clashes(T368* C,T2 a1);
void r368search_position(T368* C,T0* a1);
T6 r368is_equal(T368* C,T0* a1);
void r368remove_traversing_cursor(T368* C,T0* a1);
void r368clone_slots(T368* C);
T0* r368items_item(T368* C,T2 a1);
void r368clone_clashes(T368* C);
void r368move_all_cursors_after(T368* C);
void r368make_items(T368* C,T2 a1);
void r368add_traversing_cursor(T368* C,T0* a1);
T6 r368se_assigned_from(T0* a1);
T0* r368clone(T0* a1);
T6 r368same_type(T368* C,T0* a1);
void r368make(T368* C,T2 a1);
T6 r368equal(T0* a1,T0* a2);
void r368clone_items(T368* C);
T6 r368same_equality_tester(T368* C,T0* a1);
T6 r368conforms_to(T368* C,T0* a1);
T6 r368has(T368* C,T0* a1);
T2 r368hash_position(T368* C,T0* a1);
T6 r368cursor_same_position(T0* a1,T0* a2);
T0* r368twin(T368* C);
T0* r368new_cursor(T368* C);
void r368make_slots(T368* C,T2 a1);
T2 r368new_modulus(T2 a1);
T6 r368cursor_off(T0* a1);
void r307copy(T307* C,T0* a1);
void r307wipe_out(T307* C);
T0* r307keys_item(T307* C,T2 a1);
void r307make_clashes(T307* C,T2 a1);
void r307search_position(T307* C,T0* a1);
T6 r307is_equal(T307* C,T0* a1);
void r307remove_traversing_cursor(T307* C,T0* a1);
void r307clone_slots(T307* C);
void r307keys_resize(T307* C,T2 a1);
T0* r307item(T307* C,T0* a1);
void r307clone_clashes(T307* C);
void r307make_items(T307* C,T2 a1);
void r307move_all_cursors_after(T307* C);
void r307add_traversing_cursor(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T0* r307clone(T0* a1);
T6 r307same_type(T307* C,T0* a1);
void r307slots_wipe_out(T307* C);
void r307make(T307* C,T2 a1);
void r307clashes_wipe_out(T307* C);
void r307clone_items(T307* C);
T6 r307conforms_to(T307* C,T0* a1);
T6 r307has(T307* C,T0* a1);
void r307make_keys(T307* C,T2 a1);
T2 r307hash_position(T307* C,T0* a1);
void r307items_wipe_out(T307* C);
void r307items_resize(T307* C,T2 a1);
void r307clone_keys(T307* C);
void r307make_with_equality_testers(T307* C,T2 a1,T0* a2,T0* a3);
void r307resize(T307* C,T2 a1);
T6 r307cursor_same_position(T0* a1,T0* a2);
void r307clashes_resize(T307* C,T2 a1);
void r307slots_resize(T307* C,T2 a1);
T0* r307twin(T307* C);
void r307keys_wipe_out(T307* C);
T0* r307new_cursor(T307* C);
void r307make_slots(T307* C,T2 a1);
void r307keys_put(T307* C,T0* a1,T2 a2);
void r307put_last(T307* C,T0* a1,T0* a2);
T2 r307new_modulus(T2 a1);
void r307move_all_cursors(T307* C,T2 a1,T2 a2);
T6 r307cursor_off(T0* a1);
void r307compress(T307* C);
T6 r726is_equal(T726* C,T0* a1);
T6 r726se_assigned_from(T0* a1);
T6 r726conforms_to(T726* C,T0* a1);
T0* r726twin(T726* C);
void r326copy(T326* C,T0* a1);
T6 r326is_equal(T326* C,T0* a1);
void r326remove_traversing_cursor(T326* C,T0* a1);
void r326move_all_cursors_after(T326* C);
void r326add_traversing_cursor(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T6 r326same_type(T326* C,T0* a1);
void r326make(T326* C);
T6 r326conforms_to(T326* C,T0* a1);
T0* r326twin(T326* C);
T0* r326new_cursor(T326* C);
T6 r478is_equal(T478* C,T0* a1);
T6 r478se_assigned_from(T0* a1);
void r478make(T478* C,T2 a1);
T6 r478conforms_to(T478* C,T0* a1);
T0* r478twin(T478* C);
T6 r713is_equal(T713* C,T0* a1);
T6 r713se_assigned_from(T0* a1);
T0* r713make(T2 a1);
T6 r713conforms_to(T713* C,T0* a1);
T0* r713resize(T0* a1,T2 a2);
T0* r713twin(T713* C);
void r486copy(T486* C,T0* a1);
T6 r486is_equal(T486* C,T0* a1);
T6 r486same_position(T486* C,T0* a1);
T6 r486se_assigned_from(T0* a1);
T6 r486same_type(T486* C,T0* a1);
void r486make(T486* C,T0* a1);
T6 r486off(T486* C);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
void r337copy(T337* C,T0* a1);
T6 r337is_equal(T337* C,T0* a1);
T6 r337same_position(T337* C,T0* a1);
T6 r337se_assigned_from(T0* a1);
T6 r337same_type(T337* C,T0* a1);
void r337make(T337* C,T0* a1);
T6 r337conforms_to(T337* C,T0* a1);
void r337set_after(T337* C);
T0* r337twin(T337* C);
T6 r302is_equal(T302* C,T0* a1);
T6 r302se_assigned_from(T0* a1);
T0* r302make(T2 a1);
T6 r302conforms_to(T302* C,T0* a1);
T0* r302resize(T0* a1,T2 a2);
T0* r302twin(T302* C);
T6 r737is_equal(T737* C,T0* a1);
T6 r737se_assigned_from(T0* a1);
void r737make(T737* C,T0* a1,T0* a2);
T6 r737conforms_to(T737* C,T0* a1);
T0* r737twin(T737* C);
T6 r561is_equal(T561* C,T0* a1);
T6 r561se_assigned_from(T0* a1);
T6 r561conforms_to(T561* C,T0* a1);
T0* r561twin(T561* C);
T6 r273is_equal(T273* C,T0* a1);
T6 r273se_assigned_from(T0* a1);
T0* r273make(T2 a1);
T6 r273conforms_to(T273* C,T0* a1);
T0* r273resize(T0* a1,T2 a2);
T0* r273twin(T273* C);
void r292copy(T292* C,T0* a1);
T6 r292is_equal(T292* C,T0* a1);
T0* r292item(T292* C);
T6 r292same_position(T292* C,T0* a1);
T6 r292se_assigned_from(T0* a1);
T6 r292after(T292* C);
T6 r292same_type(T292* C,T0* a1);
void r292make(T292* C,T0* a1);
T6 r292off(T292* C);
T6 r292conforms_to(T292* C,T0* a1);
T0* r292twin(T292* C);
T6 r275is_equal(T275* C,T0* a1);
T6 r275se_assigned_from(T0* a1);
T0* r275make(T2 a1);
T6 r275conforms_to(T275* C,T0* a1);
T0* r275resize(T0* a1,T2 a2);
T0* r275twin(T275* C);
T2 r114new_capacity(T2 a1);
void r114copy(T114* C,T0* a1);
void r114force(T114* C,T0* a1,T0* a2);
void r114make_clashes(T114* C,T2 a1);
T0* r114cursor_item(T114* C,T0* a1);
void r114search_position(T114* C,T0* a1);
T6 r114is_equal(T114* C,T0* a1);
void r114remove_traversing_cursor(T114* C,T0* a1);
void r114clone_slots(T114* C);
void r114keys_resize(T114* C,T2 a1);
T0* r114item(T114* C,T0* a1);
void r114clone_clashes(T114* C);
void r114move_all_cursors_after(T114* C);
void r114make_items(T114* C,T2 a1);
void r114add_traversing_cursor(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
T6 r114same_type(T114* C,T0* a1);
void r114make(T114* C,T2 a1);
void r114clone_items(T114* C);
T6 r114cursor_after(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has(T114* C,T0* a1);
void r114make_keys(T114* C,T2 a1);
T2 r114hash_position(T114* C,T0* a1);
void r114cursor_forth(T114* C,T0* a1);
void r114items_resize(T114* C,T2 a1);
void r114clone_keys(T114* C);
void r114make_with_equality_testers(T114* C,T2 a1,T0* a2,T0* a3);
void r114resize(T114* C,T2 a1);
T6 r114cursor_same_position(T0* a1,T0* a2);
void r114cursor_start(T114* C,T0* a1);
void r114clashes_resize(T114* C,T2 a1);
void r114slots_resize(T114* C,T2 a1);
T0* r114twin(T114* C);
T0* r114new_cursor(T114* C);
void r114make_slots(T114* C,T2 a1);
T2 r114new_modulus(T2 a1);
T6 r114cursor_off(T0* a1);
void r141copy(T141* C,T0* a1);
void r141set(T141* C,T0* a1,T6 a2,T6 a3);
T6 r141is_equal(T141* C,T0* a1);
T6 r141same_position(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
T6 r141is_last(T141* C);
T6 r141same_type(T141* C,T0* a1);
void r141make(T141* C,T0* a1);
T6 r141conforms_to(T141* C,T0* a1);
void r141set_after(T141* C);
T0* r141twin(T141* C);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
void r649copy(T649* C,T0* a1);
void r649append_last(T649* C,T0* a1);
T0* r649cursor_item(T0* a1);
T6 r649is_equal(T649* C,T0* a1);
void r649remove_traversing_cursor(T649* C,T0* a1);
void r649cursor_go_after(T649* C,T0* a1);
void r649move_all_cursors_after(T649* C);
void r649add_traversing_cursor(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
T6 r649same_type(T649* C,T0* a1);
void r649make(T649* C);
T6 r649cursor_after(T0* a1);
T6 r649conforms_to(T649* C,T0* a1);
void r649cursor_forth(T649* C,T0* a1);
void r649make_from_linear(T649* C,T0* a1);
void r649cursor_start(T649* C,T0* a1);
T0* r649twin(T649* C);
void r649force_last(T649* C,T0* a1);
T0* r649new_cursor(T649* C);
T6 r649cursor_off(T0* a1);
void r83copy(T83* C,T0* a1);
T0* r83cursor_item(T0* a1);
T6 r83is_equal(T83* C,T0* a1);
void r83remove_traversing_cursor(T83* C,T0* a1);
void r83move_all_cursors_after(T83* C);
void r83add_traversing_cursor(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
T6 r83same_type(T83* C,T0* a1);
void r83make(T83* C);
T6 r83cursor_after(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
void r83cursor_forth(T83* C,T0* a1);
void r83cursor_start(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83force_last(T83* C,T0* a1);
T0* r83new_cursor(T83* C);
T6 r83cursor_off(T0* a1);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
T6 r126conforms_to(T126* C,T0* a1);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
void r428copy(T428* C,T0* a1);
T6 r428is_equal(T428* C,T0* a1);
T6 r428same_position(T428* C,T0* a1);
T6 r428se_assigned_from(T0* a1);
T6 r428same_type(T428* C,T0* a1);
T6 r428off(T428* C);
T6 r428conforms_to(T428* C,T0* a1);
T0* r428twin(T428* C);
T6 r280is_equal(T280* C,T0* a1);
T6 r280se_assigned_from(T0* a1);
T6 r280conforms_to(T280* C,T0* a1);
T6 r280test(T0* a1,T0* a2);
T0* r280twin(T280* C);
void r457copy(T457* C,T0* a1);
T6 r457is_equal(T457* C,T0* a1);
T6 r457same_position(T457* C,T0* a1);
T6 r457se_assigned_from(T0* a1);
T6 r457same_type(T457* C,T0* a1);
void r457make(T457* C,T0* a1);
T6 r457off(T457* C);
T6 r457conforms_to(T457* C,T0* a1);
T0* r457twin(T457* C);
void r277copy(T277* C,T0* a1);
T0* r277keys_item(T277* C,T2 a1);
void r277make_clashes(T277* C,T2 a1);
T0* r277cursor_item(T277* C,T0* a1);
void r277search_position(T277* C,T0* a1);
T6 r277is_equal(T277* C,T0* a1);
void r277remove_traversing_cursor(T277* C,T0* a1);
void r277clone_slots(T277* C);
T0* r277item(T277* C,T0* a1);
void r277clone_clashes(T277* C);
void r277move_all_cursors_after(T277* C);
void r277make_items(T277* C,T2 a1);
void r277add_traversing_cursor(T277* C,T0* a1);
T6 r277se_assigned_from(T0* a1);
T0* r277clone(T0* a1);
T6 r277same_type(T277* C,T0* a1);
void r277make(T277* C,T2 a1);
void r277clone_items(T277* C);
T6 r277cursor_after(T0* a1);
T6 r277conforms_to(T277* C,T0* a1);
T6 r277has(T277* C,T0* a1);
void r277make_keys(T277* C,T2 a1);
T2 r277hash_position(T277* C,T0* a1);
void r277cursor_forth(T277* C,T0* a1);
void r277clone_keys(T277* C);
void r277make_with_equality_testers(T277* C,T2 a1,T0* a2,T0* a3);
T6 r277cursor_same_position(T0* a1,T0* a2);
void r277cursor_start(T277* C,T0* a1);
T0* r277twin(T277* C);
T0* r277new_cursor(T277* C);
void r277make_slots(T277* C,T2 a1);
T2 r277new_modulus(T2 a1);
T6 r277cursor_off(T0* a1);
T6 r587is_equal(T587* C,T0* a1);
T6 r587se_assigned_from(T0* a1);
T0* r587make(T2 a1);
T6 r587conforms_to(T587* C,T0* a1);
T0* r587resize(T0* a1,T2 a2);
T0* r587twin(T587* C);
void r540copy(T540* C,T0* a1);
T6 r540is_equal(T540* C,T0* a1);
void r540remove_traversing_cursor(T540* C,T0* a1);
void r540move_all_cursors_after(T540* C);
void r540add_traversing_cursor(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
T0* r540clone(T0* a1);
T6 r540cursor_before(T0* a1);
T6 r540same_type(T540* C,T0* a1);
void r540make(T540* C,T2 a1);
T6 r540cursor_after(T0* a1);
T6 r540conforms_to(T540* C,T0* a1);
T6 r540cursor_same_position(T0* a1,T0* a2);
T0* r540twin(T540* C);
T0* r540new_cursor(T540* C);
T6 r540cursor_off(T0* a1);
void r584copy(T584* C,T0* a1);
T6 r584is_equal(T584* C,T0* a1);
T6 r584same_position(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
T6 r584same_type(T584* C,T0* a1);
T6 r584off(T584* C);
T6 r584conforms_to(T584* C,T0* a1);
T0* r584twin(T584* C);
void r436copy(T436* C,T0* a1);
T6 r436is_equal(T436* C,T0* a1);
void r436remove_traversing_cursor(T436* C,T0* a1);
void r436move_all_cursors_after(T436* C);
void r436add_traversing_cursor(T436* C,T0* a1);
T6 r436se_assigned_from(T0* a1);
T0* r436clone(T0* a1);
T6 r436cursor_before(T0* a1);
T6 r436same_type(T436* C,T0* a1);
void r436make(T436* C,T2 a1);
T6 r436cursor_after(T0* a1);
T6 r436conforms_to(T436* C,T0* a1);
T6 r436cursor_same_position(T0* a1,T0* a2);
T0* r436twin(T436* C);
T0* r436new_cursor(T436* C);
T6 r436cursor_off(T0* a1);
void r447copy(T447* C,T0* a1);
T6 r447is_equal(T447* C,T0* a1);
T6 r447same_position(T447* C,T0* a1);
T6 r447se_assigned_from(T0* a1);
T6 r447same_type(T447* C,T0* a1);
T6 r447off(T447* C);
T6 r447conforms_to(T447* C,T0* a1);
T0* r447twin(T447* C);
void r60copy(T60* C,T0* a1);
T6 r60is_equal(T60* C,T0* a1);
void r60remove_traversing_cursor(T60* C,T0* a1);
void r60move_all_cursors_after(T60* C);
void r60add_traversing_cursor(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
T6 r60same_type(T60* C,T0* a1);
void r60make(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
void r60cursor_forth(T60* C,T0* a1);
void r60cursor_start(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60force_last(T60* C,T0* a1);
T0* r60new_cursor(T60* C);
T6 r60cursor_off(T0* a1);
void r389copy(T389* C,T0* a1);
T0* r389keys_item(T389* C,T2 a1);
void r389make_clashes(T389* C,T2 a1);
void r389search_position(T389* C,T0* a1);
T6 r389is_equal(T389* C,T0* a1);
void r389remove_traversing_cursor(T389* C,T0* a1);
void r389clone_slots(T389* C);
T0* r389item(T389* C,T0* a1);
void r389clone_clashes(T389* C);
void r389move_all_cursors_after(T389* C);
void r389make_items(T389* C,T2 a1);
void r389add_traversing_cursor(T389* C,T0* a1);
T6 r389se_assigned_from(T0* a1);
T0* r389clone(T0* a1);
T6 r389same_type(T389* C,T0* a1);
void r389make(T389* C,T2 a1);
void r389clone_items(T389* C);
T6 r389conforms_to(T389* C,T0* a1);
T6 r389has(T389* C,T0* a1);
void r389make_keys(T389* C,T2 a1);
T2 r389hash_position(T389* C,T0* a1);
void r389clone_keys(T389* C);
void r389make_with_equality_testers(T389* C,T2 a1,T0* a2,T0* a3);
T6 r389cursor_same_position(T0* a1,T0* a2);
T0* r389twin(T389* C);
T0* r389new_cursor(T389* C);
void r389make_slots(T389* C,T2 a1);
T2 r389new_modulus(T2 a1);
T6 r389cursor_off(T0* a1);
T6 r619is_equal(T619* C,T0* a1);
T6 r619se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r619Arguments(void);
void r619make(T619* C,T0* a1,T0* a2,T0* a3);
T0* r619message(T619* C,T0* a1);
T6 r619conforms_to(T619* C,T0* a1);
T0* r619twin(T619* C);
T0* r619default_message(T619* C);
extern T0*oBC93STRING_;
T6 r682is_equal(T682* C,T0* a1);
T6 r682se_assigned_from(T0* a1);
T0* r682Arguments(void);
void r682make(T682* C,T0* a1,T0* a2,T0* a3);
T0* r682message(T682* C,T0* a1);
T6 r682conforms_to(T682* C,T0* a1);
T0* r682twin(T682* C);
T0* r682default_message(T682* C);
T6 r684is_equal(T684* C,T0* a1);
T0* r684new_tree_parser(T684* C);
T6 r684se_assigned_from(T0* a1);
T0* r684new_tree_parser_imp(T684* C);
T6 r684conforms_to(T684* C,T0* a1);
T0* r684twin(T684* C);
T6 r684is_available(T684* C);
T6 r172is_closed(T172* C);
void r172old_close(T172* C);
T6 r172is_equal(T172* C,T0* a1);
T2 r172read_to_string(T172* C,T0* a1,T2 a2,T2 a3);
void r172open_read(T172* C);
T6 r172se_assigned_from(T0* a1);
void r172old_read_character(T172* C);
T6 r172old_end_of_file(T172* C);
void r172read_character(T172* C);
void r172close(T172* C);
void r172make(T172* C,T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
void r172connect_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r589is_equal(T589* C,T0* a1);
T6 r589se_assigned_from(T0* a1);
void r589make_with_variables(T589* C,T0* a1,T0* a2);
T6 r589conforms_to(T589* C,T0* a1);
extern T0*oBC191uc_cluster;
extern int fBC191uc_cluster;
T0* r589uc_cluster(void);
void r589parse_file(T589* C,T0* a1);
T0* r589twin(T589* C);
extern T0*oBC191uc_system;
extern int fBC191uc_system;
T0* r589uc_system(void);
T0* r589new_unicode_string(T0* a1);
T6 r622is_equal(T622* C,T0* a1);
T6 r622se_assigned_from(T0* a1);
T0* r622Arguments(void);
void r622make(T622* C);
T0* r622message(T622* C,T0* a1);
T6 r622conforms_to(T622* C,T0* a1);
T0* r622twin(T622* C);
T0* r622default_message(T622* C);
T6 r648is_equal(T648* C,T0* a1);
T6 r648se_assigned_from(T0* a1);
void r648make(T648* C,T0* a1);
T6 r648conforms_to(T648* C,T0* a1);
T0* r648twin(T648* C);
T6 r189is_equal(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
void r189make_with_variables(T189* C,T0* a1,T0* a2);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189uc_cluster(void);
void r189parse_file(T189* C,T0* a1);
T0* r189twin(T189* C);
T0* r189uc_system(void);
T0* r189new_unicode_string(T0* a1);
T6 r210is_equal(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
void r210unmount_root(T210* C,T0* a1);
void r210make(T210* C,T0* a1);
void r210mount(T210* C,T0* a1);
T6 r210conforms_to(T210* C,T0* a1);
void r210unmount(T210* C);
T0* r210twin(T210* C);
void r210mount_root(T210* C,T0* a1);
void r215set_optimize(T215* C,T6 a1);
T6 r215is_equal(T215* C,T0* a1);
void r215set_ensure(T215* C,T6 a1);
T6 r215se_assigned_from(T0* a1);
void r215make(T215* C);
void r215set_check(T215* C,T6 a1);
T6 r215conforms_to(T215* C,T0* a1);
void r215set_invariant(T215* C,T6 a1);
void r215set_loop(T215* C,T6 a1);
void r215set_debug(T215* C,T6 a1);
T0* r215twin(T215* C);
void r215set_require(T215* C,T6 a1);
T6 r259is_equal(T259* C,T0* a1);
T6 r259se_assigned_from(T0* a1);
void r259make(T259* C,T0* a1,T2 a2,T0* a3);
T6 r259conforms_to(T259* C,T0* a1);
extern T0*oBC260feature_name_tester;
T0* r259twin(T259* C);
T6 r214has_exported_features(T214* C);
T6 r214is_equal(T214* C,T0* a1);
T6 r214se_assigned_from(T0* a1);
void r214merge(T214* C,T0* a1);
void r214make(T214* C);
T6 r214is_empty(T214* C);
T6 r214conforms_to(T214* C,T0* a1);
T0* r214cloned_externals(T214* C);
T6 r214has_include_directories(T214* C);
T6 r214has_link_libraries(T214* C);
T0* r214twin(T214* C);
T6 r220is_equal(T220* C,T0* a1);
T6 r220se_assigned_from(T0* a1);
extern T0*oBC34std;
T6 r220conforms_to(T220* C,T0* a1);
T0* r220twin(T220* C);
void r220make_standard(T220* C);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532twin(T532* C);
void r592put(T592* C,T0* a1,T0* a2);
T6 r592is_equal(T592* C,T0* a1);
T0* r592item(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
void r592make(T592* C);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
T6 r190is_equal(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
void r190make_with_variables(T190* C,T0* a1,T0* a2);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190uc_cluster(void);
void r190parse_file(T190* C,T0* a1);
T0* r190twin(T190* C);
T0* r190uc_system(void);
T0* r190new_unicode_string(T0* a1);
void r130print_cluster(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130is_equal(T130* C,T0* a1);
void r130print_externals(T0* a1,T2 a2,T0* a3);
void r130print_xml_cluster_file(T130* C,T0* a1,T0* a2);
T6 r130se_assigned_from(T0* a1);
void r130print_exported_class(T0* a1,T2 a2,T0* a3);
void r130print_clusters(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130conforms_to(T130* C,T0* a1);
void r130generate_cluster(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130print_link_libraries(T0* a1,T2 a2,T0* a3);
void r130generate_system(T130* C,T0* a1);
void r130print_xml_system_file(T130* C,T0* a1,T0* a2);
void r130print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r733is_equal(T733* C,T0* a1);
T2 r733read_to_string(T733* C,T0* a1,T2 a2,T2 a3);
T6 r733se_assigned_from(T0* a1);
void r733old_read_character(T733* C);
T6 r733old_end_of_file(T733* C);
void r733read_character(T733* C);
void r733make(T733* C);
T6 r733conforms_to(T733* C,T0* a1);
T0* r733twin(T733* C);
T0* r528substring(T528* C,T2 a1,T2 a2);
void r528fill_from_string(T528* C,T0* a1,T2 a2);
T6 r528is_equal(T528* C,T0* a1);
T2 r528fill_from_stream(T528* C,T0* a1,T2 a2,T2 a3);
T6 r528se_assigned_from(T0* a1);
void r528move_left(T528* C,T2 a1,T2 a2,T2 a3);
void r528make(T528* C,T2 a1);
T6 r528conforms_to(T528* C,T0* a1);
void r528resize(T528* C,T2 a1);
T0* r528twin(T528* C);
T6 r531is_equal(T531* C,T0* a1);
T6 r531se_assigned_from(T0* a1);
void r531make(T531* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r531conforms_to(T531* C,T0* a1);
T0* r531twin(T531* C);
T6 r626is_equal(T626* C,T0* a1);
T6 r626se_assigned_from(T0* a1);
T6 r626conforms_to(T626* C,T0* a1);
T6 r626is_undefined(T626* C);
T0* r626twin(T626* C);
T6 r621is_equal(T621* C,T0* a1);
T6 r621se_assigned_from(T0* a1);
T0* r621Arguments(void);
void r621make(T621* C,T0* a1);
T0* r621message(T621* C,T0* a1);
T6 r621conforms_to(T621* C,T0* a1);
T0* r621twin(T621* C);
T0* r621default_message(T621* C);
T6 r720is_closed(T720* C);
void r720old_close(T720* C);
T6 r720is_equal(T720* C,T0* a1);
T6 r720se_assigned_from(T0* a1);
void r720close(T720* C);
void r720make(T720* C,T0* a1);
void r720old_put_string(T720* C,T0* a1);
T6 r720conforms_to(T720* C,T0* a1);
void r720connect_to(T720* C,T0* a1);
void r720put_line(T720* C,T0* a1);
T0* r720twin(T720* C);
void r720open_write(T720* C);
T0* r219new_class(T0* a1,T2 a2,T0* a3);
T6 r219is_equal(T219* C,T0* a1);
T6 r219se_assigned_from(T0* a1);
T6 r219conforms_to(T219* C,T0* a1);
T0* r219twin(T219* C);
void r127print_cluster(T127* C,T0* a1,T0* a2);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127print_ace_file(T127* C,T0* a1,T0* a2);
void r127print_exported_class(T0* a1,T2 a2,T0* a3);
void r127print_clusters(T127* C,T0* a1,T0* a2);
T6 r127conforms_to(T127* C,T0* a1);
void r127print_precompile_ace_file(T127* C,T0* a1,T0* a2);
void r127print_link_libraries_and_link_libraries_directories(T0* a1,T0* a2,T0* a3);
void r127generate_cluster(T127* C,T0* a1);
T0* r127twin(T127* C);
void r127print_options(T0* a1,T2 a2,T0* a3);
void r127print_indentation(T2 a1,T0* a2);
void r127generate_system(T127* C,T0* a1);
void r127print_include_directories(T0* a1,T0* a2);
T6 r762is_equal(T762* C,T0* a1);
T6 r762se_assigned_from(T0* a1);
void r762make(T762* C,T0* a1,T0* a2);
T6 r762conforms_to(T762* C,T0* a1);
T0* r762twin(T762* C);
extern T0*oBC105template_expander;
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104make(T104* C);
T6 r104conforms_to(T104* C,T0* a1);
T0* r104twin(T104* C);
T0* r104expanded_variables(T104* C,T0* a1);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133make(T133* C,T0* a1,T0* a2);
T6 r133conforms_to(T133* C,T0* a1);
void r133execute(T133* C);
T0* r133twin(T133* C);
T6 r100is_equal(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100Arguments(void);
void r100make(T100* C,T0* a1);
T0* r100message(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100default_message(T100* C);
void r103print_cluster(T103* C,T0* a1,T0* a2);
void r103print_link_libraries_path(T0* a1,T0* a2);
void r103print_loadpath_clusters(T103* C,T0* a1,T0* a2);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_loadpath_cluster(T103* C,T0* a1,T0* a2);
void r103print_ace_file(T103* C,T0* a1,T0* a2);
void r103generate_cecil_file(T103* C,T0* a1);
void r103print_exported_class(T0* a1,T0* a2);
void r103print_clusters(T103* C,T0* a1,T0* a2);
T6 r103conforms_to(T103* C,T0* a1);
void r103generate_cluster(T103* C,T0* a1);
T0* r103twin(T103* C);
void r103print_options(T0* a1,T2 a2,T0* a3);
void r103print_exported_classes(T0* a1,T0* a2);
void r103print_indentation(T2 a1,T0* a2);
void r103print_link_libraries(T0* a1,T0* a2);
void r103generate_system(T103* C,T0* a1);
void r103print_include_directories(T0* a1,T0* a2);
T6 r760is_equal(T760* C,T0* a1);
T6 r760se_assigned_from(T0* a1);
void r760make(T760* C,T0* a1,T0* a2);
T6 r760conforms_to(T760* C,T0* a1);
T0* r760twin(T760* C);
T6 r156is_equal(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
T6 r156conforms_to(T156* C,T0* a1);
void r156put_line(T0* a1);
T0* r156twin(T156* C);
T6 r725is_equal(T725* C,T0* a1);
T6 r725se_assigned_from(T0* a1);
T0* r725Arguments(void);
void r725make(T725* C,T0* a1);
T0* r725message(T725* C,T0* a1);
T6 r725conforms_to(T725* C,T0* a1);
T0* r725twin(T725* C);
T0* r725default_message(T725* C);
T6 r132is_equal(T132* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132execute_generators(T132* C,T0* a1);
void r132make(T132* C,T0* a1,T0* a2);
T6 r132conforms_to(T132* C,T0* a1);
void r132execute(T132* C);
T0* r132twin(T132* C);
T6 r211is_equal(T211* C,T0* a1);
T6 r211se_assigned_from(T0* a1);
void r211unmount_root(T211* C,T0* a1);
void r211make(T211* C,T0* a1,T0* a2);
void r211mount(T211* C,T0* a1);
T6 r211conforms_to(T211* C,T0* a1);
void r211unmount(T211* C);
T0* r211twin(T211* C);
void r211set_excluded(T211* C,T0* a1);
void r211mount_root(T211* C,T0* a1);
void r502yy_build_tables(T502* C);
extern T0*oBC503yy_meta_template;
extern int fBC503yy_meta_template;
T0* r502yy_meta_template(void);
extern T0*oBC502yycheck_template;
extern int fBC502yycheck_template;
T0* r502yycheck_template(void);
T6 r502is_equal(T502* C,T0* a1);
extern T0*oBC503yy_accept_template;
extern int fBC503yy_accept_template;
T0* r502yy_accept_template(void);
extern T0*oBC503yy_base_template;
extern int fBC503yy_base_template;
T0* r502yy_base_template(void);
void r502yy_build_parser_tables(T502* C);
T6 r502se_assigned_from(T0* a1);
extern T0*oBC502yytable_template;
extern int fBC502yytable_template;
T0* r502yytable_template(void);
T0* r502yyfixed_array(T0* a1);
extern T0*oBC502yypgoto_template;
extern int fBC502yypgoto_template;
T0* r502yypgoto_template(void);
extern T0*oBC513Empty_buffer;
extern int fBC513Empty_buffer;
T0* r502Empty_buffer(void);
void r502yy_set_content(T502* C,T0* a1);
extern T0*oBC503yy_nxt_template;
extern int fBC503yy_nxt_template;
T0* r502yy_nxt_template(void);
extern T0*oBC503yy_chk_template;
extern int fBC503yy_chk_template;
T0* r502yy_chk_template(void);
extern T0*oBC502yypact_template;
extern int fBC502yypact_template;
T0* r502yypact_template(void);
void r502make_parser_skeleton(T502* C);
extern T0*oBC502yydefact_template;
extern int fBC502yydefact_template;
T0* r502yydefact_template(void);
extern T0*oBC503yy_def_template;
extern int fBC503yy_def_template;
T0* r502yy_def_template(void);
T6 r502conforms_to(T502* C,T0* a1);
extern T0*oBC503yy_ec_template;
extern int fBC503yy_ec_template;
T0* r502yy_ec_template(void);
void r502make_with_buffer(T502* C,T0* a1);
void r502make_eiffel_scanner_with_factory(T502* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC503yy_acclist_template;
extern int fBC503yy_acclist_template;
T0* r502yy_acclist_template(void);
void r502yy_initialize(T502* C);
extern T0*oBC502yyr1_template;
extern int fBC502yyr1_template;
T0* r502yyr1_template(void);
void r502make_with_factory(T502* C,T0* a1,T0* a2,T0* a3);
T0* r502twin(T502* C);
void r502yy_load_input_buffer(T502* C);
extern T0*oBC502yytranslate_template;
extern int fBC502yytranslate_template;
T0* r502yytranslate_template(void);
T0* r502yy_fixed_array(T0* a1);
extern T0*oBC502yyr2_template;
extern int fBC502yyr2_template;
T0* r502yyr2_template(void);
extern T0*oBC502yydefgoto_template;
extern int fBC502yydefgoto_template;
T0* r502yydefgoto_template(void);
extern T0*oBC92INTEGER_ARRAY_;
T6 r306is_equal(T306* C,T0* a1);
T6 r306se_assigned_from(T0* a1);
void r306make(T306* C,T0* a1,T0* a2);
T6 r306conforms_to(T306* C,T0* a1);
T0* r306twin(T306* C);
T6 r615is_equal(T615* C,T0* a1);
T6 r615se_assigned_from(T0* a1);
T0* r615Arguments(void);
void r615make(T615* C,T0* a1,T0* a2);
T0* r615message(T615* C,T0* a1);
T6 r615conforms_to(T615* C,T0* a1);
T0* r615twin(T615* C);
T0* r615default_message(T615* C);
void r187set_root_class_name(T187* C,T0* a1);
void r187set_root_class(T187* C,T0* a1);
T6 r187is_equal(T187* C,T0* a1);
T6 r187se_assigned_from(T0* a1);
T6 r187conforms_to(T187* C,T0* a1);
void r187make_basic_classes(T187* C);
T0* r187eiffel_class(T187* C,T0* a1);
void r187set_mounted_clusters(T187* C,T0* a1);
void r187make_with_factory(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187twin(T187* C);
void r187merge_externals(T187* C);
extern T0*oBC191uc_optimize;
extern int fBC191uc_optimize;
T0* r202uc_optimize(void);
void r202validate_named_cluster(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_check;
extern int fBC191uc_check;
T0* r202uc_check(void);
void r202validate_root(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_external;
extern int fBC191uc_external;
T0* r202uc_external(void);
void r202validate_external(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_exclude;
extern int fBC191uc_exclude;
T0* r202uc_exclude(void);
void r202validate_mount(T202* C,T0* a1,T0* a2);
T6 r202is_equal(T202* C,T0* a1);
void r202validate_system_doc(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_invariant;
extern int fBC191uc_invariant;
T0* r202uc_invariant(void);
T6 r202se_assigned_from(T0* a1);
void r202validate_cluster(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_description;
extern int fBC191uc_description;
T0* r202uc_description(void);
extern T0*oBC191uc_mount;
extern int fBC191uc_mount;
T0* r202uc_mount(void);
extern T0*oBC191uc_debug;
extern int fBC191uc_debug;
T0* r202uc_debug(void);
extern T0*oBC191uc_option;
extern int fBC191uc_option;
T0* r202uc_option(void);
extern T0*oBC191uc_root;
extern int fBC191uc_root;
T0* r202uc_root(void);
void r202validate_system(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_feature;
extern int fBC191uc_feature;
T0* r202uc_feature(void);
extern T0*oBC191uc_class;
extern int fBC191uc_class;
T0* r202uc_class(void);
extern T0*oBC191uc_loop;
extern int fBC191uc_loop;
T0* r202uc_loop(void);
T6 r202conforms_to(T202* C,T0* a1);
void r202validate_cluster_doc(T202* C,T0* a1,T0* a2);
void r202validate_export(T202* C,T0* a1,T0* a2);
T0* r202uc_cluster(void);
extern T0*oBC191uc_link_library_dir;
extern int fBC191uc_link_library_dir;
T0* r202uc_link_library_dir(void);
void r202validate_exclude(T202* C,T0* a1,T0* a2);
extern T0*oBC191uc_export;
extern int fBC191uc_export;
T0* r202uc_export(void);
extern T0*oBC191uc_link_library;
extern int fBC191uc_link_library;
T0* r202uc_link_library(void);
extern T0*oBC191uc_include_dir;
extern int fBC191uc_include_dir;
T0* r202uc_include_dir(void);
extern T0*oBC191uc_location;
extern int fBC191uc_location;
T0* r202uc_location(void);
T0* r202twin(T202* C);
T0* r202uc_system(void);
extern T0*oBC191uc_creation;
extern int fBC191uc_creation;
T0* r202uc_creation(void);
extern T0*oBC191uc_name;
extern int fBC191uc_name;
T0* r202uc_name(void);
extern T0*oBC191uc_require;
extern int fBC191uc_require;
T0* r202uc_require(void);
void r202validate_option(T202* C,T0* a1,T0* a2);
T0* r202new_unicode_string(T0* a1);
extern T0*oBC191uc_ensure;
extern int fBC191uc_ensure;
T0* r202uc_ensure(void);
void r129print_cluster(T129* C,T0* a1,T0* a2);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129print_ace_file(T129* C,T0* a1,T0* a2);
void r129print_exported_class(T0* a1,T2 a2,T0* a3);
void r129print_component(T0* a1);
void r129print_clusters(T129* C,T0* a1,T0* a2);
T6 r129conforms_to(T129* C,T0* a1);
void r129print_precompile_ace_file(T129* C,T0* a1,T0* a2);
void r129generate_cluster(T129* C,T0* a1);
T0* r129twin(T129* C);
void r129print_options(T0* a1,T2 a2,T0* a3);
void r129print_indentation(T2 a1,T0* a2);
void r129print_link_libraries(T0* a1,T0* a2);
void r129generate_system(T129* C,T0* a1);
void r129print_include_directories(T0* a1,T0* a2);
T6 r618is_equal(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
T0* r618Arguments(void);
void r618make(T618* C,T0* a1,T0* a2,T0* a3);
T0* r618message(T618* C,T0* a1);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T0* r618default_message(T618* C);
T6 r719is_equal(T719* C,T0* a1);
T6 r719se_assigned_from(T0* a1);
T0* r719Arguments(void);
void r719make(T719* C,T0* a1);
T0* r719message(T719* C,T0* a1);
T6 r719conforms_to(T719* C,T0* a1);
T0* r719twin(T719* C);
T0* r719default_message(T719* C);
T6 r596is_equal(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
T6 r596conforms_to(T596* C,T0* a1);
T0* r596expand_from_hash_table(T0* a1,T0* a2);
T0* r596twin(T596* C);
void r527set_position(T527* C,T2 a1,T2 a2,T2 a3);
T6 r527is_equal(T527* C,T0* a1);
T6 r527se_assigned_from(T0* a1);
void r527make(T527* C,T0* a1);
T6 r527conforms_to(T527* C,T0* a1);
void r527make_from_buffer(T527* C,T0* a1);
T0* r527twin(T527* C);
extern T0*oBC568utils;
T2 r568item_code(T568* C,T2 a1);
T6 r568is_equal(T568* C,T0* a1);
T6 r568se_assigned_from(T0* a1);
void r568make(T568* C);
void r568insert(T568* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r568add_to_storage_count(T568* C,T2 a1);
void r568insert_code(T568* C,T2 a1,T2 a2);
T6 r568conforms_to(T568* C,T0* a1);
extern T6 oBC568optimize_access;
void r568storage_move(T568* C,T2 a1,T2 a2,T2 a3);
T0* r568twin(T568* C);
void r568find_position(T568* C,T2 a1);
T6 r249same_identifier(T249* C,T0* a1);
T6 r249is_equal(T249* C,T0* a1);
T6 r249se_assigned_from(T0* a1);
void r249make_leaf_with_position(T249* C,T2 a1,T2 a2);
T6 r249same_type(T249* C,T0* a1);
void r249make(T249* C,T0* a1);
T6 r249same_feature_name(T249* C,T0* a1);
T2 r249hash_code(T249* C);
T6 r249conforms_to(T249* C,T0* a1);
T0* r249twin(T249* C);
T6 r305is_equal(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
void r305make(T305* C,T0* a1);
T6 r305conforms_to(T305* C,T0* a1);
void r305set_current_class(T305* C,T0* a1);
T0* r305twin(T305* C);
void r590set_last_cell(T590* C,T0* a1);
void r590copy(T590* C,T0* a1);
void r590wipe_out(T590* C);
void r590remove_first(T590* C);
T0* r590cursor_item(T0* a1);
T6 r590cursor_is_last(T590* C,T0* a1);
T6 r590is_equal(T590* C,T0* a1);
void r590remove_traversing_cursor(T590* C,T0* a1);
void r590cursor_go_after(T590* C,T0* a1);
void r590move_all_cursors_after(T590* C);
void r590add_traversing_cursor(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
T6 r590same_type(T590* C,T0* a1);
void r590remove_last(T590* C);
T6 r590cursor_after(T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
void r590make_list(T590* C);
void r590cursor_forth(T590* C,T0* a1);
void r590move_last_cursors_after(T590* C);
void r590cursor_start(T590* C,T0* a1);
T0* r590twin(T590* C);
void r590force_last(T590* C,T0* a1);
T0* r590new_cursor(T590* C);
void r590make_composite(T590* C);
T6 r590cursor_is_first(T590* C,T0* a1);
void r590remove_at_cursor(T590* C,T0* a1);
void r590move_all_cursors(T590* C,T0* a1,T0* a2);
T6 r590cursor_off(T0* a1);
void r590set_root_element(T590* C,T0* a1);
void r128print_cluster(T128* C,T0* a1,T0* a2);
void r128print_esd_file(T128* C,T0* a1,T0* a2);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T0* r128clone(T0* a1);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T0* r128remove_all_characters(T0* a1,T3 a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128print_eld_file(T128* C,T0* a1,T0* a2);
void r128generate_cluster(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
void r128print_link_libraries(T0* a1,T0* a2);
void r128generate_system(T128* C,T0* a1);
T0* r567create_representation(T567* C);
T6 r567is_equal(T567* C,T0* a1);
T6 r567se_assigned_from(T0* a1);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567twin(T567* C);
T6 r623is_equal(T623* C,T0* a1);
T6 r623se_assigned_from(T0* a1);
T0* r623Arguments(void);
void r623make(T623* C,T0* a1);
T0* r623message(T623* C,T0* a1);
T6 r623conforms_to(T623* C,T0* a1);
T0* r623twin(T623* C);
T0* r623default_message(T623* C);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
void r536make(T536* C,T0* a1,T0* a2,T0* a3);
T6 r536conforms_to(T536* C,T0* a1);
T0* r536twin(T536* C);
T0* r203uc_optimize(void);
T0* r203uc_check(void);
T0* r203uc_external(void);
T0* r203uc_exclude(void);
T0* r203new_cluster(T203* C,T0* a1);
T0* r203new_exported_feature(T0* a1);
T6 r203is_equal(T203* C,T0* a1);
T0* r203new_export(T0* a1);
T0* r203uc_invariant(void);
T6 r203se_assigned_from(T0* a1);
T0* r203new_options(T0* a1);
T0* r203new_universe(T203* C,T0* a1);
T6 r203is_false(T0* a1);
T0* r203uc_mount(void);
T0* r203uc_debug(void);
T0* r203uc_option(void);
void r203make(T203* C,T0* a1,T0* a2);
T0* r203uc_root(void);
extern T0*oBC204Execution_environment;
T0* r203uc_feature(void);
T0* r203uc_class(void);
T0* r203uc_loop(void);
T6 r203conforms_to(T203* C,T0* a1);
extern T0*oBC191uc_abstract;
extern int fBC191uc_abstract;
T0* r203uc_abstract(void);
T0* r203new_externals(T0* a1);
extern T0*oBC191uc_alias;
extern int fBC191uc_alias;
T0* r203uc_alias(void);
T0* r203uc_cluster(void);
T0* r203uc_link_library_dir(void);
extern T0*oBC191uc_enable;
extern int fBC191uc_enable;
T0* r203uc_enable(void);
T0* r203uc_export(void);
T0* r203uc_link_library(void);
T6 r203is_true(T0* a1);
T0* r203uc_include_dir(void);
T0* r203uc_location(void);
T0* r203twin(T203* C);
T0* r203new_mount(T203* C,T0* a1);
T0* r203uc_creation(void);
T0* r203uc_require(void);
T0* r203uc_name(void);
T0* r203new_unicode_string(T0* a1);
T0* r203uc_ensure(void);
void r695copy(T695* C,T0* a1);
void r695make_clashes(T695* C,T2 a1);
void r695search_position(T695* C,T0* a1);
T6 r695is_equal(T695* C,T0* a1);
void r695remove_traversing_cursor(T695* C,T0* a1);
void r695clone_slots(T695* C);
T0* r695item(T695* C,T0* a1);
void r695clone_clashes(T695* C);
void r695move_all_cursors_after(T695* C);
void r695make_items(T695* C,T2 a1);
void r695add_traversing_cursor(T695* C,T0* a1);
T6 r695se_assigned_from(T0* a1);
T0* r695clone(T0* a1);
T6 r695same_type(T695* C,T0* a1);
void r695make(T695* C,T2 a1);
void r695clone_items(T695* C);
T6 r695conforms_to(T695* C,T0* a1);
T6 r695has(T695* C,T0* a1);
void r695make_keys(T695* C,T2 a1);
T2 r695hash_position(T695* C,T0* a1);
void r695clone_keys(T695* C);
void r695make_with_equality_testers(T695* C,T2 a1,T0* a2,T0* a3);
T6 r695cursor_same_position(T0* a1,T0* a2);
T0* r695twin(T695* C);
T0* r695new_cursor(T695* C);
void r695make_slots(T695* C,T2 a1);
T2 r695new_modulus(T2 a1);
T6 r695cursor_off(T0* a1);
T6 r620is_equal(T620* C,T0* a1);
T6 r620se_assigned_from(T0* a1);
T0* r620Arguments(void);
void r620make(T620* C,T0* a1,T0* a2);
T0* r620message(T620* C,T0* a1);
T6 r620conforms_to(T620* C,T0* a1);
T0* r620twin(T620* C);
T0* r620default_message(T620* C);
T0* r209out(T209* C);
void r209copy(T209* C,T0* a1);
T0* r209substring(T209* C,T2 a1,T2 a2);
T2 r209occurrences(T209* C,T570 a1);
T2 r209count(T209* C);
T2 r209item_code(T209* C,T2 a1);
T6 r209is_equal(T209* C,T0* a1);
T570 r209item(T209* C,T2 a1);
extern T0*oBC209utf8utils;
void r209append_uc_string(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
void r209make_from_string(T209* C,T0* a1);
T2 r209index_of(T209* C,T570 a1,T2 a2);
void r209make(T209* C,T2 a1);
void r209append_string(T209* C,T0* a1);
T2 r209hash_code(T209* C);
T6 r209conforms_to(T209* C,T0* a1);
void r209append_ucc_code(T209* C,T2 a1);
T6 r209empty(T209* C);
T0* r209twin(T209* C);
T0* r209to_utf8(T209* C);
T2 r209three_way_comparison(T209* C,T0* a1);
extern T0*oBC209i_settings;
void r209make_from_utf8(T209* C,T0* a1);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76execute_generators(T76* C,T0* a1);
void r76make(T76* C,T0* a1,T0* a2);
T6 r76conforms_to(T76* C,T0* a1);
void r76execute(T76* C);
T0* r76twin(T76* C);
T6 r761is_equal(T761* C,T0* a1);
T6 r761se_assigned_from(T0* a1);
void r761make(T761* C,T0* a1,T0* a2);
T6 r761conforms_to(T761* C,T0* a1);
T0* r761twin(T761* C);
T0* r758out(T758* C);
T6 r758is_equal(T758* C,T0* a1);
T6 r758se_assigned_from(T0* a1);
T0* r758clone(T0* a1);
void r758out_in_tagged_out_memory(T758* C);
T6 r758conforms_to(T758* C,T0* a1);
T0* r758twin(T758* C);
void r732fill(T732* C);
void r732compact_left(T732* C);
void r732set_position(T732* C,T2 a1,T2 a2,T2 a3);
T6 r732is_equal(T732* C,T0* a1);
T6 r732se_assigned_from(T0* a1);
void r732make_from_string(T732* C,T0* a1);
T6 r732conforms_to(T732* C,T0* a1);
void r732make_from_buffer(T732* C,T0* a1);
void r732resize(T732* C);
void r732make_with_size(T732* C,T0* a1,T2 a2);
T0* r732twin(T732* C);
void r732set_file(T732* C,T0* a1);
void r732flush(T732* C);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135make(T135* C);
void r135old_put_string(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
void r135put_line(T0* a1);
T0* r135twin(T135* C);
T0* r216full_name(T216* C,T3 a1);
void r216set_mounted_subclusters(T216* C,T0* a1);
T6 r216is_equal(T216* C,T0* a1);
void r216remove_cluster(T216* C,T0* a1);
void r216set_subclusters(T216* C,T0* a1);
T6 r216se_assigned_from(T0* a1);
void r216unmount_root(T216* C,T0* a1);
T0* r216full_pathname(T216* C);
void r216make(T216* C,T0* a1,T0* a2);
void r216mount(T216* C,T0* a1);
T6 r216conforms_to(T216* C,T0* a1);
void r216unmount(T216* C);
T0* r216twin(T216* C);
void r216merge_externals(T216* C,T0* a1);
void r216mount_root(T216* C,T0* a1);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
void r157make(T157* C);
void r157old_put_string(T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157put_line(T0* a1);
T0* r157twin(T157* C);
T0* r735out(T735* C);
T6 r735is_equal(T735* C,T0* a1);
T6 r735se_assigned_from(T0* a1);
T0* r735clone(T0* a1);
void r735make(T735* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r735conforms_to(T735* C,T0* a1);
T0* r735twin(T735* C);
T6 r573is_equal(T573* C,T0* a1);
T6 r573se_assigned_from(T0* a1);
void r573make(T573* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
T6 r665is_equal(T665* C,T0* a1);
T6 r665se_assigned_from(T0* a1);
void r665make(T665* C,T0* a1,T0* a2);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
void r687_196Pparse_from_stream(T687* C,T0* a1);
T0* r687next_open_composite(T0* a1);
void r687enable_position_table(T687* C);
T6 r687is_equal(T687* C,T0* a1);
void r687on_content(T687* C,T0* a1);
T6 r687se_assigned_from(T0* a1);
void r687on_processing_instruction(T687* C,T0* a1,T0* a2);
void r687on_start_tag(T687* C,T0* a1,T0* a2,T0* a3);
void r687make_from_implementation_event(T687* C,T0* a1);
void r687make_from_implementation(T687* C,T0* a1);
void r687handle_position(T687* C,T0* a1);
void r687on_comment(T687* C,T0* a1);
void r687parse_from_stream(T687* C,T0* a1);
void r687on_end_tag(T687* C,T0* a1,T0* a2);
T6 r687conforms_to(T687* C,T0* a1);
void r687reset(T687* C);
T0* r687twin(T687* C);
T6 r195is_equal(T195* C,T0* a1);
T6 r195se_assigned_from(T0* a1);
T0* r195clone(T0* a1);
void r195make_from_implementation(T195* C,T0* a1);
T6 r195is_correct(T195* C);
T6 r195conforms_to(T195* C,T0* a1);
T0* r195last_error_extended_description(T195* C);
T0* r195twin(T195* C);
T6 r569is_equal(T569* C,T0* a1);
T6 r569se_assigned_from(T0* a1);
void r569make(T569* C);
void r569insert(T569* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r569insert_code(T569* C,T2 a1,T2 a2);
void r569move(T569* C,T2 a1,T2 a2,T2 a3);
T6 r569conforms_to(T569* C,T0* a1);
void r569storage_ensure_capacity(T569* C,T2 a1);
T0* r569twin(T569* C);
void r205set_last_cell(T205* C,T0* a1);
void r205copy(T205* C,T0* a1);
void r205wipe_out(T205* C);
void r205remove_first(T205* C);
T0* r205cursor_item(T0* a1);
T6 r205cursor_is_last(T205* C,T0* a1);
void r205add_attributes(T205* C,T0* a1);
T6 r205is_equal(T205* C,T0* a1);
void r205remove_traversing_cursor(T205* C,T0* a1);
void r205make_root(T205* C,T0* a1,T0* a2);
void r205cursor_go_after(T205* C,T0* a1);
void r205move_all_cursors_after(T205* C);
T6 r205has_attribute_by_name(T205* C,T0* a1);
void r205add_traversing_cursor(T205* C,T0* a1);
T6 r205se_assigned_from(T0* a1);
void r205add_attribute(T205* C,T0* a1,T0* a2,T0* a3);
T0* r205attribute_by_name(T205* C,T0* a1);
void r205make_child(T205* C,T0* a1,T0* a2,T0* a3);
T6 r205same_type(T205* C,T0* a1);
T6 r205equal(T0* a1,T0* a2);
void r205remove_last(T205* C);
T6 r205cursor_after(T0* a1);
T6 r205conforms_to(T205* C,T0* a1);
void r205make_list(T205* C);
void r205cursor_forth(T205* C,T0* a1);
void r205move_last_cursors_after(T205* C);
void r205cursor_start(T205* C,T0* a1);
T0* r205twin(T205* C);
void r205force_last(T205* C,T0* a1);
T0* r205new_cursor(T205* C);
void r205make_composite(T205* C);
T6 r205has_element_by_name(T205* C,T0* a1);
T6 r205cursor_is_first(T205* C,T0* a1);
void r205remove_at_cursor(T205* C,T0* a1);
T0* r205element_by_name(T205* C,T0* a1);
void r205move_all_cursors(T205* C,T0* a1,T0* a2);
T6 r205cursor_off(T0* a1);
void r728yy_do_action(T728* C,T2 a1);
extern T0*oBC729yytable_template;
extern int fBC729yytable_template;
T0* r728yytable_template(void);
T0* r728empty_ucstring(void);
void r728make_parser_skeleton(T728* C);
T2 r728yy_at_beginning_of_line(T728* C);
void r728fatal_error(T0* a1);
T0* r728yytype1(T0* a1);
T6 r728yytype2(T0* a1);
T0* r728yytype3(T0* a1);
T0* r728yytype4(T0* a1);
T0* r728yytype5(T0* a1);
void r728handle_found_text(T728* C);
void r728parse(T728* C);
void r728set_input_buffer(T728* C,T0* a1);
T2 r728yy_translate(T728* C,T2 a1);
extern T0*oBC730yy_ec_template;
extern int fBC730yy_ec_template;
T0* r728yy_ec_template(void);
void r728yy_execute_action(T728* C,T2 a1);
extern T0*oBC729yytranslate_template;
extern int fBC729yytranslate_template;
T0* r728yytranslate_template(void);
void r728clear_stacks(T728* C);
extern T0*oBC730yy_def_template;
extern int fBC730yy_def_template;
T0* r728yy_def_template(void);
T3 r728text_item(T728* C,T2 a1);
void r728yy_load_input_buffer(T728* C);
extern T570 oBC729uc_collon;
extern int fBC729uc_collon;
T570 r728uc_collon(void);
extern T0*oBC729yyr1_template;
extern int fBC729yyr1_template;
T0* r728yyr1_template(void);
void r728make_with_buffer(T728* C,T0* a1);
T2 r728yy_null_trans_state(T728* C,T2 a1);
T0* r728position(T728* C);
extern T0*oBC730yy_accept_template;
extern int fBC730yy_accept_template;
T0* r728yy_accept_template(void);
void r728read_token(T728* C);
extern T0*oBC729yyr2_template;
extern int fBC729yyr2_template;
T0* r728yyr2_template(void);
T2 r728yy_previous_state(T728* C);
extern T0*oBC729yypgoto_template;
extern int fBC729yypgoto_template;
T0* r728yypgoto_template(void);
void r728yy_refill_input_buffer(T728* C);
T0* r728yy_fixed_array(T0* a1);
T6 r728conforms_to(T728* C,T0* a1);
extern T0*oBC730yy_meta_template;
extern int fBC730yy_meta_template;
T0* r728yy_meta_template(void);
extern T0*oBC730yy_base_template;
extern int fBC730yy_base_template;
T0* r728yy_base_template(void);
T0* r728twin(T728* C);
T0* r728clone(T0* a1);
T0* r728new_file_buffer(T0* a1);
void r728yy_initialize(T728* C);
void r728reset(T728* C);
T0* r728text(T728* C);
extern T0*oBC730yy_nxt_template;
extern int fBC730yy_nxt_template;
T0* r728yy_nxt_template(void);
void r728parse_from_stream(T728* C,T0* a1);
void r728yy_set_line_column(T728* C);
void r728yy_build_parser_tables(T728* C);
T570 r728new_unicode_character(T3 a1);
T0* r728new_unicode_string(T0* a1);
T0* r728split_name_and_prefix(T0* a1);
T6 r728is_equal(T728* C,T0* a1);
void r728report_error(T728* C,T0* a1);
extern T0*oBC729yydefact_template;
extern int fBC729yydefact_template;
T0* r728yydefact_template(void);
extern T0*oBC730yy_chk_template;
extern int fBC730yy_chk_template;
T0* r728yy_chk_template(void);
extern T0*oBC729yycheck_template;
extern int fBC729yycheck_template;
T0* r728yycheck_template(void);
void r728make(T728* C);
T0* r728yyfixed_array(T0* a1);
void r728yy_clear_all(T728* C);
extern T0*oBC729yydefgoto_template;
extern int fBC729yydefgoto_template;
T0* r728yydefgoto_template(void);
void r728yy_set_content(T728* C,T0* a1);
extern T0*oBC729yypact_template;
extern int fBC729yypact_template;
T0* r728yypact_template(void);
void r728set_start_condition(T728* C,T2 a1);
T6 r728se_assigned_from(T0* a1);
void r728yy_build_tables(T728* C);
void r728less(T728* C,T2 a1);
T6 r65is_equal(T65* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r65command_arguments(void);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T0* r65argument(T2 a1);
T6 r683is_equal(T683* C,T0* a1);
extern T0*oBC683ep_event_fact;
T6 r683se_assigned_from(T0* a1);
void r683make(T683* C);
T6 r683conforms_to(T683* C,T0* a1);
extern T0*oBC683ef_event_fact;
T0* r683twin(T683* C);
void r31report_missing_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
void r31report_no_parser_available_error(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31report_missing_attribute_error(T31* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC33null_output_stream;
extern int fBC33null_output_stream;
T0* r31null_output_stream(void);
void r31report_cannot_write_file_error(T31* C,T0* a1);
void r31make(T31* C);
void r31report_cannot_read_file_error(T31* C,T0* a1);
void r31report_parser_error(T31* C,T0* a1);
T0* r31message(T0* a1);
void r31report_invalid_expression_error(T31* C,T0* a1,T0* a2);
void r31_32Preport_error(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31report_not_xace_file_error(T31* C,T0* a1);
void r31report_wrong_root_element_error(T31* C,T0* a1,T0* a2);
void r31report_unknown_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T0* r31twin(T31* C);
void r31report_error(T31* C,T0* a1);
T6 r591is_expression_true(T591* C,T0* a1);
T6 r591should_strip_element(T591* C,T0* a1,T0* a2);
T6 r591is_equal(T591* C,T0* a1);
T6 r591se_assigned_from(T0* a1);
void r591preprocess_composite(T591* C,T0* a1,T0* a2);
T0* r591new_unicode_string_from_utf8(T0* a1);
extern T570 oBC191uc_equal;
extern int fBC191uc_equal;
T570 r591uc_equal(void);
T6 r591is_valid_expression(T0* a1);
T570 r591new_unicode_character(T3 a1);
extern T570 oBC191uc_closing_curly_brace;
extern int fBC191uc_closing_curly_brace;
T570 r591uc_closing_curly_brace(void);
void r591make(T591* C,T0* a1,T0* a2);
extern T0*oBC191uc_unless;
extern int fBC191uc_unless;
T0* r591uc_unless(void);
extern T0*oBC191uc_if;
extern int fBC191uc_if;
T0* r591uc_if(void);
T6 r591conforms_to(T591* C,T0* a1);
extern T570 oBC191uc_opening_curly_brace;
extern int fBC191uc_opening_curly_brace;
T570 r591uc_opening_curly_brace(void);
T0* r591twin(T591* C);
void r591expand_attribute_variables(T591* C,T0* a1);
T0* r591new_unicode_string(T0* a1);
extern T570 oBC191uc_dollar;
extern int fBC191uc_dollar;
T570 r591uc_dollar(void);
T0* r212split_on_first(T0* a1,T3 a2);
T6 r212is_equal(T212* C,T0* a1);
void r212remove_cluster(T212* C,T0* a1);
T6 r212se_assigned_from(T0* a1);
T0* r212clone(T0* a1);
void r212make_empty(T212* C);
void r212make(T212* C,T0* a1);
void r212set_parent(T212* C,T0* a1);
T6 r212conforms_to(T212* C,T0* a1);
T0* r212twin(T212* C);
T0* r212split_string(T0* a1,T3 a2);
void r212merge_externals(T212* C,T0* a1);
T6 r281is_equal(T281* C,T0* a1);
T6 r281se_assigned_from(T0* a1);
T6 r281conforms_to(T281* C,T0* a1);
T6 r281test(T0* a1,T0* a2);
T0* r281twin(T281* C);
extern T0*oBC134error;
extern int fBC134error;
T0* r134error(void);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
extern T0*oBC134input;
extern int fBC134input;
T0* r134input(void);
extern T0*oBC134output;
extern int fBC134output;
T0* r134output(void);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134twin(T134* C);
T6 r740is_equal(T740* C,T0* a1);
T6 r740se_assigned_from(T0* a1);
T6 r740conforms_to(T740* C,T0* a1);
T0* r740twin(T740* C);
void r40raise(T40* C,T0* a1);
T6 r40is_equal(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
extern T0*oBC41developer_exception_name_memory;
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T6 r36_px_60(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T6 r597is_equal(T597* C,T0* a1);
T6 r597se_assigned_from(T0* a1);
T0* r597to_hexadecimal(T2 a1,T6 a2);
T6 r597conforms_to(T597* C,T0* a1);
T3 r597to_character(T2 a1);
T0* r597twin(T597* C);
void r597append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC565factory;
extern int fBC565factory;
T0* r565factory(void);
T6 r565is_equal(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565twin(T565* C);
T6 r35is_equal(T35* C,T0* a1);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T0* r625get_environment_variable(T0* a1);
T6 r767is_equal(T767* C,T0* a1);
T6 r767se_assigned_from(T0* a1);
T6 r767conforms_to(T767* C,T0* a1);
T0* r767twin(T767* C);
T6 r718is_equal(T718* C,T0* a1);
T6 r718se_assigned_from(T0* a1);
T6 r718conforms_to(T718* C,T0* a1);
T0* r718twin(T718* C);
void r16process_cluster(T16* C);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
void r16process_xace_file(T16* C,T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
void r16process_system(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_output(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1,T0* a2);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r97is_equal(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
T6 r97is_integer(T0* a1);
T6 r97same_case_insensitive(T0* a1,T0* a2);
T0* r97make(T2 a1);
T6 r97conforms_to(T97* C,T0* a1);
T2 r97case_insensitive_hash_code(T0* a1);
T0* r97twin(T97* C);
T0* r570out(T570* C);
extern T0*oBC506Platform;
T6 r570is_equal(T570* C,T570 a1);
T3 r570as_character(T570* C);
T6 r570_px_60(T570* C,T570 a1);
T6 r570_px_62(T570* C,T570 a1);
T0* r570as_hexadecimal(T570* C);
T3 r570code_to_character(T2 a1);
extern T0*oBC507INTEGER_;
T6 r624is_equal(T624* C,T0* a1);
T0* r624variable_value(T0* a1);
T6 r624se_assigned_from(T0* a1);
extern T625 oBC624environment_impl;
T6 r624conforms_to(T624* C,T0* a1);
T0* r624interpreted_string(T0* a1);
T0* r624twin(T624* C);
T2 r593nr_of_following_octets(T3 a1);
T6 r593is_equal(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
void r593read_code(T593* C,T0* a1,T2 a2);
void r593put_code(T2 a1,T0* a2,T2 a3);
void r593read_following_octet(T593* C,T0* a1);
T6 r593conforms_to(T593* C,T0* a1);
T3 r593code_to_character(T2 a1);
T2 r593octet_size(T2 a1);
T0* r593twin(T593* C);
extern T0*oBC593specific;
T6 r593is_leading_octet(T3 a1);
T2 r593read_leading_octet(T593* C,T0* a1,T2 a2);
T6 r717is_equal(T717* C,T0* a1);
T6 r717se_assigned_from(T0* a1);
T0* r717new_event_parser_imp(void);
T6 r717conforms_to(T717* C,T0* a1);
T0* r717twin(T717* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75_px_60(T75* C,T0* a1);
T0* r75twin(T75* C);
T6 r768is_equal(T768* C,T0* a1);
T6 r768se_assigned_from(T0* a1);
T6 r768conforms_to(T768* C,T0* a1);
T0* r768twin(T768* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 769
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms135_10;
extern T7*ms29_1878185725;
extern T7*ms103_431271;
extern T7*ms622_1214914019;
extern T7*ms203_79251;
extern T7*ms156_10;
extern T7*ms130_11272528;
extern T7*ms157_10;
extern T7*ms623_988446515;
extern T7*ms620_820451542;
extern T7*ms719_512683247;
extern T7*ms619_454072470;
extern T7*ms129_10031271;
extern T7*ms127_2071896;
extern T7*ms100_1515383187;
extern T7*ms621_229;
extern T7*ms128_440790;
extern T7*ms128_440825;
extern T7*ms725_1606053737;
extern T7*ms29_1415324896;
extern T7*ms203_18036;
extern T7*ms103_1319327951;
extern T7*ms618_1179444653;
extern T7*ms682_462378139;
extern T7*ms103_9702826;
extern T7*ms615_54177410;
extern T7*ms720_10;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void*se_ma517(int argc,...);
T0* X686new_event_parser_imp(T0*C);
T6 X686is_available(T0*C);
void X29execute(T0*C);
T0* X144item(T0*C);
T6 X144after(T0*C);
void X144forth(T0*C);
void X144start(T0*C);
T2 X145count(T0*C);
T0* X145cursor_item(T0*C,T0* a1);
T6 X145is_empty(T0*C);
T6 X145cursor_after(T0*C,T0* a1);
void X145cursor_forth(T0*C,T0* a1);
void X145cursor_start(T0*C,T0* a1);
T0* X145new_cursor(T0*C);
T0* X552cursor_item(T0*C,T0* a1);
T6 X552cursor_after(T0*C,T0* a1);
void X552cursor_forth(T0*C,T0* a1);
void X552cursor_start(T0*C,T0* a1);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T6 X280test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X523clear_all(T0*C,T0* a1);
T0* X523make(T0*C,T2 a1);
T0* X523resize(T0*C,T0* a1,T2 a2);
void X94put_new_line(T0*C);
void X94put_line(T0*C,T0* a1);
void X94put_character(T0*C,T3 a1);
void X94put_string(T0*C,T0* a1);
T0* X183name(T0*C);
T2 X183read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X183read_character(T0*C);
T6 X183end_of_input(T0*C);
T3 X183last_character(T0*C);
void X208force_last(T0*C,T0* a1);
T0* X208new_cursor(T0*C);
void X208remove_at_cursor(T0*C,T0* a1);
void X295put(T0*C,T0* a1,T2 a2);
T0* X295item(T0*C,T2 a1);
void X295set_all_with(T0*C,T0* a1);
void X295resize(T0*C,T2 a1);
void X527fill(T0*C);
void X41raise(T0*C,T0* a1);
T2 X518count(T0*C);
T2 X518item(T0*C,T2 a1);
T2 X518lower(T0*C);
T0* X296make(T0*C,T2 a1);
T0* X296resize(T0*C,T0* a1,T2 a2);
void X190parse_file(T0*C,T0* a1);
void X522put(T0*C,T0* a1,T2 a2);
T0* X522item(T0*C,T2 a1);
void X522set_all_with(T0*C,T0* a1);
void X522resize(T0*C,T2 a1);
T2 X564item_code(T0*C,T2 a1);
void X564insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X564insert_code(T0*C,T2 a1,T2 a2);
T0* X91default_message(T0*C);
void X78generate_cluster(T0*C,T0* a1);
void X78generate_system(T0*C,T0* a1);
T6 T35toT6(T0* source);
T0* T2toT36(T2 source);
T2 T36toT2(T0* source);
T0* T6toT35(T6 source);

#ifdef __cplusplus
}
#endif
