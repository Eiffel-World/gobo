#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S589 T589;
typedef struct S351 T351;
typedef struct S330 T330;
typedef struct S611 T611;
typedef struct S363 T363;
typedef struct S383 T383;
typedef struct S420 T420;
typedef struct S423 T423;
typedef struct S114 T114;
typedef struct S166 T166;
typedef struct S276 T276;
typedef struct S578 T578;
typedef struct S188 T188;
typedef struct S416 T416;
typedef struct S319 T319;
typedef struct S432 T432;
typedef struct S431 T431;
typedef struct S590 T590;
typedef struct S202 T202;
typedef struct S650 T650;
typedef struct S224 T224;
typedef struct S481 T481;
typedef struct S309 T309;
typedef struct S282 T282;
typedef struct S529 T529;
typedef struct S233 T233;
typedef struct S255 T255;
typedef struct S447 T447;
typedef struct S279 T279;
typedef struct S147 T147;
typedef struct S531 T531;
typedef struct S343 T343;
typedef struct S139 T139;
typedef struct S586 T586;
typedef struct S254 T254;
typedef struct S505 T505;
typedef struct S561 T561;
typedef struct S185 T185;
typedef struct S39 T39;
typedef struct S468 T468;
typedef struct S379 T379;
typedef struct S201 T201;
typedef struct S229 T229;
typedef struct S474 T474;
typedef struct S209 T209;
typedef struct S318 T318;
typedef struct S134 T134;
typedef struct S222 T222;
typedef struct S203 T203;
typedef struct S88 T88;
typedef struct S508 T508;
typedef struct S145 T145;
typedef struct S143 T143;
typedef struct S178 T178;
typedef struct S35 T35;
typedef struct S492 T492;
typedef struct S153 T153;
typedef struct S339 T339;
typedef struct S422 T422;
typedef struct S489 T489;
typedef struct S582 T582;
typedef struct S317 T317;
typedef struct S558 T558;
typedef struct S187 T187;
typedef struct S315 T315;
typedef struct S328 T328;
typedef struct S541 T541;
typedef struct S260 T260;
typedef struct S29 T29;
typedef struct S499 T499;
typedef struct S362 T362;
typedef struct S110 T110;
typedef struct S547 T547;
typedef struct S140 T140;
typedef struct S507 T507;
typedef struct S109 T109;
typedef struct S245 T245;
typedef struct S428 T428;
typedef struct S597 T597;
typedef struct S262 T262;
typedef struct S664 T664;
typedef struct S660 T660;
typedef struct S117 T117;
typedef struct S250 T250;
typedef struct S146 T146;
typedef struct S113 T113;
typedef struct S519 T519;
typedef struct S583 T583;
typedef struct S656 T656;
typedef struct S399 T399;
typedef struct S338 T338;
typedef struct S228 T228;
typedef struct S116 T116;
typedef struct S258 T258;
typedef struct S652 T652;
typedef struct S251 T251;
typedef struct S169 T169;
typedef struct S504 T504;
typedef struct S613 T613;
typedef struct S34 T34;
typedef struct S509 T509;
typedef struct S377 T377;
typedef struct S587 T587;
typedef struct S495 T495;
typedef struct S380 T380;
typedef struct S172 T172;
typedef struct S344 T344;
typedef struct S164 T164;
typedef struct S71 T71;
typedef int T337;
typedef struct S205 T205;
typedef struct S63 T63;
typedef struct S7 T7;
typedef struct S418 T418;
typedef struct S575 T575;
typedef struct S396 T396;
typedef struct S227 T227;
typedef struct S142 T142;
typedef struct S401 T401;
typedef struct S625 T625;
typedef struct S644 T644;
typedef struct S464 T464;
typedef struct S663 T663;
typedef struct S334 T334;
typedef struct S419 T419;
typedef struct S381 T381;
typedef struct S446 T446;
typedef struct S498 T498;
typedef struct S417 T417;
typedef struct S581 T581;
typedef struct S491 T491;
typedef struct S647 T647;
typedef struct S565 T565;
typedef struct S11 T11;
typedef struct S580 T580;
typedef struct S433 T433;
typedef struct S215 T215;
typedef struct S506 T506;
typedef struct S141 T141;
typedef struct S96 T96;
typedef struct S312 T312;
typedef struct S335 T335;
typedef struct S248 T248;
typedef struct S281 T281;
typedef struct S655 T655;
typedef struct S316 T316;
typedef struct S384 T384;
typedef struct S421 T421;
typedef struct S100 T100;
typedef struct S130 T130;
typedef struct S127 T127;
typedef struct S75 T75;
typedef struct S336 T336;
typedef struct S659 T659;
typedef struct S154 T154;
typedef struct S567 T567;
typedef struct S148 T148;
typedef struct S424 T424;
typedef struct S170 T170;
typedef struct S563 T563;
typedef struct S305 T305;
typedef struct S603 T603;
typedef struct S546 T546;
typedef struct S247 T247;
typedef struct S136 T136;
typedef struct S108 T108;
typedef struct S648 T648;
typedef struct S112 T112;
typedef struct S473 T473;
typedef struct S451 T451;
typedef struct S467 T467;
typedef struct S568 T568;
typedef struct S210 T210;
typedef struct S74 T74;
typedef struct S83 T83;
typedef struct S571 T571;
typedef struct S637 T637;
typedef struct S594 T594;
typedef struct S485 T485;
typedef struct S151 T151;
typedef struct S584 T584;
typedef struct S400 T400;
typedef struct S413 T413;
typedef struct S286 T286;
typedef struct S579 T579;
typedef struct S297 T297;
typedef struct S530 T530;
typedef struct S64 T64;
typedef struct S382 T382;
typedef struct S30 T30;
typedef struct S59 T59;

/*C Header Pass 2 :*/
typedef T0**T528;
typedef T0**T430;
typedef T0**T264;
typedef T0**T346;
typedef T0**T235;
typedef T0**T257;
typedef T0**T73;
typedef T0**T596;
typedef T0**T470;
typedef T3*T9;
typedef T2*T132;
typedef T0**T477;

/*C Header Pass 3 :*/
struct S506{T8 _directory_stream;T8 _current_entry;};
int se_cmpT506(T506 o1,T506 o2);

/*C Header Pass 4 :*/
struct S589{Tid id;};
extern T589 M589;
struct S351{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T351 M351;
struct S330{Tid id;T0* _item;T0* _right;};
extern T330 M330;
struct S611{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T611 M611;
struct S363{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T363 M363;
struct S383{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T383 M383;
struct S420{Tid id;T0* _parameters;};
extern T420 M420;
struct S423{Tid id;T0* _parameters;};
extern T423 M423;
struct S114{Tid id;T0* _item;T0* _right;};
extern T114 M114;
struct S166{Tid id;T0* _item;T0* _right;};
extern T166 M166;
struct S276{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T276 M276;
struct S578{Tid id;T0* _system_id;};
extern T578 M578;
struct S188{Tid id;T6 _push_back_flag;T0* _name;T0* _string_name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T188 M188;
struct S416{Tid id;T0* _variables;T0* _error_handler;};
extern T416 M416;
struct S319{Tid id;T0* _first;T0* _second;};
extern T319 M319;
struct S432{Tid id;T0* _next;T0* _prefixes;T0* _local_parts;};
extern T432 M432;
struct S431{Tid id;};
extern T431 M431;
struct S590{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _decl_start_sent;T6 _decl_end_sent;};
extern T590 M590;
struct S202{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_system;};
extern T202 M202;
struct S650{Tid id;T0* _item;T0* _right;T0* _left;};
extern T650 M650;
struct S224{Tid id;T0* _next;T6 _has_error;T0* _last_error;};
extern T224 M224;
struct S481{Tid id;T2 _count;T0* _first_cell;};
extern T481 M481;
struct S309{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T309 M309;
struct S282{Tid id;T0* _parameters;};
extern T282 M282;
struct S529{Tid id;T0* _cluster_name;T0* _pathname;};
extern T529 M529;
struct S233{Tid id;T235 _storage;T2 _capacity;T2 _upper;};
extern T233 M233;
struct S255{Tid id;T257 _storage;T2 _capacity;T2 _upper;};
extern T255 M255;
struct S447{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;};
extern T447 M447;
struct S279{Tid id;T0* _declared_abstract;T0* _declared_address_expression;T0* _declared_arguments;T0* _declared_array_optimization;T0* _declared_assembly;T0* _declared_assertion;T0* _declared_case_insensitive;T0* _declared_check_vape;T0* _declared_clean;T0* _declared_cls_compliant;T0* _declared_component;T0* _declared_console_application;T0* _declared_create_keyword_extension;T0* _declared_culture;T0* _declared_dead_code_removal;T0* _declared_debug_option;T0* _declared_debug_tag;T0* _declared_debugger;T0* _declared_document;T0* _declared_dotnet_naming_convention;T0* _declared_dynamic_runtime;T0* _declared_exception_trace;T0* _declared_exclude;T0* _declared_export_option;T0* _declared_finalize_option;T0* _declared_flat_fst_optimization;T2 _declared_fst_expansion_factor;T0* _declared_fst_optimization;T0* _declared_garbage_collector;T0* _declared_gc_info;T2 _declared_heap_size;T0* _declared_header;T0* _declared_high_memory_compiler;T0* _declared_il_verifiable;T0* _declared_include;T0* _declared_inlining;T2 _declared_inlining_size;T0* _declared_jumps_optimization;T0* _declared_layout_optimization;T0* _declared_leaves_optimization;T0* _declared_line_generation;T0* _declared_link;T0* _declared_linker;T0* _declared_linux_fpu_double_precision;T0* _declared_manifest_string_trace;T0* _declared_map;T0* _declared_msil_generation;T0* _declared_multithreaded;T0* _declared_no_default_lib;T0* _declared_override_cluster;T0* _declared_portable_code_generation;T0* _declared_precompiled;T0* _declared_prefix_option;T0* _declared_profile;T0* _declared_public_key_token;T0* _declared_recursive;T0* _declared_reloads_optimization;T0* _declared_shared_library_definition;T0* _declared_split;T2 _declared_stack_size;T0* _declared_storable;T0* _declared_storable_filename;T0* _declared_strip_option;T0* _declared_target;T0* _declared_trace;T0* _declared_verbose;T0* _declared_version;T0* _declared_visible_filename;T0* _declared_warning;T0* _declared_wedit;};
extern T279 M279;
struct S147{Tid id;};
extern T147 M147;
struct S531{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T531 M531;
struct S343{Tid id;T132 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T343 M343;
struct S139{Tid id;};
extern T139 M139;
struct S586{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T586 M586;
struct S254{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T254 M254;
struct S505{Tid id;T0* _include_directories;T0* _link_libraries;};
extern T505 M505;
struct S561{Tid id;T0* _item;T0* _right;};
extern T561 M561;
struct S185{Tid id;};
extern T185 M185;
struct S39{Tid id;};
extern T39 M39;
struct S468{Tid id;};
extern T468 M468;
struct S379{Tid id;T0* _parameters;};
extern T379 M379;
struct S201{Tid id;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _libraries;};
extern T201 M201;
struct S229{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T229 M229;
struct S474{Tid id;};
extern T474 M474;
struct S209{Tid id;T0* _table;};
extern T209 M209;
struct S318{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T318 M318;
struct S134{Tid id;};
extern T134 M134;
struct S222{Tid id;T0* _start;T0* _error;T0* _tree;T0* _last;};
extern T222 M222;
struct S203{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;};
extern T203 M203;
struct S88{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T88 M88;
struct S508{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T508 M508;
struct S145{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T145 M145;
struct S143{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T143 M143;
struct S178{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T178 M178;
struct S35{Tid id;T2 _item;};
extern T35 M35;
struct S492{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T492 M492;
struct S153{Tid id;T0* _first;T0* _second;};
extern T153 M153;
struct S339{Tid id;};
extern T339 M339;
struct S422{Tid id;T0* _next;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;T0* _current_element;T0* _source_parser;};
extern T422 M422;
struct S489{Tid id;T0* _filename;};
extern T489 M489;
struct S582{Tid id;T0* _name;T0* _items;T3 _type;T3 _repetition;T6 _is_character_data_allowed;};
extern T582 M582;
struct S317{Tid id;T3 _value;};
extern T317 M317;
struct S558{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T558 M558;
struct S187{Tid id;T8 _item;};
extern T187 M187;
struct S315{Tid id;T0* _parameters;};
extern T315 M315;
struct S328{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T328 M328;
struct S541{Tid id;T0* _item;T0* _right;};
extern T541 M541;
struct S260{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T260 M260;
struct S29{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T29 M29;
struct S499{Tid id;T0* _name;T0* _string_name;T0* _path;T8 _output_stream;};
extern T499 M499;
struct S362{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T362 M362;
struct S110{Tid id;};
extern T110 M110;
struct S547{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T547 M547;
struct S140{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T140 M140;
struct S507{Tid id;T0* _tag;T0* _assembly_name;T0* _version;T0* _culture;T0* _public_key_token;T0* _class_prefix;};
extern T507 M507;
struct S109{Tid id;};
extern T109 M109;
struct S245{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T245 M245;
struct S428{Tid id;T430 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T428 M428;
struct S597{Tid id;};
extern T597 M597;
struct S262{Tid id;T264 _storage;T2 _capacity;T2 _upper;};
extern T262 M262;
struct S664{Tid id;};
extern T664 M664;
struct S660{Tid id;T0* _parent;T0* _data;};
extern T660 M660;
struct S117{Tid id;T0* _defined_values;};
extern T117 M117;
struct S146{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T146 M146;
struct S113{Tid id;T0* _parameters;};
extern T113 M113;
struct S519{Tid id;T0* _item;T0* _right;};
extern T519 M519;
struct S583{Tid id;T0* _first;T2 _count;T0* _second;T0* _tail;};
extern T583 M583;
struct S656{Tid id;T2 _count;T0* _first_cell;};
extern T656 M656;
struct S399{Tid id;T0* _feature_name;T0* _options;};
extern T399 M399;
struct S338{Tid id;};
extern T338 M338;
struct S228{Tid id;T0* _name;T0* _options;T0* _clusters;T0* _libraries;T0* _library_prefix;};
extern T228 M228;
struct S116{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T116 M116;
struct S258{Tid id;};
extern T258 M258;
struct S652{Tid id;T0* _parent;T0* _content;};
extern T652 M652;
struct S169{Tid id;T0* _name;};
extern T169 M169;
struct S504{Tid id;T0* _parameters;};
extern T504 M504;
struct S613{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T613 M613;
struct S34{Tid id;T6 _item;};
extern T34 M34;
struct S509{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T509 M509;
struct S377{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T377 M377;
struct S587{Tid id;T3 _item;T0* _right;};
extern T587 M587;
struct S495{Tid id;T2 _code;};
extern T495 M495;
struct S380{Tid id;T0* _parameters;};
extern T380 M380;
struct S172{Tid id;};
extern T172 M172;
struct S344{Tid id;T346 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T344 M344;
struct S164{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T164 M164;
struct S71{Tid id;T73 _storage;T2 _capacity;T2 _upper;};
extern T71 M71;
extern T337 M337;
struct S205{Tid id;};
extern T205 M205;
struct S63{Tid id;T0* _item;T0* _right;};
extern T63 M63;
struct S418{Tid id;T0* _parameters;};
extern T418 M418;
struct S575{Tid id;T2 _item;T0* _right;};
extern T575 M575;
struct S396{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T396 M396;
struct S227{Tid id;T0* _error_handler;T6 _has_error;};
extern T227 M227;
struct S142{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T142 M142;
struct S401{Tid id;T0* _item;T0* _right;};
extern T401 M401;
struct S625{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T625 M625;
struct S644{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T644 M644;
struct S464{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T464 M464;
struct S663{Tid id;};
extern T663 M663;
struct S334{Tid id;T0* _ast_factory;T0* _error_handler;T0* _library_parser;T0* _parsed_libraries;T0* _xml_parser;T0* _tree_pipe;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_library;};
extern T334 M334;
struct S419{Tid id;T0* _parameters;};
extern T419 M419;
struct S381{Tid id;T0* _parameters;};
extern T381 M381;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S498{Tid id;T0* _parameters;};
extern T498 M498;
struct S417{Tid id;};
extern T417 M417;
struct S581{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T581 M581;
struct S491{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T491 M491;
struct S647{Tid id;T0* _item;T0* _right;T0* _left;};
extern T647 M647;
struct S565{Tid id;T0* _item;T0* _right;};
extern T565 M565;
struct S11{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T11 M11;
struct S580{Tid id;T0* _name;T3 _type;T3 _value;T0* _default_value;T6 _is_list_type;};
extern T580 M580;
struct S433{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T0* _callbacks;T0* _dtd_callbacks;T2 _string_mode;T0* _last_error_description;T6 _stand_alone;T0* _entities;T0* _pe_entities;T6 _in_external_dtd;T0* _scanner;T0* _scanners;T2 _last_token;T0* _last_value;};
extern T433 M433;
struct S215{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _root_element;};
extern T215 M215;
extern T506 M506;
struct S141{Tid id;T0* _output_filename;T0* _variables;T0* _error_handler;};
extern T141 M141;
struct S96{Tid id;};
extern T96 M96;
struct S312{Tid id;T0* _item;T0* _right;};
extern T312 M312;
struct S335{Tid id;T0* _parameters;};
extern T335 M335;
struct S248{Tid id;T0* _clusters;};
extern T248 M248;
struct S281{Tid id;};
extern T281 M281;
struct S655{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T655 M655;
struct S316{Tid id;T0* _class_name;T0* _options;T0* _feature_options;};
extern T316 M316;
struct S384{Tid id;T0* _item;T0* _right;};
extern T384 M384;
struct S421{Tid id;T0* _parameters;};
extern T421 M421;
struct S100{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T100 M100;
struct S130{Tid id;T132 _storage;T2 _capacity;T2 _upper;};
extern T130 M130;
struct S127{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T127 M127;
struct S75{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T75 M75;
struct S336{Tid id;};
extern T336 M336;
struct S659{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T659 M659;
struct S154{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T154 M154;
struct S567{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T567 M567;
struct S148{Tid id;T506 _basic_directory;T0* _name;};
extern T148 M148;
struct S424{Tid id;};
extern T424 M424;
struct S251{Tid id;T6 _is_abstract;T6 _is_recursive;T6 _is_relative;T0* _name;T0* _library_prefix;T0* _cluster_prefix;T0* _pathname;T0* _libraries;T0* _options;T0* _class_options;T6 _is_mounted;T0* _parent;T0* _subclusters;};
extern T251 M251;
struct S446{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;};
extern T446 M446;
struct S170{Tid id;T506 _basic_directory;T0* _name;};
extern T170 M170;
struct S563{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T563 M563;
struct S305{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T305 M305;
struct S603{Tid id;};
extern T603 M603;
struct S546{Tid id;T0* _class_name;T0* _feature_name;T0* _external_name;};
extern T546 M546;
struct S247{Tid id;T0* _libraries;};
extern T247 M247;
struct S136{Tid id;};
extern T136 M136;
struct S108{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T108 M108;
struct S648{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;T6 _pre_sent;T6 _post_sent;};
extern T648 M648;
struct S112{Tid id;T73 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T112 M112;
struct S473{Tid id;T477 _storage;T2 _capacity;T2 _upper;};
extern T473 M473;
struct S451{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T451 M451;
struct S467{Tid id;T470 _storage;T2 _capacity;T2 _upper;};
extern T467 M467;
struct S568{Tid id;T0* _last_string;T6 _is_utf16;T6 _is_msb_first;T6 _is_detected;T0* _utf_queue;T0* _impl;};
extern T568 M568;
struct S210{Tid id;T0* _parent;T0* _ns_prefix;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _name;T2 _count;};
extern T210 M210;
struct S74{Tid id;T3 _item;};
extern T74 M74;
struct S83{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T83 M83;
struct S250{Tid id;T6 _is_root;T0* _pathname;T0* _library;T0* _library_prefix;T0* _position;};
extern T250 M250;
struct S571{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;};
extern T571 M571;
struct S637{Tid id;T0* _item;T0* _right;T0* _left;};
extern T637 M637;
struct S594{Tid id;T596 _storage;T2 _capacity;T2 _upper;};
extern T594 M594;
struct S485{Tid id;T2 _count;T0* _first_cell;};
extern T485 M485;
struct S151{Tid id;T506 _basic_directory;};
extern T151 M151;
struct S584{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T584 M584;
struct S400{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T400 M400;
struct S413{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T413 M413;
struct S286{Tid id;};
extern T286 M286;
struct S579{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T579 M579;
struct S297{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T297 M297;
struct S530{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T530 M530;
struct S64{Tid id;T0* _program_name;};
extern T64 M64;
struct S382{Tid id;T0* _parameters;};
extern T382 M382;
struct S30{Tid id;T0* _error_file;T0* _warning_file;T0* _info_file;T2 _error_count;};
extern T30 M30;
struct S59{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T59 M59;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
void r6fill_tagged_out_memory(T6 C);
T6 r6_px_and(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
void r3fill_tagged_out_memory(T3 C);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T6 r3_px_62(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
void r430copy_from(T430 C,T430 a1,T2 a2);
void r264clear_all(T264 C,T2 a1);
T264 r264realloc(T264 C,T2 a1,T2 a2);
void r264set_all_with(T264 C,T0* a1,T2 a2);
void r264clear(T264 C,T2 a1,T2 a2);
void r264copy_from(T264 C,T264 a1,T2 a2);
void r346copy_from(T346 C,T346 a1,T2 a2);
void r235clear_all(T235 C,T2 a1);
T235 r235realloc(T235 C,T2 a1,T2 a2);
void r235set_all_with(T235 C,T0* a1,T2 a2);
void r235clear(T235 C,T2 a1,T2 a2);
void r235copy_from(T235 C,T235 a1,T2 a2);
void r257clear_all(T257 C,T2 a1);
T257 r257realloc(T257 C,T2 a1,T2 a2);
void r257set_all_with(T257 C,T0* a1,T2 a2);
void r257clear(T257 C,T2 a1,T2 a2);
void r257copy_from(T257 C,T257 a1,T2 a2);
void r73clear_all(T73 C,T2 a1);
T73 r73realloc(T73 C,T2 a1,T2 a2);
void r73set_all_with(T73 C,T0* a1,T2 a2);
void r73clear(T73 C,T2 a1,T2 a2);
void r73copy_from(T73 C,T73 a1,T2 a2);
void r596clear_all(T596 C,T2 a1);
T596 r596realloc(T596 C,T2 a1,T2 a2);
void r596set_all_with(T596 C,T0* a1,T2 a2);
void r596clear(T596 C,T2 a1,T2 a2);
void r596copy_from(T596 C,T596 a1,T2 a2);
void r470clear_all(T470 C,T2 a1);
T470 r470realloc(T470 C,T2 a1,T2 a2);
void r470set_all_with(T470 C,T0* a1,T2 a2);
void r470clear(T470 C,T2 a1,T2 a2);
void r470copy_from(T470 C,T470 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
T2 r9fast_occurrences(T9 C,T3 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r132clear_all(T132 C,T2 a1);
T132 r132realloc(T132 C,T2 a1,T2 a2);
void r132set_all_with(T132 C,T2 a1,T2 a2);
void r132clear(T132 C,T2 a1,T2 a2);
void r132copy_from(T132 C,T132 a1,T2 a2);
void r477clear_all(T477 C,T2 a1);
T477 r477realloc(T477 C,T2 a1,T2 a2);
void r477set_all_with(T477 C,T0* a1,T2 a2);
void r477clear(T477 C,T2 a1,T2 a2);
void r477copy_from(T477 C,T477 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T2 r7occurrences(T7* C,T3 a1);
T2 r7item_code(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7make_from_string(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7out_in_tagged_out_memory(T7* C);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
void r7remove(T7* C,T2 a1);
T0* r7string(T7* C);
void r7extend(T7* C,T3 a1);
T0* r7_px_43(T7* C,T0* a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
T2 r7substring_index(T7* C,T0* a1,T2 a2);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
T0* r233out(T233* C);
void r233copy(T233* C,T0* a1);
T6 r233se_assigned_from(T0* a1);
void r233out_in_tagged_out_memory(T233* C);
void r233make(T233* C,T2 a1);
void r233fill_tagged_out_memory(T233* C);
T6 r233conforms_to(T233* C,T0* a1);
void r233resize(T233* C,T2 a1);
T0* r233twin(T233* C);
T0* r255out(T255* C);
void r255copy(T255* C,T0* a1);
T6 r255se_assigned_from(T0* a1);
void r255out_in_tagged_out_memory(T255* C);
void r255make(T255* C,T2 a1);
void r255fill_tagged_out_memory(T255* C);
T6 r255conforms_to(T255* C,T0* a1);
void r255resize(T255* C,T2 a1);
T0* r255twin(T255* C);
T0* r343out(T343* C);
void r343copy(T343* C,T0* a1);
T2 r343count(T343* C);
T2 r343item(T343* C,T2 a1);
T6 r343se_assigned_from(T0* a1);
void r343out_in_tagged_out_memory(T343* C);
void r343fill_tagged_out_memory(T343* C);
T6 r343conforms_to(T343* C,T0* a1);
T0* r343twin(T343* C);
T0* r428out(T428* C);
void r428copy(T428* C,T0* a1);
T0* r428item(T428* C,T2 a1);
T6 r428se_assigned_from(T0* a1);
void r428out_in_tagged_out_memory(T428* C);
void r428fill_tagged_out_memory(T428* C);
T6 r428conforms_to(T428* C,T0* a1);
T0* r428twin(T428* C);
T0* r262out(T262* C);
void r262copy(T262* C,T0* a1);
T6 r262se_assigned_from(T0* a1);
void r262out_in_tagged_out_memory(T262* C);
void r262make(T262* C,T2 a1);
void r262fill_tagged_out_memory(T262* C);
T6 r262conforms_to(T262* C,T0* a1);
void r262resize(T262* C,T2 a1);
T0* r262twin(T262* C);
T0* r344out(T344* C);
void r344copy(T344* C,T0* a1);
T0* r344item(T344* C,T2 a1);
T6 r344se_assigned_from(T0* a1);
void r344out_in_tagged_out_memory(T344* C);
void r344fill_tagged_out_memory(T344* C);
T6 r344conforms_to(T344* C,T0* a1);
T0* r344twin(T344* C);
T0* r71out(T71* C);
void r71copy(T71* C,T0* a1);
T6 r71se_assigned_from(T0* a1);
void r71out_in_tagged_out_memory(T71* C);
void r71make(T71* C,T2 a1);
void r71fill_tagged_out_memory(T71* C);
T6 r71conforms_to(T71* C,T0* a1);
void r71resize(T71* C,T2 a1);
T0* r71twin(T71* C);
T0* r130out(T130* C);
void r130copy(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
void r130out_in_tagged_out_memory(T130* C);
void r130make(T130* C,T2 a1);
void r130fill_tagged_out_memory(T130* C);
T6 r130conforms_to(T130* C,T0* a1);
void r130resize(T130* C,T2 a1);
T0* r130twin(T130* C);
void r130with_capacity(T130* C,T2 a1);
void r130from_collection(T130* C,T0* a1);
T0* r112out(T112* C);
void r112copy(T112* C,T0* a1);
T0* r112item(T112* C,T2 a1);
T6 r112valid_index(T112* C,T2 a1);
T6 r112se_assigned_from(T0* a1);
void r112out_in_tagged_out_memory(T112* C);
void r112make(T112* C,T2 a1,T2 a2);
void r112fill_tagged_out_memory(T112* C);
T6 r112conforms_to(T112* C,T0* a1);
T0* r112twin(T112* C);
T0* r473out(T473* C);
void r473copy(T473* C,T0* a1);
T2 r473count(T473* C);
T0* r473item(T473* C,T2 a1);
T6 r473se_assigned_from(T0* a1);
void r473out_in_tagged_out_memory(T473* C);
void r473make(T473* C,T2 a1);
void r473fill_tagged_out_memory(T473* C);
T6 r473conforms_to(T473* C,T0* a1);
void r473resize(T473* C,T2 a1);
T0* r473twin(T473* C);
T0* r467out(T467* C);
void r467copy(T467* C,T0* a1);
T6 r467se_assigned_from(T0* a1);
void r467out_in_tagged_out_memory(T467* C);
void r467make(T467* C,T2 a1);
void r467fill_tagged_out_memory(T467* C);
T6 r467conforms_to(T467* C,T0* a1);
void r467resize(T467* C,T2 a1);
T0* r467twin(T467* C);
T0* r594out(T594* C);
void r594copy(T594* C,T0* a1);
T6 r594se_assigned_from(T0* a1);
void r594out_in_tagged_out_memory(T594* C);
void r594make(T594* C,T2 a1);
void r594fill_tagged_out_memory(T594* C);
T6 r594conforms_to(T594* C,T0* a1);
void r594resize(T594* C,T2 a1);
T0* r594twin(T594* C);
T0* r351out(T351* C);
T2 r351new_capacity(T2 a1);
void r351copy(T351* C,T0* a1);
void r351make_clashes(T351* C,T2 a1);
T0* r351cursor_item(T351* C,T0* a1);
void r351search_position(T351* C,T0* a1);
void r351remove_traversing_cursor(T351* C,T0* a1);
void r351clone_slots(T351* C);
void r351clone_clashes(T351* C);
void r351move_all_cursors_after(T351* C);
void r351make_items(T351* C,T2 a1);
void r351add_traversing_cursor(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T0* r351clone(T0* a1);
void r351out_in_tagged_out_memory(T351* C);
void r351put_new(T351* C,T0* a1);
void r351slots_wipe_out(T351* C);
void r351make(T351* C,T2 a1);
void r351clashes_wipe_out(T351* C);
void r351clone_items(T351* C);
T6 r351cursor_after(T0* a1);
T6 r351conforms_to(T351* C,T0* a1);
T6 r351has(T351* C,T0* a1);
T2 r351hash_position(T351* C,T0* a1);
void r351cursor_forth(T351* C,T0* a1);
extern T0*oBC121fixed_integer_array_;
void r351items_resize(T351* C,T2 a1);
void r351resize(T351* C,T2 a1);
void r351cursor_start(T351* C,T0* a1);
void r351clashes_resize(T351* C,T2 a1);
void r351slots_resize(T351* C,T2 a1);
T0* r351twin(T351* C);
void r351force_last(T351* C,T0* a1);
T0* r351new_cursor(T351* C);
void r351make_slots(T351* C,T2 a1);
void r351put_last(T351* C,T0* a1);
void r351move_all_cursors(T351* C,T2 a1,T2 a2);
T2 r351new_modulus(T2 a1);
T6 r351cursor_off(T0* a1);
void r351compress(T351* C);
T0* r330out(T330* C);
T6 r330se_assigned_from(T0* a1);
void r330out_in_tagged_out_memory(T330* C);
T6 r330conforms_to(T330* C,T0* a1);
T0* r330twin(T330* C);
T0* r611out(T611* C);
void r611copy(T611* C,T0* a1);
T6 r611se_assigned_from(T0* a1);
void r611out_in_tagged_out_memory(T611* C);
void r611make(T611* C,T0* a1);
T6 r611off(T611* C);
T6 r611conforms_to(T611* C,T0* a1);
T0* r611twin(T611* C);
T0* r363out(T363* C);
void r363copy(T363* C,T0* a1);
void r363make_clashes(T363* C,T2 a1);
void r363search_position(T363* C,T0* a1);
void r363remove_traversing_cursor(T363* C,T0* a1);
void r363clone_slots(T363* C);
void r363clone_clashes(T363* C);
void r363move_all_cursors_after(T363* C);
void r363make_items(T363* C,T2 a1);
void r363add_traversing_cursor(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
T0* r363clone(T0* a1);
void r363out_in_tagged_out_memory(T363* C);
void r363put_new(T363* C,T2 a1,T0* a2);
void r363make(T363* C,T2 a1);
void r363clone_items(T363* C);
T6 r363conforms_to(T363* C,T0* a1);
void r363make_keys(T363* C,T2 a1);
T2 r363hash_position(T363* C,T0* a1);
void r363clone_keys(T363* C);
T2 r363found_item(T363* C);
void r363make_with_equality_testers(T363* C,T2 a1,T0* a2,T0* a3);
T6 r363found(T363* C);
void r363search(T363* C,T0* a1);
T0* r363twin(T363* C);
T0* r363new_cursor(T363* C);
void r363make_slots(T363* C,T2 a1);
T2 r363new_modulus(T2 a1);
T6 r363cursor_off(T0* a1);
T0* r383out(T383* C);
void r383copy(T383* C,T0* a1);
void r383remove_traversing_cursor(T383* C,T0* a1);
void r383move_all_cursors_after(T383* C);
void r383add_traversing_cursor(T383* C,T0* a1);
T6 r383se_assigned_from(T0* a1);
void r383out_in_tagged_out_memory(T383* C);
void r383make(T383* C);
T6 r383conforms_to(T383* C,T0* a1);
void r383cursor_forth(T383* C,T0* a1);
void r383cursor_start(T383* C,T0* a1);
T0* r383twin(T383* C);
T0* r383new_cursor(T383* C);
void r383put_last(T383* C,T0* a1);
T6 r383cursor_off(T0* a1);
T0* r114out(T114* C);
T6 r114se_assigned_from(T0* a1);
void r114out_in_tagged_out_memory(T114* C);
T6 r114conforms_to(T114* C,T0* a1);
T0* r114twin(T114* C);
T0* r166out(T166* C);
T6 r166se_assigned_from(T0* a1);
void r166out_in_tagged_out_memory(T166* C);
T6 r166conforms_to(T166* C,T0* a1);
T0* r166twin(T166* C);
T0* r276out(T276* C);
void r276copy(T276* C,T0* a1);
T6 r276se_assigned_from(T0* a1);
void r276out_in_tagged_out_memory(T276* C);
T6 r276off(T276* C);
T6 r276conforms_to(T276* C,T0* a1);
T0* r276twin(T276* C);
T0* r319out(T319* C);
T6 r319se_assigned_from(T0* a1);
void r319out_in_tagged_out_memory(T319* C);
void r319make(T319* C,T0* a1,T0* a2);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
T0* r650out(T650* C);
T6 r650se_assigned_from(T0* a1);
void r650out_in_tagged_out_memory(T650* C);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
void r650put_right(T650* C,T0* a1);
T0* r481out(T481* C);
void r481copy(T481* C,T0* a1);
void r481force(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
void r481out_in_tagged_out_memory(T481* C);
void r481remove(T481* C);
T6 r481conforms_to(T481* C,T0* a1);
T0* r481twin(T481* C);
T0* r309out(T309* C);
void r309copy(T309* C,T0* a1);
void r309set(T309* C,T0* a1,T6 a2,T6 a3);
T6 r309se_assigned_from(T0* a1);
T6 r309is_first(T309* C);
void r309out_in_tagged_out_memory(T309* C);
T6 r309is_last(T309* C);
void r309make(T309* C,T0* a1);
void r309forth(T309* C);
T6 r309conforms_to(T309* C,T0* a1);
void r309start(T309* C);
void r309go_after(T309* C);
void r309set_after(T309* C);
T0* r309twin(T309* C);
T0* r531out(T531* C);
void r531copy(T531* C,T0* a1);
void r531remove_traversing_cursor(T531* C,T0* a1);
void r531move_all_cursors_after(T531* C);
void r531add_traversing_cursor(T531* C,T0* a1);
T6 r531se_assigned_from(T0* a1);
void r531out_in_tagged_out_memory(T531* C);
void r531make(T531* C);
T6 r531conforms_to(T531* C,T0* a1);
void r531cursor_forth(T531* C,T0* a1);
void r531cursor_start(T531* C,T0* a1);
T0* r531twin(T531* C);
void r531force_last(T531* C,T0* a1);
T0* r531new_cursor(T531* C);
T6 r531cursor_off(T0* a1);
T0* r139out(T139* C);
T6 r139se_assigned_from(T0* a1);
void r139out_in_tagged_out_memory(T139* C);
T6 r139conforms_to(T139* C,T0* a1);
T6 r139test(T0* a1,T0* a2);
T0* r139twin(T139* C);
T0* r586out(T586* C);
void r586copy(T586* C,T0* a1);
void r586set(T586* C,T0* a1,T6 a2,T6 a3);
T6 r586se_assigned_from(T0* a1);
void r586out_in_tagged_out_memory(T586* C);
T6 r586is_last(T586* C);
void r586make(T586* C,T0* a1);
T6 r586conforms_to(T586* C,T0* a1);
void r586set_after(T586* C);
T0* r586twin(T586* C);
T0* r254out(T254* C);
T2 r254new_capacity(T2 a1);
void r254copy(T254* C,T0* a1);
T6 r254extendible(T254* C,T2 a1);
void r254remove_traversing_cursor(T254* C,T0* a1);
void r254move_all_cursors_after(T254* C);
void r254add_traversing_cursor(T254* C,T0* a1);
T6 r254se_assigned_from(T0* a1);
T0* r254clone(T0* a1);
void r254out_in_tagged_out_memory(T254* C);
T6 r254cursor_before(T0* a1);
void r254make(T254* C,T2 a1);
T6 r254cursor_after(T0* a1);
T6 r254conforms_to(T254* C,T0* a1);
void r254resize(T254* C,T2 a1);
T0* r254twin(T254* C);
void r254force_last(T254* C,T0* a1);
T0* r254new_cursor(T254* C);
void r254put_last(T254* C,T0* a1);
T6 r254cursor_off(T0* a1);
T0* r561out(T561* C);
T6 r561se_assigned_from(T0* a1);
void r561out_in_tagged_out_memory(T561* C);
T6 r561conforms_to(T561* C,T0* a1);
T0* r561twin(T561* C);
T0* r468out(T468* C);
T6 r468se_assigned_from(T0* a1);
void r468out_in_tagged_out_memory(T468* C);
T0* r468make(T2 a1);
T6 r468conforms_to(T468* C,T0* a1);
T0* r468resize(T0* a1,T2 a2);
T0* r468twin(T468* C);
T0* r229out(T229* C);
T2 r229new_capacity(T2 a1);
void r229copy(T229* C,T0* a1);
void r229wipe_out(T229* C);
void r229make_clashes(T229* C,T2 a1);
void r229search_position(T229* C,T0* a1);
void r229remove_traversing_cursor(T229* C,T0* a1);
void r229clone_slots(T229* C);
void r229keys_resize(T229* C,T2 a1);
void r229clone_clashes(T229* C);
void r229make_items(T229* C,T2 a1);
void r229move_all_cursors_after(T229* C);
void r229add_traversing_cursor(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
T0* r229clone(T0* a1);
void r229out_in_tagged_out_memory(T229* C);
void r229slots_wipe_out(T229* C);
void r229make(T229* C,T2 a1);
void r229clashes_wipe_out(T229* C);
void r229clone_items(T229* C);
T6 r229conforms_to(T229* C,T0* a1);
void r229make_keys(T229* C,T2 a1);
void r229force_new(T229* C,T0* a1,T0* a2);
T2 r229hash_position(T229* C,T0* a1);
void r229items_wipe_out(T229* C);
void r229items_resize(T229* C,T2 a1);
void r229clone_keys(T229* C);
void r229make_with_equality_testers(T229* C,T2 a1,T0* a2,T0* a3);
void r229resize(T229* C,T2 a1);
T0* r229found_item(T229* C);
T6 r229found(T229* C);
void r229search(T229* C,T0* a1);
void r229clashes_resize(T229* C,T2 a1);
void r229slots_resize(T229* C,T2 a1);
T0* r229twin(T229* C);
void r229keys_wipe_out(T229* C);
T0* r229new_cursor(T229* C);
void r229make_slots(T229* C,T2 a1);
T2 r229new_modulus(T2 a1);
T6 r229cursor_off(T0* a1);
T0* r474out(T474* C);
void r474clear_all(T0* a1);
T6 r474se_assigned_from(T0* a1);
void r474out_in_tagged_out_memory(T474* C);
T0* r474make(T2 a1);
T6 r474conforms_to(T474* C,T0* a1);
T0* r474resize(T0* a1,T2 a2);
T0* r474twin(T474* C);
T0* r318out(T318* C);
void r318copy(T318* C,T0* a1);
void r318set(T318* C,T0* a1,T6 a2,T6 a3);
T6 r318se_assigned_from(T0* a1);
void r318out_in_tagged_out_memory(T318* C);
void r318make(T318* C,T0* a1);
T6 r318conforms_to(T318* C,T0* a1);
void r318set_after(T318* C);
T0* r318twin(T318* C);
T0* r134out(T134* C);
T6 r134se_assigned_from(T0* a1);
void r134out_in_tagged_out_memory(T134* C);
T0* r134to_fixed_array(T0* a1);
T0* r134make(T2 a1);
T0* r134make_from_array(T0* a1);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134resize(T0* a1,T2 a2);
T0* r134twin(T134* C);
T0* r88out(T88* C);
void r88copy(T88* C,T0* a1);
void r88set(T88* C,T0* a1,T6 a2,T6 a3);
T6 r88se_assigned_from(T0* a1);
void r88out_in_tagged_out_memory(T88* C);
void r88make(T88* C,T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88set_after(T88* C);
T0* r88twin(T88* C);
T0* r508out(T508* C);
void r508copy(T508* C,T0* a1);
void r508set(T508* C,T0* a1,T6 a2,T6 a3);
T6 r508se_assigned_from(T0* a1);
void r508out_in_tagged_out_memory(T508* C);
void r508make(T508* C,T0* a1);
T6 r508conforms_to(T508* C,T0* a1);
void r508set_after(T508* C);
T0* r508twin(T508* C);
T0* r178out(T178* C);
void r178copy(T178* C,T0* a1);
T0* r178item(T178* C);
T6 r178se_assigned_from(T0* a1);
void r178out_in_tagged_out_memory(T178* C);
T6 r178after(T178* C);
void r178make(T178* C,T0* a1);
void r178forth(T178* C);
T6 r178off(T178* C);
T6 r178conforms_to(T178* C,T0* a1);
void r178start(T178* C);
T0* r178twin(T178* C);
T0* r153out(T153* C);
T6 r153se_assigned_from(T0* a1);
void r153out_in_tagged_out_memory(T153* C);
void r153make(T153* C,T0* a1,T0* a2);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
T0* r558out(T558* C);
void r558copy(T558* C,T0* a1);
void r558set(T558* C,T0* a1,T6 a2,T6 a3);
T6 r558se_assigned_from(T0* a1);
void r558out_in_tagged_out_memory(T558* C);
void r558make(T558* C,T0* a1);
T6 r558conforms_to(T558* C,T0* a1);
void r558set_after(T558* C);
T0* r558twin(T558* C);
T0* r328out(T328* C);
void r328copy(T328* C,T0* a1);
void r328remove_traversing_cursor(T328* C,T0* a1);
void r328cursor_go_after(T328* C,T0* a1);
void r328move_all_cursors_after(T328* C);
void r328add_traversing_cursor(T328* C,T0* a1);
T6 r328se_assigned_from(T0* a1);
void r328out_in_tagged_out_memory(T328* C);
void r328make(T328* C);
T6 r328conforms_to(T328* C,T0* a1);
void r328cursor_forth(T328* C,T0* a1);
void r328cursor_start(T328* C,T0* a1);
T0* r328twin(T328* C);
T0* r328new_cursor(T328* C);
void r328put_last(T328* C,T0* a1);
T6 r328cursor_off(T0* a1);
T0* r541out(T541* C);
T6 r541se_assigned_from(T0* a1);
void r541out_in_tagged_out_memory(T541* C);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541twin(T541* C);
T0* r260out(T260* C);
T2 r260new_capacity(T2 a1);
void r260copy(T260* C,T0* a1);
T6 r260extendible(T260* C,T2 a1);
void r260remove_traversing_cursor(T260* C,T0* a1);
void r260move_all_cursors_after(T260* C);
void r260add_traversing_cursor(T260* C,T0* a1);
T6 r260se_assigned_from(T0* a1);
T0* r260clone(T0* a1);
void r260out_in_tagged_out_memory(T260* C);
T6 r260cursor_before(T0* a1);
void r260make(T260* C,T2 a1);
T6 r260cursor_after(T0* a1);
T6 r260conforms_to(T260* C,T0* a1);
void r260resize(T260* C,T2 a1);
T0* r260twin(T260* C);
void r260force_last(T260* C,T0* a1);
T0* r260new_cursor(T260* C);
T6 r260cursor_off(T0* a1);
T0* r29out(T29* C);
void r29copy(T29* C,T0* a1);
void r29set(T29* C,T0* a1,T6 a2,T6 a3);
T6 r29se_assigned_from(T0* a1);
void r29out_in_tagged_out_memory(T29* C);
void r29make(T29* C,T0* a1);
T6 r29conforms_to(T29* C,T0* a1);
void r29set_after(T29* C);
T0* r29twin(T29* C);
T0* r362out(T362* C);
void r362copy(T362* C,T0* a1);
T0* r362item(T362* C);
T6 r362se_assigned_from(T0* a1);
void r362out_in_tagged_out_memory(T362* C);
T6 r362after(T362* C);
void r362make(T362* C,T0* a1);
T6 r362off(T362* C);
T6 r362conforms_to(T362* C,T0* a1);
T0* r362twin(T362* C);
T0* r547out(T547* C);
void r547copy(T547* C,T0* a1);
T0* r547cursor_item(T0* a1);
void r547remove_traversing_cursor(T547* C,T0* a1);
void r547move_all_cursors_after(T547* C);
void r547add_traversing_cursor(T547* C,T0* a1);
T6 r547se_assigned_from(T0* a1);
void r547out_in_tagged_out_memory(T547* C);
void r547make(T547* C);
T6 r547cursor_after(T0* a1);
T6 r547conforms_to(T547* C,T0* a1);
void r547cursor_forth(T547* C,T0* a1);
void r547cursor_start(T547* C,T0* a1);
T0* r547twin(T547* C);
void r547force_last(T547* C,T0* a1);
T0* r547new_cursor(T547* C);
T6 r547cursor_off(T0* a1);
T0* r245out(T245* C);
void r245copy(T245* C,T0* a1);
T6 r245se_assigned_from(T0* a1);
void r245out_in_tagged_out_memory(T245* C);
void r245make(T245* C,T0* a1);
T6 r245off(T245* C);
T6 r245conforms_to(T245* C,T0* a1);
T0* r245twin(T245* C);
T0* r597out(T597* C);
T6 r597se_assigned_from(T0* a1);
void r597out_in_tagged_out_memory(T597* C);
T0* r597make(T2 a1);
T6 r597conforms_to(T597* C,T0* a1);
T0* r597resize(T0* a1,T2 a2);
T0* r597twin(T597* C);
T0* r519out(T519* C);
T6 r519se_assigned_from(T0* a1);
void r519out_in_tagged_out_memory(T519* C);
T6 r519conforms_to(T519* C,T0* a1);
T0* r519twin(T519* C);
T0* r656out(T656* C);
void r656copy(T656* C,T0* a1);
void r656force(T656* C,T0* a1);
T0* r656item(T656* C);
T6 r656se_assigned_from(T0* a1);
void r656out_in_tagged_out_memory(T656* C);
void r656remove(T656* C);
T6 r656conforms_to(T656* C,T0* a1);
T0* r656twin(T656* C);
T0* r338out(T338* C);
T6 r338se_assigned_from(T0* a1);
void r338out_in_tagged_out_memory(T338* C);
T0* r338make(T2 a1);
T6 r338conforms_to(T338* C,T0* a1);
T0* r338resize(T0* a1,T2 a2);
T0* r338twin(T338* C);
T0* r258out(T258* C);
T6 r258se_assigned_from(T0* a1);
void r258out_in_tagged_out_memory(T258* C);
T0* r258make(T2 a1);
T6 r258conforms_to(T258* C,T0* a1);
T0* r258resize(T0* a1,T2 a2);
T0* r258twin(T258* C);
T0* r613out(T613* C);
void r613copy(T613* C,T0* a1);
T0* r613cursor_item(T0* a1);
void r613remove_traversing_cursor(T613* C,T0* a1);
void r613move_all_cursors_after(T613* C);
void r613add_traversing_cursor(T613* C,T0* a1);
T6 r613se_assigned_from(T0* a1);
void r613out_in_tagged_out_memory(T613* C);
void r613force_first(T613* C,T0* a1);
void r613make(T613* C);
T6 r613cursor_after(T0* a1);
T6 r613conforms_to(T613* C,T0* a1);
void r613cursor_forth(T613* C,T0* a1);
void r613cursor_start(T613* C,T0* a1);
T0* r613twin(T613* C);
void r613force_last(T613* C,T0* a1);
T0* r613new_cursor(T613* C);
T6 r613cursor_off(T0* a1);
T0* r509out(T509* C);
void r509copy(T509* C,T0* a1);
void r509remove_traversing_cursor(T509* C,T0* a1);
void r509move_all_cursors_after(T509* C);
void r509add_traversing_cursor(T509* C,T0* a1);
T6 r509se_assigned_from(T0* a1);
void r509out_in_tagged_out_memory(T509* C);
void r509make(T509* C);
T6 r509conforms_to(T509* C,T0* a1);
void r509cursor_forth(T509* C,T0* a1);
void r509cursor_start(T509* C,T0* a1);
T0* r509twin(T509* C);
void r509force_last(T509* C,T0* a1);
T0* r509new_cursor(T509* C);
T6 r509cursor_off(T0* a1);
T0* r377out(T377* C);
void r377copy(T377* C,T0* a1);
T6 r377se_assigned_from(T0* a1);
void r377out_in_tagged_out_memory(T377* C);
void r377make(T377* C,T0* a1);
T6 r377off(T377* C);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
T0* r587out(T587* C);
T6 r587se_assigned_from(T0* a1);
void r587out_in_tagged_out_memory(T587* C);
T6 r587conforms_to(T587* C,T0* a1);
T0* r587twin(T587* C);
T0* r164out(T164* C);
void r164copy(T164* C,T0* a1);
T0* r164last(T164* C);
T0* r164cursor_item(T0* a1);
T6 r164cursor_is_last(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
void r164remove_traversing_cursor(T164* C,T0* a1);
T0* r164item(T164* C,T2 a1);
void r164move_all_cursors_after(T164* C);
void r164add_traversing_cursor(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C);
T6 r164cursor_after(T0* a1);
T6 r164conforms_to(T164* C,T0* a1);
void r164cursor_forth(T164* C,T0* a1);
void r164cursor_start(T164* C,T0* a1);
T0* r164twin(T164* C);
void r164force_last(T164* C,T0* a1);
T0* r164new_cursor(T164* C);
void r164put_last(T164* C,T0* a1);
T6 r164cursor_off(T0* a1);
T0* r63out(T63* C);
T6 r63se_assigned_from(T0* a1);
void r63out_in_tagged_out_memory(T63* C);
T6 r63conforms_to(T63* C,T0* a1);
T0* r63twin(T63* C);
T0* r575out(T575* C);
T6 r575se_assigned_from(T0* a1);
void r575out_in_tagged_out_memory(T575* C);
T6 r575conforms_to(T575* C,T0* a1);
T0* r575twin(T575* C);
T0* r396out(T396* C);
void r396copy(T396* C,T0* a1);
void r396set(T396* C,T0* a1,T6 a2,T6 a3);
T6 r396se_assigned_from(T0* a1);
void r396out_in_tagged_out_memory(T396* C);
void r396make(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
void r396set_after(T396* C);
T0* r396twin(T396* C);
T0* r401out(T401* C);
T6 r401se_assigned_from(T0* a1);
void r401out_in_tagged_out_memory(T401* C);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401twin(T401* C);
T0* r625out(T625* C);
void r625copy(T625* C,T0* a1);
void r625set(T625* C,T0* a1,T6 a2,T6 a3);
T6 r625se_assigned_from(T0* a1);
void r625out_in_tagged_out_memory(T625* C);
void r625make(T625* C,T0* a1);
T6 r625conforms_to(T625* C,T0* a1);
void r625set_after(T625* C);
T0* r625twin(T625* C);
T0* r644out(T644* C);
void r644copy(T644* C,T0* a1);
void r644set(T644* C,T0* a1,T6 a2,T6 a3);
T6 r644se_assigned_from(T0* a1);
void r644out_in_tagged_out_memory(T644* C);
void r644make(T644* C,T0* a1);
T6 r644conforms_to(T644* C,T0* a1);
void r644set_after(T644* C);
T0* r644twin(T644* C);
T0* r464out(T464* C);
void r464copy(T464* C,T0* a1);
T6 r464se_assigned_from(T0* a1);
void r464out_in_tagged_out_memory(T464* C);
void r464make(T464* C,T0* a1);
T6 r464off(T464* C);
T6 r464conforms_to(T464* C,T0* a1);
T0* r464twin(T464* C);
T0* r581out(T581* C);
void r581copy(T581* C,T0* a1);
T0* r581cursor_item(T0* a1);
void r581remove_traversing_cursor(T581* C,T0* a1);
void r581move_all_cursors_after(T581* C);
void r581add_traversing_cursor(T581* C,T0* a1);
T6 r581se_assigned_from(T0* a1);
void r581out_in_tagged_out_memory(T581* C);
void r581make(T581* C);
T6 r581cursor_after(T0* a1);
T6 r581conforms_to(T581* C,T0* a1);
void r581cursor_forth(T581* C,T0* a1);
void r581cursor_start(T581* C,T0* a1);
T0* r581twin(T581* C);
void r581force_last(T581* C,T0* a1);
T0* r581new_cursor(T581* C);
T6 r581cursor_off(T0* a1);
T0* r647out(T647* C);
T6 r647se_assigned_from(T0* a1);
void r647out_in_tagged_out_memory(T647* C);
T6 r647conforms_to(T647* C,T0* a1);
T0* r647twin(T647* C);
void r647put_right(T647* C,T0* a1);
T0* r565out(T565* C);
T6 r565se_assigned_from(T0* a1);
void r565out_in_tagged_out_memory(T565* C);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565twin(T565* C);
T0* r312out(T312* C);
T6 r312se_assigned_from(T0* a1);
void r312out_in_tagged_out_memory(T312* C);
T6 r312conforms_to(T312* C,T0* a1);
T0* r312twin(T312* C);
T0* r384out(T384* C);
T6 r384se_assigned_from(T0* a1);
void r384out_in_tagged_out_memory(T384* C);
T6 r384conforms_to(T384* C,T0* a1);
T0* r384twin(T384* C);
T0* r127out(T127* C);
T2 r127new_capacity(T2 a1);
void r127copy(T127* C,T0* a1);
void r127force(T127* C,T0* a1,T0* a2);
T0* r127keys_item(T127* C,T2 a1);
T2 r127clashes_item(T127* C,T2 a1);
void r127make_clashes(T127* C,T2 a1);
T0* r127cursor_item(T127* C,T0* a1);
void r127search_position(T127* C,T0* a1);
void r127remove_traversing_cursor(T127* C,T0* a1);
void r127clone_slots(T127* C);
void r127keys_resize(T127* C,T2 a1);
T0* r127items_item(T127* C,T2 a1);
T0* r127item(T127* C,T0* a1);
void r127clone_clashes(T127* C);
void r127move_all_cursors_after(T127* C);
void r127make_items(T127* C,T2 a1);
void r127add_traversing_cursor(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
T0* r127clone(T0* a1);
T2 r127slots_item(T127* C,T2 a1);
void r127out_in_tagged_out_memory(T127* C);
void r127clone_items(T127* C);
T6 r127cursor_after(T0* a1);
T6 r127conforms_to(T127* C,T0* a1);
T6 r127has(T127* C,T0* a1);
void r127make_keys(T127* C,T2 a1);
T2 r127hash_position(T127* C,T0* a1);
void r127cursor_forth(T127* C,T0* a1);
void r127items_resize(T127* C,T2 a1);
void r127clone_keys(T127* C);
void r127make_with_equality_testers(T127* C,T2 a1,T0* a2,T0* a3);
void r127resize(T127* C,T2 a1);
void r127make_map(T127* C,T2 a1);
void r127cursor_start(T127* C,T0* a1);
void r127clashes_resize(T127* C,T2 a1);
void r127slots_resize(T127* C,T2 a1);
T0* r127twin(T127* C);
T0* r127new_cursor(T127* C);
void r127make_slots(T127* C,T2 a1);
T2 r127new_modulus(T2 a1);
T6 r127cursor_off(T0* a1);
T0* r154out(T154* C);
void r154copy(T154* C,T0* a1);
void r154set(T154* C,T0* a1,T6 a2,T6 a3);
T0* r154item(T154* C);
T6 r154se_assigned_from(T0* a1);
void r154out_in_tagged_out_memory(T154* C);
T6 r154is_last(T154* C);
void r154make(T154* C,T0* a1);
void r154forth(T154* C);
T6 r154conforms_to(T154* C,T0* a1);
void r154start(T154* C);
void r154set_after(T154* C);
T0* r154twin(T154* C);
T0* r603out(T603* C);
T6 r603se_assigned_from(T0* a1);
void r603out_in_tagged_out_memory(T603* C);
T6 r603conforms_to(T603* C,T0* a1);
T6 r603test(T0* a1,T0* a2);
T0* r603twin(T603* C);
T0* r136out(T136* C);
T6 r136se_assigned_from(T0* a1);
void r136out_in_tagged_out_memory(T136* C);
T0* r136make(T2 a1);
T6 r136conforms_to(T136* C,T0* a1);
T0* r136resize(T0* a1,T2 a2);
T0* r136twin(T136* C);
T0* r451out(T451* C);
T2 r451new_capacity(T2 a1);
void r451copy(T451* C,T0* a1);
void r451force(T451* C,T0* a1,T0* a2);
void r451wipe_out(T451* C);
void r451make_clashes(T451* C,T2 a1);
void r451search_position(T451* C,T0* a1);
void r451remove_traversing_cursor(T451* C,T0* a1);
void r451clone_slots(T451* C);
extern T2 oBC125default_capacity;
void r451keys_resize(T451* C,T2 a1);
void r451clone_clashes(T451* C);
T0* r451item(T451* C,T0* a1);
void r451move_all_cursors_after(T451* C);
void r451make_items(T451* C,T2 a1);
void r451add_traversing_cursor(T451* C,T0* a1);
T6 r451se_assigned_from(T0* a1);
T0* r451clone(T0* a1);
void r451out_in_tagged_out_memory(T451* C);
void r451slots_wipe_out(T451* C);
void r451make(T451* C,T2 a1);
void r451clashes_wipe_out(T451* C);
void r451clone_items(T451* C);
T6 r451conforms_to(T451* C,T0* a1);
T6 r451has(T451* C,T0* a1);
void r451make_keys(T451* C,T2 a1);
T2 r451hash_position(T451* C,T0* a1);
void r451items_wipe_out(T451* C);
void r451items_resize(T451* C,T2 a1);
void r451clone_keys(T451* C);
void r451resize(T451* C,T2 a1);
void r451make_with_equality_testers(T451* C,T2 a1,T0* a2,T0* a3);
void r451clashes_resize(T451* C,T2 a1);
void r451slots_resize(T451* C,T2 a1);
T0* r451twin(T451* C);
void r451keys_wipe_out(T451* C);
T0* r451new_cursor(T451* C);
void r451make_slots(T451* C,T2 a1);
T2 r451new_modulus(T2 a1);
T6 r451cursor_off(T0* a1);
T0* r83out(T83* C);
void r83copy(T83* C,T0* a1);
T0* r83cursor_item(T0* a1);
void r83remove_traversing_cursor(T83* C,T0* a1);
void r83move_all_cursors_after(T83* C);
void r83add_traversing_cursor(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
void r83out_in_tagged_out_memory(T83* C);
void r83make(T83* C);
T6 r83cursor_after(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
void r83cursor_forth(T83* C,T0* a1);
void r83cursor_start(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83force_last(T83* C,T0* a1);
T0* r83new_cursor(T83* C);
T6 r83cursor_off(T0* a1);
T0* r571out(T571* C);
void r571copy(T571* C,T0* a1);
void r571force(T571* C,T3 a1);
void r571wipe_out(T571* C);
T6 r571se_assigned_from(T0* a1);
void r571out_in_tagged_out_memory(T571* C);
void r571remove(T571* C);
T6 r571conforms_to(T571* C,T0* a1);
T0* r571twin(T571* C);
T0* r637out(T637* C);
T6 r637se_assigned_from(T0* a1);
void r637out_in_tagged_out_memory(T637* C);
T6 r637conforms_to(T637* C,T0* a1);
T0* r637twin(T637* C);
void r637put_right(T637* C,T0* a1);
T0* r485out(T485* C);
void r485copy(T485* C,T0* a1);
void r485force(T485* C,T2 a1);
T6 r485se_assigned_from(T0* a1);
void r485out_in_tagged_out_memory(T485* C);
void r485remove(T485* C);
T6 r485conforms_to(T485* C,T0* a1);
T0* r485twin(T485* C);
T0* r584out(T584* C);
T2 r584new_capacity(T2 a1);
void r584copy(T584* C,T0* a1);
void r584make_equal(T584* C,T2 a1);
void r584make_clashes(T584* C,T2 a1);
void r584search_position(T584* C,T0* a1);
void r584remove_traversing_cursor(T584* C,T0* a1);
void r584clone_slots(T584* C);
void r584clone_clashes(T584* C);
void r584move_all_cursors_after(T584* C);
void r584make_items(T584* C,T2 a1);
void r584add_traversing_cursor(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
T0* r584clone(T0* a1);
void r584out_in_tagged_out_memory(T584* C);
void r584make(T584* C,T2 a1);
void r584clone_items(T584* C);
T6 r584conforms_to(T584* C,T0* a1);
T6 r584has(T584* C,T0* a1);
void r584force_new(T584* C,T0* a1);
T2 r584hash_position(T584* C,T0* a1);
void r584items_resize(T584* C,T2 a1);
void r584resize(T584* C,T2 a1);
void r584clashes_resize(T584* C,T2 a1);
void r584slots_resize(T584* C,T2 a1);
T0* r584twin(T584* C);
T0* r584new_cursor(T584* C);
void r584make_slots(T584* C,T2 a1);
T2 r584new_modulus(T2 a1);
T6 r584cursor_off(T0* a1);
T0* r400out(T400* C);
void r400copy(T400* C,T0* a1);
void r400remove_traversing_cursor(T400* C,T0* a1);
void r400move_all_cursors_after(T400* C);
void r400add_traversing_cursor(T400* C,T0* a1);
T6 r400se_assigned_from(T0* a1);
void r400out_in_tagged_out_memory(T400* C);
void r400make(T400* C);
T6 r400conforms_to(T400* C,T0* a1);
void r400cursor_forth(T400* C,T0* a1);
void r400cursor_start(T400* C,T0* a1);
T0* r400twin(T400* C);
T0* r400new_cursor(T400* C);
void r400put_last(T400* C,T0* a1);
T6 r400cursor_off(T0* a1);
T0* r413out(T413* C);
void r413copy(T413* C,T0* a1);
void r413set(T413* C,T0* a1,T6 a2,T6 a3);
T6 r413se_assigned_from(T0* a1);
void r413out_in_tagged_out_memory(T413* C);
void r413make(T413* C,T0* a1);
T6 r413conforms_to(T413* C,T0* a1);
void r413set_after(T413* C);
T0* r413twin(T413* C);
T0* r286out(T286* C);
T6 r286se_assigned_from(T0* a1);
void r286out_in_tagged_out_memory(T286* C);
T0* r286make(T2 a1);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286resize(T0* a1,T2 a2);
T0* r286twin(T286* C);
T0* r579out(T579* C);
void r579copy(T579* C,T0* a1);
T0* r579cursor_item(T0* a1);
T6 r579cursor_is_last(T579* C,T0* a1);
T6 r579is_equal(T579* C,T0* a1);
void r579remove_traversing_cursor(T579* C,T0* a1);
T0* r579item(T579* C,T2 a1);
void r579move_all_cursors_after(T579* C);
void r579add_traversing_cursor(T579* C,T0* a1);
T6 r579se_assigned_from(T0* a1);
void r579out_in_tagged_out_memory(T579* C);
T6 r579same_type(T579* C,T0* a1);
void r579make(T579* C);
T6 r579cursor_after(T0* a1);
T6 r579conforms_to(T579* C,T0* a1);
void r579cursor_forth(T579* C,T0* a1);
void r579cursor_start(T579* C,T0* a1);
T0* r579twin(T579* C);
void r579force_last(T579* C,T0* a1);
T0* r579new_cursor(T579* C);
void r579put_last(T579* C,T0* a1);
T6 r579cursor_off(T0* a1);
T0* r297out(T297* C);
void r297copy(T297* C,T0* a1);
T6 r297se_assigned_from(T0* a1);
void r297out_in_tagged_out_memory(T297* C);
T6 r297off(T297* C);
T6 r297conforms_to(T297* C,T0* a1);
T0* r297twin(T297* C);
T0* r530out(T530* C);
void r530copy(T530* C,T0* a1);
void r530set(T530* C,T0* a1,T6 a2,T6 a3);
T6 r530se_assigned_from(T0* a1);
void r530out_in_tagged_out_memory(T530* C);
void r530make(T530* C,T0* a1);
T6 r530conforms_to(T530* C,T0* a1);
void r530set_after(T530* C);
T0* r530twin(T530* C);
T0* r59out(T59* C);
void r59copy(T59* C,T0* a1);
void r59remove_traversing_cursor(T59* C,T0* a1);
void r59move_all_cursors_after(T59* C);
void r59add_traversing_cursor(T59* C,T0* a1);
T6 r59se_assigned_from(T0* a1);
void r59out_in_tagged_out_memory(T59* C);
void r59make(T59* C);
T6 r59conforms_to(T59* C,T0* a1);
void r59cursor_forth(T59* C,T0* a1);
void r59cursor_start(T59* C,T0* a1);
T0* r59twin(T59* C);
void r59force_last(T59* C,T0* a1);
T0* r59new_cursor(T59* C);
T6 r59cursor_off(T0* a1);
T0* r589out(T589* C);
T6 r589se_assigned_from(T0* a1);
void r589out_in_tagged_out_memory(T589* C);
T6 r589conforms_to(T589* C,T0* a1);
T0* r589twin(T589* C);
T0* r420out(T420* C);
extern T0*oBC17string_;
extern T0*oBC19arguments;
extern int fBC19arguments;
T0* r420arguments(void);
T6 r420se_assigned_from(T0* a1);
void r420out_in_tagged_out_memory(T420* C);
void r420make(T420* C,T0* a1,T0* a2,T0* a3);
T0* r420message(T420* C,T0* a1);
T6 r420conforms_to(T420* C,T0* a1);
T0* r420twin(T420* C);
T0* r420default_message(T420* C);
T0* r423out(T423* C);
T0* r423arguments(void);
T6 r423se_assigned_from(T0* a1);
void r423out_in_tagged_out_memory(T423* C);
void r423make(T423* C,T0* a1,T0* a2,T0* a3);
T0* r423message(T423* C,T0* a1);
T6 r423conforms_to(T423* C,T0* a1);
T0* r423twin(T423* C);
T0* r423default_message(T423* C);
T0* r578out(T578* C);
T6 r578se_assigned_from(T0* a1);
void r578out_in_tagged_out_memory(T578* C);
T6 r578conforms_to(T578* C,T0* a1);
T0* r578twin(T578* C);
T0* r188out(T188* C);
T6 r188is_closed(T188* C);
void r188old_close(T188* C);
T2 r188read_to_string(T188* C,T0* a1,T2 a2,T2 a3);
void r188open_read(T188* C);
T6 r188se_assigned_from(T0* a1);
void r188old_read_character(T188* C);
T6 r188old_end_of_file(T188* C);
void r188out_in_tagged_out_memory(T188* C);
void r188read_character(T188* C);
void r188close(T188* C);
void r188make(T188* C,T0* a1);
T6 r188conforms_to(T188* C,T0* a1);
void r188connect_to(T188* C,T0* a1);
T0* r188twin(T188* C);
void r188old_open_read(T188* C);
T0* r334new_system(T334* C,T0* a1,T0* a2);
T0* r334new_exported_feature(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_loop;
T0* r334new_options(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_optimize;
void r334fill_library(T334* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC206uc_link_library;
extern T0*oBC206uc_location;
void r334parse_file(T334* C,T0* a1);
void r334make_with_variables_and_factory(T334* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC206uc_creation;
extern T0*oBC206uc_class;
extern T0*oBC206uc_external;
extern T0*oBC206uc_alias;
extern T0*oBC206uc_invariant;
extern T0*oBC206uc_library;
T6 r334is_true(T0* a1);
extern T0*oBC206uc_export;
extern T0*oBC14execution_environment;
extern T0*oBC206uc_feature;
T0* r334new_library(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_mount;
T6 r334conforms_to(T334* C,T0* a1);
T0* r334twin(T334* C);
extern T0*oBC206uc_abstract;
void r334fill_externals(T334* C,T0* a1,T0* a2,T0* a3,T0* a4);
extern T0*oBC206uc_enable;
extern T0*oBC206uc_system;
void r334out_in_tagged_out_memory(T334* C);
T0* r334new_feature(T334* C,T0* a1,T0* a2);
void r334parse_library(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_ensure;
extern T0*oBC206uc_debug;
void r334make_with_variables(T334* C,T0* a1,T0* a2);
void r334fill_options(T334* C,T0* a1,T0* a2,T0* a3);
T0* r334new_class(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_option;
extern T0*oBC206uc_name;
extern T0*oBC205option_codes;
extern int fBC205option_codes;
T0* r334option_codes(void);
extern T0*oBC206uc_require;
extern T0*oBC206uc_include_dir;
extern T0*oBC206uc_cluster;
T0* r334new_export(T334* C,T0* a1,T0* a2);
T6 r334is_false(T0* a1);
extern T0*oBC206uc_relative;
extern T0*oBC206uc_prefix;
extern T0*oBC206uc_value;
T0* r334out(T334* C);
void r334fill_system(T334* C,T0* a1,T0* a2,T0* a3);
T6 r334se_assigned_from(T0* a1);
T0* r334new_cluster(T334* C,T0* a1,T0* a2,T0* a3);
T0* r334new_mount(T334* C,T0* a1,T0* a2);
extern T0*oBC206uc_root;
extern T0*oBC206uc_check;
T0* r432out(T432* C);
void r432_225Pon_start_tag(T432* C,T0* a1,T0* a2,T0* a3);
void r432on_start_tag_finish(T432* C);
void r432on_finish(T432* C);
void r432on_content(T432* C,T0* a1);
void r432make_null(T432* C);
extern T0*oBC213string_equality_tester;
T6 r432se_assigned_from(T0* a1);
void r432on_start(T432* C);
void r432on_processing_instruction(T432* C,T0* a1,T0* a2);
void r432out_in_tagged_out_memory(T432* C);
void r432on_start_tag(T432* C,T0* a1,T0* a2,T0* a3);
void r432on_comment(T432* C,T0* a1);
T0* r432new_string_stack(void);
void r432on_end_tag(T432* C,T0* a1,T0* a2,T0* a3);
T6 r432conforms_to(T432* C,T0* a1);
void r432on_attribute(T432* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r432on_error(T432* C,T0* a1);
T6 r432same_string(T0* a1,T0* a2);
T0* r432twin(T432* C);
void r432_225Pon_end_tag(T432* C,T0* a1,T0* a2,T0* a3);
void r432_225Pon_start(T432* C);
T0* r431out(T431* C);
T6 r431se_assigned_from(T0* a1);
void r431out_in_tagged_out_memory(T431* C);
T6 r431conforms_to(T431* C,T0* a1);
T0* r431twin(T431* C);
T0* r590_450Pnew_file_buffer(T0* a1);
T2 r590yy_at_beginning_of_line(T590* C);
extern T0*oBC447normalized_newline;
T2 r590start_condition(T590* C);
void r590set_input_buffer(T590* C,T0* a1);
T0* r590text_substring(T590* C,T2 a1,T2 a2);
extern T0*oBC447yy_ec_template;
extern int fBC447yy_ec_template;
T0* r590yy_ec_template(void);
void r590yy_execute_action(T590* C,T2 a1);
extern T0*oBC447yy_def_template;
extern int fBC447yy_def_template;
T0* r590yy_def_template(void);
T3 r590text_item(T590* C,T2 a1);
void r590_448Pread_token(T590* C);
T6 r590end_of_file(T590* C);
T0* r590system_literal_text(T590* C);
void r590yy_load_input_buffer(T590* C);
void r590make_with_buffer(T590* C,T0* a1);
T2 r590yy_null_trans_state(T590* C,T2 a1);
void r590pop_start_condition(T590* C);
extern T0*oBC447yy_accept_template;
extern int fBC447yy_accept_template;
T0* r590yy_accept_template(void);
void r590read_token(T590* C);
T2 r590yy_previous_state(T590* C);
void r590yy_refill_input_buffer(T590* C);
T0* r590yy_fixed_array(T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
extern T0*oBC447yy_meta_template;
extern int fBC447yy_meta_template;
T0* r590yy_meta_template(void);
void r590set_input_file(T590* C,T0* a1);
extern T0*oBC447yy_base_template;
extern int fBC447yy_base_template;
T0* r590yy_base_template(void);
T0* r590twin(T590* C);
void r590_448Preset(T590* C);
T2 r590text_count(T590* C);
T0* r590new_file_buffer(T590* C,T0* a1);
void r590make_scanner(T590* C);
void r590yy_initialize(T590* C);
void r590reset(T590* C);
void r590push_start_condition(T590* C,T2 a1);
T0* r590text(T590* C);
void r590out_in_tagged_out_memory(T590* C);
extern T0*oBC447yy_nxt_template;
extern int fBC447yy_nxt_template;
T0* r590yy_nxt_template(void);
void r590yy_set_line_column(T590* C);
extern T0*oBC450empty_buffer;
extern int fBC450empty_buffer;
T0* r590empty_buffer(void);
void r590_447Pmake_scanner(T590* C);
extern T0*oBC447yy_chk_template;
extern int fBC447yy_chk_template;
T0* r590yy_chk_template(void);
void r590_449Pset_input_buffer(T590* C,T0* a1);
void r590yy_set_content(T590* C,T0* a1);
void r590set_start_condition(T590* C,T2 a1);
T0* r590out(T590* C);
T6 r590se_assigned_from(T0* a1);
void r590yy_build_tables(T590* C);
T0* r202new_system(T202* C,T0* a1,T0* a2);
T0* r202new_exported_feature(T202* C,T0* a1,T0* a2);
T0* r202new_options(T202* C,T0* a1,T0* a2);
void r202fill_library(T202* C,T0* a1,T0* a2,T0* a3);
void r202make_with_variables_and_factory(T202* C,T0* a1,T0* a2,T0* a3);
void r202parse_file(T202* C,T0* a1);
T6 r202is_true(T0* a1);
T0* r202new_library(T202* C,T0* a1,T0* a2);
T6 r202conforms_to(T202* C,T0* a1);
T0* r202twin(T202* C);
void r202fill_externals(T202* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r202out_in_tagged_out_memory(T202* C);
T0* r202new_feature(T202* C,T0* a1,T0* a2);
void r202make_with_variables(T202* C,T0* a1,T0* a2);
void r202fill_options(T202* C,T0* a1,T0* a2,T0* a3);
T0* r202new_class(T202* C,T0* a1,T0* a2);
T0* r202option_codes(void);
T0* r202new_export(T202* C,T0* a1,T0* a2);
T6 r202is_false(T0* a1);
T0* r202out(T202* C);
void r202fill_system(T202* C,T0* a1,T0* a2,T0* a3);
T6 r202se_assigned_from(T0* a1);
T0* r202new_cluster(T202* C,T0* a1,T0* a2,T0* a3);
T0* r202new_mount(T202* C,T0* a1,T0* a2);
T0* r224out(T224* C);
void r224_225Pon_start_tag(T224* C,T0* a1,T0* a2,T0* a3);
void r224on_start_tag_finish(T224* C);
void r224_225Pon_content(T224* C,T0* a1);
void r224on_finish(T224* C);
void r224on_content(T224* C,T0* a1);
void r224_225Pon_attribute(T224* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r224_225Pon_start_tag_finish(T224* C);
void r224make_null(T224* C);
T6 r224se_assigned_from(T0* a1);
void r224on_start(T224* C);
void r224_225Pon_finish(T224* C);
void r224on_processing_instruction(T224* C,T0* a1,T0* a2);
void r224out_in_tagged_out_memory(T224* C);
void r224_225Pon_error(T224* C,T0* a1);
void r224on_start_tag(T224* C,T0* a1,T0* a2,T0* a3);
void r224on_comment(T224* C,T0* a1);
void r224on_end_tag(T224* C,T0* a1,T0* a2,T0* a3);
T6 r224conforms_to(T224* C,T0* a1);
void r224on_attribute(T224* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r224on_error(T224* C,T0* a1);
void r224_225Pon_processing_instruction(T224* C,T0* a1,T0* a2);
T0* r224twin(T224* C);
void r224_225Pon_end_tag(T224* C,T0* a1,T0* a2,T0* a3);
void r224_225Pon_comment(T224* C,T0* a1);
void r224_225Pon_start(T224* C);
T0* r282out(T282* C);
T0* r282arguments(void);
T6 r282se_assigned_from(T0* a1);
void r282out_in_tagged_out_memory(T282* C);
void r282make(T282* C,T0* a1,T0* a2);
T0* r282message(T282* C,T0* a1);
T6 r282conforms_to(T282* C,T0* a1);
T0* r282twin(T282* C);
T0* r282default_message(T282* C);
T0* r529out(T529* C);
T6 r529se_assigned_from(T0* a1);
void r529out_in_tagged_out_memory(T529* C);
void r529make(T529* C,T0* a1,T0* a2);
T6 r529conforms_to(T529* C,T0* a1);
T0* r529twin(T529* C);
T0* r447_450Pnew_file_buffer(T0* a1);
T2 r447yy_at_beginning_of_line(T447* C);
T2 r447start_condition(T447* C);
void r447set_input_buffer(T447* C,T0* a1);
T0* r447text_substring(T447* C,T2 a1,T2 a2);
T0* r447yy_ec_template(void);
void r447yy_execute_action(T447* C,T2 a1);
T0* r447yy_def_template(void);
T3 r447text_item(T447* C,T2 a1);
T6 r447end_of_file(T447* C);
T0* r447system_literal_text(T447* C);
void r447yy_load_input_buffer(T447* C);
void r447make_with_buffer(T447* C,T0* a1);
T2 r447yy_null_trans_state(T447* C,T2 a1);
void r447pop_start_condition(T447* C);
T0* r447yy_accept_template(void);
void r447read_token(T447* C);
T2 r447yy_previous_state(T447* C);
void r447yy_refill_input_buffer(T447* C);
void r447push_start_condition_dtd_ignore(T447* C);
T0* r447yy_fixed_array(T0* a1);
T6 r447conforms_to(T447* C,T0* a1);
T0* r447yy_meta_template(void);
void r447set_input_file(T447* C,T0* a1);
T0* r447yy_base_template(void);
T0* r447twin(T447* C);
void r447_448Preset(T447* C);
T2 r447text_count(T447* C);
T0* r447new_file_buffer(T447* C,T0* a1);
void r447make_scanner(T447* C);
void r447yy_initialize(T447* C);
void r447reset(T447* C);
void r447push_start_condition(T447* C,T2 a1);
T0* r447text(T447* C);
void r447out_in_tagged_out_memory(T447* C);
T0* r447yy_nxt_template(void);
void r447yy_set_line_column(T447* C);
T0* r447empty_buffer(void);
void r447_449Pset_input_buffer(T447* C,T0* a1);
T0* r447yy_chk_template(void);
void r447yy_set_content(T447* C,T0* a1);
void r447set_start_condition(T447* C,T2 a1);
void r447yy_execute_eof_action(T447* C,T2 a1);
T0* r447out(T447* C);
T6 r447se_assigned_from(T0* a1);
void r447yy_build_tables(T447* C);
T6 r279is_address_expression_declared(T279* C);
void r279set_layout_optimization(T279* C,T6 a1);
T6 r279portable_code_generation(T279* C);
T0* r279arguments(T279* C);
T6 r279is_abstract_declared(T279* C);
void r279set_map(T279* C,T6 a1);
T6 r279profile(T279* C);
T6 r279is_storable_declared(T279* C);
T6 r279is_linux_fpu_double_precision_declared(T279* C);
void r279set_gc_info(T279* C,T6 a1);
T6 r279dynamic_runtime(T279* C);
T0* r279include(T279* C);
T6 r279is_no_default_lib_declared(T279* C);
extern T0*oBC279valid_assertion;
extern int fBC279valid_assertion;
T0* r279valid_assertion(void);
T6 r279debug_option(T279* C);
void r279set_exception_trace(T279* C,T6 a1);
T6 r279is_cls_compliant_declared(T279* C);
extern T0*oBC279default_assertion;
extern int fBC279default_assertion;
T0* r279default_assertion(void);
T0* r279warning(T279* C);
extern T0*oBC279default_include;
extern int fBC279default_include;
T0* r279default_include(void);
void r279set_wedit(T279* C,T6 a1);
T6 r279abstract(T279* C);
extern T0*oBC279default_warning;
extern int fBC279default_warning;
T0* r279default_warning(void);
extern T0*oBC279default_linker;
extern int fBC279default_linker;
T0* r279default_linker(void);
void r279set_dynamic_runtime(T279* C,T6 a1);
extern T0*oBC279default_override_cluster;
extern T0*oBC279default_precompiled;
void r279set_verbose(T279* C,T6 a1);
T6 r279exception_trace(T279* C);
void r279set_trace(T279* C,T6 a1);
T6 r279is_inlining_declared(T279* C);
T6 r279msil_generation(T279* C);
T0* r279linker(T279* C);
void r279set_clean(T279* C,T6 a1);
extern T0*oBC279default_visible_filename;
T6 r279is_header_declared(T279* C);
T6 r279is_check_vape_declared(T279* C);
T6 r279is_debug_tag_declared(T279* C);
T0* r279link(T279* C);
extern T0*oBC279default_prefix_option;
T0* r279component(T279* C);
T6 r279is_gc_info_declared(T279* C);
extern T0*oBC279default_garbage_collector;
extern int fBC279default_garbage_collector;
T0* r279default_garbage_collector(void);
T6 r279is_trace_declared(T279* C);
T6 r279is_layout_optimization_declared(T279* C);
void r279set_array_optimization(T279* C,T6 a1);
extern T0*oBC279default_link;
extern int fBC279default_link;
T0* r279default_link(void);
void r279set_line_generation(T279* C,T6 a1);
T0* r279inlining(T279* C);
T6 r279is_recursive_declared(T279* C);
extern T0*oBC279valid_target;
extern int fBC279valid_target;
T0* r279valid_target(void);
T6 r279is_portable_code_generation_declared(T279* C);
T6 r279is_include_declared(T279* C);
void r279set_exclude(T279* C,T0* a1);
void r279set_debug_tag(T279* C,T0* a1);
T6 r279is_profile_declared(T279* C);
T6 r279is_strip_option_declared(T279* C);
T0* r279dead_code_removal(T279* C);
T6 r279is_dynamic_runtime_declared(T279* C);
T6 r279is_dotnet_naming_convention_declared(T279* C);
T6 r279is_finalize_option_declared(T279* C);
T6 r279line_generation(T279* C);
T6 r279check_vape(T279* C);
T6 r279reloads_optimization(T279* C);
T6 r279dotnet_naming_convention(T279* C);
T0* r279public_key_token(T279* C);
extern T0*oBC279default_public_key_token;
extern T0*oBC78options;
extern T0*oBC279default_inlining;
extern int fBC279default_inlining;
T0* r279default_inlining(void);
void r279set_console_application(T279* C,T6 a1);
T6 r279case_insensitive(T279* C);
T6 r279is_msil_generation_declared(T279* C);
extern T0*oBC279default_header;
extern int fBC279default_header;
T0* r279default_header(void);
extern T0*oBC279valid_warning;
extern int fBC279valid_warning;
T0* r279valid_warning(void);
extern T0*oBC279string_equality_tester;
extern T0*oBC279valid_dead_code_removal;
extern int fBC279valid_dead_code_removal;
T0* r279valid_dead_code_removal(void);
T6 r279multithreaded(T279* C);
void r279set_reloads_optimization(T279* C,T6 a1);
T6 r279strip_option(T279* C);
void r279set_manifest_string_trace(T279* C,T6 a1);
extern T0*oBC279default_arguments;
extern int fBC279default_arguments;
T0* r279default_arguments(void);
T6 r279cls_compliant(T279* C);
void r279set_check_vape(T279* C,T6 a1);
T6 r279is_map_declared(T279* C);
T6 r279layout_optimization(T279* C);
void r279set_portable_code_generation(T279* C,T6 a1);
T6 r279high_memory_compiler(T279* C);
T6 r279is_wedit_declared(T279* C);
T6 r279split(T279* C);
void r279set_leaves_optimization(T279* C,T6 a1);
T6 r279leaves_optimization(T279* C);
T6 r279linux_fpu_double_precision(T279* C);
T6 r279is_link_declared(T279* C);
T6 r279is_fst_optimization_declared(T279* C);
void r279set_address_expression(T279* C,T6 a1);
T0* r279debug_tag(T279* C);
void r279set_strip_option(T279* C,T6 a1);
T0* r279assembly(T279* C);
T0* r279shared_library_definition(T279* C);
void r279set_create_keyword_extension(T279* C,T6 a1);
extern T0*oBC279default_component;
T6 r279array_optimization(T279* C);
T6 r279storable(T279* C);
void r279set_inlining(T279* C,T0* a1);
T6 r279jumps_optimization(T279* C);
extern T0*oBC279default_export_option;
extern T0*oBC279default_assembly;
T6 r279is_create_keyword_extension_declared(T279* C);
T0* r279culture(T279* C);
extern T0*oBC279default_dead_code_removal;
extern int fBC279default_dead_code_removal;
T0* r279default_dead_code_removal(void);
void r279set_case_insensitive(T279* C,T6 a1);
T6 r279conforms_to(T279* C,T0* a1);
extern T0*oBC279default_culture;
void r279set_recursive(T279* C,T6 a1);
T6 r279is_exception_trace_declared(T279* C);
void r279set_profile(T279* C,T6 a1);
T6 r279is_dead_code_removal_declared(T279* C);
T6 r279is_jumps_optimization_declared(T279* C);
void r279set_include(T279* C,T0* a1);
T6 r279map(T279* C);
T6 r279is_verbose_declared(T279* C);
void r279set_no_default_lib(T279* C,T6 a1);
T0* r279garbage_collector(T279* C);
T6 r279console_application(T279* C);
T0* r279twin(T279* C);
T6 r279gc_info(T279* C);
void r279set_dead_code_removal(T279* C,T0* a1);
T0* r279target(T279* C);
void r279set_abstract(T279* C,T6 a1);
T0* r279visible_filename(T279* C);
T6 r279is_array_optimization_declared(T279* C);
void r279set_assertion(T279* C,T0* a1);
extern T0*oBC279default_storable_filename;
T6 r279is_case_insensitive_declared(T279* C);
void r279set_link(T279* C,T0* a1);
void r279out_in_tagged_out_memory(T279* C);
T0* r279document(T279* C);
T6 r279verbose(T279* C);
T6 r279is_arguments_declared(T279* C);
T6 r279is_exclude_declared(T279* C);
T2 r279inlining_size(T279* C);
extern T0*oBC279default_target;
extern int fBC279default_target;
T0* r279default_target(void);
void r279set_header(T279* C,T0* a1);
T0* r279override_cluster(T279* C);
extern T0*oBC279valid_linker;
extern int fBC279valid_linker;
T0* r279valid_linker(void);
T6 r279il_verifiable(T279* C);
void r279set_debugger(T279* C,T6 a1);
T0* r279version(T279* C);
extern T0*oBC279default_debug_tag;
extern int fBC279default_debug_tag;
T0* r279default_debug_tag(void);
extern T0*oBC279default_document;
extern T0*oBC279default_version;
void r279set_split(T279* C,T6 a1);
T6 r279flat_fst_optimization(T279* C);
T0* r279prefix_option(T279* C);
T6 r279recursive(T279* C);
T6 r279is_reloads_optimization_declared(T279* C);
T6 r279is_high_memory_compiler_declared(T279* C);
void r279set_jumps_optimization(T279* C,T6 a1);
T0* r279exclude(T279* C);
T0* r279storable_filename(T279* C);
T6 r279wedit(T279* C);
extern T0*oBC279default_exclude;
extern int fBC279default_exclude;
T0* r279default_exclude(void);
T6 r279is_manifest_string_trace_declared(T279* C);
T2 r279fst_expansion_factor(T279* C);
T0* r279precompiled(T279* C);
T6 r279is_flat_fst_optimization_declared(T279* C);
T6 r279is_console_application_declared(T279* C);
T0* r279assertion(T279* C);
T6 r279trace(T279* C);
T6 r279is_clean_declared(T279* C);
T6 r279clean(T279* C);
extern T0*oBC279valid_inlining;
extern int fBC279valid_inlining;
T0* r279valid_inlining(void);
void r279set_cls_compliant(T279* C,T6 a1);
T6 r279is_assertion_declared(T279* C);
void r279set_multithreaded(T279* C,T6 a1);
T6 r279fst_optimization(T279* C);
T6 r279finalize_option(T279* C);
void r279set_arguments(T279* C,T0* a1);
void r279set_msil_generation(T279* C,T6 a1);
T6 r279is_debugger_declared(T279* C);
void r279set_high_memory_compiler(T279* C,T6 a1);
T6 r279is_leaves_optimization_declared(T279* C);
void r279set_finalize_option(T279* C,T6 a1);
T2 r279stack_size(T279* C);
T6 r279address_expression(T279* C);
void r279make(T279* C);
void r279set_il_verifiable(T279* C,T6 a1);
void r279set_dotnet_naming_convention(T279* C,T6 a1);
void r279set_linux_fpu_double_precision(T279* C,T6 a1);
T6 r279is_il_verifiable_declared(T279* C);
T6 r279is_line_generation_declared(T279* C);
T6 r279create_keyword_extension(T279* C);
T0* r279export_option(T279* C);
T6 r279manifest_string_trace(T279* C);
T0* r279out(T279* C);
T6 r279no_default_lib(T279* C);
T0* r279header(T279* C);
T6 r279se_assigned_from(T0* a1);
extern T0*oBC279valid_garbage_collector;
extern int fBC279valid_garbage_collector;
T0* r279valid_garbage_collector(void);
T2 r279heap_size(T279* C);
void r279set_debug_option(T279* C,T6 a1);
void r279set_fst_optimization(T279* C,T6 a1);
T6 r279is_debug_option_declared(T279* C);
T6 r279is_split_declared(T279* C);
extern T0*oBC279default_shared_library_definition;
T6 r279is_multithreaded_declared(T279* C);
void r279set_flat_fst_optimization(T279* C,T6 a1);
T6 r279debugger(T279* C);
T0* r505out(T505* C);
void r505put_include_directory(T505* C,T0* a1);
T6 r505se_assigned_from(T0* a1);
void r505out_in_tagged_out_memory(T505* C);
void r505make(T505* C);
T6 r505is_empty(T505* C);
T6 r505conforms_to(T505* C,T0* a1);
T6 r505has_include_directories(T505* C);
T6 r505has_link_libraries(T505* C);
void r505put_link_library(T505* C,T0* a1);
T0* r505twin(T505* C);
T0* r379out(T379* C);
T0* r379arguments(void);
T6 r379se_assigned_from(T0* a1);
void r379out_in_tagged_out_memory(T379* C);
void r379make(T379* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r379message(T379* C,T0* a1);
T6 r379conforms_to(T379* C,T0* a1);
T0* r379twin(T379* C);
T0* r379default_message(T379* C);
T0* r201out(T201* C);
T6 r201se_assigned_from(T0* a1);
void r201out_in_tagged_out_memory(T201* C);
T6 r201conforms_to(T201* C,T0* a1);
T0* r201twin(T201* C);
void r201mount_libraries(T201* C);
void r201merge_externals(T201* C,T0* a1);
void r201merge_exported_features(T201* C,T0* a1);
T0* r209out(T209* C);
void r209put(T209* C,T0* a1,T0* a2);
T0* r209item(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
void r209out_in_tagged_out_memory(T209* C);
void r209make(T209* C);
T6 r209conforms_to(T209* C,T0* a1);
T0* r209twin(T209* C);
T0* r222out(T222* C);
T0* r222callbacks_pipe(T0* a1);
T6 r222se_assigned_from(T0* a1);
T0* r222new_tree_builder(void);
void r222out_in_tagged_out_memory(T222* C);
void r222make(T222* C);
T0* r222new_end_tag_checker(void);
T6 r222conforms_to(T222* C,T0* a1);
T0* r222new_stop_on_error(void);
T0* r222twin(T222* C);
T0* r203new_system(T203* C,T0* a1,T0* a2);
T0* r203new_exported_feature(T203* C,T0* a1,T0* a2);
T0* r203new_options(T203* C,T0* a1,T0* a2);
void r203fill_library(T203* C,T0* a1,T0* a2,T0* a3);
void r203make_with_variables_and_factory(T203* C,T0* a1,T0* a2,T0* a3);
void r203parse_file(T203* C,T0* a1);
T6 r203is_true(T0* a1);
T0* r203new_library(T203* C,T0* a1,T0* a2);
T6 r203conforms_to(T203* C,T0* a1);
T0* r203twin(T203* C);
void r203fill_externals(T203* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r203out_in_tagged_out_memory(T203* C);
T0* r203new_feature(T203* C,T0* a1,T0* a2);
void r203make_with_variables(T203* C,T0* a1,T0* a2);
void r203fill_options(T203* C,T0* a1,T0* a2,T0* a3);
T0* r203new_class(T203* C,T0* a1,T0* a2);
T0* r203option_codes(void);
T0* r203new_export(T203* C,T0* a1,T0* a2);
T6 r203is_false(T0* a1);
T0* r203out(T203* C);
void r203fill_system(T203* C,T0* a1,T0* a2,T0* a3);
T6 r203se_assigned_from(T0* a1);
T0* r203new_cluster(T203* C,T0* a1,T0* a2,T0* a3);
T0* r203new_mount(T203* C,T0* a1,T0* a2);
T0* r145out(T145* C);
T6 r145se_assigned_from(T0* a1);
void r145out_in_tagged_out_memory(T145* C);
void r145execute_generators(T145* C,T0* a1);
void r145make(T145* C,T0* a1,T0* a2);
T6 r145conforms_to(T145* C,T0* a1);
void r145execute(T145* C);
T0* r145twin(T145* C);
T0* r143out(T143* C);
void r143print_cluster(T143* C,T0* a1,T2 a2,T0* a3);
void r143generate_library(T143* C,T0* a1);
void r143print_xml_library_file(T143* C,T0* a1,T0* a2);
T6 r143se_assigned_from(T0* a1);
void r143out_in_tagged_out_memory(T143* C);
void r143print_feature_options(T0* a1,T2 a2,T0* a3);
void r143make(T143* C,T0* a1,T0* a2);
void r143print_clusters(T143* C,T0* a1,T2 a2,T0* a3);
T6 r143conforms_to(T143* C,T0* a1);
void r143print_class_options(T0* a1,T2 a2,T0* a3);
T0* r143twin(T143* C);
void r143print_options(T0* a1,T2 a2,T0* a3);
void r143print_indentation(T2 a1,T0* a2);
void r143generate_system(T143* C,T0* a1);
void r143print_xml_system_file(T143* C,T0* a1,T0* a2);
T0* r567out(T567* C);
void r567fill(T567* C);
void r567compact_left(T567* C);
void r567set_position(T567* C,T2 a1,T2 a2,T2 a3);
T0* r567name(T567* C);
T6 r567se_assigned_from(T0* a1);
void r567make_from_string(T567* C,T0* a1);
void r567out_in_tagged_out_memory(T567* C);
T6 r567conforms_to(T567* C,T0* a1);
void r567make_from_buffer(T567* C,T0* a1);
void r567resize(T567* C);
void r567make_with_size(T567* C,T0* a1,T2 a2);
T0* r567twin(T567* C);
void r567set_file(T567* C,T0* a1);
void r567flush(T567* C);
T0* r422out(T422* C);
void r422on_start_tag_finish(T422* C);
T0* r422next_open_composite(T0* a1);
void r422enable_position_table(T422* C,T0* a1);
void r422on_finish(T422* C);
void r422on_content(T422* C,T0* a1);
void r422make_null(T422* C);
T6 r422se_assigned_from(T0* a1);
void r422on_start(T422* C);
void r422on_processing_instruction(T422* C,T0* a1,T0* a2);
void r422out_in_tagged_out_memory(T422* C);
void r422on_start_tag(T422* C,T0* a1,T0* a2,T0* a3);
void r422handle_position(T422* C,T0* a1);
void r422on_comment(T422* C,T0* a1);
void r422on_end_tag(T422* C,T0* a1,T0* a2,T0* a3);
T6 r422conforms_to(T422* C,T0* a1);
void r422on_attribute(T422* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r422on_error(T422* C,T0* a1);
T0* r422twin(T422* C);
T6 r489se_assigned_from(T0* a1);
void r489out_in_tagged_out_memory(T489* C);
T6 r489conforms_to(T489* C,T0* a1);
T0* r489twin(T489* C);
T0* r582out(T582* C);
void r582make_choice(T582* C);
void r582make_mixed(T582* C);
void r582set_content_mixed(T582* C);
T6 r582se_assigned_from(T0* a1);
T0* r582clone(T0* a1);
void r582out_in_tagged_out_memory(T582* C);
void r582make_empty(T582* C);
void r582set_default(T582* C);
void r582make_any(T582* C);
T6 r582conforms_to(T582* C,T0* a1);
void r582make_sequence(T582* C);
T6 r582is_content_mixed(T582* C);
void r582make_list(T582* C);
void r582make_name(T582* C,T0* a1);
T0* r582twin(T582* C);
void r582set_content_any(T582* C);
T0* r317out(T317* C);
T6 r317se_assigned_from(T0* a1);
void r317out_in_tagged_out_memory(T317* C);
T6 r317conforms_to(T317* C,T0* a1);
T6 r317is_undefined(T317* C);
T0* r317twin(T317* C);
T0* r315out(T315* C);
T0* r315arguments(void);
T6 r315se_assigned_from(T0* a1);
void r315out_in_tagged_out_memory(T315* C);
void r315make(T315* C,T0* a1);
T0* r315message(T315* C,T0* a1);
T6 r315conforms_to(T315* C,T0* a1);
T0* r315twin(T315* C);
T0* r315default_message(T315* C);
T0* r499out(T499* C);
T6 r499is_closed(T499* C);
void r499old_close(T499* C);
T6 r499se_assigned_from(T0* a1);
void r499out_in_tagged_out_memory(T499* C);
void r499old_open_write(T499* C);
void r499close(T499* C);
void r499make(T499* C,T0* a1);
void r499old_put_string(T499* C,T0* a1);
T6 r499conforms_to(T499* C,T0* a1);
void r499connect_to(T499* C,T0* a1);
void r499put_integer(T499* C,T2 a1);
void r499put_line(T499* C,T0* a1);
T0* r499twin(T499* C);
void r499open_write(T499* C);
T0* r140out(T140* C);
void r140print_cluster(T140* C,T0* a1,T0* a2);
void r140generate_library(T140* C,T0* a1);
T6 r140print_cluster_options(T0* a1,T2 a2,T0* a3);
T0* r140replace_all_characters(T0* a1,T3 a2,T3 a3);
T6 r140se_assigned_from(T0* a1);
T0* r140clone(T0* a1);
T6 r140is_lace_keyword(T0* a1);
T6 r140is_windows(T140* C);
void r140print_ace_file(T140* C,T0* a1,T0* a2);
void r140out_in_tagged_out_memory(T140* C);
void r140make(T140* C,T0* a1,T0* a2);
extern T0*oBC13operating_system;
void r140print_clusters(T140* C,T0* a1,T0* a2);
void r140print_assemblies(T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
T6 r140print_class_options(T0* a1,T2 a2,T0* a3);
void r140print_precompile_ace_file(T140* C,T0* a1,T0* a2);
void r140print_escaped_name(T0* a1,T0* a2);
T0* r140twin(T140* C);
void r140print_options(T140* C,T0* a1,T2 a2,T0* a3);
extern T0*oBC140lace_keywords;
void r140print_indentation(T2 a1,T0* a2);
void r140print_link_libraries(T140* C,T0* a1,T0* a2);
void r140generate_system(T140* C,T0* a1);
void r140print_include_directories(T140* C,T0* a1,T0* a2);
T0* r507out(T507* C);
T6 r507se_assigned_from(T0* a1);
void r507out_in_tagged_out_memory(T507* C);
void r507make(T507* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r507conforms_to(T507* C,T0* a1);
T0* r507twin(T507* C);
T0* r660out(T660* C);
T6 r660se_assigned_from(T0* a1);
void r660out_in_tagged_out_memory(T660* C);
void r660make(T660* C,T0* a1,T0* a2);
T6 r660conforms_to(T660* C,T0* a1);
T0* r660twin(T660* C);
T0* r117out(T117* C);
T6 r117is_defined(T117* C,T0* a1);
extern T0*oBC118template_expander;
T6 r117se_assigned_from(T0* a1);
void r117out_in_tagged_out_memory(T117* C);
void r117make(T117* C);
T0* r117value(T117* C,T0* a1);
T6 r117conforms_to(T117* C,T0* a1);
T0* r117twin(T117* C);
void r117define_value(T117* C,T0* a1,T0* a2);
T0* r117expanded_variables(T117* C,T0* a1);
T0* r146out(T146* C);
T6 r146se_assigned_from(T0* a1);
void r146out_in_tagged_out_memory(T146* C);
void r146make(T146* C,T0* a1,T0* a2);
T6 r146conforms_to(T146* C,T0* a1);
void r146execute(T146* C);
T0* r146twin(T146* C);
T0* r113out(T113* C);
T0* r113arguments(void);
T6 r113se_assigned_from(T0* a1);
void r113out_in_tagged_out_memory(T113* C);
void r113make(T113* C,T0* a1);
T0* r113message(T113* C,T0* a1);
T6 r113conforms_to(T113* C,T0* a1);
T0* r113twin(T113* C);
T0* r113default_message(T113* C);
T0* r583out(T583* C);
T0* r583last(T583* C);
T6 r583is_equal(T583* C,T0* a1);
T0* r583item(T583* C,T2 a1);
T6 r583se_assigned_from(T0* a1);
T0* r583clone(T0* a1);
void r583out_in_tagged_out_memory(T583* C);
void r583make(T583* C);
T2 r583hash_code(T583* C);
T6 r583conforms_to(T583* C,T0* a1);
T6 r583same_string(T0* a1,T0* a2);
T0* r583twin(T583* C);
void r583force_last(T583* C,T0* a1);
T0* r583ns_prefix(T583* C);
T0* r583local_part(T583* C);
T6 r583is_namespace_name(T583* C);
T0* r583new_string_bilinked_list(void);
T0* r399out(T399* C);
T6 r399se_assigned_from(T0* a1);
void r399out_in_tagged_out_memory(T399* C);
void r399make(T399* C,T0* a1,T0* a2);
T6 r399conforms_to(T399* C,T0* a1);
T0* r399twin(T399* C);
T0* r228out(T228* C);
T6 r228se_assigned_from(T0* a1);
void r228out_in_tagged_out_memory(T228* C);
void r228merge_libraries(T228* C,T0* a1,T0* a2);
T6 r228conforms_to(T228* C,T0* a1);
T0* r228twin(T228* C);
void r228mount_libraries(T228* C);
void r228merge_externals(T228* C,T0* a1);
T0* r116out(T116* C);
void r116print_cluster(T116* C,T0* a1,T0* a2);
void r116generate_library(T116* C,T0* a1);
void r116print_loadpath_clusters(T116* C,T0* a1,T0* a2);
T6 r116print_cluster_options(T0* a1,T2 a2,T0* a3);
T6 r116se_assigned_from(T0* a1);
void r116print_loadpath_cluster(T116* C,T0* a1,T0* a2);
void r116print_ace_file(T116* C,T0* a1,T0* a2);
void r116generate_cecil_file(T116* C,T0* a1);
void r116out_in_tagged_out_memory(T116* C);
void r116make(T116* C,T0* a1,T0* a2);
void r116print_clusters(T116* C,T0* a1,T0* a2);
T6 r116conforms_to(T116* C,T0* a1);
void r116print_generate(T0* a1,T2 a2,T0* a3);
T6 r116print_class_options(T0* a1,T2 a2,T0* a3);
void r116print_escaped_name(T0* a1,T0* a2);
T0* r116twin(T116* C);
void r116print_options(T0* a1,T2 a2,T0* a3);
void r116print_indentation(T2 a1,T0* a2);
void r116print_link_libraries(T0* a1,T0* a2);
void r116generate_system(T116* C,T0* a1);
void r116print_include_directories(T0* a1,T0* a2);
T0* r652out(T652* C);
T6 r652se_assigned_from(T0* a1);
void r652out_in_tagged_out_memory(T652* C);
void r652make(T652* C,T0* a1,T0* a2);
T6 r652conforms_to(T652* C,T0* a1);
T0* r652twin(T652* C);
T0* r169out(T169* C);
T6 r169se_assigned_from(T0* a1);
void r169out_in_tagged_out_memory(T169* C);
T6 r169conforms_to(T169* C,T0* a1);
void r169put_integer(T2 a1);
void r169put_line(T0* a1);
T0* r169twin(T169* C);
T0* r504out(T504* C);
T0* r504arguments(void);
T6 r504se_assigned_from(T0* a1);
void r504out_in_tagged_out_memory(T504* C);
void r504make(T504* C,T0* a1);
T0* r504message(T504* C,T0* a1);
T6 r504conforms_to(T504* C,T0* a1);
T0* r504twin(T504* C);
T0* r504default_message(T504* C);
T0* r495out(T495* C);
T6 r495se_assigned_from(T0* a1);
void r495out_in_tagged_out_memory(T495* C);
T6 r495conforms_to(T495* C,T0* a1);
void r495from_hexadecimal(T495* C,T0* a1);
extern T0*oBC103utf8;
T0* r495twin(T495* C);
T0* r495to_utf8(T495* C);
T6 r495is_valid(T495* C);
void r495from_decimal(T495* C,T0* a1);
extern T0*oBC97unicode;
T0* r380out(T380* C);
T0* r380arguments(void);
T6 r380se_assigned_from(T0* a1);
void r380out_in_tagged_out_memory(T380* C);
void r380make(T380* C,T0* a1,T0* a2,T0* a3);
T0* r380message(T380* C,T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
T0* r380twin(T380* C);
T0* r380default_message(T380* C);
T0* r418out(T418* C);
T0* r418arguments(void);
T6 r418se_assigned_from(T0* a1);
void r418out_in_tagged_out_memory(T418* C);
void r418make(T418* C,T0* a1,T0* a2);
T0* r418message(T418* C,T0* a1);
T6 r418conforms_to(T418* C,T0* a1);
T0* r418twin(T418* C);
T0* r418default_message(T418* C);
T0* r227out(T227* C);
void r227validate_named_cluster(T227* C,T0* a1,T0* a2);
void r227validate_root(T227* C,T0* a1,T0* a2);
void r227validate_library(T227* C,T0* a1,T0* a2);
void r227validate_external(T227* C,T0* a1,T0* a2);
void r227validate_feature(T227* C,T0* a1,T0* a2);
extern T0*oBC206uc_exclude;
void r227validate_mount(T227* C,T0* a1,T0* a2);
void r227validate_system_doc(T227* C,T0* a1,T0* a2);
T6 r227se_assigned_from(T0* a1);
void r227validate_cluster(T227* C,T0* a1,T0* a2);
extern T0*oBC206uc_description;
void r227out_in_tagged_out_memory(T227* C);
void r227validate_system(T227* C,T0* a1,T0* a2);
T6 r227conforms_to(T227* C,T0* a1);
void r227validate_export(T227* C,T0* a1,T0* a2);
void r227validate_exclude(T227* C,T0* a1,T0* a2);
T0* r227twin(T227* C);
void r227validate_library_doc(T227* C,T0* a1,T0* a2);
void r227validate_option(T227* C,T0* a1,T0* a2);
void r227validate_class(T227* C,T0* a1,T0* a2);
T0* r142out(T142* C);
void r142print_cluster(T142* C,T0* a1,T2 a2,T0* a3);
void r142generate_library(T142* C,T0* a1);
T6 r142print_cluster_options(T0* a1,T2 a2,T0* a3);
T0* r142replace_all_characters(T0* a1,T3 a2,T3 a3);
T6 r142se_assigned_from(T0* a1);
T0* r142clone(T0* a1);
T6 r142is_lace_keyword(T0* a1);
T6 r142is_windows(T142* C);
void r142print_ace_file(T142* C,T0* a1,T0* a2);
void r142out_in_tagged_out_memory(T142* C);
void r142make(T142* C,T0* a1,T0* a2);
void r142print_clusters(T142* C,T0* a1,T2 a2,T0* a3);
T6 r142conforms_to(T142* C,T0* a1);
T6 r142print_class_options(T0* a1,T6 a2,T2 a3,T0* a4);
void r142print_precompile_ace_file(T142* C,T0* a1,T0* a2);
void r142print_escaped_name(T0* a1,T0* a2);
T0* r142twin(T142* C);
void r142print_components(T0* a1,T0* a2);
void r142print_options(T142* C,T0* a1,T2 a2,T0* a3);
extern T0*oBC142lace_keywords;
void r142print_indentation(T2 a1,T0* a2);
void r142print_link_libraries(T142* C,T0* a1,T0* a2);
void r142generate_system(T142* C,T0* a1);
void r142print_include_directories(T142* C,T0* a1,T0* a2);
T0* r419out(T419* C);
T0* r419arguments(void);
T6 r419se_assigned_from(T0* a1);
void r419out_in_tagged_out_memory(T419* C);
void r419make(T419* C,T0* a1,T0* a2,T0* a3);
T0* r419message(T419* C,T0* a1);
T6 r419conforms_to(T419* C,T0* a1);
T0* r419twin(T419* C);
T0* r419default_message(T419* C);
T0* r381out(T381* C);
T0* r381arguments(void);
T6 r381se_assigned_from(T0* a1);
void r381out_in_tagged_out_memory(T381* C);
void r381make(T381* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
T0* r381message(T381* C,T0* a1);
T6 r381conforms_to(T381* C,T0* a1);
T0* r381twin(T381* C);
T0* r381default_message(T381* C);
T0* r498out(T498* C);
T0* r498arguments(void);
T6 r498se_assigned_from(T0* a1);
void r498out_in_tagged_out_memory(T498* C);
void r498make(T498* C,T0* a1);
T0* r498message(T498* C,T0* a1);
T6 r498conforms_to(T498* C,T0* a1);
T0* r498twin(T498* C);
T0* r498default_message(T498* C);
T0* r417out(T417* C);
T6 r417se_assigned_from(T0* a1);
void r417out_in_tagged_out_memory(T417* C);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417expand_from_hash_table(T0* a1,T0* a2);
T0* r417twin(T417* C);
T0* r491out(T491* C);
void r491set_position(T491* C,T2 a1,T2 a2,T2 a3);
T0* r491name(void);
T6 r491se_assigned_from(T0* a1);
void r491out_in_tagged_out_memory(T491* C);
void r491make(T491* C,T0* a1);
T6 r491conforms_to(T491* C,T0* a1);
void r491make_from_buffer(T491* C,T0* a1);
T0* r491twin(T491* C);
T0* r580out(T580* C);
T6 r580se_assigned_from(T0* a1);
T0* r580clone(T0* a1);
void r580set_default_value(T580* C,T0* a1);
void r580out_in_tagged_out_memory(T580* C);
void r580make(T580* C);
void r580copy_default(T580* C,T0* a1);
T6 r580conforms_to(T580* C,T0* a1);
T0* r580twin(T580* C);
void r580set_value_fixed(T580* C,T0* a1);
T0* r433out(T433* C);
T0* r433new_namespace_name(void);
void r433on_start_tag_finish(T433* C);
T6 r433syntax_error(T433* C);
extern T0*oBC433yycheck_template;
extern int fBC433yycheck_template;
T0* r433yycheck_template(void);
void r433process_entity_scanner(T433* C,T0* a1);
T0* r433source(T433* C);
void r433on_doctype(T433* C,T0* a1,T0* a2,T6 a3);
void r433when_entity_declared(T433* C,T0* a1,T0* a2);
void r433on_finish(T433* C);
void r433process_entity(T433* C,T0* a1);
void r433read_token(T433* C);
void r433on_content(T433* C,T0* a1);
T0* r433new_entities_table(void);
void r433yy_build_parser_tables(T433* C);
void r433when_external_dtd(T433* C,T0* a1);
T6 r433se_assigned_from(T0* a1);
void r433process_attribute_entity(T433* C,T0* a1);
T0* r433clone(T0* a1);
void r433on_start(T433* C);
extern T0*oBC433yytable_template;
extern int fBC433yytable_template;
T0* r433yytable_template(void);
T0* r433new_unicode_string_from_utf8(T0* a1);
T0* r433new_dtd_attribute_content(void);
void r433on_processing_instruction(T433* C,T0* a1,T0* a2);
T0* r433external_entity_to_string(T433* C,T0* a1);
extern T0*oBC434shared_empty_string;
void r433make_parser(T433* C);
void r433out_in_tagged_out_memory(T433* C);
T0* r433yyfixed_array(T0* a1);
extern T0*oBC433yypgoto_template;
extern int fBC433yypgoto_template;
T0* r433yypgoto_template(void);
void r433on_attribute_declarations(T433* C,T0* a1,T0* a2);
T6 r433is_string_mode_unicode(T433* C);
void r433check_void(T433* C);
T0* r433position(T433* C);
void r433on_start_tag(T433* C,T0* a1,T0* a2,T0* a3);
void r433make(T433* C);
T0* r433entity_referenced_in_entity_value(T433* C,T0* a1);
void r433on_comment(T433* C,T0* a1);
void r433parse_from_stream(T433* C,T0* a1);
T2 r433byte_position(T433* C);
extern T0*oBC433yypact_template;
extern int fBC433yypact_template;
T0* r433yypact_template(void);
T6 r433is_correct(T433* C);
void r433on_end_tag(T433* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC433yydefact_template;
extern int fBC433yydefact_template;
T0* r433yydefact_template(void);
void r433set_element_repetition(T0* a1,T3 a2);
T0* r433yytype1(T0* a1);
void r433yy_clear_all(T433* C);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433yytype2(T0* a1);
T0* r433yytype3(T0* a1);
T0* r433yytype4(T0* a1);
T0* r433yytype5(T0* a1);
T3 r433yytype6(T0* a1);
void r433on_entity_declaration(T433* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
T0* r433yytype7(T0* a1);
T0* r433yytype8(T0* a1);
void r433on_element_declaration(T433* C,T0* a1,T0* a2);
T0* r433yytype9(T0* a1);
T0* r433new_name_set(void);
T0* r433defined_entity_referenced(T433* C,T0* a1);
void r433on_attribute(T433* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r433reset(T433* C);
void r433_444Pon_error(T433* C,T0* a1);
T0* r433new_dtd_attribute_content_list(void);
T0* r433new_dtd_external_id(void);
extern T0*oBC433yyr1_template;
extern int fBC433yyr1_template;
T0* r433yyr1_template(void);
void r433on_notation_declaration(T433* C,T0* a1,T0* a2);
void r433on_error(T433* C,T0* a1);
void r433parse(T433* C);
T0* r433last_error_extended_description(T433* C);
T0* r433twin(T433* C);
void r433yy_do_action(T433* C,T2 a1);
T0* r433new_external_entity(T0* a1);
extern T0*oBC433yytranslate_template;
extern int fBC433yytranslate_template;
T0* r433yytranslate_template(void);
T0* r433element_name(T433* C,T0* a1);
void r433force_error(T433* C,T0* a1);
void r433on_attribute_declaration(T433* C,T0* a1,T0* a2,T0* a3);
T6 r433is_string_mode_ascii(T433* C);
T2 r433line(T433* C);
T0* r433new_string_bilinked_list(void);
T2 r433column(T433* C);
void r433when_pe_entity_declared(T433* C,T0* a1,T0* a2);
T0* r433onstring(T433* C,T0* a1);
void r433process_pe_entity(T433* C,T0* a1);
T2 r433yy_translate(T433* C,T2 a1);
extern T0*oBC433yyr2_template;
extern int fBC433yyr2_template;
T0* r433yyr2_template(void);
void r433make_scanner(T433* C);
extern T0*oBC433yydefgoto_template;
extern int fBC433yydefgoto_template;
T0* r433yydefgoto_template(void);
T0* r433new_literal_entity(T0* a1);
void r433clear_stacks(T433* C);
void r215set_last_cell(T215* C,T0* a1);
T0* r215out(T215* C);
void r215copy(T215* C,T0* a1);
void r215wipe_out(T215* C);
void r215remove_first(T215* C);
T0* r215cursor_item(T0* a1);
T6 r215cursor_is_last(T215* C,T0* a1);
void r215remove_traversing_cursor(T215* C,T0* a1);
void r215cursor_go_after(T215* C,T0* a1);
void r215move_all_cursors_after(T215* C);
void r215add_traversing_cursor(T215* C,T0* a1);
T6 r215se_assigned_from(T0* a1);
void r215out_in_tagged_out_memory(T215* C);
void r215remove_last(T215* C);
T6 r215cursor_after(T0* a1);
T6 r215conforms_to(T215* C,T0* a1);
void r215make_list(T215* C);
void r215cursor_forth(T215* C,T0* a1);
void r215move_last_cursors_after(T215* C);
void r215cursor_start(T215* C,T0* a1);
T0* r215twin(T215* C);
void r215force_last(T215* C,T0* a1);
T0* r215new_cursor(T215* C);
void r215make_composite(T215* C);
T6 r215cursor_is_first(T215* C,T0* a1);
void r215remove_at_cursor(T215* C,T0* a1);
void r215move_all_cursors(T215* C,T0* a1,T0* a2);
T6 r215cursor_off(T0* a1);
void r215set_root_element(T215* C,T0* a1);
T0* r141out(T141* C);
void r141print_cluster(T141* C,T0* a1,T0* a2);
void r141print_esd_file(T141* C,T0* a1,T0* a2);
void r141generate_library(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
T0* r141clone(T0* a1);
void r141out_in_tagged_out_memory(T141* C);
void r141make(T141* C,T0* a1,T0* a2);
void r141print_clusters(T141* C,T0* a1,T0* a2);
T0* r141remove_all_characters(T0* a1,T3 a2);
T6 r141conforms_to(T141* C,T0* a1);
void r141print_eld_file(T141* C,T0* a1,T0* a2);
void r141print_escaped_name(T0* a1,T0* a2);
T0* r141twin(T141* C);
void r141print_options(T0* a1,T2 a2,T0* a3);
void r141print_indentation(T2 a1,T0* a2);
void r141print_link_libraries(T0* a1,T0* a2);
void r141generate_system(T141* C,T0* a1);
T0* r335out(T335* C);
T0* r335arguments(void);
T6 r335se_assigned_from(T0* a1);
void r335out_in_tagged_out_memory(T335* C);
void r335make(T335* C,T0* a1);
T0* r335message(T335* C,T0* a1);
T6 r335conforms_to(T335* C,T0* a1);
T0* r335twin(T335* C);
T0* r335default_message(T335* C);
T0* r248out(T248* C);
void r248merge_assemblies(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
void r248out_in_tagged_out_memory(T248* C);
void r248make_empty(T248* C);
void r248merge_libraries(T248* C,T0* a1,T0* a2);
void r248make(T248* C,T0* a1);
void r248set_parent(T248* C,T0* a1);
T6 r248conforms_to(T248* C,T0* a1);
T0* r248twin(T248* C);
void r248mount_libraries(T248* C,T0* a1,T0* a2);
void r248set_library_prefix(T248* C,T0* a1);
void r248merge_externals(T248* C,T0* a1);
void r248merge_exported_features(T248* C,T0* a1);
void r248merge_components(T248* C,T0* a1);
T0* r281out(T281* C);
T0* r281new_cluster(T0* a1,T0* a2);
T0* r281new_mounted_library(T0* a1,T0* a2,T0* a3);
T0* r281new_mounted_libraries(void);
T6 r281se_assigned_from(T0* a1);
T0* r281new_options(void);
void r281out_in_tagged_out_memory(T281* C);
T0* r281new_system(T0* a1);
T6 r281conforms_to(T281* C,T0* a1);
T0* r281new_feature_options(T0* a1,T0* a2);
T0* r281new_clusters(T0* a1);
T0* r281twin(T281* C);
T0* r281new_class_options(T0* a1,T0* a2);
T0* r281new_library(void);
T0* r655out(T655* C);
T2 r655new_capacity(T2 a1);
void r655copy(T655* C,T0* a1);
void r655force(T655* C,T0* a1,T0* a2);
void r655make_clashes(T655* C,T2 a1);
T0* r655cursor_item(T655* C,T0* a1);
void r655search_position(T655* C,T0* a1);
void r655remove_traversing_cursor(T655* C,T0* a1);
void r655clone_slots(T655* C);
void r655keys_resize(T655* C,T2 a1);
T0* r655item(T655* C,T0* a1);
void r655clone_clashes(T655* C);
void r655move_all_cursors_after(T655* C);
void r655make_items(T655* C,T2 a1);
void r655add_traversing_cursor(T655* C,T0* a1);
T6 r655se_assigned_from(T0* a1);
T0* r655clone(T0* a1);
void r655out_in_tagged_out_memory(T655* C);
void r655make(T655* C);
void r655clone_items(T655* C);
T6 r655cursor_after(T0* a1);
T6 r655conforms_to(T655* C,T0* a1);
T6 r655has(T655* C,T0* a1);
void r655make_keys(T655* C,T2 a1);
T2 r655hash_position(T655* C,T0* a1);
void r655cursor_forth(T655* C,T0* a1);
void r655items_resize(T655* C,T2 a1);
void r655clone_keys(T655* C);
void r655resize(T655* C,T2 a1);
void r655make_with_equality_testers(T655* C,T2 a1,T0* a2,T0* a3);
void r655cursor_start(T655* C,T0* a1);
void r655clashes_resize(T655* C,T2 a1);
void r655slots_resize(T655* C,T2 a1);
T0* r655twin(T655* C);
T0* r655new_cursor(T655* C);
void r655make_slots(T655* C,T2 a1);
T2 r655new_modulus(T2 a1);
T6 r655cursor_off(T0* a1);
T0* r316out(T316* C);
T6 r316se_assigned_from(T0* a1);
void r316out_in_tagged_out_memory(T316* C);
void r316put_feature_option(T316* C,T0* a1);
void r316make(T316* C,T0* a1,T0* a2);
T6 r316conforms_to(T316* C,T0* a1);
T0* r316twin(T316* C);
T0* r421out(T421* C);
T0* r421arguments(void);
T6 r421se_assigned_from(T0* a1);
void r421out_in_tagged_out_memory(T421* C);
void r421make(T421* C,T0* a1,T0* a2);
T0* r421message(T421* C,T0* a1);
T6 r421conforms_to(T421* C,T0* a1);
T0* r421twin(T421* C);
T0* r421default_message(T421* C);
T0* r100out(T100* C);
void r100copy(T100* C,T0* a1);
T0* r100substring(T100* C,T2 a1,T2 a2);
T2 r100occurrences(T100* C,T3 a1);
void r100reset_byte_index_cache(T100* C);
void r100wipe_out(T100* C);
T6 r100same_unicode_string(T100* C,T0* a1);
T2 r100item_code(T100* C,T2 a1);
T3 r100character_item_at_byte_index(T100* C,T2 a1);
void r100put(T100* C,T3 a1,T2 a2);
void r100remove_between(T100* C,T2 a1,T2 a2);
T6 r100is_equal(T100* C,T0* a1);
T2 r100index_of_code(T100* C,T2 a1,T2 a2);
T3 r100item(T100* C,T2 a1);
extern T0*oBC101integer_;
void r100resize_byte_storage(T100* C,T2 a1);
void r100append(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T2 r100byte_index(T100* C,T2 a1);
T0* r100clone(T0* a1);
T2 r100index_of(T100* C,T3 a1,T2 a2);
void r100out_in_tagged_out_memory(T100* C);
T6 r100is_ascii(T100* C);
void r100move_bytes_right(T100* C,T2 a1,T2 a2);
void r100set_count(T100* C,T2 a1);
T2 r100next_byte_index(T100* C,T2 a1);
T6 r100same_type(T100* C,T0* a1);
void r100remove_tail(T100* C,T2 a1);
void r100make(T100* C,T2 a1);
void r100fill_tagged_out_memory(T100* C);
void r100old_make_filled(T100* C,T3 a1,T2 a2);
void r100append_string(T100* C,T0* a1);
T2 r100code_occurrences(T100* C,T2 a1);
void r100remove(T100* C,T2 a1);
void r100append_substring(T100* C,T0* a1,T2 a2,T2 a3);
T2 r100item_code_at_byte_index(T100* C,T2 a1);
T0* r100string(T100* C);
extern T0*oBC99platform;
void r100extend(T100* C,T3 a1);
T0* r100_px_43(T100* C,T0* a1);
T2 r100hash_code(T100* C);
T0* r100prefixed_string(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
void r100keep_head(T100* C,T2 a1);
T2 r100to_integer(T100* C);
T0* r100new_empty_string(T2 a1);
void r100append_character(T100* C,T3 a1);
void r100make_from_substring(T100* C,T0* a1,T2 a2,T2 a3);
void r100put_code_at_byte_index(T100* C,T2 a1,T2 a2,T2 a3);
void r100fill_with(T100* C,T3 a1);
void r100put_character_at_byte_index(T100* C,T3 a1,T2 a2,T2 a3);
void r100resize(T100* C,T2 a1);
void r100put_substring_at_byte_index(T100* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
T2 r100substring_index(T100* C,T0* a1,T2 a2);
void r100from_external_copy(T100* C,T8 a1);
T3 r100byte_item(T100* C,T2 a1);
void r100move_bytes_left(T100* C,T2 a1,T2 a2);
void r100old_make(T100* C,T2 a1);
T8 r100to_external(T100* C);
void r100old_make_from_string(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100to_utf8(T100* C);
T2 r100unicode_substring_index(T100* C,T0* a1,T2 a2);
void r100swap(T100* C,T2 a1,T2 a2);
T0* r75out(T75* C);
T6 r75se_assigned_from(T0* a1);
void r75out_in_tagged_out_memory(T75* C);
void r75execute_generators(T75* C,T0* a1);
void r75make(T75* C,T0* a1,T0* a2);
T6 r75conforms_to(T75* C,T0* a1);
void r75execute(T75* C);
T0* r75twin(T75* C);
T0* r659out(T659* C);
T6 r659se_assigned_from(T0* a1);
void r659out_in_tagged_out_memory(T659* C);
void r659make(T659* C,T0* a1,T0* a2);
T6 r659conforms_to(T659* C,T0* a1);
T0* r659twin(T659* C);
T0* r148out(T148* C);
T0* r148current_working_directory(T148* C);
T6 r148se_assigned_from(T0* a1);
T0* r148clone(T0* a1);
extern T6 oBC151is_windows;
extern int fBC151is_windows;
T6 r148is_windows(T148* C);
void r148out_in_tagged_out_memory(T148* C);
void r148make(T148* C);
void r148old_put_string(T0* a1);
T6 r148conforms_to(T148* C,T0* a1);
void r148put_integer(T2 a1);
void r148put_line(T0* a1);
T0* r148twin(T148* C);
void r148put_string(T0* a1);
T0* r251out(T251* C);
T6 r251is_fully_abstract(T251* C);
T0* r251prefixed_name(T251* C);
void r251set_subclusters(T251* C,T0* a1);
void r251merge_assemblies(T251* C,T0* a1);
T6 r251se_assigned_from(T0* a1);
void r251out_in_tagged_out_memory(T251* C);
void r251merge_libraries(T251* C,T0* a1,T0* a2);
T0* r251full_pathname(T251* C);
void r251make(T251* C,T0* a1,T0* a2);
T6 r251conforms_to(T251* C,T0* a1);
void r251put_class_option(T251* C,T0* a1);
T0* r251twin(T251* C);
void r251set_library_prefix(T251* C,T0* a1);
void r251merge_externals(T251* C,T0* a1);
void r251merge_exported_features(T251* C,T0* a1);
void r251merge_components(T251* C,T0* a1);
T0* r446_450Pnew_file_buffer(T0* a1);
T2 r446yy_at_beginning_of_line(T446* C);
T0* r446normalized_newline(T446* C);
T6 r446is_literal(T446* C);
T2 r446start_condition(T446* C);
void r446set_input_buffer(T446* C,T0* a1);
T0* r446text_substring(T446* C,T2 a1,T2 a2);
T0* r446yy_ec_template(void);
void r446yy_execute_action(T446* C,T2 a1);
T0* r446yy_def_template(void);
T3 r446text_item(T446* C,T2 a1);
void r446_448Pread_token(T446* C);
T6 r446end_of_file(T446* C);
T0* r446system_literal_text(T446* C);
T0* r446new_string_buffer(T0* a1);
void r446yy_load_input_buffer(T446* C);
void r446apply_input_buffer(T446* C);
void r446make_with_buffer(T446* C,T0* a1);
void r446_448P_447Preset(T446* C);
T2 r446yy_null_trans_state(T446* C,T2 a1);
void r446_447Preset(T446* C);
void r446pop_start_condition(T446* C);
T0* r446yy_accept_template(void);
void r446read_token(T446* C);
T2 r446yy_previous_state(T446* C);
void r446yy_refill_input_buffer(T446* C);
void r446push_start_condition_dtd_ignore(T446* C);
T0* r446yy_fixed_array(T0* a1);
T6 r446conforms_to(T446* C,T0* a1);
T0* r446yy_meta_template(void);
void r446set_input_file(T446* C,T0* a1);
T0* r446yy_base_template(void);
T0* r446twin(T446* C);
T2 r446text_count(T446* C);
T0* r446new_file_buffer(T446* C,T0* a1);
void r446make_scanner(T446* C);
void r446yy_initialize(T446* C);
void r446reset(T446* C);
void r446push_start_condition(T446* C,T2 a1);
T0* r446text(T446* C);
void r446out_in_tagged_out_memory(T446* C);
T0* r446yy_nxt_template(void);
void r446yy_set_line_column(T446* C);
void r446make_literal(T446* C,T0* a1);
T0* r446empty_buffer(void);
T0* r446yy_chk_template(void);
void r446_449Pset_input_buffer(T446* C,T0* a1);
void r446yy_set_content(T446* C,T0* a1);
void r446set_start_condition(T446* C,T2 a1);
void r446yy_execute_eof_action(T446* C,T2 a1);
T0* r446out(T446* C);
T6 r446se_assigned_from(T0* a1);
void r446yy_build_tables(T446* C);
void r446make_external(T446* C,T0* a1);
T0* r170out(T170* C);
T0* r170current_working_directory(T170* C);
T6 r170se_assigned_from(T0* a1);
T0* r170clone(T0* a1);
T6 r170is_windows(T170* C);
void r170out_in_tagged_out_memory(T170* C);
void r170make(T170* C);
void r170old_put_string(T0* a1);
T6 r170conforms_to(T170* C,T0* a1);
void r170put_integer(T2 a1);
void r170put_line(T0* a1);
T0* r170twin(T170* C);
void r170put_string(T0* a1);
T0* r563out(T563* C);
T6 r563se_assigned_from(T0* a1);
void r563out_in_tagged_out_memory(T563* C);
void r563make(T563* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563twin(T563* C);
T0* r305out(T305* C);
T6 r305se_assigned_from(T0* a1);
void r305out_in_tagged_out_memory(T305* C);
void r305make(T305* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r305conforms_to(T305* C,T0* a1);
T0* r305twin(T305* C);
T0* r546out(T546* C);
T6 r546se_assigned_from(T0* a1);
void r546out_in_tagged_out_memory(T546* C);
void r546make(T546* C,T0* a1,T0* a2,T0* a3);
T6 r546conforms_to(T546* C,T0* a1);
T0* r546twin(T546* C);
T0* r247out(T247* C);
T0* r247item(T247* C,T0* a1);
T6 r247se_assigned_from(T0* a1);
T0* r247clone(T0* a1);
void r247out_in_tagged_out_memory(T247* C);
void r247make_empty(T247* C);
void r247merge_libraries(T247* C,T0* a1,T0* a2);
void r247set_root(T247* C,T6 a1);
T6 r247conforms_to(T247* C,T0* a1);
T0* r247twin(T247* C);
void r247mount_libraries(T247* C,T0* a1);
void r247merge_externals(T247* C,T0* a1);
T0* r108out(T108* C);
void r108copy(T108* C,T0* a1);
T0* r108substring(T108* C,T2 a1,T2 a2);
T2 r108occurrences(T108* C,T3 a1);
void r108reset_byte_index_cache(T108* C);
T2 r108shifted_byte_index(T108* C,T2 a1,T2 a2);
void r108wipe_out(T108* C);
T6 r108same_unicode_string(T108* C,T0* a1);
T2 r108item_code(T108* C,T2 a1);
T3 r108character_item_at_byte_index(T108* C,T2 a1);
void r108put(T108* C,T3 a1,T2 a2);
void r108remove_between(T108* C,T2 a1,T2 a2);
T6 r108is_equal(T108* C,T0* a1);
T2 r108index_of_code(T108* C,T2 a1,T2 a2);
T3 r108item(T108* C,T2 a1);
void r108resize_byte_storage(T108* C,T2 a1);
void r108append(T108* C,T0* a1);
T6 r108se_assigned_from(T0* a1);
T2 r108byte_index(T108* C,T2 a1);
T0* r108clone(T0* a1);
T2 r108index_of(T108* C,T3 a1,T2 a2);
void r108out_in_tagged_out_memory(T108* C);
T6 r108is_ascii(T108* C);
void r108move_bytes_right(T108* C,T2 a1,T2 a2);
void r108set_count(T108* C,T2 a1);
T2 r108next_byte_index(T108* C,T2 a1);
T6 r108same_type(T108* C,T0* a1);
void r108remove_tail(T108* C,T2 a1);
void r108make(T108* C,T2 a1);
void r108old_make_filled(T108* C,T3 a1,T2 a2);
void r108fill_tagged_out_memory(T108* C);
T2 r108code_occurrences(T108* C,T2 a1);
void r108remove(T108* C,T2 a1);
void r108append_substring(T108* C,T0* a1,T2 a2,T2 a3);
T2 r108item_code_at_byte_index(T108* C,T2 a1);
T0* r108string(T108* C);
T0* r108_px_43(T108* C,T0* a1);
void r108extend(T108* C,T3 a1);
T2 r108hash_code(T108* C);
T0* r108prefixed_string(T108* C,T0* a1);
T6 r108conforms_to(T108* C,T0* a1);
void r108keep_head(T108* C,T2 a1);
T2 r108to_integer(T108* C);
T0* r108new_empty_string(T2 a1);
void r108append_character(T108* C,T3 a1);
void r108put_code_at_byte_index(T108* C,T2 a1,T2 a2,T2 a3);
void r108make_from_substring(T108* C,T0* a1,T2 a2,T2 a3);
void r108fill_with(T108* C,T3 a1);
void r108put_character_at_byte_index(T108* C,T3 a1,T2 a2,T2 a3);
void r108resize(T108* C,T2 a1);
void r108put_substring_at_byte_index(T108* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
T2 r108substring_index(T108* C,T0* a1,T2 a2);
void r108append_utf8(T108* C,T0* a1);
void r108from_external_copy(T108* C,T8 a1);
void r108move_bytes_left(T108* C,T2 a1,T2 a2);
void r108old_make(T108* C,T2 a1);
T8 r108to_external(T108* C);
void r108old_make_from_string(T108* C,T0* a1);
T0* r108twin(T108* C);
T0* r108to_utf8(T108* C);
T2 r108unicode_substring_index(T108* C,T0* a1,T2 a2);
void r108make_from_utf8(T108* C,T0* a1);
void r108swap(T108* C,T2 a1,T2 a2);
T0* r648_450Pnew_file_buffer(T0* a1);
void r648_448P_446Pread_token(T648* C);
T2 r648yy_at_beginning_of_line(T648* C);
T0* r648normalized_newline(T648* C);
void r648_448P_447P_446Preset(T648* C);
T2 r648start_condition(T648* C);
void r648_446Preset(T648* C);
void r648set_input_buffer(T648* C,T0* a1);
T0* r648text_substring(T648* C,T2 a1,T2 a2);
T0* r648yy_ec_template(void);
void r648yy_execute_action(T648* C,T2 a1);
T0* r648yy_def_template(void);
T3 r648text_item(T648* C,T2 a1);
T6 r648end_of_file(T648* C);
T0* r648system_literal_text(T648* C);
T0* r648new_string_buffer(T0* a1);
void r648yy_load_input_buffer(T648* C);
void r648apply_input_buffer(T648* C);
void r648make_with_buffer(T648* C,T0* a1);
T2 r648yy_null_trans_state(T648* C,T2 a1);
void r648pop_start_condition(T648* C);
T0* r648yy_accept_template(void);
void r648read_token(T648* C);
T2 r648yy_previous_state(T648* C);
void r648yy_refill_input_buffer(T648* C);
T0* r648yy_fixed_array(T0* a1);
T6 r648conforms_to(T648* C,T0* a1);
T0* r648yy_meta_template(void);
void r648set_input_file(T648* C,T0* a1);
T0* r648yy_base_template(void);
T0* r648twin(T648* C);
T2 r648text_count(T648* C);
T0* r648new_file_buffer(T648* C,T0* a1);
void r648make_scanner(T648* C);
void r648yy_initialize(T648* C);
void r648reset(T648* C);
void r648push_start_condition(T648* C,T2 a1);
T0* r648text(T648* C);
void r648out_in_tagged_out_memory(T648* C);
void r648make_def(T648* C,T0* a1);
void r648_446Pread_token(T648* C);
void r648reset_sent(T648* C);
T0* r648yy_nxt_template(void);
void r648yy_set_line_column(T648* C);
void r648_447P_446Preset(T648* C);
void r648make_literal(T648* C,T0* a1);
T0* r648empty_buffer(void);
T0* r648yy_chk_template(void);
void r648_449Pset_input_buffer(T648* C,T0* a1);
void r648yy_set_content(T648* C,T0* a1);
void r648set_start_condition(T648* C,T2 a1);
T0* r648out(T648* C);
T6 r648se_assigned_from(T0* a1);
void r648yy_build_tables(T648* C);
void r648make_external(T648* C,T0* a1);
T0* r568out(T568* C);
void r568make_from_stream(T568* C,T0* a1);
T0* r568name(T568* C);
T2 r568read_to_string(T568* C,T0* a1,T2 a2,T2 a3);
T6 r568se_assigned_from(T0* a1);
T0* r568clone(T0* a1);
void r568out_in_tagged_out_memory(T568* C);
void r568read_character(T568* C);
T6 r568is_open_read(T568* C);
void r568utf16_detect_read_character(T568* C);
void r568make(T568* C,T0* a1);
T6 r568conforms_to(T568* C,T0* a1);
T6 r568end_of_input(T568* C);
void r568append_character(T568* C,T2 a1);
void r568utf16_read_character(T568* C);
T3 r568last_character(T568* C);
extern T0*oBC568utf8_buffer;
extern int fBC568utf8_buffer;
T0* r568utf8_buffer(void);
T0* r568twin(T568* C);
void r210set_last_cell(T210* C,T0* a1);
T0* r210out(T210* C);
void r210copy(T210* C,T0* a1);
void r210wipe_out(T210* C);
void r210remove_first(T210* C);
T0* r210cursor_item(T0* a1);
T6 r210cursor_is_last(T210* C,T0* a1);
void r210remove_traversing_cursor(T210* C,T0* a1);
void r210make_root(T210* C,T0* a1,T0* a2);
void r210cursor_go_after(T210* C,T0* a1);
void r210move_all_cursors_after(T210* C);
T6 r210has_attribute_by_name(T210* C,T0* a1);
void r210add_traversing_cursor(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
void r210out_in_tagged_out_memory(T210* C);
T0* r210attribute_by_name(T210* C,T0* a1);
void r210make_child(T210* C,T0* a1,T0* a2,T0* a3);
void r210remove_last(T210* C);
T6 r210cursor_after(T0* a1);
T6 r210conforms_to(T210* C,T0* a1);
void r210make_list(T210* C);
void r210cursor_forth(T210* C,T0* a1);
void r210move_last_cursors_after(T210* C);
void r210cursor_start(T210* C,T0* a1);
T6 r210same_string(T0* a1,T0* a2);
T0* r210twin(T210* C);
void r210force_last(T210* C,T0* a1);
T0* r210new_cursor(T210* C);
void r210make_composite(T210* C);
T6 r210has_element_by_name(T210* C,T0* a1);
T6 r210cursor_is_first(T210* C,T0* a1);
void r210remove_at_cursor(T210* C,T0* a1);
T0* r210element_by_name(T210* C,T0* a1);
void r210move_all_cursors(T210* C,T0* a1,T0* a2);
T6 r210cursor_off(T0* a1);
T0* r250out(T250* C);
T6 r250se_assigned_from(T0* a1);
void r250out_in_tagged_out_memory(T250* C);
void r250make(T250* C,T0* a1,T0* a2,T0* a3);
T6 r250conforms_to(T250* C,T0* a1);
T0* r250twin(T250* C);
T0* r64out(T64* C);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r64command_arguments(void);
T6 r64se_assigned_from(T0* a1);
void r64out_in_tagged_out_memory(T64* C);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T0* r64argument(T2 a1);
T0* r382out(T382* C);
T0* r382arguments(void);
T6 r382se_assigned_from(T0* a1);
void r382out_in_tagged_out_memory(T382* C);
void r382make(T382* C,T0* a1,T0* a2,T0* a3,T0* a4);
T0* r382message(T382* C,T0* a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382twin(T382* C);
T0* r382default_message(T382* C);
T0* r30out(T30* C);
void r30report_non_empty_attribute_expected_error(T30* C,T0* a1,T0* a2,T0* a3);
void r30report_missing_element_error(T30* C,T0* a1,T0* a2,T0* a3);
T6 r30se_assigned_from(T0* a1);
void r30report_missing_attribute_error(T30* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC32null_output_stream;
extern int fBC32null_output_stream;
T0* r30null_output_stream(void);
void r30report_cannot_write_file_error(T30* C,T0* a1);
void r30report_warning_message(T30* C,T0* a1);
void r30out_in_tagged_out_memory(T30* C);
extern T0*oBC33std;
void r30make(T30* C);
void r30report_cannot_read_file_error(T30* C,T0* a1);
void r30report_parser_error(T30* C,T0* a1);
T0* r30message(T0* a1);
void r30report_invalid_expression_error(T30* C,T0* a1,T0* a2);
void r30report_positive_integer_expected_error(T30* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r30conforms_to(T30* C,T0* a1);
void r30report_not_xace_file_error(T30* C,T0* a1);
void r30report_wrong_root_element_error(T30* C,T0* a1,T0* a2);
void r30_31Preport_error_message(T30* C,T0* a1);
void r30report_unknown_element_error(T30* C,T0* a1,T0* a2,T0* a3);
void r30report_multiple_library_prefix_error(T30* C,T0* a1,T0* a2);
T0* r30twin(T30* C);
void r30report_wrong_attribute_value_error(T30* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5);
void r30report_boolean_expected_error(T30* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r30make_standard(T30* C);
void r30report_error_message(T30* C,T0* a1);
T6 r416is_expression_true(T416* C,T0* a1);
T0* r416out(T416* C);
T6 r416should_strip_element(T416* C,T0* a1,T0* a2);
T6 r416se_assigned_from(T0* a1);
void r416preprocess_composite(T416* C,T0* a1,T0* a2);
T6 r416is_valid_expression(T0* a1);
void r416out_in_tagged_out_memory(T416* C);
void r416make(T416* C,T0* a1,T0* a2);
extern T0*oBC206uc_unless;
extern T0*oBC206uc_if;
T6 r416conforms_to(T416* C,T0* a1);
T0* r416twin(T416* C);
void r416expand_attribute_variables(T416* C,T0* a1);
T0* r492out(T492* C);
T0* r492substring(T492* C,T2 a1,T2 a2);
void r492fill_from_string(T492* C,T0* a1,T2 a2);
T2 r492fill_from_stream(T492* C,T0* a1,T2 a2,T2 a3);
T6 r492se_assigned_from(T0* a1);
void r492out_in_tagged_out_memory(T492* C);
void r492move_left(T492* C,T2 a1,T2 a2,T2 a3);
void r492make(T492* C,T2 a1);
T6 r492conforms_to(T492* C,T0* a1);
void r492resize(T492* C,T2 a1);
T0* r492twin(T492* C);
T0* r147out(T147* C);
extern T0*oBC147error;
extern int fBC147error;
T0* r147error(void);
T6 r147se_assigned_from(T0* a1);
void r147out_in_tagged_out_memory(T147* C);
extern T0*oBC147output;
extern int fBC147output;
T0* r147output(void);
T6 r147conforms_to(T147* C,T0* a1);
T0* r147twin(T147* C);
extern T2 oBC185maximum_character_code;
extern int fBC185maximum_character_code;
T2 r185maximum_character_code(T185* C);
T0* r185out(T185* C);
T6 r185se_assigned_from(T0* a1);
void r185out_in_tagged_out_memory(T185* C);
T6 r185conforms_to(T185* C,T0* a1);
T0* r185twin(T185* C);
T0* r39out(T39* C);
T6 r39se_assigned_from(T0* a1);
void r39out_in_tagged_out_memory(T39* C);
T6 r39conforms_to(T39* C,T0* a1);
T0* r39twin(T39* C);
T0* r35out(T35* C);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T0* r339out(T339* C);
extern T0*oBC340lowercase_24;
extern int fBC340lowercase_24;
T0* r339lowercase_24(void);
extern T0*oBC340lowercase_21;
extern int fBC340lowercase_21;
T0* r339lowercase_21(void);
T6 r339is_ascii_string(T0* a1);
extern T0*oBC340lowercase_06;
extern int fBC340lowercase_06;
T0* r339lowercase_06(void);
extern T0*oBC340lowercase_05;
extern int fBC340lowercase_05;
T0* r339lowercase_05(void);
extern T0*oBC340lowercase_04;
extern int fBC340lowercase_04;
T0* r339lowercase_04(void);
extern T0*oBC340lowercase_03;
extern int fBC340lowercase_03;
T0* r339lowercase_03(void);
extern T0*oBC340lowercase_02;
extern int fBC340lowercase_02;
T0* r339lowercase_02(void);
extern T0*oBC340lowercase_01;
extern int fBC340lowercase_01;
T0* r339lowercase_01(void);
extern T0*oBC340lowercase_00;
extern int fBC340lowercase_00;
T0* r339lowercase_00(void);
T6 r339se_assigned_from(T0* a1);
void r339out_in_tagged_out_memory(T339* C);
extern T0*oBC340lowercase_ff;
extern int fBC340lowercase_ff;
T0* r339lowercase_ff(void);
T6 r339conforms_to(T339* C,T0* a1);
T2 r339lower_code(T2 a1);
T6 r339valid_code(T2 a1);
T0* r339twin(T339* C);
extern T0*oBC340lowercase_1f;
extern int fBC340lowercase_1f;
T0* r339lowercase_1f(void);
extern T0*oBC340lowercase_1e;
extern int fBC340lowercase_1e;
T0* r339lowercase_1e(void);
extern T0*oBC340lowercase;
extern int fBC340lowercase;
T0* r339lowercase(void);
T0* r187out(T187* C);
T6 r187se_assigned_from(T0* a1);
void r187out_in_tagged_out_memory(T187* C);
T6 r187conforms_to(T187* C,T0* a1);
T0* r187twin(T187* C);
T0* r110out(T110* C);
T2 r110encoded_next_value(T3 a1);
T2 r110character_byte_count(T3 a1);
T6 r110se_assigned_from(T0* a1);
void r110out_in_tagged_out_memory(T110* C);
T2 r110encoded_first_value(T3 a1);
T6 r110conforms_to(T110* C,T0* a1);
T2 r110code_byte_count(T2 a1);
T2 r110encoded_byte_count(T3 a1);
void r110append_code_to_utf8(T0* a1,T2 a2);
T0* r110twin(T110* C);
T2 r110substring_byte_count(T0* a1,T2 a2,T2 a3);
T0* r109out(T109* C);
T6 r109se_assigned_from(T0* a1);
void r109out_in_tagged_out_memory(T109* C);
T6 r109conforms_to(T109* C,T0* a1);
T3 r109to_character(T2 a1);
T0* r109twin(T109* C);
T0* r664out(T664* C);
T6 r664se_assigned_from(T0* a1);
void r664out_in_tagged_out_memory(T664* C);
T6 r664conforms_to(T664* C,T0* a1);
T0* r664twin(T664* C);
T0* r34out(T34* C);
T6 r34se_assigned_from(T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
T0* r34twin(T34* C);
T0* r172out(T172* C);
T6 r172se_assigned_from(T0* a1);
void r172out_in_tagged_out_memory(T172* C);
T6 r172conforms_to(T172* C,T0* a1);
T6 r172test(T0* a1,T0* a2);
T0* r172twin(T172* C);
T0* r337get_environment_variable(T0* a1);
T0* r205out(T205* C);
T6 r205se_assigned_from(T0* a1);
void r205out_in_tagged_out_memory(T205* C);
T6 r205conforms_to(T205* C,T0* a1);
T0* r205twin(T205* C);
T0* r663out(T663* C);
T6 r663se_assigned_from(T0* a1);
void r663out_in_tagged_out_memory(T663* C);
T6 r663conforms_to(T663* C,T0* a1);
T0* r663twin(T663* C);
T0* r11out(T11* C);
void r11process_cluster(T11* C);
T0* r11split_on_first(T0* a1,T3 a2);
void r11process_options(T11* C);
void r11process_arguments(T11* C);
T0* r11arguments(void);
T6 r11has_next_option_value(T11* C);
T6 r11se_assigned_from(T0* a1);
void r11out_in_tagged_out_memory(T11* C);
void r11process_xace_file(T11* C,T0* a1);
T6 r11is_next_option_long_option(T11* C);
extern T0*oBC11usage_message;
extern int fBC11usage_message;
T0* r11usage_message(void);
T0* r11next_option_value(T11* C);
void r11make(T11* C);
void r11process_command(T11* C);
T6 r11is_valid_option_position(T2 a1);
void r11process_system(T11* C);
T6 r11conforms_to(T11* C,T0* a1);
extern T0*oBC15exceptions;
void r11process_define_string(T11* C,T0* a1);
void r11process_output(T11* C,T0* a1);
void r11process_validate(T11* C);
T0* r11next_option(T11* C);
T6 r11has_next_option(T11* C);
void r11process_library(T11* C);
T0* r11twin(T11* C);
void r11process_define(T11* C);
T0* r11split_string(T0* a1,T3 a2);
void r11process_compilers(T11* C,T0* a1,T0* a2);
T6 r11match_long_option(T11* C,T0* a1);
void r11consume_option(T11* C);
void r506connect_to_current_working_directory(T506* C);
void r506disconnect(T506* C);
extern T0*oBC506last_entry;
T0* r96out(T96* C);
void r96wipe_out(T0* a1);
T0* r96as_string(T0* a1);
T6 r96se_assigned_from(T0* a1);
T0* r96clone(T0* a1);
T0* r96appended_string(T0* a1,T0* a2);
void r96out_in_tagged_out_memory(T96* C);
T6 r96is_integer(T0* a1);
T6 r96same_case_insensitive(T0* a1,T0* a2);
T0* r96make(T2 a1);
T0* r96string(T0* a1);
T2 r96hexadecimal_to_integer(T0* a1);
T6 r96conforms_to(T96* C,T0* a1);
T0* r96appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r96new_empty_string(T0* a1,T2 a2);
T0* r96concat(T0* a1,T0* a2);
T2 r96substring_index(T0* a1,T0* a2,T2 a3);
T6 r96same_string(T0* a1,T0* a2);
T0* r96twin(T96* C);
T6 r96elks_same_string(T0* a1,T0* a2);
void r96append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r336out(T336* C);
T0* r336variable_value(T0* a1);
T6 r336se_assigned_from(T0* a1);
void r336out_in_tagged_out_memory(T336* C);
extern T337 oBC336environment_impl;
T6 r336conforms_to(T336* C,T0* a1);
T0* r336interpreted_string(T0* a1);
T0* r336twin(T336* C);
T0* r424out(T424* C);
T6 r424se_assigned_from(T0* a1);
void r424out_in_tagged_out_memory(T424* C);
T6 r424conforms_to(T424* C,T0* a1);
T0* r424twin(T424* C);
T0* r74out(T74* C);
T6 r74se_assigned_from(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
T0* r74twin(T74* C);
T0* r151out(T151* C);
T0* r151current_working_directory(T151* C);
T6 r151se_assigned_from(T0* a1);
T0* r151clone(T0* a1);
T6 r151is_windows(T151* C);
void r151out_in_tagged_out_memory(T151* C);
T6 r151conforms_to(T151* C,T0* a1);
T0* r151twin(T151* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 665
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms205_2040823781;
extern T7*ms205_1957581;
extern T7*ms437_1864547461;
extern T7*ms205_335219475;
extern T7*ms382_802821753;
extern T7*ms205_2063276;
extern T7*ms437_2065551545;
extern T7*ms7_241908472;
extern T7*ms205_1846843898;
extern T7*ms205_19162620;
extern T7*ms205_914215870;
extern T7*ms379_1003460429;
extern T7*ms504_1606053737;
extern T7*ms418_54177410;
extern T7*ms447_192;
extern T7*ms205_1493399999;
extern T7*ms205_1365755180;
extern T7*ms142_10031271;
extern T7*ms205_2248290;
extern T7*ms205_1969927992;
extern T7*ms205_1962309625;
extern T7*ms205_48856070;
extern T7*ms205_437070;
extern T7*ms205_440571;
extern T7*ms205_2250778;
extern T7*ms205_2246326;
extern T7*ms437_1787513656;
extern T7*ms498_512683247;
extern T7*ms205_1711858390;
extern T7*ms205_2052034769;
extern T7*ms437_513387338;
extern T7*ms437_438332871;
extern T7*ms205_52771526;
extern T7*ms6_79251;
extern T7*ms437_1383485945;
extern T7*ms205_2191641;
extern T7*ms205_10365093;
extern T7*ms437_1040340337;
extern T7*ms205_783353191;
extern T7*ms204_18036;
extern T7*ms205_243833461;
extern T7*ms205_2185421;
extern T7*ms205_54423316;
extern T7*ms205_9901966;
extern T7*ms7_280756769;
extern T7*ms148_10;
extern T7*ms437_987451011;
extern T7*ms205_10030586;
extern T7*ms437_993001251;
extern T7*ms205_264596220;
extern T7*ms437_930325994;
extern T7*ms205_537250837;
extern T7*ms499_10;
extern T7*ms205_2032026;
extern T7*ms205_420169;
extern T7*ms437_92561396;
extern T7*ms335_988446515;
extern T7*ms437_1718816811;
extern T7*ms419_1179444653;
extern T7*ms68_5426;
extern T7*ms205_78002;
extern T7*ms205_408086;
extern T7*ms205_78263;
extern T7*ms205_78331;
extern T7*ms205_78279;
extern T7*ms205_48929738;
extern T7*ms205_765701343;
extern T7*ms205_78490;
extern T7*ms437_551891802;
extern T7*ms205_78495;
extern T7*ms205_9786069;
extern T7*ms205_295494129;
extern T7*ms205_90041;
extern T7*ms141_440790;
extern T7*ms141_440825;
extern T7*ms170_10;
extern T7*ms205_90141;
extern T7*ms205_1817115202;
extern T7*ms113_1515383187;
extern T7*ms28_1415324896;
extern T7*ms437_429369815;
extern T7*ms7_1983847;
extern T7*ms205_1831836695;
extern T7*ms68_2124547;
extern T7*ms437_1232318322;
extern T7*ms205_403369;
extern T7*ms420_454072470;
extern T7*ms205_722497341;
extern T7*ms205_692313432;
extern T7*ms380_1173656100;
extern T7*ms205_402346;
extern T7*ms205_50458336;
extern T7*ms205_1155828738;
extern T7*ms96_0;
extern T7*ms491_6934577;
extern T7*ms169_10;
extern T7*ms205_1619639801;
extern T7*ms205_89216;
extern T7*ms205_53099313;
extern T7*ms432_969380041;
extern T7*ms100_0;
extern T7*ms205_89771;
extern T7*ms205_89862;
extern T7*ms116_431271;
extern T7*ms110_0;
extern T7*ms437_1785408556;
extern T7*ms205_662126768;
extern T7*ms6_18036;
extern T7*ms68_14150;
extern T7*ms205_1998096;
extern T7*ms205_39972254;
extern T7*ms192_250860571;
extern T7*ms143_11272528;
extern T7*ms205_1085709462;
extern T7*ms437_758578972;
extern T7*ms205_1994621;
extern T7*ms204_0;
extern T7*ms28_2045384695;
extern T7*ms205_9814236;
extern T7*ms437_224621212;
extern T7*ms432_1806352573;
extern T7*ms205_554402727;
extern T7*ms205_9558536;
extern T7*ms205_1988096;
extern T7*ms423_462378139;
extern T7*ms437_1105337616;
extern T7*ms437_313350252;
extern T7*ms205_484842691;
extern T7*ms421_820451542;
extern T7*ms228_0;
extern T7*ms437_1639807481;
extern T7*ms437_414094759;
extern T7*ms205_2141685;
extern T7*ms251_0;
extern T7*ms381_105797387;
extern T7*ms205_3073;
extern T7*ms205_3139;
extern T7*ms205_3148;
extern T7*ms205_3226;
extern T7*ms205_1040155018;
extern T7*ms437_620986269;
extern T7*ms205_3322;
extern T7*ms205_17221;
extern T7*ms205_17176;
extern T7*ms205_16782;
extern T7*ms315_229;
extern T7*ms437_1389019675;
extern T7*ms437_1680506019;
extern T7*ms447_32;
extern T7*ms282_2131726096;
extern T7*ms205_9946191;
extern T7*ms205_232608820;
extern T7*ms205_49076540;
extern T7*ms116_1319327951;
extern T7*ms437_225532234;
extern T7*ms205_1570582567;
extern T7*ms437_1806545392;
extern T7*ms205_1991783165;
extern T7*ms68_251;
extern T7*ms205_11230216;
extern T7*ms205_702131887;
extern T7*ms205_279458336;
extern T7*ms205_234165132;
extern T7*ms205_49483191;
extern T7*ms437_1806352573;
extern T7*ms437_880035048;
extern T7*ms204_79251;
extern T7*ms205_51843716;
extern T7*ms116_9702826;
extern T7*ms437_729820516;
extern T7*ms205_388005040;
extern T7*ms205_1183150341;
extern T7*ms68_4763922;
extern T7*ms205_10342028;
extern T7*ms205_736662644;
extern T7*ms140_2071896;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void*se_ma428(int argc,...);
void*se_ma112(int argc,...);
void*se_ma343(int argc,...);
void*se_ma344(int argc,...);
void X443on_doctype(T0*C,T0* a1,T0* a2,T6 a3);
void X443on_entity_declaration(T0*C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
void X443on_element_declaration(T0*C,T0* a1,T0* a2);
void X443on_notation_declaration(T0*C,T0* a1,T0* a2);
void X443on_attribute_declaration(T0*C,T0* a1,T0* a2,T0* a3);
T6 X139test(T0*C,T0* a1,T0* a2);
void X225out_in_tagged_out_memory(T0*C);
T6 X100same_unicode_string(T0*C,T0* a1);
T0* X100as_string(T0*C);
T2 X100byte_index(T0*C,T2 a1);
T2 X100next_byte_index(T0*C,T2 a1);
void X100append_string(T0*C,T0* a1);
void X100append_substring(T0*C,T0* a1,T2 a2,T2 a3);
T2 X100item_code_at_byte_index(T0*C,T2 a1);
T0* X100string(T0*C);
T0* X100_px_43(T0*C,T0* a1);
T0* X100prefixed_string(T0*C,T0* a1);
T0* X100new_empty_string(T0*C,T2 a1);
T2 X100substring_index(T0*C,T0* a1,T2 a2);
T3 X100byte_item(T0*C,T2 a1);
void X28execute(T0*C);
T0* X157item(T0*C);
T6 X157after(T0*C);
void X157forth(T0*C);
void X157start(T0*C);
T0* X158cursor_item(T0*C,T0* a1);
T6 X158cursor_after(T0*C,T0* a1);
void X158cursor_forth(T0*C,T0* a1);
void X158cursor_start(T0*C,T0* a1);
T0* X158new_cursor(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
T2 X7occurrences(T0*C,T3 a1);
void X7wipe_out(T0*C);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7out_in_tagged_out_memory(T0*C);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
void X7remove(T0*C,T2 a1);
T0* X7string(T0*C);
T0* X7_px_43(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
T2 X7substring_index(T0*C,T0* a1,T2 a2);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T0* X304cursor_item(T0*C,T0* a1);
T6 X304cursor_after(T0*C,T0* a1);
void X304cursor_forth(T0*C,T0* a1);
void X304cursor_start(T0*C,T0* a1);
void X166put_right(T0*C,T0* a1);
T0* X163last(T0*C);
T0* X163cursor_item(T0*C,T0* a1);
T6 X163is_equal(T0*C,T0* a1);
T0* X163item(T0*C,T2 a1);
T6 X163cursor_after(T0*C,T0* a1);
void X163cursor_forth(T0*C,T0* a1);
void X163cursor_start(T0*C,T0* a1);
void X163force_last(T0*C,T0* a1);
T0* X163new_cursor(T0*C);
T0* X10out(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X446out_in_tagged_out_memory(T0*C);
void X446apply_input_buffer(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X474clear_all(T0*C,T0* a1);
T0* X474make(T0*C,T2 a1);
T0* X474resize(T0*C,T0* a1,T2 a2);
void X93put_new_line(T0*C);
void X93put_integer(T0*C,T2 a1);
void X93put_line(T0*C,T0* a1);
void X93put_character(T0*C,T3 a1);
void X93put_string(T0*C,T0* a1);
T0* X197name(T0*C);
T2 X197read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X197read_character(T0*C);
T6 X197is_open_read(T0*C);
T6 X197end_of_input(T0*C);
T3 X197last_character(T0*C);
void X214force_last(T0*C,T0* a1);
T0* X214new_cursor(T0*C);
void X214remove_at_cursor(T0*C,T0* a1);
void X491fill(T0*C);
T0* X491name(T0*C);
void X154set(T0*C,T0* a1,T6 a2,T6 a3);
T0* X154item(T0*C);
void X154set_next_cursor(T0*C,T0* a1);
T6 X154after(T0*C);
T6 X154is_last(T0*C);
void X154forth(T0*C);
void X154start(T0*C);
void X154set_after(T0*C);
T6 X154before(T0*C);
void X226on_start_tag_finish(T0*C);
void X226on_finish(T0*C);
void X226on_content(T0*C,T0* a1);
void X226on_start(T0*C);
void X226on_processing_instruction(T0*C,T0* a1,T0* a2);
void X226on_start_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X226on_comment(T0*C,T0* a1);
void X226on_end_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X226on_attribute(T0*C,T0* a1,T0* a2,T0* a3,T0* a4);
void X226on_error(T0*C,T0* a1);
T2 X471count(T0*C);
T2 X471item(T0*C,T2 a1);
T2 X471lower(T0*C);
void X127force(T0*C,T0* a1,T0* a2);
T0* X127item(T0*C,T0* a1);
T6 X127has(T0*C,T0* a1);
T0* X155item(T0*C);
T6 X155after(T0*C);
void X155forth(T0*C);
void X155start(T0*C);
void X203parse_file(T0*C,T0* a1);
void X473put(T0*C,T0* a1,T2 a2);
T0* X473item(T0*C,T2 a1);
T477 X473storage(T0*C);
void X473set_all_with(T0*C,T0* a1);
void X473resize(T0*C,T2 a1);
T2 X164count(T0*C);
T6 X164cursor_is_last(T0*C,T0* a1);
void X164remove_traversing_cursor(T0*C,T0* a1);
void X164add_traversing_cursor(T0*C,T0* a1);
T6 X164is_empty(T0*C);
void X164cursor_forth(T0*C,T0* a1);
T0* X164first_cell(T0*C);
void X164cursor_start(T0*C,T0* a1);
void X164force_last(T0*C,T0* a1);
T0* X164new_cursor(T0*C);
void X164put_last(T0*C,T0* a1);
T0* X91default_message(T0*C);
void X447read_token(T0*C);
void X447set_input_buffer(T0*C,T0* a1);
void X447set_input_file(T0*C,T0* a1);
void X447reset(T0*C);
T0* X447new_file_buffer(T0*C,T0* a1);
T6 X151is_windows(T0*C);
void X77generate_library(T0*C,T0* a1);
void X77generate_system(T0*C,T0* a1);
T0* T3toT74(T3 source);
T0* T2toT35(T2 source);
T2 T35toT2(T0* source);

#ifdef __cplusplus
}
#endif
