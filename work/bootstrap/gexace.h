#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #10 (Thursday November 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S295 T295;
typedef struct S745 T745;
typedef struct S764 T764;
typedef struct S510 T510;
typedef struct S480 T480;
typedef struct S595 T595;
typedef struct S469 T469;
typedef struct S603 T603;
typedef struct S665 T665;
typedef struct S101 T101;
typedef struct S153 T153;
typedef struct S667 T667;
typedef struct S241 T241;
typedef struct S172 T172;
typedef struct S575 T575;
typedef struct S584 T584;
typedef struct S606 T606;
typedef struct S631 T631;
typedef struct S408 T408;
typedef struct S614 T614;
typedef struct S572 T572;
typedef struct S249 T249;
typedef struct S189 T189;
typedef struct S706 T706;
typedef struct S378 T378;
typedef struct S209 T209;
typedef struct S227 T227;
typedef struct S214 T214;
typedef struct S134 T134;
typedef struct S499 T499;
typedef struct S213 T213;
typedef struct S225 T225;
typedef struct S219 T219;
typedef struct S515 T515;
typedef struct S643 T643;
typedef struct S650 T650;
typedef struct S40 T40;
typedef struct S646 T646;
typedef struct S501 T501;
typedef struct S337 T337;
typedef struct S41 T41;
typedef struct S576 T576;
typedef struct S270 T270;
typedef struct S391 T391;
typedef struct S583 T583;
typedef struct S121 T121;
typedef struct S298 T298;
typedef struct S190 T190;
typedef struct S88 T88;
typedef struct S732 T732;
typedef struct S130 T130;
typedef struct S164 T164;
typedef struct S727 T727;
typedef struct S610 T610;
typedef struct S36 T36;
typedef struct S506 T506;
typedef struct S509 T509;
typedef struct S409 T409;
typedef struct S456 T456;
typedef struct S333 T333;
typedef struct S140 T140;
typedef struct S748 T748;
typedef struct S464 T464;
typedef struct S629 T629;
typedef struct S609 T609;
typedef struct S662 T662;
typedef struct S171 T171;
typedef struct S762 T762;
typedef struct S605 T605;
typedef struct S593 T593;
typedef struct S30 T30;
typedef struct S712 T712;
typedef struct S221 T221;
typedef struct S363 T363;
typedef struct S536 T536;
typedef struct S426 T426;
typedef struct S649 T649;
typedef struct S218 T218;
typedef struct S127 T127;
typedef struct S440 T440;
typedef struct S685 T685;
typedef struct S581 T581;
typedef struct S300 T300;
typedef struct S553 T553;
typedef struct S222 T222;
typedef struct S547 T547;
typedef struct S761 T761;
typedef struct S674 T674;
typedef struct S104 T104;
typedef struct S210 T210;
typedef struct S133 T133;
typedef struct S753 T753;
typedef struct S100 T100;
typedef struct S733 T733;
typedef struct S317 T317;
typedef struct S103 T103;
typedef struct S244 T244;
typedef struct S755 T755;
typedef struct S215 T215;
typedef struct S156 T156;
typedef struct S579 T579;
typedef struct S693 T693;
typedef struct S717 T717;
typedef struct S35 T35;
typedef struct S435 T435;
typedef struct S392 T392;
typedef struct S513 T513;
typedef struct S319 T319;
typedef struct S520 T520;
typedef struct S436 T436;
typedef struct S151 T151;
typedef struct S72 T72;
typedef struct S132 T132;
typedef struct S64 T64;
typedef struct S483 T483;
typedef struct S618 T618;
typedef struct S7 T7;
typedef struct S253 T253;
typedef struct S599 T599;
typedef struct S187 T187;
typedef struct S201 T201;
typedef struct S382 T382;
typedef struct S451 T451;
typedef struct S523 T523;
typedef struct S129 T129;
typedef struct S313 T313;
typedef struct S336 T336;
typedef struct S602 T602;
typedef struct S710 T710;
typedef struct S711 T711;
typedef struct S580 T580;
typedef struct S344 T344;
typedef struct S266 T266;
typedef struct S720 T720;
typedef struct S280 T280;
typedef struct S455 T455;
typedef struct S505 T505;
typedef struct S697 T697;
typedef struct S462 T462;
typedef struct S291 T291;
typedef struct S16 T16;
typedef struct S550 T550;
typedef struct S532 T532;
typedef struct S248 T248;
typedef struct S573 T573;
typedef struct S128 T128;
typedef struct S731 T731;
typedef struct S97 T97;
typedef struct S718 T718;
typedef struct S549 T549;
typedef struct S208 T208;
typedef struct S528 T528;
typedef struct S607 T607;
typedef struct S517 T517;
typedef struct S211 T211;
typedef struct S381 T381;
typedef struct S757 T757;
typedef struct S202 T202;
typedef struct S252 T252;
typedef struct S679 T679;
typedef struct S604 T604;
typedef struct S117 T117;
typedef struct S465 T465;
typedef struct S552 T552;
typedef struct S114 T114;
typedef struct S76 T76;
typedef struct S608 T608;
typedef struct S756 T756;
typedef struct S577 T577;
typedef struct S759 T759;
typedef struct S751 T751;
typedef struct S141 T141;
typedef struct S726 T726;
typedef struct S135 T135;
typedef struct S709 T709;
typedef struct S157 T157;
typedef struct S729 T729;
typedef struct S555 T555;
typedef struct S648 T648;
typedef struct S123 T123;
typedef struct S99 T99;
typedef struct S500 T500;
typedef struct S696 T696;
typedef struct S670 T670;
typedef struct S194 T194;
typedef struct S551 T551;
typedef struct S204 T204;
typedef struct S75 T75;
typedef struct S632 T632;
typedef struct S722 T722;
typedef struct S83 T83;
typedef struct S126 T126;
typedef struct S274 T274;
typedef struct S404 T404;
typedef struct S301 T301;
typedef struct S770 T770;
typedef struct S525 T525;
typedef struct S277 T277;
typedef struct S433 T433;
typedef struct S264 T264;
typedef struct S570 T570;
typedef struct S567 T567;
typedef struct S65 T65;
typedef struct S412 T412;
typedef struct S666 T666;
typedef struct S31 T31;
typedef struct S423 T423;
typedef struct S60 T60;
typedef struct S365 T365;

/*C Header Pass 2 :*/
typedef T0**T468;
typedef T0**T339;
typedef T6*T616;
typedef T0**T276;
typedef T0**T224;
typedef T0**T439;
typedef T0**T229;
typedef T0**T527;
typedef T0**T74;
typedef T3*T9;
typedef T0**T700;
typedef T0**T297;
typedef T0**T411;
typedef T0**T384;
typedef T0**T272;
typedef T2*T119;
typedef T0**T504;

/*C Header Pass 3 :*/
struct S552{T2 _i_code;};
int se_cmpT552(T552 o1,T552 o2);

/*C Header Pass 4 :*/
struct S295{Tid id;T297 _storage;T2 _capacity;T2 _upper;};
extern T295 M295;
struct S745{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T745 M745;
struct S764{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T764 M764;
struct S510{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T510 M510;
struct S480{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T480 M480;
struct S595{Tid id;T0* _item;T0* _right;};
extern T595 M595;
struct S469{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T469 M469;
struct S603{Tid id;T0* _parameters;};
extern T603 M603;
struct S665{Tid id;T0* _parameters;};
extern T665 M665;
struct S101{Tid id;T0* _item;T0* _right;};
extern T101 M101;
struct S153{Tid id;T0* _item;T0* _right;};
extern T153 M153;
struct S667{Tid id;T0* _event_parser_factory;};
extern T667 M667;
struct S241{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T241 M241;
struct S172{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T172 M172;
struct S575{Tid id;T0* _variables;T0* _error_handler;};
extern T575 M575;
struct S584{Tid id;T0* _first;T0* _second;};
extern T584 M584;
struct S606{Tid id;T0* _parameters;};
extern T606 M606;
struct S631{Tid id;T0* _class_name;T0* _features;};
extern T631 M631;
struct S408{Tid id;T411 _storage;T2 _capacity;T2 _upper;};
extern T408 M408;
struct S614{Tid id;T616 _storage;T2 _capacity;T2 _upper;};
extern T614 M614;
struct S572{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_cluster;};
extern T572 M572;
struct S189{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;T0* _last_universe;};
extern T189 M189;
struct S706{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T706 M706;
struct S378{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T378 M378;
struct S209{Tid id;T0* _clusters;};
extern T209 M209;
struct S227{Tid id;T229 _storage;T2 _capacity;T2 _upper;};
extern T227 M227;
struct S214{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T214 M214;
struct S134{Tid id;};
extern T134 M134;
struct S249{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T249 M249;
struct S499{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T499 M499;
struct S213{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T213 M213;
struct S225{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T225 M225;
struct S219{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T219 M219;
struct S515{Tid id;T0* _parents;};
extern T515 M515;
struct S643{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T643 M643;
struct S650{Tid id;T0* _item;T0* _right;};
extern T650 M650;
struct S40{Tid id;};
extern T40 M40;
struct S646{Tid id;T0* _item;T0* _right;};
extern T646 M646;
struct S501{Tid id;};
extern T501 M501;
struct S337{Tid id;};
extern T337 M337;
struct S41{Tid id;};
extern T41 M41;
struct S576{Tid id;T0* _table;};
extern T576 M576;
struct S270{Tid id;T272 _storage;T2 _capacity;T2 _upper;};
extern T270 M270;
struct S391{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T391 M391;
struct S583{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T583 M583;
struct S121{Tid id;};
extern T121 M121;
struct S298{Tid id;};
extern T298 M298;
struct S190{Tid id;T0* _ast_factory;T0* _error_handler;T0* _xml_parser;T0* _xml_validator;T0* _xml_preprocessor;};
extern T190 M190;
struct S88{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T88 M88;
struct S732{Tid id;T0* _first;T0* _second;};
extern T732 M732;
struct S130{Tid id;T0* _output_filename;T0* _error_handler;};
extern T130 M130;
struct S164{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T164 M164;
struct S727{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T727 M727;
struct S610{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T610 M610;
struct S36{Tid id;T2 _item;};
extern T36 M36;
struct S506{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T506 M506;
struct S509{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T509 M509;
struct S409{Tid id;};
extern T409 M409;
struct S456{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T456 M456;
struct S333{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T333 M333;
struct S140{Tid id;T0* _first;T0* _second;};
extern T140 M140;
struct S748{Tid id;T0* _item;T0* _right;};
extern T748 M748;
struct S464{Tid id;T468 _storage;T2 _capacity;T2 _upper;};
extern T464 M464;
struct S629{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T629 M629;
struct S609{Tid id;T3 _value;};
extern T609 M609;
struct S662{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T662 M662;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S762{Tid id;T0* _parent;T0* _data;};
extern T762 M762;
struct S605{Tid id;T0* _parameters;};
extern T605 M605;
struct S593{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T593 M593;
struct S30{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T30 M30;
struct S712{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T712 M712;
struct S221{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T221 M221;
struct S363{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T363 M363;
struct S536{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T536 M536;
struct S426{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T426 M426;
struct S649{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T649 M649;
struct S218{Tid id;};
extern T218 M218;
struct S127{Tid id;T0* _output_filename;T0* _error_handler;};
extern T127 M127;
struct S440{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T440 M440;
struct S685{Tid id;};
extern T685 M685;
struct S581{Tid id;};
extern T581 M581;
struct S300{Tid id;};
extern T300 M300;
struct S553{Tid id;T2 _i_code;};
extern T553 M553;
struct S222{Tid id;T224 _storage;T2 _capacity;T2 _upper;};
extern T222 M222;
struct S547{Tid id;};
extern T547 M547;
struct S761{Tid id;T0* _implementation;};
extern T761 M761;
struct S674{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T674 M674;
struct S104{Tid id;T0* _defined_values;};
extern T104 M104;
struct S133{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;};
extern T133 M133;
struct S753{Tid id;T0* _parent;T0* _content;};
extern T753 M753;
struct S100{Tid id;T0* _parameters;};
extern T100 M100;
struct S733{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T733 M733;
struct S317{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T317 M317;
struct S103{Tid id;T0* _output_filename;T0* _error_handler;};
extern T103 M103;
struct S244{Tid id;};
extern T244 M244;
struct S755{Tid id;T0* _implementation;};
extern T755 M755;
struct S156{Tid id;T0* _name;};
extern T156 M156;
struct S579{Tid id;T0* _item;};
extern T579 M579;
struct S693{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T693 M693;
struct S717{Tid id;T0* _parameters;};
extern T717 M717;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S435{Tid id;T439 _storage;T2 _capacity;T2 _upper;};
extern T435 M435;
struct S392{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T392 M392;
struct S319{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T319 M319;
struct S520{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T520 M520;
struct S436{Tid id;};
extern T436 M436;
struct S151{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T151 M151;
struct S72{Tid id;T74 _storage;T2 _capacity;T2 _upper;};
extern T72 M72;
struct S132{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T132 M132;
struct S210{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T210 M210;
struct S64{Tid id;T0* _item;T0* _right;};
extern T64 M64;
struct S483{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T483 M483;
struct S618{Tid id;};
extern T618 M618;
struct S253{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T253 M253;
struct S599{Tid id;T0* _parameters;};
extern T599 M599;
struct S187{Tid id;T0* _classes;T0* _error_handler;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;};
extern T187 M187;
struct S201{Tid id;T0* _error_handler;T6 _has_error;};
extern T201 M201;
struct S382{Tid id;};
extern T382 M382;
struct S451{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T451 M451;
struct S523{Tid id;};
extern T523 M523;
struct S129{Tid id;T0* _output_filename;T0* _error_handler;};
extern T129 M129;
struct S313{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T313 M313;
struct S336{Tid id;T339 _storage;T2 _capacity;T2 _upper;};
extern T336 M336;
struct S602{Tid id;T0* _parameters;};
extern T602 M602;
struct S710{Tid id;};
extern T710 M710;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S711{Tid id;T0* _parameters;};
extern T711 M711;
struct S580{Tid id;};
extern T580 M580;
struct S344{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T344 M344;
struct S266{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T266 M266;
struct S720{Tid id;T0* _item;T0* _right;};
extern T720 M720;
struct S280{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T280 M280;
struct S455{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T455 M455;
struct S505{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T505 M505;
struct S697{Tid id;};
extern T697 M697;
struct S462{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T462 M462;
struct S291{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T291 M291;
struct S16{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T16 M16;
struct S550{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T550 M550;
struct S513{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T513 M513;
struct S532{Tid id;};
extern T532 M532;
struct S248{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T248 M248;
struct S573{Tid id;T0* _namespaces;T0* _implementation;};
extern T573 M573;
struct S128{Tid id;T0* _output_filename;T0* _error_handler;};
extern T128 M128;
struct S731{Tid id;T0* _first;T0* _second;};
extern T731 M731;
struct S97{Tid id;};
extern T97 M97;
struct S718{Tid id;T0* _item;T0* _right;};
extern T718 M718;
struct S549{Tid id;T2 _type;};
extern T549 M549;
struct S528{Tid id;};
extern T528 M528;
struct S607{Tid id;T0* _parameters;};
extern T607 M607;
struct S517{Tid id;T0* _class_name;T0* _base_class;};
extern T517 M517;
struct S211{Tid id;T0* _clusters;};
extern T211 M211;
struct S381{Tid id;T384 _storage;T2 _capacity;T2 _upper;};
extern T381 M381;
struct S757{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T757 M757;
struct S202{Tid id;T0* _cluster_parser;T0* _error_handler;};
extern T202 M202;
struct S252{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T252 M252;
struct S679{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T679 M679;
struct S604{Tid id;T0* _parameters;};
extern T604 M604;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S208{Tid id;T0* _i_representation;};
extern T208 M208;
struct S465{Tid id;};
extern T465 M465;
extern T552 M552;
struct S114{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T114 M114;
struct S76{Tid id;T0* _xace_filename;T0* _variables;T0* _error_handler;T0* _generators;};
extern T76 M76;
struct S608{Tid id;};
extern T608 M608;
struct S756{Tid id;T0* _implementation;};
extern T756 M756;
struct S577{Tid id;T2 _last_code;T2 _next_pos;};
extern T577 M577;
struct S759{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T759 M759;
struct S751{Tid id;T0* _uri;};
extern T751 M751;
struct S141{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T141 M141;
struct S726{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T726 M726;
struct S135{Tid id;T0* _name;};
extern T135 M135;
struct S215{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T6 _is_mounted;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T215 M215;
struct S709{Tid id;};
extern T709 M709;
struct S157{Tid id;T0* _name;};
extern T157 M157;
struct S729{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T729 M729;
struct S555{Tid id;T0* _implementation;};
extern T555 M555;
struct S648{Tid id;T0* _feature_name;T0* _external_name;};
extern T648 M648;
struct S123{Tid id;};
extern T123 M123;
struct S99{Tid id;T74 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T99 M99;
struct S500{Tid id;T504 _storage;T2 _capacity;T2 _upper;};
extern T500 M500;
struct S696{Tid id;T700 _storage;T2 _capacity;T2 _upper;};
extern T696 M696;
struct S670{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T670 M670;
struct S194{Tid id;T0* _implementation;};
extern T194 M194;
struct S551{Tid id;T2 _count;T0* _storage;};
extern T551 M551;
struct S204{Tid id;T0* _namespaces;T0* _implementation;};
extern T204 M204;
struct S75{Tid id;T3 _item;};
extern T75 M75;
struct S632{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T632 M632;
struct S722{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_column;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T2 _last_token;T0* _input_buffer;T2 _line;T2 _yy_end;T2 _yy_start;T2 _yy_position;T2 _yy_more_len;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T722 M722;
struct S83{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T83 M83;
struct S126{Tid id;};
extern T126 M126;
struct S274{Tid id;T276 _storage;T2 _capacity;T2 _upper;};
extern T274 M274;
struct S404{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T404 M404;
struct S301{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T301 M301;
struct S770{Tid id;T2 _i_code;};
extern T770 M770;
struct S525{Tid id;T527 _storage;T2 _capacity;T2 _upper;};
extern T525 M525;
struct S277{Tid id;};
extern T277 M277;
struct S433{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T433 M433;
struct S264{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T264 M264;
struct S570{Tid id;};
extern T570 M570;
struct S567{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T567 M567;
struct S65{Tid id;T0* _program_name;};
extern T65 M65;
struct S412{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T412 M412;
struct S666{Tid id;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T666 M666;
struct S31{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T31 M31;
struct S423{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T423 M423;
struct S60{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T60 M60;
struct S365{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T365 M365;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r468clear_all(T468 C,T2 a1);
T468 r468realloc(T468 C,T2 a1,T2 a2);
void r468set_all_with(T468 C,T0* a1,T2 a2);
T6 r468fast_memcmp(T468 C,T468 a1,T2 a2);
void r468clear(T468 C,T2 a1,T2 a2);
void r468copy_from(T468 C,T468 a1,T2 a2);
void r339clear_all(T339 C,T2 a1);
T339 r339realloc(T339 C,T2 a1,T2 a2);
void r339set_all_with(T339 C,T0* a1,T2 a2);
T6 r339fast_memcmp(T339 C,T339 a1,T2 a2);
void r339clear(T339 C,T2 a1,T2 a2);
void r339copy_from(T339 C,T339 a1,T2 a2);
void r616clear_all(T616 C,T2 a1);
T616 r616realloc(T616 C,T2 a1,T2 a2);
void r616set_all_with(T616 C,T6 a1,T2 a2);
T6 r616fast_memcmp(T616 C,T616 a1,T2 a2);
void r616clear(T616 C,T2 a1,T2 a2);
void r616copy_from(T616 C,T616 a1,T2 a2);
void r276clear_all(T276 C,T2 a1);
T276 r276realloc(T276 C,T2 a1,T2 a2);
void r276set_all_with(T276 C,T0* a1,T2 a2);
T6 r276fast_memcmp(T276 C,T276 a1,T2 a2);
void r276clear(T276 C,T2 a1,T2 a2);
void r276copy_from(T276 C,T276 a1,T2 a2);
void r224clear_all(T224 C,T2 a1);
T224 r224realloc(T224 C,T2 a1,T2 a2);
void r224set_all_with(T224 C,T0* a1,T2 a2);
T6 r224fast_memcmp(T224 C,T224 a1,T2 a2);
void r224clear(T224 C,T2 a1,T2 a2);
void r224copy_from(T224 C,T224 a1,T2 a2);
void r439clear_all(T439 C,T2 a1);
T439 r439realloc(T439 C,T2 a1,T2 a2);
void r439set_all_with(T439 C,T0* a1,T2 a2);
T6 r439fast_memcmp(T439 C,T439 a1,T2 a2);
void r439clear(T439 C,T2 a1,T2 a2);
void r439copy_from(T439 C,T439 a1,T2 a2);
void r229clear_all(T229 C,T2 a1);
T229 r229realloc(T229 C,T2 a1,T2 a2);
void r229set_all_with(T229 C,T0* a1,T2 a2);
T6 r229fast_memcmp(T229 C,T229 a1,T2 a2);
void r229clear(T229 C,T2 a1,T2 a2);
void r229copy_from(T229 C,T229 a1,T2 a2);
void r527clear_all(T527 C,T2 a1);
T527 r527realloc(T527 C,T2 a1,T2 a2);
void r527set_all_with(T527 C,T0* a1,T2 a2);
T6 r527fast_memcmp(T527 C,T527 a1,T2 a2);
void r527clear(T527 C,T2 a1,T2 a2);
void r527copy_from(T527 C,T527 a1,T2 a2);
void r74clear_all(T74 C,T2 a1);
T74 r74realloc(T74 C,T2 a1,T2 a2);
T6 r74fast_memcmp(T74 C,T74 a1,T2 a2);
void r74set_all_with(T74 C,T0* a1,T2 a2);
void r74clear(T74 C,T2 a1,T2 a2);
void r74copy_from(T74 C,T74 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r700clear_all(T700 C,T2 a1);
T700 r700realloc(T700 C,T2 a1,T2 a2);
void r700set_all_with(T700 C,T0* a1,T2 a2);
T6 r700fast_memcmp(T700 C,T700 a1,T2 a2);
void r700clear(T700 C,T2 a1,T2 a2);
void r700copy_from(T700 C,T700 a1,T2 a2);
void r297clear_all(T297 C,T2 a1);
T297 r297realloc(T297 C,T2 a1,T2 a2);
void r297set_all_with(T297 C,T0* a1,T2 a2);
T6 r297fast_memcmp(T297 C,T297 a1,T2 a2);
void r297clear(T297 C,T2 a1,T2 a2);
void r297copy_from(T297 C,T297 a1,T2 a2);
void r411clear_all(T411 C,T2 a1);
T411 r411realloc(T411 C,T2 a1,T2 a2);
void r411set_all_with(T411 C,T0* a1,T2 a2);
T6 r411fast_memcmp(T411 C,T411 a1,T2 a2);
void r411clear(T411 C,T2 a1,T2 a2);
void r411copy_from(T411 C,T411 a1,T2 a2);
void r384clear_all(T384 C,T2 a1);
T384 r384realloc(T384 C,T2 a1,T2 a2);
void r384set_all_with(T384 C,T0* a1,T2 a2);
T6 r384fast_memcmp(T384 C,T384 a1,T2 a2);
void r384clear(T384 C,T2 a1,T2 a2);
void r384copy_from(T384 C,T384 a1,T2 a2);
void r272clear_all(T272 C,T2 a1);
T272 r272realloc(T272 C,T2 a1,T2 a2);
void r272set_all_with(T272 C,T0* a1,T2 a2);
T6 r272fast_memcmp(T272 C,T272 a1,T2 a2);
void r272clear(T272 C,T2 a1,T2 a2);
void r272copy_from(T272 C,T272 a1,T2 a2);
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
void r119move(T119 C,T2 a1,T2 a2,T2 a3);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119set_all_with(T119 C,T2 a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r504clear_all(T504 C,T2 a1);
T504 r504realloc(T504 C,T2 a1,T2 a2);
void r504set_all_with(T504 C,T0* a1,T2 a2);
T6 r504fast_memcmp(T504 C,T504 a1,T2 a2);
void r504clear(T504 C,T2 a1,T2 a2);
void r504copy_from(T504 C,T504 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7remove_tail(T7* C,T2 a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r295copy(T295* C,T0* a1);
T6 r295is_equal(T295* C,T0* a1);
T6 r295se_assigned_from(T0* a1);
void r295make(T295* C,T2 a1);
T6 r295conforms_to(T295* C,T0* a1);
void r295resize(T295* C,T2 a1);
T0* r295twin(T295* C);
void r408copy(T408* C,T0* a1);
T6 r408is_equal(T408* C,T0* a1);
T6 r408se_assigned_from(T0* a1);
void r408make(T408* C,T2 a1);
T6 r408conforms_to(T408* C,T0* a1);
void r408resize(T408* C,T2 a1);
T0* r408twin(T408* C);
void r614copy(T614* C,T0* a1);
T6 r614is_equal(T614* C,T0* a1);
T6 r614se_assigned_from(T0* a1);
void r614make(T614* C,T2 a1);
T6 r614conforms_to(T614* C,T0* a1);
void r614resize(T614* C,T2 a1);
T0* r614twin(T614* C);
void r227copy(T227* C,T0* a1);
T6 r227is_equal(T227* C,T0* a1);
T6 r227se_assigned_from(T0* a1);
void r227make(T227* C,T2 a1);
T6 r227conforms_to(T227* C,T0* a1);
void r227resize(T227* C,T2 a1);
T0* r227twin(T227* C);
void r499copy(T499* C,T0* a1);
T2 r499count(T499* C);
T6 r499is_equal(T499* C,T0* a1);
T2 r499item(T499* C,T2 a1);
T6 r499se_assigned_from(T0* a1);
void r499make(T499* C,T2 a1,T2 a2);
T6 r499conforms_to(T499* C,T0* a1);
void r499resize(T499* C,T2 a1,T2 a2);
T0* r499twin(T499* C);
void r270copy(T270* C,T0* a1);
T6 r270is_equal(T270* C,T0* a1);
T6 r270se_assigned_from(T0* a1);
void r270make(T270* C,T2 a1);
T6 r270conforms_to(T270* C,T0* a1);
void r270resize(T270* C,T2 a1);
T0* r270twin(T270* C);
void r464copy(T464* C,T0* a1);
T6 r464is_equal(T464* C,T0* a1);
T6 r464se_assigned_from(T0* a1);
void r464make(T464* C,T2 a1);
T6 r464conforms_to(T464* C,T0* a1);
void r464resize(T464* C,T2 a1);
T0* r464twin(T464* C);
void r222copy(T222* C,T0* a1);
T6 r222is_equal(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
void r222make(T222* C,T2 a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222resize(T222* C,T2 a1);
T0* r222twin(T222* C);
void r435copy(T435* C,T0* a1);
T6 r435is_equal(T435* C,T0* a1);
T6 r435se_assigned_from(T0* a1);
void r435make(T435* C,T2 a1);
T6 r435conforms_to(T435* C,T0* a1);
void r435resize(T435* C,T2 a1);
T0* r435twin(T435* C);
void r72copy(T72* C,T0* a1);
T6 r72is_equal(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r336copy(T336* C,T0* a1);
T6 r336is_equal(T336* C,T0* a1);
T6 r336se_assigned_from(T0* a1);
void r336make(T336* C,T2 a1);
T6 r336conforms_to(T336* C,T0* a1);
void r336resize(T336* C,T2 a1);
T0* r336twin(T336* C);
void r381copy(T381* C,T0* a1);
T6 r381is_equal(T381* C,T0* a1);
T6 r381se_assigned_from(T0* a1);
void r381make(T381* C,T2 a1);
T6 r381conforms_to(T381* C,T0* a1);
void r381resize(T381* C,T2 a1);
T0* r381twin(T381* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T2 a1);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r117with_capacity(T117* C,T2 a1);
void r117from_collection(T117* C,T0* a1);
void r99copy(T99* C,T0* a1);
T2 r99count(T99* C);
T6 r99is_equal(T99* C,T0* a1);
T0* r99item(T99* C,T2 a1);
T6 r99valid_index(T99* C,T2 a1);
T6 r99se_assigned_from(T0* a1);
void r99make(T99* C,T2 a1,T2 a2);
T6 r99conforms_to(T99* C,T0* a1);
T0* r99twin(T99* C);
void r500copy(T500* C,T0* a1);
T2 r500count(T500* C);
T6 r500is_equal(T500* C,T0* a1);
T0* r500item(T500* C,T2 a1);
T6 r500se_assigned_from(T0* a1);
void r500make(T500* C,T2 a1);
T6 r500conforms_to(T500* C,T0* a1);
void r500resize(T500* C,T2 a1);
T0* r500twin(T500* C);
void r696copy(T696* C,T0* a1);
T6 r696is_equal(T696* C,T0* a1);
T6 r696se_assigned_from(T0* a1);
void r696make(T696* C,T2 a1);
T6 r696conforms_to(T696* C,T0* a1);
void r696resize(T696* C,T2 a1);
T0* r696twin(T696* C);
void r274copy(T274* C,T0* a1);
T2 r274count(T274* C);
T6 r274is_equal(T274* C,T0* a1);
T0* r274item(T274* C,T2 a1);
T6 r274se_assigned_from(T0* a1);
void r274make(T274* C,T2 a1);
T6 r274conforms_to(T274* C,T0* a1);
void r274resize(T274* C,T2 a1);
T0* r274twin(T274* C);
void r525copy(T525* C,T0* a1);
T6 r525is_equal(T525* C,T0* a1);
T6 r525se_assigned_from(T0* a1);
void r525make(T525* C,T2 a1);
T6 r525conforms_to(T525* C,T0* a1);
void r525resize(T525* C,T2 a1);
T0* r525twin(T525* C);
void r745copy(T745* C,T0* a1);
void r745set(T745* C,T0* a1,T6 a2,T6 a3);
T6 r745is_equal(T745* C,T0* a1);
T6 r745same_position(T745* C,T0* a1);
T6 r745se_assigned_from(T0* a1);
T6 r745same_type(T745* C,T0* a1);
void r745make(T745* C,T0* a1);
T6 r745conforms_to(T745* C,T0* a1);
void r745set_after(T745* C);
T0* r745twin(T745* C);
void r480copy(T480* C,T0* a1);
T6 r480is_equal(T480* C,T0* a1);
T6 r480same_position(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
T6 r480same_type(T480* C,T0* a1);
T6 r480off(T480* C);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T6 r595is_equal(T595* C,T0* a1);
T6 r595se_assigned_from(T0* a1);
T6 r595conforms_to(T595* C,T0* a1);
T0* r595twin(T595* C);
void r469copy(T469* C,T0* a1);
T6 r469is_equal(T469* C,T0* a1);
void r469remove_traversing_cursor(T469* C,T0* a1);
void r469move_all_cursors_after(T469* C);
void r469add_traversing_cursor(T469* C,T0* a1);
T6 r469se_assigned_from(T0* a1);
T0* r469clone(T0* a1);
T6 r469cursor_before(T0* a1);
T6 r469same_type(T469* C,T0* a1);
void r469make(T469* C,T2 a1);
T6 r469cursor_after(T0* a1);
T6 r469conforms_to(T469* C,T0* a1);
T6 r469cursor_same_position(T0* a1,T0* a2);
T0* r469twin(T469* C);
T0* r469new_cursor(T469* C);
T6 r469cursor_off(T0* a1);
T6 r101is_equal(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T0* r101twin(T101* C);
T6 r153is_equal(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
void r241copy(T241* C,T0* a1);
T6 r241is_equal(T241* C,T0* a1);
T0* r241item(T241* C);
T6 r241same_position(T241* C,T0* a1);
T6 r241se_assigned_from(T0* a1);
T6 r241after(T241* C);
T6 r241same_type(T241* C,T0* a1);
T2 r241index(T241* C);
T6 r241off(T241* C);
T6 r241conforms_to(T241* C,T0* a1);
T0* r241twin(T241* C);
T6 r584is_equal(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
void r584make(T584* C,T0* a1,T0* a2);
T6 r584conforms_to(T584* C,T0* a1);
T0* r584twin(T584* C);
void r706copy(T706* C,T0* a1);
void r706set(T706* C,T0* a1,T6 a2,T6 a3);
T6 r706is_equal(T706* C,T0* a1);
T6 r706same_position(T706* C,T0* a1);
T6 r706se_assigned_from(T0* a1);
T6 r706is_first(T706* C);
T6 r706is_last(T706* C);
T6 r706same_type(T706* C,T0* a1);
void r706make(T706* C,T0* a1);
void r706forth(T706* C);
T6 r706conforms_to(T706* C,T0* a1);
void r706start(T706* C);
void r706go_after(T706* C);
void r706set_after(T706* C);
T0* r706twin(T706* C);
void r378copy(T378* C,T0* a1);
T6 r378is_equal(T378* C,T0* a1);
T6 r378same_position(T378* C,T0* a1);
T6 r378se_assigned_from(T0* a1);
T6 r378same_type(T378* C,T0* a1);
void r378make(T378* C,T0* a1);
T6 r378off(T378* C);
T6 r378conforms_to(T378* C,T0* a1);
T0* r378twin(T378* C);
T2 r225new_capacity(T2 a1);
void r225copy(T225* C,T0* a1);
void r225clear_items(T225* C,T2 a1,T2 a2);
T6 r225extendible(T225* C,T2 a1);
T0* r225cursor_item(T225* C,T0* a1);
T6 r225is_equal(T225* C,T0* a1);
void r225remove_traversing_cursor(T225* C,T0* a1);
void r225move_all_cursors_after(T225* C);
void r225add_traversing_cursor(T225* C,T0* a1);
T6 r225se_assigned_from(T0* a1);
T0* r225clone(T0* a1);
void r225move_left(T225* C,T2 a1,T2 a2);
T6 r225cursor_before(T0* a1);
T6 r225same_type(T225* C,T0* a1);
void r225make(T225* C,T2 a1);
void r225remove(T225* C,T2 a1);
void r225move_cursors_left(T225* C,T2 a1);
void r225remove_last(T225* C);
T6 r225cursor_after(T0* a1);
T6 r225conforms_to(T225* C,T0* a1);
T2 r225cursor_index(T225* C,T0* a1);
void r225cursor_forth(T225* C,T0* a1);
void r225resize(T225* C,T2 a1);
T6 r225cursor_same_position(T0* a1,T0* a2);
void r225move_last_cursors_after(T225* C);
void r225delete(T225* C,T0* a1);
void r225cursor_start(T225* C,T0* a1);
T0* r225twin(T225* C);
void r225force_last(T225* C,T0* a1);
T0* r225new_cursor(T225* C);
void r225put_last(T225* C,T0* a1);
T6 r225cursor_off(T0* a1);
void r643copy(T643* C,T0* a1);
void r643set(T643* C,T0* a1,T6 a2,T6 a3);
T6 r643is_equal(T643* C,T0* a1);
T6 r643same_position(T643* C,T0* a1);
T6 r643se_assigned_from(T0* a1);
T6 r643same_type(T643* C,T0* a1);
void r643make(T643* C,T0* a1);
T6 r643conforms_to(T643* C,T0* a1);
void r643set_after(T643* C);
T0* r643twin(T643* C);
T6 r650is_equal(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
T6 r646is_equal(T646* C,T0* a1);
T6 r646se_assigned_from(T0* a1);
T6 r646conforms_to(T646* C,T0* a1);
T0* r646twin(T646* C);
void r501clear_all(T0* a1);
T6 r501is_equal(T501* C,T0* a1);
T6 r501se_assigned_from(T0* a1);
T0* r501make(T2 a1);
T6 r501conforms_to(T501* C,T0* a1);
T0* r501resize(T0* a1,T2 a2);
T0* r501twin(T501* C);
T6 r337is_equal(T337* C,T0* a1);
T6 r337se_assigned_from(T0* a1);
T0* r337make(T2 a1);
T6 r337conforms_to(T337* C,T0* a1);
T0* r337resize(T0* a1,T2 a2);
T0* r337twin(T337* C);
T6 r391is_equal(T391* C,T0* a1);
T6 r391se_assigned_from(T0* a1);
void r391make(T391* C,T2 a1);
T6 r391conforms_to(T391* C,T0* a1);
T0* r391twin(T391* C);
void r583copy(T583* C,T0* a1);
void r583set(T583* C,T0* a1,T6 a2,T6 a3);
T6 r583is_equal(T583* C,T0* a1);
T6 r583same_position(T583* C,T0* a1);
T6 r583se_assigned_from(T0* a1);
T6 r583same_type(T583* C,T0* a1);
void r583make(T583* C,T0* a1);
T6 r583conforms_to(T583* C,T0* a1);
void r583set_after(T583* C);
T0* r583twin(T583* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
T0* r121to_fixed_array(T0* a1);
T0* r121make(T2 a1);
T0* r121make_from_array(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T0* r121resize(T0* a1,T2 a2);
T0* r121twin(T121* C);
void r298clear_all(T0* a1);
T6 r298is_equal(T298* C,T0* a1);
T6 r298se_assigned_from(T0* a1);
T0* r298make(T2 a1);
T6 r298conforms_to(T298* C,T0* a1);
T0* r298resize(T0* a1,T2 a2);
T0* r298twin(T298* C);
void r88copy(T88* C,T0* a1);
void r88set(T88* C,T0* a1,T6 a2,T6 a3);
T6 r88is_equal(T88* C,T0* a1);
T6 r88same_position(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T6 r88same_type(T88* C,T0* a1);
void r88make(T88* C,T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88set_after(T88* C);
T0* r88twin(T88* C);
T6 r732is_equal(T732* C,T0* a1);
T6 r732se_assigned_from(T0* a1);
void r732make(T732* C,T0* a1,T0* a2);
T6 r732conforms_to(T732* C,T0* a1);
T0* r732twin(T732* C);
void r164copy(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
T0* r164item(T164* C);
T6 r164same_position(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
T6 r164after(T164* C);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C,T0* a1);
T6 r164off(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
T0* r164twin(T164* C);
T2 r610new_capacity(T2 a1);
void r610copy(T610* C,T0* a1);
void r610force(T610* C,T6 a1,T0* a2);
void r610make_clashes(T610* C,T2 a1);
T6 r610cursor_item(T610* C,T0* a1);
void r610search_position(T610* C,T0* a1);
T6 r610is_equal(T610* C,T0* a1);
void r610remove_traversing_cursor(T610* C,T0* a1);
void r610clone_slots(T610* C);
extern T0*oBC108FIXED_INTEGER_ARRAY_;
void r610keys_resize(T610* C,T2 a1);
T6 r610item(T610* C,T0* a1);
void r610clone_clashes(T610* C);
void r610move_all_cursors_after(T610* C);
void r610make_items(T610* C,T2 a1);
void r610add_traversing_cursor(T610* C,T0* a1);
T6 r610se_assigned_from(T0* a1);
T0* r610clone(T0* a1);
T6 r610same_type(T610* C,T0* a1);
void r610make(T610* C,T2 a1);
T0* r610cursor_key(T610* C,T0* a1);
void r610clone_items(T610* C);
T6 r610cursor_after(T0* a1);
T6 r610conforms_to(T610* C,T0* a1);
T6 r610has(T610* C,T0* a1);
void r610make_keys(T610* C,T2 a1);
T2 r610hash_position(T610* C,T0* a1);
void r610cursor_forth(T610* C,T0* a1);
void r610items_resize(T610* C,T2 a1);
void r610clone_keys(T610* C);
void r610make_with_equality_testers(T610* C,T2 a1,T0* a2,T0* a3);
void r610resize(T610* C,T2 a1);
T6 r610cursor_same_position(T0* a1,T0* a2);
void r610cursor_start(T610* C,T0* a1);
void r610clashes_resize(T610* C,T2 a1);
void r610slots_resize(T610* C,T2 a1);
T0* r610twin(T610* C);
T0* r610new_cursor(T610* C);
void r610make_slots(T610* C,T2 a1);
T2 r610new_modulus(T2 a1);
T6 r610cursor_off(T0* a1);
T6 r409is_equal(T409* C,T0* a1);
T6 r409se_assigned_from(T0* a1);
T0* r409make(T2 a1);
T6 r409conforms_to(T409* C,T0* a1);
T0* r409resize(T0* a1,T2 a2);
T0* r409twin(T409* C);
void r456copy(T456* C,T0* a1);
void r456make_clashes(T456* C,T2 a1);
void r456search_position(T456* C,T0* a1);
T6 r456is_equal(T456* C,T0* a1);
void r456remove_traversing_cursor(T456* C,T0* a1);
void r456clone_slots(T456* C);
T2 r456item(T456* C,T0* a1);
void r456clone_clashes(T456* C);
void r456move_all_cursors_after(T456* C);
void r456make_items(T456* C,T2 a1);
void r456add_traversing_cursor(T456* C,T0* a1);
T6 r456se_assigned_from(T0* a1);
T0* r456clone(T0* a1);
T6 r456same_type(T456* C,T0* a1);
void r456clone_items(T456* C);
T6 r456conforms_to(T456* C,T0* a1);
T6 r456has(T456* C,T0* a1);
void r456make_keys(T456* C,T2 a1);
T2 r456hash_position(T456* C,T0* a1);
void r456clone_keys(T456* C);
void r456make_with_equality_testers(T456* C,T2 a1,T0* a2,T0* a3);
T6 r456cursor_same_position(T0* a1,T0* a2);
T0* r456twin(T456* C);
T0* r456new_cursor(T456* C);
void r456make_slots(T456* C,T2 a1);
T2 r456new_modulus(T2 a1);
T6 r456cursor_off(T0* a1);
void r333copy(T333* C,T0* a1);
T6 r333is_equal(T333* C,T0* a1);
T6 r333same_position(T333* C,T0* a1);
T6 r333se_assigned_from(T0* a1);
T6 r333same_type(T333* C,T0* a1);
void r333make(T333* C,T0* a1);
T6 r333off(T333* C);
T6 r333conforms_to(T333* C,T0* a1);
T0* r333twin(T333* C);
T6 r140is_equal(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140make(T140* C,T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140twin(T140* C);
T6 r748is_equal(T748* C,T0* a1);
T6 r748se_assigned_from(T0* a1);
T6 r748conforms_to(T748* C,T0* a1);
T0* r748twin(T748* C);
void r629copy(T629* C,T0* a1);
T0* r629key(T629* C);
T6 r629is_equal(T629* C,T0* a1);
T6 r629item(T629* C);
T6 r629same_position(T629* C,T0* a1);
T6 r629se_assigned_from(T0* a1);
T6 r629after(T629* C);
T6 r629same_type(T629* C,T0* a1);
void r629make(T629* C,T0* a1);
T6 r629off(T629* C);
T6 r629conforms_to(T629* C,T0* a1);
T0* r629twin(T629* C);
void r662copy(T662* C,T0* a1);
void r662set(T662* C,T0* a1,T6 a2,T6 a3);
T6 r662is_equal(T662* C,T0* a1);
T6 r662same_position(T662* C,T0* a1);
T6 r662se_assigned_from(T0* a1);
T6 r662is_last(T662* C);
T6 r662same_type(T662* C,T0* a1);
void r662make(T662* C,T0* a1);
T6 r662conforms_to(T662* C,T0* a1);
void r662set_after(T662* C);
T0* r662twin(T662* C);
void r593copy(T593* C,T0* a1);
T6 r593is_equal(T593* C,T0* a1);
void r593remove_traversing_cursor(T593* C,T0* a1);
void r593move_all_cursors_after(T593* C);
void r593add_traversing_cursor(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
T6 r593same_type(T593* C,T0* a1);
void r593make(T593* C);
T6 r593conforms_to(T593* C,T0* a1);
void r593cursor_forth(T593* C,T0* a1);
void r593cursor_start(T593* C,T0* a1);
T0* r593twin(T593* C);
T0* r593new_cursor(T593* C);
void r593put_last(T593* C,T0* a1);
T6 r593cursor_off(T0* a1);
void r30copy(T30* C,T0* a1);
void r30set(T30* C,T0* a1,T6 a2,T6 a3);
T6 r30is_equal(T30* C,T0* a1);
T6 r30same_position(T30* C,T0* a1);
T6 r30se_assigned_from(T0* a1);
T6 r30same_type(T30* C,T0* a1);
void r30make(T30* C,T0* a1);
T6 r30conforms_to(T30* C,T0* a1);
void r30set_after(T30* C);
T0* r30twin(T30* C);
T2 r221new_capacity(T2 a1);
void r221copy(T221* C,T0* a1);
T6 r221extendible(T221* C,T2 a1);
T6 r221is_equal(T221* C,T0* a1);
void r221remove_traversing_cursor(T221* C,T0* a1);
void r221move_all_cursors_after(T221* C);
void r221add_traversing_cursor(T221* C,T0* a1);
T6 r221se_assigned_from(T0* a1);
T0* r221clone(T0* a1);
T6 r221cursor_before(T0* a1);
T6 r221same_type(T221* C,T0* a1);
void r221make(T221* C,T2 a1);
T6 r221cursor_after(T0* a1);
T6 r221conforms_to(T221* C,T0* a1);
void r221resize(T221* C,T2 a1);
T6 r221cursor_same_position(T0* a1,T0* a2);
T0* r221twin(T221* C);
void r221force_last(T221* C,T0* a1);
T0* r221new_cursor(T221* C);
void r221put_last(T221* C,T0* a1);
T6 r221cursor_off(T0* a1);
void r363copy(T363* C,T0* a1);
T6 r363is_equal(T363* C,T0* a1);
T6 r363same_position(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
T6 r363same_type(T363* C,T0* a1);
void r363make(T363* C,T0* a1);
T6 r363off(T363* C);
T6 r363conforms_to(T363* C,T0* a1);
T0* r363twin(T363* C);
void r536copy(T536* C,T0* a1);
T6 r536is_equal(T536* C,T0* a1);
T6 r536same_position(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
T6 r536same_type(T536* C,T0* a1);
void r536make(T536* C,T0* a1);
T6 r536off(T536* C);
T6 r536conforms_to(T536* C,T0* a1);
T0* r536twin(T536* C);
void r426copy(T426* C,T0* a1);
void r426make_clashes(T426* C,T2 a1);
void r426search_position(T426* C,T0* a1);
T6 r426is_equal(T426* C,T0* a1);
void r426remove_traversing_cursor(T426* C,T0* a1);
void r426clone_slots(T426* C);
T2 r426item(T426* C,T0* a1);
void r426clone_clashes(T426* C);
void r426move_all_cursors_after(T426* C);
void r426make_items(T426* C,T2 a1);
void r426add_traversing_cursor(T426* C,T0* a1);
T6 r426se_assigned_from(T0* a1);
T0* r426clone(T0* a1);
T6 r426same_type(T426* C,T0* a1);
void r426clone_items(T426* C);
T6 r426conforms_to(T426* C,T0* a1);
T6 r426has(T426* C,T0* a1);
void r426make_keys(T426* C,T2 a1);
T2 r426hash_position(T426* C,T0* a1);
void r426clone_keys(T426* C);
void r426make_with_equality_testers(T426* C,T2 a1,T0* a2,T0* a3);
T6 r426cursor_same_position(T0* a1,T0* a2);
T0* r426twin(T426* C);
T0* r426new_cursor(T426* C);
void r426make_slots(T426* C,T2 a1);
T2 r426new_modulus(T2 a1);
T6 r426cursor_off(T0* a1);
void r649copy(T649* C,T0* a1);
T6 r649cursor_is_last(T649* C,T0* a1);
T6 r649is_equal(T649* C,T0* a1);
void r649remove_traversing_cursor(T649* C,T0* a1);
void r649move_all_cursors_after(T649* C);
void r649add_traversing_cursor(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
T6 r649same_type(T649* C,T0* a1);
void r649make(T649* C);
T6 r649conforms_to(T649* C,T0* a1);
void r649cursor_forth(T649* C,T0* a1);
void r649cursor_start(T649* C,T0* a1);
T0* r649twin(T649* C);
void r649force_last(T649* C,T0* a1);
T0* r649new_cursor(T649* C);
T6 r649cursor_off(T0* a1);
void r440copy(T440* C,T0* a1);
T6 r440is_equal(T440* C,T0* a1);
void r440remove_traversing_cursor(T440* C,T0* a1);
void r440move_all_cursors_after(T440* C);
void r440add_traversing_cursor(T440* C,T0* a1);
T6 r440se_assigned_from(T0* a1);
T0* r440clone(T0* a1);
T6 r440cursor_before(T0* a1);
T6 r440same_type(T440* C,T0* a1);
void r440make(T440* C,T2 a1);
T6 r440cursor_after(T0* a1);
T6 r440conforms_to(T440* C,T0* a1);
T6 r440cursor_same_position(T0* a1,T0* a2);
T0* r440twin(T440* C);
T0* r440new_cursor(T440* C);
T6 r440cursor_off(T0* a1);
T6 r685is_equal(T685* C,T0* a1);
T6 r685se_assigned_from(T0* a1);
T6 r685conforms_to(T685* C,T0* a1);
T6 r685test(T0* a1,T0* a2);
T0* r685twin(T685* C);
T6 r300is_equal(T300* C,T0* a1);
T6 r300se_assigned_from(T0* a1);
T0* r300make(T2 a1);
T6 r300conforms_to(T300* C,T0* a1);
T0* r300resize(T0* a1,T2 a2);
T0* r300twin(T300* C);
void r733copy(T733* C,T0* a1);
T0* r733cursor_item(T0* a1);
T6 r733is_equal(T733* C,T0* a1);
void r733remove_traversing_cursor(T733* C,T0* a1);
void r733move_all_cursors_after(T733* C);
void r733add_traversing_cursor(T733* C,T0* a1);
T6 r733se_assigned_from(T0* a1);
T6 r733cursor_before(T0* a1);
T6 r733same_type(T733* C,T0* a1);
void r733make(T733* C);
T6 r733cursor_after(T0* a1);
T6 r733conforms_to(T733* C,T0* a1);
void r733cursor_forth(T733* C,T0* a1);
void r733cursor_start(T733* C,T0* a1);
T0* r733twin(T733* C);
T0* r733new_cursor(T733* C);
void r733put_last(T733* C,T0* a1);
T6 r733cursor_off(T0* a1);
void r317copy(T317* C,T0* a1);
T6 r317is_equal(T317* C,T0* a1);
T6 r317same_position(T317* C,T0* a1);
T6 r317se_assigned_from(T0* a1);
T6 r317same_type(T317* C,T0* a1);
void r317make(T317* C,T0* a1);
T6 r317off(T317* C);
T6 r317conforms_to(T317* C,T0* a1);
T0* r317twin(T317* C);
T6 r244is_equal(T244* C,T0* a1);
T6 r244se_assigned_from(T0* a1);
T0* r244make(T2 a1);
T6 r244conforms_to(T244* C,T0* a1);
T0* r244resize(T0* a1,T2 a2);
T0* r244twin(T244* C);
T6 r579is_equal(T579* C,T0* a1);
T6 r579se_assigned_from(T0* a1);
T6 r579conforms_to(T579* C,T0* a1);
T0* r579twin(T579* C);
void r693copy(T693* C,T0* a1);
T6 r693is_equal(T693* C,T0* a1);
T6 r693same_position(T693* C,T0* a1);
T6 r693se_assigned_from(T0* a1);
T6 r693same_type(T693* C,T0* a1);
void r693make(T693* C,T0* a1);
T6 r693off(T693* C);
T6 r693conforms_to(T693* C,T0* a1);
T0* r693twin(T693* C);
void r392copy(T392* C,T0* a1);
T6 r392is_equal(T392* C,T0* a1);
void r392remove_traversing_cursor(T392* C,T0* a1);
void r392move_all_cursors_after(T392* C);
void r392add_traversing_cursor(T392* C,T0* a1);
T6 r392se_assigned_from(T0* a1);
T0* r392clone(T0* a1);
T6 r392cursor_before(T0* a1);
T6 r392same_type(T392* C,T0* a1);
void r392make(T392* C,T2 a1);
T6 r392cursor_after(T0* a1);
T6 r392conforms_to(T392* C,T0* a1);
T6 r392cursor_same_position(T0* a1,T0* a2);
T0* r392twin(T392* C);
T0* r392new_cursor(T392* C);
T6 r392cursor_off(T0* a1);
void r319copy(T319* C,T0* a1);
void r319make_clashes(T319* C,T2 a1);
void r319search_position(T319* C,T2 a1);
T6 r319is_equal(T319* C,T0* a1);
void r319remove_traversing_cursor(T319* C,T0* a1);
void r319clone_slots(T319* C);
T0* r319item(T319* C,T2 a1);
void r319clone_clashes(T319* C);
void r319move_all_cursors_after(T319* C);
void r319make_items(T319* C,T2 a1);
void r319add_traversing_cursor(T319* C,T0* a1);
T6 r319se_assigned_from(T0* a1);
T0* r319clone(T0* a1);
T6 r319same_type(T319* C,T0* a1);
void r319clone_items(T319* C);
T6 r319conforms_to(T319* C,T0* a1);
T6 r319has(T319* C,T2 a1);
void r319make_keys(T319* C,T2 a1);
T2 r319hash_position(T319* C,T2 a1);
void r319clone_keys(T319* C);
void r319make_with_equality_testers(T319* C,T2 a1,T0* a2,T0* a3);
T6 r319cursor_same_position(T0* a1,T0* a2);
T0* r319twin(T319* C);
T0* r319new_cursor(T319* C);
void r319make_slots(T319* C,T2 a1);
T2 r319new_modulus(T2 a1);
T6 r319cursor_off(T0* a1);
T2 r520new_capacity(T2 a1);
void r520copy(T520* C,T0* a1);
void r520force(T520* C,T0* a1,T0* a2);
void r520make_clashes(T520* C,T2 a1);
void r520search_position(T520* C,T0* a1);
T6 r520is_equal(T520* C,T0* a1);
void r520remove_traversing_cursor(T520* C,T0* a1);
void r520clone_slots(T520* C);
void r520keys_resize(T520* C,T2 a1);
void r520clone_clashes(T520* C);
T0* r520item(T520* C,T0* a1);
void r520move_all_cursors_after(T520* C);
void r520make_items(T520* C,T2 a1);
void r520add_traversing_cursor(T520* C,T0* a1);
T6 r520se_assigned_from(T0* a1);
T0* r520clone(T0* a1);
T6 r520same_type(T520* C,T0* a1);
void r520make(T520* C,T2 a1);
void r520clone_items(T520* C);
T6 r520conforms_to(T520* C,T0* a1);
T6 r520has(T520* C,T0* a1);
void r520make_keys(T520* C,T2 a1);
T2 r520hash_position(T520* C,T0* a1);
void r520items_resize(T520* C,T2 a1);
void r520clone_keys(T520* C);
void r520make_with_equality_testers(T520* C,T2 a1,T0* a2,T0* a3);
void r520resize(T520* C,T2 a1);
T6 r520cursor_same_position(T0* a1,T0* a2);
void r520clashes_resize(T520* C,T2 a1);
void r520slots_resize(T520* C,T2 a1);
T0* r520twin(T520* C);
T0* r520new_cursor(T520* C);
void r520make_slots(T520* C,T2 a1);
T2 r520new_modulus(T2 a1);
T6 r520cursor_off(T0* a1);
T6 r436is_equal(T436* C,T0* a1);
T6 r436se_assigned_from(T0* a1);
T0* r436make(T2 a1);
T6 r436conforms_to(T436* C,T0* a1);
T0* r436resize(T0* a1,T2 a2);
T0* r436twin(T436* C);
void r151copy(T151* C,T0* a1);
void r151append_last(T151* C,T0* a1);
T0* r151cursor_item(T0* a1);
T6 r151cursor_is_last(T151* C,T0* a1);
T6 r151is_equal(T151* C,T0* a1);
void r151remove_traversing_cursor(T151* C,T0* a1);
void r151move_all_cursors_after(T151* C);
void r151add_traversing_cursor(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
T6 r151same_type(T151* C,T0* a1);
void r151make(T151* C);
T6 r151cursor_after(T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
void r151cursor_forth(T151* C,T0* a1);
void r151make_from_linear(T151* C,T0* a1);
void r151cursor_start(T151* C,T0* a1);
T0* r151twin(T151* C);
void r151force_last(T151* C,T0* a1);
T0* r151new_cursor(T151* C);
void r151put_last(T151* C,T0* a1);
T6 r151cursor_off(T0* a1);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r618is_equal(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
T0* r618make(T2 a1);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618resize(T0* a1,T2 a2);
T0* r618twin(T618* C);
T6 r382is_equal(T382* C,T0* a1);
T6 r382se_assigned_from(T0* a1);
T0* r382make(T2 a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382resize(T0* a1,T2 a2);
T0* r382twin(T382* C);
void r451copy(T451* C,T0* a1);
T6 r451is_equal(T451* C,T0* a1);
T6 r451same_position(T451* C,T0* a1);
T6 r451se_assigned_from(T0* a1);
T6 r451same_type(T451* C,T0* a1);
T6 r451off(T451* C);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451twin(T451* C);
T6 r523is_equal(T523* C,T0* a1);
T6 r523se_assigned_from(T0* a1);
T6 r523conforms_to(T523* C,T0* a1);
T6 r523test(T0* a1,T0* a2);
T0* r523twin(T523* C);
void r313copy(T313* C,T0* a1);
T6 r313is_equal(T313* C,T0* a1);
T6 r313same_position(T313* C,T0* a1);
T6 r313se_assigned_from(T0* a1);
T6 r313same_type(T313* C,T0* a1);
void r313make(T313* C,T0* a1);
T6 r313off(T313* C);
T6 r313conforms_to(T313* C,T0* a1);
T0* r313twin(T313* C);
void r344copy(T344* C,T0* a1);
void r344make_equal(T344* C,T2 a1);
void r344make_clashes(T344* C,T2 a1);
void r344search_position(T344* C,T0* a1);
T6 r344is_equal(T344* C,T0* a1);
void r344remove_traversing_cursor(T344* C,T0* a1);
void r344clone_slots(T344* C);
T0* r344items_item(T344* C,T2 a1);
void r344clone_clashes(T344* C);
void r344move_all_cursors_after(T344* C);
void r344make_items(T344* C,T2 a1);
void r344add_traversing_cursor(T344* C,T0* a1);
T6 r344se_assigned_from(T0* a1);
T0* r344clone(T0* a1);
T6 r344same_type(T344* C,T0* a1);
void r344make(T344* C,T2 a1);
T6 r344equal(T0* a1,T0* a2);
void r344clone_items(T344* C);
T6 r344same_equality_tester(T344* C,T0* a1);
T6 r344conforms_to(T344* C,T0* a1);
T6 r344has(T344* C,T0* a1);
T2 r344hash_position(T344* C,T0* a1);
T6 r344cursor_same_position(T0* a1,T0* a2);
T0* r344twin(T344* C);
T0* r344new_cursor(T344* C);
void r344make_slots(T344* C,T2 a1);
T2 r344new_modulus(T2 a1);
T6 r344cursor_off(T0* a1);
void r266copy(T266* C,T0* a1);
void r266wipe_out(T266* C);
T0* r266keys_item(T266* C,T2 a1);
void r266make_clashes(T266* C,T2 a1);
void r266put(T266* C,T0* a1,T0* a2);
void r266search_position(T266* C,T0* a1);
T6 r266is_equal(T266* C,T0* a1);
void r266remove_traversing_cursor(T266* C,T0* a1);
void r266clone_slots(T266* C);
void r266keys_resize(T266* C,T2 a1);
T0* r266item(T266* C,T0* a1);
void r266clone_clashes(T266* C);
void r266make_items(T266* C,T2 a1);
void r266move_all_cursors_after(T266* C);
void r266add_traversing_cursor(T266* C,T0* a1);
T6 r266se_assigned_from(T0* a1);
T0* r266clone(T0* a1);
T6 r266same_type(T266* C,T0* a1);
void r266slots_wipe_out(T266* C);
void r266make(T266* C,T2 a1);
void r266clashes_wipe_out(T266* C);
void r266clone_items(T266* C);
T6 r266conforms_to(T266* C,T0* a1);
T6 r266has(T266* C,T0* a1);
void r266make_keys(T266* C,T2 a1);
T2 r266hash_position(T266* C,T0* a1);
void r266items_wipe_out(T266* C);
void r266items_resize(T266* C,T2 a1);
void r266clone_keys(T266* C);
void r266make_with_equality_testers(T266* C,T2 a1,T0* a2,T0* a3);
void r266resize(T266* C,T2 a1);
T6 r266cursor_same_position(T0* a1,T0* a2);
void r266clashes_resize(T266* C,T2 a1);
void r266slots_resize(T266* C,T2 a1);
T0* r266twin(T266* C);
void r266keys_wipe_out(T266* C);
T0* r266new_cursor(T266* C);
void r266make_slots(T266* C,T2 a1);
void r266keys_put(T266* C,T0* a1,T2 a2);
T2 r266new_modulus(T2 a1);
T6 r266cursor_off(T0* a1);
T6 r720is_equal(T720* C,T0* a1);
T6 r720se_assigned_from(T0* a1);
T6 r720conforms_to(T720* C,T0* a1);
T0* r720twin(T720* C);
void r280copy(T280* C,T0* a1);
T6 r280is_equal(T280* C,T0* a1);
void r280remove_traversing_cursor(T280* C,T0* a1);
void r280move_all_cursors_after(T280* C);
void r280add_traversing_cursor(T280* C,T0* a1);
T6 r280se_assigned_from(T0* a1);
T6 r280same_type(T280* C,T0* a1);
void r280make(T280* C);
T6 r280conforms_to(T280* C,T0* a1);
T0* r280twin(T280* C);
T0* r280new_cursor(T280* C);
T6 r455is_equal(T455* C,T0* a1);
T6 r455se_assigned_from(T0* a1);
void r455make(T455* C,T2 a1);
T6 r455conforms_to(T455* C,T0* a1);
T0* r455twin(T455* C);
T6 r697is_equal(T697* C,T0* a1);
T6 r697se_assigned_from(T0* a1);
T0* r697make(T2 a1);
T6 r697conforms_to(T697* C,T0* a1);
T0* r697resize(T0* a1,T2 a2);
T0* r697twin(T697* C);
void r462copy(T462* C,T0* a1);
T6 r462is_equal(T462* C,T0* a1);
T6 r462same_position(T462* C,T0* a1);
T6 r462se_assigned_from(T0* a1);
T6 r462same_type(T462* C,T0* a1);
void r462make(T462* C,T0* a1);
T6 r462off(T462* C);
T6 r462conforms_to(T462* C,T0* a1);
T0* r462twin(T462* C);
void r291copy(T291* C,T0* a1);
T6 r291is_equal(T291* C,T0* a1);
T6 r291same_position(T291* C,T0* a1);
T6 r291se_assigned_from(T0* a1);
T6 r291same_type(T291* C,T0* a1);
void r291make(T291* C,T0* a1);
T6 r291conforms_to(T291* C,T0* a1);
void r291set_after(T291* C);
T0* r291twin(T291* C);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T0* r532make(T2 a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532resize(T0* a1,T2 a2);
T0* r532twin(T532* C);
T6 r731is_equal(T731* C,T0* a1);
T6 r731se_assigned_from(T0* a1);
void r731make(T731* C,T0* a1,T0* a2);
T6 r731conforms_to(T731* C,T0* a1);
T0* r731twin(T731* C);
T6 r718is_equal(T718* C,T0* a1);
T6 r718se_assigned_from(T0* a1);
T6 r718conforms_to(T718* C,T0* a1);
T0* r718twin(T718* C);
T6 r528is_equal(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
T0* r528make(T2 a1);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528resize(T0* a1,T2 a2);
T0* r528twin(T528* C);
void r252copy(T252* C,T0* a1);
T6 r252is_equal(T252* C,T0* a1);
T0* r252item(T252* C);
T6 r252same_position(T252* C,T0* a1);
T6 r252se_assigned_from(T0* a1);
T6 r252after(T252* C);
T6 r252same_type(T252* C,T0* a1);
void r252make(T252* C,T0* a1);
T6 r252off(T252* C);
T6 r252conforms_to(T252* C,T0* a1);
T0* r252twin(T252* C);
T6 r465is_equal(T465* C,T0* a1);
T6 r465se_assigned_from(T0* a1);
T0* r465make(T2 a1);
T6 r465conforms_to(T465* C,T0* a1);
T0* r465resize(T0* a1,T2 a2);
T0* r465twin(T465* C);
T2 r114new_capacity(T2 a1);
void r114copy(T114* C,T0* a1);
void r114force(T114* C,T0* a1,T0* a2);
void r114make_clashes(T114* C,T2 a1);
T0* r114cursor_item(T114* C,T0* a1);
void r114search_position(T114* C,T0* a1);
T6 r114is_equal(T114* C,T0* a1);
void r114remove_traversing_cursor(T114* C,T0* a1);
void r114clone_slots(T114* C);
void r114keys_resize(T114* C,T2 a1);
T0* r114item(T114* C,T0* a1);
void r114clone_clashes(T114* C);
void r114move_all_cursors_after(T114* C);
void r114make_items(T114* C,T2 a1);
void r114add_traversing_cursor(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T0* r114clone(T0* a1);
T6 r114same_type(T114* C,T0* a1);
void r114make(T114* C,T2 a1);
void r114clone_items(T114* C);
T6 r114cursor_after(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has(T114* C,T0* a1);
void r114make_keys(T114* C,T2 a1);
T2 r114hash_position(T114* C,T0* a1);
void r114cursor_forth(T114* C,T0* a1);
void r114items_resize(T114* C,T2 a1);
void r114clone_keys(T114* C);
void r114make_with_equality_testers(T114* C,T2 a1,T0* a2,T0* a3);
void r114resize(T114* C,T2 a1);
T6 r114cursor_same_position(T0* a1,T0* a2);
void r114cursor_start(T114* C,T0* a1);
void r114clashes_resize(T114* C,T2 a1);
void r114slots_resize(T114* C,T2 a1);
T0* r114twin(T114* C);
T0* r114new_cursor(T114* C);
void r114make_slots(T114* C,T2 a1);
T2 r114new_modulus(T2 a1);
T6 r114cursor_off(T0* a1);
void r141copy(T141* C,T0* a1);
void r141set(T141* C,T0* a1,T6 a2,T6 a3);
T6 r141is_equal(T141* C,T0* a1);
T6 r141same_position(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
T6 r141is_last(T141* C);
T6 r141same_type(T141* C,T0* a1);
void r141make(T141* C,T0* a1);
T6 r141conforms_to(T141* C,T0* a1);
void r141set_after(T141* C);
T0* r141twin(T141* C);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
void r632copy(T632* C,T0* a1);
void r632append_last(T632* C,T0* a1);
T0* r632cursor_item(T0* a1);
T6 r632is_equal(T632* C,T0* a1);
void r632remove_traversing_cursor(T632* C,T0* a1);
void r632cursor_go_after(T632* C,T0* a1);
void r632move_all_cursors_after(T632* C);
void r632add_traversing_cursor(T632* C,T0* a1);
T6 r632se_assigned_from(T0* a1);
T6 r632same_type(T632* C,T0* a1);
void r632make(T632* C);
T6 r632cursor_after(T0* a1);
T6 r632conforms_to(T632* C,T0* a1);
void r632cursor_forth(T632* C,T0* a1);
void r632make_from_linear(T632* C,T0* a1);
void r632cursor_start(T632* C,T0* a1);
T0* r632twin(T632* C);
void r632force_last(T632* C,T0* a1);
T0* r632new_cursor(T632* C);
T6 r632cursor_off(T0* a1);
void r83copy(T83* C,T0* a1);
T0* r83cursor_item(T0* a1);
T6 r83is_equal(T83* C,T0* a1);
void r83remove_traversing_cursor(T83* C,T0* a1);
void r83move_all_cursors_after(T83* C);
void r83add_traversing_cursor(T83* C,T0* a1);
T6 r83se_assigned_from(T0* a1);
T6 r83same_type(T83* C,T0* a1);
void r83make(T83* C);
T6 r83cursor_after(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
void r83cursor_forth(T83* C,T0* a1);
void r83cursor_start(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83force_last(T83* C,T0* a1);
T0* r83new_cursor(T83* C);
T6 r83cursor_off(T0* a1);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
T6 r126conforms_to(T126* C,T0* a1);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
void r404copy(T404* C,T0* a1);
T6 r404is_equal(T404* C,T0* a1);
T6 r404same_position(T404* C,T0* a1);
T6 r404se_assigned_from(T0* a1);
T6 r404same_type(T404* C,T0* a1);
T6 r404off(T404* C);
T6 r404conforms_to(T404* C,T0* a1);
T0* r404twin(T404* C);
void r301copy(T301* C,T0* a1);
void r301wipe_out(T301* C);
void r301make_clashes(T301* C,T2 a1);
void r301search_position(T301* C,T2 a1);
T6 r301is_equal(T301* C,T0* a1);
void r301remove_traversing_cursor(T301* C,T0* a1);
void r301clone_slots(T301* C);
T0* r301item(T301* C,T2 a1);
void r301clone_clashes(T301* C);
void r301make_items(T301* C,T2 a1);
void r301move_all_cursors_after(T301* C);
void r301add_traversing_cursor(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T0* r301clone(T0* a1);
T6 r301same_type(T301* C,T0* a1);
void r301slots_wipe_out(T301* C);
void r301clashes_wipe_out(T301* C);
void r301clone_items(T301* C);
T6 r301conforms_to(T301* C,T0* a1);
T6 r301has(T301* C,T2 a1);
void r301make_keys(T301* C,T2 a1);
T2 r301hash_position(T301* C,T2 a1);
void r301items_wipe_out(T301* C);
void r301clone_keys(T301* C);
void r301make_with_equality_testers(T301* C,T2 a1,T0* a2,T0* a3);
T6 r301cursor_same_position(T0* a1,T0* a2);
T0* r301twin(T301* C);
void r301keys_wipe_out(T301* C);
T0* r301new_cursor(T301* C);
void r301make_slots(T301* C,T2 a1);
T2 r301new_modulus(T2 a1);
T6 r301cursor_off(T0* a1);
T6 r277is_equal(T277* C,T0* a1);
T6 r277se_assigned_from(T0* a1);
T6 r277conforms_to(T277* C,T0* a1);
T6 r277test(T0* a1,T0* a2);
T0* r277twin(T277* C);
void r433copy(T433* C,T0* a1);
T6 r433is_equal(T433* C,T0* a1);
T6 r433same_position(T433* C,T0* a1);
T6 r433se_assigned_from(T0* a1);
T6 r433same_type(T433* C,T0* a1);
void r433make(T433* C,T0* a1);
T6 r433off(T433* C);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433twin(T433* C);
void r264copy(T264* C,T0* a1);
T0* r264keys_item(T264* C,T2 a1);
void r264make_clashes(T264* C,T2 a1);
T0* r264cursor_item(T264* C,T0* a1);
void r264search_position(T264* C,T0* a1);
T6 r264is_equal(T264* C,T0* a1);
void r264remove_traversing_cursor(T264* C,T0* a1);
void r264clone_slots(T264* C);
T0* r264item(T264* C,T0* a1);
void r264clone_clashes(T264* C);
void r264move_all_cursors_after(T264* C);
void r264make_items(T264* C,T2 a1);
void r264add_traversing_cursor(T264* C,T0* a1);
T6 r264se_assigned_from(T0* a1);
T0* r264clone(T0* a1);
T6 r264same_type(T264* C,T0* a1);
void r264make(T264* C,T2 a1);
void r264clone_items(T264* C);
T6 r264cursor_after(T0* a1);
T6 r264conforms_to(T264* C,T0* a1);
T6 r264has(T264* C,T0* a1);
void r264make_keys(T264* C,T2 a1);
T2 r264hash_position(T264* C,T0* a1);
void r264cursor_forth(T264* C,T0* a1);
void r264clone_keys(T264* C);
void r264make_with_equality_testers(T264* C,T2 a1,T0* a2,T0* a3);
T6 r264cursor_same_position(T0* a1,T0* a2);
void r264cursor_start(T264* C,T0* a1);
T0* r264twin(T264* C);
T0* r264new_cursor(T264* C);
void r264make_slots(T264* C,T2 a1);
T2 r264new_modulus(T2 a1);
T6 r264cursor_off(T0* a1);
T6 r570is_equal(T570* C,T0* a1);
T6 r570se_assigned_from(T0* a1);
T0* r570make(T2 a1);
T6 r570conforms_to(T570* C,T0* a1);
T0* r570resize(T0* a1,T2 a2);
T0* r570twin(T570* C);
void r567copy(T567* C,T0* a1);
T6 r567is_equal(T567* C,T0* a1);
T6 r567same_position(T567* C,T0* a1);
T6 r567se_assigned_from(T0* a1);
T6 r567same_type(T567* C,T0* a1);
T6 r567off(T567* C);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567twin(T567* C);
void r412copy(T412* C,T0* a1);
T6 r412is_equal(T412* C,T0* a1);
void r412remove_traversing_cursor(T412* C,T0* a1);
void r412move_all_cursors_after(T412* C);
void r412add_traversing_cursor(T412* C,T0* a1);
T6 r412se_assigned_from(T0* a1);
T0* r412clone(T0* a1);
T6 r412cursor_before(T0* a1);
T6 r412same_type(T412* C,T0* a1);
void r412make(T412* C,T2 a1);
T6 r412cursor_after(T0* a1);
T6 r412conforms_to(T412* C,T0* a1);
T6 r412cursor_same_position(T0* a1,T0* a2);
T0* r412twin(T412* C);
T0* r412new_cursor(T412* C);
T6 r412cursor_off(T0* a1);
void r423copy(T423* C,T0* a1);
T6 r423is_equal(T423* C,T0* a1);
T6 r423same_position(T423* C,T0* a1);
T6 r423se_assigned_from(T0* a1);
T6 r423same_type(T423* C,T0* a1);
T6 r423off(T423* C);
T6 r423conforms_to(T423* C,T0* a1);
T0* r423twin(T423* C);
void r60copy(T60* C,T0* a1);
T6 r60is_equal(T60* C,T0* a1);
void r60remove_traversing_cursor(T60* C,T0* a1);
void r60move_all_cursors_after(T60* C);
void r60add_traversing_cursor(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
T6 r60same_type(T60* C,T0* a1);
void r60make(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
void r60cursor_forth(T60* C,T0* a1);
void r60cursor_start(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60force_last(T60* C,T0* a1);
T0* r60new_cursor(T60* C);
T6 r60cursor_off(T0* a1);
void r365copy(T365* C,T0* a1);
T0* r365keys_item(T365* C,T2 a1);
void r365make_clashes(T365* C,T2 a1);
void r365search_position(T365* C,T0* a1);
T6 r365is_equal(T365* C,T0* a1);
void r365remove_traversing_cursor(T365* C,T0* a1);
void r365clone_slots(T365* C);
T0* r365item(T365* C,T0* a1);
void r365clone_clashes(T365* C);
void r365move_all_cursors_after(T365* C);
void r365make_items(T365* C,T2 a1);
void r365add_traversing_cursor(T365* C,T0* a1);
T6 r365se_assigned_from(T0* a1);
T0* r365clone(T0* a1);
T6 r365same_type(T365* C,T0* a1);
void r365make(T365* C,T2 a1);
void r365clone_items(T365* C);
T6 r365conforms_to(T365* C,T0* a1);
T6 r365has(T365* C,T0* a1);
void r365make_keys(T365* C,T2 a1);
T2 r365hash_position(T365* C,T0* a1);
void r365clone_keys(T365* C);
void r365make_with_equality_testers(T365* C,T2 a1,T0* a2,T0* a3);
T6 r365cursor_same_position(T0* a1,T0* a2);
T0* r365twin(T365* C);
T0* r365new_cursor(T365* C);
void r365make_slots(T365* C,T2 a1);
T2 r365new_modulus(T2 a1);
T6 r365cursor_off(T0* a1);
T6 r764is_equal(T764* C,T0* a1);
T6 r764se_assigned_from(T0* a1);
void r764make(T764* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r764conforms_to(T764* C,T0* a1);
T0* r764twin(T764* C);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
void r510make(T510* C,T0* a1,T2 a2,T2 a3);
T6 r510conforms_to(T510* C,T0* a1);
T0* r510twin(T510* C);
T6 r603is_equal(T603* C,T0* a1);
T6 r603se_assigned_from(T0* a1);
extern T0*oBC20Arguments;
extern int fBC20Arguments;
T0* r603Arguments(void);
void r603make(T603* C,T0* a1,T0* a2,T0* a3);
T0* r603message(T603* C,T0* a1);
T6 r603conforms_to(T603* C,T0* a1);
T0* r603twin(T603* C);
T0* r603default_message(T603* C);
extern T0*oBC93STRING_;
T6 r665is_equal(T665* C,T0* a1);
T6 r665se_assigned_from(T0* a1);
T0* r665Arguments(void);
void r665make(T665* C,T0* a1,T0* a2,T0* a3);
T0* r665message(T665* C,T0* a1);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
T0* r665default_message(T665* C);
T6 r667is_equal(T667* C,T0* a1);
T0* r667new_tree_parser(T667* C);
T6 r667se_assigned_from(T0* a1);
T0* r667new_tree_parser_imp(T667* C);
T6 r667conforms_to(T667* C,T0* a1);
T0* r667twin(T667* C);
T6 r667is_available(T667* C);
T6 r172is_closed(T172* C);
void r172old_close(T172* C);
T6 r172is_equal(T172* C,T0* a1);
T2 r172read_to_string(T172* C,T0* a1,T2 a2,T2 a3);
void r172open_read(T172* C);
T6 r172se_assigned_from(T0* a1);
void r172old_read_character(T172* C);
T6 r172old_end_of_file(T172* C);
void r172read_character(T172* C);
void r172close(T172* C);
void r172make(T172* C,T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
void r172connect_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r572is_equal(T572* C,T0* a1);
T6 r572se_assigned_from(T0* a1);
void r572make_with_variables(T572* C,T0* a1,T0* a2);
T6 r572conforms_to(T572* C,T0* a1);
extern T0*oBC191uc_cluster;
extern int fBC191uc_cluster;
T0* r572uc_cluster(void);
void r572parse_file(T572* C,T0* a1);
T0* r572twin(T572* C);
extern T0*oBC191uc_system;
extern int fBC191uc_system;
T0* r572uc_system(void);
T6 r606is_equal(T606* C,T0* a1);
T6 r606se_assigned_from(T0* a1);
T0* r606Arguments(void);
void r606make(T606* C);
T0* r606message(T606* C,T0* a1);
T6 r606conforms_to(T606* C,T0* a1);
T0* r606twin(T606* C);
T0* r606default_message(T606* C);
T6 r631is_equal(T631* C,T0* a1);
T6 r631se_assigned_from(T0* a1);
void r631make(T631* C,T0* a1);
T6 r631conforms_to(T631* C,T0* a1);
T0* r631twin(T631* C);
T6 r189is_equal(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
void r189make_with_variables(T189* C,T0* a1,T0* a2);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189uc_cluster(void);
void r189parse_file(T189* C,T0* a1);
T0* r189twin(T189* C);
T0* r189uc_system(void);
T6 r209is_equal(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
void r209unmount_root(T209* C,T0* a1);
void r209make(T209* C,T0* a1);
void r209mount(T209* C,T0* a1);
T6 r209conforms_to(T209* C,T0* a1);
void r209unmount(T209* C);
T0* r209twin(T209* C);
void r209mount_root(T209* C,T0* a1);
void r214set_optimize(T214* C,T6 a1);
T6 r214is_equal(T214* C,T0* a1);
void r214set_ensure(T214* C,T6 a1);
T6 r214se_assigned_from(T0* a1);
void r214make(T214* C);
void r214set_check(T214* C,T6 a1);
T6 r214conforms_to(T214* C,T0* a1);
void r214set_invariant(T214* C,T6 a1);
void r214set_loop(T214* C,T6 a1);
void r214set_debug(T214* C,T6 a1);
T0* r214twin(T214* C);
void r214set_require(T214* C,T6 a1);
T6 r249is_equal(T249* C,T0* a1);
T6 r249se_assigned_from(T0* a1);
void r249make(T249* C,T0* a1,T2 a2,T0* a3);
T6 r249conforms_to(T249* C,T0* a1);
T0* r249twin(T249* C);
T6 r213has_exported_features(T213* C);
T6 r213is_equal(T213* C,T0* a1);
T6 r213se_assigned_from(T0* a1);
void r213merge(T213* C,T0* a1);
void r213make(T213* C);
T6 r213is_empty(T213* C);
T6 r213conforms_to(T213* C,T0* a1);
T0* r213cloned_externals(T213* C);
T6 r213has_include_directories(T213* C);
T6 r213has_link_libraries(T213* C);
T0* r213twin(T213* C);
T6 r219is_equal(T219* C,T0* a1);
T6 r219se_assigned_from(T0* a1);
extern T0*oBC34std;
T6 r219conforms_to(T219* C,T0* a1);
T0* r219twin(T219* C);
void r219make_standard(T219* C);
T6 r515is_equal(T515* C,T0* a1);
T6 r515se_assigned_from(T0* a1);
T6 r515conforms_to(T515* C,T0* a1);
T0* r515twin(T515* C);
void r576put(T576* C,T0* a1,T0* a2);
T6 r576is_equal(T576* C,T0* a1);
T0* r576item(T576* C,T0* a1);
T6 r576se_assigned_from(T0* a1);
void r576make(T576* C);
T6 r576conforms_to(T576* C,T0* a1);
T0* r576twin(T576* C);
T6 r190is_equal(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
void r190make_with_variables(T190* C,T0* a1,T0* a2);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190uc_cluster(void);
void r190parse_file(T190* C,T0* a1);
T0* r190twin(T190* C);
T0* r190uc_system(void);
void r130print_cluster(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130is_equal(T130* C,T0* a1);
void r130print_externals(T0* a1,T2 a2,T0* a3);
void r130print_xml_cluster_file(T130* C,T0* a1,T0* a2);
T6 r130se_assigned_from(T0* a1);
void r130print_exported_class(T0* a1,T2 a2,T0* a3);
void r130print_clusters(T130* C,T0* a1,T2 a2,T0* a3);
T6 r130conforms_to(T130* C,T0* a1);
void r130generate_cluster(T130* C,T0* a1);
T0* r130twin(T130* C);
void r130print_options(T0* a1,T2 a2,T0* a3);
void r130print_indentation(T2 a1,T0* a2);
void r130print_link_libraries(T0* a1,T2 a2,T0* a3);
void r130generate_system(T130* C,T0* a1);
void r130print_xml_system_file(T130* C,T0* a1,T0* a2);
void r130print_include_directories(T0* a1,T2 a2,T0* a3);
T6 r727is_equal(T727* C,T0* a1);
T2 r727read_to_string(T727* C,T0* a1,T2 a2,T2 a3);
T6 r727se_assigned_from(T0* a1);
void r727old_read_character(T727* C);
T6 r727old_end_of_file(T727* C);
void r727read_character(T727* C);
void r727make(T727* C);
T6 r727conforms_to(T727* C,T0* a1);
T0* r727twin(T727* C);
T0* r506substring(T506* C,T2 a1,T2 a2);
void r506fill_from_string(T506* C,T0* a1,T2 a2);
T6 r506is_equal(T506* C,T0* a1);
T2 r506fill_from_stream(T506* C,T0* a1,T2 a2,T2 a3);
T6 r506se_assigned_from(T0* a1);
void r506move_left(T506* C,T2 a1,T2 a2,T2 a3);
void r506make(T506* C,T2 a1);
T6 r506conforms_to(T506* C,T0* a1);
void r506resize(T506* C,T2 a1);
T0* r506twin(T506* C);
T6 r509is_equal(T509* C,T0* a1);
T6 r509se_assigned_from(T0* a1);
void r509make(T509* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r509conforms_to(T509* C,T0* a1);
T0* r509twin(T509* C);
T6 r609is_equal(T609* C,T0* a1);
T6 r609se_assigned_from(T0* a1);
T6 r609conforms_to(T609* C,T0* a1);
T6 r609is_undefined(T609* C);
T0* r609twin(T609* C);
T6 r762is_equal(T762* C,T0* a1);
T6 r762se_assigned_from(T0* a1);
void r762make(T762* C,T0* a1,T0* a2);
T6 r762conforms_to(T762* C,T0* a1);
T0* r762twin(T762* C);
T6 r605is_equal(T605* C,T0* a1);
T6 r605se_assigned_from(T0* a1);
T0* r605Arguments(void);
void r605make(T605* C,T0* a1);
T0* r605message(T605* C,T0* a1);
T6 r605conforms_to(T605* C,T0* a1);
T0* r605twin(T605* C);
T0* r605default_message(T605* C);
T6 r712is_closed(T712* C);
void r712old_close(T712* C);
T6 r712is_equal(T712* C,T0* a1);
T6 r712se_assigned_from(T0* a1);
void r712close(T712* C);
void r712make(T712* C,T0* a1);
void r712old_put_string(T712* C,T0* a1);
T6 r712conforms_to(T712* C,T0* a1);
void r712connect_to(T712* C,T0* a1);
void r712put_line(T712* C,T0* a1);
T0* r712twin(T712* C);
void r712open_write(T712* C);
T0* r218new_class(T0* a1,T2 a2,T0* a3);
T6 r218is_equal(T218* C,T0* a1);
T6 r218se_assigned_from(T0* a1);
T6 r218conforms_to(T218* C,T0* a1);
T0* r218twin(T218* C);
void r127print_cluster(T127* C,T0* a1,T0* a2);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127print_ace_file(T127* C,T0* a1,T0* a2);
void r127print_exported_class(T0* a1,T2 a2,T0* a3);
void r127print_clusters(T127* C,T0* a1,T0* a2);
T6 r127conforms_to(T127* C,T0* a1);
void r127print_precompile_ace_file(T127* C,T0* a1,T0* a2);
void r127generate_cluster(T127* C,T0* a1);
T0* r127twin(T127* C);
void r127print_options(T0* a1,T2 a2,T0* a3);
void r127print_indentation(T2 a1,T0* a2);
void r127print_link_libraries(T0* a1,T0* a2);
void r127generate_system(T127* C,T0* a1);
void r127print_include_directories(T0* a1,T0* a2);
T6 r553is_equal(T553* C,T0* a1);
T552 r553item(T553* C);
T6 r553se_assigned_from(T0* a1);
T6 r553conforms_to(T553* C,T0* a1);
void r553make_from_character(T553* C,T3 a1);
T0* r553twin(T553* C);
T6 r761is_equal(T761* C,T0* a1);
T6 r761se_assigned_from(T0* a1);
void r761make_from_implementation(T761* C,T0* a1);
T6 r761conforms_to(T761* C,T0* a1);
T0* r761twin(T761* C);
void r674set_last_cell(T674* C,T0* a1);
void r674copy(T674* C,T0* a1);
void r674wipe_out(T674* C);
void r674remove_first(T674* C);
T0* r674cursor_item(T0* a1);
T6 r674cursor_is_last(T674* C,T0* a1);
T6 r674is_equal(T674* C,T0* a1);
void r674remove_traversing_cursor(T674* C,T0* a1);
void r674cursor_go_after(T674* C,T0* a1);
void r674move_all_cursors_after(T674* C);
void r674add_traversing_cursor(T674* C,T0* a1);
T6 r674se_assigned_from(T0* a1);
T6 r674cursor_before(T0* a1);
T6 r674same_type(T674* C,T0* a1);
void r674make(T674* C);
T0* r674first_element(T674* C);
void r674remove_last(T674* C);
T6 r674cursor_after(T0* a1);
T6 r674conforms_to(T674* C,T0* a1);
void r674cursor_forth(T674* C,T0* a1);
void r674move_last_cursors_after(T674* C);
void r674cursor_start(T674* C,T0* a1);
T0* r674twin(T674* C);
T0* r674new_cursor(T674* C);
T6 r674cursor_is_first(T674* C,T0* a1);
void r674remove_at_cursor(T674* C,T0* a1);
void r674put_last(T674* C,T0* a1);
void r674move_all_cursors(T674* C,T0* a1,T0* a2);
T6 r674cursor_off(T0* a1);
extern T0*oBC105template_expander;
T6 r104is_equal(T104* C,T0* a1);
T6 r104se_assigned_from(T0* a1);
void r104make(T104* C);
T6 r104conforms_to(T104* C,T0* a1);
T0* r104twin(T104* C);
T0* r104expanded_variables(T104* C,T0* a1);
T6 r133is_equal(T133* C,T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133make(T133* C,T0* a1,T0* a2);
T6 r133conforms_to(T133* C,T0* a1);
void r133execute(T133* C);
T0* r133twin(T133* C);
T6 r753is_equal(T753* C,T0* a1);
T6 r753se_assigned_from(T0* a1);
void r753make(T753* C,T0* a1,T0* a2);
T6 r753conforms_to(T753* C,T0* a1);
T0* r753twin(T753* C);
T6 r100is_equal(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
T0* r100Arguments(void);
void r100make(T100* C,T0* a1);
T0* r100message(T100* C,T0* a1);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r100default_message(T100* C);
void r103print_cluster(T103* C,T0* a1,T0* a2);
void r103print_loadpath_clusters(T103* C,T0* a1,T0* a2);
T6 r103is_equal(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_loadpath_cluster(T103* C,T0* a1,T0* a2);
void r103print_ace_file(T103* C,T0* a1,T0* a2);
void r103generate_cecil_file(T103* C,T0* a1);
void r103print_exported_class(T0* a1,T0* a2);
void r103print_clusters(T103* C,T0* a1,T0* a2);
T6 r103conforms_to(T103* C,T0* a1);
void r103generate_cluster(T103* C,T0* a1);
T0* r103twin(T103* C);
void r103print_options(T0* a1,T2 a2,T0* a3);
void r103print_exported_classes(T0* a1,T0* a2);
void r103print_indentation(T2 a1,T0* a2);
void r103print_link_libraries(T0* a1,T0* a2);
void r103generate_system(T103* C,T0* a1);
void r103print_include_directories(T0* a1,T0* a2);
T6 r755is_equal(T755* C,T0* a1);
T6 r755se_assigned_from(T0* a1);
void r755make_from_implementation(T755* C,T0* a1);
T6 r755conforms_to(T755* C,T0* a1);
T0* r755twin(T755* C);
T6 r156is_equal(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
T6 r156conforms_to(T156* C,T0* a1);
void r156put_line(T0* a1);
T0* r156twin(T156* C);
T6 r717is_equal(T717* C,T0* a1);
T6 r717se_assigned_from(T0* a1);
T0* r717Arguments(void);
void r717make(T717* C,T0* a1);
T0* r717message(T717* C,T0* a1);
T6 r717conforms_to(T717* C,T0* a1);
T0* r717twin(T717* C);
T0* r717default_message(T717* C);
T6 r132is_equal(T132* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132execute_generators(T132* C,T0* a1);
void r132make(T132* C,T0* a1,T0* a2);
T6 r132conforms_to(T132* C,T0* a1);
void r132execute(T132* C);
T0* r132twin(T132* C);
T6 r210is_equal(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
void r210unmount_root(T210* C,T0* a1);
void r210make(T210* C,T0* a1,T0* a2);
void r210mount(T210* C,T0* a1);
T6 r210conforms_to(T210* C,T0* a1);
void r210unmount(T210* C);
T0* r210twin(T210* C);
void r210set_excluded(T210* C,T0* a1);
void r210mount_root(T210* C,T0* a1);
void r483yy_build_tables(T483* C);
extern T0*oBC484yy_meta_template;
extern int fBC484yy_meta_template;
T0* r483yy_meta_template(void);
extern T0*oBC483yycheck_template;
extern int fBC483yycheck_template;
T0* r483yycheck_template(void);
T6 r483is_equal(T483* C,T0* a1);
extern T0*oBC484yy_accept_template;
extern int fBC484yy_accept_template;
T0* r483yy_accept_template(void);
extern T0*oBC484yy_base_template;
extern int fBC484yy_base_template;
T0* r483yy_base_template(void);
void r483yy_build_parser_tables(T483* C);
T6 r483se_assigned_from(T0* a1);
extern T0*oBC483yytable_template;
extern int fBC483yytable_template;
T0* r483yytable_template(void);
T0* r483yyfixed_array(T0* a1);
extern T0*oBC483yypgoto_template;
extern int fBC483yypgoto_template;
T0* r483yypgoto_template(void);
extern T0*oBC493Empty_buffer;
extern int fBC493Empty_buffer;
T0* r483Empty_buffer(void);
void r483yy_set_content(T483* C,T0* a1);
extern T0*oBC484yy_nxt_template;
extern int fBC484yy_nxt_template;
T0* r483yy_nxt_template(void);
extern T0*oBC484yy_chk_template;
extern int fBC484yy_chk_template;
T0* r483yy_chk_template(void);
extern T0*oBC483yypact_template;
extern int fBC483yypact_template;
T0* r483yypact_template(void);
void r483make_parser_skeleton(T483* C);
extern T0*oBC483yydefact_template;
extern int fBC483yydefact_template;
T0* r483yydefact_template(void);
extern T0*oBC484yy_def_template;
extern int fBC484yy_def_template;
T0* r483yy_def_template(void);
T6 r483conforms_to(T483* C,T0* a1);
extern T0*oBC484yy_ec_template;
extern int fBC484yy_ec_template;
T0* r483yy_ec_template(void);
void r483make_with_buffer(T483* C,T0* a1);
void r483yy_initialize(T483* C);
extern T0*oBC483yyr1_template;
extern int fBC483yyr1_template;
T0* r483yyr1_template(void);
void r483make_with_factory(T483* C,T0* a1,T0* a2,T0* a3);
T0* r483twin(T483* C);
void r483yy_load_input_buffer(T483* C);
extern T0*oBC483yytranslate_template;
extern int fBC483yytranslate_template;
T0* r483yytranslate_template(void);
T0* r483yy_fixed_array(T0* a1);
extern T0*oBC483yyr2_template;
extern int fBC483yyr2_template;
T0* r483yyr2_template(void);
extern T0*oBC483yydefgoto_template;
extern int fBC483yydefgoto_template;
T0* r483yydefgoto_template(void);
void r483make_eiffel_scanner(T483* C,T0* a1,T0* a2);
T6 r253is_equal(T253* C,T0* a1);
T6 r253se_assigned_from(T0* a1);
void r253make(T253* C,T0* a1,T0* a2);
T6 r253conforms_to(T253* C,T0* a1);
T0* r253twin(T253* C);
T6 r599is_equal(T599* C,T0* a1);
T6 r599se_assigned_from(T0* a1);
T0* r599Arguments(void);
void r599make(T599* C,T0* a1,T0* a2);
T0* r599message(T599* C,T0* a1);
T6 r599conforms_to(T599* C,T0* a1);
T0* r599twin(T599* C);
T0* r599default_message(T599* C);
T6 r187is_equal(T187* C,T0* a1);
T6 r187se_assigned_from(T0* a1);
T6 r187conforms_to(T187* C,T0* a1);
void r187make_basic_classes(T187* C);
T0* r187eiffel_class(T187* C,T0* a1);
void r187set_mounted_clusters(T187* C,T0* a1);
void r187make_with_factory(T187* C,T0* a1,T0* a2,T0* a3);
T0* r187twin(T187* C);
void r187merge_externals(T187* C);
extern T0*oBC191uc_optimize;
extern int fBC191uc_optimize;
T0* r201uc_optimize(void);
void r201validate_named_cluster(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_check;
extern int fBC191uc_check;
T0* r201uc_check(void);
void r201validate_root(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_external;
extern int fBC191uc_external;
T0* r201uc_external(void);
void r201validate_external(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_exclude;
extern int fBC191uc_exclude;
T0* r201uc_exclude(void);
void r201validate_mount(T201* C,T0* a1,T0* a2);
T6 r201is_equal(T201* C,T0* a1);
void r201validate_system_doc(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_invariant;
extern int fBC191uc_invariant;
T0* r201uc_invariant(void);
T6 r201se_assigned_from(T0* a1);
void r201validate_cluster(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_description;
extern int fBC191uc_description;
T0* r201uc_description(void);
extern T0*oBC191uc_mount;
extern int fBC191uc_mount;
T0* r201uc_mount(void);
extern T0*oBC191uc_debug;
extern int fBC191uc_debug;
T0* r201uc_debug(void);
extern T0*oBC191uc_option;
extern int fBC191uc_option;
T0* r201uc_option(void);
extern T0*oBC191uc_root;
extern int fBC191uc_root;
T0* r201uc_root(void);
void r201validate_system(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_feature;
extern int fBC191uc_feature;
T0* r201uc_feature(void);
extern T0*oBC191uc_class;
extern int fBC191uc_class;
T0* r201uc_class(void);
extern T0*oBC191uc_loop;
extern int fBC191uc_loop;
T0* r201uc_loop(void);
T6 r201conforms_to(T201* C,T0* a1);
void r201validate_cluster_doc(T201* C,T0* a1,T0* a2);
void r201validate_export(T201* C,T0* a1,T0* a2);
T0* r201uc_cluster(void);
void r201validate_exclude(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_export;
extern int fBC191uc_export;
T0* r201uc_export(void);
extern T0*oBC191uc_link_library;
extern int fBC191uc_link_library;
T0* r201uc_link_library(void);
extern T0*oBC191uc_include_dir;
extern int fBC191uc_include_dir;
T0* r201uc_include_dir(void);
extern T0*oBC191uc_location;
extern int fBC191uc_location;
T0* r201uc_location(void);
T0* r201twin(T201* C);
T0* r201uc_system(void);
extern T0*oBC191uc_creation;
extern int fBC191uc_creation;
T0* r201uc_creation(void);
extern T0*oBC191uc_name;
extern int fBC191uc_name;
T0* r201uc_name(void);
extern T0*oBC191uc_require;
extern int fBC191uc_require;
T0* r201uc_require(void);
void r201validate_option(T201* C,T0* a1,T0* a2);
extern T0*oBC191uc_ensure;
extern int fBC191uc_ensure;
T0* r201uc_ensure(void);
void r129print_cluster(T129* C,T0* a1,T0* a2);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129print_ace_file(T129* C,T0* a1,T0* a2);
void r129print_exported_class(T0* a1,T2 a2,T0* a3);
void r129print_component(T0* a1);
void r129print_clusters(T129* C,T0* a1,T0* a2);
T6 r129conforms_to(T129* C,T0* a1);
void r129print_precompile_ace_file(T129* C,T0* a1,T0* a2);
void r129generate_cluster(T129* C,T0* a1);
T0* r129twin(T129* C);
void r129print_options(T0* a1,T2 a2,T0* a3);
void r129print_indentation(T2 a1,T0* a2);
void r129print_link_libraries(T0* a1,T0* a2);
void r129generate_system(T129* C,T0* a1);
void r129print_include_directories(T0* a1,T0* a2);
T6 r602is_equal(T602* C,T0* a1);
T6 r602se_assigned_from(T0* a1);
T0* r602Arguments(void);
void r602make(T602* C,T0* a1,T0* a2,T0* a3);
T0* r602message(T602* C,T0* a1);
T6 r602conforms_to(T602* C,T0* a1);
T0* r602twin(T602* C);
T0* r602default_message(T602* C);
T6 r711is_equal(T711* C,T0* a1);
T6 r711se_assigned_from(T0* a1);
T0* r711Arguments(void);
void r711make(T711* C,T0* a1);
T0* r711message(T711* C,T0* a1);
T6 r711conforms_to(T711* C,T0* a1);
T0* r711twin(T711* C);
T0* r711default_message(T711* C);
T6 r580is_equal(T580* C,T0* a1);
T6 r580se_assigned_from(T0* a1);
T6 r580conforms_to(T580* C,T0* a1);
T0* r580expand_from_hash_table(T0* a1,T0* a2);
T0* r580twin(T580* C);
void r505set_position(T505* C,T2 a1,T2 a2,T2 a3);
T6 r505is_equal(T505* C,T0* a1);
T6 r505se_assigned_from(T0* a1);
void r505make(T505* C,T0* a1);
T6 r505conforms_to(T505* C,T0* a1);
void r505make_from_buffer(T505* C,T0* a1);
T0* r505twin(T505* C);
extern T0*oBC550utils;
T2 r550item_code(T550* C,T2 a1);
T6 r550is_equal(T550* C,T0* a1);
T6 r550se_assigned_from(T0* a1);
void r550make(T550* C);
void r550insert(T550* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r550add_to_storage_count(T550* C,T2 a1);
void r550insert_code(T550* C,T2 a1,T2 a2);
T6 r550conforms_to(T550* C,T0* a1);
extern T6 oBC550optimize_access;
void r550storage_move(T550* C,T2 a1,T2 a2,T2 a3);
T0* r550twin(T550* C);
void r550find_position(T550* C,T2 a1);
T6 r513same_identifier(T513* C,T0* a1);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
T6 r513same_type(T513* C,T0* a1);
void r513make(T513* C,T0* a1,T0* a2);
T6 r513same_feature_name(T513* C,T0* a1);
T6 r513conforms_to(T513* C,T0* a1);
T0* r513twin(T513* C);
T6 r248is_equal(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
void r248make(T248* C,T0* a1);
T6 r248conforms_to(T248* C,T0* a1);
void r248set_current_class(T248* C,T0* a1);
T0* r248twin(T248* C);
T6 r573is_equal(T573* C,T0* a1);
T6 r573se_assigned_from(T0* a1);
void r573_197Pmake_from_implementation(T573* C,T0* a1);
void r573make_from_implementation(T573* C,T0* a1);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
T6 r573cursor_off(T573* C,T0* a1);
void r128print_cluster(T128* C,T0* a1,T0* a2);
void r128print_esd_file(T128* C,T0* a1,T0* a2);
T6 r128is_equal(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T0* r128clone(T0* a1);
void r128print_clusters(T128* C,T0* a1,T0* a2);
T0* r128remove_all_characters(T0* a1,T3 a2);
T6 r128conforms_to(T128* C,T0* a1);
void r128print_eld_file(T128* C,T0* a1,T0* a2);
void r128generate_cluster(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128print_options(T0* a1,T2 a2,T0* a3);
void r128print_indentation(T2 a1,T0* a2);
void r128print_link_libraries(T0* a1,T0* a2);
void r128generate_system(T128* C,T0* a1);
T0* r549create_representation(T549* C);
T6 r549is_equal(T549* C,T0* a1);
T6 r549se_assigned_from(T0* a1);
T6 r549conforms_to(T549* C,T0* a1);
T0* r549twin(T549* C);
T6 r607is_equal(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
T0* r607Arguments(void);
void r607make(T607* C,T0* a1);
T0* r607message(T607* C,T0* a1);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
T0* r607default_message(T607* C);
T6 r517is_equal(T517* C,T0* a1);
T6 r517se_assigned_from(T0* a1);
void r517make(T517* C,T0* a1,T0* a2);
T6 r517conforms_to(T517* C,T0* a1);
T0* r517twin(T517* C);
T0* r202uc_optimize(void);
T0* r202uc_check(void);
T0* r202uc_external(void);
T0* r202uc_exclude(void);
T0* r202new_cluster(T202* C,T0* a1);
T0* r202new_exported_feature(T0* a1);
T6 r202is_equal(T202* C,T0* a1);
T0* r202new_export(T0* a1);
T0* r202uc_invariant(void);
T6 r202se_assigned_from(T0* a1);
T0* r202new_options(T0* a1);
T0* r202new_universe(T202* C,T0* a1);
T6 r202is_false(T0* a1);
T0* r202uc_mount(void);
T0* r202uc_debug(void);
T0* r202uc_option(void);
void r202make(T202* C,T0* a1,T0* a2);
T0* r202uc_root(void);
extern T0*oBC203Execution_environment;
T0* r202uc_feature(void);
T0* r202uc_class(void);
T0* r202uc_loop(void);
T6 r202conforms_to(T202* C,T0* a1);
extern T0*oBC191uc_abstract;
extern int fBC191uc_abstract;
T0* r202uc_abstract(void);
T0* r202new_externals(T0* a1);
extern T0*oBC191uc_alias;
extern int fBC191uc_alias;
T0* r202uc_alias(void);
T0* r202uc_cluster(void);
extern T0*oBC191uc_enable;
extern int fBC191uc_enable;
T0* r202uc_enable(void);
T0* r202uc_export(void);
T0* r202uc_link_library(void);
T6 r202is_true(T0* a1);
T0* r202uc_include_dir(void);
T0* r202uc_location(void);
T0* r202twin(T202* C);
T0* r202new_mount(T202* C,T0* a1);
T0* r202uc_creation(void);
T0* r202uc_require(void);
T0* r202uc_name(void);
T0* r202uc_ensure(void);
T6 r757is_equal(T757* C,T0* a1);
T6 r757se_assigned_from(T0* a1);
void r757make(T757* C,T0* a1,T0* a2);
T6 r757conforms_to(T757* C,T0* a1);
T0* r757twin(T757* C);
void r679copy(T679* C,T0* a1);
void r679make_clashes(T679* C,T2 a1);
void r679search_position(T679* C,T0* a1);
T6 r679is_equal(T679* C,T0* a1);
void r679remove_traversing_cursor(T679* C,T0* a1);
void r679clone_slots(T679* C);
T0* r679item(T679* C,T0* a1);
void r679clone_clashes(T679* C);
void r679move_all_cursors_after(T679* C);
void r679make_items(T679* C,T2 a1);
void r679add_traversing_cursor(T679* C,T0* a1);
T6 r679se_assigned_from(T0* a1);
T0* r679clone(T0* a1);
T6 r679same_type(T679* C,T0* a1);
void r679make(T679* C,T2 a1);
void r679clone_items(T679* C);
T6 r679conforms_to(T679* C,T0* a1);
T6 r679has(T679* C,T0* a1);
void r679make_keys(T679* C,T2 a1);
T2 r679hash_position(T679* C,T0* a1);
void r679clone_keys(T679* C);
void r679make_with_equality_testers(T679* C,T2 a1,T0* a2,T0* a3);
T6 r679cursor_same_position(T0* a1,T0* a2);
T0* r679twin(T679* C);
T0* r679new_cursor(T679* C);
void r679make_slots(T679* C,T2 a1);
T2 r679new_modulus(T2 a1);
T6 r679cursor_off(T0* a1);
T6 r604is_equal(T604* C,T0* a1);
T6 r604se_assigned_from(T0* a1);
T0* r604Arguments(void);
void r604make(T604* C,T0* a1,T0* a2);
T0* r604message(T604* C,T0* a1);
T6 r604conforms_to(T604* C,T0* a1);
T0* r604twin(T604* C);
T0* r604default_message(T604* C);
void r208copy(T208* C,T0* a1);
T0* r208substring(T208* C,T2 a1,T2 a2);
T2 r208occurrences(T208* C,T552 a1);
T2 r208count(T208* C);
T2 r208item_code(T208* C,T2 a1);
T6 r208is_equal(T208* C,T0* a1);
T552 r208item(T208* C,T2 a1);
extern T0*oBC208utf8utils;
void r208append_uc_string(T208* C,T0* a1);
T6 r208se_assigned_from(T0* a1);
void r208make_from_string(T208* C,T0* a1);
T2 r208index_of(T208* C,T552 a1,T2 a2);
void r208make(T208* C,T2 a1);
void r208append_string(T208* C,T0* a1);
T2 r208hash_code(T208* C);
T6 r208conforms_to(T208* C,T0* a1);
void r208append_ucc_code(T208* C,T2 a1);
T6 r208empty(T208* C);
T0* r208twin(T208* C);
T0* r208to_utf8(T208* C);
T2 r208three_way_comparison(T208* C,T0* a1);
extern T0*oBC208i_settings;
void r208make_from_utf8(T208* C,T0* a1);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76execute_generators(T76* C,T0* a1);
void r76make(T76* C,T0* a1,T0* a2);
T6 r76conforms_to(T76* C,T0* a1);
void r76execute(T76* C);
T0* r76twin(T76* C);
T6 r756is_equal(T756* C,T0* a1);
T6 r756se_assigned_from(T0* a1);
void r756make_from_implementation(T756* C,T0* a1);
T6 r756conforms_to(T756* C,T0* a1);
T0* r756twin(T756* C);
void r759set_last_cell(T759* C,T0* a1);
void r759copy(T759* C,T0* a1);
void r759wipe_out(T759* C);
void r759remove_first(T759* C);
T0* r759cursor_item(T0* a1);
T6 r759cursor_is_last(T759* C,T0* a1);
void r759add_attributes(T759* C,T0* a1,T0* a2);
T6 r759is_equal(T759* C,T0* a1);
void r759remove_traversing_cursor(T759* C,T0* a1);
void r759make_root(T759* C,T0* a1,T0* a2);
void r759cursor_go_after(T759* C,T0* a1);
void r759move_all_cursors_after(T759* C);
void r759add_traversing_cursor(T759* C,T0* a1);
T6 r759se_assigned_from(T0* a1);
T6 r759cursor_before(T0* a1);
void r759make_child(T759* C,T0* a1,T0* a2,T0* a3);
T6 r759same_type(T759* C,T0* a1);
void r759remove_last(T759* C);
T6 r759cursor_after(T0* a1);
T6 r759conforms_to(T759* C,T0* a1);
void r759cursor_forth(T759* C,T0* a1);
void r759move_last_cursors_after(T759* C);
void r759cursor_start(T759* C,T0* a1);
T0* r759twin(T759* C);
void r759force_last(T759* C,T0* a1);
T0* r759new_cursor(T759* C);
T6 r759cursor_is_first(T759* C,T0* a1);
void r759remove_at_cursor(T759* C,T0* a1);
void r759put_last(T759* C,T0* a1);
void r759move_all_cursors(T759* C,T0* a1,T0* a2);
T6 r759cursor_off(T0* a1);
T0* r751out(T751* C);
T6 r751is_equal(T751* C,T0* a1);
T6 r751se_assigned_from(T0* a1);
T0* r751clone(T0* a1);
void r751out_in_tagged_out_memory(T751* C);
T6 r751conforms_to(T751* C,T0* a1);
T0* r751twin(T751* C);
void r726fill(T726* C);
void r726compact_left(T726* C);
void r726set_position(T726* C,T2 a1,T2 a2,T2 a3);
T6 r726is_equal(T726* C,T0* a1);
T6 r726se_assigned_from(T0* a1);
void r726make_from_string(T726* C,T0* a1);
T6 r726conforms_to(T726* C,T0* a1);
void r726make_from_buffer(T726* C,T0* a1);
void r726resize(T726* C);
void r726make_with_size(T726* C,T0* a1,T2 a2);
T0* r726twin(T726* C);
void r726set_file(T726* C,T0* a1);
void r726flush(T726* C);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135make(T135* C);
void r135old_put_string(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
void r135put_line(T0* a1);
T0* r135twin(T135* C);
T0* r215full_name(T215* C,T3 a1);
void r215set_mounted_subclusters(T215* C,T0* a1);
T6 r215is_equal(T215* C,T0* a1);
void r215remove_cluster(T215* C,T0* a1);
void r215set_subclusters(T215* C,T0* a1);
T6 r215se_assigned_from(T0* a1);
void r215unmount_root(T215* C,T0* a1);
T0* r215full_pathname(T215* C);
void r215make(T215* C,T0* a1,T0* a2);
void r215mount(T215* C,T0* a1);
T6 r215conforms_to(T215* C,T0* a1);
void r215unmount(T215* C);
T0* r215twin(T215* C);
void r215merge_externals(T215* C,T0* a1);
void r215mount_root(T215* C,T0* a1);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
void r157make(T157* C);
void r157old_put_string(T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157put_line(T0* a1);
T0* r157twin(T157* C);
T0* r729out(T729* C);
T6 r729is_equal(T729* C,T0* a1);
T6 r729se_assigned_from(T0* a1);
T0* r729clone(T0* a1);
void r729make(T729* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r729conforms_to(T729* C,T0* a1);
T0* r729twin(T729* C);
T6 r555is_equal(T555* C,T0* a1);
T6 r555se_assigned_from(T0* a1);
void r555make_from_implementation(T555* C,T0* a1);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555twin(T555* C);
T6 r648is_equal(T648* C,T0* a1);
T6 r648se_assigned_from(T0* a1);
void r648make(T648* C,T0* a1,T0* a2);
T6 r648conforms_to(T648* C,T0* a1);
T0* r648twin(T648* C);
T0* r670next_open_composite(T0* a1);
void r670enable_position_table(T670* C);
T6 r670is_equal(T670* C,T0* a1);
void r670on_content(T670* C,T0* a1);
T6 r670se_assigned_from(T0* a1);
void r670on_processing_instruction(T670* C,T0* a1,T0* a2);
void r670_195Pparse_from_stream(T670* C,T0* a1);
void r670on_start_tag(T670* C,T0* a1,T0* a2,T0* a3);
void r670make_from_implementation_event(T670* C,T0* a1);
void r670make_from_implementation(T670* C,T0* a1);
void r670handle_position(T670* C,T0* a1);
void r670on_comment(T670* C,T0* a1);
void r670parse_from_stream(T670* C,T0* a1);
void r670on_end_tag(T670* C,T0* a1,T0* a2);
T6 r670conforms_to(T670* C,T0* a1);
void r670reset(T670* C);
T0* r670twin(T670* C);
T6 r194is_equal(T194* C,T0* a1);
T6 r194se_assigned_from(T0* a1);
T0* r194clone(T0* a1);
void r194make_from_implementation(T194* C,T0* a1);
T6 r194is_correct(T194* C);
T6 r194conforms_to(T194* C,T0* a1);
T0* r194last_error_extended_description(T194* C);
T0* r194twin(T194* C);
T6 r551is_equal(T551* C,T0* a1);
T6 r551se_assigned_from(T0* a1);
void r551make(T551* C);
void r551insert(T551* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r551insert_code(T551* C,T2 a1,T2 a2);
void r551move(T551* C,T2 a1,T2 a2,T2 a3);
T6 r551conforms_to(T551* C,T0* a1);
void r551storage_ensure_capacity(T551* C,T2 a1);
T0* r551twin(T551* C);
T6 r204is_equal(T204* C,T0* a1);
T6 r204has_attribute_by_name(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
void r204_197Pmake_from_implementation(T204* C,T0* a1);
T0* r204attribute_by_name(T204* C,T0* a1);
void r204make_from_implementation(T204* C,T0* a1);
T6 r204equal(T0* a1,T0* a2);
T6 r204conforms_to(T204* C,T0* a1);
T0* r204twin(T204* C);
T6 r204has_element_by_name(T204* C,T0* a1);
T0* r204element_by_name(T204* C,T0* a1);
T6 r204cursor_off(T204* C,T0* a1);
void r722yy_do_action(T722* C,T2 a1);
extern T0*oBC723yytable_template;
extern int fBC723yytable_template;
T0* r722yytable_template(void);
T0* r722empty_ucstring(void);
void r722make_parser_skeleton(T722* C);
T2 r722yy_at_beginning_of_line(T722* C);
void r722fatal_error(T0* a1);
T0* r722yytype1(T0* a1);
T0* r722yytype2(T0* a1);
T0* r722yytype3(T0* a1);
T0* r722yytype4(T0* a1);
void r722handle_found_text(T722* C);
void r722parse(T722* C);
void r722set_input_buffer(T722* C,T0* a1);
T2 r722yy_translate(T722* C,T2 a1);
extern T0*oBC724yy_ec_template;
extern int fBC724yy_ec_template;
T0* r722yy_ec_template(void);
void r722yy_execute_action(T722* C,T2 a1);
extern T0*oBC723yytranslate_template;
extern int fBC723yytranslate_template;
T0* r722yytranslate_template(void);
void r722clear_stacks(T722* C);
extern T0*oBC724yy_def_template;
extern int fBC724yy_def_template;
T0* r722yy_def_template(void);
T3 r722text_item(T722* C,T2 a1);
void r722yy_load_input_buffer(T722* C);
extern T552 oBC723uc_collon;
extern int fBC723uc_collon;
T552 r722uc_collon(void);
extern T0*oBC723yyr1_template;
extern int fBC723yyr1_template;
T0* r722yyr1_template(void);
void r722make_with_buffer(T722* C,T0* a1);
T2 r722yy_null_trans_state(T722* C,T2 a1);
T0* r722position(T722* C);
extern T0*oBC724yy_accept_template;
extern int fBC724yy_accept_template;
T0* r722yy_accept_template(void);
void r722read_token(T722* C);
extern T0*oBC723yyr2_template;
extern int fBC723yyr2_template;
T0* r722yyr2_template(void);
T2 r722yy_previous_state(T722* C);
extern T0*oBC723yypgoto_template;
extern int fBC723yypgoto_template;
T0* r722yypgoto_template(void);
void r722yy_refill_input_buffer(T722* C);
T0* r722yy_fixed_array(T0* a1);
T6 r722conforms_to(T722* C,T0* a1);
extern T0*oBC724yy_meta_template;
extern int fBC724yy_meta_template;
T0* r722yy_meta_template(void);
extern T0*oBC724yy_base_template;
extern int fBC724yy_base_template;
T0* r722yy_base_template(void);
T0* r722twin(T722* C);
T0* r722clone(T0* a1);
T0* r722new_file_buffer(T0* a1);
void r722yy_initialize(T722* C);
void r722reset(T722* C);
T0* r722text(T722* C);
extern T0*oBC724yy_nxt_template;
extern int fBC724yy_nxt_template;
T0* r722yy_nxt_template(void);
void r722parse_from_stream(T722* C,T0* a1);
void r722yy_set_line_column(T722* C);
void r722yy_build_parser_tables(T722* C);
T0* r722split_name_and_prefix(T0* a1);
T6 r722is_equal(T722* C,T0* a1);
void r722report_error(T722* C,T0* a1);
extern T0*oBC723yydefact_template;
extern int fBC723yydefact_template;
T0* r722yydefact_template(void);
extern T0*oBC724yy_chk_template;
extern int fBC724yy_chk_template;
T0* r722yy_chk_template(void);
extern T0*oBC723yycheck_template;
extern int fBC723yycheck_template;
T0* r722yycheck_template(void);
void r722make(T722* C);
T0* r722yyfixed_array(T0* a1);
void r722yy_clear_all(T722* C);
extern T0*oBC723yydefgoto_template;
extern int fBC723yydefgoto_template;
T0* r722yydefgoto_template(void);
void r722yy_set_content(T722* C,T0* a1);
extern T0*oBC723yypact_template;
extern int fBC723yypact_template;
T0* r722yypact_template(void);
void r722set_start_condition(T722* C,T2 a1);
T6 r722se_assigned_from(T0* a1);
void r722yy_build_tables(T722* C);
T6 r65is_equal(T65* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r65command_arguments(void);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T0* r65argument(T2 a1);
T6 r666is_equal(T666* C,T0* a1);
extern T0*oBC666ep_event_fact;
T6 r666se_assigned_from(T0* a1);
void r666make(T666* C);
T6 r666conforms_to(T666* C,T0* a1);
extern T0*oBC666ef_event_fact;
T0* r666twin(T666* C);
void r31report_missing_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
void r31report_no_parser_available_error(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31report_missing_attribute_error(T31* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC33null_output_stream;
extern int fBC33null_output_stream;
T0* r31null_output_stream(void);
void r31report_cannot_write_file_error(T31* C,T0* a1);
void r31make(T31* C);
void r31report_cannot_read_file_error(T31* C,T0* a1);
void r31report_parser_error(T31* C,T0* a1);
T0* r31message(T0* a1);
void r31report_invalid_expression_error(T31* C,T0* a1,T0* a2);
void r31_32Preport_error(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31report_not_xace_file_error(T31* C,T0* a1);
void r31report_wrong_root_element_error(T31* C,T0* a1,T0* a2);
void r31report_unknown_element_error(T31* C,T0* a1,T0* a2,T0* a3);
T0* r31twin(T31* C);
void r31report_error(T31* C,T0* a1);
T6 r575is_expression_true(T575* C,T0* a1);
T6 r575should_strip_element(T575* C,T0* a1,T0* a2);
T6 r575is_equal(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
void r575preprocess_composite(T575* C,T0* a1,T0* a2);
extern T0*oBC191uc_equal;
extern int fBC191uc_equal;
T0* r575uc_equal(void);
T6 r575is_valid_expression(T0* a1);
extern T0*oBC191uc_closing_curly_brace;
extern int fBC191uc_closing_curly_brace;
T0* r575uc_closing_curly_brace(void);
void r575make(T575* C,T0* a1,T0* a2);
extern T0*oBC191uc_unless;
extern int fBC191uc_unless;
T0* r575uc_unless(void);
extern T0*oBC191uc_if;
extern int fBC191uc_if;
T0* r575uc_if(void);
T6 r575conforms_to(T575* C,T0* a1);
extern T0*oBC191uc_opening_curly_brace;
extern int fBC191uc_opening_curly_brace;
T0* r575uc_opening_curly_brace(void);
T0* r575twin(T575* C);
void r575expand_attribute_variables(T575* C,T0* a1);
extern T0*oBC191uc_dollar;
extern int fBC191uc_dollar;
T0* r575uc_dollar(void);
T0* r211split_on_first(T0* a1,T3 a2);
T6 r211is_equal(T211* C,T0* a1);
void r211remove_cluster(T211* C,T0* a1);
T6 r211se_assigned_from(T0* a1);
T0* r211clone(T0* a1);
void r211make_empty(T211* C);
void r211make(T211* C,T0* a1);
void r211set_parent(T211* C,T0* a1);
T6 r211conforms_to(T211* C,T0* a1);
T0* r211twin(T211* C);
T0* r211split_string(T0* a1,T3 a2);
void r211merge_externals(T211* C,T0* a1);
extern T0*oBC134error;
extern int fBC134error;
T0* r134error(void);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
extern T0*oBC134input;
extern int fBC134input;
T0* r134input(void);
extern T0*oBC134output;
extern int fBC134output;
T0* r134output(void);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134twin(T134* C);
void r40raise(T40* C,T0* a1);
T6 r40is_equal(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
extern T0*oBC41developer_exception_name_memory;
void r41raise(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r36is_equal(T36* C,T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T6 r36_px_60(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T6 r581is_equal(T581* C,T0* a1);
T6 r581se_assigned_from(T0* a1);
T6 r581conforms_to(T581* C,T0* a1);
T3 r581to_character(T2 a1);
T0* r581twin(T581* C);
extern T0*oBC547factory;
extern int fBC547factory;
T0* r547factory(void);
T6 r547is_equal(T547* C,T0* a1);
T6 r547se_assigned_from(T0* a1);
T6 r547conforms_to(T547* C,T0* a1);
T0* r547twin(T547* C);
T6 r35is_equal(T35* C,T0* a1);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T6 r710is_equal(T710* C,T0* a1);
T6 r710se_assigned_from(T0* a1);
T6 r710conforms_to(T710* C,T0* a1);
T0* r710twin(T710* C);
void r16process_cluster(T16* C);
T0* r16split_on_first(T0* a1,T3 a2);
T6 r16is_equal(T16* C,T0* a1);
void r16process_options(T16* C);
void r16process_arguments(T16* C);
T6 r16has_next_option_value(T16* C);
T6 r16se_assigned_from(T0* a1);
T0* r16clone(T0* a1);
void r16process_xace_file(T16* C,T0* a1);
T6 r16is_next_option_long_option(T16* C);
extern T0*oBC17Exceptions;
T0* r16Arguments(void);
T0* r16next_option_value(T16* C);
void r16make(T16* C);
void r16process_command(T16* C);
T6 r16is_valid_option_position(T2 a1);
void r16process_system(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16process_define_string(T16* C,T0* a1);
void r16process_output(T16* C,T0* a1);
void r16process_validate(T16* C);
T0* r16next_option(T16* C);
T6 r16has_next_option(T16* C);
T0* r16twin(T16* C);
void r16process_define(T16* C);
T0* r16split_string(T0* a1,T3 a2);
void r16process_compilers(T16* C,T0* a1,T0* a2);
T6 r16match_long_option(T16* C,T0* a1);
void r16consume_option(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
T6 r97is_equal(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
T6 r97is_integer(T0* a1);
T6 r97same_case_insensitive(T0* a1,T0* a2);
T0* r97make(T2 a1);
T6 r97conforms_to(T97* C,T0* a1);
T2 r97case_insensitive_hash_code(T0* a1);
T0* r97twin(T97* C);
T6 r552_px_60(T552* C,T552 a1);
T6 r552_px_62(T552* C,T552 a1);
T6 r608is_equal(T608* C,T0* a1);
T0* r608variable_value(T0* a1);
T6 r608se_assigned_from(T0* a1);
T0* r608get_environment_variable(T0* a1);
T6 r608conforms_to(T608* C,T0* a1);
T0* r608interpreted_string(T0* a1);
T0* r608twin(T608* C);
T2 r577nr_of_following_octets(T3 a1);
T6 r577is_equal(T577* C,T0* a1);
T6 r577se_assigned_from(T0* a1);
void r577read_code(T577* C,T0* a1,T2 a2);
void r577put_code(T2 a1,T0* a2,T2 a3);
void r577read_following_octet(T577* C,T0* a1);
T6 r577conforms_to(T577* C,T0* a1);
T3 r577code_to_character(T2 a1);
T2 r577octet_size(T2 a1);
T0* r577twin(T577* C);
extern T0*oBC577specific;
T6 r577is_leading_octet(T3 a1);
T2 r577read_leading_octet(T577* C,T0* a1,T2 a2);
T6 r709is_equal(T709* C,T0* a1);
T6 r709se_assigned_from(T0* a1);
T0* r709new_event_parser_imp(void);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75_px_60(T75* C,T0* a1);
T0* r75twin(T75* C);
T6 r770is_equal(T770* C,T0* a1);
T552 r770item(T770* C);
T6 r770se_assigned_from(T0* a1);
T6 r770conforms_to(T770* C,T0* a1);
T0* r770twin(T770* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 771
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms103_211;
extern T7*ms135_447851;
extern T7*ms103_322;
extern T7*ms103_298;
extern T7*ms599_54177410;
extern T7*ms103_1300398076;
extern T7*ms16_16036;
extern T7*ms103_1644;
extern T7*ms129_326648287;
extern T7*ms191_77350;
extern T7*ms129_1957581aa;
extern T7*ms191_78002;
extern T7*ms493_0;
extern T7*ms191_9909665;
extern T7*ms723_38;
extern T7*ms723_60;
extern T7*ms723_62;
extern T7*ms129_49483191;
extern T7*ms103_3175;
extern T7*ms191_78263;
extern T7*ms130_168231777;
extern T7*ms191_78490;
extern T7*ms128_1365895512;
extern T7*ms129_2120668389;
extern T7*ms128_1253824715;
extern T7*ms16_1975394;
extern T7*ms128_34;
extern T7*ms127_452889;
extern T7*ms129_1254606809a;
extern T7*ms130_1147;
extern T7*ms191_85591;
extern T7*ms127_2116863196;
extern T7*ms130_145423907a;
extern T7*ms129_408086;
extern T7*ms16_403021;
extern T7*ms191_1289562514;
extern T7*ms16_676;
extern T7*ms16_691;
extern T7*ms135_10;
extern T7*ms127_2104;
extern T7*ms130_232a;
extern T7*ms103_659330894;
extern T7*ms103_93956277;
extern T7*ms127_1644;
extern T7*ms127_1975394a;
extern T7*ms29_1878185725;
extern T7*ms130_2058319081;
extern T7*ms127_214a;
extern T7*ms129_2104;
extern T7*ms127_229a;
extern T7*ms129_1644;
extern T7*ms127_1849679439;
extern T7*ms128_2029061136;
extern T7*ms127_3175;
extern T7*ms129_214a;
extern T7*ms103_431271;
extern T7*ms202_18036;
extern T7*ms191_2185421;
extern T7*ms724_1173251759;
extern T7*ms129_229a;
extern T7*ms16_3301a;
extern T7*ms127_3175aaa;
extern T7*ms130_1840815548;
extern T7*ms16_16036a;
extern T7*ms103_15934;
extern T7*ms129_3175;
extern T7*ms577_336971577;
extern T7*ms191_408086;
extern T7*ms191_1228681540;
extern T7*ms130_144147230;
extern T7*ms577_1684857857;
extern T7*ms129_1975394a;
extern T7*ms128_1090800287;
extern T7*ms128_9909665;
extern T7*ms103_17696;
extern T7*ms127_659330894;
extern T7*ms130_232;
extern T7*ms127_2087910503;
extern T7*ms130_1943945795;
extern T7*ms129_1300398076;
extern T7*ms129_452889a;
extern T7*ms127_452889a;
extern T7*ms191_2032026;
extern T7*ms723_38a;
extern T7*ms127_1978068077;
extern T7*ms723_60a;
extern T7*ms723_62a;
extern T7*ms130_339006862;
extern T7*ms103_10049231;
extern T7*ms130_2057213670;
extern T7*ms191_402346;
extern T7*ms128_16782;
extern T7*ms191_10866961;
extern T7*ms127_2116863196a;
extern T7*ms711_512683247;
extern T7*ms16_881365921a;
extern T7*ms128_17696;
extern T7*ms103_710556862;
extern T7*ms128_48758637;
extern T7*ms127_10208843;
extern T7*ms128_1159034081;
extern T7*ms127_17696a;
extern T7*ms130_1147aa;
extern T7*ms16_0;
extern T7*ms156_10;
extern T7*ms130_716962150;
extern T7*ms18_0;
extern T7*ms127_1957581a;
extern T7*ms128_1566359773;
extern T7*ms130_728778652;
extern T7*ms665_462378139;
extern T7*ms603_454072470;
extern T7*ms191_51843716;
extern T7*ms130_11272528;
extern T7*ms157_10;
extern T7*ms130_2074569081;
extern T7*ms130_902203551;
extern T7*ms129_10208843;
extern T7*ms191_627;
extern T7*ms494_1539961075;
extern T7*ms127_710556862;
extern T7*ms128_452889;
extern T7*ms188_12184;
extern T7*ms127_169452;
extern T7*ms16_2246326;
extern T7*ms128_3175a;
extern T7*ms129_1975394;
extern T7*ms730_5467;
extern T7*ms127_1975394;
extern T7*ms130_6860887;
extern T7*ms127_200;
extern T7*ms127_214;
extern T7*ms19_270;
extern T7*ms191_16821;
extern T7*ms127_229;
extern T7*ms129_1957581a;
extern T7*ms128_1420513890;
extern T7*ms191_16942;
extern T7*ms191_17696;
extern T7*ms103_1885954800;
extern T7*ms128_945472392;
extern T7*ms129_1254606809;
extern T7*ms130_688131499;
extern T7*ms16_881365921aa;
extern T7*ms128_1173002866;
extern T7*ms129_3175aa;
extern T7*ms128_251473637;
extern T7*ms128_50294715;
extern T7*ms130_2058319081a;
extern T7*ms103_1189398351;
extern T7*ms129_2122613;
extern T7*ms130_214679746;
extern T7*ms103_1975394;
extern T7*ms127_2122613;
extern T7*ms129_10031271;
extern T7*ms103_2087910503;
extern T7*ms127_2071896;
extern T7*ms100_1515383187;
extern T7*ms129_659330894;
extern T7*ms130_29282762;
extern T7*ms127_408086;
extern T7*ms127_1254606809a;
extern T7*ms16_391651;
extern T7*ms129_2259966;
extern T7*ms128_194;
extern T7*ms130_1147aaa;
extern T7*ms127_10208843a;
extern T7*ms127_2259966;
extern T7*ms16_438001;
extern T7*ms191_2024949725;
extern T7*ms128_273179090;
extern T7*ms128_440790;
extern T7*ms128_440825;
extern T7*ms602_1179444653;
extern T7*ms727_89510;
extern T7*ms130_759686277;
extern T7*ms130_1284536290;
extern T7*ms127_2120668389;
extern T7*ms129_1957581;
extern T7*ms130_1147a;
extern T7*ms607_988446515;
extern T7*ms128_434665;
extern T7*ms103_2087913448;
extern T7*ms103_1849679439;
extern T7*ms127_1957581;
extern T7*ms130_1147aaaa;
extern T7*ms129_1433293834;
extern T7*ms580_36;
extern T7*ms130_1694763045;
extern T7*ms130_2036724355;
extern T7*ms604_820451542;
extern T7*ms157_447584;
extern T7*ms191_9558536;
extern T7*ms191_1988096;
extern T7*ms128_1555371030;
extern T7*ms130_17715339;
extern T7*ms128_434665a;
extern T7*ms130_848471798;
extern T7*ms129_214;
extern T7*ms129_229;
extern T7*ms16_3301;
extern T7*ms130_1592316470;
extern T7*ms16_11153106;
extern T7*ms16_3653;
extern T7*ms130_1366569951a;
extern T7*ms16_452889;
extern T7*ms103_1957581;
extern T7*ms128_3175;
extern T7*ms128_1975394a;
extern T7*ms129_1849679439;
extern T7*ms191_10208843;
extern T7*ms188_1384826;
extern T7*ms29_1415324896;
extern T7*ms129_710556862;
extern T7*ms16_881365921aaa;
extern T7*ms129_452889;
extern T7*ms491_195717202;
extern T7*ms127_1300398076;
extern T7*ms130_68075515;
extern T7*ms130_1580634761;
extern T7*ms16_676a;
extern T7*ms16_691a;
extern T7*ms128_1254555893;
extern T7*ms191_10559665;
extern T7*ms188_0;
extern T7*ms130_1746542221;
extern T7*ms191_399591;
extern T7*ms129_2087910503;
extern T7*ms130_232aa;
extern T7*ms127_1957581aa;
extern T7*ms191_1975394;
extern T7*ms127_1644a;
extern T7*ms195_40;
extern T7*ms195_41;
extern T7*ms128_171550;
extern T7*ms191_452889;
extern T7*ms130_1122793821;
extern T7*ms128_2094241;
extern T7*ms730_899222;
extern T7*ms606_1214914019;
extern T7*ms127_17696;
extern T7*ms103_1254606809;
extern T7*ms130_711181240;
extern T7*ms129_1978068077;
extern T7*ms130_1147aaaaa;
extern T7*ms130_33314532;
extern T7*ms202_79251;
extern T7*ms103_1205954912;
extern T7*ms128_608082268;
extern T7*ms191_451090;
extern T7*ms129_15934;
extern T7*ms129_10208843a;
extern T7*ms129_1644a;
extern T7*ms16_1687334349;
extern T7*ms130_1250879089;
extern T7*ms33_17323;
extern T7*ms495_1338477769a;
extern T7*ms129_17696;
extern T7*ms18_0a;
extern T7*ms127_3175a;
extern T7*ms103_1288001260;
extern T7*ms16_881365921;
extern T7*ms730_35397;
extern T7*ms128_9751715;
extern T7*ms127_3175aa;
extern T7*ms103_1319327951;
extern T7*ms188_2104;
extern T7*ms130_90563609;
extern T7*ms103_1837939351;
extern T7*ms103_1940534;
extern T7*ms605_229;
extern T7*ms730_36572;
extern T7*ms103_1366344811;
extern T7*ms103_10208843;
extern T7*ms128_1975394;
extern T7*ms103_452889;
extern T7*ms580_125;
extern T7*ms712_10;
extern T7*ms130_1637983727;
extern T7*ms580_303;
extern T7*ms130_151663112;
extern T7*ms129_17696a;
extern T7*ms191_434665;
extern T7*ms129_3175a;
extern T7*ms130_1131165100;
extern T7*ms130_29373882;
extern T7*ms103_1957581a;
extern T7*ms103_9702826;
extern T7*ms717_1606053737;
extern T7*ms127_1254606809;
extern T7*ms128_2002089708;
extern T7*ms130_848471798a;
extern T7*ms130_1366569951;
extern T7*ms103_9702034;
extern T7*ms495_1338477769;
extern T7*ms130_145423907;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma499(int argc,...);
T0* X669new_event_parser_imp(T0*C);
T6 X669is_available(T0*C);
void X29execute(T0*C);
T0* X144item(T0*C);
T6 X144after(T0*C);
void X144forth(T0*C);
void X144start(T0*C);
T2 X145count(T0*C);
T0* X145cursor_item(T0*C,T0* a1);
T6 X145is_empty(T0*C);
T6 X145cursor_after(T0*C,T0* a1);
void X145cursor_forth(T0*C,T0* a1);
void X145cursor_start(T0*C,T0* a1);
T0* X145new_cursor(T0*C);
T0* X541cursor_item(T0*C,T0* a1);
void X541cursor_go_after(T0*C,T0* a1);
T6 X541cursor_after(T0*C,T0* a1);
void X541cursor_forth(T0*C,T0* a1);
void X541cursor_start(T0*C,T0* a1);
T6 X541cursor_off(T0*C,T0* a1);
T552 X553item(T0*C);
T0* X542parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X206parent(T0*C);
T6 X277test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X501clear_all(T0*C,T0* a1);
T0* X501make(T0*C,T2 a1);
T0* X501resize(T0*C,T0* a1,T2 a2);
void X94put_new_line(T0*C);
void X94put_line(T0*C,T0* a1);
void X94put_character(T0*C,T3 a1);
void X94put_string(T0*C,T0* a1);
T0* X183name(T0*C);
T2 X183read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X183read_character(T0*C);
T6 X183end_of_input(T0*C);
T3 X183last_character(T0*C);
void X207force_last(T0*C,T0* a1);
T0* X207new_cursor(T0*C);
void X207remove_at_cursor(T0*C,T0* a1);
T0* X207parent(T0*C);
void X274put(T0*C,T0* a1,T2 a2);
T0* X274item(T0*C,T2 a1);
void X274set_all_with(T0*C,T0* a1);
void X274resize(T0*C,T2 a1);
void X505fill(T0*C);
T0* X544new_cursor(T0*C);
void X544remove_at_cursor(T0*C,T0* a1);
void X544put_last(T0*C,T0* a1);
T0* X544parent(T0*C);
void X41raise(T0*C,T0* a1);
T2 X497count(T0*C);
T2 X497item(T0*C,T2 a1);
T2 X497lower(T0*C);
T0* X298make(T0*C,T2 a1);
T0* X298resize(T0*C,T0* a1,T2 a2);
void X190parse_file(T0*C,T0* a1);
void X500put(T0*C,T0* a1,T2 a2);
T0* X500item(T0*C,T2 a1);
void X500set_all_with(T0*C,T0* a1);
void X500resize(T0*C,T2 a1);
T6 X702cursor_is_last(T0*C,T0* a1);
void X702remove_traversing_cursor(T0*C,T0* a1);
void X702cursor_go_after(T0*C,T0* a1);
void X702add_traversing_cursor(T0*C,T0* a1);
void X702cursor_forth(T0*C,T0* a1);
void X702cursor_start(T0*C,T0* a1);
T6 X702cursor_is_first(T0*C,T0* a1);
T2 X546item_code(T0*C,T2 a1);
void X546insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X546insert_code(T0*C,T2 a1,T2 a2);
T0* X91default_message(T0*C);
void X78generate_cluster(T0*C,T0* a1);
void X78generate_system(T0*C,T0* a1);
T6 T35toT6(T0* source);
T0* T2toT36(T2 source);
T2 T36toT2(T0* source);
T0* T6toT35(T6 source);

#ifdef __cplusplus
}
#endif
