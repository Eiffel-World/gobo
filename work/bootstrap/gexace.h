#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.75 (July 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S252 T252;
typedef struct S694 T694;
typedef struct S712 T712;
typedef struct S458 T458;
typedef struct S430 T430;
typedef struct S667 T667;
typedef struct S421 T421;
typedef struct S88 T88;
typedef struct S130 T130;
typedef struct S594 T594;
typedef struct S509 T509;
typedef struct S651 T651;
typedef struct S590 T590;
typedef struct S556 T556;
typedef struct S363 T363;
typedef struct S539 T539;
typedef struct S639 T639;
typedef struct S208 T208;
typedef struct S166 T166;
typedef struct S629 T629;
typedef struct S334 T334;
typedef struct S197 T197;
typedef struct S498 T498;
typedef int T636;
typedef struct S203 T203;
typedef struct S109 T109;
typedef struct S447 T447;
typedef struct S202 T202;
typedef struct S496 T496;
typedef struct S463 T463;
typedef struct S566 T566;
typedef struct S573 T573;
typedef struct S42 T42;
typedef struct S569 T569;
typedef struct S451 T451;
typedef struct S294 T294;
typedef struct S43 T43;
typedef struct S586 T586;
typedef struct S229 T229;
typedef struct S347 T347;
typedef struct S660 T660;
typedef struct S147 T147;
typedef struct S255 T255;
typedef struct S167 T167;
typedef struct S105 T105;
typedef struct S683 T683;
typedef struct S161 T161;
typedef struct S673 T673;
typedef struct S535 T535;
typedef struct S38 T38;
typedef struct S457 T457;
typedef struct S364 T364;
typedef struct S408 T408;
typedef struct S290 T290;
typedef struct S117 T117;
typedef struct S697 T697;
typedef struct S416 T416;
typedef struct S554 T554;
typedef struct S534 T534;
typedef struct S583 T583;
typedef struct S171 T171;
typedef struct S710 T710;
typedef struct S589 T589;
typedef struct S650 T650;
typedef struct S31 T31;
typedef struct S515 T515;
typedef struct S319 T319;
typedef struct S484 T484;
typedef struct S380 T380;
typedef struct S572 T572;
typedef struct S206 T206;
typedef struct S91 T91;
typedef struct S394 T394;
typedef struct S610 T610;
typedef struct S533 T533;
typedef struct S257 T257;
typedef struct S517 T517;
typedef struct S486 T486;
typedef struct S709 T709;
typedef struct S601 T601;
typedef struct S95 T95;
typedef struct S198 T198;
typedef struct S108 T108;
typedef struct S700 T700;
typedef struct S80 T80;
typedef struct S684 T684;
typedef struct S274 T274;
typedef struct S76 T76;
typedef struct S90 T90;
typedef struct S512 T512;
typedef struct S702 T702;
typedef struct S204 T204;
typedef struct S618 T618;
typedef struct S679 T679;
typedef struct S649 T649;
typedef struct S37 T37;
typedef struct S389 T389;
typedef struct S349 T349;
typedef struct S461 T461;
typedef struct S276 T276;
typedef struct S468 T468;
typedef struct S390 T390;
typedef struct S128 T128;
typedef struct S72 T72;
typedef struct S65 T65;
typedef struct S433 T433;
typedef struct S543 T543;
typedef struct S7 T7;
typedef struct S212 T212;
typedef struct S164 T164;
typedef struct S180 T180;
typedef struct S338 T338;
typedef struct S403 T403;
typedef struct S471 T471;
typedef struct S93 T93;
typedef struct S270 T270;
typedef struct S293 T293;
typedef struct S635 T635;
typedef struct S643 T643;
typedef struct S641 T641;
typedef struct S301 T301;
typedef struct S170 T170;
typedef struct S225 T225;
typedef struct S665 T665;
typedef struct S239 T239;
typedef struct S644 T644;
typedef struct S407 T407;
typedef struct S455 T455;
typedef struct S622 T622;
typedef struct S169 T169;
typedef struct S414 T414;
typedef struct S248 T248;
typedef struct S17 T17;
typedef struct S489 T489;
typedef struct S480 T480;
typedef struct S207 T207;
typedef struct S182 T182;
typedef struct S92 T92;
typedef struct S682 T682;
typedef struct S87 T87;
typedef struct S663 T663;
typedef struct S488 T488;
typedef struct S196 T196;
typedef struct S476 T476;
typedef struct S592 T592;
typedef struct S465 T465;
typedef struct S200 T200;
typedef struct S337 T337;
typedef struct S705 T705;
typedef struct S181 T181;
typedef struct S211 T211;
typedef struct S604 T604;
typedef struct S143 T143;
typedef struct S417 T417;
typedef struct S493 T493;
typedef struct S140 T140;
typedef struct S640 T640;
typedef struct S704 T704;
typedef struct S532 T532;
typedef struct S707 T707;
typedef struct S118 T118;
typedef struct S677 T677;
typedef struct S110 T110;
typedef struct S633 T633;
typedef struct S154 T154;
typedef struct S680 T680;
typedef struct S513 T513;
typedef struct S571 T571;
typedef struct S149 T149;
typedef struct S85 T85;
typedef struct S450 T450;
typedef struct S621 T621;
typedef struct S596 T596;
typedef struct S172 T172;
typedef struct S490 T490;
typedef struct S185 T185;
typedef struct S75 T75;
typedef struct S557 T557;
typedef struct S669 T669;
typedef struct S79 T79;
typedef struct S152 T152;
typedef struct S233 T233;
typedef struct S360 T360;
typedef struct S456 T456;
typedef struct S258 T258;
typedef struct S716 T716;
typedef struct S473 T473;
typedef int T634;
typedef struct S236 T236;
typedef struct S387 T387;
typedef struct S223 T223;
typedef struct S531 T531;
typedef struct S528 T528;
typedef struct S66 T66;
typedef struct S368 T368;
typedef struct S593 T593;
typedef struct S32 T32;
typedef struct S377 T377;
typedef struct S61 T61;
typedef struct S321 T321;

/*C Header Pass 2 :*/
typedef T0**T420;
typedef T0**T296;
typedef T6*T541;
typedef T0**T235;
typedef T0**T519;
typedef T0**T393;
typedef T0**T500;
typedef T0**T475;
typedef T0**T74;
typedef T3*T9;
typedef T0**T625;
typedef T0**T254;
typedef T0**T367;
typedef T0**T340;
typedef T0**T231;
typedef T2*T145;
typedef T0**T454;

/*C Header Pass 3 :*/
extern T636 M636;
struct S493{T2 _i_code;};
int se_cmpT493(T493 o1,T493 o2);
extern T634 M634;

/*C Header Pass 4 :*/
struct S252{Tid id;T254 _storage;T2 _capacity;T2 _upper;};
extern T252 M252;
struct S694{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T694 M694;
struct S712{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T712 M712;
struct S458{Tid id;T2 _line;T2 _column;T0* _filename;};
extern T458 M458;
struct S430{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T430 M430;
struct S667{Tid id;T0* _item;T0* _right;};
extern T667 M667;
struct S421{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T421 M421;
struct S88{Tid id;T0* _item;T0* _right;};
extern T88 M88;
struct S130{Tid id;T0* _item;T0* _right;};
extern T130 M130;
struct S594{Tid id;T0* _event_parser_factory;};
extern T594 M594;
struct S509{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T509 M509;
struct S651{Tid id;T0* _first;T0* _second;};
extern T651 M651;
struct S590{Tid id;T0* _parameters;};
extern T590 M590;
struct S556{Tid id;T0* _class_name;T0* _features;};
extern T556 M556;
struct S363{Tid id;T367 _storage;T2 _capacity;T2 _upper;};
extern T363 M363;
struct S539{Tid id;T541 _storage;T2 _capacity;T2 _upper;};
extern T539 M539;
struct S639{Tid id;T0* _ast_factory;T0* _error_handler;T0* _variables;T0* _xml_parser;T0* _xml_validator;T0* _last_cluster;};
extern T639 M639;
struct S166{Tid id;T0* _ast_factory;T0* _error_handler;T0* _variables;T0* _xml_parser;T0* _xml_validator;T0* _last_universe;};
extern T166 M166;
struct S629{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T629 M629;
struct S334{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T334 M334;
struct S197{Tid id;T0* _clusters;};
extern T197 M197;
struct S498{Tid id;T500 _storage;T2 _capacity;T2 _upper;};
extern T498 M498;
struct S203{Tid id;T0* _has_optimize;T0* _has_require;T0* _has_ensure;T0* _has_invariant;T0* _has_loop;T0* _has_check;T0* _has_debug;T0* _debug_keys;};
extern T203 M203;
struct S109{Tid id;};
extern T109 M109;
struct S208{Tid id;T0* _name;T2 _id;T0* _universe;T0* _named_features;};
extern T208 M208;
struct S447{Tid id;T145 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T447 M447;
struct S202{Tid id;T0* _exported_classes;T0* _include_directories;T0* _link_libraries;};
extern T202 M202;
struct S496{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T496 M496;
struct S463{Tid id;T0* _parents;};
extern T463 M463;
struct S566{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T566 M566;
struct S573{Tid id;T0* _item;T0* _right;};
extern T573 M573;
struct S42{Tid id;};
extern T42 M42;
struct S569{Tid id;T0* _item;T0* _right;};
extern T569 M569;
struct S451{Tid id;};
extern T451 M451;
struct S294{Tid id;};
extern T294 M294;
struct S43{Tid id;};
extern T43 M43;
struct S586{Tid id;T0* _table;};
extern T586 M586;
struct S229{Tid id;T231 _storage;T2 _capacity;T2 _upper;};
extern T229 M229;
struct S347{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T347 M347;
struct S660{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T660 M660;
struct S147{Tid id;};
extern T147 M147;
struct S255{Tid id;};
extern T255 M255;
struct S167{Tid id;T0* _ast_factory;T0* _error_handler;T0* _variables;T0* _xml_parser;T0* _xml_validator;};
extern T167 M167;
struct S105{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T105 M105;
struct S683{Tid id;T0* _first;T0* _second;};
extern T683 M683;
struct S161{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T161 M161;
struct S673{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T673 M673;
struct S535{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T535 M535;
struct S38{Tid id;T2 _item;};
extern T38 M38;
struct S457{Tid id;T0* _type;T0* _renames;T0* _exports;T0* _undefines;T0* _redefines;T0* _selects;};
extern T457 M457;
struct S364{Tid id;};
extern T364 M364;
struct S408{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T408 M408;
struct S290{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T290 M290;
struct S117{Tid id;T0* _first;T0* _second;};
extern T117 M117;
struct S697{Tid id;T0* _item;T0* _right;};
extern T697 M697;
struct S416{Tid id;T420 _storage;T2 _capacity;T2 _upper;};
extern T416 M416;
struct S554{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T554 M554;
struct S534{Tid id;T3 _value;};
extern T534 M534;
struct S583{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T583 M583;
struct S171{Tid id;T8 _item;};
extern T171 M171;
struct S710{Tid id;T0* _parent;T0* _data;};
extern T710 M710;
struct S589{Tid id;T0* _parameters;};
extern T589 M589;
struct S650{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T650 M650;
struct S31{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T31 M31;
struct S515{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T515 M515;
struct S319{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T319 M319;
struct S484{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T484 M484;
struct S380{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T380 M380;
struct S572{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T572 M572;
struct S206{Tid id;};
extern T206 M206;
struct S91{Tid id;T0* _error_handler;};
extern T91 M91;
struct S394{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T394 M394;
struct S610{Tid id;};
extern T610 M610;
struct S533{Tid id;};
extern T533 M533;
struct S257{Tid id;};
extern T257 M257;
struct S517{Tid id;T519 _storage;T2 _capacity;T2 _upper;};
extern T517 M517;
struct S486{Tid id;};
extern T486 M486;
struct S709{Tid id;T0* _implementation;};
extern T709 M709;
struct S601{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T601 M601;
struct S95{Tid id;T0* _defined_values;};
extern T95 M95;
struct S108{Tid id;T0* _system_filename;T0* _error_handler;T0* _variables;};
extern T108 M108;
struct S700{Tid id;T0* _parent;T0* _content;};
extern T700 M700;
struct S80{Tid id;T0* _parameters;};
extern T80 M80;
struct S684{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T684 M684;
struct S274{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T274 M274;
struct S76{Tid id;T0* _system_filename;T0* _error_handler;T0* _generators;T0* _variables;};
extern T76 M76;
struct S90{Tid id;T0* _error_handler;};
extern T90 M90;
struct S512{Tid id;};
extern T512 M512;
struct S702{Tid id;T0* _implementation;};
extern T702 M702;
struct S618{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T618 M618;
struct S679{Tid id;T0* _item;};
extern T679 M679;
struct S649{Tid id;T0* _parameters;};
extern T649 M649;
struct S37{Tid id;T6 _item;};
extern T37 M37;
struct S389{Tid id;T393 _storage;T2 _capacity;T2 _upper;};
extern T389 M389;
struct S349{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T349 M349;
struct S276{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T276 M276;
struct S468{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T468 M468;
struct S390{Tid id;};
extern T390 M390;
struct S128{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T128 M128;
struct S72{Tid id;T74 _storage;T2 _capacity;T2 _upper;};
extern T72 M72;
struct S198{Tid id;T0* _pathname;T0* _excluded;T0* _clusters;};
extern T198 M198;
struct S65{Tid id;T0* _item;T0* _right;};
extern T65 M65;
struct S433{Tid id;T0* _yydefact;T2 _line;T2 _column;T0* _error_handler;T0* _yydefgoto;T0* _yypgoto;T0* _yytable;T0* _yyvs;T0* _yyss;T0* _FIXED_ARRAY_;T2 _yy_start;T2 _yy_line;T2 _yy_column;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_ec;T0* _yy_accept;T0* _yy_state_stack;T0* _filename;T0* _yyr2;T0* _yypact;T0* _yycheck;T0* _input_buffer;T2 _position;T2 _yy_start_state;T2 _yy_position;T0* _yy_base;T6 _create_keyword;T0* _yytranslate;T0* _yyr1;T0* _yy_content;T2 _yy_end;T0* _yy_meta;T0* _universe;T0* _ast_factory;};
extern T433 M433;
struct S543{Tid id;};
extern T543 M543;
struct S212{Tid id;T0* _name;T0* _current_feature;T0* _inherited_features;T0* _current_class;T0* _seeds;};
extern T212 M212;
struct S164{Tid id;T0* _classes;T0* _any_class;T0* _general_class;T0* _none_class;T0* _any_type;T0* _any_parents;T0* _eiffel_parser;T0* _ast_factory;T0* _class_sorter;T0* _feature_flattener;T0* _formal_generic_parameter_sorter;T0* _system_name;T0* _root_class_name;T0* _creation_procedure_name;T0* _options;T0* _clusters;T0* _mounted_clusters;T0* _externals;T0* _error_handler;T0* _variables;};
extern T164 M164;
struct S180{Tid id;T0* _error_handler;T6 _has_error;};
extern T180 M180;
struct S338{Tid id;};
extern T338 M338;
struct S403{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T403 M403;
struct S471{Tid id;};
extern T471 M471;
struct S93{Tid id;T0* _error_handler;};
extern T93 M93;
struct S270{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T270 M270;
struct S293{Tid id;T296 _storage;T2 _capacity;T2 _upper;};
extern T293 M293;
struct S635{Tid id;};
extern T635 M635;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S643{Tid id;T0* _parameters;};
extern T643 M643;
struct S641{Tid id;};
extern T641 M641;
struct S301{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T301 M301;
struct S170{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T170 M170;
struct S225{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T225 M225;
struct S665{Tid id;T0* _item;T0* _right;};
extern T665 M665;
struct S239{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T239 M239;
struct S644{Tid id;T0* _path;T8 _output_stream;T0* _name;};
extern T644 M644;
struct S407{Tid id;T0* _items;T0* _counts;T0* _successors;T0* _indexes;};
extern T407 M407;
struct S455{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T455 M455;
struct S622{Tid id;};
extern T622 M622;
struct S169{Tid id;};
extern T169 M169;
struct S414{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T414 M414;
struct S248{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T248 M248;
struct S17{Tid id;T2 _next_option_position;T0* _commands;T0* _variables;T0* _error_handler;};
extern T17 M17;
struct S489{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;};
extern T489 M489;
struct S461{Tid id;T0* _position;T0* _name;T2 _hash_code;};
extern T461 M461;
struct S480{Tid id;};
extern T480 M480;
struct S207{Tid id;T0* _current_class;T0* _named_features;T0* _seeded_features;T6 _has_flatten_error;T0* _rename_table;T0* _undefine_table;T0* _redefine_table;T0* _select_table;T0* _replicable_features;};
extern T207 M207;
struct S182{Tid id;T0* _namespaces;T0* _implementation;};
extern T182 M182;
struct S92{Tid id;T0* _error_handler;};
extern T92 M92;
struct S682{Tid id;T0* _first;T0* _second;};
extern T682 M682;
struct S87{Tid id;};
extern T87 M87;
struct S663{Tid id;T0* _item;T0* _right;};
extern T663 M663;
struct S488{Tid id;T2 _type;};
extern T488 M488;
struct S476{Tid id;};
extern T476 M476;
struct S592{Tid id;T0* _parameters;};
extern T592 M592;
struct S465{Tid id;T0* _class_name;T0* _base_class;};
extern T465 M465;
struct S200{Tid id;T0* _clusters;};
extern T200 M200;
struct S337{Tid id;T340 _storage;T2 _capacity;T2 _upper;};
extern T337 M337;
struct S705{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T705 M705;
struct S181{Tid id;};
extern T181 M181;
struct S211{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T211 M211;
struct S604{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T604 M604;
struct S143{Tid id;T145 _storage;T2 _capacity;T2 _upper;};
extern T143 M143;
struct S196{Tid id;T0* _i_representation;};
extern T196 M196;
struct S417{Tid id;};
extern T417 M417;
extern T493 M493;
struct S140{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T140 M140;
struct S640{Tid id;};
extern T640 M640;
struct S704{Tid id;T0* _implementation;};
extern T704 M704;
struct S532{Tid id;T2 _last_code;T2 _next_pos;};
extern T532 M532;
struct S707{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T707 M707;
struct S118{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T118 M118;
struct S677{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T677 M677;
struct S110{Tid id;T0* _name;};
extern T110 M110;
struct S204{Tid id;T6 _is_abstract;T0* _name;T0* _pathname;T0* _parent;T0* _subclusters;T0* _mounted_parent;T0* _mounted_subclusters;T0* _options;T0* _externals;};
extern T204 M204;
struct S633{Tid id;};
extern T633 M633;
struct S154{Tid id;T0* _name;};
extern T154 M154;
struct S680{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T680 M680;
struct S513{Tid id;T0* _implementation;};
extern T513 M513;
struct S571{Tid id;T0* _feature_name;T0* _external_name;};
extern T571 M571;
struct S149{Tid id;};
extern T149 M149;
struct S85{Tid id;T74 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T85 M85;
struct S450{Tid id;T454 _storage;T2 _capacity;T2 _upper;};
extern T450 M450;
struct S621{Tid id;T625 _storage;T2 _capacity;T2 _upper;};
extern T621 M621;
struct S596{Tid id;T0* _event_implementation;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;};
extern T596 M596;
struct S172{Tid id;T0* _implementation;};
extern T172 M172;
struct S490{Tid id;T2 _count;T0* _storage;};
extern T490 M490;
struct S185{Tid id;T0* _namespaces;T0* _implementation;};
extern T185 M185;
struct S75{Tid id;T3 _item;};
extern T75 M75;
struct S557{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T557 M557;
struct S669{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T669 M669;
struct S79{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T79 M79;
struct S152{Tid id;};
extern T152 M152;
struct S233{Tid id;T235 _storage;T2 _capacity;T2 _upper;};
extern T233 M233;
struct S360{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T360 M360;
struct S456{Tid id;};
extern T456 M456;
struct S258{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T258 M258;
struct S716{Tid id;T2 _i_code;};
extern T716 M716;
struct S473{Tid id;T475 _storage;T2 _capacity;T2 _upper;};
extern T473 M473;
struct S236{Tid id;};
extern T236 M236;
struct S387{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T387 M387;
struct S223{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T223 M223;
struct S531{Tid id;};
extern T531 M531;
struct S528{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T528 M528;
struct S66{Tid id;T0* _program_name;};
extern T66 M66;
struct S368{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T368 M368;
struct S593{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T593 M593;
struct S32{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;T2 _error_count;};
extern T32 M32;
struct S377{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T377 M377;
struct S61{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T61 M61;
struct S321{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T321 M321;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r420clear_all(T420 C,T2 a1);
T420 r420realloc(T420 C,T2 a1,T2 a2);
void r420set_all_with(T420 C,T0* a1,T2 a2);
T6 r420fast_memcmp(T420 C,T420 a1,T2 a2);
void r420clear(T420 C,T2 a1,T2 a2);
void r420copy_from(T420 C,T420 a1,T2 a2);
void r296clear_all(T296 C,T2 a1);
T296 r296realloc(T296 C,T2 a1,T2 a2);
void r296set_all_with(T296 C,T0* a1,T2 a2);
T6 r296fast_memcmp(T296 C,T296 a1,T2 a2);
void r296clear(T296 C,T2 a1,T2 a2);
void r296copy_from(T296 C,T296 a1,T2 a2);
void r541clear_all(T541 C,T2 a1);
T541 r541realloc(T541 C,T2 a1,T2 a2);
void r541set_all_with(T541 C,T6 a1,T2 a2);
T6 r541fast_memcmp(T541 C,T541 a1,T2 a2);
void r541clear(T541 C,T2 a1,T2 a2);
void r541copy_from(T541 C,T541 a1,T2 a2);
void r235clear_all(T235 C,T2 a1);
T235 r235realloc(T235 C,T2 a1,T2 a2);
void r235set_all_with(T235 C,T0* a1,T2 a2);
T6 r235fast_memcmp(T235 C,T235 a1,T2 a2);
void r235clear(T235 C,T2 a1,T2 a2);
void r235copy_from(T235 C,T235 a1,T2 a2);
void r519clear_all(T519 C,T2 a1);
T519 r519realloc(T519 C,T2 a1,T2 a2);
void r519set_all_with(T519 C,T0* a1,T2 a2);
T6 r519fast_memcmp(T519 C,T519 a1,T2 a2);
void r519clear(T519 C,T2 a1,T2 a2);
void r519copy_from(T519 C,T519 a1,T2 a2);
void r393clear_all(T393 C,T2 a1);
T393 r393realloc(T393 C,T2 a1,T2 a2);
void r393set_all_with(T393 C,T0* a1,T2 a2);
T6 r393fast_memcmp(T393 C,T393 a1,T2 a2);
void r393clear(T393 C,T2 a1,T2 a2);
void r393copy_from(T393 C,T393 a1,T2 a2);
void r500clear_all(T500 C,T2 a1);
T500 r500realloc(T500 C,T2 a1,T2 a2);
void r500set_all_with(T500 C,T0* a1,T2 a2);
T6 r500fast_memcmp(T500 C,T500 a1,T2 a2);
void r500clear(T500 C,T2 a1,T2 a2);
void r500copy_from(T500 C,T500 a1,T2 a2);
void r475clear_all(T475 C,T2 a1);
T475 r475realloc(T475 C,T2 a1,T2 a2);
void r475set_all_with(T475 C,T0* a1,T2 a2);
T6 r475fast_memcmp(T475 C,T475 a1,T2 a2);
void r475clear(T475 C,T2 a1,T2 a2);
void r475copy_from(T475 C,T475 a1,T2 a2);
void r74clear_all(T74 C,T2 a1);
T74 r74realloc(T74 C,T2 a1,T2 a2);
T6 r74fast_memcmp(T74 C,T74 a1,T2 a2);
void r74set_all_with(T74 C,T0* a1,T2 a2);
void r74clear(T74 C,T2 a1,T2 a2);
void r74copy_from(T74 C,T74 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9move(T9 C,T2 a1,T2 a2,T2 a3);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r625clear_all(T625 C,T2 a1);
T625 r625realloc(T625 C,T2 a1,T2 a2);
void r625set_all_with(T625 C,T0* a1,T2 a2);
T6 r625fast_memcmp(T625 C,T625 a1,T2 a2);
void r625clear(T625 C,T2 a1,T2 a2);
void r625copy_from(T625 C,T625 a1,T2 a2);
void r254clear_all(T254 C,T2 a1);
T254 r254realloc(T254 C,T2 a1,T2 a2);
void r254set_all_with(T254 C,T0* a1,T2 a2);
T6 r254fast_memcmp(T254 C,T254 a1,T2 a2);
void r254clear(T254 C,T2 a1,T2 a2);
void r254copy_from(T254 C,T254 a1,T2 a2);
void r367clear_all(T367 C,T2 a1);
T367 r367realloc(T367 C,T2 a1,T2 a2);
void r367set_all_with(T367 C,T0* a1,T2 a2);
T6 r367fast_memcmp(T367 C,T367 a1,T2 a2);
void r367clear(T367 C,T2 a1,T2 a2);
void r367copy_from(T367 C,T367 a1,T2 a2);
void r340clear_all(T340 C,T2 a1);
T340 r340realloc(T340 C,T2 a1,T2 a2);
void r340set_all_with(T340 C,T0* a1,T2 a2);
T6 r340fast_memcmp(T340 C,T340 a1,T2 a2);
void r340clear(T340 C,T2 a1,T2 a2);
void r340copy_from(T340 C,T340 a1,T2 a2);
void r231clear_all(T231 C,T2 a1);
T231 r231realloc(T231 C,T2 a1,T2 a2);
void r231set_all_with(T231 C,T0* a1,T2 a2);
T6 r231fast_memcmp(T231 C,T231 a1,T2 a2);
void r231clear(T231 C,T2 a1,T2 a2);
void r231copy_from(T231 C,T231 a1,T2 a2);
void r145clear_all(T145 C,T2 a1);
T145 r145realloc(T145 C,T2 a1,T2 a2);
void r145move(T145 C,T2 a1,T2 a2,T2 a3);
T6 r145fast_memcmp(T145 C,T145 a1,T2 a2);
void r145set_all_with(T145 C,T2 a1,T2 a2);
void r145clear(T145 C,T2 a1,T2 a2);
void r145copy_from(T145 C,T145 a1,T2 a2);
void r454clear_all(T454 C,T2 a1);
T454 r454realloc(T454 C,T2 a1,T2 a2);
void r454set_all_with(T454 C,T0* a1,T2 a2);
T6 r454fast_memcmp(T454 C,T454 a1,T2 a2);
void r454clear(T454 C,T2 a1,T2 a2);
void r454copy_from(T454 C,T454 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7prepend(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r252copy(T252* C,T0* a1);
T6 r252is_equal(T252* C,T0* a1);
T6 r252se_assigned_from(T0* a1);
void r252make(T252* C,T2 a1);
T6 r252conforms_to(T252* C,T0* a1);
void r252resize(T252* C,T2 a1);
T0* r252twin(T252* C);
void r363copy(T363* C,T0* a1);
T6 r363is_equal(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
void r363make(T363* C,T2 a1);
T6 r363conforms_to(T363* C,T0* a1);
void r363resize(T363* C,T2 a1);
T0* r363twin(T363* C);
void r539copy(T539* C,T0* a1);
T6 r539is_equal(T539* C,T0* a1);
T6 r539se_assigned_from(T0* a1);
void r539make(T539* C,T2 a1);
T6 r539conforms_to(T539* C,T0* a1);
void r539resize(T539* C,T2 a1);
T0* r539twin(T539* C);
void r498copy(T498* C,T0* a1);
T6 r498is_equal(T498* C,T0* a1);
T6 r498se_assigned_from(T0* a1);
void r498make(T498* C,T2 a1);
T6 r498conforms_to(T498* C,T0* a1);
void r498resize(T498* C,T2 a1);
T0* r498twin(T498* C);
void r447copy(T447* C,T0* a1);
T2 r447count(T447* C);
T6 r447is_equal(T447* C,T0* a1);
T2 r447item(T447* C,T2 a1);
T6 r447se_assigned_from(T0* a1);
void r447make(T447* C,T2 a1,T2 a2);
T6 r447conforms_to(T447* C,T0* a1);
void r447resize(T447* C,T2 a1,T2 a2);
T0* r447twin(T447* C);
void r229copy(T229* C,T0* a1);
T6 r229is_equal(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
void r229make(T229* C,T2 a1);
T6 r229conforms_to(T229* C,T0* a1);
void r229resize(T229* C,T2 a1);
T0* r229twin(T229* C);
void r416copy(T416* C,T0* a1);
T6 r416is_equal(T416* C,T0* a1);
T6 r416se_assigned_from(T0* a1);
void r416make(T416* C,T2 a1);
T6 r416conforms_to(T416* C,T0* a1);
void r416resize(T416* C,T2 a1);
T0* r416twin(T416* C);
void r517copy(T517* C,T0* a1);
T6 r517is_equal(T517* C,T0* a1);
T6 r517se_assigned_from(T0* a1);
void r517make(T517* C,T2 a1);
T6 r517conforms_to(T517* C,T0* a1);
void r517resize(T517* C,T2 a1);
T0* r517twin(T517* C);
void r389copy(T389* C,T0* a1);
T6 r389is_equal(T389* C,T0* a1);
T6 r389se_assigned_from(T0* a1);
void r389make(T389* C,T2 a1);
T6 r389conforms_to(T389* C,T0* a1);
void r389resize(T389* C,T2 a1);
T0* r389twin(T389* C);
void r72copy(T72* C,T0* a1);
T6 r72is_equal(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r293copy(T293* C,T0* a1);
T6 r293is_equal(T293* C,T0* a1);
T6 r293se_assigned_from(T0* a1);
void r293make(T293* C,T2 a1);
T6 r293conforms_to(T293* C,T0* a1);
void r293resize(T293* C,T2 a1);
T0* r293twin(T293* C);
void r337copy(T337* C,T0* a1);
T6 r337is_equal(T337* C,T0* a1);
T6 r337se_assigned_from(T0* a1);
void r337make(T337* C,T2 a1);
T6 r337conforms_to(T337* C,T0* a1);
void r337resize(T337* C,T2 a1);
T0* r337twin(T337* C);
void r143copy(T143* C,T0* a1);
T6 r143is_equal(T143* C,T0* a1);
T6 r143se_assigned_from(T0* a1);
void r143make(T143* C,T2 a1);
T6 r143conforms_to(T143* C,T0* a1);
void r143resize(T143* C,T2 a1);
T0* r143twin(T143* C);
void r143with_capacity(T143* C,T2 a1);
void r143from_collection(T143* C,T0* a1);
void r85copy(T85* C,T0* a1);
T2 r85count(T85* C);
T6 r85is_equal(T85* C,T0* a1);
T0* r85item(T85* C,T2 a1);
T6 r85valid_index(T85* C,T2 a1);
T6 r85se_assigned_from(T0* a1);
void r85make(T85* C,T2 a1,T2 a2);
T6 r85conforms_to(T85* C,T0* a1);
T0* r85twin(T85* C);
void r450copy(T450* C,T0* a1);
T2 r450count(T450* C);
T6 r450is_equal(T450* C,T0* a1);
T0* r450item(T450* C,T2 a1);
T6 r450se_assigned_from(T0* a1);
void r450make(T450* C,T2 a1);
T6 r450conforms_to(T450* C,T0* a1);
void r450resize(T450* C,T2 a1);
T0* r450twin(T450* C);
void r621copy(T621* C,T0* a1);
T6 r621is_equal(T621* C,T0* a1);
T6 r621se_assigned_from(T0* a1);
void r621make(T621* C,T2 a1);
T6 r621conforms_to(T621* C,T0* a1);
void r621resize(T621* C,T2 a1);
T0* r621twin(T621* C);
void r233copy(T233* C,T0* a1);
T2 r233count(T233* C);
T6 r233is_equal(T233* C,T0* a1);
T0* r233item(T233* C,T2 a1);
T6 r233se_assigned_from(T0* a1);
void r233make(T233* C,T2 a1);
T6 r233conforms_to(T233* C,T0* a1);
void r233resize(T233* C,T2 a1);
T0* r233twin(T233* C);
void r473copy(T473* C,T0* a1);
T6 r473is_equal(T473* C,T0* a1);
T6 r473se_assigned_from(T0* a1);
void r473make(T473* C,T2 a1);
T6 r473conforms_to(T473* C,T0* a1);
void r473resize(T473* C,T2 a1);
T0* r473twin(T473* C);
void r694copy(T694* C,T0* a1);
void r694set(T694* C,T0* a1,T6 a2,T6 a3);
T6 r694is_equal(T694* C,T0* a1);
T6 r694same_position(T694* C,T0* a1);
T6 r694se_assigned_from(T0* a1);
T6 r694same_type(T694* C,T0* a1);
void r694make(T694* C,T0* a1);
T6 r694conforms_to(T694* C,T0* a1);
void r694set_after(T694* C);
T0* r694twin(T694* C);
void r430copy(T430* C,T0* a1);
T6 r430is_equal(T430* C,T0* a1);
T6 r430same_position(T430* C,T0* a1);
T6 r430se_assigned_from(T0* a1);
T6 r430same_type(T430* C,T0* a1);
T6 r430off(T430* C);
T6 r430conforms_to(T430* C,T0* a1);
T0* r430twin(T430* C);
T6 r667is_equal(T667* C,T0* a1);
T6 r667se_assigned_from(T0* a1);
T6 r667conforms_to(T667* C,T0* a1);
T0* r667twin(T667* C);
void r421copy(T421* C,T0* a1);
T6 r421is_equal(T421* C,T0* a1);
void r421remove_traversing_cursor(T421* C,T0* a1);
void r421move_all_cursors_after(T421* C);
void r421add_traversing_cursor(T421* C,T0* a1);
T6 r421se_assigned_from(T0* a1);
T0* r421clone(T0* a1);
T6 r421cursor_before(T0* a1);
T6 r421same_type(T421* C,T0* a1);
void r421make(T421* C,T2 a1);
T6 r421cursor_after(T0* a1);
T6 r421conforms_to(T421* C,T0* a1);
T6 r421cursor_same_position(T0* a1,T0* a2);
T0* r421twin(T421* C);
T0* r421new_cursor(T421* C);
T6 r421cursor_off(T0* a1);
T6 r88is_equal(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
T0* r88twin(T88* C);
T6 r130is_equal(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130twin(T130* C);
void r509copy(T509* C,T0* a1);
T6 r509is_equal(T509* C,T0* a1);
T0* r509item(T509* C);
T6 r509same_position(T509* C,T0* a1);
T6 r509se_assigned_from(T0* a1);
T6 r509after(T509* C);
T6 r509same_type(T509* C,T0* a1);
T2 r509index(T509* C);
T6 r509off(T509* C);
T6 r509conforms_to(T509* C,T0* a1);
T0* r509twin(T509* C);
T6 r651is_equal(T651* C,T0* a1);
T6 r651se_assigned_from(T0* a1);
void r651make(T651* C,T0* a1,T0* a2);
T6 r651conforms_to(T651* C,T0* a1);
T0* r651twin(T651* C);
void r629copy(T629* C,T0* a1);
void r629set(T629* C,T0* a1,T6 a2,T6 a3);
T6 r629is_equal(T629* C,T0* a1);
T6 r629same_position(T629* C,T0* a1);
T6 r629se_assigned_from(T0* a1);
T6 r629same_type(T629* C,T0* a1);
void r629make(T629* C,T0* a1);
void r629forth(T629* C);
T6 r629conforms_to(T629* C,T0* a1);
void r629start(T629* C);
void r629go_after(T629* C);
void r629set_after(T629* C);
T0* r629twin(T629* C);
void r334copy(T334* C,T0* a1);
T6 r334is_equal(T334* C,T0* a1);
T6 r334same_position(T334* C,T0* a1);
T6 r334se_assigned_from(T0* a1);
T6 r334same_type(T334* C,T0* a1);
void r334make(T334* C,T0* a1);
T6 r334off(T334* C);
T6 r334conforms_to(T334* C,T0* a1);
T0* r334twin(T334* C);
T2 r496new_capacity(T2 a1);
void r496copy(T496* C,T0* a1);
void r496clear_items(T496* C,T2 a1,T2 a2);
T6 r496extendible(T496* C,T2 a1);
T0* r496cursor_item(T496* C,T0* a1);
T6 r496is_equal(T496* C,T0* a1);
void r496remove_traversing_cursor(T496* C,T0* a1);
void r496move_all_cursors_after(T496* C);
void r496add_traversing_cursor(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
T0* r496clone(T0* a1);
void r496move_left(T496* C,T2 a1,T2 a2);
T6 r496cursor_before(T0* a1);
T6 r496same_type(T496* C,T0* a1);
void r496make(T496* C,T2 a1);
void r496remove(T496* C,T2 a1);
void r496move_cursors_left(T496* C,T2 a1);
void r496remove_last(T496* C);
T6 r496cursor_after(T0* a1);
T6 r496conforms_to(T496* C,T0* a1);
T2 r496cursor_index(T496* C,T0* a1);
void r496cursor_forth(T496* C,T0* a1);
void r496resize(T496* C,T2 a1);
T6 r496cursor_same_position(T0* a1,T0* a2);
void r496move_last_cursors_after(T496* C);
void r496delete(T496* C,T0* a1);
void r496cursor_start(T496* C,T0* a1);
T0* r496twin(T496* C);
void r496force_last(T496* C,T0* a1);
T0* r496new_cursor(T496* C);
void r496put_last(T496* C,T0* a1);
T6 r496cursor_off(T0* a1);
void r566copy(T566* C,T0* a1);
void r566set(T566* C,T0* a1,T6 a2,T6 a3);
T6 r566is_equal(T566* C,T0* a1);
T6 r566same_position(T566* C,T0* a1);
T6 r566se_assigned_from(T0* a1);
T6 r566same_type(T566* C,T0* a1);
void r566make(T566* C,T0* a1);
T6 r566conforms_to(T566* C,T0* a1);
void r566set_after(T566* C);
T0* r566twin(T566* C);
T6 r573is_equal(T573* C,T0* a1);
T6 r573se_assigned_from(T0* a1);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
T6 r569is_equal(T569* C,T0* a1);
T6 r569se_assigned_from(T0* a1);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569twin(T569* C);
void r451clear_all(T0* a1);
T6 r451is_equal(T451* C,T0* a1);
T6 r451se_assigned_from(T0* a1);
T0* r451make(T2 a1);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451resize(T0* a1,T2 a2);
T0* r451twin(T451* C);
T6 r294is_equal(T294* C,T0* a1);
T6 r294se_assigned_from(T0* a1);
T0* r294make(T2 a1);
T6 r294conforms_to(T294* C,T0* a1);
T0* r294resize(T0* a1,T2 a2);
T0* r294twin(T294* C);
T6 r347is_equal(T347* C,T0* a1);
T6 r347se_assigned_from(T0* a1);
void r347make(T347* C,T2 a1);
T6 r347conforms_to(T347* C,T0* a1);
T0* r347twin(T347* C);
void r660copy(T660* C,T0* a1);
T6 r660is_equal(T660* C,T0* a1);
T6 r660same_position(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
T6 r660same_type(T660* C,T0* a1);
void r660make(T660* C,T0* a1);
T6 r660conforms_to(T660* C,T0* a1);
void r660set_after(T660* C);
T0* r660twin(T660* C);
T6 r147is_equal(T147* C,T0* a1);
T6 r147se_assigned_from(T0* a1);
T0* r147to_fixed_array(T0* a1);
T0* r147make(T2 a1);
T0* r147make_from_array(T0* a1);
T6 r147conforms_to(T147* C,T0* a1);
T0* r147resize(T0* a1,T2 a2);
T0* r147twin(T147* C);
void r255clear_all(T0* a1);
T6 r255is_equal(T255* C,T0* a1);
T6 r255se_assigned_from(T0* a1);
T0* r255make(T2 a1);
T6 r255conforms_to(T255* C,T0* a1);
T0* r255resize(T0* a1,T2 a2);
T0* r255twin(T255* C);
void r105copy(T105* C,T0* a1);
void r105set(T105* C,T0* a1,T6 a2,T6 a3);
T6 r105is_equal(T105* C,T0* a1);
T6 r105same_position(T105* C,T0* a1);
T6 r105se_assigned_from(T0* a1);
T6 r105same_type(T105* C,T0* a1);
void r105make(T105* C,T0* a1);
T6 r105conforms_to(T105* C,T0* a1);
void r105set_after(T105* C);
T0* r105twin(T105* C);
T6 r683is_equal(T683* C,T0* a1);
T6 r683se_assigned_from(T0* a1);
void r683make(T683* C,T0* a1,T0* a2);
T6 r683conforms_to(T683* C,T0* a1);
T0* r683twin(T683* C);
void r161copy(T161* C,T0* a1);
T6 r161is_equal(T161* C,T0* a1);
T0* r161item(T161* C);
T6 r161same_position(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
T6 r161after(T161* C);
T6 r161same_type(T161* C,T0* a1);
void r161make(T161* C,T0* a1);
T6 r161off(T161* C);
T6 r161conforms_to(T161* C,T0* a1);
T0* r161twin(T161* C);
T2 r535new_capacity(T2 a1);
void r535copy(T535* C,T0* a1);
void r535force(T535* C,T6 a1,T0* a2);
void r535make_clashes(T535* C,T2 a1);
void r535search_position(T535* C,T0* a1);
T6 r535is_equal(T535* C,T0* a1);
void r535remove_traversing_cursor(T535* C,T0* a1);
void r535clone_slots(T535* C);
extern T0*oBC134FIXED_INTEGER_ARRAY_;
void r535keys_resize(T535* C,T2 a1);
T6 r535item(T535* C,T0* a1);
void r535clone_clashes(T535* C);
void r535move_all_cursors_after(T535* C);
void r535make_items(T535* C,T2 a1);
void r535add_traversing_cursor(T535* C,T0* a1);
T6 r535se_assigned_from(T0* a1);
T0* r535clone(T0* a1);
T6 r535same_type(T535* C,T0* a1);
void r535make(T535* C,T2 a1);
void r535clone_items(T535* C);
T6 r535conforms_to(T535* C,T0* a1);
T6 r535has(T535* C,T0* a1);
void r535make_keys(T535* C,T2 a1);
T2 r535hash_position(T535* C,T0* a1);
void r535items_resize(T535* C,T2 a1);
void r535clone_keys(T535* C);
void r535make_with_equality_testers(T535* C,T2 a1,T0* a2,T0* a3);
void r535resize(T535* C,T2 a1);
T6 r535cursor_same_position(T0* a1,T0* a2);
void r535clashes_resize(T535* C,T2 a1);
void r535slots_resize(T535* C,T2 a1);
T0* r535twin(T535* C);
T0* r535new_cursor(T535* C);
void r535make_slots(T535* C,T2 a1);
T2 r535new_modulus(T2 a1);
T6 r535cursor_off(T0* a1);
T6 r364is_equal(T364* C,T0* a1);
T6 r364se_assigned_from(T0* a1);
T0* r364make(T2 a1);
T6 r364conforms_to(T364* C,T0* a1);
T0* r364resize(T0* a1,T2 a2);
T0* r364twin(T364* C);
void r408copy(T408* C,T0* a1);
void r408make_clashes(T408* C,T2 a1);
void r408search_position(T408* C,T0* a1);
T6 r408is_equal(T408* C,T0* a1);
void r408remove_traversing_cursor(T408* C,T0* a1);
void r408clone_slots(T408* C);
T2 r408item(T408* C,T0* a1);
void r408clone_clashes(T408* C);
void r408move_all_cursors_after(T408* C);
void r408make_items(T408* C,T2 a1);
void r408add_traversing_cursor(T408* C,T0* a1);
T6 r408se_assigned_from(T0* a1);
T0* r408clone(T0* a1);
T6 r408same_type(T408* C,T0* a1);
void r408clone_items(T408* C);
T6 r408conforms_to(T408* C,T0* a1);
T6 r408has(T408* C,T0* a1);
void r408make_keys(T408* C,T2 a1);
T2 r408hash_position(T408* C,T0* a1);
void r408clone_keys(T408* C);
void r408make_with_equality_testers(T408* C,T2 a1,T0* a2,T0* a3);
T6 r408cursor_same_position(T0* a1,T0* a2);
T0* r408twin(T408* C);
T0* r408new_cursor(T408* C);
void r408make_slots(T408* C,T2 a1);
T2 r408new_modulus(T2 a1);
T6 r408cursor_off(T0* a1);
void r290copy(T290* C,T0* a1);
T6 r290is_equal(T290* C,T0* a1);
T6 r290same_position(T290* C,T0* a1);
T6 r290se_assigned_from(T0* a1);
T6 r290same_type(T290* C,T0* a1);
void r290make(T290* C,T0* a1);
T6 r290off(T290* C);
T6 r290conforms_to(T290* C,T0* a1);
T0* r290twin(T290* C);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T0* a1,T0* a2);
T6 r117conforms_to(T117* C,T0* a1);
T0* r117twin(T117* C);
T6 r697is_equal(T697* C,T0* a1);
T6 r697se_assigned_from(T0* a1);
T6 r697conforms_to(T697* C,T0* a1);
T0* r697twin(T697* C);
void r554copy(T554* C,T0* a1);
T6 r554is_equal(T554* C,T0* a1);
T6 r554same_position(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
T6 r554same_type(T554* C,T0* a1);
void r554make(T554* C,T0* a1);
T6 r554off(T554* C);
T6 r554conforms_to(T554* C,T0* a1);
T0* r554twin(T554* C);
void r583copy(T583* C,T0* a1);
void r583set(T583* C,T0* a1,T6 a2,T6 a3);
T6 r583is_equal(T583* C,T0* a1);
T6 r583same_position(T583* C,T0* a1);
T6 r583se_assigned_from(T0* a1);
T6 r583is_last(T583* C);
T6 r583same_type(T583* C,T0* a1);
void r583make(T583* C,T0* a1);
T6 r583conforms_to(T583* C,T0* a1);
void r583set_after(T583* C);
T0* r583twin(T583* C);
void r650copy(T650* C,T0* a1);
T6 r650is_equal(T650* C,T0* a1);
void r650remove_traversing_cursor(T650* C,T0* a1);
void r650move_all_cursors_after(T650* C);
void r650add_traversing_cursor(T650* C,T0* a1);
T6 r650se_assigned_from(T0* a1);
T6 r650same_type(T650* C,T0* a1);
void r650make(T650* C);
T6 r650conforms_to(T650* C,T0* a1);
T0* r650twin(T650* C);
T0* r650new_cursor(T650* C);
void r650put_last(T650* C,T0* a1);
void r31copy(T31* C,T0* a1);
void r31set(T31* C,T0* a1,T6 a2,T6 a3);
T6 r31is_equal(T31* C,T0* a1);
T6 r31same_position(T31* C,T0* a1);
T6 r31se_assigned_from(T0* a1);
T6 r31same_type(T31* C,T0* a1);
void r31make(T31* C,T0* a1);
T6 r31conforms_to(T31* C,T0* a1);
void r31set_after(T31* C);
T0* r31twin(T31* C);
T2 r515new_capacity(T2 a1);
void r515copy(T515* C,T0* a1);
T6 r515extendible(T515* C,T2 a1);
T6 r515is_equal(T515* C,T0* a1);
void r515remove_traversing_cursor(T515* C,T0* a1);
void r515move_all_cursors_after(T515* C);
void r515add_traversing_cursor(T515* C,T0* a1);
T6 r515se_assigned_from(T0* a1);
T0* r515clone(T0* a1);
T6 r515cursor_before(T0* a1);
T6 r515same_type(T515* C,T0* a1);
void r515make(T515* C,T2 a1);
T6 r515cursor_after(T0* a1);
T6 r515conforms_to(T515* C,T0* a1);
void r515resize(T515* C,T2 a1);
T6 r515cursor_same_position(T0* a1,T0* a2);
T0* r515twin(T515* C);
void r515force_last(T515* C,T0* a1);
T0* r515new_cursor(T515* C);
void r515put_last(T515* C,T0* a1);
T6 r515cursor_off(T0* a1);
void r319copy(T319* C,T0* a1);
T6 r319is_equal(T319* C,T0* a1);
T6 r319same_position(T319* C,T0* a1);
T6 r319se_assigned_from(T0* a1);
T6 r319same_type(T319* C,T0* a1);
void r319make(T319* C,T0* a1);
T6 r319off(T319* C);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
void r484copy(T484* C,T0* a1);
T6 r484is_equal(T484* C,T0* a1);
T6 r484same_position(T484* C,T0* a1);
T6 r484se_assigned_from(T0* a1);
T6 r484same_type(T484* C,T0* a1);
void r484make(T484* C,T0* a1);
T6 r484off(T484* C);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
void r380copy(T380* C,T0* a1);
void r380make_clashes(T380* C,T2 a1);
void r380search_position(T380* C,T0* a1);
T6 r380is_equal(T380* C,T0* a1);
void r380remove_traversing_cursor(T380* C,T0* a1);
void r380clone_slots(T380* C);
T2 r380item(T380* C,T0* a1);
void r380clone_clashes(T380* C);
void r380move_all_cursors_after(T380* C);
void r380make_items(T380* C,T2 a1);
void r380add_traversing_cursor(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
T0* r380clone(T0* a1);
T6 r380same_type(T380* C,T0* a1);
void r380clone_items(T380* C);
T6 r380conforms_to(T380* C,T0* a1);
T6 r380has(T380* C,T0* a1);
void r380make_keys(T380* C,T2 a1);
T2 r380hash_position(T380* C,T0* a1);
void r380clone_keys(T380* C);
void r380make_with_equality_testers(T380* C,T2 a1,T0* a2,T0* a3);
T6 r380cursor_same_position(T0* a1,T0* a2);
T0* r380twin(T380* C);
T0* r380new_cursor(T380* C);
void r380make_slots(T380* C,T2 a1);
T2 r380new_modulus(T2 a1);
T6 r380cursor_off(T0* a1);
void r572copy(T572* C,T0* a1);
T6 r572cursor_is_last(T572* C,T0* a1);
T6 r572is_equal(T572* C,T0* a1);
void r572remove_traversing_cursor(T572* C,T0* a1);
void r572move_all_cursors_after(T572* C);
void r572add_traversing_cursor(T572* C,T0* a1);
T6 r572se_assigned_from(T0* a1);
T6 r572same_type(T572* C,T0* a1);
void r572make(T572* C);
T6 r572conforms_to(T572* C,T0* a1);
void r572cursor_forth(T572* C,T0* a1);
void r572cursor_start(T572* C,T0* a1);
T0* r572twin(T572* C);
void r572force_last(T572* C,T0* a1);
T0* r572new_cursor(T572* C);
T6 r572cursor_off(T0* a1);
void r394copy(T394* C,T0* a1);
T6 r394is_equal(T394* C,T0* a1);
void r394remove_traversing_cursor(T394* C,T0* a1);
void r394move_all_cursors_after(T394* C);
void r394add_traversing_cursor(T394* C,T0* a1);
T6 r394se_assigned_from(T0* a1);
T0* r394clone(T0* a1);
T6 r394cursor_before(T0* a1);
T6 r394same_type(T394* C,T0* a1);
void r394make(T394* C,T2 a1);
T6 r394cursor_after(T0* a1);
T6 r394conforms_to(T394* C,T0* a1);
T6 r394cursor_same_position(T0* a1,T0* a2);
T0* r394twin(T394* C);
T0* r394new_cursor(T394* C);
T6 r394cursor_off(T0* a1);
T6 r610is_equal(T610* C,T0* a1);
T6 r610se_assigned_from(T0* a1);
T6 r610conforms_to(T610* C,T0* a1);
T6 r610test(T0* a1,T0* a2);
T0* r610twin(T610* C);
T6 r257is_equal(T257* C,T0* a1);
T6 r257se_assigned_from(T0* a1);
T0* r257make(T2 a1);
T6 r257conforms_to(T257* C,T0* a1);
T0* r257resize(T0* a1,T2 a2);
T0* r257twin(T257* C);
void r684copy(T684* C,T0* a1);
T0* r684cursor_item(T0* a1);
T6 r684is_equal(T684* C,T0* a1);
void r684remove_traversing_cursor(T684* C,T0* a1);
void r684move_all_cursors_after(T684* C);
void r684add_traversing_cursor(T684* C,T0* a1);
T6 r684se_assigned_from(T0* a1);
T6 r684cursor_before(T0* a1);
T6 r684same_type(T684* C,T0* a1);
void r684make(T684* C);
T6 r684cursor_after(T0* a1);
T6 r684conforms_to(T684* C,T0* a1);
void r684cursor_forth(T684* C,T0* a1);
void r684cursor_start(T684* C,T0* a1);
T0* r684twin(T684* C);
T0* r684new_cursor(T684* C);
void r684put_last(T684* C,T0* a1);
T6 r684cursor_off(T0* a1);
void r274copy(T274* C,T0* a1);
T6 r274is_equal(T274* C,T0* a1);
T6 r274same_position(T274* C,T0* a1);
T6 r274se_assigned_from(T0* a1);
T6 r274same_type(T274* C,T0* a1);
void r274make(T274* C,T0* a1);
T6 r274off(T274* C);
T6 r274conforms_to(T274* C,T0* a1);
T0* r274twin(T274* C);
T6 r512is_equal(T512* C,T0* a1);
T6 r512se_assigned_from(T0* a1);
T0* r512make(T2 a1);
T6 r512conforms_to(T512* C,T0* a1);
T0* r512resize(T0* a1,T2 a2);
T0* r512twin(T512* C);
void r618copy(T618* C,T0* a1);
T6 r618is_equal(T618* C,T0* a1);
T6 r618same_position(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
T6 r618same_type(T618* C,T0* a1);
void r618make(T618* C,T0* a1);
T6 r618off(T618* C);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T6 r679is_equal(T679* C,T0* a1);
T6 r679se_assigned_from(T0* a1);
T6 r679conforms_to(T679* C,T0* a1);
T0* r679twin(T679* C);
void r349copy(T349* C,T0* a1);
T6 r349is_equal(T349* C,T0* a1);
void r349remove_traversing_cursor(T349* C,T0* a1);
void r349move_all_cursors_after(T349* C);
void r349add_traversing_cursor(T349* C,T0* a1);
T6 r349se_assigned_from(T0* a1);
T0* r349clone(T0* a1);
T6 r349cursor_before(T0* a1);
T6 r349same_type(T349* C,T0* a1);
void r349make(T349* C,T2 a1);
T6 r349cursor_after(T0* a1);
T6 r349conforms_to(T349* C,T0* a1);
T6 r349cursor_same_position(T0* a1,T0* a2);
T0* r349twin(T349* C);
T0* r349new_cursor(T349* C);
T6 r349cursor_off(T0* a1);
void r276copy(T276* C,T0* a1);
void r276make_clashes(T276* C,T2 a1);
void r276search_position(T276* C,T2 a1);
T6 r276is_equal(T276* C,T0* a1);
void r276remove_traversing_cursor(T276* C,T0* a1);
void r276clone_slots(T276* C);
T0* r276item(T276* C,T2 a1);
void r276clone_clashes(T276* C);
void r276move_all_cursors_after(T276* C);
void r276make_items(T276* C,T2 a1);
void r276add_traversing_cursor(T276* C,T0* a1);
T6 r276se_assigned_from(T0* a1);
T0* r276clone(T0* a1);
T6 r276same_type(T276* C,T0* a1);
void r276clone_items(T276* C);
T6 r276conforms_to(T276* C,T0* a1);
T6 r276has(T276* C,T2 a1);
void r276make_keys(T276* C,T2 a1);
T2 r276hash_position(T276* C,T2 a1);
void r276clone_keys(T276* C);
void r276make_with_equality_testers(T276* C,T2 a1,T0* a2,T0* a3);
T6 r276cursor_same_position(T0* a1,T0* a2);
T0* r276twin(T276* C);
T0* r276new_cursor(T276* C);
void r276make_slots(T276* C,T2 a1);
T2 r276new_modulus(T2 a1);
T6 r276cursor_off(T0* a1);
T2 r468new_capacity(T2 a1);
void r468copy(T468* C,T0* a1);
void r468force(T468* C,T0* a1,T0* a2);
void r468make_clashes(T468* C,T2 a1);
void r468search_position(T468* C,T0* a1);
T6 r468is_equal(T468* C,T0* a1);
void r468remove_traversing_cursor(T468* C,T0* a1);
void r468clone_slots(T468* C);
void r468keys_resize(T468* C,T2 a1);
void r468clone_clashes(T468* C);
T0* r468item(T468* C,T0* a1);
void r468move_all_cursors_after(T468* C);
void r468make_items(T468* C,T2 a1);
void r468add_traversing_cursor(T468* C,T0* a1);
T6 r468se_assigned_from(T0* a1);
T0* r468clone(T0* a1);
T6 r468same_type(T468* C,T0* a1);
void r468make(T468* C,T2 a1);
void r468clone_items(T468* C);
T6 r468conforms_to(T468* C,T0* a1);
T6 r468has(T468* C,T0* a1);
void r468make_keys(T468* C,T2 a1);
T2 r468hash_position(T468* C,T0* a1);
void r468items_resize(T468* C,T2 a1);
void r468clone_keys(T468* C);
void r468make_with_equality_testers(T468* C,T2 a1,T0* a2,T0* a3);
void r468resize(T468* C,T2 a1);
T6 r468cursor_same_position(T0* a1,T0* a2);
void r468clashes_resize(T468* C,T2 a1);
void r468slots_resize(T468* C,T2 a1);
T0* r468twin(T468* C);
T0* r468new_cursor(T468* C);
void r468make_slots(T468* C,T2 a1);
T2 r468new_modulus(T2 a1);
T6 r468cursor_off(T0* a1);
T6 r390is_equal(T390* C,T0* a1);
T6 r390se_assigned_from(T0* a1);
T0* r390make(T2 a1);
T6 r390conforms_to(T390* C,T0* a1);
T0* r390resize(T0* a1,T2 a2);
T0* r390twin(T390* C);
void r128copy(T128* C,T0* a1);
void r128append_last(T128* C,T0* a1);
T0* r128cursor_item(T0* a1);
T6 r128cursor_is_last(T128* C,T0* a1);
T6 r128is_equal(T128* C,T0* a1);
void r128remove_traversing_cursor(T128* C,T0* a1);
void r128move_all_cursors_after(T128* C);
void r128add_traversing_cursor(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
T6 r128same_type(T128* C,T0* a1);
void r128make(T128* C);
T6 r128cursor_after(T0* a1);
T6 r128conforms_to(T128* C,T0* a1);
void r128cursor_forth(T128* C,T0* a1);
void r128make_from_linear(T128* C,T0* a1);
void r128cursor_start(T128* C,T0* a1);
T0* r128twin(T128* C);
void r128force_last(T128* C,T0* a1);
T0* r128new_cursor(T128* C);
void r128put_last(T128* C,T0* a1);
T6 r128cursor_off(T0* a1);
T6 r65is_equal(T65* C,T0* a1);
T6 r65se_assigned_from(T0* a1);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T6 r543is_equal(T543* C,T0* a1);
T6 r543se_assigned_from(T0* a1);
T0* r543make(T2 a1);
T6 r543conforms_to(T543* C,T0* a1);
T0* r543resize(T0* a1,T2 a2);
T0* r543twin(T543* C);
T6 r338is_equal(T338* C,T0* a1);
T6 r338se_assigned_from(T0* a1);
T0* r338make(T2 a1);
T6 r338conforms_to(T338* C,T0* a1);
T0* r338resize(T0* a1,T2 a2);
T0* r338twin(T338* C);
void r403copy(T403* C,T0* a1);
T6 r403is_equal(T403* C,T0* a1);
T6 r403same_position(T403* C,T0* a1);
T6 r403se_assigned_from(T0* a1);
T6 r403same_type(T403* C,T0* a1);
T6 r403off(T403* C);
T6 r403conforms_to(T403* C,T0* a1);
T0* r403twin(T403* C);
T6 r471is_equal(T471* C,T0* a1);
T6 r471se_assigned_from(T0* a1);
T6 r471conforms_to(T471* C,T0* a1);
T6 r471test(T0* a1,T0* a2);
T0* r471twin(T471* C);
void r270copy(T270* C,T0* a1);
T6 r270is_equal(T270* C,T0* a1);
T6 r270same_position(T270* C,T0* a1);
T6 r270se_assigned_from(T0* a1);
T6 r270same_type(T270* C,T0* a1);
void r270make(T270* C,T0* a1);
T6 r270off(T270* C);
T6 r270conforms_to(T270* C,T0* a1);
T0* r270twin(T270* C);
void r301copy(T301* C,T0* a1);
void r301make_equal(T301* C,T2 a1);
void r301make_clashes(T301* C,T2 a1);
void r301search_position(T301* C,T0* a1);
T6 r301is_equal(T301* C,T0* a1);
void r301remove_traversing_cursor(T301* C,T0* a1);
void r301clone_slots(T301* C);
T0* r301items_item(T301* C,T2 a1);
void r301clone_clashes(T301* C);
void r301move_all_cursors_after(T301* C);
void r301make_items(T301* C,T2 a1);
void r301add_traversing_cursor(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T0* r301clone(T0* a1);
T6 r301same_type(T301* C,T0* a1);
void r301make(T301* C,T2 a1);
T6 r301equal(T0* a1,T0* a2);
void r301clone_items(T301* C);
T6 r301same_equality_tester(T301* C,T0* a1);
T6 r301conforms_to(T301* C,T0* a1);
T6 r301has(T301* C,T0* a1);
T2 r301hash_position(T301* C,T0* a1);
T6 r301cursor_same_position(T0* a1,T0* a2);
T0* r301twin(T301* C);
T0* r301new_cursor(T301* C);
void r301make_slots(T301* C,T2 a1);
T2 r301new_modulus(T2 a1);
T6 r301cursor_off(T0* a1);
void r225copy(T225* C,T0* a1);
void r225wipe_out(T225* C);
T0* r225keys_item(T225* C,T2 a1);
void r225make_clashes(T225* C,T2 a1);
void r225put(T225* C,T0* a1,T0* a2);
void r225search_position(T225* C,T0* a1);
T6 r225is_equal(T225* C,T0* a1);
void r225remove_traversing_cursor(T225* C,T0* a1);
void r225clone_slots(T225* C);
void r225keys_resize(T225* C,T2 a1);
T0* r225item(T225* C,T0* a1);
void r225clone_clashes(T225* C);
void r225make_items(T225* C,T2 a1);
void r225move_all_cursors_after(T225* C);
void r225add_traversing_cursor(T225* C,T0* a1);
T6 r225se_assigned_from(T0* a1);
T0* r225clone(T0* a1);
T6 r225same_type(T225* C,T0* a1);
void r225slots_wipe_out(T225* C);
void r225make(T225* C,T2 a1);
void r225clashes_wipe_out(T225* C);
void r225clone_items(T225* C);
T6 r225conforms_to(T225* C,T0* a1);
T6 r225has(T225* C,T0* a1);
void r225make_keys(T225* C,T2 a1);
T2 r225hash_position(T225* C,T0* a1);
void r225items_wipe_out(T225* C);
void r225items_resize(T225* C,T2 a1);
void r225clone_keys(T225* C);
void r225make_with_equality_testers(T225* C,T2 a1,T0* a2,T0* a3);
void r225resize(T225* C,T2 a1);
T6 r225cursor_same_position(T0* a1,T0* a2);
void r225clashes_resize(T225* C,T2 a1);
void r225slots_resize(T225* C,T2 a1);
T0* r225twin(T225* C);
void r225keys_wipe_out(T225* C);
T0* r225new_cursor(T225* C);
void r225make_slots(T225* C,T2 a1);
void r225keys_put(T225* C,T0* a1,T2 a2);
T2 r225new_modulus(T2 a1);
T6 r225cursor_off(T0* a1);
T6 r665is_equal(T665* C,T0* a1);
T6 r665se_assigned_from(T0* a1);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
void r239copy(T239* C,T0* a1);
T6 r239is_equal(T239* C,T0* a1);
void r239remove_traversing_cursor(T239* C,T0* a1);
void r239move_all_cursors_after(T239* C);
void r239add_traversing_cursor(T239* C,T0* a1);
T6 r239se_assigned_from(T0* a1);
T6 r239same_type(T239* C,T0* a1);
void r239make(T239* C);
T6 r239conforms_to(T239* C,T0* a1);
T0* r239twin(T239* C);
T0* r239new_cursor(T239* C);
T6 r407is_equal(T407* C,T0* a1);
T6 r407se_assigned_from(T0* a1);
void r407make(T407* C,T2 a1);
T6 r407conforms_to(T407* C,T0* a1);
T0* r407twin(T407* C);
T6 r622is_equal(T622* C,T0* a1);
T6 r622se_assigned_from(T0* a1);
T0* r622make(T2 a1);
T6 r622conforms_to(T622* C,T0* a1);
T0* r622resize(T0* a1,T2 a2);
T0* r622twin(T622* C);
void r414copy(T414* C,T0* a1);
T6 r414is_equal(T414* C,T0* a1);
T6 r414same_position(T414* C,T0* a1);
T6 r414se_assigned_from(T0* a1);
T6 r414same_type(T414* C,T0* a1);
void r414make(T414* C,T0* a1);
T6 r414off(T414* C);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
void r248copy(T248* C,T0* a1);
T6 r248is_equal(T248* C,T0* a1);
T6 r248same_position(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
T6 r248same_type(T248* C,T0* a1);
void r248make(T248* C,T0* a1);
T6 r248conforms_to(T248* C,T0* a1);
void r248set_after(T248* C);
T0* r248twin(T248* C);
T6 r480is_equal(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
T0* r480make(T2 a1);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480resize(T0* a1,T2 a2);
T0* r480twin(T480* C);
T6 r682is_equal(T682* C,T0* a1);
T6 r682se_assigned_from(T0* a1);
void r682make(T682* C,T0* a1,T0* a2);
T6 r682conforms_to(T682* C,T0* a1);
T0* r682twin(T682* C);
T6 r663is_equal(T663* C,T0* a1);
T6 r663se_assigned_from(T0* a1);
T6 r663conforms_to(T663* C,T0* a1);
T0* r663twin(T663* C);
T6 r476is_equal(T476* C,T0* a1);
T6 r476se_assigned_from(T0* a1);
T0* r476make(T2 a1);
T6 r476conforms_to(T476* C,T0* a1);
T0* r476resize(T0* a1,T2 a2);
T0* r476twin(T476* C);
void r211copy(T211* C,T0* a1);
T6 r211is_equal(T211* C,T0* a1);
T0* r211item(T211* C);
T6 r211same_position(T211* C,T0* a1);
T6 r211se_assigned_from(T0* a1);
T6 r211after(T211* C);
T6 r211same_type(T211* C,T0* a1);
void r211make(T211* C,T0* a1);
T6 r211off(T211* C);
T6 r211conforms_to(T211* C,T0* a1);
T0* r211twin(T211* C);
T6 r417is_equal(T417* C,T0* a1);
T6 r417se_assigned_from(T0* a1);
T0* r417make(T2 a1);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417resize(T0* a1,T2 a2);
T0* r417twin(T417* C);
T2 r140new_capacity(T2 a1);
void r140copy(T140* C,T0* a1);
void r140force(T140* C,T0* a1,T0* a2);
void r140make_clashes(T140* C,T2 a1);
T0* r140cursor_item(T140* C,T0* a1);
void r140search_position(T140* C,T0* a1);
T6 r140is_equal(T140* C,T0* a1);
void r140remove_traversing_cursor(T140* C,T0* a1);
void r140clone_slots(T140* C);
void r140keys_resize(T140* C,T2 a1);
T0* r140item(T140* C,T0* a1);
void r140clone_clashes(T140* C);
void r140move_all_cursors_after(T140* C);
void r140make_items(T140* C,T2 a1);
void r140add_traversing_cursor(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
T0* r140clone(T0* a1);
T6 r140same_type(T140* C,T0* a1);
void r140make(T140* C,T2 a1);
void r140clone_items(T140* C);
T6 r140cursor_after(T0* a1);
T6 r140conforms_to(T140* C,T0* a1);
T6 r140has(T140* C,T0* a1);
void r140make_keys(T140* C,T2 a1);
T2 r140hash_position(T140* C,T0* a1);
void r140cursor_forth(T140* C,T0* a1);
void r140items_resize(T140* C,T2 a1);
void r140clone_keys(T140* C);
void r140make_with_equality_testers(T140* C,T2 a1,T0* a2,T0* a3);
void r140resize(T140* C,T2 a1);
T6 r140cursor_same_position(T0* a1,T0* a2);
void r140cursor_start(T140* C,T0* a1);
void r140clashes_resize(T140* C,T2 a1);
void r140slots_resize(T140* C,T2 a1);
T0* r140twin(T140* C);
T0* r140new_cursor(T140* C);
void r140make_slots(T140* C,T2 a1);
T2 r140new_modulus(T2 a1);
T6 r140cursor_off(T0* a1);
void r118copy(T118* C,T0* a1);
void r118set(T118* C,T0* a1,T6 a2,T6 a3);
T6 r118is_equal(T118* C,T0* a1);
T6 r118same_position(T118* C,T0* a1);
T6 r118se_assigned_from(T0* a1);
T6 r118is_last(T118* C);
T6 r118same_type(T118* C,T0* a1);
void r118make(T118* C,T0* a1);
T6 r118conforms_to(T118* C,T0* a1);
void r118set_after(T118* C);
T0* r118twin(T118* C);
T6 r149is_equal(T149* C,T0* a1);
T6 r149se_assigned_from(T0* a1);
T0* r149make(T2 a1);
T6 r149conforms_to(T149* C,T0* a1);
T0* r149resize(T0* a1,T2 a2);
T0* r149twin(T149* C);
void r557copy(T557* C,T0* a1);
void r557append_last(T557* C,T0* a1);
T0* r557cursor_item(T0* a1);
T6 r557is_equal(T557* C,T0* a1);
void r557remove_traversing_cursor(T557* C,T0* a1);
void r557cursor_go_after(T557* C,T0* a1);
void r557move_all_cursors_after(T557* C);
void r557add_traversing_cursor(T557* C,T0* a1);
T6 r557se_assigned_from(T0* a1);
T6 r557same_type(T557* C,T0* a1);
void r557make(T557* C);
T6 r557cursor_after(T0* a1);
T6 r557conforms_to(T557* C,T0* a1);
void r557cursor_forth(T557* C,T0* a1);
void r557make_from_linear(T557* C,T0* a1);
void r557cursor_start(T557* C,T0* a1);
T0* r557twin(T557* C);
void r557force_last(T557* C,T0* a1);
T0* r557new_cursor(T557* C);
T6 r557cursor_off(T0* a1);
void r79copy(T79* C,T0* a1);
T6 r79is_equal(T79* C,T0* a1);
void r79remove_traversing_cursor(T79* C,T0* a1);
void r79move_all_cursors_after(T79* C);
void r79add_traversing_cursor(T79* C,T0* a1);
T6 r79se_assigned_from(T0* a1);
T6 r79same_type(T79* C,T0* a1);
void r79make(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
void r79cursor_forth(T79* C,T0* a1);
void r79cursor_start(T79* C,T0* a1);
T0* r79twin(T79* C);
void r79force_last(T79* C,T0* a1);
T0* r79new_cursor(T79* C);
T6 r79cursor_off(T0* a1);
T6 r152is_equal(T152* C,T0* a1);
T6 r152se_assigned_from(T0* a1);
T6 r152conforms_to(T152* C,T0* a1);
T6 r152test(T0* a1,T0* a2);
T0* r152twin(T152* C);
void r360copy(T360* C,T0* a1);
T6 r360is_equal(T360* C,T0* a1);
T6 r360same_position(T360* C,T0* a1);
T6 r360se_assigned_from(T0* a1);
T6 r360same_type(T360* C,T0* a1);
T6 r360off(T360* C);
T6 r360conforms_to(T360* C,T0* a1);
T0* r360twin(T360* C);
void r258copy(T258* C,T0* a1);
void r258wipe_out(T258* C);
void r258make_clashes(T258* C,T2 a1);
void r258search_position(T258* C,T2 a1);
T6 r258is_equal(T258* C,T0* a1);
void r258remove_traversing_cursor(T258* C,T0* a1);
void r258clone_slots(T258* C);
T0* r258item(T258* C,T2 a1);
void r258clone_clashes(T258* C);
void r258make_items(T258* C,T2 a1);
void r258move_all_cursors_after(T258* C);
void r258add_traversing_cursor(T258* C,T0* a1);
T6 r258se_assigned_from(T0* a1);
T0* r258clone(T0* a1);
T6 r258same_type(T258* C,T0* a1);
void r258slots_wipe_out(T258* C);
void r258clashes_wipe_out(T258* C);
void r258clone_items(T258* C);
T6 r258conforms_to(T258* C,T0* a1);
T6 r258has(T258* C,T2 a1);
void r258make_keys(T258* C,T2 a1);
T2 r258hash_position(T258* C,T2 a1);
void r258items_wipe_out(T258* C);
void r258clone_keys(T258* C);
void r258make_with_equality_testers(T258* C,T2 a1,T0* a2,T0* a3);
T6 r258cursor_same_position(T0* a1,T0* a2);
T0* r258twin(T258* C);
void r258keys_wipe_out(T258* C);
T0* r258new_cursor(T258* C);
void r258make_slots(T258* C,T2 a1);
T2 r258new_modulus(T2 a1);
T6 r258cursor_off(T0* a1);
T6 r236is_equal(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
T6 r236conforms_to(T236* C,T0* a1);
T6 r236test(T0* a1,T0* a2);
T0* r236twin(T236* C);
void r387copy(T387* C,T0* a1);
T6 r387is_equal(T387* C,T0* a1);
T6 r387same_position(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
T6 r387same_type(T387* C,T0* a1);
void r387make(T387* C,T0* a1);
T6 r387off(T387* C);
T6 r387conforms_to(T387* C,T0* a1);
T0* r387twin(T387* C);
void r223copy(T223* C,T0* a1);
T0* r223keys_item(T223* C,T2 a1);
void r223make_clashes(T223* C,T2 a1);
T0* r223cursor_item(T223* C,T0* a1);
void r223search_position(T223* C,T0* a1);
T6 r223is_equal(T223* C,T0* a1);
void r223remove_traversing_cursor(T223* C,T0* a1);
void r223clone_slots(T223* C);
T0* r223item(T223* C,T0* a1);
void r223clone_clashes(T223* C);
void r223move_all_cursors_after(T223* C);
void r223make_items(T223* C,T2 a1);
void r223add_traversing_cursor(T223* C,T0* a1);
T6 r223se_assigned_from(T0* a1);
T0* r223clone(T0* a1);
T6 r223same_type(T223* C,T0* a1);
void r223make(T223* C,T2 a1);
void r223clone_items(T223* C);
T6 r223cursor_after(T0* a1);
T6 r223conforms_to(T223* C,T0* a1);
T6 r223has(T223* C,T0* a1);
void r223make_keys(T223* C,T2 a1);
T2 r223hash_position(T223* C,T0* a1);
void r223cursor_forth(T223* C,T0* a1);
void r223clone_keys(T223* C);
void r223make_with_equality_testers(T223* C,T2 a1,T0* a2,T0* a3);
T6 r223cursor_same_position(T0* a1,T0* a2);
void r223cursor_start(T223* C,T0* a1);
T0* r223twin(T223* C);
T0* r223new_cursor(T223* C);
void r223make_slots(T223* C,T2 a1);
T2 r223new_modulus(T2 a1);
T6 r223cursor_off(T0* a1);
T6 r531is_equal(T531* C,T0* a1);
T6 r531se_assigned_from(T0* a1);
T0* r531make(T2 a1);
T6 r531conforms_to(T531* C,T0* a1);
T0* r531resize(T0* a1,T2 a2);
T0* r531twin(T531* C);
void r528copy(T528* C,T0* a1);
T6 r528is_equal(T528* C,T0* a1);
T6 r528same_position(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
T6 r528same_type(T528* C,T0* a1);
T6 r528off(T528* C);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528twin(T528* C);
void r368copy(T368* C,T0* a1);
T6 r368is_equal(T368* C,T0* a1);
void r368remove_traversing_cursor(T368* C,T0* a1);
void r368move_all_cursors_after(T368* C);
void r368add_traversing_cursor(T368* C,T0* a1);
T6 r368se_assigned_from(T0* a1);
T0* r368clone(T0* a1);
T6 r368cursor_before(T0* a1);
T6 r368same_type(T368* C,T0* a1);
void r368make(T368* C,T2 a1);
T6 r368cursor_after(T0* a1);
T6 r368conforms_to(T368* C,T0* a1);
T6 r368cursor_same_position(T0* a1,T0* a2);
T0* r368twin(T368* C);
T0* r368new_cursor(T368* C);
T6 r368cursor_off(T0* a1);
void r377copy(T377* C,T0* a1);
T6 r377is_equal(T377* C,T0* a1);
T6 r377same_position(T377* C,T0* a1);
T6 r377se_assigned_from(T0* a1);
T6 r377same_type(T377* C,T0* a1);
T6 r377off(T377* C);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
void r61copy(T61* C,T0* a1);
T6 r61is_equal(T61* C,T0* a1);
void r61remove_traversing_cursor(T61* C,T0* a1);
void r61move_all_cursors_after(T61* C);
void r61add_traversing_cursor(T61* C,T0* a1);
T6 r61se_assigned_from(T0* a1);
T6 r61same_type(T61* C,T0* a1);
void r61make(T61* C);
T6 r61conforms_to(T61* C,T0* a1);
void r61cursor_forth(T61* C,T0* a1);
void r61cursor_start(T61* C,T0* a1);
T0* r61twin(T61* C);
void r61force_last(T61* C,T0* a1);
T0* r61new_cursor(T61* C);
T6 r61cursor_off(T0* a1);
void r321copy(T321* C,T0* a1);
T0* r321keys_item(T321* C,T2 a1);
void r321make_clashes(T321* C,T2 a1);
void r321search_position(T321* C,T0* a1);
T6 r321is_equal(T321* C,T0* a1);
void r321remove_traversing_cursor(T321* C,T0* a1);
void r321clone_slots(T321* C);
T0* r321item(T321* C,T0* a1);
void r321clone_clashes(T321* C);
void r321move_all_cursors_after(T321* C);
void r321make_items(T321* C,T2 a1);
void r321add_traversing_cursor(T321* C,T0* a1);
T6 r321se_assigned_from(T0* a1);
T0* r321clone(T0* a1);
T6 r321same_type(T321* C,T0* a1);
void r321make(T321* C,T2 a1);
void r321clone_items(T321* C);
T6 r321conforms_to(T321* C,T0* a1);
T6 r321has(T321* C,T0* a1);
void r321make_keys(T321* C,T2 a1);
T2 r321hash_position(T321* C,T0* a1);
void r321clone_keys(T321* C);
void r321make_with_equality_testers(T321* C,T2 a1,T0* a2,T0* a3);
T6 r321cursor_same_position(T0* a1,T0* a2);
T0* r321twin(T321* C);
T0* r321new_cursor(T321* C);
void r321make_slots(T321* C,T2 a1);
T2 r321new_modulus(T2 a1);
T6 r321cursor_off(T0* a1);
T6 r712is_equal(T712* C,T0* a1);
T6 r712se_assigned_from(T0* a1);
void r712make(T712* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r712conforms_to(T712* C,T0* a1);
T0* r712twin(T712* C);
T6 r458is_equal(T458* C,T0* a1);
T6 r458se_assigned_from(T0* a1);
void r458make(T458* C,T0* a1,T2 a2,T2 a3);
T6 r458conforms_to(T458* C,T0* a1);
T0* r458twin(T458* C);
T6 r594is_equal(T594* C,T0* a1);
T0* r594new_tree_parser(T594* C);
T6 r594se_assigned_from(T0* a1);
T0* r594new_tree_parser_imp(T594* C);
T6 r594conforms_to(T594* C,T0* a1);
T0* r594twin(T594* C);
T6 r590is_equal(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
extern T0*oBC21Arguments;
extern int fBC21Arguments;
T0* r590Arguments(void);
void r590make(T590* C);
T0* r590message(T590* C,T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
T0* r590twin(T590* C);
T0* r590default_message(T590* C);
extern T0*oBC83STRING_;
T6 r556is_equal(T556* C,T0* a1);
T6 r556se_assigned_from(T0* a1);
void r556make(T556* C,T0* a1);
T6 r556conforms_to(T556* C,T0* a1);
T0* r556twin(T556* C);
T6 r639is_equal(T639* C,T0* a1);
T6 r639se_assigned_from(T0* a1);
void r639make(T639* C,T0* a1);
T6 r639conforms_to(T639* C,T0* a1);
extern T0*oBC168uc_cluster;
extern int fBC168uc_cluster;
T0* r639uc_cluster(void);
void r639parse_file(T639* C,T0* a1);
void r639make_with_factory(T639* C,T0* a1,T0* a2);
T0* r639twin(T639* C);
extern T0*oBC168uc_system;
extern int fBC168uc_system;
T0* r639uc_system(void);
extern T0*oBC77INPUT_STREAM_;
T6 r166is_equal(T166* C,T0* a1);
T6 r166se_assigned_from(T0* a1);
void r166make(T166* C,T0* a1);
T6 r166conforms_to(T166* C,T0* a1);
T0* r166uc_cluster(void);
void r166parse_file(T166* C,T0* a1);
void r166make_with_factory(T166* C,T0* a1,T0* a2);
T0* r166twin(T166* C);
T0* r166uc_system(void);
T6 r197is_equal(T197* C,T0* a1);
T6 r197se_assigned_from(T0* a1);
void r197unmount_root(T197* C,T0* a1);
void r197make(T197* C,T0* a1);
void r197mount(T197* C,T0* a1,T0* a2);
T6 r197conforms_to(T197* C,T0* a1);
void r197unmount(T197* C,T0* a1);
T0* r197twin(T197* C);
void r197mount_root(T197* C,T0* a1);
void r203set_optimize(T203* C,T6 a1);
T6 r203is_equal(T203* C,T0* a1);
void r203set_ensure(T203* C,T6 a1);
T6 r203se_assigned_from(T0* a1);
void r203make(T203* C);
void r203set_check(T203* C,T6 a1);
T6 r203conforms_to(T203* C,T0* a1);
void r203set_invariant(T203* C,T6 a1);
void r203set_loop(T203* C,T6 a1);
void r203set_debug(T203* C,T6 a1);
T0* r203twin(T203* C);
void r203set_require(T203* C,T6 a1);
T6 r208is_equal(T208* C,T0* a1);
T6 r208se_assigned_from(T0* a1);
void r208make(T208* C,T0* a1,T2 a2,T0* a3);
T6 r208conforms_to(T208* C,T0* a1);
T0* r208twin(T208* C);
T6 r202has_exported_features(T202* C);
T6 r202is_equal(T202* C,T0* a1);
T6 r202se_assigned_from(T0* a1);
void r202merge(T202* C,T0* a1);
void r202make(T202* C);
T6 r202is_empty(T202* C);
T6 r202conforms_to(T202* C,T0* a1);
T0* r202cloned_externals(T202* C);
T6 r202has_include_directories(T202* C);
T6 r202has_link_libraries(T202* C);
T0* r202twin(T202* C);
T6 r463is_equal(T463* C,T0* a1);
T6 r463se_assigned_from(T0* a1);
T6 r463conforms_to(T463* C,T0* a1);
T0* r463twin(T463* C);
void r586put(T586* C,T0* a1,T0* a2);
T6 r586is_equal(T586* C,T0* a1);
T6 r586se_assigned_from(T0* a1);
void r586make(T586* C);
T6 r586conforms_to(T586* C,T0* a1);
T0* r586twin(T586* C);
T6 r167is_equal(T167* C,T0* a1);
T6 r167se_assigned_from(T0* a1);
void r167make(T167* C,T0* a1);
T6 r167conforms_to(T167* C,T0* a1);
T0* r167uc_cluster(void);
void r167parse_file(T167* C,T0* a1);
void r167make_with_factory(T167* C,T0* a1,T0* a2);
T0* r167twin(T167* C);
T0* r167uc_system(void);
T6 r673is_equal(T673* C,T0* a1);
T6 r673se_assigned_from(T0* a1);
void r673read_character(T673* C);
void r673make(T673* C);
T6 r673conforms_to(T673* C,T0* a1);
T6 r673end_of_file(T673* C);
T0* r673twin(T673* C);
T6 r457is_equal(T457* C,T0* a1);
T6 r457se_assigned_from(T0* a1);
void r457make(T457* C,T0* a1,T0* a2,T0* a3,T0* a4,T0* a5,T0* a6);
T6 r457conforms_to(T457* C,T0* a1);
T0* r457twin(T457* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
T6 r534is_undefined(T534* C);
T0* r534twin(T534* C);
T6 r710is_equal(T710* C,T0* a1);
T6 r710se_assigned_from(T0* a1);
void r710make(T710* C,T0* a1,T0* a2);
T6 r710conforms_to(T710* C,T0* a1);
T0* r710twin(T710* C);
T6 r589is_equal(T589* C,T0* a1);
T6 r589se_assigned_from(T0* a1);
T0* r589Arguments(void);
void r589make(T589* C,T0* a1);
T0* r589message(T589* C,T0* a1);
T6 r589conforms_to(T589* C,T0* a1);
T0* r589twin(T589* C);
T0* r589default_message(T589* C);
T0* r206new_class(T0* a1,T2 a2,T0* a3);
T6 r206is_equal(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
T6 r206conforms_to(T206* C,T0* a1);
T0* r206twin(T206* C);
void r91print_cluster(T91* C,T0* a1,T0* a2,T0* a3);
T6 r91is_equal(T91* C,T0* a1);
T6 r91se_assigned_from(T0* a1);
void r91print_ace_file(T91* C,T0* a1,T0* a2);
void r91print_exported_class(T0* a1,T2 a2,T0* a3);
void r91print_clusters(T91* C,T0* a1,T0* a2,T0* a3);
void r91generate(T91* C,T0* a1);
T6 r91conforms_to(T91* C,T0* a1);
T0* r91twin(T91* C);
void r91print_options(T0* a1,T2 a2,T0* a3);
void r91print_indentation(T2 a1,T0* a2);
void r91print_link_libraries(T0* a1,T0* a2,T0* a3);
void r91print_include_directories(T0* a1,T0* a2,T0* a3);
T6 r709is_equal(T709* C,T0* a1);
T6 r709se_assigned_from(T0* a1);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
void r601copy(T601* C,T0* a1);
T0* r601cursor_item(T0* a1);
T6 r601is_equal(T601* C,T0* a1);
void r601remove_traversing_cursor(T601* C,T0* a1);
void r601cursor_go_after(T601* C,T0* a1);
void r601move_all_cursors_after(T601* C);
void r601add_traversing_cursor(T601* C,T0* a1);
T6 r601se_assigned_from(T0* a1);
T6 r601cursor_before(T0* a1);
T6 r601same_type(T601* C,T0* a1);
void r601make(T601* C);
T0* r601first_element(T601* C);
T6 r601cursor_after(T0* a1);
T6 r601conforms_to(T601* C,T0* a1);
void r601cursor_forth(T601* C,T0* a1);
void r601cursor_start(T601* C,T0* a1);
T0* r601twin(T601* C);
T0* r601new_cursor(T601* C);
void r601put_last(T601* C,T0* a1);
T6 r601cursor_off(T0* a1);
extern T0*oBC96template_expander;
T6 r95is_equal(T95* C,T0* a1);
T6 r95se_assigned_from(T0* a1);
void r95make(T95* C);
T6 r95conforms_to(T95* C,T0* a1);
T0* r95twin(T95* C);
T0* r95expanded_variables(T95* C,T0* a1);
T6 r108is_equal(T108* C,T0* a1);
T6 r108se_assigned_from(T0* a1);
void r108make(T108* C,T0* a1);
T6 r108conforms_to(T108* C,T0* a1);
void r108execute(T108* C);
T0* r108twin(T108* C);
T6 r700is_equal(T700* C,T0* a1);
T6 r700se_assigned_from(T0* a1);
void r700make(T700* C,T0* a1,T0* a2);
T6 r700conforms_to(T700* C,T0* a1);
T0* r700twin(T700* C);
T6 r80is_equal(T80* C,T0* a1);
T6 r80se_assigned_from(T0* a1);
T0* r80Arguments(void);
void r80make(T80* C,T0* a1);
T0* r80message(T80* C,T0* a1);
T6 r80conforms_to(T80* C,T0* a1);
T0* r80twin(T80* C);
T0* r80default_message(T80* C);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76execute_generators(T76* C,T0* a1);
void r76make(T76* C,T0* a1);
T6 r76conforms_to(T76* C,T0* a1);
void r76execute(T76* C);
T0* r76twin(T76* C);
void r76_30Pmake(T76* C,T0* a1);
void r90print_cluster(T90* C,T0* a1,T0* a2,T0* a3);
T6 r90is_equal(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
void r90print_ace_file(T90* C,T0* a1,T0* a2);
void r90generate_cecil_file(T90* C,T0* a1);
void r90print_exported_class(T0* a1,T0* a2);
void r90print_clusters(T90* C,T0* a1,T0* a2,T0* a3);
void r90generate(T90* C,T0* a1);
T6 r90conforms_to(T90* C,T0* a1);
T0* r90twin(T90* C);
void r90print_options(T0* a1,T2 a2,T0* a3);
void r90print_exported_classes(T0* a1,T0* a2);
void r90print_indentation(T2 a1,T0* a2);
void r90print_link_libraries(T0* a1,T0* a2,T0* a3);
void r90print_include_directories(T0* a1,T0* a2,T0* a3);
T6 r702is_equal(T702* C,T0* a1);
T6 r702se_assigned_from(T0* a1);
T6 r702conforms_to(T702* C,T0* a1);
T0* r702twin(T702* C);
T6 r649is_equal(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
T0* r649Arguments(void);
void r649make(T649* C,T0* a1);
T0* r649message(T649* C,T0* a1);
T6 r649conforms_to(T649* C,T0* a1);
T0* r649twin(T649* C);
T0* r649default_message(T649* C);
T6 r198is_equal(T198* C,T0* a1);
T6 r198se_assigned_from(T0* a1);
void r198unmount_root(T198* C,T0* a1);
void r198mount(T198* C,T0* a1,T0* a2);
extern T0*oBC199Execution_environment;
T6 r198conforms_to(T198* C,T0* a1);
void r198unmount(T198* C,T0* a1);
T0* r198twin(T198* C);
void r198mount_root(T198* C,T0* a1);
void r433yy_build_tables(T433* C);
extern T0*oBC434yy_meta_template;
extern int fBC434yy_meta_template;
T0* r433yy_meta_template(void);
extern T0*oBC433yycheck_template;
extern int fBC433yycheck_template;
T0* r433yycheck_template(void);
T6 r433is_equal(T433* C,T0* a1);
extern T0*oBC434yy_accept_template;
extern int fBC434yy_accept_template;
T0* r433yy_accept_template(void);
extern T0*oBC434yy_base_template;
extern int fBC434yy_base_template;
T0* r433yy_base_template(void);
void r433yy_build_parser_tables(T433* C);
T6 r433se_assigned_from(T0* a1);
extern T0*oBC433yytable_template;
extern int fBC433yytable_template;
T0* r433yytable_template(void);
T0* r433yyfixed_array(T0* a1);
extern T0*oBC433yypgoto_template;
extern int fBC433yypgoto_template;
T0* r433yypgoto_template(void);
extern T0*oBC443Empty_buffer;
extern int fBC443Empty_buffer;
T0* r433Empty_buffer(void);
void r433yy_set_content(T433* C,T0* a1);
extern T0*oBC434yy_nxt_template;
extern int fBC434yy_nxt_template;
T0* r433yy_nxt_template(void);
extern T0*oBC434yy_chk_template;
extern int fBC434yy_chk_template;
T0* r433yy_chk_template(void);
extern T0*oBC433yypact_template;
extern int fBC433yypact_template;
T0* r433yypact_template(void);
void r433make_parser_skeleton(T433* C);
extern T0*oBC433yydefact_template;
extern int fBC433yydefact_template;
T0* r433yydefact_template(void);
extern T0*oBC434yy_def_template;
extern int fBC434yy_def_template;
T0* r433yy_def_template(void);
T6 r433conforms_to(T433* C,T0* a1);
extern T0*oBC434yy_ec_template;
extern int fBC434yy_ec_template;
T0* r433yy_ec_template(void);
void r433make_with_buffer(T433* C,T0* a1);
void r433yy_initialize(T433* C);
extern T0*oBC433yyr1_template;
extern int fBC433yyr1_template;
T0* r433yyr1_template(void);
void r433make_with_factory(T433* C,T0* a1,T0* a2,T0* a3);
T0* r433twin(T433* C);
void r433yy_load_input_buffer(T433* C);
extern T0*oBC433yytranslate_template;
extern int fBC433yytranslate_template;
T0* r433yytranslate_template(void);
T0* r433yy_fixed_array(T0* a1);
extern T0*oBC433yyr2_template;
extern int fBC433yyr2_template;
T0* r433yyr2_template(void);
extern T0*oBC433yydefgoto_template;
extern int fBC433yydefgoto_template;
T0* r433yydefgoto_template(void);
void r433make_eiffel_scanner(T433* C,T0* a1,T0* a2);
T6 r212is_equal(T212* C,T0* a1);
T6 r212se_assigned_from(T0* a1);
void r212make(T212* C,T0* a1,T0* a2);
T6 r212conforms_to(T212* C,T0* a1);
T0* r212twin(T212* C);
T6 r164is_equal(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
void r164mount_clusters(T164* C);
void r164make(T164* C,T0* a1,T0* a2);
void r164unmount_clusters(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
void r164make_basic_classes(T164* C);
T0* r164eiffel_class(T164* C,T0* a1);
void r164make_with_factory(T164* C,T0* a1,T0* a2,T0* a3);
T0* r164twin(T164* C);
void r164merge_externals(T164* C);
T6 r180is_equal(T180* C,T0* a1);
T6 r180se_assigned_from(T0* a1);
T6 r180conforms_to(T180* C,T0* a1);
T0* r180twin(T180* C);
void r93print_cluster(T93* C,T0* a1,T0* a2,T0* a3);
T6 r93is_equal(T93* C,T0* a1);
T6 r93se_assigned_from(T0* a1);
void r93print_ace_file(T93* C,T0* a1,T0* a2);
void r93print_exported_class(T0* a1,T2 a2,T0* a3);
void r93print_component(T0* a1);
void r93print_clusters(T93* C,T0* a1,T0* a2,T0* a3);
void r93generate(T93* C,T0* a1);
T6 r93conforms_to(T93* C,T0* a1);
T0* r93twin(T93* C);
void r93print_options(T0* a1,T2 a2,T0* a3);
void r93print_indentation(T2 a1,T0* a2);
void r93print_link_libraries(T0* a1,T0* a2,T0* a3);
void r93print_include_directories(T0* a1,T0* a2,T0* a3);
T6 r643is_equal(T643* C,T0* a1);
T6 r643se_assigned_from(T0* a1);
T0* r643Arguments(void);
void r643make(T643* C,T0* a1);
T0* r643message(T643* C,T0* a1);
T6 r643conforms_to(T643* C,T0* a1);
T0* r643twin(T643* C);
T0* r643default_message(T643* C);
T6 r641is_equal(T641* C,T0* a1);
T6 r641se_assigned_from(T0* a1);
T6 r641conforms_to(T641* C,T0* a1);
T0* r641expand_from_hash_table(T0* a1,T0* a2);
T0* r641twin(T641* C);
void r170disconnect(T170* C);
T6 r170is_equal(T170* C,T0* a1);
T6 r170se_assigned_from(T0* a1);
void r170read_character(T170* C);
T6 r170conforms_to(T170* C,T0* a1);
T6 r170end_of_input(T170* C);
void r170connect_to(T170* C,T0* a1);
T0* r170twin(T170* C);
T6 r644is_closed(T644* C);
T6 r644is_equal(T644* C,T0* a1);
T6 r644se_assigned_from(T0* a1);
void r644do_close(T644* C);
void r644close(T644* C);
void r644make(T644* C,T0* a1);
T6 r644conforms_to(T644* C,T0* a1);
void r644connect_to(T644* C,T0* a1);
T0* r644twin(T644* C);
void r644open_write(T644* C);
void r644put_string(T644* C,T0* a1);
void r455set_position(T455* C,T2 a1,T2 a2,T2 a3);
T6 r455is_equal(T455* C,T0* a1);
extern T2 oBC455lower;
extern int fBC455lower;
T2 r455lower(void);
T6 r455se_assigned_from(T0* a1);
void r455make(T455* C,T0* a1);
extern T0*oBC174STRING_BUFFER_;
T6 r455conforms_to(T455* C,T0* a1);
void r455make_from_buffer(T455* C,T0* a1);
T0* r455twin(T455* C);
extern T0*oBC489utils;
T2 r489item_code(T489* C,T2 a1);
T6 r489is_equal(T489* C,T0* a1);
T6 r489se_assigned_from(T0* a1);
void r489make(T489* C);
void r489insert(T489* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r489add_to_storage_count(T489* C,T2 a1);
void r489insert_code(T489* C,T2 a1,T2 a2);
T6 r489conforms_to(T489* C,T0* a1);
extern T6 oBC489optimize_access;
void r489storage_move(T489* C,T2 a1,T2 a2,T2 a3);
T0* r489twin(T489* C);
void r489find_position(T489* C,T2 a1);
T6 r461same_identifier(T461* C,T0* a1);
T6 r461is_equal(T461* C,T0* a1);
T6 r461se_assigned_from(T0* a1);
T6 r461same_type(T461* C,T0* a1);
void r461make(T461* C,T0* a1,T0* a2);
T6 r461same_feature_name(T461* C,T0* a1);
T6 r461conforms_to(T461* C,T0* a1);
T0* r461twin(T461* C);
T6 r207is_equal(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
void r207make(T207* C,T0* a1);
T6 r207conforms_to(T207* C,T0* a1);
void r207set_current_class(T207* C,T0* a1);
T0* r207twin(T207* C);
T6 r182is_equal(T182* C,T0* a1);
T6 r182se_assigned_from(T0* a1);
T6 r182conforms_to(T182* C,T0* a1);
void r182_176Pmake_from_imp(T182* C,T0* a1);
T0* r182twin(T182* C);
T6 r182cursor_off(T182* C,T0* a1);
void r182make_from_imp(T182* C,T0* a1);
void r92print_cluster(T92* C,T0* a1,T0* a2,T0* a3);
void r92print_esd_file(T92* C,T0* a1,T0* a2);
T6 r92is_equal(T92* C,T0* a1);
T6 r92se_assigned_from(T0* a1);
T0* r92clone(T0* a1);
void r92print_clusters(T92* C,T0* a1,T0* a2,T0* a3);
T0* r92remove_all_characters(T0* a1,T3 a2);
void r92generate(T92* C,T0* a1);
T6 r92conforms_to(T92* C,T0* a1);
T0* r92twin(T92* C);
void r92print_indentation(T2 a1,T0* a2);
T0* r488create_representation(T488* C);
T6 r488is_equal(T488* C,T0* a1);
T6 r488se_assigned_from(T0* a1);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488twin(T488* C);
T6 r592is_equal(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
T0* r592Arguments(void);
void r592make(T592* C,T0* a1);
T0* r592message(T592* C,T0* a1);
T6 r592conforms_to(T592* C,T0* a1);
T0* r592twin(T592* C);
T0* r592default_message(T592* C);
T6 r465is_equal(T465* C,T0* a1);
T6 r465se_assigned_from(T0* a1);
void r465make(T465* C,T0* a1,T0* a2);
T6 r465conforms_to(T465* C,T0* a1);
T0* r465twin(T465* C);
T0* r200split_on_first(T0* a1,T3 a2);
T6 r200is_equal(T200* C,T0* a1);
void r200remove_cluster(T200* C,T0* a1);
T6 r200se_assigned_from(T0* a1);
T0* r200clone(T0* a1);
void r200make_empty(T200* C);
void r200make(T200* C,T0* a1);
void r200set_parent(T200* C,T0* a1);
void r200mount(T200* C,T0* a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200unmount(T200* C,T0* a1);
T0* r200twin(T200* C);
T0* r200split_string(T0* a1,T3 a2);
void r200merge_externals(T200* C,T0* a1);
T6 r705is_equal(T705* C,T0* a1);
T6 r705se_assigned_from(T0* a1);
void r705make(T705* C,T0* a1,T0* a2);
T6 r705conforms_to(T705* C,T0* a1);
T0* r705twin(T705* C);
extern T0*oBC168uc_optimize;
extern int fBC168uc_optimize;
T0* r181uc_optimize(void);
extern T0*oBC168uc_check;
extern int fBC168uc_check;
T0* r181uc_check(void);
extern T0*oBC168uc_external;
extern int fBC168uc_external;
T0* r181uc_external(void);
extern T0*oBC168uc_exclude;
extern int fBC168uc_exclude;
T0* r181uc_exclude(void);
T0* r181new_cluster(T0* a1);
T0* r181new_exported_feature(T0* a1);
T6 r181is_equal(T181* C,T0* a1);
T0* r181new_export(T0* a1);
extern T0*oBC168uc_true;
extern int fBC168uc_true;
T0* r181uc_true(void);
extern T0*oBC168uc_invariant;
extern int fBC168uc_invariant;
T0* r181uc_invariant(void);
T6 r181se_assigned_from(T0* a1);
T0* r181new_options(T0* a1);
T0* r181new_universe(T0* a1);
extern T0*oBC168uc_mount;
extern int fBC168uc_mount;
T0* r181uc_mount(void);
extern T0*oBC168uc_debug;
extern int fBC168uc_debug;
T0* r181uc_debug(void);
extern T0*oBC168uc_option;
extern int fBC168uc_option;
T0* r181uc_option(void);
extern T0*oBC168uc_root;
extern int fBC168uc_root;
T0* r181uc_root(void);
extern T0*oBC168uc_false;
extern int fBC168uc_false;
T0* r181uc_false(void);
T6 r181equal(T0* a1,T0* a2);
extern T0*oBC168uc_feature;
extern int fBC168uc_feature;
T0* r181uc_feature(void);
extern T0*oBC168uc_class;
extern int fBC168uc_class;
T0* r181uc_class(void);
extern T0*oBC168uc_loop;
extern int fBC168uc_loop;
T0* r181uc_loop(void);
T6 r181conforms_to(T181* C,T0* a1);
extern T0*oBC168uc_abstract;
extern int fBC168uc_abstract;
T0* r181uc_abstract(void);
T0* r181new_externals(T0* a1);
extern T0*oBC168uc_alias;
extern int fBC168uc_alias;
T0* r181uc_alias(void);
T0* r181uc_cluster(void);
extern T0*oBC168uc_enable;
extern int fBC168uc_enable;
T0* r181uc_enable(void);
extern T0*oBC168uc_export;
extern int fBC168uc_export;
T0* r181uc_export(void);
extern T0*oBC168uc_link_library;
extern int fBC168uc_link_library;
T0* r181uc_link_library(void);
extern T0*oBC168uc_include_dir;
extern int fBC168uc_include_dir;
T0* r181uc_include_dir(void);
extern T0*oBC168uc_location;
extern int fBC168uc_location;
T0* r181uc_location(void);
T0* r181twin(T181* C);
T0* r181new_mount(T0* a1);
extern T0*oBC168uc_creation;
extern int fBC168uc_creation;
T0* r181uc_creation(void);
extern T0*oBC168uc_require;
extern int fBC168uc_require;
T0* r181uc_require(void);
extern T0*oBC168uc_name;
extern int fBC168uc_name;
T0* r181uc_name(void);
extern T0*oBC168uc_ensure;
extern int fBC168uc_ensure;
T0* r181uc_ensure(void);
void r604copy(T604* C,T0* a1);
void r604make_clashes(T604* C,T2 a1);
void r604search_position(T604* C,T0* a1);
T6 r604is_equal(T604* C,T0* a1);
void r604remove_traversing_cursor(T604* C,T0* a1);
void r604clone_slots(T604* C);
T0* r604item(T604* C,T0* a1);
void r604clone_clashes(T604* C);
void r604move_all_cursors_after(T604* C);
void r604make_items(T604* C,T2 a1);
void r604add_traversing_cursor(T604* C,T0* a1);
T6 r604se_assigned_from(T0* a1);
T0* r604clone(T0* a1);
T6 r604same_type(T604* C,T0* a1);
void r604make(T604* C,T2 a1);
void r604clone_items(T604* C);
T6 r604conforms_to(T604* C,T0* a1);
T6 r604has(T604* C,T0* a1);
void r604make_keys(T604* C,T2 a1);
T2 r604hash_position(T604* C,T0* a1);
void r604clone_keys(T604* C);
void r604make_with_equality_testers(T604* C,T2 a1,T0* a2,T0* a3);
T6 r604cursor_same_position(T0* a1,T0* a2);
T0* r604twin(T604* C);
T0* r604new_cursor(T604* C);
void r604make_slots(T604* C,T2 a1);
T2 r604new_modulus(T2 a1);
T6 r604cursor_off(T0* a1);
void r196copy(T196* C,T0* a1);
T0* r196substring(T196* C,T2 a1,T2 a2);
T2 r196count(T196* C);
T2 r196item_code(T196* C,T2 a1);
T6 r196is_equal(T196* C,T0* a1);
T493 r196item(T196* C,T2 a1);
extern T0*oBC196utf8utils;
T6 r196se_assigned_from(T0* a1);
void r196make_from_string(T196* C,T0* a1);
T2 r196index_of(T196* C,T493 a1,T2 a2);
void r196make(T196* C,T2 a1);
void r196append_string(T196* C,T0* a1);
T2 r196hash_code(T196* C);
T6 r196conforms_to(T196* C,T0* a1);
void r196append_ucc_code(T196* C,T2 a1);
T6 r196empty(T196* C);
T0* r196twin(T196* C);
T0* r196to_utf8(T196* C);
T2 r196three_way_comparison(T196* C,T0* a1);
extern T0*oBC196i_settings;
T6 r704is_equal(T704* C,T0* a1);
T6 r704se_assigned_from(T0* a1);
T6 r704conforms_to(T704* C,T0* a1);
T0* r704twin(T704* C);
void r707copy(T707* C,T0* a1);
T0* r707cursor_item(T0* a1);
void r707add_attributes(T707* C,T0* a1,T0* a2);
T6 r707is_equal(T707* C,T0* a1);
void r707remove_traversing_cursor(T707* C,T0* a1);
void r707make_root(T707* C,T0* a1,T0* a2);
void r707cursor_go_after(T707* C,T0* a1);
void r707move_all_cursors_after(T707* C);
void r707add_traversing_cursor(T707* C,T0* a1);
T6 r707se_assigned_from(T0* a1);
T6 r707cursor_before(T0* a1);
void r707make_child(T707* C,T0* a1,T0* a2,T0* a3);
T6 r707same_type(T707* C,T0* a1);
T6 r707cursor_after(T0* a1);
T6 r707conforms_to(T707* C,T0* a1);
void r707cursor_forth(T707* C,T0* a1);
void r707cursor_start(T707* C,T0* a1);
T0* r707twin(T707* C);
void r707force_last(T707* C,T0* a1);
T0* r707new_cursor(T707* C);
void r707put_last(T707* C,T0* a1);
T6 r707cursor_off(T0* a1);
void r677fill(T677* C);
void r677compact_left(T677* C);
T2 r677count(T677* C);
void r677set_position(T677* C,T2 a1,T2 a2,T2 a3);
T6 r677is_equal(T677* C,T0* a1);
T2 r677lower(void);
T6 r677se_assigned_from(T0* a1);
void r677make_from_string(T677* C,T0* a1);
T6 r677conforms_to(T677* C,T0* a1);
void r677make_from_buffer(T677* C,T0* a1);
void r677resize(T677* C);
void r677make_with_size(T677* C,T0* a1,T2 a2);
T0* r677twin(T677* C);
void r677set_file(T677* C,T0* a1);
void r677flush(T677* C);
T6 r110is_equal(T110* C,T0* a1);
T6 r110se_assigned_from(T0* a1);
void r110make(T110* C);
T6 r110conforms_to(T110* C,T0* a1);
T0* r110twin(T110* C);
void r110put_string(T110* C,T0* a1);
T0* r204full_name(T204* C,T3 a1);
T6 r204is_equal(T204* C,T0* a1);
void r204remove_cluster(T204* C,T0* a1);
void r204set_subclusters(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
void r204unmount_root(T204* C,T0* a1);
T0* r204full_pathname(T204* C);
void r204make(T204* C,T0* a1,T0* a2);
void r204mount(T204* C,T0* a1,T0* a2);
T6 r204conforms_to(T204* C,T0* a1);
void r204unmount(T204* C,T0* a1);
T0* r204twin(T204* C);
void r204merge_externals(T204* C,T0* a1);
void r204mount_root(T204* C,T0* a1);
T6 r154is_equal(T154* C,T0* a1);
T6 r154se_assigned_from(T0* a1);
void r154make(T154* C);
T6 r154conforms_to(T154* C,T0* a1);
T0* r154twin(T154* C);
void r154put_string(T154* C,T0* a1);
T0* r680out(T680* C);
T6 r680is_equal(T680* C,T0* a1);
T6 r680se_assigned_from(T0* a1);
T0* r680clone(T0* a1);
void r680make(T680* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r680conforms_to(T680* C,T0* a1);
T0* r680twin(T680* C);
T6 r513is_equal(T513* C,T0* a1);
T6 r513se_assigned_from(T0* a1);
T6 r513conforms_to(T513* C,T0* a1);
T0* r513twin(T513* C);
T6 r571is_equal(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
void r571make(T571* C,T0* a1,T0* a2);
T6 r571conforms_to(T571* C,T0* a1);
T0* r571twin(T571* C);
T0* r596next_open_composite(T0* a1);
void r596enable_position_table(T596* C);
T6 r596is_equal(T596* C,T0* a1);
void r596on_content(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
void r596on_processing_instruction(T596* C,T0* a1,T0* a2);
void r596on_start_tag(T596* C,T0* a1,T0* a2,T0* a3);
void r596handle_position(T596* C,T0* a1);
void r596on_comment(T596* C,T0* a1);
void r596on_end_tag(T596* C,T0* a1,T0* a2);
T6 r596conforms_to(T596* C,T0* a1);
void r596make_from_imp_event(T596* C,T0* a1);
T0* r596twin(T596* C);
void r596make_from_imp(T596* C,T0* a1);
T6 r172is_equal(T172* C,T0* a1);
T6 r172se_assigned_from(T0* a1);
T6 r172is_correct(T172* C);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172last_error_extended_description(T172* C);
T0* r172twin(T172* C);
T6 r490is_equal(T490* C,T0* a1);
T6 r490se_assigned_from(T0* a1);
void r490make(T490* C);
void r490insert(T490* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r490insert_code(T490* C,T2 a1,T2 a2);
void r490move(T490* C,T2 a1,T2 a2,T2 a3);
T6 r490conforms_to(T490* C,T0* a1);
void r490storage_ensure_capacity(T490* C,T2 a1);
T0* r490twin(T490* C);
T6 r185is_equal(T185* C,T0* a1);
T6 r185has_attribute_by_name(T185* C,T0* a1);
T6 r185se_assigned_from(T0* a1);
void r185_183Pmake_from_imp(T185* C,T0* a1);
T0* r185attribute_by_name(T185* C,T0* a1);
T6 r185equal(T0* a1,T0* a2);
void r185_176P_183Pmake_from_imp(T185* C,T0* a1);
T6 r185conforms_to(T185* C,T0* a1);
T0* r185twin(T185* C);
T6 r185has_element_by_name(T185* C,T0* a1);
T0* r185element_by_name(T185* C,T0* a1);
T6 r185cursor_off(T185* C,T0* a1);
void r185make_from_imp(T185* C,T0* a1);
void r669yy_do_action(T669* C,T2 a1);
extern T0*oBC670yytable_template;
extern int fBC670yytable_template;
T0* r669yytable_template(void);
T0* r669empty_ucstring(void);
void r669make_parser_skeleton(T669* C);
T2 r669yy_at_beginning_of_line(T669* C);
void r669fatal_error(T0* a1);
extern T0*oBC35std;
T0* r669yytype1(T0* a1);
T0* r669yytype2(T0* a1);
T0* r669yytype3(T0* a1);
T0* r669yytype4(T0* a1);
void r669handle_found_text(T669* C);
void r669parse(T669* C);
void r669set_input_buffer(T669* C,T0* a1);
T2 r669yy_translate(T669* C,T2 a1);
extern T0*oBC671yy_ec_template;
extern int fBC671yy_ec_template;
T0* r669yy_ec_template(void);
void r669yy_execute_action(T669* C,T2 a1);
extern T0*oBC670yytranslate_template;
extern int fBC670yytranslate_template;
T0* r669yytranslate_template(void);
void r669clear_stacks(T669* C);
extern T0*oBC671yy_def_template;
extern int fBC671yy_def_template;
T0* r669yy_def_template(void);
void r669yy_load_input_buffer(T669* C);
extern T493 oBC670uc_collon;
extern int fBC670uc_collon;
T493 r669uc_collon(void);
extern T0*oBC670yyr1_template;
extern int fBC670yyr1_template;
T0* r669yyr1_template(void);
void r669make_with_buffer(T669* C,T0* a1);
T2 r669yy_null_trans_state(T669* C,T2 a1);
T0* r669position(T669* C);
extern T0*oBC671yy_accept_template;
extern int fBC671yy_accept_template;
T0* r669yy_accept_template(void);
void r669read_token(T669* C);
extern T0*oBC670yyr2_template;
extern int fBC670yyr2_template;
T0* r669yyr2_template(void);
T2 r669yy_previous_state(T669* C);
extern T0*oBC670yypgoto_template;
extern int fBC670yypgoto_template;
T0* r669yypgoto_template(void);
void r669yy_refill_input_buffer(T669* C);
T0* r669yy_fixed_array(T0* a1);
T6 r669conforms_to(T669* C,T0* a1);
extern T0*oBC671yy_meta_template;
extern int fBC671yy_meta_template;
T0* r669yy_meta_template(void);
extern T0*oBC671yy_base_template;
extern int fBC671yy_base_template;
T0* r669yy_base_template(void);
T0* r669twin(T669* C);
T0* r669clone(T0* a1);
T0* r669new_file_buffer(T0* a1);
void r669yy_initialize(T669* C);
T0* r669text(T669* C);
extern T0*oBC671yy_nxt_template;
extern int fBC671yy_nxt_template;
T0* r669yy_nxt_template(void);
void r669parse_from_stream(T669* C,T0* a1);
void r669yy_set_line_column(T669* C);
void r669yy_build_parser_tables(T669* C);
T0* r669split_name_and_prefix(T0* a1);
T6 r669is_equal(T669* C,T0* a1);
void r669report_error(T669* C,T0* a1);
extern T0*oBC670yydefact_template;
extern int fBC670yydefact_template;
T0* r669yydefact_template(void);
extern T0*oBC671yy_chk_template;
extern int fBC671yy_chk_template;
T0* r669yy_chk_template(void);
extern T0*oBC670yycheck_template;
extern int fBC670yycheck_template;
T0* r669yycheck_template(void);
void r669make(T669* C);
T0* r669yyfixed_array(T0* a1);
void r669yy_clear_all(T669* C);
extern T0*oBC670yydefgoto_template;
extern int fBC670yydefgoto_template;
T0* r669yydefgoto_template(void);
void r669yy_set_content(T669* C,T0* a1);
extern T0*oBC670yypact_template;
extern int fBC670yypact_template;
T0* r669yypact_template(void);
void r669set_start_condition(T669* C,T2 a1);
T6 r669se_assigned_from(T0* a1);
void r669yy_build_tables(T669* C);
T6 r66is_equal(T66* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r66command_arguments(void);
T6 r66se_assigned_from(T0* a1);
T6 r66conforms_to(T66* C,T0* a1);
T0* r66twin(T66* C);
T0* r66argument(T2 a1);
T6 r593is_equal(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
void r593make(T593* C);
T6 r593conforms_to(T593* C,T0* a1);
T0* r593twin(T593* C);
T6 r32is_equal(T32* C,T0* a1);
void r32report_no_parser_available_error(T32* C);
T6 r32se_assigned_from(T0* a1);
void r32report_cannot_write_file_error(T32* C,T0* a1);
void r32make(T32* C);
void r32report_cannot_read_file_error(T32* C,T0* a1);
void r32report_parser_error(T32* C,T0* a1);
T0* r32message(T0* a1);
T6 r32conforms_to(T32* C,T0* a1);
void r32report_not_xace_file_error(T32* C,T0* a1);
void r32_34Preport_error(T32* C,T0* a1);
T0* r32twin(T32* C);
void r32make_standard(T32* C);
void r32report_error(T32* C,T0* a1);
extern T0*oBC109error;
extern int fBC109error;
T0* r109error(void);
T6 r109is_equal(T109* C,T0* a1);
T6 r109se_assigned_from(T0* a1);
extern T0*oBC109input;
extern int fBC109input;
T0* r109input(void);
extern T0*oBC109output;
extern int fBC109output;
T0* r109output(void);
T6 r109conforms_to(T109* C,T0* a1);
T0* r109twin(T109* C);
void r42raise(T42* C,T0* a1);
T6 r42is_equal(T42* C,T0* a1);
T6 r42se_assigned_from(T0* a1);
T6 r42conforms_to(T42* C,T0* a1);
T0* r42twin(T42* C);
extern T0*oBC43developer_exception_name_memory;
void r43raise(T43* C,T0* a1);
T6 r43is_equal(T43* C,T0* a1);
T6 r43se_assigned_from(T0* a1);
T6 r43conforms_to(T43* C,T0* a1);
T0* r43twin(T43* C);
T6 r38is_equal(T38* C,T0* a1);
T6 r38se_assigned_from(T0* a1);
T6 r38conforms_to(T38* C,T0* a1);
T6 r38_px_60(T38* C,T0* a1);
T0* r38twin(T38* C);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171twin(T171* C);
T6 r533is_equal(T533* C,T0* a1);
T6 r533se_assigned_from(T0* a1);
T6 r533conforms_to(T533* C,T0* a1);
T3 r533to_character(T2 a1);
T0* r533twin(T533* C);
extern T0*oBC486factory;
extern int fBC486factory;
T0* r486factory(void);
T6 r486is_equal(T486* C,T0* a1);
T6 r486se_assigned_from(T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
T6 r37is_equal(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
T6 r37conforms_to(T37* C,T0* a1);
T0* r37twin(T37* C);
T6 r635is_equal(T635* C,T0* a1);
T6 r635se_assigned_from(T0* a1);
T6 r635conforms_to(T635* C,T0* a1);
T0* r635twin(T635* C);
T0* r169name(T0* a1);
T6 r169is_equal(T169* C,T0* a1);
T0* r169make_file_open_read(T0* a1);
T6 r169se_assigned_from(T0* a1);
T6 r169is_open_read(T0* a1);
void r169close(T0* a1);
T6 r169conforms_to(T169* C,T0* a1);
T6 r169end_of_input(T0* a1);
T2 r169read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r169twin(T169* C);
void r17process_system_file(T17* C,T0* a1);
T0* r17split_on_first(T0* a1,T3 a2);
T6 r17is_equal(T17* C,T0* a1);
void r17process_options(T17* C);
void r17process_arguments(T17* C);
T6 r17has_next_option_value(T17* C);
T6 r17se_assigned_from(T0* a1);
T0* r17clone(T0* a1);
T6 r17is_next_option_long_option(T17* C);
extern T0*oBC18Exceptions;
T0* r17Arguments(void);
T0* r17next_option_value(T17* C);
void r17make(T17* C);
void r17process_command(T17* C);
T6 r17is_valid_option_position(T2 a1);
T6 r17conforms_to(T17* C,T0* a1);
void r17process_define_string(T17* C,T0* a1);
void r17process_validate(T17* C);
T0* r17next_option(T17* C);
void r17process_build(T17* C);
T6 r17has_next_option(T17* C);
T0* r17twin(T17* C);
void r17process_define(T17* C);
T0* r17split_string(T0* a1,T3 a2);
void r17process_compilers(T17* C,T0* a1);
T6 r17match_long_option(T17* C,T0* a1);
void r17consume_option(T17* C);
extern T0*oBC17Usage_message;
extern int fBC17Usage_message;
T0* r17Usage_message(void);
T6 r87is_equal(T87* C,T0* a1);
T6 r87se_assigned_from(T0* a1);
T6 r87is_integer(T0* a1);
T6 r87same_case_insensitive(T0* a1,T0* a2);
T0* r87make(T2 a1);
T6 r87conforms_to(T87* C,T0* a1);
T2 r87case_insensitive_hash_code(T0* a1);
T0* r87twin(T87* C);
T6 r493_px_60(T493* C,T493 a1);
T6 r493_px_62(T493* C,T493 a1);
T6 r640is_equal(T640* C,T0* a1);
T0* r640variable_value(T640* C,T0* a1);
T6 r640se_assigned_from(T0* a1);
T0* r640get_environment_variable(T640* C,T0* a1);
T6 r640conforms_to(T640* C,T0* a1);
T0* r640interpreted_string(T640* C,T0* a1);
T0* r640twin(T640* C);
T2 r532nr_of_following_octets(T3 a1);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
void r532read_code(T532* C,T0* a1,T2 a2);
void r532read_following_octet(T532* C,T0* a1);
void r532put_code(T2 a1,T0* a2,T2 a3);
T6 r532conforms_to(T532* C,T0* a1);
T3 r532code_to_character(T2 a1);
T2 r532octet_size(T2 a1);
T0* r532twin(T532* C);
extern T0*oBC532specific;
T6 r532is_leading_octet(T3 a1);
T2 r532read_leading_octet(T532* C,T0* a1,T2 a2);
T6 r633is_equal(T633* C,T0* a1);
T6 r633se_assigned_from(T0* a1);
T0* r633new_event_parser_imp(void);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75_px_60(T75* C,T0* a1);
T0* r75twin(T75* C);
T0* r456substring(T0* a1,T2 a2,T2 a3);
T6 r456is_equal(T456* C,T0* a1);
T6 r456se_assigned_from(T0* a1);
void r456move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r456make(T2 a1);
void r456copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r456conforms_to(T456* C,T0* a1);
T0* r456resize(T0* a1,T2 a2);
T2 r456copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r456twin(T456* C);
T6 r716is_equal(T716* C,T0* a1);
T6 r716se_assigned_from(T0* a1);
T6 r716conforms_to(T716* C,T0* a1);
T0* r716twin(T716* C);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 717
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms90_1957581a;
extern T7*ms93_1849679439;
extern T7*ms93_16036;
extern T7*ms20_270;
extern T7*ms649_1606053737;
extern T7*ms168_14036;
extern T7*ms90_10208843;
extern T7*ms93_1644a;
extern T7*ms90_1957581;
extern T7*ms91_1300398076;
extern T7*ms168_1289562514;
extern T7*ms93_17696;
extern T7*ms168_10866961;
extern T7*ms681_899222;
extern T7*ms91_3175a;
extern T7*ms93_2087910503;
extern T7*ms445_1338477769;
extern T7*ms168_9909665;
extern T7*ms168_16821;
extern T7*ms168_16942;
extern T7*ms17_11153106;
extern T7*ms168_17696;
extern T7*ms643_512683247;
extern T7*ms93_1978068077;
extern T7*ms17_3301;
extern T7*ms168_51843716;
extern T7*ms93_3175a;
extern T7*ms92_9909665;
extern T7*ms93_408086;
extern T7*ms445_1338477769a;
extern T7*ms93_1254606809a;
extern T7*ms93_326648287;
extern T7*ms91_452889;
extern T7*ms168_2185421;
extern T7*ms92_881365921;
extern T7*ms17_391651;
extern T7*ms93_1834006767;
extern T7*ms532_1684857857;
extern T7*ms17_676;
extern T7*ms17_691;
extern T7*ms17_79140;
extern T7*ms90_431271;
extern T7*ms165_1384826;
extern T7*ms165_2104;
extern T7*ms80_1515383187;
extern T7*ms90_1300398076;
extern T7*ms91_1254606809;
extern T7*ms592_988446515;
extern T7*ms90_1940534;
extern T7*ms168_2032026;
extern T7*ms93_10031271;
extern T7*ms90_9702826;
extern T7*ms168_399591;
extern T7*ms17_0;
extern T7*ms19_0;
extern T7*ms168_452889;
extern T7*ms91_659330894;
extern T7*ms93_1975394;
extern T7*ms165_12184;
extern T7*ms90_9702034;
extern T7*ms17_282254306;
extern T7*ms91_1644;
extern T7*ms91_1975394;
extern T7*ms673_89510;
extern T7*ms91_214a;
extern T7*ms91_229a;
extern T7*ms93_1644;
extern T7*ms90_1366344811;
extern T7*ms91_3175;
extern T7*ms93_214a;
extern T7*ms90_1837939351;
extern T7*ms93_1957581a;
extern T7*ms91_3301;
extern T7*ms90_15934;
extern T7*ms91_3175aa;
extern T7*ms93_2120668389;
extern T7*ms93_229a;
extern T7*ms681_35397;
extern T7*ms93_3175;
extern T7*ms90_1288001260;
extern T7*ms90_17696;
extern T7*ms681_36572;
extern T7*ms168_10208843;
extern T7*ms671_1173251759;
extern T7*ms93_10208843;
extern T7*ms91_2116863196;
extern T7*ms93_2122613;
extern T7*ms91_1957581a;
extern T7*ms168_2024949725;
extern T7*ms91_2122613;
extern T7*ms91_2071896;
extern T7*ms441_195717202;
extern T7*ms93_2259966;
extern T7*ms168_10559665;
extern T7*ms90_452889;
extern T7*ms91_1849679439;
extern T7*ms91_2259966;
extern T7*ms90_1205954912;
extern T7*ms173_40;
extern T7*ms173_41;
extern T7*ms91_10208843;
extern T7*ms110_447851;
extern T7*ms92_17696;
extern T7*ms641_125;
extern T7*ms93_1957581;
extern T7*ms641_303;
extern T7*ms90_1254606809;
extern T7*ms92_171550;
extern T7*ms91_1957581;
extern T7*ms168_59251;
extern T7*ms168_434665;
extern T7*ms91_710556862;
extern T7*ms91_2087910503;
extern T7*ms93_1300398076;
extern T7*ms17_16036;
extern T7*ms90_211;
extern T7*ms91_881365921;
extern T7*ms90_322;
extern T7*ms90_298;
extern T7*ms90_676;
extern T7*ms590_1214914019;
extern T7*ms93_452889;
extern T7*ms91_1978068077;
extern T7*ms92_945472392;
extern T7*ms169_1338085634;
extern T7*ms168_9558536;
extern T7*ms168_1988096;
extern T7*ms90_10049231;
extern T7*ms91_214;
extern T7*ms93_659330894;
extern T7*ms91_229;
extern T7*ms444_1539961075;
extern T7*ms165_0;
extern T7*ms169_0;
extern T7*ms154_447584;
extern T7*ms641_36;
extern T7*ms168_77350;
extern T7*ms168_78002;
extern T7*ms30_1415324896;
extern T7*ms92_434665;
extern T7*ms90_659330894;
extern T7*ms168_78263;
extern T7*ms90_1849679439;
extern T7*ms90_2087913448;
extern T7*ms168_78490;
extern T7*ms92_440825;
extern T7*ms91_1254606809a;
extern T7*ms92_194;
extern T7*ms91_408086;
extern T7*ms93_49483191;
extern T7*ms168_85591;
extern T7*ms168_408086;
extern T7*ms168_1975394;
extern T7*ms92_691;
extern T7*ms90_2087910503;
extern T7*ms90_93956277;
extern T7*ms90_696515478;
extern T7*ms93_1254606809;
extern T7*ms93_3175aa;
extern T7*ms17_403021;
extern T7*ms589_229;
extern T7*ms93_710556862;
extern T7*ms90_1885954800;
extern T7*ms93_881365921;
extern T7*ms93_214;
extern T7*ms93_229;
extern T7*ms90_1644;
extern T7*ms92_1975394;
extern T7*ms19_0a;
extern T7*ms90_1975394;
extern T7*ms17_2246326;
extern T7*ms91_2120668389;
extern T7*ms92_452889;
extern T7*ms90_3175;
extern T7*ms90_710556862;
extern T7*ms168_402346;
extern T7*ms92_3175;
extern T7*ms681_5467;
extern T7*ms90_881365921;
extern T7*ms443_0;
extern T7*ms91_1644a;
extern T7*ms532_336971577;
extern T7*ms91_17696;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void*se_ma447(int argc,...);
T0* X632new_event_parser_imp(T0*C);
void X86put_character(T0*C,T3 a1);
void X86put_string(T0*C,T0* a1);
void X30execute(T0*C);
T0* X121item(T0*C);
T6 X121after(T0*C);
void X121forth(T0*C);
void X121start(T0*C);
T2 X122count(T0*C);
T0* X122cursor_item(T0*C,T0* a1);
T6 X122is_empty(T0*C);
T6 X122cursor_after(T0*C,T0* a1);
void X122cursor_forth(T0*C,T0* a1);
void X122cursor_start(T0*C,T0* a1);
T0* X122new_cursor(T0*C);
T0* X195cursor_item(T0*C,T0* a1);
void X195cursor_go_after(T0*C,T0* a1);
T6 X195cursor_after(T0*C,T0* a1);
void X195cursor_forth(T0*C,T0* a1);
void X195cursor_start(T0*C,T0* a1);
T6 X195cursor_off(T0*C,T0* a1);
T0* X187parent(T0*C);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
T0* X184parent(T0*C);
T6 X236test(T0*C,T0* a1,T0* a2);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X451clear_all(T0*C,T0* a1);
T0* X451make(T0*C,T2 a1);
T0* X451resize(T0*C,T0* a1,T2 a2);
void X183force_last(T0*C,T0* a1);
T0* X183parent(T0*C);
void X233put(T0*C,T0* a1,T2 a2);
T0* X233item(T0*C,T2 a1);
void X233set_all_with(T0*C,T0* a1);
void X233resize(T0*C,T2 a1);
void X455fill(T0*C);
void X188put_last(T0*C,T0* a1);
T0* X188parent(T0*C);
void X43raise(T0*C,T0* a1);
T2 X448count(T0*C);
T2 X448item(T0*C,T2 a1);
T2 X448lower(T0*C);
T0* X255make(T0*C,T2 a1);
T0* X255resize(T0*C,T0* a1,T2 a2);
void X167parse_file(T0*C,T0* a1);
void X450put(T0*C,T0* a1,T2 a2);
T0* X450item(T0*C,T2 a1);
void X450set_all_with(T0*C,T0* a1);
void X450resize(T0*C,T2 a1);
void X627remove_traversing_cursor(T0*C,T0* a1);
void X627cursor_go_after(T0*C,T0* a1);
void X627add_traversing_cursor(T0*C,T0* a1);
void X627cursor_forth(T0*C,T0* a1);
void X627cursor_start(T0*C,T0* a1);
T2 X485item_code(T0*C,T2 a1);
void X485insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X485insert_code(T0*C,T2 a1,T2 a2);
T6 X163is_connected(T0*C);
void X163read_character(T0*C);
T6 X163end_of_input(T0*C);
T3 X163last_character(T0*C);
T0* X81default_message(T0*C);
void X78generate(T0*C,T0* a1);
T6 T37toT6(T0* source);
T0* T636toT635(int source);
T0* T634toT633(int source);
T0* T2toT38(T2 source);
T2 T38toT2(T0* source);
T0* T6toT37(T6 source);

#ifdef __cplusplus
}
#endif
