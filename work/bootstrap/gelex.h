#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S342 T342;
typedef struct S250 T250;
typedef struct S11 T11;
typedef struct S219 T219;
typedef struct S228 T228;
typedef struct S217 T217;
typedef struct S213 T213;
typedef struct S232 T232;
typedef struct S77 T77;
typedef struct S226 T226;
typedef struct S386 T386;
typedef struct S488 T488;
typedef struct S180 T180;
typedef struct S89 T89;
typedef struct S270 T270;
typedef struct S363 T363;
typedef struct S323 T323;
typedef struct S231 T231;
typedef struct S221 T221;
typedef struct S490 T490;
typedef struct S528 T528;
typedef struct S521 T521;
typedef struct S533 T533;
typedef struct S168 T168;
typedef struct S471 T471;
typedef struct S291 T291;
typedef struct S532 T532;
typedef struct S85 T85;
typedef struct S439 T439;
typedef struct S456 T456;
typedef struct S508 T508;
typedef struct S361 T361;
typedef struct S166 T166;
typedef struct S144 T144;
typedef struct S271 T271;
typedef struct S489 T489;
typedef struct S408 T408;
typedef struct S452 T452;
typedef struct S274 T274;
typedef struct S492 T492;
typedef struct S141 T141;
typedef struct S121 T121;
typedef struct S249 T249;
typedef struct S196 T196;
typedef struct S116 T116;
typedef struct S518 T518;
typedef struct S499 T499;
typedef struct S146 T146;
typedef struct S52 T52;
typedef struct S416 T416;
typedef struct S324 T324;
typedef struct S434 T434;
typedef struct S458 T458;
typedef struct S103 T103;
typedef struct S425 T425;
typedef struct S346 T346;
typedef struct S242 T242;
typedef struct S68 T68;
typedef struct S256 T256;
typedef struct S530 T530;
typedef struct S535 T535;
typedef struct S82 T82;
typedef struct S192 T192;
typedef struct S172 T172;
typedef struct S42 T42;
typedef struct S498 T498;
typedef struct S66 T66;
typedef struct S23 T23;
typedef struct S159 T159;
typedef struct S534 T534;
typedef struct S453 T453;
typedef struct S442 T442;
typedef struct S80 T80;
typedef struct S272 T272;
typedef struct S433 T433;
typedef struct S269 T269;
typedef struct S17 T17;
typedef struct S520 T520;
typedef struct S432 T432;
typedef struct S254 T254;
typedef struct S40 T40;
typedef struct S447 T447;
typedef struct S459 T459;
typedef struct S531 T531;
typedef struct S484 T484;
typedef struct S430 T430;
typedef struct S123 T123;
typedef struct S493 T493;
typedef struct S20 T20;
typedef struct S41 T41;
typedef struct S382 T382;
typedef struct S76 T76;
typedef struct S522 T522;
typedef struct S328 T328;
typedef struct S457 T457;
typedef struct S539 T539;
typedef struct S165 T165;
typedef struct S225 T225;
typedef struct S485 T485;
typedef struct S7 T7;
typedef struct S451 T451;
typedef struct S523 T523;
typedef struct S278 T278;
typedef struct S67 T67;
typedef struct S347 T347;
typedef struct S366 T366;
typedef struct S321 T321;
typedef struct S263 T263;
typedef struct S326 T326;
typedef struct S395 T395;
typedef struct S305 T305;
typedef struct S322 T322;
typedef struct S487 T487;
typedef struct S415 T415;
typedef struct S177 T177;
typedef struct S480 T480;
typedef struct S379 T379;
typedef struct S494 T494;
typedef struct S90 T90;
typedef struct S450 T450;
typedef struct S469 T469;
typedef struct S486 T486;
typedef struct S455 T455;
typedef struct S181 T181;
typedef struct S148 T148;
typedef struct S483 T483;
typedef struct S422 T422;
typedef struct S238 T238;
typedef struct S385 T385;
typedef struct S421 T421;
typedef struct S50 T50;
typedef struct S268 T268;
typedef struct S424 T424;
typedef struct S92 T92;
typedef struct S151 T151;
typedef struct S229 T229;
typedef struct S435 T435;
typedef struct S220 T220;
typedef struct S210 T210;
typedef struct S143 T143;
typedef struct S414 T414;
typedef struct S169 T169;
typedef struct S454 T454;
typedef struct S419 T419;
typedef struct S423 T423;
typedef struct S160 T160;
typedef struct S295 T295;
typedef struct S410 T410;
typedef struct S109 T109;
typedef struct S287 T287;
typedef struct S440 T440;
typedef struct S113 T113;
typedef struct S69 T69;
typedef struct S497 T497;
typedef struct S178 T178;
typedef struct S222 T222;
typedef struct S255 T255;
typedef struct S443 T443;
typedef struct S331 T331;
typedef struct S241 T241;
typedef struct S104 T104;
typedef struct S413 T413;
typedef struct S495 T495;
typedef struct S163 T163;
typedef struct S88 T88;
typedef struct S138 T138;
typedef struct S441 T441;
typedef struct S317 T317;

/*C Header Pass 2 :*/
typedef T0**T234;
typedef T0**T198;
typedef T0**T449;
typedef T0**T280;
typedef T6*T79;
typedef T0**T276;
typedef T0**T541;
typedef T0**T162;
typedef T0**T125;
typedef T0**T115;
typedef T0**T330;
typedef T3*T9;
typedef T2*T87;
typedef T0**T84;
typedef T0**T412;

/*C Header Pass 3 :*/

/*C Header Pass 4 :*/
struct S342{Tid id;T0* _item;T0* _right;};
extern T342 M342;
struct S250{Tid id;T0* _comparator;};
extern T250 M250;
struct S11{Tid id;T0* _description;T0* _error_handler;T0* _dfa;};
extern T11 M11;
struct S219{Tid id;T0* _parameters;};
extern T219 M219;
struct S228{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T228 M228;
struct S217{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T217 M217;
struct S213{Tid id;};
extern T213 M213;
struct S77{Tid id;T2 _count;T0* _storage;};
extern T77 M77;
struct S226{Tid id;T6 _yyline_used;T0* _states;T0* _yy_accept;T0* _yy_ec;T6 _yyposition_used;T0* _input_filename;T0* _eiffel_header;T6 _bol_needed;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T0* _yy_nxt;T6 _yybacking_up;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _yynb_rules;T2 _yynull_equiv_class;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T2 _yynb_rows;T2 _minimum_symbol;T2 _yyend_of_buffer;T6 _inspect_used;};
extern T226 M226;
struct S386{Tid id;T6 _push_back_flag;T0* _name;T0* _string_name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T386 M386;
struct S488{Tid id;T0* _parameters;};
extern T488 M488;
struct S232{Tid id;T2 _item;T0* _right;T0* _left;};
extern T232 M232;
struct S89{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T89 M89;
struct S270{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T270 M270;
struct S323{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _meta_equiv_classes;};
extern T323 M323;
struct S231{Tid id;T234 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T231 M231;
struct S221{Tid id;T0* _parameters;};
extern T221 M221;
struct S490{Tid id;};
extern T490 M490;
struct S528{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T528 M528;
struct S521{Tid id;T0* _parameters;};
extern T521 M521;
struct S533{Tid id;};
extern T533 M533;
struct S168{Tid id;};
extern T168 M168;
struct S471{Tid id;T0* _target;T0* _label;};
extern T471 M471;
struct S291{Tid id;};
extern T291 M291;
struct S532{Tid id;};
extern T532 M532;
struct S85{Tid id;T87 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T85 M85;
struct S439{Tid id;};
extern T439 M439;
struct S456{Tid id;T0* _parameters;};
extern T456 M456;
struct S508{Tid id;};
extern T508 M508;
struct S361{Tid id;T0* _item;T0* _right;T0* _left;};
extern T361 M361;
struct S166{Tid id;};
extern T166 M166;
struct S144{Tid id;};
extern T144 M144;
struct S489{Tid id;T0* _parameters;};
extern T489 M489;
struct S408{Tid id;};
extern T408 M408;
struct S452{Tid id;T0* _parameters;};
extern T452 M452;
struct S274{Tid id;T276 _storage;T2 _capacity;T2 _upper;};
extern T274 M274;
struct S492{Tid id;T0* _target;T2 _label;};
extern T492 M492;
struct S141{Tid id;};
extern T141 M141;
struct S121{Tid id;};
extern T121 M121;
struct S180{Tid id;T0* _first;T0* _second;};
extern T180 M180;
struct S249{Tid id;};
extern T249 M249;
struct S196{Tid id;T198 _storage;T2 _capacity;T2 _upper;};
extern T196 M196;
struct S518{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T518 M518;
struct S499{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T499 M499;
struct S146{Tid id;T0* _error_file;T0* _warning_file;T0* _info_file;};
extern T146 M146;
struct S52{Tid id;T2 _item;};
extern T52 M52;
struct S416{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T416 M416;
struct S324{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T324 M324;
struct S434{Tid id;T0* _parameters;};
extern T434 M434;
struct S458{Tid id;T0* _parameters;};
extern T458 M458;
struct S103{Tid id;};
extern T103 M103;
struct S425{Tid id;};
extern T425 M425;
struct S346{Tid id;T0* _transitions;T2 _state_id;T0* _common_state;};
extern T346 M346;
struct S242{Tid id;T0* _comparator;};
extern T242 M242;
struct S68{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T68 M68;
struct S256{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T256 M256;
struct S530{Tid id;};
extern T530 M530;
struct S535{Tid id;};
extern T535 M535;
struct S82{Tid id;T84 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T82 M82;
struct S192{Tid id;T0* _item;T0* _right;};
extern T192 M192;
struct S172{Tid id;};
extern T172 M172;
struct S42{Tid id;T8 _item;};
extern T42 M42;
struct S498{Tid id;T0* _parameters;};
extern T498 M498;
struct S66{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T66 M66;
struct S23{Tid id;T0* _name;T0* _string_name;T0* _path;T8 _output_stream;};
extern T23 M23;
struct S159{Tid id;};
extern T159 M159;
struct S534{Tid id;};
extern T534 M534;
struct S363{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T363 M363;
struct S453{Tid id;T0* _parameters;};
extern T453 M453;
struct S442{Tid id;T0* _parameters;};
extern T442 M442;
struct S80{Tid id;};
extern T80 M80;
struct S272{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T272 M272;
struct S433{Tid id;T0* _parameters;};
extern T433 M433;
struct S116{Tid id;T0* _states;T6 _in_trail_context;};
extern T116 M116;
struct S269{Tid id;T0* _text;};
extern T269 M269;
struct S17{Tid id;T0* _error_handler;};
extern T17 M17;
struct S520{Tid id;T0* _parameters;};
extern T520 M520;
struct S432{Tid id;T0* _parameters;};
extern T432 M432;
struct S254{Tid id;};
extern T254 M254;
struct S40{Tid id;T2 _array_size;T6 _backing_up_report;T0* _backing_up_filename;T6 _case_insensitive;T2 _characters_count;T6 _debug_mode;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _no_default_rule;T6 _no_warning;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _input_filename;T0* _output_filename;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T40 M40;
struct S447{Tid id;T449 _storage;T2 _capacity;T2 _upper;};
extern T447 M447;
struct S459{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T459 M459;
struct S531{Tid id;};
extern T531 M531;
struct S484{Tid id;T0* _parameters;};
extern T484 M484;
struct S430{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T430 M430;
struct S123{Tid id;T125 _storage;T2 _capacity;T2 _upper;};
extern T123 M123;
struct S493{Tid id;T0* _parameters;};
extern T493 M493;
struct S20{Tid id;T0* _parameters;};
extern T20 M20;
struct S41{Tid id;T6 _item;};
extern T41 M41;
struct S382{Tid id;};
extern T382 M382;
struct S76{Tid id;T79 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T76 M76;
struct S522{Tid id;T0* _parameters;};
extern T522 M522;
struct S328{Tid id;T330 _storage;T2 _capacity;T2 _upper;};
extern T328 M328;
struct S457{Tid id;T0* _parameters;};
extern T457 M457;
struct S539{Tid id;T541 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T539 M539;
struct S165{Tid id;T162 _storage;T2 _capacity;T2 _upper;};
extern T165 M165;
struct S225{Tid id;T115 _storage;T2 _capacity;T2 _upper;};
extern T225 M225;
struct S271{Tid id;T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;T6 _has_eof;};
extern T271 M271;
struct S485{Tid id;T0* _parameters;};
extern T485 M485;
struct S451{Tid id;T0* _parameters;};
extern T451 M451;
struct S523{Tid id;T0* _parameters;};
extern T523 M523;
struct S278{Tid id;T280 _storage;T2 _capacity;T2 _upper;};
extern T278 M278;
struct S67{Tid id;T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T67 M67;
struct S347{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T347 M347;
struct S366{Tid id;};
extern T366 M366;
struct S321{Tid id;};
extern T321 M321;
struct S263{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T263 M263;
struct S326{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T326 M326;
struct S395{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T2 _nb_open_brackets;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _options_overrider;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _singleton_line;T2 _singleton_column;T2 _singleton_count;T2 _series_line;T2 _series_column;T2 _series_count;T2 _regexp_line;T2 _regexp_column;T2 _regexp_count;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T395 M395;
struct S305{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T305 M305;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S487{Tid id;T0* _parameters;};
extern T487 M487;
struct S415{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T415 M415;
struct S177{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T177 M177;
struct S480{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T480 M480;
struct S379{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T379 M379;
struct S494{Tid id;T0* _parameters;};
extern T494 M494;
struct S90{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T90 M90;
struct S450{Tid id;T0* _parameters;};
extern T450 M450;
struct S469{Tid id;};
extern T469 M469;
struct S486{Tid id;T0* _parameters;};
extern T486 M486;
struct S455{Tid id;T0* _parameters;};
extern T455 M455;
struct S181{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T181 M181;
struct S148{Tid id;};
extern T148 M148;
struct S483{Tid id;};
extern T483 M483;
struct S422{Tid id;T0* _parameters;};
extern T422 M422;
struct S238{Tid id;T0* _target;};
extern T238 M238;
struct S385{Tid id;T0* _parameters;};
extern T385 M385;
struct S421{Tid id;T0* _parameters;};
extern T421 M421;
struct S50{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T50 M50;
struct S268{Tid id;};
extern T268 M268;
struct S424{Tid id;T0* _parameters;};
extern T424 M424;
struct S92{Tid id;T87 _storage;T2 _capacity;T2 _upper;};
extern T92 M92;
struct S151{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T151 M151;
struct S229{Tid id;T2 _count;T0* _storage;};
extern T229 M229;
struct S435{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T435 M435;
struct S220{Tid id;T0* _parameters;};
extern T220 M220;
struct S210{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T210 M210;
struct S143{Tid id;T84 _storage;T2 _capacity;T2 _upper;};
extern T143 M143;
struct S414{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T414 M414;
struct S169{Tid id;T0* _name;};
extern T169 M169;
struct S454{Tid id;T0* _parameters;};
extern T454 M454;
struct S419{Tid id;T0* _name;};
extern T419 M419;
struct S423{Tid id;};
extern T423 M423;
struct S160{Tid id;T162 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T160 M160;
struct S295{Tid id;};
extern T295 M295;
struct S410{Tid id;T412 _storage;T2 _capacity;T2 _upper;};
extern T410 M410;
struct S109{Tid id;};
extern T109 M109;
struct S287{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T287 M287;
struct S440{Tid id;T0* _parameters;};
extern T440 M440;
struct S113{Tid id;T115 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T113 M113;
struct S69{Tid id;T3 _item;};
extern T69 M69;
struct S322{Tid id;T2 _state_id;T2 _symbol;T2 _target_id;T2 _default_id;};
extern T322 M322;
struct S497{Tid id;T0* _comparator;};
extern T497 M497;
struct S178{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T178 M178;
struct S222{Tid id;T6 _yyline_used;T0* _states;T0* _yy_accept;T0* _yy_ec;T6 _yyposition_used;T0* _input_filename;T0* _eiffel_header;T6 _bol_needed;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_acclist;T2 _yyjam_state;T2 _yyjam_base;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _yy_base;T6 _yyreject_used;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _yynb_rules;T2 _yynull_equiv_class;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T6 _inspect_used;T2 _yytemplate_mark;T6 _yyvariable_trail_context;T2 _minimum_symbol;T2 _yyend_of_buffer;T0* _yy_meta;T0* _meta_equiv_classes;T6 _meta_equiv_classes_used;T0* _protos;T0* _templates;T0* _singletons;T2 _first_free;T2 _table_end;T2 _templates_count;};
extern T222 M222;
struct S255{Tid id;};
extern T255 M255;
struct S443{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T443 M443;
struct S331{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T331 M331;
struct S241{Tid id;};
extern T241 M241;
struct S104{Tid id;T0* _comparator;};
extern T104 M104;
struct S413{Tid id;T0* _parameters;};
extern T413 M413;
struct S495{Tid id;T0* _parameters;};
extern T495 M495;
struct S163{Tid id;T0* _program_name;};
extern T163 M163;
struct S88{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T88 M88;
struct S138{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T138 M138;
struct S441{Tid id;T0* _parameters;};
extern T441 M441;
struct S317{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T317 M317;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T0* r3out(T3 C);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
void r3out_in_tagged_out_memory(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T6 r3_px_62(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
extern T0*oBC1tagged_out_memory;
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
void r234set_all_with(T234 C,T0* a1,T2 a2);
void r234copy_from(T234 C,T234 a1,T2 a2);
void r198clear_all(T198 C,T2 a1);
T198 r198realloc(T198 C,T2 a1,T2 a2);
void r198set_all_with(T198 C,T0* a1,T2 a2);
void r198clear(T198 C,T2 a1,T2 a2);
void r198copy_from(T198 C,T198 a1,T2 a2);
void r449clear_all(T449 C,T2 a1);
T449 r449realloc(T449 C,T2 a1,T2 a2);
void r449set_all_with(T449 C,T0* a1,T2 a2);
void r449clear(T449 C,T2 a1,T2 a2);
void r449copy_from(T449 C,T449 a1,T2 a2);
void r280clear_all(T280 C,T2 a1);
T280 r280realloc(T280 C,T2 a1,T2 a2);
void r280set_all_with(T280 C,T0* a1,T2 a2);
void r280clear(T280 C,T2 a1,T2 a2);
void r280copy_from(T280 C,T280 a1,T2 a2);
void r79set_all_with(T79 C,T6 a1,T2 a2);
void r79copy_from(T79 C,T79 a1,T2 a2);
void r276clear_all(T276 C,T2 a1);
T276 r276realloc(T276 C,T2 a1,T2 a2);
void r276set_all_with(T276 C,T0* a1,T2 a2);
void r276clear(T276 C,T2 a1,T2 a2);
void r276copy_from(T276 C,T276 a1,T2 a2);
void r541copy_from(T541 C,T541 a1,T2 a2);
void r162clear_all(T162 C,T2 a1);
T162 r162realloc(T162 C,T2 a1,T2 a2);
void r162set_all_with(T162 C,T0* a1,T2 a2);
void r162clear(T162 C,T2 a1,T2 a2);
void r162copy_from(T162 C,T162 a1,T2 a2);
void r125clear_all(T125 C,T2 a1);
T125 r125realloc(T125 C,T2 a1,T2 a2);
void r125set_all_with(T125 C,T0* a1,T2 a2);
void r125clear(T125 C,T2 a1,T2 a2);
void r125copy_from(T125 C,T125 a1,T2 a2);
void r115clear_all(T115 C,T2 a1);
T115 r115realloc(T115 C,T2 a1,T2 a2);
void r115set_all_with(T115 C,T0* a1,T2 a2);
void r115clear(T115 C,T2 a1,T2 a2);
void r115copy_from(T115 C,T115 a1,T2 a2);
void r330clear_all(T330 C,T2 a1);
T330 r330realloc(T330 C,T2 a1,T2 a2);
void r330set_all_with(T330 C,T0* a1,T2 a2);
void r330clear(T330 C,T2 a1,T2 a2);
void r330copy_from(T330 C,T330 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
T2 r9fast_occurrences(T9 C,T3 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r87clear_all(T87 C,T2 a1);
T87 r87realloc(T87 C,T2 a1,T2 a2);
void r87move(T87 C,T2 a1,T2 a2,T2 a3);
void r87set_all_with(T87 C,T2 a1,T2 a2);
void r87clear(T87 C,T2 a1,T2 a2);
void r87copy_from(T87 C,T87 a1,T2 a2);
void r84clear_all(T84 C,T2 a1);
T84 r84realloc(T84 C,T2 a1,T2 a2);
void r84set_all_with(T84 C,T0* a1,T2 a2);
void r84clear(T84 C,T2 a1,T2 a2);
void r84copy_from(T84 C,T84 a1,T2 a2);
void r412clear_all(T412 C,T2 a1);
T412 r412realloc(T412 C,T2 a1,T2 a2);
void r412set_all_with(T412 C,T0* a1,T2 a2);
void r412clear(T412 C,T2 a1,T2 a2);
void r412copy_from(T412 C,T412 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T2 r7occurrences(T7* C,T3 a1);
T2 r7item_code(T7* C,T2 a1);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7make_from_string(T7* C,T0* a1);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7string(T7* C);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
T8 r7to_external(T7* C);
void r7to_lower(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r231copy(T231* C,T0* a1);
T2 r231count(T231* C);
T0* r231item(T231* C,T2 a1);
T6 r231se_assigned_from(T0* a1);
void r231make(T231* C,T2 a1,T2 a2);
T6 r231conforms_to(T231* C,T0* a1);
T0* r231twin(T231* C);
void r85copy(T85* C,T0* a1);
T2 r85count(T85* C);
T2 r85item(T85* C,T2 a1);
T6 r85se_assigned_from(T0* a1);
void r85make(T85* C,T2 a1,T2 a2);
T6 r85conforms_to(T85* C,T0* a1);
void r85resize(T85* C,T2 a1,T2 a2);
T0* r85twin(T85* C);
void r274copy(T274* C,T0* a1);
T6 r274se_assigned_from(T0* a1);
void r274make(T274* C,T2 a1);
T6 r274conforms_to(T274* C,T0* a1);
void r274resize(T274* C,T2 a1);
T0* r274twin(T274* C);
void r196copy(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196make(T196* C,T2 a1);
T6 r196conforms_to(T196* C,T0* a1);
void r196resize(T196* C,T2 a1);
T0* r196twin(T196* C);
void r82copy(T82* C,T0* a1);
T2 r82count(T82* C);
T0* r82item(T82* C,T2 a1);
T6 r82valid_index(T82* C,T2 a1);
T6 r82se_assigned_from(T0* a1);
void r82make(T82* C,T2 a1,T2 a2);
T6 r82conforms_to(T82* C,T0* a1);
T0* r82twin(T82* C);
void r447copy(T447* C,T0* a1);
T6 r447se_assigned_from(T0* a1);
void r447make(T447* C,T2 a1);
T6 r447conforms_to(T447* C,T0* a1);
void r447resize(T447* C,T2 a1);
T0* r447twin(T447* C);
void r123copy(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
void r123make(T123* C,T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
void r123resize(T123* C,T2 a1);
T0* r123twin(T123* C);
void r76copy(T76* C,T0* a1);
T6 r76item(T76* C,T2 a1);
T6 r76se_assigned_from(T0* a1);
void r76make(T76* C,T2 a1,T2 a2);
T6 r76conforms_to(T76* C,T0* a1);
T0* r76twin(T76* C);
void r328copy(T328* C,T0* a1);
T6 r328se_assigned_from(T0* a1);
void r328make(T328* C,T2 a1);
T6 r328conforms_to(T328* C,T0* a1);
void r328resize(T328* C,T2 a1);
T0* r328twin(T328* C);
void r539copy(T539* C,T0* a1);
T0* r539item(T539* C,T2 a1);
T6 r539se_assigned_from(T0* a1);
T6 r539conforms_to(T539* C,T0* a1);
T0* r539twin(T539* C);
void r165copy(T165* C,T0* a1);
T6 r165se_assigned_from(T0* a1);
void r165make(T165* C,T2 a1);
T6 r165conforms_to(T165* C,T0* a1);
void r165resize(T165* C,T2 a1);
T0* r165twin(T165* C);
void r225copy(T225* C,T0* a1);
T6 r225se_assigned_from(T0* a1);
void r225make(T225* C,T2 a1);
T6 r225conforms_to(T225* C,T0* a1);
void r225resize(T225* C,T2 a1);
T0* r225twin(T225* C);
void r278copy(T278* C,T0* a1);
T6 r278se_assigned_from(T0* a1);
void r278make(T278* C,T2 a1);
T6 r278conforms_to(T278* C,T0* a1);
void r278resize(T278* C,T2 a1);
T0* r278twin(T278* C);
void r92copy(T92* C,T0* a1);
T6 r92se_assigned_from(T0* a1);
void r92make(T92* C,T2 a1);
T6 r92conforms_to(T92* C,T0* a1);
void r92resize(T92* C,T2 a1);
T0* r92twin(T92* C);
void r92with_capacity(T92* C,T2 a1);
void r92from_collection(T92* C,T0* a1);
void r143copy(T143* C,T0* a1);
T6 r143se_assigned_from(T0* a1);
void r143make(T143* C,T2 a1);
T6 r143conforms_to(T143* C,T0* a1);
void r143resize(T143* C,T2 a1);
T0* r143twin(T143* C);
void r160copy(T160* C,T0* a1);
T2 r160count(T160* C);
T0* r160item(T160* C,T2 a1);
T6 r160valid_index(T160* C,T2 a1);
T6 r160se_assigned_from(T0* a1);
void r160make(T160* C,T2 a1,T2 a2);
T6 r160conforms_to(T160* C,T0* a1);
T0* r160twin(T160* C);
void r410copy(T410* C,T0* a1);
T2 r410count(T410* C);
T0* r410item(T410* C,T2 a1);
T6 r410se_assigned_from(T0* a1);
void r410make(T410* C,T2 a1);
T6 r410conforms_to(T410* C,T0* a1);
void r410resize(T410* C,T2 a1);
T0* r410twin(T410* C);
void r113copy(T113* C,T0* a1);
T2 r113count(T113* C);
T0* r113item(T113* C,T2 a1);
T6 r113se_assigned_from(T0* a1);
void r113make(T113* C,T2 a1,T2 a2);
T6 r113conforms_to(T113* C,T0* a1);
T0* r113twin(T113* C);
T6 r342se_assigned_from(T0* a1);
T6 r342conforms_to(T342* C,T0* a1);
T0* r342twin(T342* C);
void r250subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r250se_assigned_from(T0* a1);
T6 r250conforms_to(T250* C,T0* a1);
T0* r250twin(T250* C);
void r250sort_with_comparator(T0* a1,T0* a2);
T2 r217new_capacity(T2 a1);
void r217copy(T217* C,T0* a1);
T6 r217extendible(T217* C,T2 a1);
void r217remove_traversing_cursor(T217* C,T0* a1);
void r217move_all_cursors_after(T217* C);
void r217add_traversing_cursor(T217* C,T0* a1);
T6 r217se_assigned_from(T0* a1);
T0* r217clone(T0* a1);
T6 r217cursor_before(T0* a1);
void r217make(T217* C,T2 a1);
T6 r217cursor_after(T0* a1);
T6 r217conforms_to(T217* C,T0* a1);
void r217resize(T217* C,T2 a1);
T0* r217twin(T217* C);
void r217force_last(T217* C,T0* a1);
T0* r217new_cursor(T217* C);
T6 r217cursor_off(T0* a1);
T6 r213se_assigned_from(T0* a1);
T0* r213make(T2 a1);
T6 r213conforms_to(T213* C,T0* a1);
T0* r213resize(T0* a1,T2 a2);
T0* r213twin(T213* C);
T2 r77maximum_label(T77* C);
void r77copy(T77* C,T0* a1);
T2 r77minimum_label(T77* C);
void r77set_target(T77* C,T0* a1,T2 a2);
T6 r77se_assigned_from(T0* a1);
T0* r77clone(T0* a1);
void r77make(T77* C,T2 a1,T2 a2);
T6 r77conforms_to(T77* C,T0* a1);
T0* r77twin(T77* C);
T0* r77difference(T77* C,T0* a1,T0* a2);
void r232put_left(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
T6 r232conforms_to(T232* C,T0* a1);
T0* r232twin(T232* C);
void r232put_right(T232* C,T0* a1);
T6 r490se_assigned_from(T0* a1);
T0* r490make(T2 a1);
T6 r490conforms_to(T490* C,T0* a1);
T0* r490resize(T0* a1,T2 a2);
T0* r490twin(T490* C);
void r528copy(T528* C,T0* a1);
T6 r528se_assigned_from(T0* a1);
T6 r528off(T528* C);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528twin(T528* C);
T6 r533se_assigned_from(T0* a1);
T6 r533conforms_to(T533* C,T0* a1);
T0* r533twin(T533* C);
T6 r471labeled(T471* C,T2 a1);
T6 r471se_assigned_from(T0* a1);
void r471make(T471* C,T0* a1,T0* a2);
T6 r471conforms_to(T471* C,T0* a1);
T0* r471twin(T471* C);
void r471record(T471* C,T0* a1);
T6 r291se_assigned_from(T0* a1);
T0* r291make(T2 a1);
T6 r291conforms_to(T291* C,T0* a1);
T0* r291resize(T0* a1,T2 a2);
T0* r291twin(T291* C);
T6 r532se_assigned_from(T0* a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532twin(T532* C);
T6 r439se_assigned_from(T0* a1);
T6 r439conforms_to(T439* C,T0* a1);
T6 r439test(T0* a1,T0* a2);
T0* r439twin(T439* C);
T6 r508se_assigned_from(T0* a1);
T6 r508conforms_to(T508* C,T0* a1);
T0* r508twin(T508* C);
T6 r361se_assigned_from(T0* a1);
T6 r361conforms_to(T361* C,T0* a1);
T0* r361twin(T361* C);
void r361put_right(T361* C,T0* a1);
void r408clear_all(T0* a1);
T6 r408se_assigned_from(T0* a1);
T0* r408make(T2 a1);
T6 r408conforms_to(T408* C,T0* a1);
T0* r408resize(T0* a1,T2 a2);
T0* r408twin(T408* C);
T6 r492se_assigned_from(T0* a1);
void r492make(T492* C,T2 a1,T0* a2);
T6 r492conforms_to(T492* C,T0* a1);
T0* r492twin(T492* C);
void r492record(T492* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
T0* r141to_fixed_array(T0* a1);
T0* r141make(T2 a1);
T0* r141make_from_array(T0* a1);
T6 r141conforms_to(T141* C,T0* a1);
T0* r141resize(T0* a1,T2 a2);
T0* r141twin(T141* C);
T6 r121se_assigned_from(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T6 r121test(T0* a1,T0* a2);
T0* r121twin(T121* C);
T6 r180se_assigned_from(T0* a1);
void r180make(T180* C,T0* a1,T0* a2);
T6 r180conforms_to(T180* C,T0* a1);
T0* r180twin(T180* C);
T6 r249se_assigned_from(T0* a1);
T6 r249conforms_to(T249* C,T0* a1);
T6 r249less_than(T0* a1,T0* a2);
T0* r249twin(T249* C);
void r518copy(T518* C,T0* a1);
T6 r518se_assigned_from(T0* a1);
void r518make(T518* C,T0* a1);
T6 r518off(T518* C);
T6 r518conforms_to(T518* C,T0* a1);
T0* r518twin(T518* C);
T6 r103se_assigned_from(T0* a1);
T6 r103conforms_to(T103* C,T0* a1);
T6 r103less_than(T2 a1,T2 a2);
T0* r103twin(T103* C);
T6 r425se_assigned_from(T0* a1);
T0* r425make(T2 a1);
T6 r425conforms_to(T425* C,T0* a1);
T0* r425resize(T0* a1,T2 a2);
T0* r425twin(T425* C);
void r242subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r242se_assigned_from(T0* a1);
T6 r242conforms_to(T242* C,T0* a1);
void r242sort_with_comparator(T0* a1,T0* a2);
T0* r242twin(T242* C);
T2 r68new_capacity(T2 a1);
void r68copy(T68* C,T0* a1);
void r68clear_items(T68* C,T2 a1,T2 a2);
T6 r68extendible(T68* C,T2 a1);
void r68wipe_out(T68* C);
void r68move_cursors_right(T68* C,T2 a1,T2 a2);
void r68put(T68* C,T0* a1,T2 a2);
void r68remove_traversing_cursor(T68* C,T0* a1);
void r68move_all_cursors_after(T68* C);
void r68add_traversing_cursor(T68* C,T0* a1);
T6 r68se_assigned_from(T0* a1);
T0* r68clone(T0* a1);
void r68force_first(T68* C,T0* a1);
T6 r68cursor_before(T0* a1);
void r68make(T68* C,T2 a1);
T6 r68cursor_after(T0* a1);
T6 r68conforms_to(T68* C,T0* a1);
T6 r68has(T68* C,T0* a1);
void r68move_right(T68* C,T2 a1,T2 a2);
void r68resize(T68* C,T2 a1);
T0* r68twin(T68* C);
void r68force_last(T68* C,T0* a1);
T0* r68new_cursor(T68* C);
void r68put_last(T68* C,T0* a1);
T6 r68cursor_off(T0* a1);
void r256copy(T256* C,T0* a1);
T6 r256se_assigned_from(T0* a1);
T6 r256off(T256* C);
T6 r256conforms_to(T256* C,T0* a1);
T0* r256twin(T256* C);
T6 r530se_assigned_from(T0* a1);
T6 r530conforms_to(T530* C,T0* a1);
T0* r530twin(T530* C);
T6 r192se_assigned_from(T0* a1);
T6 r192conforms_to(T192* C,T0* a1);
T0* r192twin(T192* C);
void r66copy(T66* C,T0* a1);
void r66remove_traversing_cursor(T66* C,T0* a1);
void r66cursor_go_after(T66* C,T0* a1);
void r66move_all_cursors_after(T66* C);
void r66add_traversing_cursor(T66* C,T0* a1);
T6 r66se_assigned_from(T0* a1);
T0* r66clone(T0* a1);
T6 r66cursor_before(T0* a1);
void r66make(T66* C,T2 a1);
T6 r66cursor_after(T0* a1);
T6 r66conforms_to(T66* C,T0* a1);
T2 r66cursor_index(T66* C,T0* a1);
void r66cursor_search_forth(T66* C,T0* a1,T0* a2);
void r66resize(T66* C,T2 a1);
void r66cursor_start(T66* C,T0* a1);
T0* r66twin(T66* C);
T0* r66new_cursor(T66* C);
void r66put_last(T66* C,T0* a1);
T6 r66cursor_off(T0* a1);
T2 r272new_capacity(T2 a1);
void r272copy(T272* C,T0* a1);
T6 r272extendible(T272* C,T2 a1);
void r272remove_traversing_cursor(T272* C,T0* a1);
void r272move_all_cursors_after(T272* C);
void r272add_traversing_cursor(T272* C,T0* a1);
T6 r272se_assigned_from(T0* a1);
T0* r272clone(T0* a1);
T6 r272cursor_before(T0* a1);
void r272make(T272* C,T2 a1);
T6 r272cursor_after(T0* a1);
T6 r272conforms_to(T272* C,T0* a1);
void r272resize(T272* C,T2 a1);
T0* r272twin(T272* C);
void r272force_last(T272* C,T0* a1);
T0* r272new_cursor(T272* C);
T6 r272cursor_off(T0* a1);
T6 r254se_assigned_from(T0* a1);
T0* r254make(T2 a1);
T6 r254conforms_to(T254* C,T0* a1);
T0* r254resize(T0* a1,T2 a2);
T0* r254twin(T254* C);
void r459copy(T459* C,T0* a1);
T0* r459item(T459* C);
T6 r459se_assigned_from(T0* a1);
T6 r459after(T459* C);
void r459make(T459* C,T0* a1);
T6 r459off(T459* C);
T6 r459conforms_to(T459* C,T0* a1);
T0* r459twin(T459* C);
T6 r531se_assigned_from(T0* a1);
T6 r531conforms_to(T531* C,T0* a1);
T0* r531twin(T531* C);
void r430copy(T430* C,T0* a1);
T6 r430se_assigned_from(T0* a1);
T6 r430off(T430* C);
T6 r430conforms_to(T430* C,T0* a1);
T0* r430twin(T430* C);
T6 r382se_assigned_from(T0* a1);
T0* r382make(T2 a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382resize(T0* a1,T2 a2);
T0* r382twin(T382* C);
void r347copy(T347* C,T0* a1);
void r347set(T347* C,T0* a1,T6 a2,T6 a3);
T6 r347se_assigned_from(T0* a1);
T6 r347is_first(T347* C);
T6 r347is_last(T347* C);
void r347make(T347* C,T0* a1);
T6 r347conforms_to(T347* C,T0* a1);
void r347set_after(T347* C);
T0* r347twin(T347* C);
T6 r366se_assigned_from(T0* a1);
T6 r366conforms_to(T366* C,T0* a1);
T6 r366test(T0* a1,T0* a2);
T0* r366twin(T366* C);
T6 r321se_assigned_from(T0* a1);
T6 r321conforms_to(T321* C,T0* a1);
T6 r321test(T0* a1,T0* a2);
T0* r321twin(T321* C);
void r263copy(T263* C,T0* a1);
T0* r263item(T263* C);
T6 r263se_assigned_from(T0* a1);
T6 r263after(T263* C);
T6 r263off(T263* C);
T6 r263conforms_to(T263* C,T0* a1);
T0* r263twin(T263* C);
void r326copy(T326* C,T0* a1);
void r326remove_traversing_cursor(T326* C,T0* a1);
void r326move_all_cursors_after(T326* C);
void r326add_traversing_cursor(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T0* r326clone(T0* a1);
T6 r326cursor_before(T0* a1);
void r326make(T326* C,T2 a1);
T6 r326cursor_after(T0* a1);
T6 r326conforms_to(T326* C,T0* a1);
T0* r326twin(T326* C);
T0* r326new_cursor(T326* C);
void r326put_last(T326* C,T0* a1);
T6 r326is_full(T326* C);
T6 r326cursor_off(T0* a1);
void r305copy(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
void r305make(T305* C,T0* a1);
T6 r305off(T305* C);
T6 r305conforms_to(T305* C,T0* a1);
T0* r305twin(T305* C);
void r177copy(T177* C,T0* a1);
void r177set(T177* C,T0* a1,T6 a2,T6 a3);
T6 r177se_assigned_from(T0* a1);
void r177make(T177* C,T0* a1);
T6 r177conforms_to(T177* C,T0* a1);
void r177set_after(T177* C);
T0* r177twin(T177* C);
void r480copy(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
T6 r480off(T480* C);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
void r379copy(T379* C,T0* a1);
T6 r379se_assigned_from(T0* a1);
T6 r379off(T379* C);
T6 r379conforms_to(T379* C,T0* a1);
T0* r379twin(T379* C);
T2 r90new_capacity(T2 a1);
void r90copy(T90* C,T0* a1);
T6 r90extendible(T90* C,T2 a1);
void r90append_last(T90* C,T0* a1);
void r90move_cursors_right(T90* C,T2 a1,T2 a2);
T0* r90last(T90* C);
void r90put(T90* C,T0* a1,T2 a2);
T0* r90cursor_item(T90* C,T0* a1);
T6 r90is_equal(T90* C,T0* a1);
void r90remove_traversing_cursor(T90* C,T0* a1);
void r90move_all_cursors_after(T90* C);
void r90add_traversing_cursor(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
T0* r90clone(T0* a1);
T6 r90cursor_before(T0* a1);
T6 r90same_type(T90* C,T0* a1);
void r90make(T90* C,T2 a1);
T6 r90cursor_after(T0* a1);
T6 r90conforms_to(T90* C,T0* a1);
T6 r90has(T90* C,T0* a1);
void r90move_right(T90* C,T2 a1,T2 a2);
void r90cursor_forth(T90* C,T0* a1);
void r90resize(T90* C,T2 a1);
void r90cursor_start(T90* C,T0* a1);
T0* r90twin(T90* C);
void r90force_last(T90* C,T0* a1);
T0* r90new_cursor(T90* C);
void r90extend_last(T90* C,T0* a1);
void r90put_last(T90* C,T0* a1);
T6 r90cursor_off(T0* a1);
void r181copy(T181* C,T0* a1);
void r181remove_traversing_cursor(T181* C,T0* a1);
void r181move_all_cursors_after(T181* C);
void r181add_traversing_cursor(T181* C,T0* a1);
T6 r181se_assigned_from(T0* a1);
T0* r181clone(T0* a1);
T6 r181cursor_before(T0* a1);
void r181make(T181* C,T2 a1);
T6 r181cursor_after(T0* a1);
T6 r181conforms_to(T181* C,T0* a1);
T0* r181twin(T181* C);
T0* r181new_cursor(T181* C);
void r181put_last(T181* C,T0* a1);
T6 r181cursor_off(T0* a1);
T6 r483se_assigned_from(T0* a1);
T6 r483conforms_to(T483* C,T0* a1);
T6 r483test(T0* a1,T0* a2);
T0* r483twin(T483* C);
T6 r238se_assigned_from(T0* a1);
T6 r238conforms_to(T238* C,T0* a1);
T0* r238twin(T238* C);
T6 r268se_assigned_from(T0* a1);
T0* r268make(T2 a1);
T6 r268conforms_to(T268* C,T0* a1);
T0* r268resize(T0* a1,T2 a2);
T0* r268twin(T268* C);
T2 r435new_capacity(T2 a1);
void r435copy(T435* C,T0* a1);
void r435force(T435* C,T0* a1,T0* a2);
void r435make_clashes(T435* C,T2 a1);
void r435search_position(T435* C,T0* a1);
void r435remove_traversing_cursor(T435* C,T0* a1);
void r435clone_slots(T435* C);
void r435keys_resize(T435* C,T2 a1);
void r435clone_clashes(T435* C);
T0* r435item(T435* C,T0* a1);
void r435move_all_cursors_after(T435* C);
void r435make_items(T435* C,T2 a1);
void r435add_traversing_cursor(T435* C,T0* a1);
T6 r435se_assigned_from(T0* a1);
T0* r435clone(T0* a1);
void r435make(T435* C,T2 a1);
void r435clone_items(T435* C);
T6 r435conforms_to(T435* C,T0* a1);
T6 r435has(T435* C,T0* a1);
void r435make_keys(T435* C,T2 a1);
T2 r435hash_position(T435* C,T0* a1);
extern T0*oBC283fixed_integer_array_;
void r435items_resize(T435* C,T2 a1);
void r435clone_keys(T435* C);
void r435make_with_equality_testers(T435* C,T2 a1,T0* a2,T0* a3);
void r435resize(T435* C,T2 a1);
void r435clashes_resize(T435* C,T2 a1);
void r435slots_resize(T435* C,T2 a1);
T0* r435twin(T435* C);
T0* r435new_cursor(T435* C);
void r435make_slots(T435* C,T2 a1);
T2 r435new_modulus(T2 a1);
T6 r435cursor_off(T0* a1);
void r210copy(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
T6 r210off(T210* C);
T6 r210conforms_to(T210* C,T0* a1);
T0* r210twin(T210* C);
T6 r423se_assigned_from(T0* a1);
T0* r423make(T2 a1);
T6 r423conforms_to(T423* C,T0* a1);
T0* r423resize(T0* a1,T2 a2);
T0* r423twin(T423* C);
T6 r295se_assigned_from(T0* a1);
T6 r295conforms_to(T295* C,T0* a1);
T0* r295twin(T295* C);
T6 r109se_assigned_from(T0* a1);
T6 r109conforms_to(T109* C,T0* a1);
T6 r109test(T2 a1,T2 a2);
T0* r109twin(T109* C);
T2 r287new_capacity(T2 a1);
void r287copy(T287* C,T0* a1);
void r287force(T287* C,T0* a1,T2 a2);
void r287make_clashes(T287* C,T2 a1);
void r287search_position(T287* C,T2 a1);
void r287remove_traversing_cursor(T287* C,T0* a1);
void r287clone_slots(T287* C);
void r287keys_resize(T287* C,T2 a1);
void r287clone_clashes(T287* C);
T0* r287item(T287* C,T2 a1);
void r287move_all_cursors_after(T287* C);
void r287make_items(T287* C,T2 a1);
void r287add_traversing_cursor(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
T0* r287clone(T0* a1);
void r287make(T287* C,T2 a1);
void r287clone_items(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T6 r287has(T287* C,T2 a1);
void r287make_keys(T287* C,T2 a1);
T2 r287hash_position(T287* C,T2 a1);
void r287items_resize(T287* C,T2 a1);
void r287clone_keys(T287* C);
void r287make_with_equality_testers(T287* C,T2 a1,T0* a2,T0* a3);
void r287resize(T287* C,T2 a1);
void r287clashes_resize(T287* C,T2 a1);
void r287slots_resize(T287* C,T2 a1);
T0* r287twin(T287* C);
T0* r287new_cursor(T287* C);
void r287make_slots(T287* C,T2 a1);
T2 r287new_modulus(T2 a1);
T6 r287cursor_off(T0* a1);
void r497subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r497se_assigned_from(T0* a1);
T6 r497conforms_to(T497* C,T0* a1);
void r497sort_with_comparator(T0* a1,T0* a2);
T0* r497twin(T497* C);
void r178copy(T178* C,T0* a1);
void r178remove_traversing_cursor(T178* C,T0* a1);
T0* r178item(T178* C,T2 a1);
void r178move_all_cursors_after(T178* C);
void r178add_traversing_cursor(T178* C,T0* a1);
T6 r178se_assigned_from(T0* a1);
void r178make(T178* C);
T6 r178conforms_to(T178* C,T0* a1);
void r178cursor_forth(T178* C,T0* a1);
void r178cursor_start(T178* C,T0* a1);
T0* r178twin(T178* C);
T0* r178new_cursor(T178* C);
void r178put_last(T178* C,T0* a1);
void r178replace(T178* C,T0* a1,T2 a2);
T6 r178cursor_off(T0* a1);
T6 r255se_assigned_from(T0* a1);
T0* r255make(T2 a1);
T6 r255conforms_to(T255* C,T0* a1);
T0* r255resize(T0* a1,T2 a2);
T0* r255twin(T255* C);
T2 r443new_capacity(T2 a1);
void r443copy(T443* C,T0* a1);
void r443force(T443* C,T0* a1,T0* a2);
void r443make_clashes(T443* C,T2 a1);
T0* r443cursor_item(T443* C,T0* a1);
void r443search_position(T443* C,T0* a1);
void r443remove_traversing_cursor(T443* C,T0* a1);
void r443clone_slots(T443* C);
void r443keys_resize(T443* C,T2 a1);
void r443clone_clashes(T443* C);
T0* r443item(T443* C,T0* a1);
void r443move_all_cursors_after(T443* C);
void r443make_items(T443* C,T2 a1);
void r443add_traversing_cursor(T443* C,T0* a1);
T6 r443se_assigned_from(T0* a1);
T0* r443clone(T0* a1);
void r443make(T443* C,T2 a1);
void r443clone_items(T443* C);
T6 r443cursor_after(T0* a1);
T6 r443conforms_to(T443* C,T0* a1);
T6 r443has(T443* C,T0* a1);
void r443make_keys(T443* C,T2 a1);
T2 r443hash_position(T443* C,T0* a1);
void r443cursor_forth(T443* C,T0* a1);
void r443items_resize(T443* C,T2 a1);
void r443clone_keys(T443* C);
void r443make_with_equality_testers(T443* C,T2 a1,T0* a2,T0* a3);
void r443resize(T443* C,T2 a1);
void r443cursor_start(T443* C,T0* a1);
void r443clashes_resize(T443* C,T2 a1);
void r443slots_resize(T443* C,T2 a1);
T0* r443twin(T443* C);
T0* r443new_cursor(T443* C);
void r443make_slots(T443* C,T2 a1);
T2 r443new_modulus(T2 a1);
T6 r443cursor_off(T0* a1);
void r331copy(T331* C,T0* a1);
void r331set(T331* C,T0* a1,T6 a2,T6 a3);
T6 r331se_assigned_from(T0* a1);
void r331make(T331* C,T0* a1);
T6 r331conforms_to(T331* C,T0* a1);
void r331set_after(T331* C);
T0* r331twin(T331* C);
T6 r241se_assigned_from(T0* a1);
T6 r241conforms_to(T241* C,T0* a1);
T6 r241less_than(T0* a1,T0* a2);
T0* r241twin(T241* C);
void r104subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r104se_assigned_from(T0* a1);
T6 r104conforms_to(T104* C,T0* a1);
void r104sort_with_comparator(T0* a1,T0* a2);
T0* r104twin(T104* C);
void r88copy(T88* C,T0* a1);
void r88remove_traversing_cursor(T88* C,T0* a1);
T2 r88item(T88* C,T2 a1);
void r88move_all_cursors_after(T88* C);
void r88add_traversing_cursor(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T0* r88clone(T0* a1);
void r88sort(T88* C,T0* a1);
T6 r88cursor_before(T0* a1);
void r88make(T88* C,T2 a1);
T6 r88cursor_after(T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
T6 r88has(T88* C,T2 a1);
T0* r88twin(T88* C);
T0* r88new_cursor(T88* C);
void r88put_last(T88* C,T2 a1);
T6 r88cursor_off(T0* a1);
void r138copy(T138* C,T0* a1);
T6 r138se_assigned_from(T0* a1);
T6 r138off(T138* C);
T6 r138conforms_to(T138* C,T0* a1);
T0* r138twin(T138* C);
void r317copy(T317* C,T0* a1);
T6 r317se_assigned_from(T0* a1);
T6 r317after(T317* C);
T2 r317index(T317* C);
T6 r317off(T317* C);
T6 r317conforms_to(T317* C,T0* a1);
T0* r317twin(T317* C);
extern T0*oBC18string_;
extern T0*oBC12arguments;
extern int fBC12arguments;
T0* r219arguments(void);
T6 r219se_assigned_from(T0* a1);
void r219make(T219* C,T0* a1);
T0* r219message(T219* C,T0* a1);
T6 r219conforms_to(T219* C,T0* a1);
T0* r219twin(T219* C);
T0* r219default_message(T219* C);
void r228build(T228* C);
T2 r228previous_symbol(T228* C,T2 a1);
void r228put(T228* C,T2 a1);
T6 r228se_assigned_from(T0* a1);
T0* r228to_array(T228* C,T2 a1,T2 a2);
void r228make(T228* C,T2 a1,T2 a2);
void r228equiv_add(T228* C,T0* a1);
T6 r228conforms_to(T228* C,T0* a1);
void r228equiv_initialize(T228* C);
T2 r228equivalence_class(T228* C,T2 a1);
void r228add(T228* C,T0* a1);
T6 r228is_representative(T228* C,T2 a1);
T0* r228twin(T228* C);
void r228initialize(T228* C);
void r228equiv_put(T228* C,T2 a1);
void r226build(T226* C);
void r226build_accept_table(T226* C);
void r226print_constants(T226* C,T0* a1);
void r226print_action_routine(T226* C,T0* a1,T0* a2);
extern T0*oBC44array_formatter_;
void r226initialize_dfa(T226* C,T0* a1,T2 a2,T2 a3);
void r226print_eiffel_array(T226* C,T0* a1,T0* a2,T0* a3);
void r226print_scanner(T226* C,T0* a1);
void r226print_inspect_actions(T226* C,T0* a1);
void r226_43Pprint_constants(T226* C,T0* a1);
extern T0*oBC45integer_;
T6 r226se_assigned_from(T0* a1);
T0* r226clone(T0* a1);
void r226print_status_report_routines(T226* C,T0* a1);
void r226print_eiffel_header(T226* C,T0* a1);
void r226_43Pprint_backing_up_report(T226* C,T0* a1);
void r226print_eiffel_tables(T226* C,T0* a1);
void r226put_start_condition(T226* C,T0* a1);
void r226set_nfa_state_ids(T0* a1);
void r226make(T226* C,T0* a1);
void r226print_transitions(T226* C,T0* a1,T0* a2);
extern T0*oBC43integer_sorter;
extern int fBC43integer_sorter;
T0* r226integer_sorter(void);
void r226build_eof_rules(T226* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC44boolean_formatter_;
T6 r226conforms_to(T226* C,T0* a1);
void r226print_binary_search_actions(T226* C,T0* a1,T2 a2,T2 a3);
void r226print_readable_character(T2 a1,T0* a2);
void r226print_action_call(T226* C,T0* a1,T0* a2);
void r226print_rule_line_numbers(T226* C,T0* a1,T0* a2);
void r226print_eiffel_code(T226* C,T0* a1);
void r226print_action_body(T226* C,T0* a1,T0* a2);
void r226print_backing_up_report(T226* C,T0* a1);
void r226print_actions(T226* C,T0* a1);
void r226print_build_tables(T226* C,T0* a1);
T0* r226twin(T226* C);
void r226print_eof_actions(T226* C,T0* a1);
void r226build_transitions(T226* C,T0* a1);
void r226initialize(T226* C,T0* a1);
void r226put_eob_state(T226* C);
void r226build_rules(T226* C,T0* a1);
void r226build_nxt_table(T226* C);
T0* r226new_state(T226* C,T0* a1);
T6 r386is_closed(T386* C);
void r386old_close(T386* C);
T2 r386read_to_string(T386* C,T0* a1,T2 a2,T2 a3);
void r386open_read(T386* C);
T6 r386se_assigned_from(T0* a1);
void r386old_read_character(T386* C);
T6 r386old_end_of_file(T386* C);
void r386read_character(T386* C);
void r386close(T386* C);
void r386make(T386* C,T0* a1);
T6 r386conforms_to(T386* C,T0* a1);
void r386connect_to(T386* C,T0* a1);
T0* r386twin(T386* C);
void r386old_open_read(T386* C);
T0* r488arguments(void);
T6 r488se_assigned_from(T0* a1);
void r488make(T488* C,T0* a1,T2 a2,T0* a3);
T0* r488message(T488* C,T0* a1);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488twin(T488* C);
T0* r488default_message(T488* C);
T6 r89is_equal(T89* C,T0* a1);
T6 r89has_transition(T89* C);
T6 r89se_assigned_from(T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T6 r89_px_60(T89* C,T0* a1);
T6 r89is_accepting_head(T89* C);
T0* r89twin(T89* C);
void r89set_beginning_as_normal(T89* C);
T2 r270new_capacity(T2 a1);
void r270copy(T270* C,T0* a1);
void r270clear_items(T270* C,T2 a1,T2 a2);
T6 r270extendible(T270* C,T2 a1);
void r270move_cursors_right(T270* C,T2 a1,T2 a2);
void r270put(T270* C,T0* a1,T2 a2);
void r270remove_traversing_cursor(T270* C,T0* a1);
T6 r270has_start_condition(T270* C,T0* a1);
void r270move_all_cursors_after(T270* C);
void r270keep_first(T270* C,T2 a1);
void r270make_with_initial(T270* C,T2 a1);
void r270add_traversing_cursor(T270* C,T0* a1);
void r270add_bol_nfa_to_all(T270* C,T0* a1);
T6 r270se_assigned_from(T0* a1);
T0* r270clone(T0* a1);
T0* r270start_condition(T270* C,T0* a1);
T0* r270names(T270* C);
void r270add_nfa_to_non_exclusive(T270* C,T0* a1);
void r270add_bol_nfa_to_non_exclusive(T270* C,T0* a1);
T6 r270cursor_before(T0* a1);
void r270make(T270* C,T2 a1);
T6 r270cursor_after(T0* a1);
T6 r270conforms_to(T270* C,T0* a1);
T6 r270has(T270* C,T0* a1);
void r270append_start_conditions(T270* C,T0* a1);
void r270move_right(T270* C,T2 a1,T2 a2);
void r270add_nfa_to_all(T270* C,T0* a1);
void r270resize(T270* C,T2 a1);
void r270append_non_eof_start_conditions(T270* C,T0* a1);
void r270force_new_start_condition(T270* C,T0* a1,T6 a2);
T0* r270twin(T270* C);
void r270force_last(T270* C,T0* a1);
T0* r270new_cursor(T270* C);
void r270put_last(T270* C,T0* a1);
T6 r270cursor_off(T0* a1);
void r323copy(T323* C,T0* a1);
void r323put(T323* C,T0* a1,T0* a2);
void r323remove_traversing_cursor(T323* C,T0* a1);
void r323move_all_cursors_after(T323* C);
void r323add_traversing_cursor(T323* C,T0* a1);
T6 r323se_assigned_from(T0* a1);
void r323make(T323* C,T0* a1);
T6 r323conforms_to(T323* C,T0* a1);
void r323make_list(T323* C);
void r323cursor_forth(T323* C,T0* a1);
void r323cursor_start(T323* C,T0* a1);
T0* r323twin(T323* C);
T0* r323new_cursor(T323* C);
T0* r323equiv_template(T323* C,T0* a1);
void r323put_last(T323* C,T0* a1);
T6 r323cursor_off(T0* a1);
T0* r221arguments(void);
T6 r221se_assigned_from(T0* a1);
void r221make(T221* C,T0* a1,T2 a2);
T0* r221message(T221* C,T0* a1);
T6 r221conforms_to(T221* C,T0* a1);
T0* r221twin(T221* C);
T0* r221default_message(T221* C);
T0* r521arguments(void);
T6 r521se_assigned_from(T0* a1);
void r521make(T521* C,T0* a1);
T0* r521message(T521* C,T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
T0* r521twin(T521* C);
T0* r521default_message(T521* C);
T0* r456arguments(void);
T6 r456se_assigned_from(T0* a1);
void r456make(T456* C);
T0* r456message(T456* C,T0* a1);
T6 r456conforms_to(T456* C,T0* a1);
T0* r456twin(T456* C);
T0* r456default_message(T456* C);
T0* r489arguments(void);
T6 r489se_assigned_from(T0* a1);
void r489make(T489* C,T0* a1,T2 a2);
T0* r489message(T489* C,T0* a1);
T6 r489conforms_to(T489* C,T0* a1);
T0* r489twin(T489* C);
T0* r489default_message(T489* C);
T0* r452arguments(void);
T6 r452se_assigned_from(T0* a1);
void r452make(T452* C,T0* a1,T2 a2);
T0* r452message(T452* C,T0* a1);
T6 r452conforms_to(T452* C,T0* a1);
T0* r452twin(T452* C);
T0* r452default_message(T452* C);
T2 r499read_to_string(T499* C,T0* a1,T2 a2,T2 a3);
T6 r499se_assigned_from(T0* a1);
void r499old_read_character(T499* C);
T6 r499old_end_of_file(T499* C);
void r499read_character(T499* C);
void r499make(T499* C);
T6 r499conforms_to(T499* C,T0* a1);
T0* r499twin(T499* C);
T6 r146se_assigned_from(T0* a1);
void r146report_warning_message(T146* C,T0* a1);
extern T0*oBC14std;
T0* r146message(T0* a1);
T6 r146conforms_to(T146* C,T0* a1);
T0* r146twin(T146* C);
void r146report_info_message(T146* C,T0* a1);
void r146make_standard(T146* C);
void r146report_error_message(T146* C,T0* a1);
T0* r416substring(T416* C,T2 a1,T2 a2);
void r416fill_from_string(T416* C,T0* a1,T2 a2);
T2 r416fill_from_stream(T416* C,T0* a1,T2 a2,T2 a3);
T6 r416se_assigned_from(T0* a1);
void r416move_left(T416* C,T2 a1,T2 a2,T2 a3);
void r416make(T416* C,T2 a1);
T6 r416conforms_to(T416* C,T0* a1);
void r416move_right(T416* C,T2 a1,T2 a2,T2 a3);
void r416resize(T416* C,T2 a1);
T0* r416twin(T416* C);
void r324set_last_cell(T324* C,T0* a1);
void r324copy(T324* C,T0* a1);
void r324wipe_out(T324* C);
void r324remove_first(T324* C);
void r324put(T324* C,T2 a1,T0* a2,T0* a3);
T6 r324cursor_is_last(T324* C,T0* a1);
void r324remove_traversing_cursor(T324* C,T0* a1);
void r324cursor_go_after(T324* C,T0* a1);
void r324move_all_cursors_after(T324* C);
void r324add_traversing_cursor(T324* C,T0* a1);
T6 r324se_assigned_from(T0* a1);
void r324make(T324* C);
void r324set_first_cell(T324* C,T0* a1);
void r324cursor_go_to(T324* C,T0* a1,T0* a2);
void r324remove_last(T324* C);
T6 r324conforms_to(T324* C,T0* a1);
void r324cursor_forth(T324* C,T0* a1);
void r324move_last_cursors_after(T324* C);
void r324put_first(T324* C,T0* a1);
void r324move_to_front(T324* C,T0* a1);
void r324cursor_start(T324* C,T0* a1);
T0* r324twin(T324* C);
T0* r324new_cursor(T324* C);
T6 r324cursor_is_first(T324* C,T0* a1);
void r324remove_at_cursor(T324* C,T0* a1);
void r324move_all_cursors(T324* C,T0* a1,T0* a2);
T6 r324cursor_off(T0* a1);
T0* r434arguments(void);
T6 r434se_assigned_from(T0* a1);
void r434make(T434* C,T0* a1,T2 a2);
T0* r434message(T434* C,T0* a1);
T6 r434conforms_to(T434* C,T0* a1);
T0* r434twin(T434* C);
T0* r434default_message(T434* C);
T0* r458arguments(void);
T6 r458se_assigned_from(T0* a1);
void r458make(T458* C);
T0* r458message(T458* C,T0* a1);
T6 r458conforms_to(T458* C,T0* a1);
T0* r458twin(T458* C);
T0* r458default_message(T458* C);
T6 r346se_assigned_from(T0* a1);
void r346make(T346* C,T2 a1,T0* a2,T0* a3);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346twin(T346* C);
T0* r498arguments(void);
T6 r498se_assigned_from(T0* a1);
void r498make(T498* C,T0* a1,T2 a2);
T0* r498message(T498* C,T0* a1);
T6 r498conforms_to(T498* C,T0* a1);
T0* r498twin(T498* C);
T0* r498default_message(T498* C);
T6 r23is_closed(T23* C);
void r23old_close(T23* C);
T6 r23se_assigned_from(T0* a1);
void r23old_open_write(T23* C);
void r23close(T23* C);
void r23make(T23* C,T0* a1);
void r23old_put_string(T23* C,T0* a1);
T6 r23conforms_to(T23* C,T0* a1);
void r23connect_to(T23* C,T0* a1);
void r23put_integer(T23* C,T2 a1);
void r23put_line(T23* C,T0* a1);
T0* r23twin(T23* C);
void r23open_write(T23* C);
T2 r363new_capacity(T2 a1);
void r363copy(T363* C,T0* a1);
T6 r363extendible(T363* C,T2 a1);
void r363arrayed_sort(T363* C,T0* a1);
T2 r363last(T363* C);
void r363put(T363* C,T2 a1);
void r363remove_traversing_cursor(T363* C,T0* a1);
void r363move_all_cursors_after(T363* C);
void r363add_traversing_cursor(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
T0* r363clone(T0* a1);
void r363sort(T363* C);
T6 r363arrayed_has(T363* C,T2 a1);
T6 r363cursor_before(T0* a1);
void r363convert(T363* C,T0* a1);
void r363make(T363* C,T2 a1);
T6 r363cursor_after(T0* a1);
extern T0*oBC363sorter;
extern int fBC363sorter;
T0* r363sorter(void);
T6 r363conforms_to(T363* C,T0* a1);
T6 r363has(T363* C,T2 a1);
void r363resize(T363* C,T2 a1);
T0* r363twin(T363* C);
void r363force_last(T363* C,T2 a1);
T0* r363new_cursor(T363* C);
void r363put_last(T363* C,T2 a1);
T6 r363cursor_off(T0* a1);
T0* r453arguments(void);
T6 r453se_assigned_from(T0* a1);
void r453make(T453* C,T0* a1,T2 a2);
T0* r453message(T453* C,T0* a1);
T6 r453conforms_to(T453* C,T0* a1);
T0* r453twin(T453* C);
T0* r453default_message(T453* C);
T0* r442arguments(void);
T6 r442se_assigned_from(T0* a1);
void r442make(T442* C,T0* a1,T2 a2,T0* a3);
T0* r442message(T442* C,T0* a1);
T6 r442conforms_to(T442* C,T0* a1);
T0* r442twin(T442* C);
T0* r442default_message(T442* C);
T0* r433arguments(void);
T6 r433se_assigned_from(T0* a1);
void r433make(T433* C,T0* a1,T2 a2,T0* a3);
T0* r433message(T433* C,T0* a1);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433twin(T433* C);
T0* r433default_message(T433* C);
void r116copy(T116* C,T0* a1);
T6 r116se_assigned_from(T0* a1);
T0* r116clone(T0* a1);
T0* r116_ix_12443124(T116* C);
T0* r116_px_124123n125124(T116* C,T2 a1);
void r116make_symbol(T116* C,T2 a1,T6 a2);
T0* r116_px_38(T116* C,T0* a1);
T6 r116conforms_to(T116* C,T0* a1);
T0* r116bounded_iteration(T116* C,T2 a1,T2 a2);
T0* r116_px_124(T116* C,T0* a1);
T0* r116_ix_12442124(T116* C);
T0* r116twin(T116* C);
void r116make_epsilon(T116* C,T6 a1);
T0* r116_px_124123n44125124(T116* C,T2 a1);
T0* r116_ix_12463124(T116* C);
void r116make_symbol_class(T116* C,T0* a1,T6 a2);
T6 r269se_assigned_from(T0* a1);
void r269out_in_tagged_out_memory(T269* C);
T6 r269conforms_to(T269* C,T0* a1);
T0* r269twin(T269* C);
void r17read_options(T17* C,T0* a1);
T0* r17arguments(void);
T6 r17se_assigned_from(T0* a1);
void r17report_separated_flag_error(T17* C,T0* a1);
void r17report_usage_message(T17* C);
extern T0*oBC17usage_message;
extern int fBC17usage_message;
T0* r17usage_message(void);
void r17report_unknown_flag_error(T17* C,T0* a1);
T6 r17conforms_to(T17* C,T0* a1);
extern T0*oBC13exceptions;
void r17report_version_number(T17* C);
T0* r17twin(T17* C);
void r17report_usage_error(T17* C);
T0* r520arguments(void);
T6 r520se_assigned_from(T0* a1);
void r520make(T520* C,T0* a1);
T0* r520message(T520* C,T0* a1);
T6 r520conforms_to(T520* C,T0* a1);
T0* r520twin(T520* C);
T0* r520default_message(T520* C);
T0* r432arguments(void);
T6 r432se_assigned_from(T0* a1);
void r432make(T432* C,T0* a1,T2 a2);
T0* r432message(T432* C,T0* a1);
T6 r432conforms_to(T432* C,T0* a1);
T0* r432twin(T432* C);
T0* r432default_message(T432* C);
T6 r40se_assigned_from(T0* a1);
void r40make(T40* C);
T6 r40conforms_to(T40* C,T0* a1);
T0* r40twin(T40* C);
void r40create_equiv_classes(T40* C);
T0* r484arguments(void);
T6 r484se_assigned_from(T0* a1);
void r484make(T484* C,T0* a1,T2 a2,T0* a3);
T0* r484message(T484* C,T0* a1);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
T0* r484default_message(T484* C);
T0* r493arguments(void);
T6 r493se_assigned_from(T0* a1);
void r493make(T493* C,T0* a1,T2 a2);
T0* r493message(T493* C,T0* a1);
T6 r493conforms_to(T493* C,T0* a1);
T0* r493twin(T493* C);
T0* r493default_message(T493* C);
T0* r20arguments(void);
T6 r20se_assigned_from(T0* a1);
void r20make(T20* C,T0* a1);
T0* r20message(T20* C,T0* a1);
T6 r20conforms_to(T20* C,T0* a1);
T0* r20twin(T20* C);
T0* r20default_message(T20* C);
T0* r522arguments(void);
T6 r522se_assigned_from(T0* a1);
void r522make(T522* C,T0* a1);
T0* r522message(T522* C,T0* a1);
T6 r522conforms_to(T522* C,T0* a1);
T0* r522twin(T522* C);
T0* r522default_message(T522* C);
T0* r457arguments(void);
T6 r457se_assigned_from(T0* a1);
void r457make(T457* C);
T0* r457message(T457* C,T0* a1);
T6 r457conforms_to(T457* C,T0* a1);
T0* r457twin(T457* C);
T0* r457default_message(T457* C);
T6 r271is_equal(T271* C,T0* a1);
T6 r271se_assigned_from(T0* a1);
void r271make(T271* C,T0* a1,T2 a2,T6 a3);
T6 r271conforms_to(T271* C,T0* a1);
T0* r271twin(T271* C);
T0* r485arguments(void);
T6 r485se_assigned_from(T0* a1);
void r485make(T485* C,T0* a1,T2 a2,T0* a3);
T0* r485message(T485* C,T0* a1);
T6 r485conforms_to(T485* C,T0* a1);
T0* r485twin(T485* C);
T0* r485default_message(T485* C);
T0* r451arguments(void);
T6 r451se_assigned_from(T0* a1);
void r451make(T451* C,T0* a1,T2 a2,T0* a3);
T0* r451message(T451* C,T0* a1);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451twin(T451* C);
T0* r451default_message(T451* C);
T0* r523arguments(void);
T6 r523se_assigned_from(T0* a1);
void r523make(T523* C,T0* a1);
T0* r523message(T523* C,T0* a1);
T6 r523conforms_to(T523* C,T0* a1);
T0* r523twin(T523* C);
T0* r523default_message(T523* C);
void r67make_default(T67* C,T2 a1);
T6 r67is_equal(T67* C,T0* a1);
T6 r67se_assigned_from(T0* a1);
T6 r67variable_trail(T67* C);
extern T0*oBC67dummy_pattern;
extern int fBC67dummy_pattern;
T0* r67dummy_pattern(void);
T6 r67conforms_to(T67* C,T0* a1);
T6 r67_px_60(T67* C,T0* a1);
extern T0*oBC67dummy_action;
extern int fBC67dummy_action;
T0* r67dummy_action(void);
T0* r67twin(T67* C);
void r395report_iteration_not_positive_error(T395* C);
void r395report_bad_start_condition_list_error(T395* C);
void r395process_default_rule(T395* C);
void r395yy_do_action(T395* C,T2 a1);
void r395report_unrecognized_directive_error(T395* C);
void r395process_escaped_character(T395* C);
void r395report_bad_character_error(T395* C,T0* a1);
extern T0*oBC395yytable_template;
extern int fBC395yytable_template;
T0* r395yytable_template(void);
void r395make_parser_skeleton(T395* C);
T0* r395append_character_set_to_character_class(T395* C,T2 a1,T2 a2,T0* a3);
void r395process_regexp_or_series(T395* C);
T0* r395append_trail_context_to_regexp(T395* C,T0* a1,T0* a2);
void r395report_undeclared_start_condition_error(T395* C,T0* a1);
void r395report_bad_character_in_brackets_error(T395* C);
void r395process_singleton_dot(T395* C);
T0* r395new_iteration_nfa(T395* C,T0* a1,T2 a2);
T2 r395yy_at_beginning_of_line(T395* C);
void r395report_unrecognized_rule_error(T395* C);
void r395report_start_condition_expected_error(T395* C);
void r395report_bad_iteration_values_error(T395* C);
void r395fatal_error(T0* a1);
T0* r395yytype1(T0* a1);
void r395report_name_defined_twice_error(T395* C,T0* a1);
T2 r395yytype2(T0* a1);
T0* r395yytype3(T0* a1);
void r395process_singleton_empty_string(T395* C);
T0* r395yytype4(T0* a1);
T2 r395start_condition(T395* C);
void r395unread_character(T395* C,T3 a1);
T0* r395new_nfa_from_character(T395* C,T2 a1);
void r395parse_file(T395* C,T0* a1);
void r395parse(T395* C);
void r395check_options(T395* C);
void r395report_missing_quote_error(T395* C);
void r395set_input_buffer(T395* C,T0* a1);
T2 r395yy_translate(T395* C,T2 a1);
extern T0*oBC396yy_ec_template;
extern int fBC396yy_ec_template;
T0* r395yy_ec_template(void);
T0* r395text_substring(T395* C,T2 a1,T2 a2);
void r395yy_execute_action(T395* C,T2 a1);
extern T0*oBC395yytranslate_template;
extern int fBC395yytranslate_template;
T0* r395yytranslate_template(void);
void r395report_all_start_conditions_eof_warning(T395* C);
void r395clear_stacks(T395* C);
extern T0*oBC396yy_def_template;
extern int fBC396yy_def_template;
T0* r395yy_def_template(void);
void r395report_full_and_meta_equiv_classes_error(T395* C);
T3 r395text_item(T395* C,T2 a1);
void r395yy_load_input_buffer(T395* C);
void r395process_name_definition(T395* C,T0* a1,T0* a2);
extern T0*oBC395yyr1_template;
extern int fBC395yyr1_template;
T0* r395yyr1_template(void);
void r395make_with_buffer(T395* C,T0* a1);
void r395process_singleton_unbounded_iteration(T395* C,T2 a1);
void r395process_rule(T395* C,T0* a1);
void r395process_character(T395* C,T2 a1);
T2 r395yy_null_trans_state(T395* C,T2 a1);
void r395put_back_string(T395* C,T0* a1);
void r395process_singleton_bounded_iteration(T395* C,T2 a1,T2 a2);
T0* r395dot_character_class(T395* C);
void r395report_incomplete_name_definition_error(T395* C);
void r395report_negative_range_in_character_class_error(T395* C);
void r395report_full_and_variable_trailing_context_error(T395* C);
extern T0*oBC396yy_accept_template;
extern int fBC396yy_accept_template;
T0* r395yy_accept_template(void);
void r395read_token(T395* C);
extern T0*oBC395yyr2_template;
extern int fBC395yyr2_template;
T0* r395yyr2_template(void);
void r395report_start_condition_specified_twice_warning(T395* C,T0* a1);
void r395add_new_start_condition(T395* C,T0* a1,T6 a2);
T2 r395yy_previous_state(T395* C);
extern T0*oBC395yypgoto_template;
extern int fBC395yypgoto_template;
T0* r395yypgoto_template(void);
void r395yy_refill_input_buffer(T395* C);
T0* r395yy_fixed_array(T0* a1);
T6 r395conforms_to(T395* C,T0* a1);
extern T0*oBC396yy_meta_template;
extern int fBC396yy_meta_template;
T0* r395yy_meta_template(void);
void r395report_character_out_of_range_error(T395* C,T0* a1);
void r395process_bol_rule(T395* C,T0* a1);
T0* r395new_epsilon_nfa(T395* C);
extern T0*oBC396yy_base_template;
extern int fBC396yy_base_template;
T0* r395yy_base_template(void);
T0* r395append_eol_to_regexp(T395* C,T0* a1);
void r395report_full_and_reject_error(T395* C);
T0* r395twin(T395* C);
T0* r395append_character_to_character_class(T395* C,T2 a1,T0* a2);
T2 r395text_count(T395* C);
T0* r395new_file_buffer(T0* a1);
void r395report_multiple_eof_rules_error(T395* C,T0* a1);
void r395process_singleton_plus(T395* C);
void r395yy_initialize(T395* C);
void r395push_start_condition(T395* C,T0* a1,T0* a2);
T0* r395text(T395* C);
void r395build_eof_action(T395* C,T0* a1);
void r395report_missing_bracket_error(T395* C);
T0* r395new_symbol_nfa(T395* C,T2 a1);
void r395process_singleton_symbol_class(T395* C,T0* a1);
extern T0*oBC403eof_nfa;
extern int fBC403eof_nfa;
T0* r395eof_nfa(void);
void r395report_undefined_definition_error(T395* C,T0* a1);
extern T0*oBC396yy_nxt_template;
extern int fBC396yy_nxt_template;
T0* r395yy_nxt_template(void);
void r395report_unrecognized_option_error(T395* C,T0* a1);
void r395yy_set_line_column(T395* C);
void r395yy_build_parser_tables(T395* C);
void r395report_directive_expected_error(T395* C);
void r395process_singleton_string(T395* C,T2 a1);
void r395build_equiv_classes(T395* C);
T0* r395new_symbol_class_nfa(T395* C,T0* a1);
void r395set_action(T395* C,T0* a1);
void r395process_series_singleton(T395* C);
T0* r395new_unbounded_iteration_nfa(T395* C,T0* a1,T2 a2);
void r395yy_set_beginning_of_line(T395* C);
void r395override_options(T395* C);
T0* r395new_bounded_iteration_nfa(T395* C,T0* a1,T2 a2,T2 a3);
void r395process_singleton_optional(T395* C);
void r395report_trailing_context_used_twice_error(T395* C);
extern T0*oBC402empty_buffer;
extern int fBC402empty_buffer;
T0* r395empty_buffer(void);
void r395report_error(T395* C,T0* a1);
T0* r395append_character_to_string(T395* C,T2 a1,T0* a2);
void r395process_singleton_star(T395* C);
void r395process_singleton_fixed_iteration(T395* C,T2 a1);
extern T0*oBC395yydefact_template;
extern int fBC395yydefact_template;
T0* r395yydefact_template(void);
void r395process_eof_rule(T395* C);
extern T0*oBC396yy_chk_template;
extern int fBC396yy_chk_template;
T0* r395yy_chk_template(void);
T0* r395new_nfa_from_character_class(T395* C,T0* a1);
extern T0*oBC395yycheck_template;
extern int fBC395yycheck_template;
T0* r395yycheck_template(void);
T0* r395new_character_class(T395* C);
T0* r395filename(T395* C);
void r395report_start_condition_declared_twice_error(T395* C,T0* a1);
T0* r395yyfixed_array(T0* a1);
void r395process_singleton_char(T395* C,T2 a1);
extern T0*oBC395yydefgoto_template;
extern int fBC395yydefgoto_template;
T0* r395yydefgoto_template(void);
void r395yy_clear_all(T395* C);
void r395yy_set_content(T395* C,T0* a1);
extern T0*oBC395yypact_template;
extern int fBC395yypact_template;
T0* r395yypact_template(void);
void r395set_start_condition(T395* C,T2 a1);
T6 r395se_assigned_from(T0* a1);
void r395yy_build_tables(T395* C);
void r395make_lex_scanner_from_description(T395* C,T0* a1,T0* a2);
void r395report_bad_start_condition_error(T395* C,T0* a1);
void r395less(T395* C,T2 a1);
void r395report_bad_character_class_error(T395* C);
void r395make_from_description(T395* C,T0* a1,T0* a2);
T0* r487arguments(void);
T6 r487se_assigned_from(T0* a1);
void r487make(T487* C,T0* a1,T2 a2);
T0* r487message(T487* C,T0* a1);
T6 r487conforms_to(T487* C,T0* a1);
T0* r487twin(T487* C);
T0* r487default_message(T487* C);
void r415set_position(T415* C,T2 a1,T2 a2,T2 a3);
T6 r415se_assigned_from(T0* a1);
void r415make(T415* C,T0* a1);
T6 r415conforms_to(T415* C,T0* a1);
void r415make_from_buffer(T415* C,T0* a1);
void r415resize(T415* C);
void r415compact_right(T415* C);
T0* r415twin(T415* C);
T0* r494arguments(void);
T6 r494se_assigned_from(T0* a1);
void r494make(T494* C,T0* a1,T2 a2);
T0* r494message(T494* C,T0* a1);
T6 r494conforms_to(T494* C,T0* a1);
T0* r494twin(T494* C);
T0* r494default_message(T494* C);
T0* r450arguments(void);
T6 r450se_assigned_from(T0* a1);
void r450make(T450* C,T0* a1,T2 a2,T0* a3);
T0* r450message(T450* C,T0* a1);
T6 r450conforms_to(T450* C,T0* a1);
T0* r450twin(T450* C);
T0* r450default_message(T450* C);
T0* r469new_action(T0* a1);
T6 r469se_assigned_from(T0* a1);
T6 r469conforms_to(T469* C,T0* a1);
T0* r469twin(T469* C);
T0* r486arguments(void);
T6 r486se_assigned_from(T0* a1);
void r486make(T486* C,T0* a1,T2 a2);
T0* r486message(T486* C,T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
T0* r486default_message(T486* C);
T0* r455arguments(void);
T6 r455se_assigned_from(T0* a1);
void r455make(T455* C,T0* a1,T2 a2,T0* a3);
T0* r455message(T455* C,T0* a1);
T6 r455conforms_to(T455* C,T0* a1);
T0* r455twin(T455* C);
T0* r455default_message(T455* C);
T0* r422arguments(void);
T6 r422se_assigned_from(T0* a1);
void r422make(T422* C,T0* a1,T2 a2);
T0* r422message(T422* C,T0* a1);
T6 r422conforms_to(T422* C,T0* a1);
T0* r422twin(T422* C);
T0* r422default_message(T422* C);
T0* r385arguments(void);
T6 r385se_assigned_from(T0* a1);
void r385make(T385* C,T0* a1);
T0* r385message(T385* C,T0* a1);
T6 r385conforms_to(T385* C,T0* a1);
T0* r385twin(T385* C);
T0* r385default_message(T385* C);
T0* r421arguments(void);
T6 r421se_assigned_from(T0* a1);
void r421make(T421* C,T0* a1,T2 a2);
T0* r421message(T421* C,T0* a1);
T6 r421conforms_to(T421* C,T0* a1);
T0* r421twin(T421* C);
T0* r421default_message(T421* C);
T6 r50is_equal(T50* C,T0* a1);
extern T0*oBC50rule_sorter;
extern int fBC50rule_sorter;
T0* r50rule_sorter(void);
T6 r50se_assigned_from(T0* a1);
extern T0*oBC50bubble_sorter;
extern int fBC50bubble_sorter;
T0* r50bubble_sorter(void);
T6 r50same_type(T50* C,T0* a1);
void r50make(T50* C,T0* a1,T2 a2,T2 a3);
void r50partition(T50* C,T0* a1);
T6 r50conforms_to(T50* C,T0* a1);
T6 r50is_accepting(T50* C);
T6 r50is_accepting_head(T50* C);
T0* r50twin(T50* C);
T0* r50new_state(T50* C,T2 a1);
T0* r424arguments(void);
T6 r424se_assigned_from(T0* a1);
void r424make(T424* C,T0* a1,T2 a2,T0* a3);
T0* r424message(T424* C,T0* a1);
T6 r424conforms_to(T424* C,T0* a1);
T0* r424twin(T424* C);
T0* r424default_message(T424* C);
void r151copy(T151* C,T0* a1);
T0* r151substring(T151* C,T2 a1,T2 a2);
T2 r151occurrences(T151* C,T3 a1);
void r151reset_byte_index_cache(T151* C);
void r151wipe_out(T151* C);
T2 r151item_code(T151* C,T2 a1);
T3 r151character_item_at_byte_index(T151* C,T2 a1);
void r151put(T151* C,T3 a1,T2 a2);
T6 r151is_equal(T151* C,T0* a1);
T3 r151item(T151* C,T2 a1);
void r151resize_byte_storage(T151* C,T2 a1);
void r151append(T151* C,T0* a1);
T6 r151se_assigned_from(T0* a1);
T2 r151byte_index(T151* C,T2 a1);
T0* r151clone(T0* a1);
void r151move_bytes_right(T151* C,T2 a1,T2 a2);
void r151set_count(T151* C,T2 a1);
T2 r151next_byte_index(T151* C,T2 a1);
T6 r151same_type(T151* C,T0* a1);
void r151remove_tail(T151* C,T2 a1);
void r151make(T151* C,T2 a1);
void r151old_make_filled(T151* C,T3 a1,T2 a2);
T2 r151code_occurrences(T151* C,T2 a1);
void r151append_substring(T151* C,T0* a1,T2 a2,T2 a3);
T2 r151item_code_at_byte_index(T151* C,T2 a1);
extern T0*oBC81platform;
T0* r151string(T151* C);
void r151extend(T151* C,T3 a1);
T0* r151_px_43(T151* C,T0* a1);
T2 r151hash_code(T151* C);
T0* r151prefixed_string(T151* C,T0* a1);
T6 r151conforms_to(T151* C,T0* a1);
void r151keep_head(T151* C,T2 a1);
T2 r151to_integer(T151* C);
T0* r151new_empty_string(T2 a1);
void r151append_character(T151* C,T3 a1);
void r151make_from_substring(T151* C,T0* a1,T2 a2,T2 a3);
void r151put_code_at_byte_index(T151* C,T2 a1,T2 a2,T2 a3);
void r151fill_with(T151* C,T3 a1);
void r151put_character_at_byte_index(T151* C,T3 a1,T2 a2,T2 a3);
void r151resize(T151* C,T2 a1);
void r151put_substring_at_byte_index(T151* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
extern T0*oBC153utf8;
void r151move_bytes_left(T151* C,T2 a1,T2 a2);
void r151old_make(T151* C,T2 a1);
T8 r151to_external(T151* C);
void r151old_make_from_string(T151* C,T0* a1);
void r151to_lower(T151* C);
T0* r151twin(T151* C);
T0* r151to_utf8(T151* C);
extern T0*oBC149unicode;
void r151swap(T151* C,T2 a1,T2 a2);
void r229build(T229* C);
void r229put(T229* C,T2 a1);
T2 r229upper(T229* C);
T2 r229lower(T229* C);
T6 r229se_assigned_from(T0* a1);
T2 r229capacity(T229* C);
T0* r229to_array(T229* C,T2 a1,T2 a2);
void r229make(T229* C,T2 a1,T2 a2);
T6 r229conforms_to(T229* C,T0* a1);
T2 r229equivalence_class(T229* C,T2 a1);
void r229add(T229* C,T0* a1);
T6 r229is_representative(T229* C,T2 a1);
T0* r229twin(T229* C);
void r229initialize(T229* C);
T0* r220arguments(void);
T6 r220se_assigned_from(T0* a1);
void r220make(T220* C,T0* a1,T2 a2);
T0* r220message(T220* C,T0* a1);
T6 r220conforms_to(T220* C,T0* a1);
T0* r220twin(T220* C);
T0* r220default_message(T220* C);
void r414fill(T414* C);
void r414compact_left(T414* C);
void r414set_position(T414* C,T2 a1,T2 a2,T2 a3);
T6 r414se_assigned_from(T0* a1);
void r414make_from_string(T414* C,T0* a1);
T6 r414conforms_to(T414* C,T0* a1);
void r414make_from_buffer(T414* C,T0* a1);
void r414resize(T414* C);
void r414compact_right(T414* C);
void r414make_with_size(T414* C,T0* a1,T2 a2);
T0* r414twin(T414* C);
void r414set_file(T414* C,T0* a1);
void r414flush(T414* C);
T6 r169se_assigned_from(T0* a1);
void r169make(T169* C);
void r169old_put_string(T0* a1);
T6 r169conforms_to(T169* C,T0* a1);
void r169put_integer(T2 a1);
void r169put_line(T0* a1);
T0* r169twin(T169* C);
void r169put_string(T0* a1);
T0* r454arguments(void);
T6 r454se_assigned_from(T0* a1);
void r454make(T454* C,T0* a1,T2 a2);
T0* r454message(T454* C,T0* a1);
T6 r454conforms_to(T454* C,T0* a1);
T0* r454twin(T454* C);
T0* r454default_message(T454* C);
T6 r419se_assigned_from(T0* a1);
void r419make(T419* C);
void r419old_put_string(T0* a1);
T6 r419conforms_to(T419* C,T0* a1);
void r419put_integer(T2 a1);
void r419put_line(T0* a1);
T0* r419twin(T419* C);
void r419put_string(T0* a1);
T0* r440arguments(void);
T6 r440se_assigned_from(T0* a1);
void r440make(T440* C,T0* a1,T2 a2,T0* a3);
T0* r440message(T440* C,T0* a1);
T6 r440conforms_to(T440* C,T0* a1);
T0* r440twin(T440* C);
T0* r440default_message(T440* C);
T6 r322se_assigned_from(T0* a1);
void r322make(T322* C,T2 a1,T2 a2,T2 a3,T2 a4);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322twin(T322* C);
void r222put_entry(T222* C,T2 a1,T2 a2,T0* a3);
void r222build(T222* C);
void r222put_singletons(T222* C);
void r222print_constants(T222* C,T0* a1);
void r222print_action_routine(T222* C,T0* a1,T0* a2);
void r222initialize_dfa(T222* C,T0* a1,T2 a2,T2 a3);
T0* r222dangerous_variable_trail_rules(T222* C);
void r222build_base_def_tables(T222* C);
void r222build_accept_tables(T222* C);
void r222print_eiffel_array(T222* C,T0* a1,T0* a2,T0* a3);
void r222print_scanner(T222* C,T0* a1);
void r222put_jam_state(T222* C);
extern T0*oBC222rule_sorter;
extern int fBC222rule_sorter;
T0* r222rule_sorter(void);
void r222print_inspect_actions(T222* C,T0* a1);
void r222_43Pprint_constants(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
T0* r222clone(T0* a1);
void r222print_status_report_routines(T222* C,T0* a1);
void r222print_eiffel_header(T222* C,T0* a1);
void r222_43Pprint_backing_up_report(T222* C,T0* a1);
void r222print_eiffel_tables(T222* C,T0* a1);
void r222put_start_condition(T222* C,T0* a1);
void r222put_templates(T222* C);
void r222set_nfa_state_ids(T0* a1);
void r222make(T222* C,T0* a1);
void r222print_transitions(T222* C,T0* a1,T0* a2);
T0* r222integer_sorter(void);
void r222build_eof_rules(T222* C,T0* a1,T2 a2,T2 a3);
T6 r222conforms_to(T222* C,T0* a1);
void r222print_binary_search_actions(T222* C,T0* a1,T2 a2,T2 a3);
void r222build_nxt_chk_tables(T222* C);
void r222print_readable_character(T2 a1,T0* a2);
void r222print_action_call(T222* C,T0* a1,T0* a2);
void r222print_rule_line_numbers(T222* C,T0* a1,T0* a2);
void r222print_eiffel_code(T222* C,T0* a1);
void r222resize(T222* C,T2 a1);
void r222put_singleton(T222* C,T0* a1);
void r222print_action_body(T222* C,T0* a1,T0* a2);
void r222put_state(T222* C,T0* a1);
void r222print_backing_up_report(T222* C,T0* a1);
void r222print_actions(T222* C,T0* a1);
extern T0*oBC222null_state;
extern int fBC222null_state;
T0* r222null_state(T222* C);
void r222print_build_tables(T222* C,T0* a1);
T0* r222twin(T222* C);
void r222print_eof_actions(T222* C,T0* a1);
void r222build_transitions(T222* C,T0* a1);
void r222initialize(T222* C,T0* a1);
void r222put_eob_state(T222* C);
void r222build_rules(T222* C,T0* a1);
T0* r222new_state(T222* C,T0* a1);
T0* r413arguments(void);
T6 r413se_assigned_from(T0* a1);
void r413make(T413* C,T0* a1,T2 a2);
T0* r413message(T413* C,T0* a1);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413twin(T413* C);
T0* r413default_message(T413* C);
T0* r495arguments(void);
T6 r495se_assigned_from(T0* a1);
void r495make(T495* C,T0* a1,T2 a2);
T0* r495message(T495* C,T0* a1);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495twin(T495* C);
T0* r495default_message(T495* C);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r163command_arguments(void);
T6 r163se_assigned_from(T0* a1);
T6 r163conforms_to(T163* C,T0* a1);
T0* r163twin(T163* C);
T0* r163argument(T2 a1);
T0* r441arguments(void);
T6 r441se_assigned_from(T0* a1);
void r441make(T441* C,T0* a1,T2 a2);
T0* r441message(T441* C,T0* a1);
T6 r441conforms_to(T441* C,T0* a1);
T0* r441twin(T441* C);
T0* r441default_message(T441* C);
void r11build_dfa(T11* C);
void r11print_scanner(T11* C);
T0* r11arguments(void);
T6 r11se_assigned_from(T0* a1);
void r11override_description(T11* C,T0* a1);
void r11parse_input_file(T11* C);
T6 r11conforms_to(T11* C,T0* a1);
void r11execute(T11* C);
void r11print_backing_up_report(T11* C);
T0* r11twin(T11* C);
extern T0*oBC168error;
extern int fBC168error;
T0* r168error(void);
T6 r168se_assigned_from(T0* a1);
extern T0*oBC168input;
extern int fBC168input;
T0* r168input(void);
extern T0*oBC168output;
extern int fBC168output;
T0* r168output(void);
T6 r168conforms_to(T168* C,T0* a1);
T0* r168twin(T168* C);
extern T2 oBC166maximum_character_code;
extern int fBC166maximum_character_code;
T2 r166maximum_character_code(T166* C);
T6 r166se_assigned_from(T0* a1);
T6 r166conforms_to(T166* C,T0* a1);
T0* r166twin(T166* C);
T6 r144se_assigned_from(T0* a1);
T6 r144conforms_to(T144* C,T0* a1);
T0* r144twin(T144* C);
T6 r52se_assigned_from(T0* a1);
T6 r52conforms_to(T52* C,T0* a1);
T0* r52twin(T52* C);
extern T0*oBC536lowercase_24;
extern int fBC536lowercase_24;
T0* r535lowercase_24(void);
extern T0*oBC536lowercase_21;
extern int fBC536lowercase_21;
T0* r535lowercase_21(void);
extern T0*oBC536lowercase_06;
extern int fBC536lowercase_06;
T0* r535lowercase_06(void);
extern T0*oBC536lowercase_05;
extern int fBC536lowercase_05;
T0* r535lowercase_05(void);
extern T0*oBC536lowercase_04;
extern int fBC536lowercase_04;
T0* r535lowercase_04(void);
extern T0*oBC536lowercase_03;
extern int fBC536lowercase_03;
T0* r535lowercase_03(void);
extern T0*oBC536lowercase_02;
extern int fBC536lowercase_02;
T0* r535lowercase_02(void);
extern T0*oBC536lowercase_01;
extern int fBC536lowercase_01;
T0* r535lowercase_01(void);
extern T0*oBC536lowercase_00;
extern int fBC536lowercase_00;
T0* r535lowercase_00(void);
T6 r535se_assigned_from(T0* a1);
extern T0*oBC536lowercase_ff;
extern int fBC536lowercase_ff;
T0* r535lowercase_ff(void);
T6 r535conforms_to(T535* C,T0* a1);
T2 r535lower_code(T2 a1);
T0* r535twin(T535* C);
extern T0*oBC536lowercase_1f;
extern int fBC536lowercase_1f;
T0* r535lowercase_1f(void);
extern T0*oBC536lowercase_1e;
extern int fBC536lowercase_1e;
T0* r535lowercase_1e(void);
extern T0*oBC536lowercase;
extern int fBC536lowercase;
T0* r535lowercase(void);
void r172put_eiffel_boolean(T0* a1,T6 a2);
T6 r172se_assigned_from(T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172twin(T172* C);
T6 r42se_assigned_from(T0* a1);
T6 r42conforms_to(T42* C,T0* a1);
T0* r42twin(T42* C);
T2 r159encoded_next_value(T3 a1);
T2 r159character_byte_count(T3 a1);
T6 r159se_assigned_from(T0* a1);
T2 r159encoded_first_value(T3 a1);
T6 r159conforms_to(T159* C,T0* a1);
T2 r159code_byte_count(T2 a1);
T2 r159encoded_byte_count(T3 a1);
T0* r159twin(T159* C);
T2 r159substring_byte_count(T0* a1,T2 a2,T2 a3);
T6 r534se_assigned_from(T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
void r534put_integer_array(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r80se_assigned_from(T0* a1);
T6 r80conforms_to(T80* C,T0* a1);
T3 r80to_character(T2 a1);
T0* r80twin(T80* C);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T0* r148as_string(T0* a1);
T6 r148se_assigned_from(T0* a1);
T0* r148clone(T0* a1);
T0* r148appended_string(T0* a1,T0* a2);
T6 r148is_integer(T0* a1);
T0* r148make(T2 a1);
T0* r148string(T0* a1);
T6 r148conforms_to(T148* C,T0* a1);
T0* r148appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r148new_empty_string(T0* a1,T2 a2);
T0* r148concat(T0* a1,T0* a2);
T0* r148to_lower(T0* a1);
T0* r148twin(T148* C);
void r148append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r69se_assigned_from(T0* a1);
T6 r69conforms_to(T69* C,T0* a1);
T0* r69twin(T69* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 544
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms534_4992;
extern T7*ms485_1692988587;
extern T7*ms440_1062665526;
extern T7*ms20_1606053737;
extern T7*ms19_1553;
extern T7*ms433_927760026;
extern T7*ms520_1515383187;
extern T7*ms220_679509108;
extern T7*ms455_215272365;
extern T7*ms172_79251;
extern T7*ms457_1520688928;
extern T7*ms43_1338085634;
extern T7*ms442_135699103;
extern T7*ms454_1086870388;
extern T7*ms221_241860809;
extern T7*ms421_1428321107;
extern T7*ms43_279;
extern T7*ms493_596994766;
extern T7*ms495_465236511;
extern T7*ms451_178164711;
extern T7*ms453_111876583;
extern T7*ms498_823229232;
extern T7*ms494_1753741984;
extern T7*ms486_1083157669;
extern T7*ms413_1449702436;
extern T7*ms523_1633989132;
extern T7*ms458_1531431095;
extern T7*ms484_1231359120;
extern T7*ms522_1103229751;
extern T7*ms219_1868436966;
extern T7*ms456_1686894687;
extern T7*ms488_792132570;
extern T7*ms27_250860571;
extern T7*ms441_1257878695;
extern T7*ms169_10;
extern T7*ms422_1711904633;
extern T7*ms419_10;
extern T7*ms172_18036;
extern T7*ms385_988446515;
extern T7*ms424_155215853;
extern T7*ms151_0;
extern T7*ms432_479216981;
extern T7*ms148_0;
extern T7*ms159_0;
extern T7*ms487_1308094803;
extern T7*ms534_192;
extern T7*ms534_279;
extern T7*ms434_1203377682;
extern T7*ms521_1158552108;
extern T7*ms534_992;
extern T7*ms23_10;
extern T7*ms452_19730319;
extern T7*ms489_280487577;
extern T7*ms450_645257649;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void*se_ma85(int argc,...);
void*se_ma539(int argc,...);
T2 X215count(T0*C);
T0* X215item(T0*C,T2 a1);
T6 X215is_empty(T0*C);
void X215replace(T0*C,T0* a1,T2 a2);
void X229put(T0*C,T2 a1);
T0* X229to_array(T0*C,T2 a1,T2 a2);
void X229add(T0*C,T0* a1);
void X88sort(T0*C,T0* a1);
T6 X88has(T0*C,T2 a1);
void X94sort(T0*C,T0* a1);
T0* X7substring(T0*C,T2 a1,T2 a2);
T2 X7occurrences(T0*C,T3 a1);
void X7wipe_out(T0*C);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
T0* X7string(T0*C);
T0* X7_px_43(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
T8 X7to_external(T0*C);
void X7to_lower(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T0* X10twin(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X408clear_all(T0*C,T0* a1);
T0* X408make(T0*C,T2 a1);
T0* X408resize(T0*C,T0* a1,T2 a2);
void X37put_new_line(T0*C);
void X37put_integer(T0*C,T2 a1);
void X37put_line(T0*C,T0* a1);
void X37put_character(T0*C,T3 a1);
void X37put_string(T0*C,T0* a1);
T0* X391name(T0*C);
T2 X391read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X391read_character(T0*C);
T6 X391end_of_input(T0*C);
T3 X391last_character(T0*C);
void X415fill(T0*C);
void X43print_scanner(T0*C,T0* a1);
void X43print_backing_up_report(T0*C,T0* a1);
T2 X505count(T0*C);
T2 X505item(T0*C,T2 a1);
T2 X505lower(T0*C);
T6 X236labeled(T0*C,T2 a1);
void X236record(T0*C,T0* a1);
void X410put(T0*C,T0* a1,T2 a2);
T0* X410item(T0*C,T2 a1);
T412 X410storage(T0*C);
void X410set_all_with(T0*C,T0* a1);
void X410resize(T0*C,T2 a1);
void X34put_string(T0*C,T0* a1);
T2 X97item(T0*C,T2 a1);
T6 X97is_empty(T0*C);
void X97replace(T0*C,T2 a1,T2 a2);
T0* X21default_message(T0*C);
T0* T2toT52(T2 source);
T2 T52toT2(T0* source);

#ifdef __cplusplus
}
#endif
