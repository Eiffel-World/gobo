#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.75 (July 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S316 T316;
typedef struct S101 T101;
typedef struct S224 T224;
typedef struct S17 T17;
typedef struct S197 T197;
typedef struct S206 T206;
typedef struct S195 T195;
typedef struct S210 T210;
typedef struct S71 T71;
typedef struct S204 T204;
typedef struct S450 T450;
typedef struct S161 T161;
typedef struct S83 T83;
typedef struct S245 T245;
typedef struct S337 T337;
typedef struct S297 T297;
typedef struct S209 T209;
typedef struct S199 T199;
typedef struct S452 T452;
typedef struct S495 T495;
typedef struct S490 T490;
typedef struct S484 T484;
typedef struct S493 T493;
typedef struct S145 T145;
typedef struct S433 T433;
typedef struct S266 T266;
typedef struct S79 T79;
typedef struct S418 T418;
typedef struct S335 T335;
typedef struct S135 T135;
typedef struct S246 T246;
typedef struct S451 T451;
typedef struct S373 T373;
typedef struct S414 T414;
typedef struct S253 T253;
typedef struct S113 T113;
typedef struct S454 T454;
typedef struct S132 T132;
typedef struct S108 T108;
typedef struct S481 T481;
typedef struct S461 T461;
typedef struct S137 T137;
typedef struct S270 T270;
typedef struct S48 T48;
typedef struct S298 T298;
typedef struct S396 T396;
typedef struct S420 T420;
typedef struct S388 T388;
typedef struct S320 T320;
typedef struct S218 T218;
typedef struct S492 T492;
typedef struct S63 T63;
typedef struct S232 T232;
typedef struct S76 T76;
typedef struct S172 T172;
typedef struct S37 T37;
typedef struct S152 T152;
typedef struct S38 T38;
typedef struct S460 T460;
typedef struct S61 T61;
typedef struct S496 T496;
typedef struct S415 T415;
typedef struct S445 T445;
typedef struct S404 T404;
typedef struct S74 T74;
typedef struct S251 T251;
typedef struct S395 T395;
typedef struct S244 T244;
typedef struct S25 T25;
typedef struct S483 T483;
typedef struct S394 T394;
typedef struct S230 T230;
typedef struct S34 T34;
typedef struct S409 T409;
typedef struct S421 T421;
typedef struct S160 T160;
typedef struct S446 T446;
typedef struct S392 T392;
typedef struct S115 T115;
typedef struct S455 T455;
typedef struct S28 T28;
typedef struct S35 T35;
typedef struct S354 T354;
typedef struct S70 T70;
typedef struct S189 T189;
typedef struct S485 T485;
typedef struct S302 T302;
typedef struct S419 T419;
typedef struct S144 T144;
typedef struct S203 T203;
typedef struct S447 T447;
typedef struct S7 T7;
typedef struct S413 T413;
typedef struct S494 T494;
typedef struct S486 T486;
typedef struct S248 T248;
typedef struct S62 T62;
typedef struct S340 T340;
typedef struct S321 T321;
typedef struct S238 T238;
typedef struct S300 T300;
typedef struct S358 T358;
typedef struct S223 T223;
typedef struct S280 T280;
typedef struct S296 T296;
typedef struct S371 T371;
typedef struct S449 T449;
typedef struct S379 T379;
typedef struct S157 T157;
typedef struct S442 T442;
typedef struct S351 T351;
typedef struct S456 T456;
typedef struct S84 T84;
typedef struct S370 T370;
typedef struct S412 T412;
typedef struct S431 T431;
typedef struct S36 T36;
typedef struct S217 T217;
typedef struct S192 T192;
typedef struct S448 T448;
typedef struct S295 T295;
typedef struct S417 T417;
typedef struct S138 T138;
typedef struct S385 T385;
typedef struct S216 T216;
typedef struct S356 T356;
typedef struct S384 T384;
typedef struct S46 T46;
typedef struct S243 T243;
typedef struct S387 T387;
typedef struct S86 T86;
typedef struct S207 T207;
typedef struct S397 T397;
typedef struct S198 T198;
typedef struct S134 T134;
typedef struct S378 T378;
typedef struct S146 T146;
typedef struct S416 T416;
typedef struct S381 T381;
typedef struct S386 T386;
typedef struct S139 T139;
typedef struct S372 T372;
typedef struct S262 T262;
typedef struct S402 T402;
typedef struct S105 T105;
typedef struct S176 T176;
typedef struct S64 T64;
typedef struct S459 T459;
typedef struct S158 T158;
typedef struct S471 T471;
typedef struct S200 T200;
typedef struct S401 T401;
typedef struct S383 T383;
typedef struct S231 T231;
typedef struct S405 T405;
typedef struct S305 T305;
typedef struct S93 T93;
typedef struct S377 T377;
typedef struct S457 T457;
typedef struct S142 T142;
typedef struct S82 T82;
typedef struct S129 T129;
typedef struct S403 T403;
typedef struct S92 T92;
typedef struct S291 T291;

/*C Header Pass 2 :*/
typedef T0**T212;
typedef T0**T411;
typedef T0**T250;
typedef T6*T73;
typedef T0**T255;
typedef T0**T178;
typedef T0**T141;
typedef T0**T117;
typedef T0**T107;
typedef T0**T304;
typedef T3*T9;
typedef T2*T81;
typedef T0**T78;
typedef T0**T376;

/*C Header Pass 3 :*/

/*C Header Pass 4 :*/
struct S316{Tid id;T0* _item;T0* _right;};
extern T316 M316;
struct S101{Tid id;};
extern T101 M101;
struct S224{Tid id;T0* _comparator;};
extern T224 M224;
struct S17{Tid id;T0* _description;T0* _error_handler;T0* _dfa;};
extern T17 M17;
struct S197{Tid id;T0* _parameters;};
extern T197 M197;
struct S206{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T206 M206;
struct S195{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T195 M195;
struct S71{Tid id;T2 _count;T0* _storage;};
extern T71 M71;
struct S204{Tid id;T2 _yyNb_rules;T2 _yyNull_equiv_class;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T6 _yyBacking_up;T0* _states;T0* _yy_accept;T0* _yy_ec;T2 _yyEnd_of_buffer;T0* _eiffel_header;T6 _bol_needed;T0* _yy_nxt;T2 _yyNb_rows;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _minimum_symbol;T6 _yyLine_used;T6 _yyPosition_used;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T6 _inspect_used;};
extern T204 M204;
struct S450{Tid id;T0* _parameters;};
extern T450 M450;
struct S161{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T161 M161;
struct S210{Tid id;T2 _item;T0* _right;T0* _left;};
extern T210 M210;
struct S83{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T83 M83;
struct S245{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T245 M245;
struct S297{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _meta_equiv_classes;};
extern T297 M297;
struct S209{Tid id;T212 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T209 M209;
struct S199{Tid id;T0* _parameters;};
extern T199 M199;
struct S452{Tid id;};
extern T452 M452;
struct S495{Tid id;};
extern T495 M495;
struct S490{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T490 M490;
struct S484{Tid id;T0* _parameters;};
extern T484 M484;
struct S493{Tid id;};
extern T493 M493;
struct S145{Tid id;};
extern T145 M145;
struct S433{Tid id;T0* _target;T0* _label;};
extern T433 M433;
struct S266{Tid id;};
extern T266 M266;
struct S79{Tid id;T81 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T79 M79;
struct S418{Tid id;T0* _parameters;};
extern T418 M418;
struct S335{Tid id;T0* _item;T0* _right;T0* _left;};
extern T335 M335;
struct S135{Tid id;};
extern T135 M135;
struct S451{Tid id;T0* _parameters;};
extern T451 M451;
struct S373{Tid id;};
extern T373 M373;
struct S414{Tid id;T0* _parameters;};
extern T414 M414;
struct S253{Tid id;T255 _storage;T2 _capacity;T2 _upper;};
extern T253 M253;
struct S113{Tid id;};
extern T113 M113;
struct S454{Tid id;T0* _target;T2 _label;};
extern T454 M454;
struct S132{Tid id;};
extern T132 M132;
struct S481{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T481 M481;
struct S461{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T461 M461;
struct S137{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T137 M137;
struct S270{Tid id;};
extern T270 M270;
struct S48{Tid id;T2 _item;};
extern T48 M48;
struct S298{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T298 M298;
struct S396{Tid id;T0* _parameters;};
extern T396 M396;
struct S420{Tid id;T0* _parameters;};
extern T420 M420;
struct S388{Tid id;};
extern T388 M388;
struct S320{Tid id;T0* _transitions;T2 _state_id;T0* _common_state;};
extern T320 M320;
struct S218{Tid id;T0* _comparator;};
extern T218 M218;
struct S492{Tid id;};
extern T492 M492;
struct S63{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T63 M63;
struct S232{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T232 M232;
struct S76{Tid id;T78 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T76 M76;
struct S172{Tid id;T0* _item;T0* _right;};
extern T172 M172;
struct S37{Tid id;T0* _path;T8 _output_stream;};
extern T37 M37;
struct S152{Tid id;};
extern T152 M152;
struct S38{Tid id;T8 _item;};
extern T38 M38;
struct S460{Tid id;T0* _parameters;};
extern T460 M460;
struct S61{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T61 M61;
struct S496{Tid id;};
extern T496 M496;
struct S337{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T337 M337;
struct S415{Tid id;T0* _parameters;};
extern T415 M415;
struct S445{Tid id;};
extern T445 M445;
struct S404{Tid id;T0* _parameters;};
extern T404 M404;
struct S74{Tid id;};
extern T74 M74;
struct S251{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T251 M251;
struct S395{Tid id;T0* _parameters;};
extern T395 M395;
struct S108{Tid id;T0* _states;T6 _in_trail_context;};
extern T108 M108;
struct S244{Tid id;T0* _text;};
extern T244 M244;
struct S25{Tid id;T0* _error_handler;};
extern T25 M25;
struct S483{Tid id;T0* _parameters;};
extern T483 M483;
struct S394{Tid id;T0* _parameters;};
extern T394 M394;
struct S230{Tid id;};
extern T230 M230;
struct S34{Tid id;T2 _array_size;T6 _backing_up_report;T0* _backing_up_filename;T6 _case_insensitive;T2 _characters_count;T6 _debug_mode;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _no_default_rule;T6 _no_warning;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _input_filename;T0* _output_filename;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T34 M34;
struct S409{Tid id;T411 _storage;T2 _capacity;T2 _upper;};
extern T409 M409;
struct S421{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T421 M421;
struct S446{Tid id;T0* _parameters;};
extern T446 M446;
struct S392{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T392 M392;
struct S115{Tid id;T117 _storage;T2 _capacity;T2 _upper;};
extern T115 M115;
struct S455{Tid id;T0* _parameters;};
extern T455 M455;
struct S28{Tid id;T0* _parameters;};
extern T28 M28;
struct S35{Tid id;T6 _item;};
extern T35 M35;
struct S354{Tid id;};
extern T354 M354;
struct S70{Tid id;T73 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T70 M70;
struct S189{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T189 M189;
struct S485{Tid id;T0* _parameters;};
extern T485 M485;
struct S302{Tid id;T304 _storage;T2 _capacity;T2 _upper;};
extern T302 M302;
struct S419{Tid id;T0* _parameters;};
extern T419 M419;
struct S144{Tid id;T141 _storage;T2 _capacity;T2 _upper;};
extern T144 M144;
struct S203{Tid id;T107 _storage;T2 _capacity;T2 _upper;};
extern T203 M203;
struct S246{Tid id;T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;T6 _has_eof;};
extern T246 M246;
struct S447{Tid id;T0* _parameters;};
extern T447 M447;
struct S413{Tid id;T0* _parameters;};
extern T413 M413;
struct S494{Tid id;};
extern T494 M494;
struct S486{Tid id;T0* _parameters;};
extern T486 M486;
struct S248{Tid id;T250 _storage;T2 _capacity;T2 _upper;};
extern T248 M248;
struct S62{Tid id;T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T62 M62;
struct S160{Tid id;T0* _first;T0* _second;};
extern T160 M160;
struct S340{Tid id;};
extern T340 M340;
struct S321{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T321 M321;
struct S238{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T238 M238;
struct S300{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T300 M300;
struct S358{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T2 _nb_open_brackets;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _options_overrider;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _singleton_line;T2 _singleton_column;T2 _singleton_count;T2 _series_line;T2 _series_column;T2 _series_count;T2 _regexp_line;T2 _regexp_column;T2 _regexp_count;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T358 M358;
struct S223{Tid id;};
extern T223 M223;
struct S280{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T280 M280;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S371{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T371 M371;
struct S449{Tid id;T0* _parameters;};
extern T449 M449;
struct S379{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T379 M379;
struct S157{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T157 M157;
struct S442{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T442 M442;
struct S351{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T351 M351;
struct S456{Tid id;T0* _parameters;};
extern T456 M456;
struct S84{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T84 M84;
struct S370{Tid id;};
extern T370 M370;
struct S412{Tid id;T0* _parameters;};
extern T412 M412;
struct S431{Tid id;};
extern T431 M431;
struct S36{Tid id;};
extern T36 M36;
struct S217{Tid id;};
extern T217 M217;
struct S192{Tid id;};
extern T192 M192;
struct S448{Tid id;T0* _parameters;};
extern T448 M448;
struct S295{Tid id;};
extern T295 M295;
struct S417{Tid id;T0* _parameters;};
extern T417 M417;
struct S138{Tid id;};
extern T138 M138;
struct S385{Tid id;T0* _parameters;};
extern T385 M385;
struct S216{Tid id;T0* _target;};
extern T216 M216;
struct S356{Tid id;T0* _parameters;};
extern T356 M356;
struct S384{Tid id;T0* _parameters;};
extern T384 M384;
struct S46{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T46 M46;
struct S243{Tid id;};
extern T243 M243;
struct S387{Tid id;T0* _parameters;};
extern T387 M387;
struct S86{Tid id;T81 _storage;T2 _capacity;T2 _upper;};
extern T86 M86;
struct S207{Tid id;T2 _count;T0* _storage;};
extern T207 M207;
struct S397{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T397 M397;
struct S198{Tid id;T0* _parameters;};
extern T198 M198;
struct S134{Tid id;T78 _storage;T2 _capacity;T2 _upper;};
extern T134 M134;
struct S378{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T378 M378;
struct S146{Tid id;T0* _name;};
extern T146 M146;
struct S416{Tid id;T0* _parameters;};
extern T416 M416;
struct S381{Tid id;T0* _name;};
extern T381 M381;
struct S386{Tid id;};
extern T386 M386;
struct S139{Tid id;T141 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T139 M139;
struct S372{Tid id;T376 _storage;T2 _capacity;T2 _upper;};
extern T372 M372;
struct S262{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T262 M262;
struct S402{Tid id;T0* _parameters;};
extern T402 M402;
struct S105{Tid id;T107 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T105 M105;
struct S176{Tid id;T178 _storage;T2 _capacity;T2 _upper;};
extern T176 M176;
struct S64{Tid id;T3 _item;};
extern T64 M64;
struct S296{Tid id;T2 _state_id;T2 _symbol;T2 _target_id;T2 _default_id;};
extern T296 M296;
struct S459{Tid id;T0* _comparator;};
extern T459 M459;
struct S158{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T158 M158;
struct S471{Tid id;};
extern T471 M471;
struct S200{Tid id;T2 _yyNb_rules;T2 _yyNull_equiv_class;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T2 _yyJam_state;T2 _yyTemplate_mark;T0* _states;T0* _yy_accept;T0* _yy_ec;T2 _yyEnd_of_buffer;T0* _eiffel_header;T6 _bol_needed;T0* _yy_nxt;T0* _yy_chk;T0* _yy_def;T0* _yy_acclist;T6 _yyVariable_trail_context;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _yyJam_base;T2 _backing_up_count;T0* _yy_base;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T6 _yyReject_used;T2 _minimum_symbol;T6 _yyLine_used;T6 _yyPosition_used;T6 _inspect_used;T0* _yy_meta;T0* _meta_equiv_classes;T6 _meta_equiv_classes_used;T0* _protos;T0* _templates;T0* _singletons;T2 _first_free;T2 _table_end;T2 _templates_count;};
extern T200 M200;
struct S401{Tid id;};
extern T401 M401;
struct S383{Tid id;};
extern T383 M383;
struct S231{Tid id;};
extern T231 M231;
struct S405{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T405 M405;
struct S305{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T305 M305;
struct S93{Tid id;T0* _comparator;};
extern T93 M93;
struct S377{Tid id;T0* _parameters;};
extern T377 M377;
struct S457{Tid id;T0* _parameters;};
extern T457 M457;
struct S142{Tid id;T0* _program_name;};
extern T142 M142;
struct S82{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T82 M82;
struct S129{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T129 M129;
struct S403{Tid id;T0* _parameters;};
extern T403 M403;
struct S92{Tid id;};
extern T92 M92;
struct S291{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T291 M291;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T0* r3out(T3 C);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T3 r3to_lower(T3 C);
extern T0*oBC1tagged_out_memory;
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
void r212set_all_with(T212 C,T0* a1,T2 a2);
void r212copy_from(T212 C,T212 a1,T2 a2);
void r411clear_all(T411 C,T2 a1);
T411 r411realloc(T411 C,T2 a1,T2 a2);
void r411set_all_with(T411 C,T0* a1,T2 a2);
void r411clear(T411 C,T2 a1,T2 a2);
void r411copy_from(T411 C,T411 a1,T2 a2);
void r250clear_all(T250 C,T2 a1);
T250 r250realloc(T250 C,T2 a1,T2 a2);
void r250set_all_with(T250 C,T0* a1,T2 a2);
void r250clear(T250 C,T2 a1,T2 a2);
void r250copy_from(T250 C,T250 a1,T2 a2);
void r73set_all_with(T73 C,T6 a1,T2 a2);
void r73copy_from(T73 C,T73 a1,T2 a2);
void r255clear_all(T255 C,T2 a1);
T255 r255realloc(T255 C,T2 a1,T2 a2);
void r255set_all_with(T255 C,T0* a1,T2 a2);
void r255clear(T255 C,T2 a1,T2 a2);
void r255copy_from(T255 C,T255 a1,T2 a2);
void r178clear_all(T178 C,T2 a1);
T178 r178realloc(T178 C,T2 a1,T2 a2);
void r178set_all_with(T178 C,T0* a1,T2 a2);
void r178clear(T178 C,T2 a1,T2 a2);
void r178copy_from(T178 C,T178 a1,T2 a2);
void r141clear_all(T141 C,T2 a1);
T141 r141realloc(T141 C,T2 a1,T2 a2);
void r141set_all_with(T141 C,T0* a1,T2 a2);
void r141clear(T141 C,T2 a1,T2 a2);
void r141copy_from(T141 C,T141 a1,T2 a2);
void r117clear_all(T117 C,T2 a1);
T117 r117realloc(T117 C,T2 a1,T2 a2);
void r117set_all_with(T117 C,T0* a1,T2 a2);
void r117clear(T117 C,T2 a1,T2 a2);
void r117copy_from(T117 C,T117 a1,T2 a2);
void r107clear_all(T107 C,T2 a1);
T107 r107realloc(T107 C,T2 a1,T2 a2);
void r107set_all_with(T107 C,T0* a1,T2 a2);
void r107clear(T107 C,T2 a1,T2 a2);
void r107copy_from(T107 C,T107 a1,T2 a2);
void r304clear_all(T304 C,T2 a1);
T304 r304realloc(T304 C,T2 a1,T2 a2);
void r304set_all_with(T304 C,T0* a1,T2 a2);
void r304clear(T304 C,T2 a1,T2 a2);
void r304copy_from(T304 C,T304 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
T2 r9fast_occurrences(T9 C,T3 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r81clear_all(T81 C,T2 a1);
T81 r81realloc(T81 C,T2 a1,T2 a2);
void r81move(T81 C,T2 a1,T2 a2,T2 a3);
void r81set_all_with(T81 C,T2 a1,T2 a2);
void r81clear(T81 C,T2 a1,T2 a2);
void r81copy_from(T81 C,T81 a1,T2 a2);
void r78clear_all(T78 C,T2 a1);
T78 r78realloc(T78 C,T2 a1,T2 a2);
void r78set_all_with(T78 C,T0* a1,T2 a2);
void r78clear(T78 C,T2 a1,T2 a2);
void r78copy_from(T78 C,T78 a1,T2 a2);
void r376clear_all(T376 C,T2 a1);
T376 r376realloc(T376 C,T2 a1,T2 a2);
void r376set_all_with(T376 C,T0* a1,T2 a2);
void r376clear(T376 C,T2 a1,T2 a2);
void r376copy_from(T376 C,T376 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T2 r7occurrences(T7* C,T3 a1);
T6 r7is_equal(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7right_adjust(T7* C);
T8 r7to_external(T7* C);
void r7to_lower(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r209copy(T209* C,T0* a1);
T2 r209count(T209* C);
T0* r209item(T209* C,T2 a1);
T6 r209se_assigned_from(T0* a1);
void r209make(T209* C,T2 a1,T2 a2);
T6 r209conforms_to(T209* C,T0* a1);
T0* r209twin(T209* C);
void r79copy(T79* C,T0* a1);
T2 r79count(T79* C);
T2 r79item(T79* C,T2 a1);
T6 r79se_assigned_from(T0* a1);
void r79make(T79* C,T2 a1,T2 a2);
T6 r79conforms_to(T79* C,T0* a1);
void r79resize(T79* C,T2 a1,T2 a2);
T0* r79twin(T79* C);
void r253copy(T253* C,T0* a1);
T6 r253se_assigned_from(T0* a1);
void r253make(T253* C,T2 a1);
T6 r253conforms_to(T253* C,T0* a1);
void r253resize(T253* C,T2 a1);
T0* r253twin(T253* C);
void r76copy(T76* C,T0* a1);
T2 r76count(T76* C);
T0* r76item(T76* C,T2 a1);
T6 r76valid_index(T76* C,T2 a1);
T6 r76se_assigned_from(T0* a1);
void r76make(T76* C,T2 a1,T2 a2);
T6 r76conforms_to(T76* C,T0* a1);
T0* r76twin(T76* C);
void r409copy(T409* C,T0* a1);
T6 r409se_assigned_from(T0* a1);
void r409make(T409* C,T2 a1);
T6 r409conforms_to(T409* C,T0* a1);
void r409resize(T409* C,T2 a1);
T0* r409twin(T409* C);
void r115copy(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
void r115make(T115* C,T2 a1);
T6 r115conforms_to(T115* C,T0* a1);
void r115resize(T115* C,T2 a1);
T0* r115twin(T115* C);
void r70copy(T70* C,T0* a1);
T6 r70item(T70* C,T2 a1);
T6 r70se_assigned_from(T0* a1);
void r70make(T70* C,T2 a1,T2 a2);
T6 r70conforms_to(T70* C,T0* a1);
T0* r70twin(T70* C);
void r302copy(T302* C,T0* a1);
T6 r302se_assigned_from(T0* a1);
void r302make(T302* C,T2 a1);
T6 r302conforms_to(T302* C,T0* a1);
void r302resize(T302* C,T2 a1);
T0* r302twin(T302* C);
void r144copy(T144* C,T0* a1);
T6 r144se_assigned_from(T0* a1);
void r144make(T144* C,T2 a1);
T6 r144conforms_to(T144* C,T0* a1);
void r144resize(T144* C,T2 a1);
T0* r144twin(T144* C);
void r203copy(T203* C,T0* a1);
T6 r203se_assigned_from(T0* a1);
void r203make(T203* C,T2 a1);
T6 r203conforms_to(T203* C,T0* a1);
void r203resize(T203* C,T2 a1);
T0* r203twin(T203* C);
void r248copy(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
void r248make(T248* C,T2 a1);
T6 r248conforms_to(T248* C,T0* a1);
void r248resize(T248* C,T2 a1);
T0* r248twin(T248* C);
void r86copy(T86* C,T0* a1);
T6 r86se_assigned_from(T0* a1);
void r86make(T86* C,T2 a1);
T6 r86conforms_to(T86* C,T0* a1);
void r86resize(T86* C,T2 a1);
T0* r86twin(T86* C);
void r86with_capacity(T86* C,T2 a1);
void r86from_collection(T86* C,T0* a1);
void r134copy(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
void r134make(T134* C,T2 a1);
T6 r134conforms_to(T134* C,T0* a1);
void r134resize(T134* C,T2 a1);
T0* r134twin(T134* C);
void r139copy(T139* C,T0* a1);
T2 r139count(T139* C);
T0* r139item(T139* C,T2 a1);
T6 r139valid_index(T139* C,T2 a1);
T6 r139se_assigned_from(T0* a1);
void r139make(T139* C,T2 a1,T2 a2);
T6 r139conforms_to(T139* C,T0* a1);
T0* r139twin(T139* C);
void r372copy(T372* C,T0* a1);
T2 r372count(T372* C);
T0* r372item(T372* C,T2 a1);
T6 r372se_assigned_from(T0* a1);
void r372make(T372* C,T2 a1);
T6 r372conforms_to(T372* C,T0* a1);
void r372resize(T372* C,T2 a1);
T0* r372twin(T372* C);
void r105copy(T105* C,T0* a1);
T2 r105count(T105* C);
T0* r105item(T105* C,T2 a1);
T6 r105se_assigned_from(T0* a1);
void r105make(T105* C,T2 a1,T2 a2);
T6 r105conforms_to(T105* C,T0* a1);
T0* r105twin(T105* C);
void r176copy(T176* C,T0* a1);
T6 r176se_assigned_from(T0* a1);
void r176make(T176* C,T2 a1);
T6 r176conforms_to(T176* C,T0* a1);
void r176resize(T176* C,T2 a1);
T0* r176twin(T176* C);
T6 r316se_assigned_from(T0* a1);
T6 r316conforms_to(T316* C,T0* a1);
T0* r316twin(T316* C);
T6 r101se_assigned_from(T0* a1);
T6 r101conforms_to(T101* C,T0* a1);
T6 r101test(T2 a1,T2 a2);
T0* r101twin(T101* C);
void r224subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r224se_assigned_from(T0* a1);
T6 r224conforms_to(T224* C,T0* a1);
T0* r224twin(T224* C);
void r224sort_with_comparator(T0* a1,T0* a2);
T2 r195new_capacity(T2 a1);
void r195copy(T195* C,T0* a1);
T6 r195extendible(T195* C,T2 a1);
void r195remove_traversing_cursor(T195* C,T0* a1);
void r195move_all_cursors_after(T195* C);
void r195add_traversing_cursor(T195* C,T0* a1);
T6 r195se_assigned_from(T0* a1);
T0* r195clone(T0* a1);
T6 r195cursor_before(T0* a1);
void r195make(T195* C,T2 a1);
T6 r195cursor_after(T0* a1);
T6 r195conforms_to(T195* C,T0* a1);
void r195resize(T195* C,T2 a1);
T0* r195twin(T195* C);
void r195force_last(T195* C,T0* a1);
T0* r195new_cursor(T195* C);
T6 r195cursor_off(T0* a1);
T2 r71maximum_label(T71* C);
void r71copy(T71* C,T0* a1);
T2 r71minimum_label(T71* C);
void r71set_target(T71* C,T0* a1,T2 a2);
T6 r71se_assigned_from(T0* a1);
T0* r71clone(T0* a1);
void r71make(T71* C,T2 a1,T2 a2);
T6 r71conforms_to(T71* C,T0* a1);
T0* r71twin(T71* C);
T0* r71difference(T71* C,T0* a1,T0* a2);
void r161copy(T161* C,T0* a1);
void r161remove_traversing_cursor(T161* C,T0* a1);
void r161move_all_cursors_after(T161* C);
void r161add_traversing_cursor(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
T0* r161clone(T0* a1);
T6 r161cursor_before(T0* a1);
void r161make(T161* C,T2 a1);
T6 r161cursor_after(T0* a1);
T6 r161conforms_to(T161* C,T0* a1);
T0* r161twin(T161* C);
T0* r161new_cursor(T161* C);
void r161put_last(T161* C,T0* a1);
T6 r161cursor_off(T0* a1);
void r210put_left(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
T6 r210conforms_to(T210* C,T0* a1);
T0* r210twin(T210* C);
void r210put_right(T210* C,T0* a1);
T6 r452se_assigned_from(T0* a1);
T0* r452make(T2 a1);
T6 r452conforms_to(T452* C,T0* a1);
T0* r452resize(T0* a1,T2 a2);
T0* r452twin(T452* C);
T6 r495se_assigned_from(T0* a1);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495twin(T495* C);
void r490copy(T490* C,T0* a1);
T6 r490se_assigned_from(T0* a1);
T6 r490off(T490* C);
T6 r490conforms_to(T490* C,T0* a1);
T0* r490twin(T490* C);
T6 r493se_assigned_from(T0* a1);
T6 r493conforms_to(T493* C,T0* a1);
T0* r493twin(T493* C);
T6 r433labeled(T433* C,T2 a1);
T6 r433se_assigned_from(T0* a1);
void r433make(T433* C,T0* a1,T0* a2);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433twin(T433* C);
void r433record(T433* C,T0* a1);
T6 r266se_assigned_from(T0* a1);
T0* r266make(T2 a1);
T6 r266conforms_to(T266* C,T0* a1);
T0* r266resize(T0* a1,T2 a2);
T0* r266twin(T266* C);
T6 r335se_assigned_from(T0* a1);
T6 r335conforms_to(T335* C,T0* a1);
T0* r335twin(T335* C);
void r335put_right(T335* C,T0* a1);
void r373clear_all(T0* a1);
T6 r373se_assigned_from(T0* a1);
T0* r373make(T2 a1);
T6 r373conforms_to(T373* C,T0* a1);
T0* r373resize(T0* a1,T2 a2);
T0* r373twin(T373* C);
T6 r113se_assigned_from(T0* a1);
T6 r113conforms_to(T113* C,T0* a1);
T6 r113test(T0* a1,T0* a2);
T0* r113twin(T113* C);
T6 r454se_assigned_from(T0* a1);
void r454make(T454* C,T2 a1,T0* a2);
T6 r454conforms_to(T454* C,T0* a1);
T0* r454twin(T454* C);
void r454record(T454* C,T0* a1);
T6 r132se_assigned_from(T0* a1);
T0* r132to_fixed_array(T0* a1);
T0* r132make(T2 a1);
T0* r132make_from_array(T0* a1);
T6 r132conforms_to(T132* C,T0* a1);
T0* r132resize(T0* a1,T2 a2);
T0* r132twin(T132* C);
void r481copy(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
void r481make(T481* C,T0* a1);
T6 r481off(T481* C);
T6 r481conforms_to(T481* C,T0* a1);
T0* r481twin(T481* C);
T6 r270se_assigned_from(T0* a1);
T6 r270conforms_to(T270* C,T0* a1);
T0* r270twin(T270* C);
T6 r388se_assigned_from(T0* a1);
T0* r388make(T2 a1);
T6 r388conforms_to(T388* C,T0* a1);
T0* r388resize(T0* a1,T2 a2);
T0* r388twin(T388* C);
void r218subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r218se_assigned_from(T0* a1);
T6 r218conforms_to(T218* C,T0* a1);
void r218sort_with_comparator(T0* a1,T0* a2);
T0* r218twin(T218* C);
T6 r492se_assigned_from(T0* a1);
T6 r492conforms_to(T492* C,T0* a1);
T0* r492twin(T492* C);
T2 r63new_capacity(T2 a1);
void r63copy(T63* C,T0* a1);
void r63clear_items(T63* C,T2 a1,T2 a2);
T6 r63extendible(T63* C,T2 a1);
void r63wipe_out(T63* C);
void r63move_cursors_right(T63* C,T2 a1,T2 a2);
void r63put(T63* C,T0* a1,T2 a2);
void r63remove_traversing_cursor(T63* C,T0* a1);
void r63move_all_cursors_after(T63* C);
void r63add_traversing_cursor(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
T0* r63clone(T0* a1);
void r63force_first(T63* C,T0* a1);
T6 r63cursor_before(T0* a1);
void r63make(T63* C,T2 a1);
T6 r63cursor_after(T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
T6 r63has(T63* C,T0* a1);
void r63move_right(T63* C,T2 a1,T2 a2);
void r63resize(T63* C,T2 a1);
T0* r63twin(T63* C);
void r63force_last(T63* C,T0* a1);
T0* r63new_cursor(T63* C);
void r63put_last(T63* C,T0* a1);
T6 r63cursor_off(T0* a1);
void r232copy(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
T6 r232off(T232* C);
T6 r232conforms_to(T232* C,T0* a1);
T0* r232twin(T232* C);
T6 r172se_assigned_from(T0* a1);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172twin(T172* C);
void r61copy(T61* C,T0* a1);
void r61remove_traversing_cursor(T61* C,T0* a1);
void r61cursor_go_after(T61* C,T0* a1);
void r61move_all_cursors_after(T61* C);
void r61add_traversing_cursor(T61* C,T0* a1);
T6 r61se_assigned_from(T0* a1);
T0* r61clone(T0* a1);
T6 r61cursor_before(T0* a1);
void r61make(T61* C,T2 a1);
T6 r61cursor_after(T0* a1);
T6 r61conforms_to(T61* C,T0* a1);
T2 r61cursor_index(T61* C,T0* a1);
void r61cursor_search_forth(T61* C,T0* a1,T0* a2);
void r61resize(T61* C,T2 a1);
void r61cursor_start(T61* C,T0* a1);
T0* r61twin(T61* C);
T0* r61new_cursor(T61* C);
void r61put_last(T61* C,T0* a1);
T6 r61cursor_off(T0* a1);
T6 r445se_assigned_from(T0* a1);
T6 r445conforms_to(T445* C,T0* a1);
T6 r445test(T0* a1,T0* a2);
T0* r445twin(T445* C);
T2 r251new_capacity(T2 a1);
void r251copy(T251* C,T0* a1);
T6 r251extendible(T251* C,T2 a1);
void r251remove_traversing_cursor(T251* C,T0* a1);
void r251move_all_cursors_after(T251* C);
void r251add_traversing_cursor(T251* C,T0* a1);
T6 r251se_assigned_from(T0* a1);
T0* r251clone(T0* a1);
T6 r251cursor_before(T0* a1);
void r251make(T251* C,T2 a1);
T6 r251cursor_after(T0* a1);
T6 r251conforms_to(T251* C,T0* a1);
void r251resize(T251* C,T2 a1);
T0* r251twin(T251* C);
void r251force_last(T251* C,T0* a1);
T0* r251new_cursor(T251* C);
T6 r251cursor_off(T0* a1);
T6 r230se_assigned_from(T0* a1);
T0* r230make(T2 a1);
T6 r230conforms_to(T230* C,T0* a1);
T0* r230resize(T0* a1,T2 a2);
T0* r230twin(T230* C);
void r421copy(T421* C,T0* a1);
T0* r421item(T421* C);
T6 r421se_assigned_from(T0* a1);
T6 r421after(T421* C);
void r421make(T421* C,T0* a1);
T6 r421off(T421* C);
T6 r421conforms_to(T421* C,T0* a1);
T0* r421twin(T421* C);
void r392copy(T392* C,T0* a1);
T6 r392se_assigned_from(T0* a1);
T6 r392off(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
T6 r354se_assigned_from(T0* a1);
T0* r354make(T2 a1);
T6 r354conforms_to(T354* C,T0* a1);
T0* r354resize(T0* a1,T2 a2);
T0* r354twin(T354* C);
void r189copy(T189* C,T0* a1);
T6 r189se_assigned_from(T0* a1);
T6 r189off(T189* C);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189twin(T189* C);
T6 r494se_assigned_from(T0* a1);
T6 r494conforms_to(T494* C,T0* a1);
T0* r494twin(T494* C);
T6 r160se_assigned_from(T0* a1);
void r160make(T160* C,T0* a1,T0* a2);
T6 r160conforms_to(T160* C,T0* a1);
T0* r160twin(T160* C);
T6 r340se_assigned_from(T0* a1);
T6 r340conforms_to(T340* C,T0* a1);
T6 r340test(T0* a1,T0* a2);
T0* r340twin(T340* C);
void r321copy(T321* C,T0* a1);
void r321set(T321* C,T0* a1,T6 a2,T6 a3);
T6 r321se_assigned_from(T0* a1);
T6 r321is_first(T321* C);
T6 r321is_last(T321* C);
void r321make(T321* C,T0* a1);
T6 r321conforms_to(T321* C,T0* a1);
void r321set_after(T321* C);
T0* r321twin(T321* C);
void r238copy(T238* C,T0* a1);
T0* r238item(T238* C);
T6 r238se_assigned_from(T0* a1);
T6 r238after(T238* C);
T6 r238off(T238* C);
T6 r238conforms_to(T238* C,T0* a1);
T0* r238twin(T238* C);
void r300copy(T300* C,T0* a1);
void r300remove_traversing_cursor(T300* C,T0* a1);
void r300move_all_cursors_after(T300* C);
void r300add_traversing_cursor(T300* C,T0* a1);
T6 r300se_assigned_from(T0* a1);
T0* r300clone(T0* a1);
T6 r300cursor_before(T0* a1);
void r300make(T300* C,T2 a1);
T6 r300cursor_after(T0* a1);
T6 r300conforms_to(T300* C,T0* a1);
T0* r300twin(T300* C);
T0* r300new_cursor(T300* C);
void r300put_last(T300* C,T0* a1);
T6 r300is_full(T300* C);
T6 r300cursor_off(T0* a1);
T6 r223se_assigned_from(T0* a1);
T6 r223conforms_to(T223* C,T0* a1);
T6 r223less_than(T0* a1,T0* a2);
T0* r223twin(T223* C);
void r280copy(T280* C,T0* a1);
T6 r280se_assigned_from(T0* a1);
void r280make(T280* C,T0* a1);
T6 r280off(T280* C);
T6 r280conforms_to(T280* C,T0* a1);
T0* r280twin(T280* C);
void r157copy(T157* C,T0* a1);
void r157set(T157* C,T0* a1,T6 a2,T6 a3);
T6 r157se_assigned_from(T0* a1);
void r157make(T157* C,T0* a1);
T6 r157conforms_to(T157* C,T0* a1);
void r157set_after(T157* C);
T0* r157twin(T157* C);
void r442copy(T442* C,T0* a1);
T6 r442se_assigned_from(T0* a1);
T6 r442off(T442* C);
T6 r442conforms_to(T442* C,T0* a1);
T0* r442twin(T442* C);
void r351copy(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
T6 r351off(T351* C);
T6 r351conforms_to(T351* C,T0* a1);
T0* r351twin(T351* C);
T2 r84new_capacity(T2 a1);
void r84copy(T84* C,T0* a1);
T6 r84extendible(T84* C,T2 a1);
void r84append_last(T84* C,T0* a1);
void r84move_cursors_right(T84* C,T2 a1,T2 a2);
T0* r84last(T84* C);
void r84put(T84* C,T0* a1,T2 a2);
T0* r84cursor_item(T84* C,T0* a1);
T6 r84is_equal(T84* C,T0* a1);
void r84remove_traversing_cursor(T84* C,T0* a1);
void r84move_all_cursors_after(T84* C);
void r84add_traversing_cursor(T84* C,T0* a1);
T6 r84se_assigned_from(T0* a1);
T0* r84clone(T0* a1);
T6 r84cursor_before(T0* a1);
T6 r84same_type(T84* C,T0* a1);
void r84make(T84* C,T2 a1);
T6 r84cursor_after(T0* a1);
T6 r84conforms_to(T84* C,T0* a1);
T6 r84has(T84* C,T0* a1);
void r84move_right(T84* C,T2 a1,T2 a2);
void r84cursor_forth(T84* C,T0* a1);
void r84resize(T84* C,T2 a1);
void r84cursor_start(T84* C,T0* a1);
T0* r84twin(T84* C);
void r84force_last(T84* C,T0* a1);
T0* r84new_cursor(T84* C);
void r84extend_last(T84* C,T0* a1);
void r84put_last(T84* C,T0* a1);
T6 r84cursor_off(T0* a1);
T6 r217se_assigned_from(T0* a1);
T6 r217conforms_to(T217* C,T0* a1);
T6 r217less_than(T0* a1,T0* a2);
T0* r217twin(T217* C);
T6 r192se_assigned_from(T0* a1);
T0* r192make(T2 a1);
T6 r192conforms_to(T192* C,T0* a1);
T0* r192resize(T0* a1,T2 a2);
T0* r192twin(T192* C);
T6 r295se_assigned_from(T0* a1);
T6 r295conforms_to(T295* C,T0* a1);
T6 r295test(T0* a1,T0* a2);
T0* r295twin(T295* C);
T6 r216se_assigned_from(T0* a1);
T6 r216conforms_to(T216* C,T0* a1);
T0* r216twin(T216* C);
T6 r243se_assigned_from(T0* a1);
T0* r243make(T2 a1);
T6 r243conforms_to(T243* C,T0* a1);
T0* r243resize(T0* a1,T2 a2);
T0* r243twin(T243* C);
T2 r397new_capacity(T2 a1);
void r397copy(T397* C,T0* a1);
void r397force(T397* C,T0* a1,T0* a2);
void r397make_clashes(T397* C,T2 a1);
void r397search_position(T397* C,T0* a1);
void r397remove_traversing_cursor(T397* C,T0* a1);
void r397clone_slots(T397* C);
extern T0*oBC258FIXED_INTEGER_ARRAY_;
void r397keys_resize(T397* C,T2 a1);
void r397clone_clashes(T397* C);
T0* r397item(T397* C,T0* a1);
void r397move_all_cursors_after(T397* C);
void r397make_items(T397* C,T2 a1);
void r397add_traversing_cursor(T397* C,T0* a1);
T6 r397se_assigned_from(T0* a1);
T0* r397clone(T0* a1);
void r397make(T397* C,T2 a1);
void r397clone_items(T397* C);
T6 r397conforms_to(T397* C,T0* a1);
T6 r397has(T397* C,T0* a1);
void r397make_keys(T397* C,T2 a1);
T2 r397hash_position(T397* C,T0* a1);
void r397items_resize(T397* C,T2 a1);
void r397clone_keys(T397* C);
void r397make_with_equality_testers(T397* C,T2 a1,T0* a2,T0* a3);
void r397resize(T397* C,T2 a1);
void r397clashes_resize(T397* C,T2 a1);
void r397slots_resize(T397* C,T2 a1);
T0* r397twin(T397* C);
T0* r397new_cursor(T397* C);
void r397make_slots(T397* C,T2 a1);
T2 r397new_modulus(T2 a1);
T6 r397cursor_off(T0* a1);
T6 r386se_assigned_from(T0* a1);
T0* r386make(T2 a1);
T6 r386conforms_to(T386* C,T0* a1);
T0* r386resize(T0* a1,T2 a2);
T0* r386twin(T386* C);
T2 r262new_capacity(T2 a1);
void r262copy(T262* C,T0* a1);
void r262force(T262* C,T0* a1,T2 a2);
void r262make_clashes(T262* C,T2 a1);
void r262search_position(T262* C,T2 a1);
void r262remove_traversing_cursor(T262* C,T0* a1);
void r262clone_slots(T262* C);
void r262keys_resize(T262* C,T2 a1);
void r262clone_clashes(T262* C);
T0* r262item(T262* C,T2 a1);
void r262move_all_cursors_after(T262* C);
void r262make_items(T262* C,T2 a1);
void r262add_traversing_cursor(T262* C,T0* a1);
T6 r262se_assigned_from(T0* a1);
T0* r262clone(T0* a1);
void r262make(T262* C,T2 a1);
void r262clone_items(T262* C);
T6 r262conforms_to(T262* C,T0* a1);
T6 r262has(T262* C,T2 a1);
void r262make_keys(T262* C,T2 a1);
T2 r262hash_position(T262* C,T2 a1);
void r262items_resize(T262* C,T2 a1);
void r262clone_keys(T262* C);
void r262make_with_equality_testers(T262* C,T2 a1,T0* a2,T0* a3);
void r262resize(T262* C,T2 a1);
void r262clashes_resize(T262* C,T2 a1);
void r262slots_resize(T262* C,T2 a1);
T0* r262twin(T262* C);
T0* r262new_cursor(T262* C);
void r262make_slots(T262* C,T2 a1);
T2 r262new_modulus(T2 a1);
T6 r262cursor_off(T0* a1);
void r459subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r459se_assigned_from(T0* a1);
T6 r459conforms_to(T459* C,T0* a1);
void r459sort_with_comparator(T0* a1,T0* a2);
T0* r459twin(T459* C);
void r158copy(T158* C,T0* a1);
void r158remove_traversing_cursor(T158* C,T0* a1);
T0* r158item(T158* C,T2 a1);
void r158move_all_cursors_after(T158* C);
void r158add_traversing_cursor(T158* C,T0* a1);
T6 r158se_assigned_from(T0* a1);
void r158make(T158* C);
T6 r158conforms_to(T158* C,T0* a1);
void r158cursor_forth(T158* C,T0* a1);
void r158cursor_start(T158* C,T0* a1);
T0* r158twin(T158* C);
T0* r158new_cursor(T158* C);
void r158put_last(T158* C,T0* a1);
void r158replace(T158* C,T0* a1,T2 a2);
T6 r158cursor_off(T0* a1);
T6 r471se_assigned_from(T0* a1);
T6 r471conforms_to(T471* C,T0* a1);
T0* r471twin(T471* C);
T6 r401se_assigned_from(T0* a1);
T6 r401conforms_to(T401* C,T0* a1);
T6 r401test(T0* a1,T0* a2);
T0* r401twin(T401* C);
T6 r231se_assigned_from(T0* a1);
T0* r231make(T2 a1);
T6 r231conforms_to(T231* C,T0* a1);
T0* r231resize(T0* a1,T2 a2);
T0* r231twin(T231* C);
T2 r405new_capacity(T2 a1);
void r405copy(T405* C,T0* a1);
void r405force(T405* C,T0* a1,T0* a2);
void r405make_clashes(T405* C,T2 a1);
T0* r405cursor_item(T405* C,T0* a1);
void r405search_position(T405* C,T0* a1);
void r405remove_traversing_cursor(T405* C,T0* a1);
void r405clone_slots(T405* C);
void r405keys_resize(T405* C,T2 a1);
void r405clone_clashes(T405* C);
T0* r405item(T405* C,T0* a1);
void r405move_all_cursors_after(T405* C);
void r405make_items(T405* C,T2 a1);
void r405add_traversing_cursor(T405* C,T0* a1);
T6 r405se_assigned_from(T0* a1);
T0* r405clone(T0* a1);
void r405make(T405* C,T2 a1);
void r405clone_items(T405* C);
T6 r405cursor_after(T0* a1);
T6 r405conforms_to(T405* C,T0* a1);
T6 r405has(T405* C,T0* a1);
void r405make_keys(T405* C,T2 a1);
T2 r405hash_position(T405* C,T0* a1);
void r405cursor_forth(T405* C,T0* a1);
void r405items_resize(T405* C,T2 a1);
void r405clone_keys(T405* C);
void r405make_with_equality_testers(T405* C,T2 a1,T0* a2,T0* a3);
void r405resize(T405* C,T2 a1);
void r405cursor_start(T405* C,T0* a1);
void r405clashes_resize(T405* C,T2 a1);
void r405slots_resize(T405* C,T2 a1);
T0* r405twin(T405* C);
T0* r405new_cursor(T405* C);
void r405make_slots(T405* C,T2 a1);
T2 r405new_modulus(T2 a1);
T6 r405cursor_off(T0* a1);
void r305copy(T305* C,T0* a1);
void r305set(T305* C,T0* a1,T6 a2,T6 a3);
T6 r305se_assigned_from(T0* a1);
void r305make(T305* C,T0* a1);
T6 r305conforms_to(T305* C,T0* a1);
void r305set_after(T305* C);
T0* r305twin(T305* C);
void r93subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r93se_assigned_from(T0* a1);
T6 r93conforms_to(T93* C,T0* a1);
void r93sort_with_comparator(T0* a1,T0* a2);
T0* r93twin(T93* C);
void r82copy(T82* C,T0* a1);
void r82remove_traversing_cursor(T82* C,T0* a1);
T2 r82item(T82* C,T2 a1);
void r82move_all_cursors_after(T82* C);
void r82add_traversing_cursor(T82* C,T0* a1);
T6 r82se_assigned_from(T0* a1);
T0* r82clone(T0* a1);
void r82sort(T82* C,T0* a1);
T6 r82cursor_before(T0* a1);
void r82make(T82* C,T2 a1);
T6 r82cursor_after(T0* a1);
T6 r82conforms_to(T82* C,T0* a1);
T6 r82has(T82* C,T2 a1);
T0* r82twin(T82* C);
T0* r82new_cursor(T82* C);
void r82put_last(T82* C,T2 a1);
T6 r82cursor_off(T0* a1);
void r129copy(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
T6 r129off(T129* C);
T6 r129conforms_to(T129* C,T0* a1);
T0* r129twin(T129* C);
T6 r92se_assigned_from(T0* a1);
T6 r92conforms_to(T92* C,T0* a1);
T6 r92less_than(T2 a1,T2 a2);
T0* r92twin(T92* C);
void r291copy(T291* C,T0* a1);
T6 r291se_assigned_from(T0* a1);
T6 r291after(T291* C);
T2 r291index(T291* C);
T6 r291off(T291* C);
T6 r291conforms_to(T291* C,T0* a1);
T0* r291twin(T291* C);
T6 r197se_assigned_from(T0* a1);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r197Arguments(void);
void r197make(T197* C,T0* a1);
T0* r197message(T197* C,T0* a1);
T6 r197conforms_to(T197* C,T0* a1);
T0* r197twin(T197* C);
T0* r197default_message(T197* C);
extern T0*oBC26STRING_;
void r206build(T206* C);
T2 r206previous_symbol(T206* C,T2 a1);
void r206put(T206* C,T2 a1);
T6 r206se_assigned_from(T0* a1);
T0* r206to_array(T206* C,T2 a1,T2 a2);
void r206make(T206* C,T2 a1,T2 a2);
void r206equiv_add(T206* C,T0* a1);
T6 r206conforms_to(T206* C,T0* a1);
void r206equiv_initialize(T206* C);
T2 r206equivalence_class(T206* C,T2 a1);
void r206add(T206* C,T0* a1);
T6 r206is_representative(T206* C,T2 a1);
T0* r206twin(T206* C);
void r206initialize(T206* C);
void r206equiv_put(T206* C,T2 a1);
extern T0*oBC40ARRAY_FORMATTER_;
void r204build(T204* C);
void r204build_accept_table(T204* C);
void r204print_constants(T204* C,T0* a1);
void r204print_action_routine(T204* C,T0* a1,T0* a2);
void r204initialize_dfa(T204* C,T0* a1,T2 a2,T2 a3);
void r204print_eiffel_array(T204* C,T0* a1,T0* a2,T0* a3);
void r204print_scanner(T204* C,T0* a1);
void r204print_inspect_actions(T204* C,T0* a1);
extern T0*oBC40BOOLEAN_FORMATTER_;
T6 r204se_assigned_from(T0* a1);
T0* r204clone(T0* a1);
void r204print_status_report_routines(T204* C,T0* a1);
void r204print_eiffel_header(T204* C,T0* a1);
void r204print_eiffel_tables(T204* C,T0* a1);
void r204put_start_condition(T204* C,T0* a1);
void r204set_nfa_state_ids(T0* a1);
void r204make(T204* C,T0* a1);
void r204print_transitions(T204* C,T0* a1,T0* a2);
extern T0*oBC39Integer_sorter;
extern int fBC39Integer_sorter;
T0* r204Integer_sorter(void);
void r204build_eof_rules(T204* C,T0* a1,T2 a2,T2 a3);
T6 r204conforms_to(T204* C,T0* a1);
void r204_39Pprint_backing_up_report(T204* C,T0* a1);
void r204print_binary_search_actions(T204* C,T0* a1,T2 a2,T2 a3);
void r204_39Pprint_constants(T204* C,T0* a1);
void r204print_readable_character(T2 a1,T0* a2);
void r204print_action_call(T204* C,T0* a1,T0* a2);
void r204print_rule_line_numbers(T204* C,T0* a1,T0* a2);
void r204print_eiffel_code(T204* C,T0* a1);
void r204print_action_body(T204* C,T0* a1,T0* a2);
extern T0*oBC41INTEGER_;
void r204print_backing_up_report(T204* C,T0* a1);
void r204print_actions(T204* C,T0* a1);
void r204print_build_tables(T204* C,T0* a1);
T0* r204twin(T204* C);
void r204print_eof_actions(T204* C,T0* a1);
void r204build_transitions(T204* C,T0* a1);
void r204initialize(T204* C,T0* a1);
void r204put_eob_state(T204* C);
void r204build_rules(T204* C,T0* a1);
void r204build_nxt_table(T204* C);
T0* r204new_state(T204* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
T0* r450Arguments(void);
void r450make(T450* C,T0* a1,T2 a2,T0* a3);
T0* r450message(T450* C,T0* a1);
T6 r450conforms_to(T450* C,T0* a1);
T0* r450twin(T450* C);
T0* r450default_message(T450* C);
T6 r83is_equal(T83* C,T0* a1);
T6 r83has_transition(T83* C);
T6 r83se_assigned_from(T0* a1);
T6 r83conforms_to(T83* C,T0* a1);
T6 r83_px_60(T83* C,T0* a1);
T6 r83is_accepting_head(T83* C);
T0* r83twin(T83* C);
void r83set_beginning_as_normal(T83* C);
T2 r245new_capacity(T2 a1);
void r245copy(T245* C,T0* a1);
void r245clear_items(T245* C,T2 a1,T2 a2);
T6 r245extendible(T245* C,T2 a1);
void r245move_cursors_right(T245* C,T2 a1,T2 a2);
void r245put(T245* C,T0* a1,T2 a2);
void r245remove_traversing_cursor(T245* C,T0* a1);
T6 r245has_start_condition(T245* C,T0* a1);
void r245move_all_cursors_after(T245* C);
void r245keep_first(T245* C,T2 a1);
void r245make_with_initial(T245* C,T2 a1);
void r245add_traversing_cursor(T245* C,T0* a1);
void r245add_bol_nfa_to_all(T245* C,T0* a1);
T6 r245se_assigned_from(T0* a1);
T0* r245clone(T0* a1);
T0* r245start_condition(T245* C,T0* a1);
T0* r245names(T245* C);
void r245add_nfa_to_non_exclusive(T245* C,T0* a1);
void r245add_bol_nfa_to_non_exclusive(T245* C,T0* a1);
T6 r245cursor_before(T0* a1);
void r245make(T245* C,T2 a1);
T6 r245cursor_after(T0* a1);
T6 r245conforms_to(T245* C,T0* a1);
T6 r245has(T245* C,T0* a1);
void r245append_start_conditions(T245* C,T0* a1);
void r245move_right(T245* C,T2 a1,T2 a2);
void r245add_nfa_to_all(T245* C,T0* a1);
void r245resize(T245* C,T2 a1);
void r245append_non_eof_start_conditions(T245* C,T0* a1);
void r245force_new_start_condition(T245* C,T0* a1,T6 a2);
T0* r245twin(T245* C);
void r245force_last(T245* C,T0* a1);
T0* r245new_cursor(T245* C);
void r245put_last(T245* C,T0* a1);
T6 r245cursor_off(T0* a1);
void r297copy(T297* C,T0* a1);
void r297put(T297* C,T0* a1,T0* a2);
void r297remove_traversing_cursor(T297* C,T0* a1);
void r297move_all_cursors_after(T297* C);
void r297add_traversing_cursor(T297* C,T0* a1);
T6 r297se_assigned_from(T0* a1);
void r297make(T297* C,T0* a1);
T6 r297conforms_to(T297* C,T0* a1);
void r297make_list(T297* C);
void r297cursor_forth(T297* C,T0* a1);
void r297cursor_start(T297* C,T0* a1);
T0* r297twin(T297* C);
T0* r297new_cursor(T297* C);
T0* r297equiv_template(T297* C,T0* a1);
void r297put_last(T297* C,T0* a1);
T6 r297cursor_off(T0* a1);
T6 r199se_assigned_from(T0* a1);
T0* r199Arguments(void);
void r199make(T199* C,T0* a1,T2 a2);
T0* r199message(T199* C,T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199twin(T199* C);
T0* r199default_message(T199* C);
T6 r484se_assigned_from(T0* a1);
T0* r484Arguments(void);
void r484make(T484* C,T0* a1);
T0* r484message(T484* C,T0* a1);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
T0* r484default_message(T484* C);
T6 r418se_assigned_from(T0* a1);
T0* r418Arguments(void);
void r418make(T418* C);
T0* r418message(T418* C,T0* a1);
T6 r418conforms_to(T418* C,T0* a1);
T0* r418twin(T418* C);
T0* r418default_message(T418* C);
T6 r451se_assigned_from(T0* a1);
T0* r451Arguments(void);
void r451make(T451* C,T0* a1,T2 a2);
T0* r451message(T451* C,T0* a1);
T6 r451conforms_to(T451* C,T0* a1);
T0* r451twin(T451* C);
T0* r451default_message(T451* C);
T6 r414se_assigned_from(T0* a1);
T0* r414Arguments(void);
void r414make(T414* C,T0* a1,T2 a2);
T0* r414message(T414* C,T0* a1);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
T0* r414default_message(T414* C);
T6 r461se_assigned_from(T0* a1);
void r461read_character(T461* C);
void r461make(T461* C);
T6 r461conforms_to(T461* C,T0* a1);
T6 r461end_of_file(T461* C);
T0* r461twin(T461* C);
T6 r137se_assigned_from(T0* a1);
void r137report_message(T137* C,T0* a1);
extern T0*oBC20std;
T0* r137message(T0* a1);
T6 r137conforms_to(T137* C,T0* a1);
void r137report_warning(T137* C,T0* a1);
T0* r137twin(T137* C);
void r137make_standard(T137* C);
void r137report_error(T137* C,T0* a1);
void r298set_last_cell(T298* C,T0* a1);
void r298copy(T298* C,T0* a1);
void r298wipe_out(T298* C);
void r298remove_first(T298* C);
void r298put(T298* C,T2 a1,T0* a2,T0* a3);
T6 r298cursor_is_last(T298* C,T0* a1);
void r298remove_traversing_cursor(T298* C,T0* a1);
void r298cursor_go_after(T298* C,T0* a1);
void r298move_all_cursors_after(T298* C);
void r298add_traversing_cursor(T298* C,T0* a1);
T6 r298se_assigned_from(T0* a1);
void r298make(T298* C);
void r298set_first_cell(T298* C,T0* a1);
void r298cursor_go_to(T298* C,T0* a1,T0* a2);
void r298remove_last(T298* C);
T6 r298conforms_to(T298* C,T0* a1);
void r298cursor_forth(T298* C,T0* a1);
void r298move_last_cursors_after(T298* C);
void r298put_first(T298* C,T0* a1);
void r298move_to_front(T298* C,T0* a1);
void r298cursor_start(T298* C,T0* a1);
T0* r298twin(T298* C);
T0* r298new_cursor(T298* C);
T6 r298cursor_is_first(T298* C,T0* a1);
void r298remove_at_cursor(T298* C,T0* a1);
void r298move_all_cursors(T298* C,T0* a1,T0* a2);
T6 r298cursor_off(T0* a1);
T6 r396se_assigned_from(T0* a1);
T0* r396Arguments(void);
void r396make(T396* C,T0* a1,T2 a2);
T0* r396message(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396twin(T396* C);
T0* r396default_message(T396* C);
T6 r420se_assigned_from(T0* a1);
T0* r420Arguments(void);
void r420make(T420* C);
T0* r420message(T420* C,T0* a1);
T6 r420conforms_to(T420* C,T0* a1);
T0* r420twin(T420* C);
T0* r420default_message(T420* C);
T6 r320se_assigned_from(T0* a1);
void r320make(T320* C,T2 a1,T0* a2,T0* a3);
T6 r320conforms_to(T320* C,T0* a1);
T0* r320twin(T320* C);
void r37disconnect(T37* C);
T6 r37se_assigned_from(T0* a1);
extern T0*oBC31tmp_string;
T6 r37conforms_to(T37* C,T0* a1);
void r37connect_to(T37* C,T0* a1);
void r37put_integer(T37* C,T2 a1);
T0* r37twin(T37* C);
void r37put_string(T37* C,T0* a1);
T6 r460se_assigned_from(T0* a1);
T0* r460Arguments(void);
void r460make(T460* C,T0* a1,T2 a2);
T0* r460message(T460* C,T0* a1);
T6 r460conforms_to(T460* C,T0* a1);
T0* r460twin(T460* C);
T0* r460default_message(T460* C);
T2 r337new_capacity(T2 a1);
void r337copy(T337* C,T0* a1);
T6 r337extendible(T337* C,T2 a1);
void r337arrayed_sort(T337* C,T0* a1);
T2 r337last(T337* C);
void r337put(T337* C,T2 a1);
void r337remove_traversing_cursor(T337* C,T0* a1);
void r337move_all_cursors_after(T337* C);
void r337add_traversing_cursor(T337* C,T0* a1);
T6 r337se_assigned_from(T0* a1);
T0* r337clone(T0* a1);
void r337sort(T337* C);
T6 r337arrayed_has(T337* C,T2 a1);
T6 r337cursor_before(T0* a1);
void r337convert(T337* C,T0* a1);
void r337make(T337* C,T2 a1);
T6 r337cursor_after(T0* a1);
extern T0*oBC337sorter;
extern int fBC337sorter;
T0* r337sorter(void);
T6 r337conforms_to(T337* C,T0* a1);
T6 r337has(T337* C,T2 a1);
void r337resize(T337* C,T2 a1);
T0* r337twin(T337* C);
void r337force_last(T337* C,T2 a1);
T0* r337new_cursor(T337* C);
void r337put_last(T337* C,T2 a1);
T6 r337cursor_off(T0* a1);
T6 r415se_assigned_from(T0* a1);
T0* r415Arguments(void);
void r415make(T415* C,T0* a1,T2 a2);
T0* r415message(T415* C,T0* a1);
T6 r415conforms_to(T415* C,T0* a1);
T0* r415twin(T415* C);
T0* r415default_message(T415* C);
T6 r404se_assigned_from(T0* a1);
T0* r404Arguments(void);
void r404make(T404* C,T0* a1,T2 a2,T0* a3);
T0* r404message(T404* C,T0* a1);
T6 r404conforms_to(T404* C,T0* a1);
T0* r404twin(T404* C);
T0* r404default_message(T404* C);
T6 r395se_assigned_from(T0* a1);
T0* r395Arguments(void);
void r395make(T395* C,T0* a1,T2 a2,T0* a3);
T0* r395message(T395* C,T0* a1);
T6 r395conforms_to(T395* C,T0* a1);
T0* r395twin(T395* C);
T0* r395default_message(T395* C);
void r108copy(T108* C,T0* a1);
T6 r108se_assigned_from(T0* a1);
T0* r108clone(T0* a1);
T0* r108_ix_12443124(T108* C);
T0* r108_px_124123n125124(T108* C,T2 a1);
void r108make_symbol(T108* C,T2 a1,T6 a2);
T0* r108_px_38(T108* C,T0* a1);
T6 r108conforms_to(T108* C,T0* a1);
T0* r108bounded_iteration(T108* C,T2 a1,T2 a2);
T0* r108_px_124(T108* C,T0* a1);
T0* r108_ix_12442124(T108* C);
T0* r108twin(T108* C);
void r108make_epsilon(T108* C,T6 a1);
T0* r108_px_124123n44125124(T108* C,T2 a1);
T0* r108_ix_12463124(T108* C);
void r108make_symbol_class(T108* C,T0* a1,T6 a2);
T6 r244se_assigned_from(T0* a1);
void r244out_in_tagged_out_memory(T244* C);
T6 r244conforms_to(T244* C,T0* a1);
T0* r244twin(T244* C);
void r25read_options(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25report_separated_flag_error(T25* C,T0* a1);
extern T0*oBC19Exceptions;
void r25report_usage_message(T25* C);
T0* r25Arguments(void);
void r25report_unknown_flag_error(T25* C,T0* a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25report_version_number(T25* C);
T0* r25twin(T25* C);
extern T0*oBC25Usage_message;
extern int fBC25Usage_message;
T0* r25Usage_message(void);
void r25report_usage_error(T25* C);
T6 r483se_assigned_from(T0* a1);
T0* r483Arguments(void);
void r483make(T483* C,T0* a1);
T0* r483message(T483* C,T0* a1);
T6 r483conforms_to(T483* C,T0* a1);
T0* r483twin(T483* C);
T0* r483default_message(T483* C);
T6 r394se_assigned_from(T0* a1);
T0* r394Arguments(void);
void r394make(T394* C,T0* a1,T2 a2);
T0* r394message(T394* C,T0* a1);
T6 r394conforms_to(T394* C,T0* a1);
T0* r394twin(T394* C);
T0* r394default_message(T394* C);
T6 r34se_assigned_from(T0* a1);
void r34make(T34* C);
T6 r34conforms_to(T34* C,T0* a1);
T0* r34twin(T34* C);
void r34create_equiv_classes(T34* C);
T6 r446se_assigned_from(T0* a1);
T0* r446Arguments(void);
void r446make(T446* C,T0* a1,T2 a2,T0* a3);
T0* r446message(T446* C,T0* a1);
T6 r446conforms_to(T446* C,T0* a1);
T0* r446twin(T446* C);
T0* r446default_message(T446* C);
T6 r455se_assigned_from(T0* a1);
T0* r455Arguments(void);
void r455make(T455* C,T0* a1,T2 a2);
T0* r455message(T455* C,T0* a1);
T6 r455conforms_to(T455* C,T0* a1);
T0* r455twin(T455* C);
T0* r455default_message(T455* C);
T6 r28se_assigned_from(T0* a1);
T0* r28Arguments(void);
void r28make(T28* C,T0* a1);
T0* r28message(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
T0* r28twin(T28* C);
T0* r28default_message(T28* C);
T6 r485se_assigned_from(T0* a1);
T0* r485Arguments(void);
void r485make(T485* C,T0* a1);
T0* r485message(T485* C,T0* a1);
T6 r485conforms_to(T485* C,T0* a1);
T0* r485twin(T485* C);
T0* r485default_message(T485* C);
T6 r419se_assigned_from(T0* a1);
T0* r419Arguments(void);
void r419make(T419* C);
T0* r419message(T419* C,T0* a1);
T6 r419conforms_to(T419* C,T0* a1);
T0* r419twin(T419* C);
T0* r419default_message(T419* C);
T6 r246is_equal(T246* C,T0* a1);
T6 r246se_assigned_from(T0* a1);
void r246make(T246* C,T0* a1,T2 a2,T6 a3);
T6 r246conforms_to(T246* C,T0* a1);
T0* r246twin(T246* C);
T6 r447se_assigned_from(T0* a1);
T0* r447Arguments(void);
void r447make(T447* C,T0* a1,T2 a2,T0* a3);
T0* r447message(T447* C,T0* a1);
T6 r447conforms_to(T447* C,T0* a1);
T0* r447twin(T447* C);
T0* r447default_message(T447* C);
T6 r413se_assigned_from(T0* a1);
T0* r413Arguments(void);
void r413make(T413* C,T0* a1,T2 a2,T0* a3);
T0* r413message(T413* C,T0* a1);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413twin(T413* C);
T0* r413default_message(T413* C);
T6 r486se_assigned_from(T0* a1);
T0* r486Arguments(void);
void r486make(T486* C,T0* a1);
T0* r486message(T486* C,T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
T0* r486default_message(T486* C);
void r62make_default(T62* C,T2 a1);
T6 r62is_equal(T62* C,T0* a1);
T6 r62se_assigned_from(T0* a1);
T6 r62variable_trail(T62* C);
T6 r62conforms_to(T62* C,T0* a1);
T6 r62_px_60(T62* C,T0* a1);
extern T0*oBC62Dummy_pattern;
extern int fBC62Dummy_pattern;
T0* r62Dummy_pattern(void);
extern T0*oBC62Dummy_action;
extern int fBC62Dummy_action;
T0* r62Dummy_action(void);
T0* r62twin(T62* C);
void r358report_iteration_not_positive_error(T358* C);
void r358report_bad_start_condition_list_error(T358* C);
void r358process_default_rule(T358* C);
void r358yy_do_action(T358* C,T2 a1);
void r358report_unrecognized_directive_error(T358* C);
void r358process_escaped_character(T358* C);
void r358report_bad_character_error(T358* C,T0* a1);
extern T0*oBC358yytable_template;
extern int fBC358yytable_template;
T0* r358yytable_template(void);
void r358make_parser_skeleton(T358* C);
T0* r358append_character_set_to_character_class(T358* C,T2 a1,T2 a2,T0* a3);
void r358process_regexp_or_series(T358* C);
T0* r358append_trail_context_to_regexp(T358* C,T0* a1,T0* a2);
void r358report_undeclared_start_condition_error(T358* C,T0* a1);
void r358report_bad_character_in_brackets_error(T358* C);
void r358process_singleton_dot(T358* C);
T0* r358new_iteration_nfa(T358* C,T0* a1,T2 a2);
T2 r358yy_at_beginning_of_line(T358* C);
void r358report_unrecognized_rule_error(T358* C);
void r358report_start_condition_expected_error(T358* C);
void r358report_bad_iteration_values_error(T358* C);
void r358fatal_error(T0* a1);
T0* r358yytype1(T0* a1);
void r358report_name_defined_twice_error(T358* C,T0* a1);
T2 r358yytype2(T0* a1);
T0* r358yytype3(T0* a1);
void r358process_singleton_empty_string(T358* C);
T0* r358yytype4(T0* a1);
T2 r358start_condition(T358* C);
void r358unread_character(T358* C,T3 a1);
T0* r358new_nfa_from_character(T358* C,T2 a1);
void r358parse_file(T358* C,T0* a1);
void r358parse(T358* C);
void r358check_options(T358* C);
void r358report_missing_quote_error(T358* C);
void r358set_input_buffer(T358* C,T0* a1);
T2 r358yy_translate(T358* C,T2 a1);
extern T0*oBC359yy_ec_template;
extern int fBC359yy_ec_template;
T0* r358yy_ec_template(void);
T0* r358text_substring(T358* C,T2 a1,T2 a2);
void r358yy_execute_action(T358* C,T2 a1);
extern T0*oBC358yytranslate_template;
extern int fBC358yytranslate_template;
T0* r358yytranslate_template(void);
extern T0*oBC366Empty_buffer;
extern int fBC366Empty_buffer;
T0* r358Empty_buffer(void);
void r358report_all_start_conditions_eof_warning(T358* C);
void r358clear_stacks(T358* C);
extern T0*oBC359yy_def_template;
extern int fBC359yy_def_template;
T0* r358yy_def_template(void);
extern T0*oBC367Eof_nfa;
extern int fBC367Eof_nfa;
T0* r358Eof_nfa(void);
void r358report_full_and_meta_equiv_classes_error(T358* C);
T3 r358text_item(T358* C,T2 a1);
void r358yy_load_input_buffer(T358* C);
void r358process_name_definition(T358* C,T0* a1,T0* a2);
extern T0*oBC358yyr1_template;
extern int fBC358yyr1_template;
T0* r358yyr1_template(void);
void r358make_with_buffer(T358* C,T0* a1);
void r358process_singleton_unbounded_iteration(T358* C,T2 a1);
void r358process_rule(T358* C,T0* a1);
void r358process_character(T358* C,T2 a1);
T2 r358yy_null_trans_state(T358* C,T2 a1);
void r358put_back_string(T358* C,T0* a1);
void r358process_singleton_bounded_iteration(T358* C,T2 a1,T2 a2);
T0* r358dot_character_class(T358* C);
void r358report_incomplete_name_definition_error(T358* C);
void r358report_negative_range_in_character_class_error(T358* C);
void r358report_full_and_variable_trailing_context_error(T358* C);
extern T0*oBC359yy_accept_template;
extern int fBC359yy_accept_template;
T0* r358yy_accept_template(void);
void r358read_token(T358* C);
extern T0*oBC358yyr2_template;
extern int fBC358yyr2_template;
T0* r358yyr2_template(void);
void r358report_start_condition_specified_twice_warning(T358* C,T0* a1);
void r358add_new_start_condition(T358* C,T0* a1,T6 a2);
T2 r358yy_previous_state(T358* C);
extern T0*oBC358yypgoto_template;
extern int fBC358yypgoto_template;
T0* r358yypgoto_template(void);
void r358yy_refill_input_buffer(T358* C);
T0* r358yy_fixed_array(T0* a1);
T6 r358conforms_to(T358* C,T0* a1);
extern T0*oBC359yy_meta_template;
extern int fBC359yy_meta_template;
T0* r358yy_meta_template(void);
void r358report_character_out_of_range_error(T358* C,T0* a1);
void r358process_bol_rule(T358* C,T0* a1);
T0* r358new_epsilon_nfa(T358* C);
extern T0*oBC359yy_base_template;
extern int fBC359yy_base_template;
T0* r358yy_base_template(void);
T0* r358append_eol_to_regexp(T358* C,T0* a1);
void r358report_full_and_reject_error(T358* C);
extern T0*oBC22INPUT_STREAM_;
T0* r358twin(T358* C);
T0* r358append_character_to_character_class(T358* C,T2 a1,T0* a2);
T2 r358text_count(T358* C);
T0* r358new_file_buffer(T0* a1);
void r358process_singleton_plus(T358* C);
void r358yy_initialize(T358* C);
void r358push_start_condition(T358* C,T0* a1,T0* a2);
T0* r358text(T358* C);
void r358build_eof_action(T358* C,T0* a1);
void r358report_missing_bracket_error(T358* C);
T0* r358new_symbol_nfa(T358* C,T2 a1);
void r358process_singleton_symbol_class(T358* C,T0* a1);
void r358report_undefined_definition_error(T358* C,T0* a1);
extern T0*oBC359yy_nxt_template;
extern int fBC359yy_nxt_template;
T0* r358yy_nxt_template(void);
void r358report_unrecognized_option_error(T358* C,T0* a1);
void r358yy_set_line_column(T358* C);
void r358yy_build_parser_tables(T358* C);
void r358report_directive_expected_error(T358* C);
void r358process_singleton_string(T358* C,T2 a1);
void r358build_equiv_classes(T358* C);
T0* r358new_symbol_class_nfa(T358* C,T0* a1);
extern T0*oBC365STRING_BUFFER_;
void r358set_action(T358* C,T0* a1);
void r358process_series_singleton(T358* C);
T0* r358new_unbounded_iteration_nfa(T358* C,T0* a1,T2 a2);
void r358yy_set_beginning_of_line(T358* C);
void r358override_options(T358* C);
T0* r358new_bounded_iteration_nfa(T358* C,T0* a1,T2 a2,T2 a3);
void r358process_singleton_optional(T358* C);
void r358report_trailing_context_used_twice_error(T358* C);
void r358report_error(T358* C,T0* a1);
T0* r358append_character_to_string(T358* C,T2 a1,T0* a2);
void r358process_singleton_star(T358* C);
void r358process_singleton_fixed_iteration(T358* C,T2 a1);
extern T0*oBC358yydefact_template;
extern int fBC358yydefact_template;
T0* r358yydefact_template(void);
void r358process_eof_rule(T358* C);
void r358report_multiple_EOF_rules_error(T358* C,T0* a1);
extern T0*oBC359yy_chk_template;
extern int fBC359yy_chk_template;
T0* r358yy_chk_template(void);
T0* r358new_nfa_from_character_class(T358* C,T0* a1);
extern T0*oBC358yycheck_template;
extern int fBC358yycheck_template;
T0* r358yycheck_template(void);
T0* r358new_character_class(T358* C);
T0* r358filename(T358* C);
void r358report_start_condition_declared_twice_error(T358* C,T0* a1);
T0* r358yyfixed_array(T0* a1);
void r358process_singleton_char(T358* C,T2 a1);
extern T0*oBC358yydefgoto_template;
extern int fBC358yydefgoto_template;
T0* r358yydefgoto_template(void);
void r358yy_clear_all(T358* C);
void r358yy_set_content(T358* C,T0* a1);
extern T0*oBC358yypact_template;
extern int fBC358yypact_template;
T0* r358yypact_template(void);
void r358set_start_condition(T358* C,T2 a1);
T6 r358se_assigned_from(T0* a1);
void r358yy_build_tables(T358* C);
void r358make_lex_scanner_from_description(T358* C,T0* a1,T0* a2);
void r358report_bad_start_condition_error(T358* C,T0* a1);
void r358less(T358* C,T2 a1);
void r358report_bad_character_class_error(T358* C);
void r358make_from_description(T358* C,T0* a1,T0* a2);
void r371disconnect(T371* C);
T6 r371se_assigned_from(T0* a1);
void r371read_character(T371* C);
T6 r371conforms_to(T371* C,T0* a1);
T6 r371end_of_input(T371* C);
void r371connect_to(T371* C,T0* a1);
T0* r371twin(T371* C);
T6 r449se_assigned_from(T0* a1);
T0* r449Arguments(void);
void r449make(T449* C,T0* a1,T2 a2);
T0* r449message(T449* C,T0* a1);
T6 r449conforms_to(T449* C,T0* a1);
T0* r449twin(T449* C);
T0* r449default_message(T449* C);
T2 r379count(T379* C);
void r379set_position(T379* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC379lower;
extern int fBC379lower;
T2 r379lower(void);
T6 r379se_assigned_from(T0* a1);
void r379make(T379* C,T0* a1);
T6 r379conforms_to(T379* C,T0* a1);
void r379make_from_buffer(T379* C,T0* a1);
void r379resize(T379* C);
void r379compact_right(T379* C);
T0* r379twin(T379* C);
T6 r456se_assigned_from(T0* a1);
T0* r456Arguments(void);
void r456make(T456* C,T0* a1,T2 a2);
T0* r456message(T456* C,T0* a1);
T6 r456conforms_to(T456* C,T0* a1);
T0* r456twin(T456* C);
T0* r456default_message(T456* C);
T6 r412se_assigned_from(T0* a1);
T0* r412Arguments(void);
void r412make(T412* C,T0* a1,T2 a2,T0* a3);
T0* r412message(T412* C,T0* a1);
T6 r412conforms_to(T412* C,T0* a1);
T0* r412twin(T412* C);
T0* r412default_message(T412* C);
T0* r431new_action(T0* a1);
T6 r431se_assigned_from(T0* a1);
T6 r431conforms_to(T431* C,T0* a1);
T0* r431twin(T431* C);
T6 r448se_assigned_from(T0* a1);
T0* r448Arguments(void);
void r448make(T448* C,T0* a1,T2 a2);
T0* r448message(T448* C,T0* a1);
T6 r448conforms_to(T448* C,T0* a1);
T0* r448twin(T448* C);
T0* r448default_message(T448* C);
T6 r417se_assigned_from(T0* a1);
T0* r417Arguments(void);
void r417make(T417* C,T0* a1,T2 a2,T0* a3);
T0* r417message(T417* C,T0* a1);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417twin(T417* C);
T0* r417default_message(T417* C);
T6 r385se_assigned_from(T0* a1);
T0* r385Arguments(void);
void r385make(T385* C,T0* a1,T2 a2);
T0* r385message(T385* C,T0* a1);
T6 r385conforms_to(T385* C,T0* a1);
T0* r385twin(T385* C);
T0* r385default_message(T385* C);
T6 r356se_assigned_from(T0* a1);
T0* r356Arguments(void);
void r356make(T356* C,T0* a1);
T0* r356message(T356* C,T0* a1);
T6 r356conforms_to(T356* C,T0* a1);
T0* r356twin(T356* C);
T0* r356default_message(T356* C);
T6 r384se_assigned_from(T0* a1);
T0* r384Arguments(void);
void r384make(T384* C,T0* a1,T2 a2);
T0* r384message(T384* C,T0* a1);
T6 r384conforms_to(T384* C,T0* a1);
T0* r384twin(T384* C);
T0* r384default_message(T384* C);
T6 r46is_equal(T46* C,T0* a1);
extern T0*oBC46rule_sorter;
extern int fBC46rule_sorter;
T0* r46rule_sorter(void);
T6 r46se_assigned_from(T0* a1);
extern T0*oBC46bubble_sorter;
extern int fBC46bubble_sorter;
T0* r46bubble_sorter(void);
T6 r46same_type(T46* C,T0* a1);
void r46make(T46* C,T0* a1,T2 a2,T2 a3);
void r46partition(T46* C,T0* a1);
T6 r46conforms_to(T46* C,T0* a1);
T6 r46is_accepting(T46* C);
T6 r46is_accepting_head(T46* C);
T0* r46twin(T46* C);
T0* r46new_state(T46* C,T2 a1);
T6 r387se_assigned_from(T0* a1);
T0* r387Arguments(void);
void r387make(T387* C,T0* a1,T2 a2,T0* a3);
T0* r387message(T387* C,T0* a1);
T6 r387conforms_to(T387* C,T0* a1);
T0* r387twin(T387* C);
T0* r387default_message(T387* C);
void r207build(T207* C);
void r207put(T207* C,T2 a1);
T2 r207upper(T207* C);
T2 r207lower(T207* C);
T6 r207se_assigned_from(T0* a1);
T2 r207capacity(T207* C);
T0* r207to_array(T207* C,T2 a1,T2 a2);
void r207make(T207* C,T2 a1,T2 a2);
T6 r207conforms_to(T207* C,T0* a1);
T2 r207equivalence_class(T207* C,T2 a1);
void r207add(T207* C,T0* a1);
T6 r207is_representative(T207* C,T2 a1);
T0* r207twin(T207* C);
void r207initialize(T207* C);
T6 r198se_assigned_from(T0* a1);
T0* r198Arguments(void);
void r198make(T198* C,T0* a1,T2 a2);
T0* r198message(T198* C,T0* a1);
T6 r198conforms_to(T198* C,T0* a1);
T0* r198twin(T198* C);
T0* r198default_message(T198* C);
void r378fill(T378* C);
void r378compact_left(T378* C);
T2 r378count(T378* C);
void r378set_position(T378* C,T2 a1,T2 a2,T2 a3);
T2 r378lower(void);
T6 r378se_assigned_from(T0* a1);
void r378make_from_string(T378* C,T0* a1);
T6 r378conforms_to(T378* C,T0* a1);
void r378make_from_buffer(T378* C,T0* a1);
void r378resize(T378* C);
void r378compact_right(T378* C);
void r378make_with_size(T378* C,T0* a1,T2 a2);
T0* r378twin(T378* C);
void r378set_file(T378* C,T0* a1);
void r378flush(T378* C);
T6 r146se_assigned_from(T0* a1);
void r146make(T146* C);
T6 r146conforms_to(T146* C,T0* a1);
void r146put_integer(T146* C,T2 a1);
T0* r146twin(T146* C);
void r146put_string(T146* C,T0* a1);
T6 r416se_assigned_from(T0* a1);
T0* r416Arguments(void);
void r416make(T416* C,T0* a1,T2 a2);
T0* r416message(T416* C,T0* a1);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416twin(T416* C);
T0* r416default_message(T416* C);
T6 r381se_assigned_from(T0* a1);
void r381make(T381* C);
T6 r381conforms_to(T381* C,T0* a1);
void r381put_integer(T381* C,T2 a1);
T0* r381twin(T381* C);
void r381put_string(T381* C,T0* a1);
T6 r402se_assigned_from(T0* a1);
T0* r402Arguments(void);
void r402make(T402* C,T0* a1,T2 a2,T0* a3);
T0* r402message(T402* C,T0* a1);
T6 r402conforms_to(T402* C,T0* a1);
T0* r402twin(T402* C);
T0* r402default_message(T402* C);
T6 r296se_assigned_from(T0* a1);
void r296make(T296* C,T2 a1,T2 a2,T2 a3,T2 a4);
T6 r296conforms_to(T296* C,T0* a1);
T0* r296twin(T296* C);
void r200put_entry(T200* C,T2 a1,T2 a2,T0* a3);
void r200build(T200* C);
void r200put_singletons(T200* C);
void r200print_constants(T200* C,T0* a1);
void r200print_action_routine(T200* C,T0* a1,T0* a2);
void r200initialize_dfa(T200* C,T0* a1,T2 a2,T2 a3);
T0* r200dangerous_variable_trail_rules(T200* C);
void r200build_base_def_tables(T200* C);
void r200build_accept_tables(T200* C);
void r200print_eiffel_array(T200* C,T0* a1,T0* a2,T0* a3);
void r200print_scanner(T200* C,T0* a1);
void r200put_jam_state(T200* C);
void r200print_inspect_actions(T200* C,T0* a1);
extern T0*oBC200Rule_sorter;
extern int fBC200Rule_sorter;
T0* r200Rule_sorter(void);
T6 r200se_assigned_from(T0* a1);
T0* r200clone(T0* a1);
void r200print_status_report_routines(T200* C,T0* a1);
void r200print_eiffel_header(T200* C,T0* a1);
void r200print_eiffel_tables(T200* C,T0* a1);
void r200put_start_condition(T200* C,T0* a1);
void r200put_templates(T200* C);
void r200set_nfa_state_ids(T0* a1);
void r200make(T200* C,T0* a1);
void r200print_transitions(T200* C,T0* a1,T0* a2);
T0* r200Integer_sorter(void);
void r200build_eof_rules(T200* C,T0* a1,T2 a2,T2 a3);
T6 r200conforms_to(T200* C,T0* a1);
void r200_39Pprint_backing_up_report(T200* C,T0* a1);
void r200print_binary_search_actions(T200* C,T0* a1,T2 a2,T2 a3);
void r200_39Pprint_constants(T200* C,T0* a1);
void r200build_nxt_chk_tables(T200* C);
void r200print_readable_character(T2 a1,T0* a2);
void r200print_action_call(T200* C,T0* a1,T0* a2);
void r200print_rule_line_numbers(T200* C,T0* a1,T0* a2);
void r200print_eiffel_code(T200* C,T0* a1);
void r200resize(T200* C,T2 a1);
void r200put_singleton(T200* C,T0* a1);
void r200print_action_body(T200* C,T0* a1,T0* a2);
void r200put_state(T200* C,T0* a1);
void r200print_backing_up_report(T200* C,T0* a1);
void r200print_actions(T200* C,T0* a1);
extern T0*oBC200null_state;
extern int fBC200null_state;
T0* r200null_state(T200* C);
void r200print_build_tables(T200* C,T0* a1);
T0* r200twin(T200* C);
void r200print_eof_actions(T200* C,T0* a1);
void r200build_transitions(T200* C,T0* a1);
void r200initialize(T200* C,T0* a1);
void r200put_eob_state(T200* C);
void r200build_rules(T200* C,T0* a1);
T0* r200new_state(T200* C,T0* a1);
T6 r377se_assigned_from(T0* a1);
T0* r377Arguments(void);
void r377make(T377* C,T0* a1,T2 a2);
T0* r377message(T377* C,T0* a1);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
T0* r377default_message(T377* C);
T6 r457se_assigned_from(T0* a1);
T0* r457Arguments(void);
void r457make(T457* C,T0* a1,T2 a2);
T0* r457message(T457* C,T0* a1);
T6 r457conforms_to(T457* C,T0* a1);
T0* r457twin(T457* C);
T0* r457default_message(T457* C);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r142command_arguments(void);
T6 r142se_assigned_from(T0* a1);
T6 r142conforms_to(T142* C,T0* a1);
T0* r142twin(T142* C);
T0* r142argument(T2 a1);
T6 r403se_assigned_from(T0* a1);
T0* r403Arguments(void);
void r403make(T403* C,T0* a1,T2 a2);
T0* r403message(T403* C,T0* a1);
T6 r403conforms_to(T403* C,T0* a1);
T0* r403twin(T403* C);
T0* r403default_message(T403* C);
void r17build_dfa(T17* C);
void r17print_scanner(T17* C);
T6 r17se_assigned_from(T0* a1);
void r17override_description(T17* C,T0* a1);
T0* r17Arguments(void);
void r17parse_input_file(T17* C);
T6 r17conforms_to(T17* C,T0* a1);
void r17execute(T17* C);
void r17print_backing_up_report(T17* C);
extern T0*oBC21OUTPUT_STREAM_;
T0* r17twin(T17* C);
extern T0*oBC145error;
extern int fBC145error;
T0* r145error(void);
T6 r145se_assigned_from(T0* a1);
extern T0*oBC145input;
extern int fBC145input;
T0* r145input(void);
extern T0*oBC145output;
extern int fBC145output;
T0* r145output(void);
T6 r145conforms_to(T145* C,T0* a1);
T0* r145twin(T145* C);
T6 r135se_assigned_from(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
T0* r135twin(T135* C);
T6 r48se_assigned_from(T0* a1);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
void r152put_eiffel_boolean(T0* a1,T6 a2);
T6 r152se_assigned_from(T0* a1);
T6 r152conforms_to(T152* C,T0* a1);
T0* r152twin(T152* C);
T6 r38se_assigned_from(T0* a1);
T6 r38conforms_to(T38* C,T0* a1);
T0* r38twin(T38* C);
T6 r496se_assigned_from(T0* a1);
T6 r496conforms_to(T496* C,T0* a1);
T0* r496twin(T496* C);
void r496put_integer_array(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r74se_assigned_from(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
T3 r74to_character(T2 a1);
T0* r74twin(T74* C);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T0* r370name(T0* a1);
T0* r370make_file_open_read(T0* a1);
T6 r370se_assigned_from(T0* a1);
T6 r370is_open_read(T0* a1);
void r370close(T0* a1);
T6 r370conforms_to(T370* C,T0* a1);
T6 r370end_of_input(T0* a1);
T2 r370read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r370twin(T370* C);
T0* r36make_file_open_write(T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36is_open_write(T0* a1);
void r36close(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r138se_assigned_from(T0* a1);
T0* r138clone(T0* a1);
T6 r138is_integer(T0* a1);
T0* r138make(T2 a1);
T6 r138conforms_to(T138* C,T0* a1);
T0* r138to_lower(T0* a1);
T0* r138twin(T138* C);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T0* r383substring(T0* a1,T2 a2,T2 a3);
T6 r383se_assigned_from(T0* a1);
void r383move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r383make(T2 a1);
void r383copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r383conforms_to(T383* C,T0* a1);
void r383move_right(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r383resize(T0* a1,T2 a2);
T2 r383copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r383twin(T383* C);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 497
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms199_241860809;
extern T7*ms39_334825271;
extern T7*ms39_1528099687;
extern T7*ms200_702565058;
extern T7*ms200_884539879;
extern T7*ms39_1405456320;
extern T7*ms39_218897823;
extern T7*ms39_561078938;
extern T7*ms39_1770878471;
extern T7*ms200_1597414695;
extern T7*ms39_1949163341;
extern T7*ms200_1263543347;
extern T7*ms451_280487577;
extern T7*ms39_1714741745;
extern T7*ms200_141689364;
extern T7*ms28_1606053737;
extern T7*ms204_1962892365;
extern T7*ms363_195717202;
extern T7*ms449_1308094803;
extern T7*ms39_15885;
extern T7*ms39_2100040055;
extern T7*ms39_2002723563;
extern T7*ms200_180125500;
extern T7*ms39_59;
extern T7*ms39_128693287;
extern T7*ms39_215aa;
extern T7*ms200_130177333;
extern T7*ms420_1531431095;
extern T7*ms39_1875524661;
extern T7*ms39_849303166;
extern T7*ms39_26430;
extern T7*ms403_1257878695;
extern T7*ms17_80325;
extern T7*ms152_18036;
extern T7*ms368_1338477769;
extern T7*ms39_252aa;
extern T7*ms394_479216981;
extern T7*ms204_1106740939;
extern T7*ms39_1174;
extern T7*ms39_448760988;
extern T7*ms39_1488;
extern T7*ms200_1570963371;
extern T7*ms483_1515383187;
extern T7*ms39_215a;
extern T7*ms381_447584;
extern T7*ms39_252a;
extern T7*ms39_80015a;
extern T7*ms359_263;
extern T7*ms39_366040531;
extern T7*ms204_1570963371;
extern T7*ms204_2024247907;
extern T7*ms39_49635a;
extern T7*ms39_114538697;
extern T7*ms39_383710134;
extern T7*ms39_188585aa;
extern T7*ms39_41065;
extern T7*ms204_1702600050;
extern T7*ms384_1428321107;
extern T7*ms39_1155882265;
extern T7*ms39_148721510;
extern T7*ms204_845885408;
extern T7*ms25_184927;
extern T7*ms39_921529502;
extern T7*ms39_210387;
extern T7*ms39_951890;
extern T7*ms418_1686894687;
extern T7*ms197_1868436966;
extern T7*ms39_582962468;
extern T7*ms39_205885;
extern T7*ms368_1338477769a;
extern T7*ms200_712330683;
extern T7*ms39_1293320505;
extern T7*ms39_1152048798;
extern T7*ms39_429557063;
extern T7*ms412_645257649;
extern T7*ms200_1345992549;
extern T7*ms414_19730319;
extern T7*ms39_48453175;
extern T7*ms200_1340607660;
extern T7*ms39_1323810826;
extern T7*ms39_666539329;
extern T7*ms39_15885a;
extern T7*ms39_1323810826a;
extern T7*ms200_1672785268;
extern T7*ms204_1340607660;
extern T7*ms39_252aaaa;
extern T7*ms39_0;
extern T7*ms200_2061158860;
extern T7*ms200_446611960;
extern T7*ms447_1692988587;
extern T7*ms39_1470924402;
extern T7*ms367_1120185579;
extern T7*ms39_215;
extern T7*ms200_49635;
extern T7*ms39_252;
extern T7*ms39_279;
extern T7*ms39_49635;
extern T7*ms39_288;
extern T7*ms62_0;
extern T7*ms39_1234045785;
extern T7*ms39_475;
extern T7*ms39_562;
extern T7*ms39_558;
extern T7*ms39_570;
extern T7*ms39_574;
extern T7*ms39_576;
extern T7*ms25_1246085759;
extern T7*ms39_552391951;
extern T7*ms39_1191529;
extern T7*ms385_1711904633;
extern T7*ms200_893574664;
extern T7*ms370_1338085634;
extern T7*ms39_870998686;
extern T7*ms200_461445809;
extern T7*ms416_1086870388;
extern T7*ms39_970411610;
extern T7*ms460_823229232;
extern T7*ms39_1159286909;
extern T7*ms486_1633989132;
extern T7*ms496_192;
extern T7*ms39_2055948023;
extern T7*ms367_46;
extern T7*ms496_279;
extern T7*ms485_1103229751;
extern T7*ms356_988446515;
extern T7*ms362_449403;
extern T7*ms39_1853120213;
extern T7*ms25_270;
extern T7*ms25_322;
extern T7*ms25_336;
extern T7*ms39_59251;
extern T7*ms417_215272365;
extern T7*ms496_992;
extern T7*ms39_41163523;
extern T7*ms39_1002524094;
extern T7*ms204_664339;
extern T7*ms419_1520688928;
extern T7*ms200_343441637;
extern T7*ms450_792132570;
extern T7*ms39_1928848854;
extern T7*ms200_1336983359;
extern T7*ms39_24682767;
extern T7*ms39_1365195210;
extern T7*ms39_23224537a;
extern T7*ms39_432239777;
extern T7*ms377_1449702436;
extern T7*ms496_4992;
extern T7*ms461_89510;
extern T7*ms204_49635;
extern T7*ms404_135699103;
extern T7*ms17_1338085634;
extern T7*ms204_884539879;
extern T7*ms396_1203377682;
extern T7*ms245_1442726;
extern T7*ms39_3409010;
extern T7*ms204_141689364;
extern T7*ms39_995962185;
extern T7*ms39_80015;
extern T7*ms39_1045100047;
extern T7*ms27_1529;
extern T7*ms39_188585;
extern T7*ms395_927760026;
extern T7*ms39_205885a;
extern T7*ms204_180125500;
extern T7*ms455_596994766;
extern T7*ms457_465236511;
extern T7*ms413_178164711;
extern T7*ms415_111876583;
extern T7*ms39_898014052;
extern T7*ms200_713264122;
extern T7*ms200_225390537;
extern T7*ms200_447092637;
extern T7*ms402_1062665526;
extern T7*ms39_23224537;
extern T7*ms39_582307191;
extern T7*ms456_1753741984;
extern T7*ms448_1083157669;
extern T7*ms39_90482;
extern T7*ms387_155215853;
extern T7*ms446_1231359120;
extern T7*ms39_1932782428;
extern T7*ms146_447851;
extern T7*ms152_79251;
extern T7*ms200_1820199892;
extern T7*ms39_1200405974;
extern T7*ms39_849814343;
extern T7*ms367_1680939865;
extern T7*ms198_679509108;
extern T7*ms39_327172515;
extern T7*ms204_3319784;
extern T7*ms204_1820199892;
extern T7*ms39_793443823;
extern T7*ms39_90482a;
extern T7*ms25_23342040;
extern T7*ms39_2119110467;
extern T7*ms358_0;
extern T7*ms484_1158552108;
extern T7*ms370_0;
extern T7*ms366_0;
extern T7*ms39_188585a;
extern T7*ms39_1737220;
extern T7*ms39_1511986194;
extern T7*ms39_304427814;
extern T7*ms39_1389369289;
extern T7*ms200_96316002;
extern T7*ms39_1627697022;
extern T7*ms200_1413502558;
extern T7*ms359_1173251759;
extern T7*ms39_252aaa;
extern T7*ms200_1285397804;
extern T7*ms39_188585aaa;
extern T7*ms204_1413502558;
extern T7*ms39_749279690;
extern T7*ms200_140046481;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void*se_ma79(int argc,...);
T2 X194count(T0*C);
T0* X194item(T0*C,T2 a1);
T6 X194is_empty(T0*C);
void X194replace(T0*C,T0* a1,T2 a2);
void X207put(T0*C,T2 a1);
T0* X207to_array(T0*C,T2 a1,T2 a2);
void X207add(T0*C,T0* a1);
void X82sort(T0*C,T0* a1);
T6 X82has(T0*C,T2 a1);
T6 X31is_connected(T0*C);
void X31put_integer(T0*C,T2 a1);
void X31put_character(T0*C,T3 a1);
void X31put_string(T0*C,T0* a1);
void X96sort(T0*C,T0* a1);
T0* X10twin(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X373clear_all(T0*C,T0* a1);
T0* X373make(T0*C,T2 a1);
T0* X373resize(T0*C,T0* a1,T2 a2);
void X379fill(T0*C);
void X39print_scanner(T0*C,T0* a1);
void X39print_backing_up_report(T0*C,T0* a1);
T2 X468count(T0*C);
T2 X468item(T0*C,T2 a1);
T2 X468lower(T0*C);
T6 X214labeled(T0*C,T2 a1);
void X214record(T0*C,T0* a1);
void X372put(T0*C,T0* a1,T2 a2);
T0* X372item(T0*C,T2 a1);
void X372set_all_with(T0*C,T0* a1);
void X372resize(T0*C,T2 a1);
T6 X357is_connected(T0*C);
void X357read_character(T0*C);
T6 X357end_of_input(T0*C);
T3 X357last_character(T0*C);
T2 X99item(T0*C,T2 a1);
T6 X99is_empty(T0*C);
void X99replace(T0*C,T2 a1,T2 a2);
T0* X29default_message(T0*C);
T0* T2toT48(T2 source);
T2 T48toT2(T0* source);

#ifdef __cplusplus
}
#endif
