#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S561 T561;
typedef struct S437 T437;
typedef struct S120 T120;
typedef struct S436 T436;
typedef struct S524 T524;
typedef struct S129 T129;
typedef struct S322 T322;
typedef struct S617 T617;
typedef struct S337 T337;
typedef struct S164 T164;
typedef struct S201 T201;
typedef struct S487 T487;
typedef struct S190 T190;
typedef struct S293 T293;
typedef struct S547 T547;
typedef struct S267 T267;
typedef struct S523 T523;
typedef struct S163 T163;
typedef struct S121 T121;
typedef struct S614 T614;
typedef struct S270 T270;
typedef struct S465 T465;
typedef struct S171 T171;
typedef struct S607 T607;
typedef struct S613 T613;
typedef struct S157 T157;
typedef struct S578 T578;
typedef struct S72 T72;
typedef struct S301 T301;
typedef struct S484 T484;
typedef struct S535 T535;
typedef struct S300 T300;
typedef struct S155 T155;
typedef struct S134 T134;
typedef struct S557 T557;
typedef struct S510 T510;
typedef struct S371 T371;
typedef struct S618 T618;
typedef struct S117 T117;
typedef struct S248 T248;
typedef struct S528 T528;
typedef struct S584 T584;
typedef struct S62 T62;
typedef struct S136 T136;
typedef struct S45 T45;
typedef struct S414 T414;
typedef struct S518 T518;
typedef struct S199 T199;
typedef struct S420 T420;
typedef struct S622 T622;
typedef struct S118 T118;
typedef struct S42 T42;
typedef struct S616 T616;
typedef struct S391 T391;
typedef struct S286 T286;
typedef struct S75 T75;
typedef struct S18 T18;
typedef struct S485 T485;
typedef struct S387 T387;
typedef struct S151 T151;
typedef struct S70 T70;
typedef struct S123 T123;
typedef struct S198 T198;
typedef struct S582 T582;
typedef struct S593 T593;
typedef struct S429 T429;
typedef struct S583 T583;
typedef struct S525 T525;
typedef struct S273 T273;
typedef struct S74 T74;
typedef struct S150 T150;
typedef struct S200 T200;
typedef struct S496 T496;
typedef struct S573 T573;
typedef struct S596 T596;
typedef struct S377 T377;
typedef struct S325 T325;
typedef struct S362 T362;
typedef struct S311 T311;
typedef struct S612 T612;
typedef struct S526 T526;
typedef struct S166 T166;
typedef struct S185 T185;
typedef struct S271 T271;
typedef struct S237 T237;
typedef struct S37 T37;
typedef struct S550 T550;
typedef struct S588 T588;
typedef struct S354 T354;
typedef struct S161 T161;
typedef struct S558 T558;
typedef struct S397 T397;
typedef struct S34 T34;
typedef struct S33 T33;
typedef struct S81 T81;
typedef struct S539 T539;
typedef struct S234 T234;
typedef struct S530 T530;
typedef struct S565 T565;
typedef struct S626 T626;
typedef struct S127 T127;
typedef struct S527 T527;
typedef struct S131 T131;
typedef struct S546 T546;
typedef struct S381 T381;
typedef struct S580 T580;
typedef struct S7 T7;
typedef struct S564 T564;
typedef struct S168 T168;
typedef struct S290 T290;
typedef struct S620 T620;
typedef struct S228 T228;
typedef struct S538 T538;
typedef struct S40 T40;
typedef struct S76 T76;
typedef struct S251 T251;
typedef struct S361 T361;
typedef struct S231 T231;
typedef struct S403 T403;
typedef struct S165 T165;
typedef struct S542 T542;
typedef struct S333 T333;
typedef struct S479 T479;
typedef struct S469 T469;
typedef struct S11 T11;
typedef struct S517 T517;
typedef struct S357 T357;
typedef struct S537 T537;
typedef struct S235 T235;
typedef struct S581 T581;
typedef struct S259 T259;
typedef struct S138 T138;
typedef struct S252 T252;
typedef struct S315 T315;
typedef struct S258 T258;
typedef struct S486 T486;
typedef struct S532 T532;
typedef struct S577 T577;
typedef struct S323 T323;
typedef struct S560 T560;
typedef struct S579 T579;
typedef struct S345 T345;
typedef struct S111 T111;
typedef struct S142 T142;
typedef struct S41 T41;
typedef struct S615 T615;
typedef struct S576 T576;
typedef struct S559 T559;
typedef struct S417 T417;
typedef struct S96 T96;
typedef struct S516 T516;
typedef struct S158 T158;
typedef struct S287 T287;
typedef struct S521 T521;
typedef struct S401 T401;
typedef struct S442 T442;
typedef struct S184 T184;
typedef struct S126 T126;
typedef struct S529 T529;
typedef struct S543 T543;
typedef struct S68 T68;
typedef struct S152 T152;
typedef struct S512 T512;
typedef struct S390 T390;
typedef struct S98 T98;
typedef struct S544 T544;
typedef struct S380 T380;
typedef struct S97 T97;
typedef struct S545 T545;
typedef struct S47 T47;
typedef struct S63 T63;
typedef struct S554 T554;
typedef struct S563 T563;
typedef struct S590 T590;
typedef struct S396 T396;
typedef struct S470 T470;
typedef struct S428 T428;
typedef struct S114 T114;
typedef struct S412 T412;
typedef struct S454 T454;
typedef struct S346 T346;
typedef struct S452 T452;
typedef struct S277 T277;
typedef struct S515 T515;
typedef struct S153 T153;
typedef struct S162 T162;
typedef struct S619 T619;
typedef struct S214 T214;
typedef struct S291 T291;
typedef struct S562 T562;

/*C Header Pass 2 :*/
typedef T0**T125;
typedef T0**T472;
typedef T0**T275;
typedef T0**T203;
typedef T0**T628;
typedef T0**T431;
typedef T0**T133;
typedef T0**T83;
typedef T0**T239;
typedef T0**T279;
typedef T0**T393;
typedef T3*T9;
typedef T0**T233;
typedef T0**T192;
typedef T0**T349;
typedef T0**T173;
typedef T2*T73;
typedef T0**T514;
typedef T0**T69;

/*C Header Pass 3 :*/

/*C Header Pass 4 :*/
struct S561{Tid id;T0* _parameters;};
extern T561 M561;
struct S437{Tid id;T0* _item;T0* _right;};
extern T437 M437;
struct S436{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T436 M436;
struct S524{Tid id;T0* _parameters;};
extern T524 M524;
struct S129{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T129 M129;
struct S322{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T322 M322;
struct S617{Tid id;};
extern T617 M617;
struct S337{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T337 M337;
struct S201{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T201 M201;
struct S487{Tid id;T6 _push_back_flag;T0* _name;T0* _string_name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T487 M487;
struct S190{Tid id;T192 _storage;T2 _capacity;T2 _upper;};
extern T190 M190;
struct S293{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T293 M293;
struct S547{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T547 M547;
struct S267{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T267 M267;
struct S523{Tid id;T0* _parameters;};
extern T523 M523;
struct S163{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T163 M163;
struct S121{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T121 M121;
struct S614{Tid id;};
extern T614 M614;
struct S465{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T465 M465;
struct S171{Tid id;T173 _storage;T2 _capacity;T2 _upper;};
extern T171 M171;
struct S607{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T607 M607;
struct S613{Tid id;T0* _parameters;};
extern T613 M613;
struct S164{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T164 M164;
struct S157{Tid id;};
extern T157 M157;
struct S578{Tid id;T0* _text;};
extern T578 M578;
struct S72{Tid id;T73 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T72 M72;
struct S301{Tid id;T0* _item;T0* _right;};
extern T301 M301;
struct S484{Tid id;};
extern T484 M484;
struct S535{Tid id;};
extern T535 M535;
struct S300{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T300 M300;
struct S155{Tid id;};
extern T155 M155;
struct S134{Tid id;};
extern T134 M134;
struct S557{Tid id;T0* _parameters;};
extern T557 M557;
struct S510{Tid id;};
extern T510 M510;
struct S371{Tid id;};
extern T371 M371;
struct S618{Tid id;};
extern T618 M618;
struct S117{Tid id;};
extern T117 M117;
struct S248{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T248 M248;
struct S528{Tid id;T125 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T528 M528;
struct S584{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T584 M584;
struct S62{Tid id;T6 _is_used;T0* _name;T2 _id;};
extern T62 M62;
struct S136{Tid id;T0* _error_file;T0* _warning_file;T0* _info_file;};
extern T136 M136;
struct S45{Tid id;T2 _item;};
extern T45 M45;
struct S414{Tid id;T0* _item;T0* _right;};
extern T414 M414;
struct S518{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T518 M518;
struct S199{Tid id;T203 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T199 M199;
struct S420{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T420 M420;
struct S622{Tid id;};
extern T622 M622;
struct S118{Tid id;};
extern T118 M118;
struct S42{Tid id;T8 _item;};
extern T42 M42;
struct S616{Tid id;};
extern T616 M616;
struct S391{Tid id;T393 _storage;T2 _capacity;T2 _upper;};
extern T391 M391;
struct S286{Tid id;T0* _parameters;};
extern T286 M286;
struct S75{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T75 M75;
struct S18{Tid id;T0* _name;T0* _string_name;T0* _path;T8 _output_stream;};
extern T18 M18;
struct S485{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T485 M485;
struct S387{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T387 M387;
struct S151{Tid id;};
extern T151 M151;
struct S70{Tid id;};
extern T70 M70;
struct S123{Tid id;T125 _storage;T2 _capacity;T2 _upper;};
extern T123 M123;
struct S582{Tid id;T0* _parameters;};
extern T582 M582;
struct S593{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T593 M593;
struct S429{Tid id;};
extern T429 M429;
struct S583{Tid id;T0* _parameters;};
extern T583 M583;
struct S525{Tid id;T0* _parameters;};
extern T525 M525;
struct S273{Tid id;T275 _storage;T2 _capacity;T2 _upper;};
extern T273 M273;
struct S74{Tid id;T2 _id;T0* _lhs;T0* _rhs;T0* _action;T2 _precedence;T2 _line_nb;T6 _is_useful;T2 _associativity;};
extern T74 M74;
struct S150{Tid id;};
extern T150 M150;
struct S200{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T200 M200;
struct S496{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _error_handler;T2 _line_nb;T0* _last_value;T0* _action_buffer;T2 _nb_open_brackets;T0* _rule;T0* _last_grammar;T0* _action_factory;T2 _precedence;T0* _precedence_token;T0* _type;T0* _start_symbol;T0* _terminal_symbols;T0* _nonterminal_symbols;T0* _types;};
extern T496 M496;
struct S573{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T573 M573;
struct S596{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T596 M596;
struct S377{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T377 M377;
struct S325{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T325 M325;
struct S362{Tid id;};
extern T362 M362;
struct S311{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T311 M311;
struct S612{Tid id;T0* _parameters;};
extern T612 M612;
struct S526{Tid id;T0* _parameters;};
extern T526 M526;
struct S166{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T166 M166;
struct S185{Tid id;T0* _comparator;};
extern T185 M185;
struct S271{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T271 M271;
struct S237{Tid id;T239 _storage;T2 _capacity;T2 _upper;};
extern T237 M237;
struct S37{Tid id;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T2 _yyfinal;T2 _yyflag;T2 _yyntbase;T2 _yylast;T2 _yymax_token;T2 _yynsyms;T0* _machine;T0* _input_filename;T2 _array_size;};
extern T37 M37;
struct S550{Tid id;T6 _is_used;T0* _name;T2 _id;};
extern T550 M550;
struct S588{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T588 M588;
struct S354{Tid id;};
extern T354 M354;
struct S161{Tid id;T6 _is_state;T2 _id;T0* _froms;T0* _tos;T2 _count;T2 _width;T2 _position;};
extern T161 M161;
struct S558{Tid id;T0* _parameters;};
extern T558 M558;
struct S397{Tid id;T0* _comparator;};
extern T397 M397;
struct S34{Tid id;T0* _parameters;};
extern T34 M34;
struct S33{Tid id;T6 _item;};
extern T33 M33;
struct S81{Tid id;T83 _storage;T2 _capacity;T2 _upper;};
extern T81 M81;
struct S539{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T539 M539;
struct S234{Tid id;T0* _rule;T0* _lookaheads;T0* _transitions;};
extern T234 M234;
struct S530{Tid id;T0* _parameters;};
extern T530 M530;
struct S565{Tid id;T0* _parameters;};
extern T565 M565;
struct S626{Tid id;T628 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T626 M626;
struct S127{Tid id;};
extern T127 M127;
struct S527{Tid id;T0* _parameters;};
extern T527 M527;
struct S131{Tid id;T133 _storage;T2 _capacity;T2 _upper;};
extern T131 M131;
struct S546{Tid id;T0* _parameters;};
extern T546 M546;
struct S381{Tid id;T233 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T381 M381;
struct S580{Tid id;T0* _parameters;};
extern T580 M580;
struct S198{Tid id;T2 _index;T0* _target;T0* _source;T0* _following_tokens;T0* _included_tokens;};
extern T198 M198;
struct S564{Tid id;T0* _parameters;};
extern T564 M564;
struct S168{Tid id;};
extern T168 M168;
struct S290{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T290 M290;
struct S620{Tid id;};
extern T620 M620;
struct S228{Tid id;T0* _item;T0* _right;};
extern T228 M228;
struct S538{Tid id;T0* _first;T2 _second;};
extern T538 M538;
struct S120{Tid id;T6 _is_useful;T0* _name;T0* _type;T2 _id;T2 _token_id;T2 _precedence;T0* _literal_string;T2 _associativity;};
extern T120 M120;
struct S40{Tid id;T0* _states;T0* _grammar;T0* _cached_states;};
extern T40 M40;
struct S76{Tid id;T2 _index;T6 _is_useful;T0* _name;T0* _type;T2 _id;T6 _is_nullable;T0* _rules;T0* _firsts;T0* _derives;T0* _transitions;};
extern T76 M76;
struct S251{Tid id;};
extern T251 M251;
struct S361{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T361 M361;
struct S231{Tid id;T233 _storage;T2 _capacity;T2 _upper;};
extern T231 M231;
struct S403{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T403 M403;
struct S165{Tid id;T2 _id;T0* _accessing_symbol;T0* _positions;T0* _shifts;T0* _reductions;T0* _errors;T2 _hash_code;T6 _lookahead_needed;T6 _has_conflict;};
extern T165 M165;
struct S542{Tid id;T0* _parameters;};
extern T542 M542;
struct S333{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T333 M333;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S479{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T479 M479;
struct S469{Tid id;T472 _storage;T2 _capacity;T2 _upper;};
extern T469 M469;
struct S11{Tid id;T0* _input_filename;T0* _output_filename;T0* _token_classname;T0* _token_filename;T0* _verbose_filename;T6 _actions_separated;T0* _grammar;T0* _error_handler;};
extern T11 M11;
struct S517{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T517 M517;
struct S357{Tid id;T0* _item;T0* _right;};
extern T357 M357;
struct S537{Tid id;T0* _parameters;};
extern T537 M537;
struct S235{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T235 M235;
struct S581{Tid id;T0* _parameters;};
extern T581 M581;
struct S259{Tid id;};
extern T259 M259;
struct S138{Tid id;};
extern T138 M138;
struct S252{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T252 M252;
struct S315{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T315 M315;
struct S258{Tid id;};
extern T258 M258;
struct S486{Tid id;T0* _parameters;};
extern T486 M486;
struct S532{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T532 M532;
struct S577{Tid id;};
extern T577 M577;
struct S323{Tid id;};
extern T323 M323;
struct S560{Tid id;T0* _parameters;};
extern T560 M560;
struct S579{Tid id;T0* _parameters;};
extern T579 M579;
struct S345{Tid id;T349 _storage;T2 _capacity;T2 _upper;};
extern T345 M345;
struct S111{Tid id;T73 _storage;T2 _capacity;T2 _upper;};
extern T111 M111;
struct S142{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T142 M142;
struct S41{Tid id;T0* _tokens;T0* _variables;T0* _types;T0* _rules;T0* _start_symbol;T2 _expected_conflicts;T0* _eiffel_code;T0* _eiffel_header;};
extern T41 M41;
struct S615{Tid id;};
extern T615 M615;
struct S576{Tid id;};
extern T576 M576;
struct S559{Tid id;T0* _parameters;};
extern T559 M559;
struct S417{Tid id;};
extern T417 M417;
struct S96{Tid id;T6 _is_used;T0* _name;T2 _id;};
extern T96 M96;
struct S516{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T516 M516;
struct S158{Tid id;T0* _name;};
extern T158 M158;
struct S287{Tid id;T0* _state;T0* _rule;T0* _token;T0* _resolution;};
extern T287 M287;
struct S521{Tid id;T0* _name;};
extern T521 M521;
struct S401{Tid id;};
extern T401 M401;
struct S442{Tid id;};
extern T442 M442;
struct S184{Tid id;};
extern T184 M184;
struct S126{Tid id;};
extern T126 M126;
struct S529{Tid id;T0* _parameters;};
extern T529 M529;
struct S543{Tid id;};
extern T543 M543;
struct S68{Tid id;T69 _storage;T2 _capacity;T2 _upper;};
extern T68 M68;
struct S152{Tid id;T133 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T152 M152;
struct S512{Tid id;T514 _storage;T2 _capacity;T2 _upper;};
extern T512 M512;
struct S390{Tid id;};
extern T390 M390;
struct S98{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T98 M98;
struct S544{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T544 M544;
struct S380{Tid id;};
extern T380 M380;
struct S97{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T97 M97;
struct S545{Tid id;};
extern T545 M545;
struct S47{Tid id;T3 _item;};
extern T47 M47;
struct S63{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T63 M63;
struct S554{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T554 M554;
struct S563{Tid id;T0* _parameters;};
extern T563 M563;
struct S590{Tid id;};
extern T590 M590;
struct S396{Tid id;};
extern T396 M396;
struct S470{Tid id;};
extern T470 M470;
struct S428{Tid id;T431 _storage;T2 _capacity;T2 _upper;};
extern T428 M428;
struct S270{Tid id;T0* _rule;T2 _index;};
extern T270 M270;
struct S114{Tid id;};
extern T114 M114;
struct S412{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T412 M412;
struct S454{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T454 M454;
struct S346{Tid id;};
extern T346 M346;
struct S452{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T452 M452;
struct S277{Tid id;T279 _storage;T2 _capacity;T2 _upper;};
extern T277 M277;
struct S515{Tid id;T0* _parameters;};
extern T515 M515;
struct S153{Tid id;T0* _program_name;};
extern T153 M153;
struct S162{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T162 M162;
struct S619{Tid id;};
extern T619 M619;
struct S214{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T214 M214;
struct S291{Tid id;T0* _item;T0* _right;};
extern T291 M291;
struct S562{Tid id;T0* _parameters;};
extern T562 M562;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T6 r3_px_62(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_upper(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r125clear_all(T125 C,T2 a1);
T125 r125realloc(T125 C,T2 a1,T2 a2);
T6 r125fast_memcmp(T125 C,T125 a1,T2 a2);
void r125set_all_with(T125 C,T0* a1,T2 a2);
void r125clear(T125 C,T2 a1,T2 a2);
void r125copy_from(T125 C,T125 a1,T2 a2);
void r472clear_all(T472 C,T2 a1);
T472 r472realloc(T472 C,T2 a1,T2 a2);
T6 r472fast_memcmp(T472 C,T472 a1,T2 a2);
void r472set_all_with(T472 C,T0* a1,T2 a2);
void r472clear(T472 C,T2 a1,T2 a2);
void r472copy_from(T472 C,T472 a1,T2 a2);
void r275clear_all(T275 C,T2 a1);
T275 r275realloc(T275 C,T2 a1,T2 a2);
T6 r275fast_memcmp(T275 C,T275 a1,T2 a2);
void r275set_all_with(T275 C,T0* a1,T2 a2);
void r275clear(T275 C,T2 a1,T2 a2);
void r275copy_from(T275 C,T275 a1,T2 a2);
T6 r203fast_memcmp(T203 C,T203 a1,T2 a2);
void r203set_all_with(T203 C,T0* a1,T2 a2);
void r203copy_from(T203 C,T203 a1,T2 a2);
T6 r628fast_memcmp(T628 C,T628 a1,T2 a2);
void r628copy_from(T628 C,T628 a1,T2 a2);
void r431clear_all(T431 C,T2 a1);
T431 r431realloc(T431 C,T2 a1,T2 a2);
T6 r431fast_memcmp(T431 C,T431 a1,T2 a2);
void r431set_all_with(T431 C,T0* a1,T2 a2);
void r431clear(T431 C,T2 a1,T2 a2);
void r431copy_from(T431 C,T431 a1,T2 a2);
void r133clear_all(T133 C,T2 a1);
T133 r133realloc(T133 C,T2 a1,T2 a2);
T6 r133fast_memcmp(T133 C,T133 a1,T2 a2);
void r133set_all_with(T133 C,T0* a1,T2 a2);
void r133clear(T133 C,T2 a1,T2 a2);
void r133copy_from(T133 C,T133 a1,T2 a2);
void r83clear_all(T83 C,T2 a1);
T83 r83realloc(T83 C,T2 a1,T2 a2);
T6 r83fast_memcmp(T83 C,T83 a1,T2 a2);
void r83set_all_with(T83 C,T0* a1,T2 a2);
void r83clear(T83 C,T2 a1,T2 a2);
void r83copy_from(T83 C,T83 a1,T2 a2);
void r239clear_all(T239 C,T2 a1);
T239 r239realloc(T239 C,T2 a1,T2 a2);
T6 r239fast_memcmp(T239 C,T239 a1,T2 a2);
void r239set_all_with(T239 C,T0* a1,T2 a2);
void r239clear(T239 C,T2 a1,T2 a2);
void r239copy_from(T239 C,T239 a1,T2 a2);
void r279clear_all(T279 C,T2 a1);
T279 r279realloc(T279 C,T2 a1,T2 a2);
T6 r279fast_memcmp(T279 C,T279 a1,T2 a2);
void r279set_all_with(T279 C,T0* a1,T2 a2);
void r279clear(T279 C,T2 a1,T2 a2);
void r279copy_from(T279 C,T279 a1,T2 a2);
void r393clear_all(T393 C,T2 a1);
T393 r393realloc(T393 C,T2 a1,T2 a2);
T6 r393fast_memcmp(T393 C,T393 a1,T2 a2);
void r393set_all_with(T393 C,T0* a1,T2 a2);
void r393clear(T393 C,T2 a1,T2 a2);
void r393copy_from(T393 C,T393 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r233clear_all(T233 C,T2 a1);
T233 r233realloc(T233 C,T2 a1,T2 a2);
T6 r233fast_memcmp(T233 C,T233 a1,T2 a2);
void r233set_all_with(T233 C,T0* a1,T2 a2);
void r233clear(T233 C,T2 a1,T2 a2);
void r233copy_from(T233 C,T233 a1,T2 a2);
void r192clear_all(T192 C,T2 a1);
T192 r192realloc(T192 C,T2 a1,T2 a2);
T6 r192fast_memcmp(T192 C,T192 a1,T2 a2);
void r192set_all_with(T192 C,T0* a1,T2 a2);
void r192clear(T192 C,T2 a1,T2 a2);
void r192copy_from(T192 C,T192 a1,T2 a2);
void r349clear_all(T349 C,T2 a1);
T349 r349realloc(T349 C,T2 a1,T2 a2);
T6 r349fast_memcmp(T349 C,T349 a1,T2 a2);
void r349set_all_with(T349 C,T0* a1,T2 a2);
void r349clear(T349 C,T2 a1,T2 a2);
void r349copy_from(T349 C,T349 a1,T2 a2);
void r173clear_all(T173 C,T2 a1);
T173 r173realloc(T173 C,T2 a1,T2 a2);
T6 r173fast_memcmp(T173 C,T173 a1,T2 a2);
void r173set_all_with(T173 C,T0* a1,T2 a2);
void r173clear(T173 C,T2 a1,T2 a2);
void r173copy_from(T173 C,T173 a1,T2 a2);
void r73clear_all(T73 C,T2 a1);
T73 r73realloc(T73 C,T2 a1,T2 a2);
void r73move(T73 C,T2 a1,T2 a2,T2 a3);
T6 r73fast_memcmp(T73 C,T73 a1,T2 a2);
void r73set_all_with(T73 C,T2 a1,T2 a2);
void r73clear(T73 C,T2 a1,T2 a2);
void r73copy_from(T73 C,T73 a1,T2 a2);
void r514clear_all(T514 C,T2 a1);
T514 r514realloc(T514 C,T2 a1,T2 a2);
T6 r514fast_memcmp(T514 C,T514 a1,T2 a2);
void r514set_all_with(T514 C,T0* a1,T2 a2);
void r514clear(T514 C,T2 a1,T2 a2);
void r514copy_from(T514 C,T514 a1,T2 a2);
void r69clear_all(T69 C,T2 a1);
T69 r69realloc(T69 C,T2 a1,T2 a2);
T6 r69fast_memcmp(T69 C,T69 a1,T2 a2);
void r69set_all_with(T69 C,T0* a1,T2 a2);
void r69clear(T69 C,T2 a1,T2 a2);
void r69copy_from(T69 C,T69 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T2 r7item_code(T7* C,T2 a1);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7make_from_string(T7* C,T0* a1);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7string(T7* C);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7to_upper(T7* C);
T8 r7to_external(T7* C);
void r7to_lower(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r190copy(T190* C,T0* a1);
T6 r190is_equal(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
void r190make(T190* C,T2 a1);
T6 r190conforms_to(T190* C,T0* a1);
void r190resize(T190* C,T2 a1);
T0* r190twin(T190* C);
void r171copy(T171* C,T0* a1);
T6 r171is_equal(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
void r171make(T171* C,T2 a1);
T6 r171conforms_to(T171* C,T0* a1);
void r171resize(T171* C,T2 a1);
T0* r171twin(T171* C);
void r72copy(T72* C,T0* a1);
T2 r72count(T72* C);
T6 r72is_equal(T72* C,T0* a1);
T2 r72item(T72* C,T2 a1);
T6 r72se_assigned_from(T0* a1);
void r72make(T72* C,T2 a1,T2 a2);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1,T2 a2);
T0* r72twin(T72* C);
void r528copy(T528* C,T0* a1);
T2 r528count(T528* C);
T6 r528is_equal(T528* C,T0* a1);
T0* r528item(T528* C,T2 a1);
T6 r528se_assigned_from(T0* a1);
void r528make(T528* C,T2 a1,T2 a2);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528twin(T528* C);
void r199copy(T199* C,T0* a1);
T2 r199count(T199* C);
T6 r199is_equal(T199* C,T0* a1);
T0* r199item(T199* C,T2 a1);
T6 r199se_assigned_from(T0* a1);
void r199make(T199* C,T2 a1,T2 a2);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199twin(T199* C);
void r391copy(T391* C,T0* a1);
T6 r391is_equal(T391* C,T0* a1);
T6 r391se_assigned_from(T0* a1);
void r391make(T391* C,T2 a1);
T6 r391conforms_to(T391* C,T0* a1);
void r391resize(T391* C,T2 a1);
T0* r391twin(T391* C);
void r123copy(T123* C,T0* a1);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
void r123make(T123* C,T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
void r123resize(T123* C,T2 a1);
T0* r123twin(T123* C);
void r273copy(T273* C,T0* a1);
T6 r273is_equal(T273* C,T0* a1);
T6 r273se_assigned_from(T0* a1);
void r273make(T273* C,T2 a1);
T6 r273conforms_to(T273* C,T0* a1);
void r273resize(T273* C,T2 a1);
T0* r273twin(T273* C);
void r237copy(T237* C,T0* a1);
T6 r237is_equal(T237* C,T0* a1);
T6 r237se_assigned_from(T0* a1);
void r237make(T237* C,T2 a1);
T6 r237conforms_to(T237* C,T0* a1);
void r237resize(T237* C,T2 a1);
T0* r237twin(T237* C);
void r81copy(T81* C,T0* a1);
T6 r81is_equal(T81* C,T0* a1);
T6 r81se_assigned_from(T0* a1);
void r81make(T81* C,T2 a1);
T6 r81conforms_to(T81* C,T0* a1);
void r81resize(T81* C,T2 a1);
T0* r81twin(T81* C);
void r626copy(T626* C,T0* a1);
T2 r626count(T626* C);
T6 r626is_equal(T626* C,T0* a1);
T0* r626item(T626* C,T2 a1);
T6 r626se_assigned_from(T0* a1);
T6 r626conforms_to(T626* C,T0* a1);
T0* r626twin(T626* C);
void r131copy(T131* C,T0* a1);
T6 r131is_equal(T131* C,T0* a1);
T6 r131se_assigned_from(T0* a1);
void r131make(T131* C,T2 a1);
T6 r131conforms_to(T131* C,T0* a1);
void r131resize(T131* C,T2 a1);
T0* r131twin(T131* C);
void r381copy(T381* C,T0* a1);
T2 r381count(T381* C);
T6 r381is_equal(T381* C,T0* a1);
T0* r381item(T381* C,T2 a1);
T6 r381se_assigned_from(T0* a1);
void r381make(T381* C,T2 a1,T2 a2);
T6 r381conforms_to(T381* C,T0* a1);
T0* r381twin(T381* C);
void r231copy(T231* C,T0* a1);
T6 r231is_equal(T231* C,T0* a1);
T6 r231se_assigned_from(T0* a1);
void r231make(T231* C,T2 a1);
T6 r231conforms_to(T231* C,T0* a1);
void r231resize(T231* C,T2 a1);
T0* r231twin(T231* C);
void r469copy(T469* C,T0* a1);
T6 r469is_equal(T469* C,T0* a1);
T6 r469se_assigned_from(T0* a1);
void r469make(T469* C,T2 a1);
T6 r469conforms_to(T469* C,T0* a1);
void r469resize(T469* C,T2 a1);
T0* r469twin(T469* C);
void r345copy(T345* C,T0* a1);
T6 r345is_equal(T345* C,T0* a1);
T6 r345se_assigned_from(T0* a1);
void r345make(T345* C,T2 a1);
T6 r345conforms_to(T345* C,T0* a1);
void r345resize(T345* C,T2 a1);
T0* r345twin(T345* C);
void r111copy(T111* C,T0* a1);
T6 r111is_equal(T111* C,T0* a1);
T6 r111se_assigned_from(T0* a1);
void r111make(T111* C,T2 a1);
T6 r111conforms_to(T111* C,T0* a1);
void r111resize(T111* C,T2 a1);
T0* r111twin(T111* C);
void r111with_capacity(T111* C,T2 a1);
void r111from_collection(T111* C,T0* a1);
void r68copy(T68* C,T0* a1);
T6 r68is_equal(T68* C,T0* a1);
T6 r68se_assigned_from(T0* a1);
void r68make(T68* C,T2 a1);
T6 r68conforms_to(T68* C,T0* a1);
void r68resize(T68* C,T2 a1);
T0* r68twin(T68* C);
void r152copy(T152* C,T0* a1);
T2 r152count(T152* C);
T6 r152is_equal(T152* C,T0* a1);
T0* r152item(T152* C,T2 a1);
T6 r152valid_index(T152* C,T2 a1);
T6 r152se_assigned_from(T0* a1);
void r152make(T152* C,T2 a1,T2 a2);
T6 r152conforms_to(T152* C,T0* a1);
T0* r152twin(T152* C);
void r512copy(T512* C,T0* a1);
T2 r512count(T512* C);
T6 r512is_equal(T512* C,T0* a1);
T0* r512item(T512* C,T2 a1);
T6 r512se_assigned_from(T0* a1);
void r512make(T512* C,T2 a1);
T6 r512conforms_to(T512* C,T0* a1);
void r512resize(T512* C,T2 a1);
T0* r512twin(T512* C);
void r428copy(T428* C,T0* a1);
T2 r428count(T428* C);
T6 r428is_equal(T428* C,T0* a1);
T0* r428item(T428* C,T2 a1);
T6 r428se_assigned_from(T0* a1);
void r428make(T428* C,T2 a1);
T6 r428conforms_to(T428* C,T0* a1);
void r428resize(T428* C,T2 a1);
T0* r428twin(T428* C);
void r277copy(T277* C,T0* a1);
T2 r277count(T277* C);
T6 r277is_equal(T277* C,T0* a1);
T0* r277item(T277* C,T2 a1);
T6 r277se_assigned_from(T0* a1);
void r277make(T277* C,T2 a1);
T6 r277conforms_to(T277* C,T0* a1);
void r277resize(T277* C,T2 a1);
T0* r277twin(T277* C);
T6 r437is_equal(T437* C,T0* a1);
T6 r437se_assigned_from(T0* a1);
T6 r437conforms_to(T437* C,T0* a1);
T0* r437twin(T437* C);
void r436copy(T436* C,T0* a1);
T0* r436cursor_item(T0* a1);
T6 r436is_equal(T436* C,T0* a1);
void r436remove_traversing_cursor(T436* C,T0* a1);
void r436move_all_cursors_after(T436* C);
void r436add_traversing_cursor(T436* C,T0* a1);
T6 r436se_assigned_from(T0* a1);
T6 r436same_type(T436* C,T0* a1);
void r436make(T436* C);
T6 r436cursor_after(T0* a1);
T6 r436conforms_to(T436* C,T0* a1);
void r436cursor_forth(T436* C,T0* a1);
void r436cursor_start(T436* C,T0* a1);
T0* r436twin(T436* C);
void r436force_last(T436* C,T0* a1);
T0* r436new_cursor(T436* C);
T6 r436cursor_off(T0* a1);
T2 r129new_capacity(T2 a1);
void r129copy(T129* C,T0* a1);
T6 r129extendible(T129* C,T2 a1);
T6 r129is_equal(T129* C,T0* a1);
void r129remove_traversing_cursor(T129* C,T0* a1);
void r129move_all_cursors_after(T129* C);
void r129add_traversing_cursor(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
T0* r129clone(T0* a1);
T6 r129cursor_before(T0* a1);
T6 r129same_type(T129* C,T0* a1);
void r129make(T129* C,T2 a1);
T6 r129cursor_after(T0* a1);
T6 r129conforms_to(T129* C,T0* a1);
void r129resize(T129* C,T2 a1);
T6 r129cursor_same_position(T0* a1,T0* a2);
T0* r129twin(T129* C);
void r129force_last(T129* C,T0* a1);
T0* r129new_cursor(T129* C);
T6 r129cursor_off(T0* a1);
void r322copy(T322* C,T0* a1);
void r322clear_items(T322* C,T2 a1,T2 a2);
void r322wipe_out(T322* C);
void r322put(T322* C,T0* a1);
T6 r322is_equal(T322* C,T0* a1);
T0* r322item(T322* C);
T6 r322se_assigned_from(T0* a1);
T0* r322clone(T0* a1);
T6 r322same_type(T322* C,T0* a1);
void r322make(T322* C,T2 a1);
void r322remove(T322* C);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322twin(T322* C);
T6 r617is_equal(T617* C,T0* a1);
T6 r617se_assigned_from(T0* a1);
T6 r617conforms_to(T617* C,T0* a1);
T0* r617twin(T617* C);
T2 r337new_capacity(T2 a1);
void r337copy(T337* C,T0* a1);
T6 r337extendible(T337* C,T2 a1);
void r337force(T337* C,T0* a1);
T6 r337is_equal(T337* C,T0* a1);
T0* r337item(T337* C);
T6 r337se_assigned_from(T0* a1);
T0* r337clone(T0* a1);
T6 r337same_type(T337* C,T0* a1);
void r337make(T337* C,T2 a1);
void r337remove(T337* C);
T6 r337conforms_to(T337* C,T0* a1);
void r337resize(T337* C,T2 a1);
T0* r337twin(T337* C);
void r201copy(T201* C,T0* a1);
T0* r201cursor_item(T0* a1);
T6 r201is_equal(T201* C,T0* a1);
void r201remove_traversing_cursor(T201* C,T0* a1);
void r201cursor_go_after(T201* C,T0* a1);
void r201move_all_cursors_after(T201* C);
void r201add_traversing_cursor(T201* C,T0* a1);
T6 r201se_assigned_from(T0* a1);
T6 r201same_type(T201* C,T0* a1);
void r201make(T201* C);
T6 r201cursor_after(T0* a1);
T6 r201conforms_to(T201* C,T0* a1);
void r201cursor_forth(T201* C,T0* a1);
void r201cursor_start(T201* C,T0* a1);
T0* r201twin(T201* C);
void r201force_last(T201* C,T0* a1);
T0* r201new_cursor(T201* C);
T6 r201cursor_off(T0* a1);
void r293copy(T293* C,T0* a1);
void r293set(T293* C,T0* a1,T6 a2,T6 a3);
T6 r293is_equal(T293* C,T0* a1);
T6 r293same_position(T293* C,T0* a1);
T6 r293se_assigned_from(T0* a1);
T6 r293same_type(T293* C,T0* a1);
void r293make(T293* C,T0* a1);
T6 r293conforms_to(T293* C,T0* a1);
void r293set_after(T293* C);
T0* r293twin(T293* C);
T2 r547new_capacity(T2 a1);
void r547copy(T547* C,T0* a1);
void r547force(T547* C,T0* a1,T0* a2);
void r547make_clashes(T547* C,T2 a1);
void r547search_position(T547* C,T0* a1);
T6 r547is_equal(T547* C,T0* a1);
void r547remove_traversing_cursor(T547* C,T0* a1);
void r547clone_slots(T547* C);
void r547keys_resize(T547* C,T2 a1);
void r547clone_clashes(T547* C);
T0* r547item(T547* C,T0* a1);
void r547move_all_cursors_after(T547* C);
void r547make_items(T547* C,T2 a1);
void r547add_traversing_cursor(T547* C,T0* a1);
T6 r547se_assigned_from(T0* a1);
T0* r547clone(T0* a1);
T6 r547same_type(T547* C,T0* a1);
void r547make(T547* C,T2 a1);
void r547clone_items(T547* C);
T6 r547conforms_to(T547* C,T0* a1);
T6 r547has(T547* C,T0* a1);
void r547make_keys(T547* C,T2 a1);
T2 r547hash_position(T547* C,T0* a1);
extern T0*oBC93fixed_integer_array_;
void r547items_resize(T547* C,T2 a1);
void r547clone_keys(T547* C);
void r547make_with_equality_testers(T547* C,T2 a1,T0* a2,T0* a3);
void r547resize(T547* C,T2 a1);
T6 r547cursor_same_position(T0* a1,T0* a2);
void r547clashes_resize(T547* C,T2 a1);
void r547slots_resize(T547* C,T2 a1);
T0* r547twin(T547* C);
T0* r547new_cursor(T547* C);
void r547make_slots(T547* C,T2 a1);
T2 r547new_modulus(T2 a1);
T6 r547cursor_off(T0* a1);
void r267copy(T267* C,T0* a1);
T6 r267is_equal(T267* C,T0* a1);
T0* r267item(T267* C);
T6 r267same_position(T267* C,T0* a1);
T6 r267se_assigned_from(T0* a1);
T6 r267after(T267* C);
T6 r267same_type(T267* C,T0* a1);
T2 r267index(T267* C);
T6 r267off(T267* C);
T6 r267conforms_to(T267* C,T0* a1);
T0* r267twin(T267* C);
void r163copy(T163* C,T0* a1);
T6 r163is_equal(T163* C,T0* a1);
void r163remove_traversing_cursor(T163* C,T0* a1);
void r163move_all_cursors_after(T163* C);
void r163add_traversing_cursor(T163* C,T0* a1);
T6 r163se_assigned_from(T0* a1);
T0* r163clone(T0* a1);
T6 r163cursor_before(T0* a1);
T6 r163same_type(T163* C,T0* a1);
void r163make(T163* C,T2 a1);
T6 r163cursor_after(T0* a1);
T6 r163conforms_to(T163* C,T0* a1);
T6 r163cursor_same_position(T0* a1,T0* a2);
T0* r163twin(T163* C);
T0* r163new_cursor(T163* C);
void r163put_last(T163* C,T0* a1);
T6 r163cursor_off(T0* a1);
T2 r121new_capacity(T2 a1);
void r121copy(T121* C,T0* a1);
void r121clear_items(T121* C,T2 a1,T2 a2);
T6 r121extendible(T121* C,T2 a1);
void r121wipe_out(T121* C);
T0* r121cursor_item(T121* C,T0* a1);
T6 r121is_equal(T121* C,T0* a1);
void r121remove_traversing_cursor(T121* C,T0* a1);
void r121cursor_go_after(T121* C,T0* a1);
void r121move_all_cursors_after(T121* C);
void r121add_traversing_cursor(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
T0* r121clone(T0* a1);
void r121move_left(T121* C,T2 a1,T2 a2);
T6 r121cursor_before(T0* a1);
T6 r121same_type(T121* C,T0* a1);
void r121make(T121* C,T2 a1);
void r121remove(T121* C,T2 a1);
void r121move_cursors_left(T121* C,T2 a1);
void r121remove_last(T121* C);
T6 r121cursor_after(T0* a1);
T6 r121conforms_to(T121* C,T0* a1);
T6 r121has(T121* C,T0* a1);
T2 r121cursor_index(T121* C,T0* a1);
void r121cursor_search_forth(T121* C,T0* a1,T0* a2);
void r121cursor_forth(T121* C,T0* a1);
void r121resize(T121* C,T2 a1);
T6 r121cursor_same_position(T0* a1,T0* a2);
void r121move_last_cursors_after(T121* C);
void r121delete(T121* C,T0* a1);
void r121cursor_start(T121* C,T0* a1);
T0* r121twin(T121* C);
void r121force_last(T121* C,T0* a1);
T0* r121new_cursor(T121* C);
void r121extend_last(T121* C,T0* a1);
T6 r121is_full(T121* C);
void r121put_last(T121* C,T0* a1);
T6 r121cursor_off(T0* a1);
T6 r614is_equal(T614* C,T0* a1);
T6 r614se_assigned_from(T0* a1);
T6 r614conforms_to(T614* C,T0* a1);
T0* r614twin(T614* C);
void r465copy(T465* C,T0* a1);
T6 r465is_equal(T465* C,T0* a1);
T6 r465same_position(T465* C,T0* a1);
T6 r465se_assigned_from(T0* a1);
T6 r465same_type(T465* C,T0* a1);
T6 r465off(T465* C);
T6 r465conforms_to(T465* C,T0* a1);
T0* r465twin(T465* C);
void r607copy(T607* C,T0* a1);
T6 r607is_equal(T607* C,T0* a1);
T6 r607same_position(T607* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
T6 r607same_type(T607* C,T0* a1);
T6 r607off(T607* C);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
void r164copy(T164* C,T0* a1);
void r164move_cursors_right(T164* C,T2 a1,T2 a2);
T0* r164last(T164* C);
void r164put(T164* C,T0* a1,T2 a2);
T0* r164cursor_item(T164* C,T0* a1);
T6 r164is_equal(T164* C,T0* a1);
void r164remove_traversing_cursor(T164* C,T0* a1);
void r164move_all_cursors_after(T164* C);
void r164add_traversing_cursor(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
T0* r164clone(T0* a1);
void r164move_left(T164* C,T2 a1,T2 a2);
T6 r164cursor_before(T0* a1);
T6 r164same_type(T164* C,T0* a1);
void r164make(T164* C,T2 a1);
void r164remove(T164* C,T2 a1);
void r164move_cursors_left(T164* C,T2 a1);
void r164remove_last(T164* C);
T6 r164cursor_after(T0* a1);
T6 r164conforms_to(T164* C,T0* a1);
T6 r164has(T164* C,T0* a1);
void r164move_right(T164* C,T2 a1,T2 a2);
void r164cursor_forth(T164* C,T0* a1);
void r164resize(T164* C,T2 a1);
T6 r164cursor_same_position(T0* a1,T0* a2);
void r164move_last_cursors_after(T164* C);
void r164cursor_start(T164* C,T0* a1);
T0* r164twin(T164* C);
T0* r164new_cursor(T164* C);
T6 r164is_full(T164* C);
void r164put_last(T164* C,T0* a1);
T6 r164cursor_off(T0* a1);
T6 r301is_equal(T301* C,T0* a1);
T6 r301se_assigned_from(T0* a1);
T6 r301conforms_to(T301* C,T0* a1);
T0* r301twin(T301* C);
T6 r484is_equal(T484* C,T0* a1);
T6 r484se_assigned_from(T0* a1);
T0* r484make(T2 a1);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484resize(T0* a1,T2 a2);
T0* r484twin(T484* C);
T6 r535is_equal(T535* C,T0* a1);
T6 r535se_assigned_from(T0* a1);
T6 r535conforms_to(T535* C,T0* a1);
T6 r535test(T0* a1,T0* a2);
T0* r535twin(T535* C);
void r300copy(T300* C,T0* a1);
T0* r300cursor_item(T0* a1);
T6 r300is_equal(T300* C,T0* a1);
void r300remove_traversing_cursor(T300* C,T0* a1);
void r300move_all_cursors_after(T300* C);
void r300add_traversing_cursor(T300* C,T0* a1);
T6 r300se_assigned_from(T0* a1);
T6 r300same_type(T300* C,T0* a1);
void r300make(T300* C);
T6 r300cursor_after(T0* a1);
T6 r300conforms_to(T300* C,T0* a1);
void r300cursor_forth(T300* C,T0* a1);
void r300cursor_start(T300* C,T0* a1);
T0* r300twin(T300* C);
void r300force_last(T300* C,T0* a1);
T0* r300new_cursor(T300* C);
T6 r300cursor_off(T0* a1);
void r510clear_all(T0* a1);
T6 r510is_equal(T510* C,T0* a1);
T6 r510se_assigned_from(T0* a1);
T0* r510make(T2 a1);
T6 r510conforms_to(T510* C,T0* a1);
T0* r510resize(T0* a1,T2 a2);
T0* r510twin(T510* C);
T6 r371is_equal(T371* C,T0* a1);
T6 r371se_assigned_from(T0* a1);
T6 r371conforms_to(T371* C,T0* a1);
T6 r371test(T0* a1,T0* a2);
T0* r371twin(T371* C);
T6 r618is_equal(T618* C,T0* a1);
T6 r618se_assigned_from(T0* a1);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
T0* r117to_fixed_array(T0* a1);
T0* r117make(T2 a1);
T0* r117make_from_array(T0* a1);
T6 r117conforms_to(T117* C,T0* a1);
T0* r117resize(T0* a1,T2 a2);
T0* r117twin(T117* C);
void r248copy(T248* C,T0* a1);
T6 r248is_equal(T248* C,T0* a1);
T6 r248same_position(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
T6 r248same_type(T248* C,T0* a1);
T6 r248off(T248* C);
T6 r248conforms_to(T248* C,T0* a1);
T0* r248twin(T248* C);
T6 r414is_equal(T414* C,T0* a1);
T6 r414se_assigned_from(T0* a1);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
T2 r420new_capacity(T2 a1);
void r420copy(T420* C,T0* a1);
T6 r420extendible(T420* C,T2 a1);
void r420force(T420* C,T0* a1);
T6 r420is_equal(T420* C,T0* a1);
T0* r420item(T420* C);
T6 r420se_assigned_from(T0* a1);
T0* r420clone(T0* a1);
T6 r420same_type(T420* C,T0* a1);
void r420make(T420* C,T2 a1);
void r420remove(T420* C);
T6 r420conforms_to(T420* C,T0* a1);
void r420resize(T420* C,T2 a1);
T0* r420twin(T420* C);
T6 r118is_equal(T118* C,T0* a1);
T6 r118se_assigned_from(T0* a1);
T0* r118make(T2 a1);
T6 r118conforms_to(T118* C,T0* a1);
T0* r118resize(T0* a1,T2 a2);
T0* r118twin(T118* C);
T6 r616is_equal(T616* C,T0* a1);
T6 r616se_assigned_from(T0* a1);
T6 r616conforms_to(T616* C,T0* a1);
T0* r616twin(T616* C);
void r75copy(T75* C,T0* a1);
T0* r75cursor_item(T75* C,T0* a1);
T6 r75is_equal(T75* C,T0* a1);
void r75remove_traversing_cursor(T75* C,T0* a1);
void r75cursor_go_after(T75* C,T0* a1);
void r75move_all_cursors_after(T75* C);
void r75add_traversing_cursor(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
T0* r75clone(T0* a1);
void r75move_left(T75* C,T2 a1,T2 a2);
T6 r75cursor_before(T0* a1);
T6 r75same_type(T75* C,T0* a1);
void r75make(T75* C,T2 a1);
void r75remove(T75* C,T2 a1);
void r75move_cursors_left(T75* C,T2 a1);
void r75remove_last(T75* C);
T6 r75cursor_after(T0* a1);
T6 r75conforms_to(T75* C,T0* a1);
T6 r75has(T75* C,T0* a1);
T2 r75cursor_index(T75* C,T0* a1);
void r75cursor_search_forth(T75* C,T0* a1,T0* a2);
void r75cursor_forth(T75* C,T0* a1);
void r75resize(T75* C,T2 a1);
T6 r75cursor_same_position(T0* a1,T0* a2);
void r75move_last_cursors_after(T75* C);
void r75cursor_start(T75* C,T0* a1);
T0* r75twin(T75* C);
T0* r75new_cursor(T75* C);
T6 r75is_full(T75* C);
void r75put_last(T75* C,T0* a1);
T6 r75cursor_off(T0* a1);
void r485copy(T485* C,T0* a1);
T6 r485is_equal(T485* C,T0* a1);
T0* r485item(T485* C);
T6 r485same_position(T485* C,T0* a1);
T6 r485se_assigned_from(T0* a1);
T6 r485after(T485* C);
T6 r485same_type(T485* C,T0* a1);
T2 r485index(T485* C);
T6 r485off(T485* C);
T6 r485conforms_to(T485* C,T0* a1);
T0* r485twin(T485* C);
void r387copy(T387* C,T0* a1);
void r387make_clashes(T387* C,T2 a1);
void r387put(T387* C,T0* a1,T2 a2);
void r387search_position(T387* C,T2 a1);
T6 r387is_equal(T387* C,T0* a1);
void r387remove_traversing_cursor(T387* C,T0* a1);
void r387clone_slots(T387* C);
void r387keys_resize(T387* C,T2 a1);
void r387clone_clashes(T387* C);
T0* r387item(T387* C,T2 a1);
void r387move_all_cursors_after(T387* C);
void r387make_items(T387* C,T2 a1);
void r387add_traversing_cursor(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
T0* r387clone(T0* a1);
T6 r387same_type(T387* C,T0* a1);
void r387make(T387* C,T2 a1);
void r387clone_items(T387* C);
T6 r387conforms_to(T387* C,T0* a1);
T6 r387has(T387* C,T2 a1);
void r387make_keys(T387* C,T2 a1);
T2 r387hash_position(T387* C,T2 a1);
void r387items_resize(T387* C,T2 a1);
void r387clone_keys(T387* C);
void r387make_with_equality_testers(T387* C,T2 a1,T0* a2,T0* a3);
void r387resize(T387* C,T2 a1);
T6 r387cursor_same_position(T0* a1,T0* a2);
void r387clashes_resize(T387* C,T2 a1);
void r387slots_resize(T387* C,T2 a1);
T0* r387twin(T387* C);
T0* r387new_cursor(T387* C);
void r387make_slots(T387* C,T2 a1);
T2 r387new_modulus(T2 a1);
T6 r387cursor_off(T0* a1);
void r593copy(T593* C,T0* a1);
T6 r593is_equal(T593* C,T0* a1);
T0* r593item(T593* C);
T6 r593same_position(T593* C,T0* a1);
T6 r593se_assigned_from(T0* a1);
T6 r593after(T593* C);
T6 r593same_type(T593* C,T0* a1);
void r593make(T593* C,T0* a1);
T6 r593off(T593* C);
T6 r593conforms_to(T593* C,T0* a1);
T0* r593twin(T593* C);
void r429clear_all(T0* a1);
T6 r429is_equal(T429* C,T0* a1);
T6 r429se_assigned_from(T0* a1);
T0* r429make(T2 a1);
T6 r429conforms_to(T429* C,T0* a1);
T0* r429resize(T0* a1,T2 a2);
T0* r429twin(T429* C);
void r200copy(T200* C,T0* a1);
void r200set(T200* C,T0* a1,T6 a2,T6 a3);
T6 r200is_equal(T200* C,T0* a1);
T6 r200same_position(T200* C,T0* a1);
T6 r200se_assigned_from(T0* a1);
T6 r200same_type(T200* C,T0* a1);
void r200make(T200* C,T0* a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200set_after(T200* C);
T0* r200twin(T200* C);
void r573copy(T573* C,T0* a1);
T6 r573is_equal(T573* C,T0* a1);
T6 r573same_position(T573* C,T0* a1);
T6 r573se_assigned_from(T0* a1);
T6 r573same_type(T573* C,T0* a1);
T6 r573off(T573* C);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
void r596copy(T596* C,T0* a1);
T6 r596is_equal(T596* C,T0* a1);
T0* r596item(T596* C);
T6 r596same_position(T596* C,T0* a1);
T6 r596se_assigned_from(T0* a1);
T6 r596after(T596* C);
T6 r596same_type(T596* C,T0* a1);
void r596make(T596* C,T0* a1);
T6 r596off(T596* C);
T6 r596conforms_to(T596* C,T0* a1);
T0* r596twin(T596* C);
void r377copy(T377* C,T0* a1);
T6 r377is_equal(T377* C,T0* a1);
T6 r377same_position(T377* C,T0* a1);
T6 r377se_assigned_from(T0* a1);
T6 r377same_type(T377* C,T0* a1);
T6 r377off(T377* C);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
void r325copy(T325* C,T0* a1);
void r325append_last(T325* C,T0* a1);
T0* r325cursor_item(T0* a1);
T6 r325is_equal(T325* C,T0* a1);
void r325remove_traversing_cursor(T325* C,T0* a1);
void r325move_all_cursors_after(T325* C);
void r325add_traversing_cursor(T325* C,T0* a1);
T6 r325se_assigned_from(T0* a1);
T6 r325same_type(T325* C,T0* a1);
void r325make(T325* C);
T6 r325cursor_after(T0* a1);
T6 r325conforms_to(T325* C,T0* a1);
void r325cursor_forth(T325* C,T0* a1);
void r325make_from_linear(T325* C,T0* a1);
void r325cursor_start(T325* C,T0* a1);
T0* r325twin(T325* C);
T0* r325new_cursor(T325* C);
T6 r325cursor_off(T0* a1);
T6 r362is_equal(T362* C,T0* a1);
T6 r362se_assigned_from(T0* a1);
T0* r362make(T2 a1);
T6 r362conforms_to(T362* C,T0* a1);
T0* r362resize(T0* a1,T2 a2);
T0* r362twin(T362* C);
void r311copy(T311* C,T0* a1);
T6 r311is_equal(T311* C,T0* a1);
T6 r311same_position(T311* C,T0* a1);
T6 r311se_assigned_from(T0* a1);
T6 r311same_type(T311* C,T0* a1);
T6 r311off(T311* C);
T6 r311conforms_to(T311* C,T0* a1);
T0* r311twin(T311* C);
T2 r166new_capacity(T2 a1);
void r166copy(T166* C,T0* a1);
T6 r166extendible(T166* C,T2 a1);
void r166move_cursors_right(T166* C,T2 a1,T2 a2);
T0* r166last(T166* C);
void r166put(T166* C,T0* a1,T2 a2);
T6 r166is_equal(T166* C,T0* a1);
void r166remove_traversing_cursor(T166* C,T0* a1);
void r166move_all_cursors_after(T166* C);
void r166add_traversing_cursor(T166* C,T0* a1);
T6 r166se_assigned_from(T0* a1);
T0* r166clone(T0* a1);
void r166move_left(T166* C,T2 a1,T2 a2);
T6 r166cursor_before(T0* a1);
T6 r166same_type(T166* C,T0* a1);
void r166make(T166* C,T2 a1);
void r166remove(T166* C,T2 a1);
void r166move_cursors_left(T166* C,T2 a1);
void r166remove_last(T166* C);
T6 r166cursor_after(T0* a1);
T6 r166conforms_to(T166* C,T0* a1);
void r166move_right(T166* C,T2 a1,T2 a2);
void r166resize(T166* C,T2 a1);
T6 r166cursor_same_position(T0* a1,T0* a2);
void r166move_last_cursors_after(T166* C);
T0* r166twin(T166* C);
void r166force_last(T166* C,T0* a1);
T0* r166new_cursor(T166* C);
void r166put_last(T166* C,T0* a1);
T6 r166cursor_off(T0* a1);
T6 r185is_equal(T185* C,T0* a1);
void r185subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r185se_assigned_from(T0* a1);
T6 r185conforms_to(T185* C,T0* a1);
T0* r185twin(T185* C);
void r185sort_with_comparator(T0* a1,T0* a2);
void r271copy(T271* C,T0* a1);
void r271make_equal(T271* C,T2 a1);
T6 r271is_equal(T271* C,T0* a1);
void r271remove_traversing_cursor(T271* C,T0* a1);
void r271move_all_cursors_after(T271* C);
void r271add_traversing_cursor(T271* C,T0* a1);
T6 r271se_assigned_from(T0* a1);
T0* r271clone(T0* a1);
T6 r271cursor_before(T0* a1);
T6 r271same_type(T271* C,T0* a1);
T6 r271cursor_after(T0* a1);
T6 r271conforms_to(T271* C,T0* a1);
T6 r271has(T271* C,T0* a1);
void r271resize(T271* C,T2 a1);
T6 r271cursor_same_position(T0* a1,T0* a2);
T0* r271twin(T271* C);
T0* r271new_cursor(T271* C);
T6 r271is_full(T271* C);
void r271put_last(T271* C,T0* a1);
T6 r271cursor_off(T0* a1);
void r588copy(T588* C,T0* a1);
T6 r588is_equal(T588* C,T0* a1);
T6 r588same_position(T588* C,T0* a1);
T6 r588se_assigned_from(T0* a1);
T6 r588same_type(T588* C,T0* a1);
void r588make(T588* C,T0* a1);
T6 r588off(T588* C);
T6 r588conforms_to(T588* C,T0* a1);
T0* r588twin(T588* C);
T6 r354is_equal(T354* C,T0* a1);
T6 r354se_assigned_from(T0* a1);
T0* r354make(T2 a1);
T6 r354conforms_to(T354* C,T0* a1);
T0* r354resize(T0* a1,T2 a2);
T0* r354twin(T354* C);
T6 r397is_equal(T397* C,T0* a1);
void r397subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r397se_assigned_from(T0* a1);
T6 r397conforms_to(T397* C,T0* a1);
T0* r397twin(T397* C);
void r397sort_with_comparator(T0* a1,T0* a2);
T2 r539new_capacity(T2 a1);
void r539copy(T539* C,T0* a1);
void r539force(T539* C,T0* a1,T0* a2);
void r539make_clashes(T539* C,T2 a1);
T0* r539cursor_item(T539* C,T0* a1);
void r539search_position(T539* C,T0* a1);
T6 r539is_equal(T539* C,T0* a1);
void r539remove_traversing_cursor(T539* C,T0* a1);
void r539clone_slots(T539* C);
void r539keys_resize(T539* C,T2 a1);
void r539clone_clashes(T539* C);
T0* r539item(T539* C,T0* a1);
void r539move_all_cursors_after(T539* C);
void r539make_items(T539* C,T2 a1);
void r539add_traversing_cursor(T539* C,T0* a1);
T6 r539se_assigned_from(T0* a1);
T0* r539clone(T0* a1);
T6 r539same_type(T539* C,T0* a1);
void r539make(T539* C,T2 a1);
void r539clone_items(T539* C);
T6 r539cursor_after(T0* a1);
T6 r539conforms_to(T539* C,T0* a1);
T6 r539has(T539* C,T0* a1);
void r539make_keys(T539* C,T2 a1);
T2 r539hash_position(T539* C,T0* a1);
void r539cursor_forth(T539* C,T0* a1);
void r539items_resize(T539* C,T2 a1);
void r539clone_keys(T539* C);
void r539make_with_equality_testers(T539* C,T2 a1,T0* a2,T0* a3);
void r539resize(T539* C,T2 a1);
T6 r539cursor_same_position(T0* a1,T0* a2);
void r539cursor_start(T539* C,T0* a1);
void r539clashes_resize(T539* C,T2 a1);
void r539slots_resize(T539* C,T2 a1);
T0* r539twin(T539* C);
T0* r539new_cursor(T539* C);
void r539make_slots(T539* C,T2 a1);
T2 r539new_modulus(T2 a1);
T6 r539cursor_off(T0* a1);
void r168subcopy(T0* a1,T0* a2,T2 a3,T2 a4,T2 a5);
T6 r168is_equal(T168* C,T0* a1);
T6 r168se_assigned_from(T0* a1);
T6 r168conforms_to(T168* C,T0* a1);
T0* r168twin(T168* C);
T0* r168subarray(T0* a1,T2 a2,T2 a3,T2 a4);
void r290copy(T290* C,T0* a1);
T0* r290cursor_item(T0* a1);
T6 r290is_equal(T290* C,T0* a1);
void r290remove_traversing_cursor(T290* C,T0* a1);
void r290cursor_go_after(T290* C,T0* a1);
void r290move_all_cursors_after(T290* C);
void r290add_traversing_cursor(T290* C,T0* a1);
T6 r290se_assigned_from(T0* a1);
T6 r290same_type(T290* C,T0* a1);
void r290make(T290* C);
T6 r290cursor_after(T0* a1);
T6 r290conforms_to(T290* C,T0* a1);
T6 r290has(T290* C,T0* a1);
void r290cursor_search_forth(T290* C,T0* a1,T0* a2);
void r290cursor_forth(T290* C,T0* a1);
void r290cursor_start(T290* C,T0* a1);
T0* r290twin(T290* C);
void r290force_last(T290* C,T0* a1);
T0* r290new_cursor(T290* C);
T6 r290cursor_off(T0* a1);
T6 r620is_equal(T620* C,T0* a1);
T6 r620se_assigned_from(T0* a1);
T6 r620conforms_to(T620* C,T0* a1);
T6 r620test(T0* a1,T0* a2);
T0* r620twin(T620* C);
T6 r228is_equal(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
T6 r228conforms_to(T228* C,T0* a1);
T0* r228twin(T228* C);
T6 r538is_equal(T538* C,T0* a1);
T6 r538se_assigned_from(T0* a1);
void r538make(T538* C,T0* a1,T2 a2);
T6 r538conforms_to(T538* C,T0* a1);
T0* r538twin(T538* C);
T6 r251is_equal(T251* C,T0* a1);
T6 r251se_assigned_from(T0* a1);
T0* r251make(T2 a1);
T6 r251conforms_to(T251* C,T0* a1);
T0* r251resize(T0* a1,T2 a2);
T0* r251twin(T251* C);
void r361copy(T361* C,T0* a1);
T6 r361is_equal(T361* C,T0* a1);
T0* r361item(T361* C);
T6 r361same_position(T361* C,T0* a1);
T6 r361se_assigned_from(T0* a1);
T6 r361after(T361* C);
T6 r361same_type(T361* C,T0* a1);
T6 r361off(T361* C);
T6 r361conforms_to(T361* C,T0* a1);
T0* r361twin(T361* C);
void r403copy(T403* C,T0* a1);
void r403set(T403* C,T0* a1,T6 a2,T6 a3);
T6 r403is_equal(T403* C,T0* a1);
T6 r403same_position(T403* C,T0* a1);
T6 r403se_assigned_from(T0* a1);
T6 r403same_type(T403* C,T0* a1);
void r403make(T403* C,T0* a1);
T6 r403conforms_to(T403* C,T0* a1);
void r403set_after(T403* C);
T0* r403twin(T403* C);
void r333copy(T333* C,T0* a1);
void r333set(T333* C,T0* a1,T6 a2,T6 a3);
T6 r333is_equal(T333* C,T0* a1);
T6 r333same_position(T333* C,T0* a1);
T6 r333se_assigned_from(T0* a1);
T6 r333same_type(T333* C,T0* a1);
void r333make(T333* C,T0* a1);
T6 r333conforms_to(T333* C,T0* a1);
void r333set_after(T333* C);
T0* r333twin(T333* C);
void r479copy(T479* C,T0* a1);
T6 r479is_equal(T479* C,T0* a1);
T0* r479item(T479* C);
T6 r479same_position(T479* C,T0* a1);
T6 r479se_assigned_from(T0* a1);
T6 r479after(T479* C);
T6 r479same_type(T479* C,T0* a1);
T6 r479off(T479* C);
T6 r479conforms_to(T479* C,T0* a1);
T0* r479twin(T479* C);
T6 r357is_equal(T357* C,T0* a1);
T6 r357se_assigned_from(T0* a1);
T6 r357conforms_to(T357* C,T0* a1);
T0* r357twin(T357* C);
void r235copy(T235* C,T0* a1);
T6 r235extendible(T235* C,T2 a1);
T0* r235cursor_item(T235* C,T0* a1);
T6 r235is_equal(T235* C,T0* a1);
void r235remove_traversing_cursor(T235* C,T0* a1);
void r235move_all_cursors_after(T235* C);
void r235add_traversing_cursor(T235* C,T0* a1);
T6 r235se_assigned_from(T0* a1);
T0* r235clone(T0* a1);
T6 r235cursor_before(T0* a1);
T6 r235same_type(T235* C,T0* a1);
void r235make(T235* C,T2 a1);
T6 r235cursor_after(T0* a1);
T6 r235conforms_to(T235* C,T0* a1);
void r235cursor_forth(T235* C,T0* a1);
void r235resize(T235* C,T2 a1);
T6 r235cursor_same_position(T0* a1,T0* a2);
void r235cursor_start(T235* C,T0* a1);
T0* r235twin(T235* C);
T0* r235new_cursor(T235* C);
void r235put_last(T235* C,T0* a1);
T6 r235cursor_off(T0* a1);
T6 r259is_equal(T259* C,T0* a1);
T6 r259se_assigned_from(T0* a1);
T0* r259make(T2 a1);
T6 r259conforms_to(T259* C,T0* a1);
T0* r259resize(T0* a1,T2 a2);
T0* r259twin(T259* C);
void r252copy(T252* C,T0* a1);
T6 r252is_equal(T252* C,T0* a1);
void r252remove_traversing_cursor(T252* C,T0* a1);
T0* r252item(T252* C,T2 a1);
void r252move_all_cursors_after(T252* C);
void r252add_traversing_cursor(T252* C,T0* a1);
T6 r252se_assigned_from(T0* a1);
T0* r252clone(T0* a1);
T6 r252cursor_before(T0* a1);
T6 r252same_type(T252* C,T0* a1);
void r252make(T252* C,T2 a1);
T6 r252cursor_after(T0* a1);
T6 r252conforms_to(T252* C,T0* a1);
T6 r252has(T252* C,T0* a1);
T0* r252first(T252* C);
void r252resize(T252* C,T2 a1);
T6 r252cursor_same_position(T0* a1,T0* a2);
T0* r252twin(T252* C);
T0* r252new_cursor(T252* C);
T6 r252is_full(T252* C);
void r252put_last(T252* C,T0* a1);
T6 r252cursor_off(T0* a1);
void r315copy(T315* C,T0* a1);
void r315set(T315* C,T0* a1,T6 a2,T6 a3);
T6 r315is_equal(T315* C,T0* a1);
T6 r315same_position(T315* C,T0* a1);
T6 r315se_assigned_from(T0* a1);
T6 r315same_type(T315* C,T0* a1);
void r315make(T315* C,T0* a1);
T6 r315conforms_to(T315* C,T0* a1);
void r315set_after(T315* C);
T0* r315twin(T315* C);
T6 r258is_equal(T258* C,T0* a1);
T6 r258se_assigned_from(T0* a1);
T6 r258conforms_to(T258* C,T0* a1);
T6 r258test(T0* a1,T0* a2);
T0* r258twin(T258* C);
T2 r532new_capacity(T2 a1);
void r532copy(T532* C,T0* a1);
void r532force(T532* C,T0* a1,T0* a2);
void r532make_clashes(T532* C,T2 a1);
T0* r532cursor_item(T532* C,T0* a1);
void r532search_position(T532* C,T0* a1);
T6 r532is_equal(T532* C,T0* a1);
void r532remove_traversing_cursor(T532* C,T0* a1);
void r532clone_slots(T532* C);
void r532keys_resize(T532* C,T2 a1);
void r532cursor_go_after(T532* C,T0* a1);
void r532clone_clashes(T532* C);
T0* r532item(T532* C,T0* a1);
void r532move_all_cursors_after(T532* C);
void r532make_items(T532* C,T2 a1);
void r532add_traversing_cursor(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T0* r532clone(T0* a1);
T6 r532has_item(T532* C,T0* a1);
T6 r532same_type(T532* C,T0* a1);
void r532make(T532* C,T2 a1);
void r532clone_items(T532* C);
T6 r532cursor_after(T0* a1);
T6 r532conforms_to(T532* C,T0* a1);
T6 r532has(T532* C,T0* a1);
void r532make_keys(T532* C,T2 a1);
void r532cursor_search_forth(T532* C,T0* a1,T0* a2);
T2 r532hash_position(T532* C,T0* a1);
void r532cursor_forth(T532* C,T0* a1);
void r532items_resize(T532* C,T2 a1);
void r532clone_keys(T532* C);
void r532make_with_equality_testers(T532* C,T2 a1,T0* a2,T0* a3);
void r532resize(T532* C,T2 a1);
T6 r532cursor_same_position(T0* a1,T0* a2);
void r532cursor_start(T532* C,T0* a1);
void r532clashes_resize(T532* C,T2 a1);
void r532slots_resize(T532* C,T2 a1);
T0* r532twin(T532* C);
T0* r532new_cursor(T532* C);
void r532make_slots(T532* C,T2 a1);
T2 r532new_modulus(T2 a1);
T6 r532cursor_off(T0* a1);
T6 r323is_equal(T323* C,T0* a1);
T6 r323se_assigned_from(T0* a1);
T6 r323conforms_to(T323* C,T0* a1);
void r323traverse(T0* a1,T0* a2);
T0* r323twin(T323* C);
void r323flatten(T0* a1);
T6 r615is_equal(T615* C,T0* a1);
T6 r615se_assigned_from(T0* a1);
T6 r615conforms_to(T615* C,T0* a1);
T0* r615twin(T615* C);
void r576clear_all(T0* a1);
T6 r576is_equal(T576* C,T0* a1);
T6 r576se_assigned_from(T0* a1);
T0* r576make(T2 a1);
T6 r576conforms_to(T576* C,T0* a1);
T0* r576resize(T0* a1,T2 a2);
T0* r576twin(T576* C);
T6 r417is_equal(T417* C,T0* a1);
T6 r417se_assigned_from(T0* a1);
T6 r417conforms_to(T417* C,T0* a1);
void r417traverse(T0* a1,T0* a2);
T0* r417twin(T417* C);
void r417flatten(T0* a1);
T6 r401is_equal(T401* C,T0* a1);
T6 r401se_assigned_from(T0* a1);
T0* r401make(T2 a1);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401resize(T0* a1,T2 a2);
T0* r401twin(T401* C);
T6 r442is_equal(T442* C,T0* a1);
T6 r442se_assigned_from(T0* a1);
T6 r442conforms_to(T442* C,T0* a1);
T0* r442twin(T442* C);
T6 r184is_equal(T184* C,T0* a1);
T6 r184se_assigned_from(T0* a1);
T6 r184conforms_to(T184* C,T0* a1);
T6 r184less_than(T0* a1,T0* a2);
T0* r184twin(T184* C);
T6 r543is_equal(T543* C,T0* a1);
T6 r543se_assigned_from(T0* a1);
T0* r543make(T2 a1);
T6 r543conforms_to(T543* C,T0* a1);
T0* r543resize(T0* a1,T2 a2);
T0* r543twin(T543* C);
T6 r390is_equal(T390* C,T0* a1);
T6 r390se_assigned_from(T0* a1);
T6 r390conforms_to(T390* C,T0* a1);
T6 r390test(T2 a1,T2 a2);
T0* r390twin(T390* C);
void r98copy(T98* C,T0* a1);
void r98make_clashes(T98* C,T2 a1);
void r98put(T98* C,T0* a1);
T0* r98cursor_item(T98* C,T0* a1);
void r98search_position(T98* C,T0* a1);
T6 r98is_equal(T98* C,T0* a1);
void r98remove_traversing_cursor(T98* C,T0* a1);
void r98clone_slots(T98* C);
void r98clone_clashes(T98* C);
void r98move_all_cursors_after(T98* C);
void r98make_items(T98* C,T2 a1);
void r98add_traversing_cursor(T98* C,T0* a1);
T6 r98se_assigned_from(T0* a1);
T0* r98clone(T0* a1);
T6 r98same_type(T98* C,T0* a1);
void r98make(T98* C,T2 a1);
T6 r98equal(T0* a1,T0* a2);
void r98clone_items(T98* C);
T6 r98same_equality_tester(T98* C,T0* a1);
T6 r98cursor_after(T0* a1);
T6 r98conforms_to(T98* C,T0* a1);
T6 r98has(T98* C,T0* a1);
T2 r98hash_position(T98* C,T0* a1);
void r98cursor_forth(T98* C,T0* a1);
T6 r98cursor_same_position(T0* a1,T0* a2);
void r98cursor_start(T98* C,T0* a1);
T0* r98twin(T98* C);
T0* r98new_cursor(T98* C);
void r98make_slots(T98* C,T2 a1);
T2 r98new_modulus(T2 a1);
T6 r98cursor_off(T0* a1);
void r544copy(T544* C,T0* a1);
void r544set(T544* C,T0* a1,T6 a2,T6 a3);
T6 r544is_equal(T544* C,T0* a1);
T6 r544same_position(T544* C,T0* a1);
T6 r544se_assigned_from(T0* a1);
T6 r544same_type(T544* C,T0* a1);
void r544make(T544* C,T0* a1);
T6 r544conforms_to(T544* C,T0* a1);
void r544set_after(T544* C);
T0* r544twin(T544* C);
T6 r380is_equal(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
T0* r380make(T2 a1);
T6 r380conforms_to(T380* C,T0* a1);
T0* r380resize(T0* a1,T2 a2);
T0* r380twin(T380* C);
void r97copy(T97* C,T0* a1);
T6 r97is_equal(T97* C,T0* a1);
T0* r97item(T97* C);
T6 r97same_position(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
T6 r97after(T97* C);
T6 r97same_type(T97* C,T0* a1);
void r97make(T97* C,T0* a1);
T6 r97off(T97* C);
T6 r97conforms_to(T97* C,T0* a1);
T0* r97twin(T97* C);
T6 r545is_equal(T545* C,T0* a1);
T6 r545se_assigned_from(T0* a1);
T0* r545make(T2 a1);
T6 r545conforms_to(T545* C,T0* a1);
T0* r545resize(T0* a1,T2 a2);
T0* r545twin(T545* C);
T2 r63new_capacity(T2 a1);
void r63copy(T63* C,T0* a1);
T6 r63extendible(T63* C,T2 a1);
T6 r63is_equal(T63* C,T0* a1);
void r63remove_traversing_cursor(T63* C,T0* a1);
void r63move_all_cursors_after(T63* C);
void r63add_traversing_cursor(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
T0* r63clone(T0* a1);
T6 r63cursor_before(T0* a1);
T6 r63same_type(T63* C,T0* a1);
void r63make(T63* C,T2 a1);
T6 r63cursor_after(T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
void r63resize(T63* C,T2 a1);
T6 r63cursor_same_position(T0* a1,T0* a2);
T0* r63twin(T63* C);
void r63force_last(T63* C,T0* a1);
T0* r63new_cursor(T63* C);
T6 r63is_full(T63* C);
void r63put_last(T63* C,T0* a1);
T6 r63cursor_off(T0* a1);
void r554copy(T554* C,T0* a1);
T6 r554is_equal(T554* C,T0* a1);
T6 r554same_position(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
T6 r554same_type(T554* C,T0* a1);
T6 r554off(T554* C);
T6 r554conforms_to(T554* C,T0* a1);
T0* r554twin(T554* C);
T6 r590is_equal(T590* C,T0* a1);
T6 r590se_assigned_from(T0* a1);
T6 r590conforms_to(T590* C,T0* a1);
T6 r590test(T0* a1,T0* a2);
T0* r590twin(T590* C);
T6 r396is_equal(T396* C,T0* a1);
T6 r396se_assigned_from(T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
T6 r396less_than(T0* a1,T0* a2);
T0* r396twin(T396* C);
T6 r470is_equal(T470* C,T0* a1);
T6 r470se_assigned_from(T0* a1);
T0* r470make(T2 a1);
T6 r470conforms_to(T470* C,T0* a1);
T0* r470resize(T0* a1,T2 a2);
T0* r470twin(T470* C);
T6 r114is_equal(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114test(T0* a1,T0* a2);
T0* r114twin(T114* C);
void r412copy(T412* C,T0* a1);
void r412append_last(T412* C,T0* a1);
T0* r412cursor_item(T0* a1);
T6 r412is_equal(T412* C,T0* a1);
void r412remove_traversing_cursor(T412* C,T0* a1);
void r412cursor_go_after(T412* C,T0* a1);
void r412move_all_cursors_after(T412* C);
void r412add_traversing_cursor(T412* C,T0* a1);
T6 r412se_assigned_from(T0* a1);
T6 r412same_type(T412* C,T0* a1);
void r412make(T412* C);
T6 r412cursor_after(T0* a1);
T6 r412conforms_to(T412* C,T0* a1);
T6 r412has(T412* C,T0* a1);
void r412cursor_search_forth(T412* C,T0* a1,T0* a2);
void r412cursor_forth(T412* C,T0* a1);
void r412make_from_linear(T412* C,T0* a1);
void r412cursor_start(T412* C,T0* a1);
T0* r412twin(T412* C);
void r412force_last(T412* C,T0* a1);
T0* r412new_cursor(T412* C);
T6 r412cursor_off(T0* a1);
void r454copy(T454* C,T0* a1);
void r454clear_items(T454* C,T2 a1,T2 a2);
void r454wipe_out(T454* C);
T6 r454is_equal(T454* C,T0* a1);
void r454remove_traversing_cursor(T454* C,T0* a1);
void r454move_all_cursors_after(T454* C);
void r454add_traversing_cursor(T454* C,T0* a1);
T6 r454se_assigned_from(T0* a1);
T0* r454clone(T0* a1);
T6 r454cursor_before(T0* a1);
T6 r454same_type(T454* C,T0* a1);
void r454make(T454* C,T2 a1);
T6 r454cursor_after(T0* a1);
T6 r454conforms_to(T454* C,T0* a1);
T6 r454cursor_same_position(T0* a1,T0* a2);
T0* r454twin(T454* C);
T0* r454new_cursor(T454* C);
void r454put_last(T454* C,T0* a1);
T6 r454cursor_off(T0* a1);
T6 r346is_equal(T346* C,T0* a1);
T6 r346se_assigned_from(T0* a1);
T0* r346make(T2 a1);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346resize(T0* a1,T2 a2);
T0* r346twin(T346* C);
void r452copy(T452* C,T0* a1);
T6 r452is_equal(T452* C,T0* a1);
T6 r452same_position(T452* C,T0* a1);
T6 r452se_assigned_from(T0* a1);
T6 r452same_type(T452* C,T0* a1);
void r452make(T452* C,T0* a1);
T6 r452off(T452* C);
T6 r452conforms_to(T452* C,T0* a1);
T0* r452twin(T452* C);
void r162copy(T162* C,T0* a1);
T2 r162last(T162* C);
T6 r162is_equal(T162* C,T0* a1);
void r162remove_traversing_cursor(T162* C,T0* a1);
void r162move_all_cursors_after(T162* C);
void r162add_traversing_cursor(T162* C,T0* a1);
T6 r162se_assigned_from(T0* a1);
T0* r162clone(T0* a1);
T6 r162cursor_before(T0* a1);
T6 r162same_type(T162* C,T0* a1);
void r162make(T162* C,T2 a1);
T6 r162cursor_after(T0* a1);
T6 r162conforms_to(T162* C,T0* a1);
T6 r162cursor_same_position(T0* a1,T0* a2);
T0* r162twin(T162* C);
T0* r162new_cursor(T162* C);
void r162put_last(T162* C,T2 a1);
T6 r162cursor_off(T0* a1);
T6 r619is_equal(T619* C,T0* a1);
T6 r619se_assigned_from(T0* a1);
T6 r619conforms_to(T619* C,T0* a1);
T0* r619twin(T619* C);
void r214copy(T214* C,T0* a1);
T6 r214is_equal(T214* C,T0* a1);
T6 r214same_position(T214* C,T0* a1);
T6 r214se_assigned_from(T0* a1);
T6 r214same_type(T214* C,T0* a1);
T6 r214off(T214* C);
T6 r214conforms_to(T214* C,T0* a1);
T0* r214twin(T214* C);
T6 r291is_equal(T291* C,T0* a1);
T6 r291se_assigned_from(T0* a1);
T6 r291conforms_to(T291* C,T0* a1);
T0* r291twin(T291* C);
extern T0*oBC12string_;
T6 r561is_equal(T561* C,T0* a1);
extern T0*oBC14arguments;
extern int fBC14arguments;
T0* r561arguments(void);
T6 r561se_assigned_from(T0* a1);
void r561make(T561* C,T0* a1,T2 a2,T0* a3,T0* a4,T0* a5);
T0* r561message(T561* C,T0* a1);
T6 r561conforms_to(T561* C,T0* a1);
T0* r561twin(T561* C);
T0* r561default_message(T561* C);
T6 r524is_equal(T524* C,T0* a1);
T0* r524arguments(void);
T6 r524se_assigned_from(T0* a1);
void r524make(T524* C,T0* a1,T2 a2);
T0* r524message(T524* C,T0* a1);
T6 r524conforms_to(T524* C,T0* a1);
T0* r524twin(T524* C);
T0* r524default_message(T524* C);
T6 r487is_closed(T487* C);
void r487old_close(T487* C);
T6 r487is_equal(T487* C,T0* a1);
T2 r487read_to_string(T487* C,T0* a1,T2 a2,T2 a3);
void r487open_read(T487* C);
T6 r487se_assigned_from(T0* a1);
void r487old_read_character(T487* C);
T6 r487old_end_of_file(T487* C);
void r487read_character(T487* C);
void r487close(T487* C);
void r487make(T487* C,T0* a1);
T6 r487conforms_to(T487* C,T0* a1);
void r487connect_to(T487* C,T0* a1);
T0* r487twin(T487* C);
void r487old_open_read(T487* C);
T6 r523is_equal(T523* C,T0* a1);
T0* r523arguments(void);
T6 r523se_assigned_from(T0* a1);
void r523make(T523* C,T0* a1,T2 a2,T0* a3);
T0* r523message(T523* C,T0* a1);
T6 r523conforms_to(T523* C,T0* a1);
T0* r523twin(T523* C);
T0* r523default_message(T523* C);
T6 r613is_equal(T613* C,T0* a1);
T0* r613arguments(void);
T6 r613se_assigned_from(T0* a1);
void r613make(T613* C,T0* a1);
T0* r613message(T613* C,T0* a1);
T6 r613conforms_to(T613* C,T0* a1);
T0* r613twin(T613* C);
T0* r613default_message(T613* C);
T6 r578is_equal(T578* C,T0* a1);
T6 r578se_assigned_from(T0* a1);
void r578out_in_tagged_out_memory(T578* C);
T6 r578conforms_to(T578* C,T0* a1);
T0* r578twin(T578* C);
T6 r557is_equal(T557* C,T0* a1);
T0* r557arguments(void);
T6 r557se_assigned_from(T0* a1);
void r557make(T557* C,T0* a1,T2 a2,T0* a3);
T0* r557message(T557* C,T0* a1);
T6 r557conforms_to(T557* C,T0* a1);
T0* r557twin(T557* C);
T0* r557default_message(T557* C);
T6 r584is_equal(T584* C,T0* a1);
T2 r584read_to_string(T584* C,T0* a1,T2 a2,T2 a3);
T6 r584se_assigned_from(T0* a1);
void r584old_read_character(T584* C);
T6 r584old_end_of_file(T584* C);
void r584read_character(T584* C);
void r584make(T584* C);
T6 r584conforms_to(T584* C,T0* a1);
T0* r584twin(T584* C);
void r62append_dollar_n_to_string(T62* C,T2 a1,T2 a2,T0* a3);
T6 r62is_equal(T62* C,T0* a1);
extern T0*oBC38integer_formatter_;
void r62make_generic(T62* C,T2 a1,T0* a2,T0* a3);
T6 r62se_assigned_from(T0* a1);
void r62append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r62append_untyped_dollar_dollar_to_string(T0* a1);
void r62make(T62* C,T2 a1,T0* a2);
T6 r62conforms_to(T62* C,T0* a1);
void r62print_dollar_dollar_declaration(T62* C,T0* a1);
void r62print_dollar_dollar_finalization(T62* C,T0* a1);
void r62print_conversion_routine(T62* C,T0* a1);
T0* r62twin(T62* C);
void r62append_dollar_dollar_to_string(T62* C,T0* a1);
void r62make_anchored(T62* C,T2 a1,T0* a2);
T6 r136is_equal(T136* C,T0* a1);
T6 r136se_assigned_from(T0* a1);
void r136report_warning_message(T136* C,T0* a1);
extern T0*oBC13std;
T0* r136message(T0* a1);
T6 r136conforms_to(T136* C,T0* a1);
T0* r136twin(T136* C);
void r136report_info_message(T136* C,T0* a1);
void r136make_standard(T136* C);
void r136report_error_message(T136* C,T0* a1);
T0* r518substring(T518* C,T2 a1,T2 a2);
void r518fill_from_string(T518* C,T0* a1,T2 a2);
T6 r518is_equal(T518* C,T0* a1);
T2 r518fill_from_stream(T518* C,T0* a1,T2 a2,T2 a3);
T6 r518se_assigned_from(T0* a1);
void r518move_left(T518* C,T2 a1,T2 a2,T2 a3);
void r518make(T518* C,T2 a1);
T6 r518conforms_to(T518* C,T0* a1);
void r518resize(T518* C,T2 a1);
T0* r518twin(T518* C);
T6 r286is_equal(T286* C,T0* a1);
T0* r286arguments(void);
T6 r286se_assigned_from(T0* a1);
void r286make(T286* C,T0* a1);
T0* r286message(T286* C,T0* a1);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286twin(T286* C);
T0* r286default_message(T286* C);
T6 r18is_closed(T18* C);
void r18old_close(T18* C);
T6 r18is_equal(T18* C,T0* a1);
T6 r18se_assigned_from(T0* a1);
void r18old_open_write(T18* C);
void r18close(T18* C);
void r18make(T18* C,T0* a1);
void r18old_put_string(T18* C,T0* a1);
T6 r18conforms_to(T18* C,T0* a1);
void r18connect_to(T18* C,T0* a1);
void r18put_integer(T18* C,T2 a1);
void r18put_line(T18* C,T0* a1);
T0* r18twin(T18* C);
void r18open_write(T18* C);
T6 r582is_equal(T582* C,T0* a1);
T0* r582arguments(void);
T6 r582se_assigned_from(T0* a1);
void r582make(T582* C,T0* a1,T2 a2);
T0* r582message(T582* C,T0* a1);
T6 r582conforms_to(T582* C,T0* a1);
T0* r582twin(T582* C);
T0* r582default_message(T582* C);
T6 r583is_equal(T583* C,T0* a1);
T0* r583arguments(void);
T6 r583se_assigned_from(T0* a1);
void r583make(T583* C,T0* a1,T2 a2,T0* a3);
T0* r583message(T583* C,T0* a1);
T6 r583conforms_to(T583* C,T0* a1);
T0* r583twin(T583* C);
T0* r583default_message(T583* C);
T6 r525is_equal(T525* C,T0* a1);
T0* r525arguments(void);
T6 r525se_assigned_from(T0* a1);
void r525make(T525* C,T0* a1,T2 a2,T0* a3);
T0* r525message(T525* C,T0* a1);
T6 r525conforms_to(T525* C,T0* a1);
T0* r525twin(T525* C);
T0* r525default_message(T525* C);
void r74put_symbol(T74* C,T0* a1);
T6 r74is_equal(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
void r74print_rule(T74* C,T0* a1);
void r74make(T74* C,T2 a1,T0* a2,T0* a3);
T6 r74conforms_to(T74* C,T0* a1);
T6 r74_px_60(T74* C,T0* a1);
T0* r74twin(T74* C);
void r496report_multiple_start_declarations_error(T496* C);
void r496yy_do_action(T496* C,T2 a1);
void r496report_variable_declared_as_token_error(T496* C,T0* a1);
T0* r496cloned_string(T0* a1);
extern T0*oBC498unknown_type;
extern int fBC498unknown_type;
T0* r496unknown_type(void);
extern T0*oBC496yytable_template;
extern int fBC496yytable_template;
T0* r496yytable_template(void);
T0* r496new_symbol(T496* C,T0* a1);
void r496make_parser_skeleton(T496* C);
void r496report_undefined_string_token_error(T496* C,T0* a1);
void r496report_start_symbol_token_error(T496* C);
T2 r496yy_at_beginning_of_line(T496* C);
T0* r496new_nonassoc_char_terminal(T496* C,T0* a1,T2 a2);
void r496fatal_error(T0* a1);
T0* r496yytype1(T0* a1);
T0* r496new_type(T496* C,T0* a1);
T2 r496yytype2(T0* a1);
T0* r496yytype3(T0* a1);
T0* r496yytype4(T0* a1);
T0* r496yytype5(T0* a1);
void r496put_symbol(T496* C,T0* a1,T0* a2);
extern T0*oBC505no_action;
extern int fBC505no_action;
T0* r496no_action(T496* C);
void r496report_two_strings_token_error(T496* C,T0* a1,T0* a2,T0* a3);
void r496parse_file(T496* C,T0* a1);
void r496parse(T496* C);
T0* r496new_rule(T496* C,T0* a1);
void r496report_dangerous_dollar_n_warning(T496* C,T2 a1);
T0* r496new_dummy_variable(T496* C);
void r496set_input_buffer(T496* C,T0* a1);
T0* r496new_char_terminal(T496* C,T0* a1,T0* a2);
T2 r496yy_translate(T496* C,T2 a1);
void r496report_prec_not_token_error(T496* C,T0* a1);
extern T0*oBC497yy_ec_template;
extern int fBC497yy_ec_template;
T0* r496yy_ec_template(void);
T0* r496text_substring(T496* C,T2 a1,T2 a2);
void r496yy_execute_action(T496* C,T2 a1);
extern T0*oBC496yytranslate_template;
extern int fBC496yytranslate_template;
T0* r496yytranslate_template(void);
void r496clear_stacks(T496* C);
extern T0*oBC497yy_def_template;
extern int fBC497yy_def_template;
T0* r496yy_def_template(void);
void r496set_token_id(T496* C,T0* a1,T2 a2);
void r496process_dollar_n(T496* C,T2 a1,T0* a2);
T3 r496text_item(T496* C,T2 a1);
T0* r496new_anchored_type(T496* C,T0* a1);
void r496report_token_declared_twice_error(T496* C,T0* a1);
void r496yy_load_input_buffer(T496* C);
void r496report_undefined_symbol_error(T496* C,T0* a1);
void r496report_variable_declared_twice_error(T496* C,T0* a1);
extern T0*oBC496yyr1_template;
extern int fBC496yyr1_template;
T0* r496yyr1_template(void);
void r496make_with_buffer(T496* C,T0* a1);
T0* r496new_nonterminal(T496* C,T0* a1,T0* a2);
void r496process_rule(T496* C,T0* a1);
T2 r496yy_null_trans_state(T496* C,T2 a1);
T0* r496new_variable(T496* C,T0* a1);
extern T0*oBC497yy_accept_template;
extern int fBC497yy_accept_template;
T0* r496yy_accept_template(void);
void r496read_token(T496* C);
void r496report_invalid_dollar_n_error(T496* C,T2 a1);
T0* r496new_token(T496* C,T0* a1);
extern T0*oBC496yyr2_template;
extern int fBC496yyr2_template;
T0* r496yyr2_template(void);
T0* r496new_basic_type(T496* C,T0* a1);
extern T0*oBC505no_type;
extern int fBC505no_type;
T0* r496no_type(void);
T2 r496yy_previous_state(T496* C);
extern T0*oBC496yypgoto_template;
extern int fBC496yypgoto_template;
T0* r496yypgoto_template(void);
void r496yy_refill_input_buffer(T496* C);
T0* r496yy_fixed_array(T0* a1);
T6 r496conforms_to(T496* C,T0* a1);
extern T0*oBC497yy_meta_template;
extern int fBC497yy_meta_template;
T0* r496yy_meta_template(void);
void r496process_symbols(T496* C);
void r496report_prec_specified_twice_error(T496* C);
T6 r496is_terminal(T496* C,T0* a1);
extern T0*oBC497yy_base_template;
extern int fBC497yy_base_template;
T0* r496yy_base_template(void);
void r496initialize_grammar(T496* C);
T0* r496twin(T496* C);
void r496report_two_token_ids_token_error(T496* C,T0* a1,T2 a2,T2 a3);
T2 r496text_count(T496* C);
T0* r496new_file_buffer(T0* a1);
T0* r496new_string_token(T496* C,T0* a1);
void r496yy_initialize(T496* C);
T0* r496text(T496* C);
void r496report_token_id_used_twice_warning(T496* C,T0* a1,T0* a2);
void r496report_rule_declared_twice_warning(T496* C,T0* a1);
void r496report_no_rules_error(T496* C);
void r496set_start_symbol(T496* C);
void r496set_precedence(T496* C,T0* a1,T2 a2);
void r496make_yacc_scanner(T496* C,T0* a1);
void r496report_lhs_symbol_token_error(T496* C,T0* a1);
extern T0*oBC497yy_nxt_template;
extern int fBC497yy_nxt_template;
T0* r496yy_nxt_template(void);
T0* r496new_left_char_terminal(T496* C,T0* a1,T2 a2);
void r496yy_build_parser_tables(T496* C);
void r496report_missing_characters_error(T496* C,T0* a1);
T0* r496new_generic_type(T496* C,T0* a1,T0* a2);
T6 r496is_equal(T496* C,T0* a1);
void r496report_unknown_start_symbol_error(T496* C);
extern T0*oBC504empty_buffer;
extern int fBC504empty_buffer;
T0* r496empty_buffer(void);
void r496report_error(T496* C,T0* a1);
void r496process_dollar_dollar(T496* C,T0* a1);
void r496report_token_declared_as_variable_error(T496* C,T0* a1);
T0* r496new_terminal(T496* C,T0* a1,T0* a2);
extern T0*oBC496yydefact_template;
extern int fBC496yydefact_template;
T0* r496yydefact_template(void);
T0* r496new_nonassoc_terminal(T496* C,T0* a1,T2 a2);
extern T0*oBC497yy_chk_template;
extern int fBC497yy_chk_template;
T0* r496yy_chk_template(void);
void r496report_string_token_defined_twice_error(T496* C,T0* a1,T0* a2,T0* a3);
void r496set_literal_string(T496* C,T0* a1,T0* a2);
extern T0*oBC496yycheck_template;
extern int fBC496yycheck_template;
T0* r496yycheck_template(void);
T0* r496new_right_char_terminal(T496* C,T0* a1,T2 a2);
T0* r496new_char_token(T496* C,T0* a1);
T0* r496filename(T496* C);
void r496make(T496* C,T0* a1);
T0* r496yyfixed_array(T0* a1);
extern T0*oBC496yydefgoto_template;
extern int fBC496yydefgoto_template;
T0* r496yydefgoto_template(void);
void r496yy_clear_all(T496* C);
void r496yy_set_content(T496* C,T0* a1);
void r496put_action(T496* C,T0* a1,T0* a2);
void r496report_precedence_defined_twice_error(T496* C,T0* a1);
extern T0*oBC496yypact_template;
extern int fBC496yypact_template;
T0* r496yypact_template(void);
void r496report_invalid_string_token_error(T496* C,T0* a1);
void r496set_start_condition(T496* C,T2 a1);
void r496yy_execute_eof_action(T496* C,T2 a1);
T0* r496new_left_terminal(T496* C,T0* a1,T2 a2);
T6 r496is_nonterminal(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
void r496yy_build_tables(T496* C);
void r496report_null_integer_error(T496* C);
T0* r496new_right_terminal(T496* C,T0* a1,T2 a2);
T6 r612is_equal(T612* C,T0* a1);
T0* r612arguments(void);
T6 r612se_assigned_from(T0* a1);
void r612make(T612* C,T0* a1);
T0* r612message(T612* C,T0* a1);
T6 r612conforms_to(T612* C,T0* a1);
T0* r612twin(T612* C);
T0* r612default_message(T612* C);
T6 r526is_equal(T526* C,T0* a1);
T0* r526arguments(void);
T6 r526se_assigned_from(T0* a1);
void r526make(T526* C,T0* a1,T2 a2,T2 a3);
T0* r526message(T526* C,T0* a1);
T6 r526conforms_to(T526* C,T0* a1);
T0* r526twin(T526* C);
T0* r526default_message(T526* C);
void r37build_action_tables(T37* C);
void r37print_separated_actions(T37* C,T0* a1);
void r37print_constants(T37* C,T0* a1);
extern T0*oBC38array_formatter_;
extern T0*oBC37portion_sorter;
extern int fBC37portion_sorter;
T0* r37portion_sorter(void);
void r37print_eiffel_array(T37* C,T0* a1,T0* a2,T0* a3);
T6 r37is_equal(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
extern T0*oBC36integer_array_;
void r37build_yyr(T37* C);
extern T0*oBC38string_formatter_;
void r37print_eiffel_header(T37* C,T0* a1);
void r37print_eiffel_tables(T37* C,T0* a1);
void r37make(T37* C,T0* a1);
void r37build_yytranslate(T37* C);
void r37put_yydefact(T37* C,T0* a1,T0* a2);
void r37put_yydefgoto(T37* C,T0* a1,T0* a2);
T6 r37conforms_to(T37* C,T0* a1);
void r37print_build_parser_tables(T0* a1);
void r37print_eiffel_code(T37* C,T0* a1);
void r37print_parser(T37* C,T6 a1,T6 a2,T0* a3);
void r37print_conversion_routines(T37* C,T0* a1);
void r37print_actions(T37* C,T0* a1);
T0* r37twin(T37* C);
void r37print_token_class(T37* C,T0* a1,T0* a2,T0* a3);
void r37print_token_codes(T37* C,T0* a1);
void r550append_dollar_n_to_string(T550* C,T2 a1,T2 a2,T0* a3);
T6 r550is_equal(T550* C,T0* a1);
void r550make_generic(T550* C,T2 a1,T0* a2,T0* a3);
T6 r550se_assigned_from(T0* a1);
void r550append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r550append_untyped_dollar_dollar_to_string(T0* a1);
void r550make(T550* C,T2 a1,T0* a2);
T6 r550conforms_to(T550* C,T0* a1);
void r550print_dollar_dollar_declaration(T550* C,T0* a1);
void r550print_dollar_dollar_finalization(T550* C,T0* a1);
void r550print_conversion_routine(T550* C,T0* a1);
T0* r550twin(T550* C);
void r550append_dollar_dollar_to_string(T550* C,T0* a1);
void r550make_anchored(T550* C,T2 a1,T0* a2);
T6 r161order_is_equal(T161* C,T0* a1);
T6 r161is_equal(T161* C,T0* a1);
void r161make_state(T161* C,T2 a1,T0* a2,T0* a3);
T6 r161se_assigned_from(T0* a1);
void r161make_symbol(T161* C,T2 a1,T0* a2,T0* a3);
T6 r161conforms_to(T161* C,T0* a1);
T6 r161same_portion(T161* C,T0* a1);
T6 r161_px_60(T161* C,T0* a1);
T0* r161twin(T161* C);
T6 r558is_equal(T558* C,T0* a1);
T0* r558arguments(void);
T6 r558se_assigned_from(T0* a1);
void r558make(T558* C,T0* a1,T2 a2,T0* a3);
T0* r558message(T558* C,T0* a1);
T6 r558conforms_to(T558* C,T0* a1);
T0* r558twin(T558* C);
T0* r558default_message(T558* C);
T6 r34is_equal(T34* C,T0* a1);
T0* r34arguments(void);
T6 r34se_assigned_from(T0* a1);
void r34make(T34* C,T0* a1);
T0* r34message(T34* C,T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
T0* r34twin(T34* C);
T0* r34default_message(T34* C);
T6 r234is_equal(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
void r234make(T234* C,T0* a1);
T6 r234conforms_to(T234* C,T0* a1);
T6 r234_px_60(T234* C,T0* a1);
void r234build_lookaheads(T234* C);
T0* r234twin(T234* C);
T6 r530is_equal(T530* C,T0* a1);
T0* r530arguments(void);
T6 r530se_assigned_from(T0* a1);
void r530make(T530* C,T0* a1,T0* a2,T0* a3,T2 a4);
T0* r530message(T530* C,T0* a1);
T6 r530conforms_to(T530* C,T0* a1);
T0* r530twin(T530* C);
T0* r530default_message(T530* C);
T6 r565is_equal(T565* C,T0* a1);
T0* r565arguments(void);
T6 r565se_assigned_from(T0* a1);
void r565make(T565* C,T0* a1);
T0* r565message(T565* C,T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
T0* r565twin(T565* C);
T0* r565default_message(T565* C);
T6 r527is_equal(T527* C,T0* a1);
T0* r527arguments(void);
T6 r527se_assigned_from(T0* a1);
void r527make(T527* C,T0* a1,T2 a2,T2 a3);
T0* r527message(T527* C,T0* a1);
T6 r527conforms_to(T527* C,T0* a1);
T0* r527twin(T527* C);
T0* r527default_message(T527* C);
T6 r546is_equal(T546* C,T0* a1);
T0* r546arguments(void);
T6 r546se_assigned_from(T0* a1);
void r546make(T546* C,T0* a1,T2 a2);
T0* r546message(T546* C,T0* a1);
T6 r546conforms_to(T546* C,T0* a1);
T0* r546twin(T546* C);
T0* r546default_message(T546* C);
T6 r580is_equal(T580* C,T0* a1);
T0* r580arguments(void);
T6 r580se_assigned_from(T0* a1);
void r580make(T580* C,T0* a1,T2 a2,T0* a3);
T0* r580message(T580* C,T0* a1);
T6 r580conforms_to(T580* C,T0* a1);
T0* r580twin(T580* C);
T0* r580default_message(T580* C);
T6 r198is_equal(T198* C,T0* a1);
T6 r198se_assigned_from(T0* a1);
void r198make(T198* C,T0* a1,T0* a2);
T6 r198conforms_to(T198* C,T0* a1);
T0* r198twin(T198* C);
T6 r564is_equal(T564* C,T0* a1);
T0* r564arguments(void);
T6 r564se_assigned_from(T0* a1);
void r564make(T564* C,T0* a1,T2 a2,T0* a3);
T0* r564message(T564* C,T0* a1);
T6 r564conforms_to(T564* C,T0* a1);
T0* r564twin(T564* C);
T0* r564default_message(T564* C);
T6 r120is_right_associative(T120* C);
void r120print_token(T120* C,T0* a1,T0* a2);
T6 r120is_non_associative(T120* C);
T6 r120is_equal(T120* C,T0* a1);
T6 r120se_assigned_from(T0* a1);
void r120make(T120* C,T2 a1,T0* a2,T0* a3);
T6 r120conforms_to(T120* C,T0* a1);
T6 r120has_identifier(T120* C);
T6 r120is_left_associative(T120* C);
T0* r120twin(T120* C);
void r40put_final_state(T40* C);
T6 r40is_equal(T40* C,T0* a1);
void r40print_machine(T40* C,T0* a1);
T6 r40se_assigned_from(T0* a1);
void r40resolve_conflicts(T40* C,T0* a1);
void r40build_nondeterministic(T40* C);
void r40make(T40* C,T0* a1);
T6 r40conforms_to(T40* C,T0* a1);
void r40resolve_conflicts_verbose(T40* C,T0* a1,T0* a2);
extern T0*oBC40no_type;
extern int fBC40no_type;
T0* r40no_type(void);
void r40put_closure_positions(T0* a1,T0* a2);
T0* r40twin(T40* C);
void r40build_transitions(T40* C,T0* a1);
void r40build_deterministic(T40* C);
void r40put_start_state(T40* C);
void r40build_derives(T40* C);
T0* r40new_state(T40* C,T0* a1);
void r76put_rule(T76* C,T0* a1);
T6 r76is_equal(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
T0* r76transition(T76* C,T0* a1);
void r76make(T76* C,T2 a1,T0* a2,T0* a3);
T6 r76conforms_to(T76* C,T0* a1);
T0* r76twin(T76* C);
void r76print_variable(T76* C,T0* a1,T0* a2);
void r165put_position(T165* C,T0* a1);
extern T0*oBC165position_sorter;
extern int fBC165position_sorter;
T0* r165position_sorter(void);
void r165remove_shift(T165* C,T0* a1);
T6 r165is_equal(T165* C,T0* a1);
T6 r165has_shift(T165* C,T0* a1);
void r165print_state(T165* C,T0* a1);
T6 r165se_assigned_from(T0* a1);
T0* r165resolve_conflicts(T165* C);
T6 r165same_type(T165* C,T0* a1);
void r165make(T165* C,T2 a1,T0* a2);
void r165set_lookahead_needed(T165* C);
void r165put_transition(T165* C,T0* a1,T0* a2);
T2 r165reduce_reduce_count(T165* C);
T6 r165conforms_to(T165* C,T0* a1);
T0* r165shift(T165* C,T0* a1);
T6 r165same_state(T165* C,T0* a1);
void r165print_reductions(T165* C,T0* a1);
T0* r165twin(T165* C);
T2 r165shift_reduce_count(T165* C);
T6 r542is_equal(T542* C,T0* a1);
T0* r542arguments(void);
T6 r542se_assigned_from(T0* a1);
void r542make(T542* C,T0* a1,T2 a2,T0* a3);
T0* r542message(T542* C,T0* a1);
T6 r542conforms_to(T542* C,T0* a1);
T0* r542twin(T542* C);
T0* r542default_message(T542* C);
void r517set_position(T517* C,T2 a1,T2 a2,T2 a3);
T6 r517is_equal(T517* C,T0* a1);
T6 r517se_assigned_from(T0* a1);
void r517make(T517* C,T0* a1);
T6 r517conforms_to(T517* C,T0* a1);
void r517make_from_buffer(T517* C,T0* a1);
T0* r517twin(T517* C);
T6 r537is_equal(T537* C,T0* a1);
T0* r537arguments(void);
T6 r537se_assigned_from(T0* a1);
void r537make(T537* C,T0* a1,T2 a2,T0* a3);
T0* r537message(T537* C,T0* a1);
T6 r537conforms_to(T537* C,T0* a1);
T0* r537twin(T537* C);
T0* r537default_message(T537* C);
T6 r581is_equal(T581* C,T0* a1);
T0* r581arguments(void);
T6 r581se_assigned_from(T0* a1);
void r581make(T581* C,T0* a1,T2 a2,T0* a3);
T0* r581message(T581* C,T0* a1);
T6 r581conforms_to(T581* C,T0* a1);
T0* r581twin(T581* C);
T0* r581default_message(T581* C);
T6 r486is_equal(T486* C,T0* a1);
T0* r486arguments(void);
T6 r486se_assigned_from(T0* a1);
void r486make(T486* C,T0* a1);
T0* r486message(T486* C,T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
T0* r486default_message(T486* C);
T0* r577new_action(T0* a1);
T6 r577is_equal(T577* C,T0* a1);
T6 r577se_assigned_from(T0* a1);
T6 r577conforms_to(T577* C,T0* a1);
T0* r577twin(T577* C);
T6 r560is_equal(T560* C,T0* a1);
T0* r560arguments(void);
T6 r560se_assigned_from(T0* a1);
void r560make(T560* C,T0* a1,T2 a2,T0* a3,T0* a4,T0* a5);
T0* r560message(T560* C,T0* a1);
T6 r560conforms_to(T560* C,T0* a1);
T0* r560twin(T560* C);
T0* r560default_message(T560* C);
T6 r579is_equal(T579* C,T0* a1);
T0* r579arguments(void);
T6 r579se_assigned_from(T0* a1);
void r579make(T579* C,T0* a1,T2 a2,T0* a3);
T0* r579message(T579* C,T0* a1);
T6 r579conforms_to(T579* C,T0* a1);
T0* r579twin(T579* C);
T0* r579default_message(T579* C);
void r142copy(T142* C,T0* a1);
T0* r142substring(T142* C,T2 a1,T2 a2);
void r142reset_byte_index_cache(T142* C);
void r142wipe_out(T142* C);
T2 r142item_code(T142* C,T2 a1);
T3 r142character_item_at_byte_index(T142* C,T2 a1);
void r142put(T142* C,T3 a1,T2 a2);
T6 r142is_equal(T142* C,T0* a1);
T3 r142item(T142* C,T2 a1);
extern T0*oBC128integer_;
void r142resize_byte_storage(T142* C,T2 a1);
void r142append(T142* C,T0* a1);
T6 r142se_assigned_from(T0* a1);
T2 r142byte_index(T142* C,T2 a1);
T0* r142clone(T0* a1);
void r142move_bytes_right(T142* C,T2 a1,T2 a2);
void r142set_count(T142* C,T2 a1);
T2 r142next_byte_index(T142* C,T2 a1);
T6 r142same_type(T142* C,T0* a1);
void r142remove_tail(T142* C,T2 a1);
void r142make(T142* C,T2 a1);
void r142old_make_filled(T142* C,T3 a1,T2 a2);
void r142append_substring(T142* C,T0* a1,T2 a2,T2 a3);
T2 r142item_code_at_byte_index(T142* C,T2 a1);
extern T0*oBC141platform;
T0* r142string(T142* C);
void r142extend(T142* C,T3 a1);
T0* r142_px_43(T142* C,T0* a1);
T2 r142hash_code(T142* C);
T0* r142prefixed_string(T142* C,T0* a1);
T6 r142conforms_to(T142* C,T0* a1);
void r142keep_head(T142* C,T2 a1);
T2 r142to_integer(T142* C);
T0* r142new_empty_string(T2 a1);
void r142append_character(T142* C,T3 a1);
void r142make_from_substring(T142* C,T0* a1,T2 a2,T2 a3);
void r142put_code_at_byte_index(T142* C,T2 a1,T2 a2,T2 a3);
void r142fill_with(T142* C,T3 a1);
void r142put_character_at_byte_index(T142* C,T3 a1,T2 a2,T2 a3);
void r142resize(T142* C,T2 a1);
void r142put_substring_at_byte_index(T142* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r142to_upper(T142* C);
extern T0*oBC144utf8;
void r142move_bytes_left(T142* C,T2 a1,T2 a2);
void r142old_make(T142* C,T2 a1);
T8 r142to_external(T142* C);
void r142old_make_from_string(T142* C,T0* a1);
void r142to_lower(T142* C);
T0* r142twin(T142* C);
T0* r142to_utf8(T142* C);
extern T0*oBC139unicode;
void r142swap(T142* C,T2 a1,T2 a2);
void r41put_type(T41* C,T0* a1);
void r41mark_useful_rules(T41* C);
void r41put_rule(T41* C,T0* a1);
T6 r41is_equal(T41* C,T0* a1);
void r41put_variable(T41* C,T0* a1);
T2 r41max_rhs(T41* C);
T6 r41se_assigned_from(T0* a1);
T0* r41clone(T0* a1);
void r41make(T41* C);
T6 r41conforms_to(T41* C,T0* a1);
void r41reduce_verbose(T41* C,T0* a1,T0* a2);
void r41put_token(T41* C,T0* a1);
void r41print_grammar(T41* C,T0* a1);
T0* r41twin(T41* C);
void r41mark_useful_variables(T41* C);
void r41set_nullable(T41* C);
void r41reduce(T41* C,T0* a1);
void r41traverse_variable(T0* a1);
T6 r559is_equal(T559* C,T0* a1);
T0* r559arguments(void);
T6 r559se_assigned_from(T0* a1);
void r559make(T559* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
T0* r559message(T559* C,T0* a1);
T6 r559conforms_to(T559* C,T0* a1);
T0* r559twin(T559* C);
T0* r559default_message(T559* C);
T6 r96is_equal(T96* C,T0* a1);
void r96make_generic(T96* C,T2 a1,T0* a2,T0* a3);
T6 r96se_assigned_from(T0* a1);
void r96append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r96append_untyped_dollar_dollar_to_string(T0* a1);
void r96make(T96* C,T2 a1,T0* a2);
T6 r96conforms_to(T96* C,T0* a1);
T0* r96twin(T96* C);
void r96print_dollar_dollar_initialization(T0* a1);
void r96make_anchored(T96* C,T2 a1,T0* a2);
void r516fill(T516* C);
void r516compact_left(T516* C);
void r516set_position(T516* C,T2 a1,T2 a2,T2 a3);
T6 r516is_equal(T516* C,T0* a1);
T6 r516se_assigned_from(T0* a1);
void r516make_from_string(T516* C,T0* a1);
T6 r516conforms_to(T516* C,T0* a1);
void r516make_from_buffer(T516* C,T0* a1);
void r516resize(T516* C);
void r516make_with_size(T516* C,T0* a1,T2 a2);
T0* r516twin(T516* C);
void r516set_file(T516* C,T0* a1);
void r516flush(T516* C);
T6 r158is_equal(T158* C,T0* a1);
T6 r158se_assigned_from(T0* a1);
void r158make(T158* C);
void r158old_put_string(T0* a1);
T6 r158conforms_to(T158* C,T0* a1);
void r158put_integer(T2 a1);
void r158put_line(T0* a1);
T0* r158twin(T158* C);
void r158put_string(T0* a1);
void r287print_conflict(T287* C,T0* a1);
T6 r287is_equal(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
void r287make(T287* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
T6 r521is_equal(T521* C,T0* a1);
T6 r521se_assigned_from(T0* a1);
void r521make(T521* C);
void r521old_put_string(T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
void r521put_integer(T2 a1);
void r521put_line(T0* a1);
T0* r521twin(T521* C);
void r521put_string(T0* a1);
T6 r529is_equal(T529* C,T0* a1);
T0* r529arguments(void);
T6 r529se_assigned_from(T0* a1);
void r529make(T529* C,T0* a1,T0* a2);
T0* r529message(T529* C,T0* a1);
T6 r529conforms_to(T529* C,T0* a1);
T0* r529twin(T529* C);
T0* r529default_message(T529* C);
T6 r563is_equal(T563* C,T0* a1);
T0* r563arguments(void);
T6 r563se_assigned_from(T0* a1);
void r563make(T563* C,T0* a1,T2 a2,T0* a3);
T0* r563message(T563* C,T0* a1);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563twin(T563* C);
T0* r563default_message(T563* C);
T0* r270next(T270* C);
T6 r270is_equal(T270* C,T0* a1);
T6 r270same_position(T270* C,T0* a1);
T6 r270se_assigned_from(T0* a1);
T6 r270after(T270* C);
void r270make(T270* C,T0* a1,T2 a2);
T2 r270hash_code(T270* C);
T6 r270conforms_to(T270* C,T0* a1);
T6 r270_px_60(T270* C,T0* a1);
T0* r270symbol(T270* C);
void r270print_position(T270* C,T0* a1);
T0* r270twin(T270* C);
T6 r515is_equal(T515* C,T0* a1);
T0* r515arguments(void);
T6 r515se_assigned_from(T0* a1);
void r515make(T515* C,T0* a1,T2 a2);
T0* r515message(T515* C,T0* a1);
T6 r515conforms_to(T515* C,T0* a1);
T0* r515twin(T515* C);
T0* r515default_message(T515* C);
T6 r153is_equal(T153* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r153command_arguments(void);
T6 r153se_assigned_from(T0* a1);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
T0* r153argument(T2 a1);
T6 r562is_equal(T562* C,T0* a1);
T0* r562arguments(void);
T6 r562se_assigned_from(T0* a1);
void r562make(T562* C,T0* a1,T2 a2,T0* a3);
T0* r562message(T562* C,T0* a1);
T6 r562conforms_to(T562* C,T0* a1);
T0* r562twin(T562* C);
T0* r562default_message(T562* C);
extern T0*oBC157error;
extern int fBC157error;
T0* r157error(void);
T6 r157is_equal(T157* C,T0* a1);
T6 r157se_assigned_from(T0* a1);
extern T0*oBC157input;
extern int fBC157input;
T0* r157input(void);
extern T0*oBC157output;
extern int fBC157output;
T0* r157output(void);
T6 r157conforms_to(T157* C,T0* a1);
T0* r157twin(T157* C);
extern T2 oBC155maximum_character_code;
extern int fBC155maximum_character_code;
T2 r155maximum_character_code(T155* C);
T6 r155is_equal(T155* C,T0* a1);
T6 r155se_assigned_from(T0* a1);
T6 r155conforms_to(T155* C,T0* a1);
T0* r155twin(T155* C);
T6 r134is_equal(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
T6 r134conforms_to(T134* C,T0* a1);
T0* r134twin(T134* C);
T6 r45is_equal(T45* C,T0* a1);
T6 r45se_assigned_from(T0* a1);
T6 r45conforms_to(T45* C,T0* a1);
T6 r45_px_60(T45* C,T0* a1);
T0* r45twin(T45* C);
extern T0*oBC623lowercase_24;
extern int fBC623lowercase_24;
T0* r622lowercase_24(void);
extern T0*oBC623lowercase_21;
extern int fBC623lowercase_21;
T0* r622lowercase_21(void);
extern T0*oBC623lowercase_06;
extern int fBC623lowercase_06;
T0* r622lowercase_06(void);
extern T0*oBC623lowercase_05;
extern int fBC623lowercase_05;
T0* r622lowercase_05(void);
extern T0*oBC623lowercase_04;
extern int fBC623lowercase_04;
T0* r622lowercase_04(void);
extern T0*oBC623lowercase_03;
extern int fBC623lowercase_03;
T0* r622lowercase_03(void);
extern T0*oBC623lowercase_02;
extern int fBC623lowercase_02;
T0* r622lowercase_02(void);
extern T0*oBC623lowercase_01;
extern int fBC623lowercase_01;
T0* r622lowercase_01(void);
extern T0*oBC623lowercase_00;
extern int fBC623lowercase_00;
T0* r622lowercase_00(void);
T6 r622is_equal(T622* C,T0* a1);
T6 r622se_assigned_from(T0* a1);
extern T0*oBC624uppercase_1f;
extern int fBC624uppercase_1f;
T0* r622uppercase_1f(void);
extern T0*oBC624uppercase_1e;
extern int fBC624uppercase_1e;
T0* r622uppercase_1e(void);
T2 r622upper_code(T2 a1);
extern T0*oBC623lowercase_ff;
extern int fBC623lowercase_ff;
T0* r622lowercase_ff(void);
extern T0*oBC624uppercase_24;
extern int fBC624uppercase_24;
T0* r622uppercase_24(void);
extern T0*oBC624uppercase_21;
extern int fBC624uppercase_21;
T0* r622uppercase_21(void);
extern T0*oBC624uppercase_06;
extern int fBC624uppercase_06;
T0* r622uppercase_06(void);
extern T0*oBC624uppercase_05;
extern int fBC624uppercase_05;
T0* r622uppercase_05(void);
T6 r622conforms_to(T622* C,T0* a1);
extern T0*oBC624uppercase_04;
extern int fBC624uppercase_04;
T0* r622uppercase_04(void);
extern T0*oBC624uppercase_03;
extern int fBC624uppercase_03;
T0* r622uppercase_03(void);
extern T0*oBC624uppercase_02;
extern int fBC624uppercase_02;
T0* r622uppercase_02(void);
extern T0*oBC624uppercase_01;
extern int fBC624uppercase_01;
T0* r622uppercase_01(void);
extern T0*oBC624uppercase_00;
extern int fBC624uppercase_00;
T0* r622uppercase_00(void);
extern T0*oBC624uppercase;
extern int fBC624uppercase;
T0* r622uppercase(void);
T2 r622lower_code(T2 a1);
T0* r622twin(T622* C);
extern T0*oBC623lowercase_1f;
extern int fBC623lowercase_1f;
T0* r622lowercase_1f(void);
extern T0*oBC623lowercase_1e;
extern int fBC623lowercase_1e;
T0* r622lowercase_1e(void);
extern T0*oBC623lowercase;
extern int fBC623lowercase;
T0* r622lowercase(void);
extern T0*oBC624uppercase_ff;
extern int fBC624uppercase_ff;
T0* r622uppercase_ff(void);
T6 r42is_equal(T42* C,T0* a1);
T6 r42se_assigned_from(T0* a1);
T6 r42conforms_to(T42* C,T0* a1);
T0* r42twin(T42* C);
T2 r151encoded_next_value(T3 a1);
T6 r151is_equal(T151* C,T0* a1);
T2 r151character_byte_count(T3 a1);
T6 r151se_assigned_from(T0* a1);
T2 r151encoded_first_value(T3 a1);
T6 r151conforms_to(T151* C,T0* a1);
T2 r151code_byte_count(T2 a1);
T2 r151encoded_byte_count(T3 a1);
T0* r151twin(T151* C);
T2 r151substring_byte_count(T0* a1,T2 a2,T2 a3);
T6 r70is_equal(T70* C,T0* a1);
T6 r70se_assigned_from(T0* a1);
T6 r70conforms_to(T70* C,T0* a1);
T0* r70twin(T70* C);
void r70put_integer_array(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r150is_equal(T150* C,T0* a1);
T6 r150se_assigned_from(T0* a1);
T6 r150conforms_to(T150* C,T0* a1);
T3 r150to_character(T2 a1);
T0* r150twin(T150* C);
T6 r33is_equal(T33* C,T0* a1);
T6 r33se_assigned_from(T0* a1);
T6 r33conforms_to(T33* C,T0* a1);
T0* r33twin(T33* C);
T6 r127is_equal(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127append_decimal_integer(T0* a1,T2 a2);
T6 r127conforms_to(T127* C,T0* a1);
void r127put_decimal_integer(T0* a1,T2 a2);
T0* r127twin(T127* C);
void r11read_command_line(T11* C);
T6 r11is_equal(T11* C,T0* a1);
T0* r11arguments(void);
T6 r11se_assigned_from(T0* a1);
void r11report_usage_message(T11* C);
extern T0*oBC11usage_message;
extern int fBC11usage_message;
T0* r11usage_message(void);
void r11parse_input_file(T11* C);
T6 r11conforms_to(T11* C,T0* a1);
extern T0*oBC15exceptions;
void r11execute(T11* C);
void r11report_version_number(T11* C);
T0* r11twin(T11* C);
void r11report_usage_error(T11* C);
T6 r138is_equal(T138* C,T0* a1);
T0* r138as_string(T0* a1);
T6 r138se_assigned_from(T0* a1);
T0* r138clone(T0* a1);
T0* r138appended_string(T0* a1,T0* a2);
T6 r138is_integer(T0* a1);
T0* r138make(T2 a1);
T0* r138string(T0* a1);
T6 r138conforms_to(T138* C,T0* a1);
T0* r138appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r138new_empty_string(T0* a1,T2 a2);
T0* r138concat(T0* a1,T0* a2);
T0* r138to_upper(T0* a1);
T0* r138to_lower(T0* a1);
T0* r138twin(T138* C);
void r138append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
void r126put_eiffel_string(T0* a1,T0* a2);
T6 r126conforms_to(T126* C,T0* a1);
T0* r126twin(T126* C);
T6 r47is_equal(T47* C,T0* a1);
T6 r47se_assigned_from(T0* a1);
T6 r47conforms_to(T47* C,T0* a1);
T6 r47_px_60(T47* C,T0* a1);
T0* r47twin(T47* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 631
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms37_1338085634;
extern T7*ms546_1383509722;
extern T7*ms582_220658643;
extern T7*ms527_1454279890;
extern T7*ms515_1449702436;
extern T7*ms530_2088248237;
extern T7*ms37_279;
extern T7*ms526_1821517345;
extern T7*ms529_272755366;
extern T7*ms583_1956876694;
extern T7*ms22_250860571;
extern T7*ms34_1606053737;
extern T7*ms560_88402782;
extern T7*ms524_1319944131;
extern T7*ms537_1291418954;
extern T7*ms525_1349308461;
extern T7*ms158_10;
extern T7*ms562_751424646;
extern T7*ms486_988446515;
extern T7*ms565_110467006;
extern T7*ms523_559383313;
extern T7*ms613_1158552108;
extern T7*ms581_165116404;
extern T7*ms70_192;
extern T7*ms70_279;
extern T7*ms70_992;
extern T7*ms16_1553;
extern T7*ms11_331;
extern T7*ms557_2038502230;
extern T7*ms142_0;
extern T7*ms138_0;
extern T7*ms151_0;
extern T7*ms561_473369027;
extern T7*ms564_1822824531;
extern T7*ms558_1849034395;
extern T7*ms612_1515383187;
extern T7*ms563_1729371669;
extern T7*ms579_1049715130;
extern T7*ms18_10;
extern T7*ms70_4992;
extern T7*ms580_2110198733;
extern T7*ms542_1366120531;
extern T7*ms286_229;
extern T7*ms559_1151210642;
extern T7*ms521_10;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void*se_ma626(int argc,...);
void*se_ma72(int argc,...);
void X252remove_traversing_cursor(T0*C,T0* a1);
T0* X252item(T0*C,T2 a1);
void X252add_traversing_cursor(T0*C,T0* a1);
T6 X252has(T0*C,T0* a1);
T0* X252first(T0*C);
T6 X252cursor_same_position(T0*C,T0* a1,T0* a2);
void X252put_last(T0*C,T0* a1);
T6 X252cursor_off(T0*C,T0* a1);
T0* X576make(T0*C,T2 a1);
T0* X576resize(T0*C,T0* a1,T2 a2);
T0* X406item(T0*C);
T6 X406after(T0*C);
void X406forth(T0*C);
void X406start(T0*C);
void X406go_after(T0*C);
void X406search_forth(T0*C,T0* a1);
T0* X324item(T0*C);
T6 X324after(T0*C);
void X324forth(T0*C);
void X324start(T0*C);
T0* X260item(T0*C);
T6 X260after(T0*C);
void X260forth(T0*C);
void X260start(T0*C);
void X260go_after(T0*C);
void X260search_forth(T0*C,T0* a1);
void X62append_dollar_n_to_string(T0*C,T2 a1,T2 a2,T0* a3);
T6 X62is_equal(T0*C,T0* a1);
void X62print_dollar_dollar_declaration(T0*C,T0* a1);
void X62print_dollar_dollar_finalization(T0*C,T0* a1);
void X62print_conversion_routine(T0*C,T0* a1);
void X62print_dollar_dollar_initialization(T0*C,T0* a1);
void X62append_dollar_dollar_to_string(T0*C,T0* a1);
T0* X421item(T0*C);
T6 X421after(T0*C);
void X421forth(T0*C);
void X421start(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
void X7wipe_out(T0*C);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
T0* X7string(T0*C);
T0* X7_px_43(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
void X7to_upper(T0*C);
T8 X7to_external(T0*C);
void X7to_lower(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T2 X419count(T0*C);
T0* X419cursor_item(T0*C,T0* a1);
T6 X419cursor_after(T0*C,T0* a1);
void X419cursor_forth(T0*C,T0* a1);
void X419cursor_start(T0*C,T0* a1);
T0* X419new_cursor(T0*C);
T0* X78name(T0*C);
T6 X78is_equal(T0*C,T0* a1);
T0* X78type(T0*C);
T2 X78id(T0*C);
T6 X78is_terminal(T0*C);
T6 X78is_useful(T0*C);
void X78set_useful(T0*C,T6 a1);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
void X277put(T0*C,T0* a1,T2 a2);
T0* X277item(T0*C,T2 a1);
void X277set_all_with(T0*C,T0* a1);
void X277resize(T0*C,T2 a1);
T2 X255count(T0*C);
T0* X255cursor_item(T0*C,T0* a1);
void X255cursor_go_after(T0*C,T0* a1);
T6 X255cursor_after(T0*C,T0* a1);
T6 X255has(T0*C,T0* a1);
void X255cursor_search_forth(T0*C,T0* a1,T0* a2);
void X255cursor_forth(T0*C,T0* a1);
void X255cursor_start(T0*C,T0* a1);
T0* X255new_cursor(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X510clear_all(T0*C,T0* a1);
T0* X510make(T0*C,T2 a1);
T0* X510resize(T0*C,T0* a1,T2 a2);
void X573set_next_cursor(T0*C,T0* a1);
T0* X429make(T0*C,T2 a1);
T0* X429resize(T0*C,T0* a1,T2 a2);
void X32put_new_line(T0*C);
void X32put_integer(T0*C,T2 a1);
void X32put_line(T0*C,T0* a1);
void X32put_character(T0*C,T3 a1);
void X32put_string(T0*C,T0* a1);
T0* X492name(T0*C);
T2 X492read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X492read_character(T0*C);
T6 X492end_of_input(T0*C);
T3 X492last_character(T0*C);
void X517fill(T0*C);
T0* X326cursor_item(T0*C,T0* a1);
T6 X326is_empty(T0*C);
T6 X326cursor_after(T0*C,T0* a1);
void X326cursor_forth(T0*C,T0* a1);
void X326cursor_start(T0*C,T0* a1);
T0* X326new_cursor(T0*C);
T2 X610count(T0*C);
T2 X610item(T0*C,T2 a1);
T2 X610lower(T0*C);
T6 X285test(T0*C,T0* a1,T0* a2);
void X428put(T0*C,T0* a1,T2 a2);
T0* X428item(T0*C,T2 a1);
void X428set_all_with(T0*C,T0* a1);
void X428resize(T0*C,T2 a1);
void X512put(T0*C,T0* a1,T2 a2);
T0* X512item(T0*C,T2 a1);
T514 X512storage(T0*C);
void X512set_all_with(T0*C,T0* a1);
void X512resize(T0*C,T2 a1);
void X29put_character(T0*C,T3 a1);
void X29put_string(T0*C,T0* a1);
T0* X407cursor_item(T0*C,T0* a1);
void X407cursor_go_after(T0*C,T0* a1);
T6 X407is_empty(T0*C);
T6 X407cursor_after(T0*C,T0* a1);
T6 X407has(T0*C,T0* a1);
void X407cursor_search_forth(T0*C,T0* a1,T0* a2);
void X407cursor_forth(T0*C,T0* a1);
void X407cursor_start(T0*C,T0* a1);
T0* X407new_cursor(T0*C);
T0* X35default_message(T0*C);
T0* T2toT45(T2 source);
T2 T45toT2(T0* source);

#ifdef __cplusplus
}
#endif
