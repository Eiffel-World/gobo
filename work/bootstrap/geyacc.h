#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.75 (July 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S518 T518;
typedef struct S359 T359;
typedef struct S575 T575;
typedef struct S403 T403;
typedef struct S114 T114;
typedef struct S402 T402;
typedef struct S481 T481;
typedef struct S124 T124;
typedef struct S296 T296;
typedef struct S572 T572;
typedef struct S311 T311;
typedef struct S145 T145;
typedef struct S180 T180;
typedef struct S169 T169;
typedef struct S268 T268;
typedef struct S504 T504;
typedef struct S243 T243;
typedef struct S480 T480;
typedef struct S108 T108;
typedef struct S144 T144;
typedef struct S115 T115;
typedef struct S246 T246;
typedef struct S430 T430;
typedef struct S152 T152;
typedef struct S564 T564;
typedef struct S570 T570;
typedef struct S135 T135;
typedef struct S534 T534;
typedef struct S66 T66;
typedef struct S276 T276;
typedef struct S448 T448;
typedef struct S275 T275;
typedef struct S129 T129;
typedef struct S514 T514;
typedef struct S469 T469;
typedef struct S111 T111;
typedef struct S574 T574;
typedef struct S226 T226;
typedef struct S485 T485;
typedef struct S540 T540;
typedef struct S57 T57;
typedef struct S131 T131;
typedef struct S41 T41;
typedef struct S382 T382;
typedef struct S178 T178;
typedef struct S388 T388;
typedef struct S363 T363;
typedef struct S37 T37;
typedef struct S112 T112;
typedef struct S38 T38;
typedef struct S360 T360;
typedef struct S261 T261;
typedef struct S69 T69;
typedef struct S449 T449;
typedef struct S573 T573;
typedef struct S356 T356;
typedef struct S64 T64;
typedef struct S117 T117;
typedef struct S177 T177;
typedef struct S538 T538;
typedef struct S551 T551;
typedef struct S396 T396;
typedef struct S539 T539;
typedef struct S482 T482;
typedef struct S249 T249;
typedef struct S68 T68;
typedef struct S179 T179;
typedef struct S452 T452;
typedef struct S529 T529;
typedef struct S554 T554;
typedef struct S346 T346;
typedef struct S299 T299;
typedef struct S332 T332;
typedef struct S286 T286;
typedef struct S569 T569;
typedef struct S483 T483;
typedef struct S147 T147;
typedef struct S161 T161;
typedef struct S247 T247;
typedef struct S216 T216;
typedef struct S31 T31;
typedef struct S507 T507;
typedef struct S546 T546;
typedef struct S326 T326;
typedef struct S142 T142;
typedef struct S515 T515;
typedef struct S364 T364;
typedef struct S571 T571;
typedef struct S28 T28;
typedef struct S27 T27;
typedef struct S75 T75;
typedef struct S496 T496;
typedef struct S213 T213;
typedef struct S487 T487;
typedef struct S522 T522;
typedef struct S121 T121;
typedef struct S484 T484;
typedef struct S126 T126;
typedef struct S503 T503;
typedef struct S235 T235;
typedef struct S350 T350;
typedef struct S536 T536;
typedef struct S7 T7;
typedef struct S521 T521;
typedef struct S149 T149;
typedef struct S265 T265;
typedef struct S207 T207;
typedef struct S495 T495;
typedef struct S34 T34;
typedef struct S70 T70;
typedef struct S229 T229;
typedef struct S331 T331;
typedef struct S210 T210;
typedef struct S371 T371;
typedef struct S146 T146;
typedef struct S499 T499;
typedef struct S307 T307;
typedef struct S340 T340;
typedef struct S444 T444;
typedef struct S434 T434;
typedef struct S467 T467;
typedef struct S17 T17;
typedef struct S475 T475;
typedef struct S328 T328;
typedef struct S466 T466;
typedef struct S577 T577;
typedef struct S408 T408;
typedef struct S494 T494;
typedef struct S214 T214;
typedef struct S36 T36;
typedef struct S537 T537;
typedef struct S236 T236;
typedef struct S576 T576;
typedef struct S123 T123;
typedef struct S230 T230;
typedef struct S289 T289;
typedef struct S450 T450;
typedef struct S489 T489;
typedef struct S533 T533;
typedef struct S297 T297;
typedef struct S517 T517;
typedef struct S535 T535;
typedef struct S318 T318;
typedef struct S105 T105;
typedef struct S35 T35;
typedef struct S532 T532;
typedef struct S516 T516;
typedef struct S385 T385;
typedef struct S90 T90;
typedef struct S474 T474;
typedef struct S136 T136;
typedef struct S262 T262;
typedef struct S477 T477;
typedef struct S369 T369;
typedef struct S120 T120;
typedef struct S160 T160;
typedef struct S486 T486;
typedef struct S500 T500;
typedef struct S62 T62;
typedef struct S132 T132;
typedef struct S468 T468;
typedef struct S92 T92;
typedef struct S501 T501;
typedef struct S349 T349;
typedef struct S91 T91;
typedef struct S502 T502;
typedef struct S43 T43;
typedef struct S58 T58;
typedef struct S511 T511;
typedef struct S520 T520;
typedef struct S548 T548;
typedef struct S492 T492;
typedef struct S435 T435;
typedef struct S395 T395;
typedef struct S479 T479;
typedef struct S380 T380;
typedef struct S420 T420;
typedef struct S319 T319;
typedef struct S418 T418;
typedef struct S253 T253;
typedef struct S473 T473;
typedef struct S133 T133;
typedef struct S143 T143;
typedef struct S193 T193;
typedef struct S266 T266;
typedef struct S519 T519;

/*C Header Pass 2 :*/
typedef T0**T119;
typedef T0**T437;
typedef T0**T251;
typedef T0**T182;
typedef T0**T398;
typedef T0**T128;
typedef T0**T77;
typedef T0**T218;
typedef T0**T255;
typedef T0**T362;
typedef T3*T9;
typedef T0**T212;
typedef T0**T171;
typedef T0**T322;
typedef T0**T154;
typedef T2*T67;
typedef T0**T472;
typedef T0**T63;

/*C Header Pass 3 :*/

/*C Header Pass 4 :*/
struct S518{Tid id;T0* _parameters;};
extern T518 M518;
struct S359{Tid id;};
extern T359 M359;
struct S575{Tid id;};
extern T575 M575;
struct S403{Tid id;T0* _item;T0* _right;};
extern T403 M403;
struct S402{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T402 M402;
struct S481{Tid id;T0* _parameters;};
extern T481 M481;
struct S124{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T124 M124;
struct S296{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T296 M296;
struct S572{Tid id;};
extern T572 M572;
struct S311{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T311 M311;
struct S180{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T180 M180;
struct S169{Tid id;T171 _storage;T2 _capacity;T2 _upper;};
extern T169 M169;
struct S268{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T268 M268;
struct S504{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T504 M504;
struct S243{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T243 M243;
struct S480{Tid id;T0* _parameters;};
extern T480 M480;
struct S108{Tid id;};
extern T108 M108;
struct S144{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T144 M144;
struct S115{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T115 M115;
struct S430{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T430 M430;
struct S152{Tid id;T154 _storage;T2 _capacity;T2 _upper;};
extern T152 M152;
struct S564{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T564 M564;
struct S570{Tid id;T0* _parameters;};
extern T570 M570;
struct S145{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T145 M145;
struct S135{Tid id;};
extern T135 M135;
struct S534{Tid id;T0* _text;};
extern T534 M534;
struct S66{Tid id;T67 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T66 M66;
struct S276{Tid id;T0* _item;T0* _right;};
extern T276 M276;
struct S448{Tid id;};
extern T448 M448;
struct S275{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T275 M275;
struct S129{Tid id;};
extern T129 M129;
struct S514{Tid id;T0* _parameters;};
extern T514 M514;
struct S469{Tid id;};
extern T469 M469;
struct S111{Tid id;};
extern T111 M111;
struct S574{Tid id;};
extern T574 M574;
struct S226{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T226 M226;
struct S485{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T485 M485;
struct S540{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T540 M540;
struct S57{Tid id;T0* _name;T2 _id;};
extern T57 M57;
struct S131{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T131 M131;
struct S41{Tid id;T2 _item;};
extern T41 M41;
struct S382{Tid id;T0* _item;T0* _right;};
extern T382 M382;
struct S178{Tid id;T182 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T178 M178;
struct S388{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T388 M388;
struct S363{Tid id;};
extern T363 M363;
struct S37{Tid id;T0* _path;T8 _output_stream;};
extern T37 M37;
struct S112{Tid id;};
extern T112 M112;
struct S38{Tid id;T8 _item;};
extern T38 M38;
struct S360{Tid id;T362 _storage;T2 _capacity;T2 _upper;};
extern T360 M360;
struct S261{Tid id;T0* _parameters;};
extern T261 M261;
struct S69{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T69 M69;
struct S449{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T449 M449;
struct S573{Tid id;};
extern T573 M573;
struct S356{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T356 M356;
struct S64{Tid id;};
extern T64 M64;
struct S117{Tid id;T119 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
struct S538{Tid id;T0* _parameters;};
extern T538 M538;
struct S551{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T551 M551;
struct S396{Tid id;};
extern T396 M396;
struct S539{Tid id;T0* _parameters;};
extern T539 M539;
struct S482{Tid id;T0* _parameters;};
extern T482 M482;
struct S249{Tid id;T251 _storage;T2 _capacity;T2 _upper;};
extern T249 M249;
struct S68{Tid id;T2 _id;T0* _lhs;T0* _rhs;T0* _action;T2 _precedence;T2 _line_nb;T6 _is_useful;T2 _associativity;};
extern T68 M68;
struct S179{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T179 M179;
struct S452{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _error_handler;T2 _line_nb;T0* _last_value;T0* _action_buffer;T2 _nb_open_brackets;T0* _rule;T0* _last_grammar;T0* _action_factory;T2 _precedence;T0* _precedence_token;T0* _type;T0* _start_symbol;T0* _terminal_symbols;T0* _nonterminal_symbols;T0* _types;};
extern T452 M452;
struct S529{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T529 M529;
struct S554{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T554 M554;
struct S346{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T346 M346;
struct S299{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T299 M299;
struct S332{Tid id;};
extern T332 M332;
struct S286{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T286 M286;
struct S569{Tid id;T0* _parameters;};
extern T569 M569;
struct S483{Tid id;T0* _parameters;};
extern T483 M483;
struct S147{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T147 M147;
struct S161{Tid id;T0* _comparator;};
extern T161 M161;
struct S247{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T247 M247;
struct S216{Tid id;T218 _storage;T2 _capacity;T2 _upper;};
extern T216 M216;
struct S31{Tid id;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T2 _yyFinal;T2 _yyFlag;T2 _yyNtbase;T2 _yyLast;T2 _yyMax_token;T2 _yyNsyms;T0* _machine;T2 _array_size;};
extern T31 M31;
struct S507{Tid id;T0* _name;T2 _id;};
extern T507 M507;
struct S546{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T546 M546;
struct S326{Tid id;};
extern T326 M326;
struct S142{Tid id;T6 _is_state;T2 _id;T0* _froms;T0* _tos;T2 _count;T2 _width;T2 _position;};
extern T142 M142;
struct S515{Tid id;T0* _parameters;};
extern T515 M515;
struct S364{Tid id;T0* _comparator;};
extern T364 M364;
struct S571{Tid id;};
extern T571 M571;
struct S28{Tid id;T0* _parameters;};
extern T28 M28;
struct S27{Tid id;T6 _item;};
extern T27 M27;
struct S75{Tid id;T77 _storage;T2 _capacity;T2 _upper;};
extern T75 M75;
struct S496{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T496 M496;
struct S213{Tid id;T0* _rule;T0* _lookaheads;T0* _transitions;};
extern T213 M213;
struct S487{Tid id;T0* _parameters;};
extern T487 M487;
struct S522{Tid id;T0* _parameters;};
extern T522 M522;
struct S121{Tid id;};
extern T121 M121;
struct S484{Tid id;T0* _parameters;};
extern T484 M484;
struct S126{Tid id;T128 _storage;T2 _capacity;T2 _upper;};
extern T126 M126;
struct S503{Tid id;T0* _parameters;};
extern T503 M503;
struct S235{Tid id;};
extern T235 M235;
struct S350{Tid id;T212 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T350 M350;
struct S536{Tid id;T0* _parameters;};
extern T536 M536;
struct S177{Tid id;T2 _index;T0* _target;T0* _source;T0* _following_tokens;T0* _included_tokens;};
extern T177 M177;
struct S521{Tid id;T0* _parameters;};
extern T521 M521;
struct S149{Tid id;};
extern T149 M149;
struct S265{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T265 M265;
struct S207{Tid id;T0* _item;T0* _right;};
extern T207 M207;
struct S495{Tid id;T0* _first;T2 _second;};
extern T495 M495;
struct S114{Tid id;T6 _is_useful;T0* _name;T0* _type;T2 _id;T2 _token_id;T2 _precedence;T0* _literal_string;T2 _associativity;};
extern T114 M114;
struct S34{Tid id;T0* _states;T0* _grammar;T0* _cached_states;};
extern T34 M34;
struct S70{Tid id;T2 _index;T6 _is_useful;T0* _name;T0* _type;T2 _id;T6 _is_nullable;T0* _rules;T0* _firsts;T0* _derives;T0* _transitions;};
extern T70 M70;
struct S229{Tid id;};
extern T229 M229;
struct S331{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T331 M331;
struct S210{Tid id;T212 _storage;T2 _capacity;T2 _upper;};
extern T210 M210;
struct S371{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T371 M371;
struct S146{Tid id;T2 _id;T0* _accessing_symbol;T0* _positions;T0* _shifts;T0* _reductions;T0* _errors;T2 _hash_code;T6 _lookahead_needed;T6 _has_conflict;};
extern T146 M146;
struct S499{Tid id;T0* _parameters;};
extern T499 M499;
struct S307{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T307 M307;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S340{Tid id;};
extern T340 M340;
struct S444{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T444 M444;
struct S434{Tid id;T437 _storage;T2 _capacity;T2 _upper;};
extern T434 M434;
struct S467{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T467 M467;
struct S17{Tid id;T0* _input_filename;T0* _output_filename;T0* _token_classname;T0* _token_filename;T0* _verbose_filename;T6 _actions_separated;T0* _grammar;T0* _error_handler;};
extern T17 M17;
struct S475{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;};
extern T475 M475;
struct S328{Tid id;T0* _item;T0* _right;};
extern T328 M328;
struct S466{Tid id;};
extern T466 M466;
struct S577{Tid id;};
extern T577 M577;
struct S408{Tid id;};
extern T408 M408;
struct S494{Tid id;T0* _parameters;};
extern T494 M494;
struct S214{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T214 M214;
struct S36{Tid id;};
extern T36 M36;
struct S537{Tid id;T0* _parameters;};
extern T537 M537;
struct S236{Tid id;};
extern T236 M236;
struct S576{Tid id;};
extern T576 M576;
struct S123{Tid id;};
extern T123 M123;
struct S230{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T230 M230;
struct S289{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T289 M289;
struct S450{Tid id;T0* _parameters;};
extern T450 M450;
struct S489{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T489 M489;
struct S533{Tid id;};
extern T533 M533;
struct S297{Tid id;};
extern T297 M297;
struct S517{Tid id;T0* _parameters;};
extern T517 M517;
struct S535{Tid id;T0* _parameters;};
extern T535 M535;
struct S318{Tid id;T322 _storage;T2 _capacity;T2 _upper;};
extern T318 M318;
struct S105{Tid id;T67 _storage;T2 _capacity;T2 _upper;};
extern T105 M105;
struct S35{Tid id;T0* _tokens;T0* _variables;T0* _types;T0* _rules;T0* _start_symbol;T2 _expected_conflicts;T0* _eiffel_code;T0* _eiffel_header;};
extern T35 M35;
struct S532{Tid id;};
extern T532 M532;
struct S516{Tid id;T0* _parameters;};
extern T516 M516;
struct S385{Tid id;};
extern T385 M385;
struct S90{Tid id;T0* _name;T2 _id;};
extern T90 M90;
struct S474{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T474 M474;
struct S136{Tid id;T0* _name;};
extern T136 M136;
struct S262{Tid id;T0* _state;T0* _rule;T0* _token;T0* _resolution;};
extern T262 M262;
struct S477{Tid id;T0* _name;};
extern T477 M477;
struct S369{Tid id;};
extern T369 M369;
struct S120{Tid id;};
extern T120 M120;
struct S160{Tid id;};
extern T160 M160;
struct S486{Tid id;T0* _parameters;};
extern T486 M486;
struct S500{Tid id;};
extern T500 M500;
struct S62{Tid id;T63 _storage;T2 _capacity;T2 _upper;};
extern T62 M62;
struct S132{Tid id;T128 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T132 M132;
struct S468{Tid id;T472 _storage;T2 _capacity;T2 _upper;};
extern T468 M468;
struct S92{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T92 M92;
struct S501{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T501 M501;
struct S349{Tid id;};
extern T349 M349;
struct S91{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T91 M91;
struct S502{Tid id;};
extern T502 M502;
struct S43{Tid id;T3 _item;};
extern T43 M43;
struct S58{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T58 M58;
struct S511{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T511 M511;
struct S520{Tid id;T0* _parameters;};
extern T520 M520;
struct S548{Tid id;};
extern T548 M548;
struct S492{Tid id;};
extern T492 M492;
struct S435{Tid id;};
extern T435 M435;
struct S395{Tid id;T398 _storage;T2 _capacity;T2 _upper;};
extern T395 M395;
struct S479{Tid id;};
extern T479 M479;
struct S246{Tid id;T0* _rule;T2 _index;};
extern T246 M246;
struct S380{Tid id;T0* _equality_tester;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T380 M380;
struct S420{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T420 M420;
struct S319{Tid id;};
extern T319 M319;
struct S418{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T418 M418;
struct S253{Tid id;T255 _storage;T2 _capacity;T2 _upper;};
extern T253 M253;
struct S473{Tid id;T0* _parameters;};
extern T473 M473;
struct S133{Tid id;T0* _program_name;};
extern T133 M133;
struct S143{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T143 M143;
struct S193{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T193 M193;
struct S266{Tid id;T0* _item;T0* _right;};
extern T266 M266;
struct S519{Tid id;T0* _parameters;};
extern T519 M519;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T3 r3to_upper(T3 C);
T3 r3to_lower(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T0*oBC1tagged_out_memory;
void r119clear_all(T119 C,T2 a1);
T119 r119realloc(T119 C,T2 a1,T2 a2);
T6 r119fast_memcmp(T119 C,T119 a1,T2 a2);
void r119set_all_with(T119 C,T0* a1,T2 a2);
void r119clear(T119 C,T2 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r437clear_all(T437 C,T2 a1);
T437 r437realloc(T437 C,T2 a1,T2 a2);
T6 r437fast_memcmp(T437 C,T437 a1,T2 a2);
void r437set_all_with(T437 C,T0* a1,T2 a2);
void r437clear(T437 C,T2 a1,T2 a2);
void r437copy_from(T437 C,T437 a1,T2 a2);
void r251clear_all(T251 C,T2 a1);
T251 r251realloc(T251 C,T2 a1,T2 a2);
T6 r251fast_memcmp(T251 C,T251 a1,T2 a2);
void r251set_all_with(T251 C,T0* a1,T2 a2);
void r251clear(T251 C,T2 a1,T2 a2);
void r251copy_from(T251 C,T251 a1,T2 a2);
T6 r182fast_memcmp(T182 C,T182 a1,T2 a2);
void r182set_all_with(T182 C,T0* a1,T2 a2);
void r182copy_from(T182 C,T182 a1,T2 a2);
void r398clear_all(T398 C,T2 a1);
T398 r398realloc(T398 C,T2 a1,T2 a2);
T6 r398fast_memcmp(T398 C,T398 a1,T2 a2);
void r398set_all_with(T398 C,T0* a1,T2 a2);
void r398clear(T398 C,T2 a1,T2 a2);
void r398copy_from(T398 C,T398 a1,T2 a2);
void r128clear_all(T128 C,T2 a1);
T128 r128realloc(T128 C,T2 a1,T2 a2);
T6 r128fast_memcmp(T128 C,T128 a1,T2 a2);
void r128set_all_with(T128 C,T0* a1,T2 a2);
void r128clear(T128 C,T2 a1,T2 a2);
void r128copy_from(T128 C,T128 a1,T2 a2);
void r77clear_all(T77 C,T2 a1);
T77 r77realloc(T77 C,T2 a1,T2 a2);
T6 r77fast_memcmp(T77 C,T77 a1,T2 a2);
void r77set_all_with(T77 C,T0* a1,T2 a2);
void r77clear(T77 C,T2 a1,T2 a2);
void r77copy_from(T77 C,T77 a1,T2 a2);
void r218clear_all(T218 C,T2 a1);
T218 r218realloc(T218 C,T2 a1,T2 a2);
T6 r218fast_memcmp(T218 C,T218 a1,T2 a2);
void r218set_all_with(T218 C,T0* a1,T2 a2);
void r218clear(T218 C,T2 a1,T2 a2);
void r218copy_from(T218 C,T218 a1,T2 a2);
void r255clear_all(T255 C,T2 a1);
T255 r255realloc(T255 C,T2 a1,T2 a2);
T6 r255fast_memcmp(T255 C,T255 a1,T2 a2);
void r255set_all_with(T255 C,T0* a1,T2 a2);
void r255clear(T255 C,T2 a1,T2 a2);
void r255copy_from(T255 C,T255 a1,T2 a2);
void r362clear_all(T362 C,T2 a1);
T362 r362realloc(T362 C,T2 a1,T2 a2);
T6 r362fast_memcmp(T362 C,T362 a1,T2 a2);
void r362set_all_with(T362 C,T0* a1,T2 a2);
void r362clear(T362 C,T2 a1,T2 a2);
void r362copy_from(T362 C,T362 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r212clear_all(T212 C,T2 a1);
T212 r212realloc(T212 C,T2 a1,T2 a2);
T6 r212fast_memcmp(T212 C,T212 a1,T2 a2);
void r212set_all_with(T212 C,T0* a1,T2 a2);
void r212clear(T212 C,T2 a1,T2 a2);
void r212copy_from(T212 C,T212 a1,T2 a2);
void r171clear_all(T171 C,T2 a1);
T171 r171realloc(T171 C,T2 a1,T2 a2);
T6 r171fast_memcmp(T171 C,T171 a1,T2 a2);
void r171set_all_with(T171 C,T0* a1,T2 a2);
void r171clear(T171 C,T2 a1,T2 a2);
void r171copy_from(T171 C,T171 a1,T2 a2);
void r322clear_all(T322 C,T2 a1);
T322 r322realloc(T322 C,T2 a1,T2 a2);
T6 r322fast_memcmp(T322 C,T322 a1,T2 a2);
void r322set_all_with(T322 C,T0* a1,T2 a2);
void r322clear(T322 C,T2 a1,T2 a2);
void r322copy_from(T322 C,T322 a1,T2 a2);
void r154clear_all(T154 C,T2 a1);
T154 r154realloc(T154 C,T2 a1,T2 a2);
T6 r154fast_memcmp(T154 C,T154 a1,T2 a2);
void r154set_all_with(T154 C,T0* a1,T2 a2);
void r154clear(T154 C,T2 a1,T2 a2);
void r154copy_from(T154 C,T154 a1,T2 a2);
void r67clear_all(T67 C,T2 a1);
T67 r67realloc(T67 C,T2 a1,T2 a2);
void r67move(T67 C,T2 a1,T2 a2,T2 a3);
T6 r67fast_memcmp(T67 C,T67 a1,T2 a2);
void r67set_all_with(T67 C,T2 a1,T2 a2);
void r67clear(T67 C,T2 a1,T2 a2);
void r67copy_from(T67 C,T67 a1,T2 a2);
void r472clear_all(T472 C,T2 a1);
T472 r472realloc(T472 C,T2 a1,T2 a2);
T6 r472fast_memcmp(T472 C,T472 a1,T2 a2);
void r472set_all_with(T472 C,T0* a1,T2 a2);
void r472clear(T472 C,T2 a1,T2 a2);
void r472copy_from(T472 C,T472 a1,T2 a2);
void r63clear_all(T63 C,T2 a1);
T63 r63realloc(T63 C,T2 a1,T2 a2);
T6 r63fast_memcmp(T63 C,T63 a1,T2 a2);
void r63set_all_with(T63 C,T0* a1,T2 a2);
void r63clear(T63 C,T2 a1,T2 a2);
void r63copy_from(T63 C,T63 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7to_upper(T7* C);
T8 r7to_external(T7* C);
void r7to_lower(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r169copy(T169* C,T0* a1);
T6 r169is_equal(T169* C,T0* a1);
T6 r169se_assigned_from(T0* a1);
void r169make(T169* C,T2 a1);
T6 r169conforms_to(T169* C,T0* a1);
void r169resize(T169* C,T2 a1);
T0* r169twin(T169* C);
void r152copy(T152* C,T0* a1);
T6 r152is_equal(T152* C,T0* a1);
T6 r152se_assigned_from(T0* a1);
void r152make(T152* C,T2 a1);
T6 r152conforms_to(T152* C,T0* a1);
void r152resize(T152* C,T2 a1);
T0* r152twin(T152* C);
void r66copy(T66* C,T0* a1);
T2 r66count(T66* C);
T6 r66is_equal(T66* C,T0* a1);
T2 r66item(T66* C,T2 a1);
T6 r66se_assigned_from(T0* a1);
void r66make(T66* C,T2 a1,T2 a2);
T6 r66conforms_to(T66* C,T0* a1);
void r66resize(T66* C,T2 a1,T2 a2);
T0* r66twin(T66* C);
void r485copy(T485* C,T0* a1);
T2 r485count(T485* C);
T6 r485is_equal(T485* C,T0* a1);
T0* r485item(T485* C,T2 a1);
T6 r485se_assigned_from(T0* a1);
void r485make(T485* C,T2 a1,T2 a2);
T6 r485conforms_to(T485* C,T0* a1);
T0* r485twin(T485* C);
void r178copy(T178* C,T0* a1);
T2 r178count(T178* C);
T6 r178is_equal(T178* C,T0* a1);
T0* r178item(T178* C,T2 a1);
T6 r178se_assigned_from(T0* a1);
void r178make(T178* C,T2 a1,T2 a2);
T6 r178conforms_to(T178* C,T0* a1);
T0* r178twin(T178* C);
void r360copy(T360* C,T0* a1);
T6 r360is_equal(T360* C,T0* a1);
T6 r360se_assigned_from(T0* a1);
void r360make(T360* C,T2 a1);
T6 r360conforms_to(T360* C,T0* a1);
void r360resize(T360* C,T2 a1);
T0* r360twin(T360* C);
void r117copy(T117* C,T0* a1);
T6 r117is_equal(T117* C,T0* a1);
T6 r117se_assigned_from(T0* a1);
void r117make(T117* C,T2 a1);
T6 r117conforms_to(T117* C,T0* a1);
void r117resize(T117* C,T2 a1);
T0* r117twin(T117* C);
void r249copy(T249* C,T0* a1);
T6 r249is_equal(T249* C,T0* a1);
T6 r249se_assigned_from(T0* a1);
void r249make(T249* C,T2 a1);
T6 r249conforms_to(T249* C,T0* a1);
void r249resize(T249* C,T2 a1);
T0* r249twin(T249* C);
void r216copy(T216* C,T0* a1);
T6 r216is_equal(T216* C,T0* a1);
T6 r216se_assigned_from(T0* a1);
void r216make(T216* C,T2 a1);
T6 r216conforms_to(T216* C,T0* a1);
void r216resize(T216* C,T2 a1);
T0* r216twin(T216* C);
void r75copy(T75* C,T0* a1);
T6 r75is_equal(T75* C,T0* a1);
T6 r75se_assigned_from(T0* a1);
void r75make(T75* C,T2 a1);
T6 r75conforms_to(T75* C,T0* a1);
void r75resize(T75* C,T2 a1);
T0* r75twin(T75* C);
void r126copy(T126* C,T0* a1);
T6 r126is_equal(T126* C,T0* a1);
T6 r126se_assigned_from(T0* a1);
void r126make(T126* C,T2 a1);
T6 r126conforms_to(T126* C,T0* a1);
void r126resize(T126* C,T2 a1);
T0* r126twin(T126* C);
void r350copy(T350* C,T0* a1);
T2 r350count(T350* C);
T6 r350is_equal(T350* C,T0* a1);
T0* r350item(T350* C,T2 a1);
T6 r350se_assigned_from(T0* a1);
void r350make(T350* C,T2 a1,T2 a2);
T6 r350conforms_to(T350* C,T0* a1);
T0* r350twin(T350* C);
void r210copy(T210* C,T0* a1);
T6 r210is_equal(T210* C,T0* a1);
T6 r210se_assigned_from(T0* a1);
void r210make(T210* C,T2 a1);
T6 r210conforms_to(T210* C,T0* a1);
void r210resize(T210* C,T2 a1);
T0* r210twin(T210* C);
void r434copy(T434* C,T0* a1);
T6 r434is_equal(T434* C,T0* a1);
T6 r434se_assigned_from(T0* a1);
void r434make(T434* C,T2 a1);
T6 r434conforms_to(T434* C,T0* a1);
void r434resize(T434* C,T2 a1);
T0* r434twin(T434* C);
void r318copy(T318* C,T0* a1);
T6 r318is_equal(T318* C,T0* a1);
T6 r318se_assigned_from(T0* a1);
void r318make(T318* C,T2 a1);
T6 r318conforms_to(T318* C,T0* a1);
void r318resize(T318* C,T2 a1);
T0* r318twin(T318* C);
void r105copy(T105* C,T0* a1);
T6 r105is_equal(T105* C,T0* a1);
T6 r105se_assigned_from(T0* a1);
void r105make(T105* C,T2 a1);
T6 r105conforms_to(T105* C,T0* a1);
void r105resize(T105* C,T2 a1);
T0* r105twin(T105* C);
void r105with_capacity(T105* C,T2 a1);
void r105from_collection(T105* C,T0* a1);
void r62copy(T62* C,T0* a1);
T6 r62is_equal(T62* C,T0* a1);
T6 r62se_assigned_from(T0* a1);
void r62make(T62* C,T2 a1);
T6 r62conforms_to(T62* C,T0* a1);
void r62resize(T62* C,T2 a1);
T0* r62twin(T62* C);
void r132copy(T132* C,T0* a1);
T2 r132count(T132* C);
T6 r132is_equal(T132* C,T0* a1);
T0* r132item(T132* C,T2 a1);
T6 r132valid_index(T132* C,T2 a1);
T6 r132se_assigned_from(T0* a1);
void r132make(T132* C,T2 a1,T2 a2);
T6 r132conforms_to(T132* C,T0* a1);
T0* r132twin(T132* C);
void r468copy(T468* C,T0* a1);
T2 r468count(T468* C);
T6 r468is_equal(T468* C,T0* a1);
T0* r468item(T468* C,T2 a1);
T6 r468se_assigned_from(T0* a1);
void r468make(T468* C,T2 a1);
T6 r468conforms_to(T468* C,T0* a1);
void r468resize(T468* C,T2 a1);
T0* r468twin(T468* C);
void r395copy(T395* C,T0* a1);
T2 r395count(T395* C);
T6 r395is_equal(T395* C,T0* a1);
T0* r395item(T395* C,T2 a1);
T6 r395se_assigned_from(T0* a1);
void r395make(T395* C,T2 a1);
T6 r395conforms_to(T395* C,T0* a1);
void r395resize(T395* C,T2 a1);
T0* r395twin(T395* C);
void r253copy(T253* C,T0* a1);
T2 r253count(T253* C);
T6 r253is_equal(T253* C,T0* a1);
T0* r253item(T253* C,T2 a1);
T6 r253se_assigned_from(T0* a1);
void r253make(T253* C,T2 a1);
T6 r253conforms_to(T253* C,T0* a1);
void r253resize(T253* C,T2 a1);
T0* r253twin(T253* C);
T6 r359is_equal(T359* C,T0* a1);
T6 r359se_assigned_from(T0* a1);
T6 r359conforms_to(T359* C,T0* a1);
T6 r359test(T2 a1,T2 a2);
T0* r359twin(T359* C);
T6 r575is_equal(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
T6 r575conforms_to(T575* C,T0* a1);
T0* r575twin(T575* C);
T6 r403is_equal(T403* C,T0* a1);
T6 r403se_assigned_from(T0* a1);
T6 r403conforms_to(T403* C,T0* a1);
T0* r403twin(T403* C);
void r402copy(T402* C,T0* a1);
T0* r402cursor_item(T0* a1);
T6 r402is_equal(T402* C,T0* a1);
void r402remove_traversing_cursor(T402* C,T0* a1);
void r402move_all_cursors_after(T402* C);
void r402add_traversing_cursor(T402* C,T0* a1);
T6 r402se_assigned_from(T0* a1);
T6 r402same_type(T402* C,T0* a1);
void r402make(T402* C);
T6 r402cursor_after(T0* a1);
T6 r402conforms_to(T402* C,T0* a1);
void r402cursor_forth(T402* C,T0* a1);
void r402cursor_start(T402* C,T0* a1);
T0* r402twin(T402* C);
void r402force_last(T402* C,T0* a1);
T0* r402new_cursor(T402* C);
T6 r402cursor_off(T0* a1);
T2 r124new_capacity(T2 a1);
void r124copy(T124* C,T0* a1);
T6 r124extendible(T124* C,T2 a1);
T6 r124is_equal(T124* C,T0* a1);
void r124remove_traversing_cursor(T124* C,T0* a1);
void r124move_all_cursors_after(T124* C);
void r124add_traversing_cursor(T124* C,T0* a1);
T6 r124se_assigned_from(T0* a1);
T0* r124clone(T0* a1);
T6 r124cursor_before(T0* a1);
T6 r124same_type(T124* C,T0* a1);
void r124make(T124* C,T2 a1);
T6 r124cursor_after(T0* a1);
T6 r124conforms_to(T124* C,T0* a1);
void r124resize(T124* C,T2 a1);
T6 r124cursor_same_position(T0* a1,T0* a2);
T0* r124twin(T124* C);
void r124force_last(T124* C,T0* a1);
T0* r124new_cursor(T124* C);
T6 r124cursor_off(T0* a1);
void r296copy(T296* C,T0* a1);
void r296clear_items(T296* C,T2 a1,T2 a2);
void r296wipe_out(T296* C);
void r296put(T296* C,T0* a1);
T6 r296is_equal(T296* C,T0* a1);
T0* r296item(T296* C);
T6 r296se_assigned_from(T0* a1);
T0* r296clone(T0* a1);
T6 r296same_type(T296* C,T0* a1);
void r296make(T296* C,T2 a1);
void r296remove(T296* C);
T6 r296conforms_to(T296* C,T0* a1);
T0* r296twin(T296* C);
T6 r572is_equal(T572* C,T0* a1);
T6 r572se_assigned_from(T0* a1);
T6 r572conforms_to(T572* C,T0* a1);
T0* r572twin(T572* C);
T2 r311new_capacity(T2 a1);
void r311copy(T311* C,T0* a1);
T6 r311extendible(T311* C,T2 a1);
void r311force(T311* C,T0* a1);
T6 r311is_equal(T311* C,T0* a1);
T0* r311item(T311* C);
T6 r311se_assigned_from(T0* a1);
T0* r311clone(T0* a1);
T6 r311same_type(T311* C,T0* a1);
void r311make(T311* C,T2 a1);
void r311remove(T311* C);
T6 r311conforms_to(T311* C,T0* a1);
void r311resize(T311* C,T2 a1);
T0* r311twin(T311* C);
void r180copy(T180* C,T0* a1);
T0* r180cursor_item(T0* a1);
T6 r180is_equal(T180* C,T0* a1);
void r180remove_traversing_cursor(T180* C,T0* a1);
void r180cursor_go_after(T180* C,T0* a1);
void r180move_all_cursors_after(T180* C);
void r180add_traversing_cursor(T180* C,T0* a1);
T6 r180se_assigned_from(T0* a1);
T6 r180same_type(T180* C,T0* a1);
void r180make(T180* C);
T6 r180cursor_after(T0* a1);
T6 r180conforms_to(T180* C,T0* a1);
void r180cursor_forth(T180* C,T0* a1);
void r180cursor_start(T180* C,T0* a1);
T0* r180twin(T180* C);
void r180force_last(T180* C,T0* a1);
T0* r180new_cursor(T180* C);
T6 r180cursor_off(T0* a1);
void r268copy(T268* C,T0* a1);
void r268set(T268* C,T0* a1,T6 a2,T6 a3);
T6 r268is_equal(T268* C,T0* a1);
T6 r268same_position(T268* C,T0* a1);
T6 r268se_assigned_from(T0* a1);
T6 r268same_type(T268* C,T0* a1);
void r268make(T268* C,T0* a1);
T6 r268conforms_to(T268* C,T0* a1);
void r268set_after(T268* C);
T0* r268twin(T268* C);
T2 r504new_capacity(T2 a1);
void r504copy(T504* C,T0* a1);
void r504force(T504* C,T0* a1,T0* a2);
void r504make_clashes(T504* C,T2 a1);
void r504search_position(T504* C,T0* a1);
T6 r504is_equal(T504* C,T0* a1);
void r504remove_traversing_cursor(T504* C,T0* a1);
void r504clone_slots(T504* C);
extern T0*oBC87FIXED_INTEGER_ARRAY_;
void r504keys_resize(T504* C,T2 a1);
void r504clone_clashes(T504* C);
T0* r504item(T504* C,T0* a1);
void r504move_all_cursors_after(T504* C);
void r504make_items(T504* C,T2 a1);
void r504add_traversing_cursor(T504* C,T0* a1);
T6 r504se_assigned_from(T0* a1);
T0* r504clone(T0* a1);
T6 r504same_type(T504* C,T0* a1);
void r504make(T504* C,T2 a1);
void r504clone_items(T504* C);
T6 r504conforms_to(T504* C,T0* a1);
T6 r504has(T504* C,T0* a1);
void r504make_keys(T504* C,T2 a1);
T2 r504hash_position(T504* C,T0* a1);
void r504items_resize(T504* C,T2 a1);
void r504clone_keys(T504* C);
void r504make_with_equality_testers(T504* C,T2 a1,T0* a2,T0* a3);
void r504resize(T504* C,T2 a1);
T6 r504cursor_same_position(T0* a1,T0* a2);
void r504clashes_resize(T504* C,T2 a1);
void r504slots_resize(T504* C,T2 a1);
T0* r504twin(T504* C);
T0* r504new_cursor(T504* C);
void r504make_slots(T504* C,T2 a1);
T2 r504new_modulus(T2 a1);
T6 r504cursor_off(T0* a1);
void r243copy(T243* C,T0* a1);
T6 r243is_equal(T243* C,T0* a1);
T0* r243item(T243* C);
T6 r243same_position(T243* C,T0* a1);
T6 r243se_assigned_from(T0* a1);
T6 r243after(T243* C);
T6 r243same_type(T243* C,T0* a1);
T2 r243index(T243* C);
T6 r243off(T243* C);
T6 r243conforms_to(T243* C,T0* a1);
T0* r243twin(T243* C);
T6 r108is_equal(T108* C,T0* a1);
T6 r108se_assigned_from(T0* a1);
T6 r108conforms_to(T108* C,T0* a1);
T6 r108test(T0* a1,T0* a2);
T0* r108twin(T108* C);
void r144copy(T144* C,T0* a1);
T6 r144is_equal(T144* C,T0* a1);
void r144remove_traversing_cursor(T144* C,T0* a1);
void r144move_all_cursors_after(T144* C);
void r144add_traversing_cursor(T144* C,T0* a1);
T6 r144se_assigned_from(T0* a1);
T0* r144clone(T0* a1);
T6 r144cursor_before(T0* a1);
T6 r144same_type(T144* C,T0* a1);
void r144make(T144* C,T2 a1);
T6 r144cursor_after(T0* a1);
T6 r144conforms_to(T144* C,T0* a1);
T6 r144cursor_same_position(T0* a1,T0* a2);
T0* r144twin(T144* C);
T0* r144new_cursor(T144* C);
void r144put_last(T144* C,T0* a1);
T6 r144cursor_off(T0* a1);
T2 r115new_capacity(T2 a1);
void r115copy(T115* C,T0* a1);
void r115clear_items(T115* C,T2 a1,T2 a2);
T6 r115extendible(T115* C,T2 a1);
void r115wipe_out(T115* C);
T0* r115cursor_item(T115* C,T0* a1);
T6 r115is_equal(T115* C,T0* a1);
void r115remove_traversing_cursor(T115* C,T0* a1);
void r115cursor_go_after(T115* C,T0* a1);
void r115move_all_cursors_after(T115* C);
void r115add_traversing_cursor(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
T0* r115clone(T0* a1);
void r115move_left(T115* C,T2 a1,T2 a2);
T6 r115cursor_before(T0* a1);
T6 r115same_type(T115* C,T0* a1);
void r115make(T115* C,T2 a1);
void r115remove(T115* C,T2 a1);
void r115move_cursors_left(T115* C,T2 a1);
void r115remove_last(T115* C);
T6 r115cursor_after(T0* a1);
T6 r115conforms_to(T115* C,T0* a1);
T6 r115has(T115* C,T0* a1);
T2 r115cursor_index(T115* C,T0* a1);
void r115cursor_search_forth(T115* C,T0* a1,T0* a2);
void r115cursor_forth(T115* C,T0* a1);
void r115resize(T115* C,T2 a1);
T6 r115cursor_same_position(T0* a1,T0* a2);
void r115move_last_cursors_after(T115* C);
void r115delete(T115* C,T0* a1);
void r115cursor_start(T115* C,T0* a1);
T0* r115twin(T115* C);
void r115force_last(T115* C,T0* a1);
T0* r115new_cursor(T115* C);
void r115extend_last(T115* C,T0* a1);
T6 r115is_full(T115* C);
void r115put_last(T115* C,T0* a1);
T6 r115cursor_off(T0* a1);
void r430copy(T430* C,T0* a1);
T6 r430is_equal(T430* C,T0* a1);
T6 r430same_position(T430* C,T0* a1);
T6 r430se_assigned_from(T0* a1);
T6 r430same_type(T430* C,T0* a1);
T6 r430off(T430* C);
T6 r430conforms_to(T430* C,T0* a1);
T0* r430twin(T430* C);
void r564copy(T564* C,T0* a1);
T6 r564is_equal(T564* C,T0* a1);
T6 r564same_position(T564* C,T0* a1);
T6 r564se_assigned_from(T0* a1);
T6 r564same_type(T564* C,T0* a1);
T6 r564off(T564* C);
T6 r564conforms_to(T564* C,T0* a1);
T0* r564twin(T564* C);
void r145copy(T145* C,T0* a1);
void r145move_cursors_right(T145* C,T2 a1,T2 a2);
T0* r145last(T145* C);
void r145put(T145* C,T0* a1,T2 a2);
T0* r145cursor_item(T145* C,T0* a1);
T6 r145is_equal(T145* C,T0* a1);
void r145remove_traversing_cursor(T145* C,T0* a1);
void r145move_all_cursors_after(T145* C);
void r145add_traversing_cursor(T145* C,T0* a1);
T6 r145se_assigned_from(T0* a1);
T0* r145clone(T0* a1);
void r145move_left(T145* C,T2 a1,T2 a2);
T6 r145cursor_before(T0* a1);
T6 r145same_type(T145* C,T0* a1);
void r145make(T145* C,T2 a1);
void r145remove(T145* C,T2 a1);
void r145move_cursors_left(T145* C,T2 a1);
void r145remove_last(T145* C);
T6 r145cursor_after(T0* a1);
T6 r145conforms_to(T145* C,T0* a1);
T6 r145has(T145* C,T0* a1);
void r145move_right(T145* C,T2 a1,T2 a2);
void r145cursor_forth(T145* C,T0* a1);
void r145resize(T145* C,T2 a1);
T6 r145cursor_same_position(T0* a1,T0* a2);
void r145move_last_cursors_after(T145* C);
void r145cursor_start(T145* C,T0* a1);
T0* r145twin(T145* C);
T0* r145new_cursor(T145* C);
T6 r145is_full(T145* C);
void r145put_last(T145* C,T0* a1);
T6 r145cursor_off(T0* a1);
T6 r276is_equal(T276* C,T0* a1);
T6 r276se_assigned_from(T0* a1);
T6 r276conforms_to(T276* C,T0* a1);
T0* r276twin(T276* C);
T6 r448is_equal(T448* C,T0* a1);
T6 r448se_assigned_from(T0* a1);
T0* r448make(T2 a1);
T6 r448conforms_to(T448* C,T0* a1);
T0* r448resize(T0* a1,T2 a2);
T0* r448twin(T448* C);
void r275copy(T275* C,T0* a1);
T0* r275cursor_item(T0* a1);
T6 r275is_equal(T275* C,T0* a1);
void r275remove_traversing_cursor(T275* C,T0* a1);
void r275move_all_cursors_after(T275* C);
void r275add_traversing_cursor(T275* C,T0* a1);
T6 r275se_assigned_from(T0* a1);
T6 r275same_type(T275* C,T0* a1);
void r275make(T275* C);
T6 r275cursor_after(T0* a1);
T6 r275conforms_to(T275* C,T0* a1);
void r275cursor_forth(T275* C,T0* a1);
void r275cursor_start(T275* C,T0* a1);
T0* r275twin(T275* C);
void r275force_last(T275* C,T0* a1);
T0* r275new_cursor(T275* C);
T6 r275cursor_off(T0* a1);
void r469clear_all(T0* a1);
T6 r469is_equal(T469* C,T0* a1);
T6 r469se_assigned_from(T0* a1);
T0* r469make(T2 a1);
T6 r469conforms_to(T469* C,T0* a1);
T0* r469resize(T0* a1,T2 a2);
T0* r469twin(T469* C);
T6 r111is_equal(T111* C,T0* a1);
T6 r111se_assigned_from(T0* a1);
T0* r111to_fixed_array(T0* a1);
T0* r111make(T2 a1);
T0* r111make_from_array(T0* a1);
T6 r111conforms_to(T111* C,T0* a1);
T0* r111resize(T0* a1,T2 a2);
T0* r111twin(T111* C);
T6 r574is_equal(T574* C,T0* a1);
T6 r574se_assigned_from(T0* a1);
T6 r574conforms_to(T574* C,T0* a1);
T0* r574twin(T574* C);
void r226copy(T226* C,T0* a1);
T6 r226is_equal(T226* C,T0* a1);
T6 r226same_position(T226* C,T0* a1);
T6 r226se_assigned_from(T0* a1);
T6 r226same_type(T226* C,T0* a1);
T6 r226off(T226* C);
T6 r226conforms_to(T226* C,T0* a1);
T0* r226twin(T226* C);
T6 r382is_equal(T382* C,T0* a1);
T6 r382se_assigned_from(T0* a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382twin(T382* C);
T2 r388new_capacity(T2 a1);
void r388copy(T388* C,T0* a1);
T6 r388extendible(T388* C,T2 a1);
void r388force(T388* C,T0* a1);
T6 r388is_equal(T388* C,T0* a1);
T0* r388item(T388* C);
T6 r388se_assigned_from(T0* a1);
T0* r388clone(T0* a1);
T6 r388same_type(T388* C,T0* a1);
void r388make(T388* C,T2 a1);
void r388remove(T388* C);
T6 r388conforms_to(T388* C,T0* a1);
void r388resize(T388* C,T2 a1);
T0* r388twin(T388* C);
T6 r363is_equal(T363* C,T0* a1);
T6 r363se_assigned_from(T0* a1);
T6 r363conforms_to(T363* C,T0* a1);
T6 r363less_than(T0* a1,T0* a2);
T0* r363twin(T363* C);
T6 r112is_equal(T112* C,T0* a1);
T6 r112se_assigned_from(T0* a1);
T0* r112make(T2 a1);
T6 r112conforms_to(T112* C,T0* a1);
T0* r112resize(T0* a1,T2 a2);
T0* r112twin(T112* C);
void r69copy(T69* C,T0* a1);
T0* r69cursor_item(T69* C,T0* a1);
T6 r69is_equal(T69* C,T0* a1);
void r69remove_traversing_cursor(T69* C,T0* a1);
void r69cursor_go_after(T69* C,T0* a1);
void r69move_all_cursors_after(T69* C);
void r69add_traversing_cursor(T69* C,T0* a1);
T6 r69se_assigned_from(T0* a1);
T0* r69clone(T0* a1);
void r69move_left(T69* C,T2 a1,T2 a2);
T6 r69cursor_before(T0* a1);
T6 r69same_type(T69* C,T0* a1);
void r69make(T69* C,T2 a1);
void r69remove(T69* C,T2 a1);
void r69move_cursors_left(T69* C,T2 a1);
void r69remove_last(T69* C);
T6 r69cursor_after(T0* a1);
T6 r69conforms_to(T69* C,T0* a1);
T6 r69has(T69* C,T0* a1);
T2 r69cursor_index(T69* C,T0* a1);
void r69cursor_search_forth(T69* C,T0* a1,T0* a2);
void r69cursor_forth(T69* C,T0* a1);
void r69resize(T69* C,T2 a1);
T6 r69cursor_same_position(T0* a1,T0* a2);
void r69move_last_cursors_after(T69* C);
void r69cursor_start(T69* C,T0* a1);
T0* r69twin(T69* C);
T0* r69new_cursor(T69* C);
T6 r69is_full(T69* C);
void r69put_last(T69* C,T0* a1);
T6 r69cursor_off(T0* a1);
void r449copy(T449* C,T0* a1);
T6 r449is_equal(T449* C,T0* a1);
T0* r449item(T449* C);
T6 r449same_position(T449* C,T0* a1);
T6 r449se_assigned_from(T0* a1);
T6 r449after(T449* C);
T6 r449same_type(T449* C,T0* a1);
T2 r449index(T449* C);
T6 r449off(T449* C);
T6 r449conforms_to(T449* C,T0* a1);
T0* r449twin(T449* C);
T6 r573is_equal(T573* C,T0* a1);
T6 r573se_assigned_from(T0* a1);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
void r356copy(T356* C,T0* a1);
void r356make_clashes(T356* C,T2 a1);
void r356put(T356* C,T0* a1,T2 a2);
void r356search_position(T356* C,T2 a1);
T6 r356is_equal(T356* C,T0* a1);
void r356remove_traversing_cursor(T356* C,T0* a1);
void r356clone_slots(T356* C);
void r356keys_resize(T356* C,T2 a1);
void r356clone_clashes(T356* C);
T0* r356item(T356* C,T2 a1);
void r356move_all_cursors_after(T356* C);
void r356make_items(T356* C,T2 a1);
void r356add_traversing_cursor(T356* C,T0* a1);
T6 r356se_assigned_from(T0* a1);
T0* r356clone(T0* a1);
T6 r356same_type(T356* C,T0* a1);
void r356make(T356* C,T2 a1);
void r356clone_items(T356* C);
T6 r356conforms_to(T356* C,T0* a1);
T6 r356has(T356* C,T2 a1);
void r356make_keys(T356* C,T2 a1);
T2 r356hash_position(T356* C,T2 a1);
void r356items_resize(T356* C,T2 a1);
void r356clone_keys(T356* C);
void r356make_with_equality_testers(T356* C,T2 a1,T0* a2,T0* a3);
void r356resize(T356* C,T2 a1);
T6 r356cursor_same_position(T0* a1,T0* a2);
void r356clashes_resize(T356* C,T2 a1);
void r356slots_resize(T356* C,T2 a1);
T0* r356twin(T356* C);
T0* r356new_cursor(T356* C);
void r356make_slots(T356* C,T2 a1);
T2 r356new_modulus(T2 a1);
T6 r356cursor_off(T0* a1);
void r551copy(T551* C,T0* a1);
T6 r551is_equal(T551* C,T0* a1);
T0* r551item(T551* C);
T6 r551same_position(T551* C,T0* a1);
T6 r551se_assigned_from(T0* a1);
T6 r551after(T551* C);
T6 r551same_type(T551* C,T0* a1);
void r551make(T551* C,T0* a1);
T6 r551off(T551* C);
T6 r551conforms_to(T551* C,T0* a1);
T0* r551twin(T551* C);
void r396clear_all(T0* a1);
T6 r396is_equal(T396* C,T0* a1);
T6 r396se_assigned_from(T0* a1);
T0* r396make(T2 a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396resize(T0* a1,T2 a2);
T0* r396twin(T396* C);
void r179copy(T179* C,T0* a1);
void r179set(T179* C,T0* a1,T6 a2,T6 a3);
T6 r179is_equal(T179* C,T0* a1);
T6 r179same_position(T179* C,T0* a1);
T6 r179se_assigned_from(T0* a1);
T6 r179same_type(T179* C,T0* a1);
void r179make(T179* C,T0* a1);
T6 r179conforms_to(T179* C,T0* a1);
void r179set_after(T179* C);
T0* r179twin(T179* C);
void r529copy(T529* C,T0* a1);
T6 r529is_equal(T529* C,T0* a1);
T6 r529same_position(T529* C,T0* a1);
T6 r529se_assigned_from(T0* a1);
T6 r529same_type(T529* C,T0* a1);
T6 r529off(T529* C);
T6 r529conforms_to(T529* C,T0* a1);
T0* r529twin(T529* C);
void r554copy(T554* C,T0* a1);
T6 r554is_equal(T554* C,T0* a1);
T0* r554item(T554* C);
T6 r554same_position(T554* C,T0* a1);
T6 r554se_assigned_from(T0* a1);
T6 r554after(T554* C);
T6 r554same_type(T554* C,T0* a1);
void r554make(T554* C,T0* a1);
T6 r554off(T554* C);
T6 r554conforms_to(T554* C,T0* a1);
T0* r554twin(T554* C);
void r346copy(T346* C,T0* a1);
T6 r346is_equal(T346* C,T0* a1);
T6 r346same_position(T346* C,T0* a1);
T6 r346se_assigned_from(T0* a1);
T6 r346same_type(T346* C,T0* a1);
T6 r346off(T346* C);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346twin(T346* C);
void r299copy(T299* C,T0* a1);
void r299append_last(T299* C,T0* a1);
T0* r299cursor_item(T0* a1);
T6 r299is_equal(T299* C,T0* a1);
void r299remove_traversing_cursor(T299* C,T0* a1);
void r299move_all_cursors_after(T299* C);
void r299add_traversing_cursor(T299* C,T0* a1);
T6 r299se_assigned_from(T0* a1);
T6 r299same_type(T299* C,T0* a1);
void r299make(T299* C);
T6 r299cursor_after(T0* a1);
T6 r299conforms_to(T299* C,T0* a1);
void r299cursor_forth(T299* C,T0* a1);
void r299make_from_linear(T299* C,T0* a1);
void r299cursor_start(T299* C,T0* a1);
T0* r299twin(T299* C);
T0* r299new_cursor(T299* C);
T6 r299cursor_off(T0* a1);
T6 r332is_equal(T332* C,T0* a1);
T6 r332se_assigned_from(T0* a1);
T0* r332make(T2 a1);
T6 r332conforms_to(T332* C,T0* a1);
T0* r332resize(T0* a1,T2 a2);
T0* r332twin(T332* C);
void r286copy(T286* C,T0* a1);
T6 r286is_equal(T286* C,T0* a1);
T6 r286same_position(T286* C,T0* a1);
T6 r286se_assigned_from(T0* a1);
T6 r286same_type(T286* C,T0* a1);
T6 r286off(T286* C);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286twin(T286* C);
T2 r147new_capacity(T2 a1);
void r147copy(T147* C,T0* a1);
T6 r147extendible(T147* C,T2 a1);
void r147move_cursors_right(T147* C,T2 a1,T2 a2);
T0* r147last(T147* C);
void r147put(T147* C,T0* a1,T2 a2);
T6 r147is_equal(T147* C,T0* a1);
void r147remove_traversing_cursor(T147* C,T0* a1);
void r147move_all_cursors_after(T147* C);
void r147add_traversing_cursor(T147* C,T0* a1);
T6 r147se_assigned_from(T0* a1);
T0* r147clone(T0* a1);
void r147move_left(T147* C,T2 a1,T2 a2);
T6 r147cursor_before(T0* a1);
T6 r147same_type(T147* C,T0* a1);
void r147make(T147* C,T2 a1);
void r147remove(T147* C,T2 a1);
void r147move_cursors_left(T147* C,T2 a1);
void r147remove_last(T147* C);
T6 r147cursor_after(T0* a1);
T6 r147conforms_to(T147* C,T0* a1);
void r147move_right(T147* C,T2 a1,T2 a2);
void r147resize(T147* C,T2 a1);
T6 r147cursor_same_position(T0* a1,T0* a2);
void r147move_last_cursors_after(T147* C);
T0* r147twin(T147* C);
void r147force_last(T147* C,T0* a1);
T0* r147new_cursor(T147* C);
void r147put_last(T147* C,T0* a1);
T6 r147cursor_off(T0* a1);
T6 r161is_equal(T161* C,T0* a1);
void r161subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r161se_assigned_from(T0* a1);
T6 r161conforms_to(T161* C,T0* a1);
T0* r161twin(T161* C);
void r161sort_with_comparator(T0* a1,T0* a2);
void r247copy(T247* C,T0* a1);
void r247make_equal(T247* C,T2 a1);
T6 r247is_equal(T247* C,T0* a1);
void r247remove_traversing_cursor(T247* C,T0* a1);
void r247move_all_cursors_after(T247* C);
void r247add_traversing_cursor(T247* C,T0* a1);
T6 r247se_assigned_from(T0* a1);
T0* r247clone(T0* a1);
T6 r247cursor_before(T0* a1);
T6 r247same_type(T247* C,T0* a1);
T6 r247cursor_after(T0* a1);
T6 r247conforms_to(T247* C,T0* a1);
T6 r247has(T247* C,T0* a1);
void r247resize(T247* C,T2 a1);
T6 r247cursor_same_position(T0* a1,T0* a2);
T0* r247twin(T247* C);
T0* r247new_cursor(T247* C);
T6 r247is_full(T247* C);
void r247put_last(T247* C,T0* a1);
T6 r247cursor_off(T0* a1);
void r546copy(T546* C,T0* a1);
T6 r546is_equal(T546* C,T0* a1);
T6 r546same_position(T546* C,T0* a1);
T6 r546se_assigned_from(T0* a1);
T6 r546same_type(T546* C,T0* a1);
void r546make(T546* C,T0* a1);
T6 r546off(T546* C);
T6 r546conforms_to(T546* C,T0* a1);
T0* r546twin(T546* C);
T6 r326is_equal(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T0* r326make(T2 a1);
T6 r326conforms_to(T326* C,T0* a1);
T0* r326resize(T0* a1,T2 a2);
T0* r326twin(T326* C);
T6 r364is_equal(T364* C,T0* a1);
void r364subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r364se_assigned_from(T0* a1);
T6 r364conforms_to(T364* C,T0* a1);
T0* r364twin(T364* C);
void r364sort_with_comparator(T0* a1,T0* a2);
T6 r571is_equal(T571* C,T0* a1);
T6 r571se_assigned_from(T0* a1);
T6 r571conforms_to(T571* C,T0* a1);
T0* r571twin(T571* C);
T2 r496new_capacity(T2 a1);
void r496copy(T496* C,T0* a1);
void r496force(T496* C,T0* a1,T0* a2);
void r496make_clashes(T496* C,T2 a1);
T0* r496cursor_item(T496* C,T0* a1);
void r496search_position(T496* C,T0* a1);
T6 r496is_equal(T496* C,T0* a1);
void r496remove_traversing_cursor(T496* C,T0* a1);
void r496clone_slots(T496* C);
void r496keys_resize(T496* C,T2 a1);
void r496clone_clashes(T496* C);
T0* r496item(T496* C,T0* a1);
void r496move_all_cursors_after(T496* C);
void r496make_items(T496* C,T2 a1);
void r496add_traversing_cursor(T496* C,T0* a1);
T6 r496se_assigned_from(T0* a1);
T0* r496clone(T0* a1);
T6 r496same_type(T496* C,T0* a1);
void r496make(T496* C,T2 a1);
void r496clone_items(T496* C);
T6 r496cursor_after(T0* a1);
T6 r496conforms_to(T496* C,T0* a1);
T6 r496has(T496* C,T0* a1);
void r496make_keys(T496* C,T2 a1);
T2 r496hash_position(T496* C,T0* a1);
void r496cursor_forth(T496* C,T0* a1);
void r496items_resize(T496* C,T2 a1);
void r496clone_keys(T496* C);
void r496make_with_equality_testers(T496* C,T2 a1,T0* a2,T0* a3);
void r496resize(T496* C,T2 a1);
T6 r496cursor_same_position(T0* a1,T0* a2);
void r496cursor_start(T496* C,T0* a1);
void r496clashes_resize(T496* C,T2 a1);
void r496slots_resize(T496* C,T2 a1);
T0* r496twin(T496* C);
T0* r496new_cursor(T496* C);
void r496make_slots(T496* C,T2 a1);
T2 r496new_modulus(T2 a1);
T6 r496cursor_off(T0* a1);
T6 r235is_equal(T235* C,T0* a1);
T6 r235se_assigned_from(T0* a1);
T6 r235conforms_to(T235* C,T0* a1);
T6 r235test(T0* a1,T0* a2);
T0* r235twin(T235* C);
void r149subcopy(T0* a1,T0* a2,T2 a3,T2 a4,T2 a5);
T6 r149is_equal(T149* C,T0* a1);
T6 r149se_assigned_from(T0* a1);
T6 r149conforms_to(T149* C,T0* a1);
T0* r149twin(T149* C);
T0* r149subarray(T0* a1,T2 a2,T2 a3,T2 a4);
void r265copy(T265* C,T0* a1);
T0* r265cursor_item(T0* a1);
T6 r265is_equal(T265* C,T0* a1);
void r265remove_traversing_cursor(T265* C,T0* a1);
void r265cursor_go_after(T265* C,T0* a1);
void r265move_all_cursors_after(T265* C);
void r265add_traversing_cursor(T265* C,T0* a1);
T6 r265se_assigned_from(T0* a1);
T6 r265same_type(T265* C,T0* a1);
void r265make(T265* C);
T6 r265cursor_after(T0* a1);
T6 r265conforms_to(T265* C,T0* a1);
T6 r265has(T265* C,T0* a1);
void r265cursor_search_forth(T265* C,T0* a1,T0* a2);
void r265cursor_forth(T265* C,T0* a1);
void r265cursor_start(T265* C,T0* a1);
T0* r265twin(T265* C);
void r265force_last(T265* C,T0* a1);
T0* r265new_cursor(T265* C);
T6 r265cursor_off(T0* a1);
T6 r207is_equal(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
T6 r207conforms_to(T207* C,T0* a1);
T0* r207twin(T207* C);
T6 r495is_equal(T495* C,T0* a1);
T6 r495se_assigned_from(T0* a1);
void r495make(T495* C,T0* a1,T2 a2);
T6 r495conforms_to(T495* C,T0* a1);
T0* r495twin(T495* C);
T6 r229is_equal(T229* C,T0* a1);
T6 r229se_assigned_from(T0* a1);
T0* r229make(T2 a1);
T6 r229conforms_to(T229* C,T0* a1);
T0* r229resize(T0* a1,T2 a2);
T0* r229twin(T229* C);
void r331copy(T331* C,T0* a1);
T6 r331is_equal(T331* C,T0* a1);
T0* r331item(T331* C);
T6 r331same_position(T331* C,T0* a1);
T6 r331se_assigned_from(T0* a1);
T6 r331after(T331* C);
T6 r331same_type(T331* C,T0* a1);
T6 r331off(T331* C);
T6 r331conforms_to(T331* C,T0* a1);
T0* r331twin(T331* C);
void r371copy(T371* C,T0* a1);
void r371set(T371* C,T0* a1,T6 a2,T6 a3);
T6 r371is_equal(T371* C,T0* a1);
T6 r371same_position(T371* C,T0* a1);
T6 r371se_assigned_from(T0* a1);
T6 r371same_type(T371* C,T0* a1);
void r371make(T371* C,T0* a1);
T6 r371conforms_to(T371* C,T0* a1);
void r371set_after(T371* C);
T0* r371twin(T371* C);
void r307copy(T307* C,T0* a1);
void r307set(T307* C,T0* a1,T6 a2,T6 a3);
T6 r307is_equal(T307* C,T0* a1);
T6 r307same_position(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T6 r307same_type(T307* C,T0* a1);
void r307make(T307* C,T0* a1);
T6 r307conforms_to(T307* C,T0* a1);
void r307set_after(T307* C);
T0* r307twin(T307* C);
T6 r340is_equal(T340* C,T0* a1);
T6 r340se_assigned_from(T0* a1);
T6 r340conforms_to(T340* C,T0* a1);
T6 r340test(T0* a1,T0* a2);
T0* r340twin(T340* C);
void r444copy(T444* C,T0* a1);
T6 r444is_equal(T444* C,T0* a1);
T0* r444item(T444* C);
T6 r444same_position(T444* C,T0* a1);
T6 r444se_assigned_from(T0* a1);
T6 r444after(T444* C);
T6 r444same_type(T444* C,T0* a1);
T6 r444off(T444* C);
T6 r444conforms_to(T444* C,T0* a1);
T0* r444twin(T444* C);
T6 r328is_equal(T328* C,T0* a1);
T6 r328se_assigned_from(T0* a1);
T6 r328conforms_to(T328* C,T0* a1);
T0* r328twin(T328* C);
T6 r577is_equal(T577* C,T0* a1);
T6 r577se_assigned_from(T0* a1);
T6 r577conforms_to(T577* C,T0* a1);
T6 r577test(T0* a1,T0* a2);
T0* r577twin(T577* C);
T6 r408is_equal(T408* C,T0* a1);
T6 r408se_assigned_from(T0* a1);
T6 r408conforms_to(T408* C,T0* a1);
T0* r408twin(T408* C);
void r214copy(T214* C,T0* a1);
T6 r214extendible(T214* C,T2 a1);
T0* r214cursor_item(T214* C,T0* a1);
T6 r214is_equal(T214* C,T0* a1);
void r214remove_traversing_cursor(T214* C,T0* a1);
void r214move_all_cursors_after(T214* C);
void r214add_traversing_cursor(T214* C,T0* a1);
T6 r214se_assigned_from(T0* a1);
T0* r214clone(T0* a1);
T6 r214cursor_before(T0* a1);
T6 r214same_type(T214* C,T0* a1);
void r214make(T214* C,T2 a1);
T6 r214cursor_after(T0* a1);
T6 r214conforms_to(T214* C,T0* a1);
void r214cursor_forth(T214* C,T0* a1);
void r214resize(T214* C,T2 a1);
T6 r214cursor_same_position(T0* a1,T0* a2);
void r214cursor_start(T214* C,T0* a1);
T0* r214twin(T214* C);
T0* r214new_cursor(T214* C);
void r214put_last(T214* C,T0* a1);
T6 r214cursor_off(T0* a1);
T6 r236is_equal(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
T0* r236make(T2 a1);
T6 r236conforms_to(T236* C,T0* a1);
T0* r236resize(T0* a1,T2 a2);
T0* r236twin(T236* C);
T6 r576is_equal(T576* C,T0* a1);
T6 r576se_assigned_from(T0* a1);
T6 r576conforms_to(T576* C,T0* a1);
T0* r576twin(T576* C);
void r230copy(T230* C,T0* a1);
T6 r230is_equal(T230* C,T0* a1);
void r230remove_traversing_cursor(T230* C,T0* a1);
T0* r230item(T230* C,T2 a1);
void r230move_all_cursors_after(T230* C);
void r230add_traversing_cursor(T230* C,T0* a1);
T6 r230se_assigned_from(T0* a1);
T0* r230clone(T0* a1);
T6 r230cursor_before(T0* a1);
T6 r230same_type(T230* C,T0* a1);
void r230make(T230* C,T2 a1);
T6 r230cursor_after(T0* a1);
T6 r230conforms_to(T230* C,T0* a1);
T6 r230has(T230* C,T0* a1);
T0* r230first(T230* C);
void r230resize(T230* C,T2 a1);
T6 r230cursor_same_position(T0* a1,T0* a2);
T0* r230twin(T230* C);
T0* r230new_cursor(T230* C);
T6 r230is_full(T230* C);
void r230put_last(T230* C,T0* a1);
T6 r230cursor_off(T0* a1);
void r289copy(T289* C,T0* a1);
void r289set(T289* C,T0* a1,T6 a2,T6 a3);
T6 r289is_equal(T289* C,T0* a1);
T6 r289same_position(T289* C,T0* a1);
T6 r289se_assigned_from(T0* a1);
T6 r289same_type(T289* C,T0* a1);
void r289make(T289* C,T0* a1);
T6 r289conforms_to(T289* C,T0* a1);
void r289set_after(T289* C);
T0* r289twin(T289* C);
T2 r489new_capacity(T2 a1);
void r489copy(T489* C,T0* a1);
void r489force(T489* C,T0* a1,T0* a2);
void r489make_clashes(T489* C,T2 a1);
T0* r489cursor_item(T489* C,T0* a1);
void r489search_position(T489* C,T0* a1);
T6 r489is_equal(T489* C,T0* a1);
void r489remove_traversing_cursor(T489* C,T0* a1);
void r489clone_slots(T489* C);
void r489keys_resize(T489* C,T2 a1);
void r489cursor_go_after(T489* C,T0* a1);
void r489clone_clashes(T489* C);
T0* r489item(T489* C,T0* a1);
void r489move_all_cursors_after(T489* C);
void r489make_items(T489* C,T2 a1);
void r489add_traversing_cursor(T489* C,T0* a1);
T6 r489se_assigned_from(T0* a1);
T0* r489clone(T0* a1);
T6 r489has_item(T489* C,T0* a1);
T6 r489same_type(T489* C,T0* a1);
void r489make(T489* C,T2 a1);
void r489clone_items(T489* C);
T6 r489cursor_after(T0* a1);
T6 r489conforms_to(T489* C,T0* a1);
T6 r489has(T489* C,T0* a1);
void r489make_keys(T489* C,T2 a1);
void r489cursor_search_forth(T489* C,T0* a1,T0* a2);
T2 r489hash_position(T489* C,T0* a1);
void r489cursor_forth(T489* C,T0* a1);
void r489items_resize(T489* C,T2 a1);
void r489clone_keys(T489* C);
void r489make_with_equality_testers(T489* C,T2 a1,T0* a2,T0* a3);
void r489resize(T489* C,T2 a1);
T6 r489cursor_same_position(T0* a1,T0* a2);
void r489cursor_start(T489* C,T0* a1);
void r489clashes_resize(T489* C,T2 a1);
void r489slots_resize(T489* C,T2 a1);
T0* r489twin(T489* C);
T0* r489new_cursor(T489* C);
void r489make_slots(T489* C,T2 a1);
T2 r489new_modulus(T2 a1);
T6 r489cursor_off(T0* a1);
T6 r297is_equal(T297* C,T0* a1);
T6 r297se_assigned_from(T0* a1);
T6 r297conforms_to(T297* C,T0* a1);
void r297traverse(T0* a1,T0* a2);
T0* r297twin(T297* C);
void r297flatten(T0* a1);
void r532clear_all(T0* a1);
T6 r532is_equal(T532* C,T0* a1);
T6 r532se_assigned_from(T0* a1);
T0* r532make(T2 a1);
T6 r532conforms_to(T532* C,T0* a1);
T0* r532resize(T0* a1,T2 a2);
T0* r532twin(T532* C);
T6 r385is_equal(T385* C,T0* a1);
T6 r385se_assigned_from(T0* a1);
T6 r385conforms_to(T385* C,T0* a1);
void r385traverse(T0* a1,T0* a2);
T0* r385twin(T385* C);
void r385flatten(T0* a1);
T6 r369is_equal(T369* C,T0* a1);
T6 r369se_assigned_from(T0* a1);
T0* r369make(T2 a1);
T6 r369conforms_to(T369* C,T0* a1);
T0* r369resize(T0* a1,T2 a2);
T0* r369twin(T369* C);
T6 r160is_equal(T160* C,T0* a1);
T6 r160se_assigned_from(T0* a1);
T6 r160conforms_to(T160* C,T0* a1);
T6 r160less_than(T0* a1,T0* a2);
T0* r160twin(T160* C);
T6 r500is_equal(T500* C,T0* a1);
T6 r500se_assigned_from(T0* a1);
T0* r500make(T2 a1);
T6 r500conforms_to(T500* C,T0* a1);
T0* r500resize(T0* a1,T2 a2);
T0* r500twin(T500* C);
void r92copy(T92* C,T0* a1);
void r92make_clashes(T92* C,T2 a1);
void r92put(T92* C,T0* a1);
T0* r92cursor_item(T92* C,T0* a1);
void r92search_position(T92* C,T0* a1);
T6 r92is_equal(T92* C,T0* a1);
void r92remove_traversing_cursor(T92* C,T0* a1);
void r92clone_slots(T92* C);
void r92clone_clashes(T92* C);
void r92move_all_cursors_after(T92* C);
void r92make_items(T92* C,T2 a1);
void r92add_traversing_cursor(T92* C,T0* a1);
T6 r92se_assigned_from(T0* a1);
T0* r92clone(T0* a1);
T6 r92same_type(T92* C,T0* a1);
void r92make(T92* C,T2 a1);
T6 r92equal(T0* a1,T0* a2);
void r92clone_items(T92* C);
T6 r92same_equality_tester(T92* C,T0* a1);
T6 r92cursor_after(T0* a1);
T6 r92conforms_to(T92* C,T0* a1);
T6 r92has(T92* C,T0* a1);
T2 r92hash_position(T92* C,T0* a1);
void r92cursor_forth(T92* C,T0* a1);
T6 r92cursor_same_position(T0* a1,T0* a2);
void r92cursor_start(T92* C,T0* a1);
T0* r92twin(T92* C);
T0* r92new_cursor(T92* C);
void r92make_slots(T92* C,T2 a1);
T2 r92new_modulus(T2 a1);
T6 r92cursor_off(T0* a1);
void r501copy(T501* C,T0* a1);
void r501set(T501* C,T0* a1,T6 a2,T6 a3);
T6 r501is_equal(T501* C,T0* a1);
T6 r501same_position(T501* C,T0* a1);
T6 r501se_assigned_from(T0* a1);
T6 r501same_type(T501* C,T0* a1);
void r501make(T501* C,T0* a1);
T6 r501conforms_to(T501* C,T0* a1);
void r501set_after(T501* C);
T0* r501twin(T501* C);
T6 r349is_equal(T349* C,T0* a1);
T6 r349se_assigned_from(T0* a1);
T0* r349make(T2 a1);
T6 r349conforms_to(T349* C,T0* a1);
T0* r349resize(T0* a1,T2 a2);
T0* r349twin(T349* C);
void r91copy(T91* C,T0* a1);
T6 r91is_equal(T91* C,T0* a1);
T0* r91item(T91* C);
T6 r91same_position(T91* C,T0* a1);
T6 r91se_assigned_from(T0* a1);
T6 r91after(T91* C);
T6 r91same_type(T91* C,T0* a1);
void r91make(T91* C,T0* a1);
T6 r91off(T91* C);
T6 r91conforms_to(T91* C,T0* a1);
T0* r91twin(T91* C);
T6 r502is_equal(T502* C,T0* a1);
T6 r502se_assigned_from(T0* a1);
T0* r502make(T2 a1);
T6 r502conforms_to(T502* C,T0* a1);
T0* r502resize(T0* a1,T2 a2);
T0* r502twin(T502* C);
T2 r58new_capacity(T2 a1);
void r58copy(T58* C,T0* a1);
T6 r58extendible(T58* C,T2 a1);
T6 r58is_equal(T58* C,T0* a1);
void r58remove_traversing_cursor(T58* C,T0* a1);
void r58move_all_cursors_after(T58* C);
void r58add_traversing_cursor(T58* C,T0* a1);
T6 r58se_assigned_from(T0* a1);
T0* r58clone(T0* a1);
T6 r58cursor_before(T0* a1);
T6 r58same_type(T58* C,T0* a1);
void r58make(T58* C,T2 a1);
T6 r58cursor_after(T0* a1);
T6 r58conforms_to(T58* C,T0* a1);
void r58resize(T58* C,T2 a1);
T6 r58cursor_same_position(T0* a1,T0* a2);
T0* r58twin(T58* C);
void r58force_last(T58* C,T0* a1);
T0* r58new_cursor(T58* C);
T6 r58is_full(T58* C);
void r58put_last(T58* C,T0* a1);
T6 r58cursor_off(T0* a1);
void r511copy(T511* C,T0* a1);
T6 r511is_equal(T511* C,T0* a1);
T6 r511same_position(T511* C,T0* a1);
T6 r511se_assigned_from(T0* a1);
T6 r511same_type(T511* C,T0* a1);
T6 r511off(T511* C);
T6 r511conforms_to(T511* C,T0* a1);
T0* r511twin(T511* C);
T6 r548is_equal(T548* C,T0* a1);
T6 r548se_assigned_from(T0* a1);
T6 r548conforms_to(T548* C,T0* a1);
T6 r548test(T0* a1,T0* a2);
T0* r548twin(T548* C);
T6 r492is_equal(T492* C,T0* a1);
T6 r492se_assigned_from(T0* a1);
T6 r492conforms_to(T492* C,T0* a1);
T6 r492test(T0* a1,T0* a2);
T0* r492twin(T492* C);
T6 r435is_equal(T435* C,T0* a1);
T6 r435se_assigned_from(T0* a1);
T0* r435make(T2 a1);
T6 r435conforms_to(T435* C,T0* a1);
T0* r435resize(T0* a1,T2 a2);
T0* r435twin(T435* C);
void r380copy(T380* C,T0* a1);
void r380append_last(T380* C,T0* a1);
T0* r380cursor_item(T0* a1);
T6 r380is_equal(T380* C,T0* a1);
void r380remove_traversing_cursor(T380* C,T0* a1);
void r380cursor_go_after(T380* C,T0* a1);
void r380move_all_cursors_after(T380* C);
void r380add_traversing_cursor(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
T6 r380same_type(T380* C,T0* a1);
void r380make(T380* C);
T6 r380cursor_after(T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
T6 r380has(T380* C,T0* a1);
void r380cursor_search_forth(T380* C,T0* a1,T0* a2);
void r380cursor_forth(T380* C,T0* a1);
void r380make_from_linear(T380* C,T0* a1);
void r380cursor_start(T380* C,T0* a1);
T0* r380twin(T380* C);
void r380force_last(T380* C,T0* a1);
T0* r380new_cursor(T380* C);
T6 r380cursor_off(T0* a1);
void r420copy(T420* C,T0* a1);
void r420clear_items(T420* C,T2 a1,T2 a2);
void r420wipe_out(T420* C);
T6 r420is_equal(T420* C,T0* a1);
void r420remove_traversing_cursor(T420* C,T0* a1);
void r420move_all_cursors_after(T420* C);
void r420add_traversing_cursor(T420* C,T0* a1);
T6 r420se_assigned_from(T0* a1);
T0* r420clone(T0* a1);
T6 r420cursor_before(T0* a1);
T6 r420same_type(T420* C,T0* a1);
void r420make(T420* C,T2 a1);
T6 r420cursor_after(T0* a1);
T6 r420conforms_to(T420* C,T0* a1);
T6 r420cursor_same_position(T0* a1,T0* a2);
T0* r420twin(T420* C);
T0* r420new_cursor(T420* C);
void r420put_last(T420* C,T0* a1);
T6 r420cursor_off(T0* a1);
T6 r319is_equal(T319* C,T0* a1);
T6 r319se_assigned_from(T0* a1);
T0* r319make(T2 a1);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319resize(T0* a1,T2 a2);
T0* r319twin(T319* C);
void r418copy(T418* C,T0* a1);
T6 r418is_equal(T418* C,T0* a1);
T6 r418same_position(T418* C,T0* a1);
T6 r418se_assigned_from(T0* a1);
T6 r418same_type(T418* C,T0* a1);
void r418make(T418* C,T0* a1);
T6 r418off(T418* C);
T6 r418conforms_to(T418* C,T0* a1);
T0* r418twin(T418* C);
void r143copy(T143* C,T0* a1);
T2 r143last(T143* C);
T6 r143is_equal(T143* C,T0* a1);
void r143remove_traversing_cursor(T143* C,T0* a1);
void r143move_all_cursors_after(T143* C);
void r143add_traversing_cursor(T143* C,T0* a1);
T6 r143se_assigned_from(T0* a1);
T0* r143clone(T0* a1);
T6 r143cursor_before(T0* a1);
T6 r143same_type(T143* C,T0* a1);
void r143make(T143* C,T2 a1);
T6 r143cursor_after(T0* a1);
T6 r143conforms_to(T143* C,T0* a1);
T6 r143cursor_same_position(T0* a1,T0* a2);
T0* r143twin(T143* C);
T0* r143new_cursor(T143* C);
void r143put_last(T143* C,T2 a1);
T6 r143cursor_off(T0* a1);
void r193copy(T193* C,T0* a1);
T6 r193is_equal(T193* C,T0* a1);
T6 r193same_position(T193* C,T0* a1);
T6 r193se_assigned_from(T0* a1);
T6 r193same_type(T193* C,T0* a1);
T6 r193off(T193* C);
T6 r193conforms_to(T193* C,T0* a1);
T0* r193twin(T193* C);
T6 r266is_equal(T266* C,T0* a1);
T6 r266se_assigned_from(T0* a1);
T6 r266conforms_to(T266* C,T0* a1);
T0* r266twin(T266* C);
T6 r518is_equal(T518* C,T0* a1);
T6 r518se_assigned_from(T0* a1);
extern T0*oBC22Arguments;
extern int fBC22Arguments;
T0* r518Arguments(void);
void r518make(T518* C,T0* a1,T2 a2,T0* a3,T0* a4,T0* a5);
T0* r518message(T518* C,T0* a1);
T6 r518conforms_to(T518* C,T0* a1);
T0* r518twin(T518* C);
T0* r518default_message(T518* C);
extern T0*oBC20STRING_;
T6 r481is_equal(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
T0* r481Arguments(void);
void r481make(T481* C,T0* a1,T2 a2);
T0* r481message(T481* C,T0* a1);
T6 r481conforms_to(T481* C,T0* a1);
T0* r481twin(T481* C);
T0* r481default_message(T481* C);
T6 r480is_equal(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
T0* r480Arguments(void);
void r480make(T480* C,T0* a1,T2 a2,T0* a3);
T0* r480message(T480* C,T0* a1);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T0* r480default_message(T480* C);
T6 r570is_equal(T570* C,T0* a1);
T6 r570se_assigned_from(T0* a1);
T0* r570Arguments(void);
void r570make(T570* C,T0* a1);
T0* r570message(T570* C,T0* a1);
T6 r570conforms_to(T570* C,T0* a1);
T0* r570twin(T570* C);
T0* r570default_message(T570* C);
T6 r534is_equal(T534* C,T0* a1);
T6 r534se_assigned_from(T0* a1);
void r534out_in_tagged_out_memory(T534* C);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T6 r514is_equal(T514* C,T0* a1);
T6 r514se_assigned_from(T0* a1);
T0* r514Arguments(void);
void r514make(T514* C,T0* a1,T2 a2,T0* a3);
T0* r514message(T514* C,T0* a1);
T6 r514conforms_to(T514* C,T0* a1);
T0* r514twin(T514* C);
T0* r514default_message(T514* C);
T6 r540is_equal(T540* C,T0* a1);
T6 r540se_assigned_from(T0* a1);
void r540read_character(T540* C);
void r540make(T540* C);
T6 r540conforms_to(T540* C,T0* a1);
T6 r540end_of_file(T540* C);
T0* r540twin(T540* C);
void r57append_dollar_n_to_string(T57* C,T2 a1,T2 a2,T0* a3);
T6 r57is_equal(T57* C,T0* a1);
void r57make_generic(T57* C,T2 a1,T0* a2,T0* a3);
T6 r57se_assigned_from(T0* a1);
void r57append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r57make(T57* C,T2 a1,T0* a2);
extern T0*oBC32INTEGER_FORMATTER_;
T6 r57conforms_to(T57* C,T0* a1);
void r57print_dollar_dollar_declaration(T57* C,T0* a1);
void r57print_dollar_dollar_finalization(T57* C,T0* a1);
void r57print_conversion_routine(T57* C,T0* a1);
T0* r57twin(T57* C);
void r57append_dollar_dollar_to_string(T57* C,T0* a1);
void r57make_anchored(T57* C,T2 a1,T0* a2);
T6 r131is_equal(T131* C,T0* a1);
T6 r131se_assigned_from(T0* a1);
void r131report_message(T131* C,T0* a1);
extern T0*oBC21std;
T0* r131message(T0* a1);
T6 r131conforms_to(T131* C,T0* a1);
void r131report_warning(T131* C,T0* a1);
T0* r131twin(T131* C);
void r131make_standard(T131* C);
void r131report_error(T131* C,T0* a1);
void r37disconnect(T37* C);
T6 r37is_equal(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
extern T0*oBC26tmp_string;
T6 r37conforms_to(T37* C,T0* a1);
void r37connect_to(T37* C,T0* a1);
void r37put_integer(T37* C,T2 a1);
T0* r37twin(T37* C);
void r37put_string(T37* C,T0* a1);
T6 r261is_equal(T261* C,T0* a1);
T6 r261se_assigned_from(T0* a1);
T0* r261Arguments(void);
void r261make(T261* C,T0* a1);
T0* r261message(T261* C,T0* a1);
T6 r261conforms_to(T261* C,T0* a1);
T0* r261twin(T261* C);
T0* r261default_message(T261* C);
T6 r538is_equal(T538* C,T0* a1);
T6 r538se_assigned_from(T0* a1);
T0* r538Arguments(void);
void r538make(T538* C,T0* a1,T2 a2);
T0* r538message(T538* C,T0* a1);
T6 r538conforms_to(T538* C,T0* a1);
T0* r538twin(T538* C);
T0* r538default_message(T538* C);
T6 r539is_equal(T539* C,T0* a1);
T6 r539se_assigned_from(T0* a1);
T0* r539Arguments(void);
void r539make(T539* C,T0* a1,T2 a2,T0* a3);
T0* r539message(T539* C,T0* a1);
T6 r539conforms_to(T539* C,T0* a1);
T0* r539twin(T539* C);
T0* r539default_message(T539* C);
T6 r482is_equal(T482* C,T0* a1);
T6 r482se_assigned_from(T0* a1);
T0* r482Arguments(void);
void r482make(T482* C,T0* a1,T2 a2,T0* a3);
T0* r482message(T482* C,T0* a1);
T6 r482conforms_to(T482* C,T0* a1);
T0* r482twin(T482* C);
T0* r482default_message(T482* C);
void r68put_symbol(T68* C,T0* a1);
T6 r68is_equal(T68* C,T0* a1);
T6 r68se_assigned_from(T0* a1);
void r68print_rule(T68* C,T0* a1);
void r68make(T68* C,T2 a1,T0* a2,T0* a3);
T6 r68conforms_to(T68* C,T0* a1);
T6 r68_px_60(T68* C,T0* a1);
T0* r68twin(T68* C);
void r452report_multiple_start_declarations_error(T452* C);
void r452yy_do_action(T452* C,T2 a1);
void r452report_variable_declared_as_token_error(T452* C,T0* a1);
T0* r452cloned_string(T0* a1);
extern T0*oBC452yytable_template;
extern int fBC452yytable_template;
T0* r452yytable_template(void);
T0* r452new_symbol(T452* C,T0* a1);
void r452make_parser_skeleton(T452* C);
void r452report_undefined_string_token_error(T452* C,T0* a1);
void r452report_start_symbol_token_error(T452* C);
T2 r452yy_at_beginning_of_line(T452* C);
T0* r452new_nonassoc_char_terminal(T452* C,T0* a1,T2 a2);
extern T0*oBC463No_type;
extern int fBC463No_type;
T0* r452No_type(void);
void r452fatal_error(T0* a1);
T0* r452yytype1(T0* a1);
T0* r452new_type(T452* C,T0* a1);
T2 r452yytype2(T0* a1);
T0* r452yytype3(T0* a1);
T0* r452yytype4(T0* a1);
T0* r452yytype5(T0* a1);
void r452put_symbol(T452* C,T0* a1,T0* a2);
void r452report_two_strings_token_error(T452* C,T0* a1,T0* a2,T0* a3);
void r452parse_file(T452* C,T0* a1);
void r452parse(T452* C);
T0* r452new_rule(T452* C,T0* a1);
void r452report_dangerous_dollar_n_warning(T452* C,T2 a1);
T0* r452new_dummy_variable(T452* C);
void r452set_input_buffer(T452* C,T0* a1);
T0* r452new_char_terminal(T452* C,T0* a1,T0* a2);
T2 r452yy_translate(T452* C,T2 a1);
void r452report_prec_not_token_error(T452* C,T0* a1);
extern T0*oBC453yy_ec_template;
extern int fBC453yy_ec_template;
T0* r452yy_ec_template(void);
T0* r452text_substring(T452* C,T2 a1,T2 a2);
void r452yy_execute_action(T452* C,T2 a1);
extern T0*oBC452yytranslate_template;
extern int fBC452yytranslate_template;
T0* r452yytranslate_template(void);
extern T0*oBC462Empty_buffer;
extern int fBC462Empty_buffer;
T0* r452Empty_buffer(void);
void r452clear_stacks(T452* C);
extern T0*oBC453yy_def_template;
extern int fBC453yy_def_template;
T0* r452yy_def_template(void);
void r452set_token_id(T452* C,T0* a1,T2 a2);
void r452process_dollar_n(T452* C,T2 a1,T0* a2);
T3 r452text_item(T452* C,T2 a1);
T0* r452new_anchored_type(T452* C,T0* a1);
void r452report_token_declared_twice_error(T452* C,T0* a1);
void r452yy_load_input_buffer(T452* C);
void r452report_undefined_symbol_error(T452* C,T0* a1);
void r452report_variable_declared_twice_error(T452* C,T0* a1);
extern T0*oBC452yyr1_template;
extern int fBC452yyr1_template;
T0* r452yyr1_template(void);
void r452make_with_buffer(T452* C,T0* a1);
T0* r452new_nonterminal(T452* C,T0* a1,T0* a2);
void r452process_rule(T452* C,T0* a1);
T2 r452yy_null_trans_state(T452* C,T2 a1);
T0* r452new_variable(T452* C,T0* a1);
extern T0*oBC453yy_accept_template;
extern int fBC453yy_accept_template;
T0* r452yy_accept_template(void);
void r452read_token(T452* C);
void r452report_invalid_dollar_n_error(T452* C,T2 a1);
T0* r452new_token(T452* C,T0* a1);
extern T0*oBC452yyr2_template;
extern int fBC452yyr2_template;
T0* r452yyr2_template(void);
T0* r452new_basic_type(T452* C,T0* a1);
T2 r452yy_previous_state(T452* C);
extern T0*oBC452yypgoto_template;
extern int fBC452yypgoto_template;
T0* r452yypgoto_template(void);
extern T0*oBC463No_action;
extern int fBC463No_action;
T0* r452No_action(T452* C);
void r452yy_refill_input_buffer(T452* C);
extern T0*oBC454Unknown_type;
extern int fBC454Unknown_type;
T0* r452Unknown_type(void);
T0* r452yy_fixed_array(T0* a1);
T6 r452conforms_to(T452* C,T0* a1);
extern T0*oBC453yy_meta_template;
extern int fBC453yy_meta_template;
T0* r452yy_meta_template(void);
void r452process_symbols(T452* C);
void r452report_prec_specified_twice_error(T452* C);
T6 r452is_terminal(T452* C,T0* a1);
extern T0*oBC453yy_base_template;
extern int fBC453yy_base_template;
T0* r452yy_base_template(void);
void r452initialize_grammar(T452* C);
extern T0*oBC19INPUT_STREAM_;
T0* r452twin(T452* C);
void r452report_two_token_ids_token_error(T452* C,T0* a1,T2 a2,T2 a3);
T2 r452text_count(T452* C);
T0* r452new_file_buffer(T0* a1);
T0* r452new_string_token(T452* C,T0* a1);
void r452yy_initialize(T452* C);
T0* r452text(T452* C);
void r452report_token_id_used_twice_warning(T452* C,T0* a1,T0* a2);
void r452report_rule_declared_twice_warning(T452* C,T0* a1);
void r452report_no_rules_error(T452* C);
void r452set_start_symbol(T452* C);
void r452set_precedence(T452* C,T0* a1,T2 a2);
void r452make_yacc_scanner(T452* C,T0* a1);
void r452report_lhs_symbol_token_error(T452* C,T0* a1);
extern T0*oBC453yy_nxt_template;
extern int fBC453yy_nxt_template;
T0* r452yy_nxt_template(void);
T0* r452new_left_char_terminal(T452* C,T0* a1,T2 a2);
void r452yy_build_parser_tables(T452* C);
void r452report_missing_characters_error(T452* C,T0* a1);
extern T0*oBC461STRING_BUFFER_;
T0* r452new_generic_type(T452* C,T0* a1,T0* a2);
T6 r452is_equal(T452* C,T0* a1);
void r452report_unknown_start_symbol_error(T452* C);
void r452report_error(T452* C,T0* a1);
void r452process_dollar_dollar(T452* C,T0* a1);
void r452report_token_declared_as_variable_error(T452* C,T0* a1);
T0* r452new_terminal(T452* C,T0* a1,T0* a2);
extern T0*oBC452yydefact_template;
extern int fBC452yydefact_template;
T0* r452yydefact_template(void);
T0* r452new_nonassoc_terminal(T452* C,T0* a1,T2 a2);
extern T0*oBC453yy_chk_template;
extern int fBC453yy_chk_template;
T0* r452yy_chk_template(void);
void r452report_string_token_defined_twice_error(T452* C,T0* a1,T0* a2,T0* a3);
void r452set_literal_string(T452* C,T0* a1,T0* a2);
extern T0*oBC452yycheck_template;
extern int fBC452yycheck_template;
T0* r452yycheck_template(void);
T0* r452new_right_char_terminal(T452* C,T0* a1,T2 a2);
T0* r452new_char_token(T452* C,T0* a1);
T0* r452filename(T452* C);
void r452make(T452* C,T0* a1);
T0* r452yyfixed_array(T0* a1);
extern T0*oBC452yydefgoto_template;
extern int fBC452yydefgoto_template;
T0* r452yydefgoto_template(void);
void r452yy_clear_all(T452* C);
void r452yy_set_content(T452* C,T0* a1);
void r452put_action(T452* C,T0* a1,T0* a2);
void r452report_precedence_defined_twice_error(T452* C,T0* a1);
extern T0*oBC452yypact_template;
extern int fBC452yypact_template;
T0* r452yypact_template(void);
void r452report_invalid_string_token_error(T452* C,T0* a1);
void r452set_start_condition(T452* C,T2 a1);
void r452yy_execute_eof_action(T452* C,T2 a1);
T0* r452new_left_terminal(T452* C,T0* a1,T2 a2);
T6 r452is_nonterminal(T452* C,T0* a1);
T6 r452se_assigned_from(T0* a1);
void r452yy_build_tables(T452* C);
void r452report_null_integer_error(T452* C);
T0* r452new_right_terminal(T452* C,T0* a1,T2 a2);
T6 r569is_equal(T569* C,T0* a1);
T6 r569se_assigned_from(T0* a1);
T0* r569Arguments(void);
void r569make(T569* C,T0* a1);
T0* r569message(T569* C,T0* a1);
T6 r569conforms_to(T569* C,T0* a1);
T0* r569twin(T569* C);
T0* r569default_message(T569* C);
T6 r483is_equal(T483* C,T0* a1);
T6 r483se_assigned_from(T0* a1);
T0* r483Arguments(void);
void r483make(T483* C,T0* a1,T2 a2,T2 a3);
T0* r483message(T483* C,T0* a1);
T6 r483conforms_to(T483* C,T0* a1);
T0* r483twin(T483* C);
T0* r483default_message(T483* C);
extern T0*oBC32ARRAY_FORMATTER_;
void r31build_action_tables(T31* C);
void r31print_separated_actions(T31* C,T0* a1);
void r31print_constants(T31* C,T0* a1);
extern T0*oBC31Portion_sorter;
extern int fBC31Portion_sorter;
T0* r31Portion_sorter(void);
void r31print_eiffel_array(T31* C,T0* a1,T0* a2,T0* a3);
T6 r31is_equal(T31* C,T0* a1);
T6 r31se_assigned_from(T0* a1);
void r31build_yyr(T31* C);
void r31print_eiffel_header(T31* C,T0* a1);
void r31print_eiffel_tables(T31* C,T0* a1);
void r31make(T31* C,T0* a1);
void r31build_yytranslate(T31* C);
void r31put_yydefact(T31* C,T0* a1,T0* a2);
void r31put_yydefgoto(T31* C,T0* a1,T0* a2);
extern T0*oBC32STRING_FORMATTER_;
T6 r31conforms_to(T31* C,T0* a1);
void r31print_build_parser_tables(T0* a1);
void r31print_eiffel_code(T31* C,T0* a1);
void r31print_parser(T31* C,T6 a1,T6 a2,T0* a3);
void r31print_conversion_routines(T31* C,T0* a1);
void r31print_actions(T31* C,T0* a1);
T0* r31twin(T31* C);
void r31print_token_class(T31* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC30INTEGER_ARRAY_;
void r31print_token_codes(T31* C,T0* a1);
void r507append_dollar_n_to_string(T507* C,T2 a1,T2 a2,T0* a3);
T6 r507is_equal(T507* C,T0* a1);
void r507make_generic(T507* C,T2 a1,T0* a2,T0* a3);
T6 r507se_assigned_from(T0* a1);
void r507append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r507make(T507* C,T2 a1,T0* a2);
T6 r507conforms_to(T507* C,T0* a1);
void r507print_dollar_dollar_declaration(T507* C,T0* a1);
void r507print_dollar_dollar_finalization(T507* C,T0* a1);
void r507print_conversion_routine(T507* C,T0* a1);
T0* r507twin(T507* C);
void r507append_dollar_dollar_to_string(T507* C,T0* a1);
void r507make_anchored(T507* C,T2 a1,T0* a2);
T6 r142order_is_equal(T142* C,T0* a1);
T6 r142is_equal(T142* C,T0* a1);
void r142make_state(T142* C,T2 a1,T0* a2,T0* a3);
T6 r142se_assigned_from(T0* a1);
void r142make_symbol(T142* C,T2 a1,T0* a2,T0* a3);
T6 r142conforms_to(T142* C,T0* a1);
T6 r142same_portion(T142* C,T0* a1);
T6 r142_px_60(T142* C,T0* a1);
T0* r142twin(T142* C);
T6 r515is_equal(T515* C,T0* a1);
T6 r515se_assigned_from(T0* a1);
T0* r515Arguments(void);
void r515make(T515* C,T0* a1,T2 a2,T0* a3);
T0* r515message(T515* C,T0* a1);
T6 r515conforms_to(T515* C,T0* a1);
T0* r515twin(T515* C);
T0* r515default_message(T515* C);
T6 r28is_equal(T28* C,T0* a1);
T6 r28se_assigned_from(T0* a1);
T0* r28Arguments(void);
void r28make(T28* C,T0* a1);
T0* r28message(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
T0* r28twin(T28* C);
T0* r28default_message(T28* C);
T6 r213is_equal(T213* C,T0* a1);
T6 r213se_assigned_from(T0* a1);
void r213make(T213* C,T0* a1);
T6 r213conforms_to(T213* C,T0* a1);
T6 r213_px_60(T213* C,T0* a1);
void r213build_lookaheads(T213* C);
T0* r213twin(T213* C);
T6 r487is_equal(T487* C,T0* a1);
T6 r487se_assigned_from(T0* a1);
T0* r487Arguments(void);
void r487make(T487* C,T0* a1,T0* a2,T0* a3,T2 a4);
T0* r487message(T487* C,T0* a1);
T6 r487conforms_to(T487* C,T0* a1);
T0* r487twin(T487* C);
T0* r487default_message(T487* C);
T6 r522is_equal(T522* C,T0* a1);
T6 r522se_assigned_from(T0* a1);
T0* r522Arguments(void);
void r522make(T522* C,T0* a1);
T0* r522message(T522* C,T0* a1);
T6 r522conforms_to(T522* C,T0* a1);
T0* r522twin(T522* C);
T0* r522default_message(T522* C);
T6 r484is_equal(T484* C,T0* a1);
T6 r484se_assigned_from(T0* a1);
T0* r484Arguments(void);
void r484make(T484* C,T0* a1,T2 a2,T2 a3);
T0* r484message(T484* C,T0* a1);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
T0* r484default_message(T484* C);
T6 r503is_equal(T503* C,T0* a1);
T6 r503se_assigned_from(T0* a1);
T0* r503Arguments(void);
void r503make(T503* C,T0* a1,T2 a2);
T0* r503message(T503* C,T0* a1);
T6 r503conforms_to(T503* C,T0* a1);
T0* r503twin(T503* C);
T0* r503default_message(T503* C);
T6 r536is_equal(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
T0* r536Arguments(void);
void r536make(T536* C,T0* a1,T2 a2,T0* a3);
T0* r536message(T536* C,T0* a1);
T6 r536conforms_to(T536* C,T0* a1);
T0* r536twin(T536* C);
T0* r536default_message(T536* C);
T6 r177is_equal(T177* C,T0* a1);
T6 r177se_assigned_from(T0* a1);
void r177make(T177* C,T0* a1,T0* a2);
T6 r177conforms_to(T177* C,T0* a1);
T0* r177twin(T177* C);
T6 r521is_equal(T521* C,T0* a1);
T6 r521se_assigned_from(T0* a1);
T0* r521Arguments(void);
void r521make(T521* C,T0* a1,T2 a2,T0* a3);
T0* r521message(T521* C,T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
T0* r521twin(T521* C);
T0* r521default_message(T521* C);
T6 r114is_right_associative(T114* C);
void r114print_token(T114* C,T0* a1,T0* a2);
T6 r114is_non_associative(T114* C);
T6 r114is_equal(T114* C,T0* a1);
T6 r114se_assigned_from(T0* a1);
void r114make(T114* C,T2 a1,T0* a2,T0* a3);
T6 r114conforms_to(T114* C,T0* a1);
T6 r114has_identifier(T114* C);
T6 r114is_left_associative(T114* C);
T0* r114twin(T114* C);
void r34put_final_state(T34* C);
T6 r34is_equal(T34* C,T0* a1);
void r34print_machine(T34* C,T0* a1);
T6 r34se_assigned_from(T0* a1);
void r34resolve_conflicts(T34* C,T0* a1);
void r34build_nondeterministic(T34* C);
void r34make(T34* C,T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
void r34resolve_conflicts_verbose(T34* C,T0* a1,T0* a2);
void r34put_closure_positions(T0* a1,T0* a2);
T0* r34twin(T34* C);
void r34build_transitions(T34* C,T0* a1);
void r34build_deterministic(T34* C);
void r34put_start_state(T34* C);
extern T0*oBC34No_type;
extern int fBC34No_type;
T0* r34No_type(void);
void r34build_derives(T34* C);
T0* r34new_state(T34* C,T0* a1);
void r70put_rule(T70* C,T0* a1);
T6 r70is_equal(T70* C,T0* a1);
T6 r70se_assigned_from(T0* a1);
T0* r70transition(T70* C,T0* a1);
void r70make(T70* C,T2 a1,T0* a2,T0* a3);
T6 r70conforms_to(T70* C,T0* a1);
T0* r70twin(T70* C);
void r70print_variable(T70* C,T0* a1,T0* a2);
void r146put_position(T146* C,T0* a1);
void r146remove_shift(T146* C,T0* a1);
T6 r146is_equal(T146* C,T0* a1);
T6 r146has_shift(T146* C,T0* a1);
void r146print_state(T146* C,T0* a1);
T6 r146se_assigned_from(T0* a1);
extern T0*oBC146Position_sorter;
extern int fBC146Position_sorter;
T0* r146Position_sorter(void);
T0* r146resolve_conflicts(T146* C);
T6 r146same_type(T146* C,T0* a1);
void r146make(T146* C,T2 a1,T0* a2);
void r146set_lookahead_needed(T146* C);
void r146put_transition(T146* C,T0* a1,T0* a2);
T2 r146reduce_reduce_count(T146* C);
T6 r146conforms_to(T146* C,T0* a1);
T0* r146shift(T146* C,T0* a1);
T6 r146same_state(T146* C,T0* a1);
void r146print_reductions(T146* C,T0* a1);
T0* r146twin(T146* C);
T2 r146shift_reduce_count(T146* C);
T6 r499is_equal(T499* C,T0* a1);
T6 r499se_assigned_from(T0* a1);
T0* r499Arguments(void);
void r499make(T499* C,T0* a1,T2 a2,T0* a3);
T0* r499message(T499* C,T0* a1);
T6 r499conforms_to(T499* C,T0* a1);
T0* r499twin(T499* C);
T0* r499default_message(T499* C);
void r467disconnect(T467* C);
T6 r467is_equal(T467* C,T0* a1);
T6 r467se_assigned_from(T0* a1);
void r467read_character(T467* C);
T6 r467conforms_to(T467* C,T0* a1);
T6 r467end_of_input(T467* C);
void r467connect_to(T467* C,T0* a1);
T0* r467twin(T467* C);
void r475set_position(T475* C,T2 a1,T2 a2,T2 a3);
T6 r475is_equal(T475* C,T0* a1);
extern T2 oBC475lower;
extern int fBC475lower;
T2 r475lower(void);
T6 r475se_assigned_from(T0* a1);
void r475make(T475* C,T0* a1);
T6 r475conforms_to(T475* C,T0* a1);
void r475make_from_buffer(T475* C,T0* a1);
T0* r475twin(T475* C);
T6 r494is_equal(T494* C,T0* a1);
T6 r494se_assigned_from(T0* a1);
T0* r494Arguments(void);
void r494make(T494* C,T0* a1,T2 a2,T0* a3);
T0* r494message(T494* C,T0* a1);
T6 r494conforms_to(T494* C,T0* a1);
T0* r494twin(T494* C);
T0* r494default_message(T494* C);
T6 r537is_equal(T537* C,T0* a1);
T6 r537se_assigned_from(T0* a1);
T0* r537Arguments(void);
void r537make(T537* C,T0* a1,T2 a2,T0* a3);
T0* r537message(T537* C,T0* a1);
T6 r537conforms_to(T537* C,T0* a1);
T0* r537twin(T537* C);
T0* r537default_message(T537* C);
T6 r450is_equal(T450* C,T0* a1);
T6 r450se_assigned_from(T0* a1);
T0* r450Arguments(void);
void r450make(T450* C,T0* a1);
T0* r450message(T450* C,T0* a1);
T6 r450conforms_to(T450* C,T0* a1);
T0* r450twin(T450* C);
T0* r450default_message(T450* C);
T0* r533new_action(T0* a1);
T6 r533is_equal(T533* C,T0* a1);
T6 r533se_assigned_from(T0* a1);
T6 r533conforms_to(T533* C,T0* a1);
T0* r533twin(T533* C);
T6 r517is_equal(T517* C,T0* a1);
T6 r517se_assigned_from(T0* a1);
T0* r517Arguments(void);
void r517make(T517* C,T0* a1,T2 a2,T0* a3,T0* a4,T0* a5);
T0* r517message(T517* C,T0* a1);
T6 r517conforms_to(T517* C,T0* a1);
T0* r517twin(T517* C);
T0* r517default_message(T517* C);
T6 r535is_equal(T535* C,T0* a1);
T6 r535se_assigned_from(T0* a1);
T0* r535Arguments(void);
void r535make(T535* C,T0* a1,T2 a2,T0* a3);
T0* r535message(T535* C,T0* a1);
T6 r535conforms_to(T535* C,T0* a1);
T0* r535twin(T535* C);
T0* r535default_message(T535* C);
void r35put_type(T35* C,T0* a1);
void r35mark_useful_rules(T35* C);
void r35put_rule(T35* C,T0* a1);
T6 r35is_equal(T35* C,T0* a1);
void r35put_variable(T35* C,T0* a1);
T2 r35max_rhs(T35* C);
T6 r35se_assigned_from(T0* a1);
T0* r35clone(T0* a1);
void r35make(T35* C);
T6 r35conforms_to(T35* C,T0* a1);
void r35reduce_verbose(T35* C,T0* a1,T0* a2);
void r35put_token(T35* C,T0* a1);
void r35print_grammar(T35* C,T0* a1);
T0* r35twin(T35* C);
void r35mark_useful_variables(T35* C);
void r35set_nullable(T35* C);
void r35reduce(T35* C,T0* a1);
void r35traverse_variable(T0* a1);
T6 r516is_equal(T516* C,T0* a1);
T6 r516se_assigned_from(T0* a1);
T0* r516Arguments(void);
void r516make(T516* C,T0* a1,T2 a2,T0* a3,T2 a4,T2 a5);
T0* r516message(T516* C,T0* a1);
T6 r516conforms_to(T516* C,T0* a1);
T0* r516twin(T516* C);
T0* r516default_message(T516* C);
T6 r90is_equal(T90* C,T0* a1);
void r90make_generic(T90* C,T2 a1,T0* a2,T0* a3);
T6 r90se_assigned_from(T0* a1);
void r90append_untyped_dollar_n_to_string(T2 a1,T2 a2,T0* a3);
void r90make(T90* C,T2 a1,T0* a2);
T6 r90conforms_to(T90* C,T0* a1);
T0* r90twin(T90* C);
void r90print_dollar_dollar_initialization(T0* a1);
void r90make_anchored(T90* C,T2 a1,T0* a2);
void r474fill(T474* C);
void r474compact_left(T474* C);
T2 r474count(T474* C);
void r474set_position(T474* C,T2 a1,T2 a2,T2 a3);
T6 r474is_equal(T474* C,T0* a1);
T2 r474lower(void);
T6 r474se_assigned_from(T0* a1);
void r474make_from_string(T474* C,T0* a1);
T6 r474conforms_to(T474* C,T0* a1);
void r474make_from_buffer(T474* C,T0* a1);
void r474resize(T474* C);
void r474make_with_size(T474* C,T0* a1,T2 a2);
T0* r474twin(T474* C);
void r474set_file(T474* C,T0* a1);
void r474flush(T474* C);
T6 r136is_equal(T136* C,T0* a1);
T6 r136se_assigned_from(T0* a1);
void r136make(T136* C);
T6 r136conforms_to(T136* C,T0* a1);
void r136put_integer(T136* C,T2 a1);
T0* r136twin(T136* C);
void r136put_string(T136* C,T0* a1);
void r262print_conflict(T262* C,T0* a1);
T6 r262is_equal(T262* C,T0* a1);
T6 r262se_assigned_from(T0* a1);
void r262make(T262* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r262conforms_to(T262* C,T0* a1);
T0* r262twin(T262* C);
T6 r477is_equal(T477* C,T0* a1);
T6 r477se_assigned_from(T0* a1);
void r477make(T477* C);
T6 r477conforms_to(T477* C,T0* a1);
void r477put_integer(T477* C,T2 a1);
T0* r477twin(T477* C);
void r477put_string(T477* C,T0* a1);
T6 r486is_equal(T486* C,T0* a1);
T6 r486se_assigned_from(T0* a1);
T0* r486Arguments(void);
void r486make(T486* C,T0* a1,T0* a2);
T0* r486message(T486* C,T0* a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486twin(T486* C);
T0* r486default_message(T486* C);
T6 r520is_equal(T520* C,T0* a1);
T6 r520se_assigned_from(T0* a1);
T0* r520Arguments(void);
void r520make(T520* C,T0* a1,T2 a2,T0* a3);
T0* r520message(T520* C,T0* a1);
T6 r520conforms_to(T520* C,T0* a1);
T0* r520twin(T520* C);
T0* r520default_message(T520* C);
T0* r246next(T246* C);
T6 r246is_equal(T246* C,T0* a1);
T6 r246same_position(T246* C,T0* a1);
T6 r246se_assigned_from(T0* a1);
T6 r246after(T246* C);
void r246make(T246* C,T0* a1,T2 a2);
T2 r246hash_code(T246* C);
T6 r246conforms_to(T246* C,T0* a1);
T6 r246_px_60(T246* C,T0* a1);
T0* r246symbol(T246* C);
void r246print_position(T246* C,T0* a1);
T0* r246twin(T246* C);
T6 r473is_equal(T473* C,T0* a1);
T6 r473se_assigned_from(T0* a1);
T0* r473Arguments(void);
void r473make(T473* C,T0* a1,T2 a2);
T0* r473message(T473* C,T0* a1);
T6 r473conforms_to(T473* C,T0* a1);
T0* r473twin(T473* C);
T0* r473default_message(T473* C);
T6 r133is_equal(T133* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r133command_arguments(void);
T6 r133se_assigned_from(T0* a1);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133twin(T133* C);
T0* r133argument(T2 a1);
T6 r519is_equal(T519* C,T0* a1);
T6 r519se_assigned_from(T0* a1);
T0* r519Arguments(void);
void r519make(T519* C,T0* a1,T2 a2,T0* a3);
T0* r519message(T519* C,T0* a1);
T6 r519conforms_to(T519* C,T0* a1);
T0* r519twin(T519* C);
T0* r519default_message(T519* C);
extern T0*oBC135error;
extern int fBC135error;
T0* r135error(void);
T6 r135is_equal(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
extern T0*oBC135input;
extern int fBC135input;
T0* r135input(void);
extern T0*oBC135output;
extern int fBC135output;
T0* r135output(void);
T6 r135conforms_to(T135* C,T0* a1);
T0* r135twin(T135* C);
T6 r129is_equal(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
T6 r129conforms_to(T129* C,T0* a1);
T0* r129twin(T129* C);
T6 r41is_equal(T41* C,T0* a1);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T6 r41_px_60(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r38is_equal(T38* C,T0* a1);
T6 r38se_assigned_from(T0* a1);
T6 r38conforms_to(T38* C,T0* a1);
T0* r38twin(T38* C);
T6 r64is_equal(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
void r64put_integer_array(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r27is_equal(T27* C,T0* a1);
T6 r27se_assigned_from(T0* a1);
T6 r27conforms_to(T27* C,T0* a1);
T0* r27twin(T27* C);
T6 r121is_equal(T121* C,T0* a1);
T6 r121se_assigned_from(T0* a1);
void r121append_decimal_integer(T0* a1,T2 a2);
T6 r121conforms_to(T121* C,T0* a1);
void r121put_decimal_integer(T0* a1,T2 a2);
T0* r121twin(T121* C);
T0* r121decimal_integer_out(T2 a1);
void r17read_command_line(T17* C);
T6 r17is_equal(T17* C,T0* a1);
T6 r17se_assigned_from(T0* a1);
extern T0*oBC23Exceptions;
void r17report_usage_message(T17* C);
T0* r17Arguments(void);
void r17parse_input_file(T17* C);
T6 r17conforms_to(T17* C,T0* a1);
void r17execute(T17* C);
void r17report_version_number(T17* C);
extern T0*oBC18OUTPUT_STREAM_;
T0* r17twin(T17* C);
extern T0*oBC17Usage_message;
extern int fBC17Usage_message;
T0* r17Usage_message(void);
void r17report_usage_error(T17* C);
T0* r466name(T0* a1);
T6 r466is_equal(T466* C,T0* a1);
T0* r466make_file_open_read(T0* a1);
T6 r466se_assigned_from(T0* a1);
T6 r466is_open_read(T0* a1);
void r466close(T0* a1);
T6 r466conforms_to(T466* C,T0* a1);
T6 r466end_of_input(T0* a1);
T2 r466read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r466twin(T466* C);
T6 r36is_equal(T36* C,T0* a1);
T0* r36make_file_open_write(T0* a1);
T6 r36se_assigned_from(T0* a1);
T6 r36is_open_write(T0* a1);
void r36close(T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T0* r36twin(T36* C);
T6 r123is_equal(T123* C,T0* a1);
T6 r123se_assigned_from(T0* a1);
T0* r123clone(T0* a1);
T6 r123is_integer(T0* a1);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123to_upper(T0* a1);
T0* r123to_lower(T0* a1);
T0* r123twin(T123* C);
T6 r120is_equal(T120* C,T0* a1);
T6 r120se_assigned_from(T0* a1);
void r120put_eiffel_string(T0* a1,T0* a2);
T6 r120conforms_to(T120* C,T0* a1);
T0* r120twin(T120* C);
T6 r43is_equal(T43* C,T0* a1);
T6 r43se_assigned_from(T0* a1);
T6 r43conforms_to(T43* C,T0* a1);
T6 r43_px_60(T43* C,T0* a1);
T0* r43twin(T43* C);
T0* r479substring(T0* a1,T2 a2,T2 a3);
T6 r479is_equal(T479* C,T0* a1);
T6 r479se_assigned_from(T0* a1);
void r479move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r479make(T2 a1);
void r479copy_from_string(T0* a1,T2 a2,T0* a3);
T6 r479conforms_to(T479* C,T0* a1);
T0* r479resize(T0* a1,T2 a2);
T2 r479copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r479twin(T479* C);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 579
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms31_1013884793;
extern T7*ms31_764827783;
extern T7*ms246_127367;
extern T7*ms31_1389369289;
extern T7*ms570_1158552108;
extern T7*ms146_1798828918;
extern T7*ms31_90482aa;
extern T7*ms146_9477769;
extern T7*ms35_240;
extern T7*ms35_305;
extern T7*ms35_322;
extern T7*ms31_1945615768;
extern T7*ms28_1606053737;
extern T7*ms146_1301091736a;
extern T7*ms57_83837;
extern T7*ms262_1158282697;
extern T7*ms31_204021159;
extern T7*ms518_473369027;
extern T7*ms31_357547920aa;
extern T7*ms31_114538697;
extern T7*ms34_1951147870aa;
extern T7*ms31_1528099687;
extern T7*ms57_966168;
extern T7*ms454_449403;
extern T7*ms17_116700441;
extern T7*ms31_148721510;
extern T7*ms35_35407;
extern T7*ms146_1733899062a;
extern T7*ms146_1816594782;
extern T7*ms17_1902120794;
extern T7*ms31_1714741745;
extern T7*ms34_1951147870;
extern T7*ms31_1053815566;
extern T7*ms24_1529;
extern T7*ms569_1515383187;
extern T7*ms57_442014347;
extern T7*ms31_2100040055;
extern T7*ms146_200aaa;
extern T7*ms31_1634211645;
extern T7*ms57_94293;
extern T7*ms453_125;
extern T7*ms540_89510;
extern T7*ms453_310;
extern T7*ms31_252a;
extern T7*ms35_996921710;
extern T7*ms35_1375825489;
extern T7*ms17_184927;
extern T7*ms514_2038502230;
extern T7*ms31_1684107830;
extern T7*ms34_33717507;
extern T7*ms537_165116404;
extern T7*ms499_1366120531;
extern T7*ms57_699136507;
extern T7*ms31_1265975;
extern T7*ms146_1935745766;
extern T7*ms507_174030686;
extern T7*ms35_398523217;
extern T7*ms31_1948325307;
extern T7*ms17_311;
extern T7*ms17_325;
extern T7*ms17_331;
extern T7*ms35_2097728505;
extern T7*ms17_332;
extern T7*ms17_329;
extern T7*ms17_336;
extern T7*ms17_341;
extern T7*ms17_343;
extern T7*ms17_288;
extern T7*ms17_345;
extern T7*ms31_74687409;
extern T7*ms146_1733899062;
extern T7*ms31_1944000520;
extern T7*ms31_90482a;
extern T7*ms31_2003577134;
extern T7*ms507_1163254587;
extern T7*ms57_200;
extern T7*ms57_251;
extern T7*ms57_252;
extern T7*ms146_161955904;
extern T7*ms57_322;
extern T7*ms146_60;
extern T7*ms31_552391951;
extern T7*ms35_1697984409;
extern T7*ms31_1827569378;
extern T7*ms31_14611232;
extern T7*ms31_59aa;
extern T7*ms34_493970962a;
extern T7*ms136_447851;
extern T7*ms68_1087;
extern T7*ms35_160774172;
extern T7*ms57_1574410724;
extern T7*ms452_1499;
extern T7*ms31_1155882265;
extern T7*ms34_33717507a;
extern T7*ms146_200;
extern T7*ms146_215;
extern T7*ms454_2104;
extern T7*ms521_1822824531;
extern T7*ms70_115391113;
extern T7*ms146_88126;
extern T7*ms146_414;
extern T7*ms31_909566212;
extern T7*ms34_35407aa;
extern T7*ms466_1338085634;
extern T7*ms515_1849034395;
extern T7*ms64_4992;
extern T7*ms463_1499;
extern T7*ms463_2104;
extern T7*ms31_1132142871;
extern T7*ms31_1122307690;
extern T7*ms146_1733899062aa;
extern T7*ms261_229;
extern T7*ms68_89112;
extern T7*ms520_1729371669;
extern T7*ms507_1448310934;
extern T7*ms31_1272262895;
extern T7*ms507_612561;
extern T7*ms507_442014347;
extern T7*ms463_1499aaa;
extern T7*ms31_683785467;
extern T7*ms31_347703897;
extern T7*ms70_23073938;
extern T7*ms31_218863123;
extern T7*ms507_225001029;
extern T7*ms35_2090483755;
extern T7*ms17_23342040;
extern T7*ms31_90482;
extern T7*ms34_833969832aa;
extern T7*ms473_1449702436;
extern T7*ms31_995962185;
extern T7*ms31_180998784;
extern T7*ms64_192;
extern T7*ms34_240aa;
extern T7*ms64_279;
extern T7*ms17_23336011;
extern T7*ms114_3573357;
extern T7*ms262_553682732;
extern T7*ms31_1013884793aa;
extern T7*ms31_885036813;
extern T7*ms536_2110198733;
extern T7*ms31_435736252;
extern T7*ms90_501932975;
extern T7*ms262_200;
extern T7*ms64_992;
extern T7*ms57_242245936;
extern T7*ms146_200aaaa;
extern T7*ms262_240;
extern T7*ms146_88126a;
extern T7*ms146_1530588430;
extern T7*ms31_818072399;
extern T7*ms31_1191529;
extern T7*ms146_1085a;
extern T7*ms146_435396a;
extern T7*ms31_1234045785;
extern T7*ms34_1500052379;
extern T7*ms463_80894;
extern T7*ms17_89379515;
extern T7*ms57_1163254587;
extern T7*ms487_2088248237;
extern T7*ms31_103264977;
extern T7*ms522_110467006;
extern T7*ms31_230709710;
extern T7*ms31_5172225;
extern T7*ms516_1151210642;
extern T7*ms34_35407;
extern T7*ms70_200;
extern T7*ms486_272755366;
extern T7*ms31_2029744743;
extern T7*ms453_1173251759;
extern T7*ms57_471936;
extern T7*ms246_15714112;
extern T7*ms31_2055948023;
extern T7*ms146_1500a;
extern T7*ms31_1946372182;
extern T7*ms31_48453175;
extern T7*ms34_33717507aa;
extern T7*ms31_357547920;
extern T7*ms31_2073873347;
extern T7*ms31_1955953395;
extern T7*ms146_200aa;
extern T7*ms31_200;
extern T7*ms17_115260661;
extern T7*ms31_215;
extern T7*ms31_180;
extern T7*ms31_252;
extern T7*ms31_1691539493;
extern T7*ms31_279;
extern T7*ms535_1049715130;
extern T7*ms146_1301091736;
extern T7*ms34_1500052379a;
extern T7*ms31_59a;
extern T7*ms146_215aa;
extern T7*ms31_793443823;
extern T7*ms34_2104;
extern T7*ms34_1951147870a;
extern T7*ms484_1454279890;
extern T7*ms503_1383509722;
extern T7*ms31_3409010;
extern T7*ms262_614931126;
extern T7*ms34_240a;
extern T7*ms146_1085;
extern T7*ms35_1475432663;
extern T7*ms31_205885;
extern T7*ms17_252488890;
extern T7*ms31_2029744743a;
extern T7*ms146_1500;
extern T7*ms120_222;
extern T7*ms57_181488528;
extern T7*ms120_219;
extern T7*ms120_224;
extern T7*ms120_232;
extern T7*ms120_251;
extern T7*ms120_255;
extern T7*ms146_200a;
extern T7*ms120_263;
extern T7*ms120_270;
extern T7*ms120_267;
extern T7*ms120_269;
extern T7*ms146_215a;
extern T7*ms35_58111285;
extern T7*ms31_1828222111;
extern T7*ms463_632838696;
extern T7*ms34_493970962aa;
extern T7*ms463_1499aa;
extern T7*ms34_347437;
extern T7*ms34_833969832a;
extern T7*ms35_1500052379;
extern T7*ms483_1821517345;
extern T7*ms68_16879001;
extern T7*ms517_88402782;
extern T7*ms519_751424646;
extern T7*ms34_833969832;
extern T7*ms146_1530588430a;
extern T7*ms34_35407a;
extern T7*ms31_962357;
extern T7*ms31_1900045943;
extern T7*ms480_559383313;
extern T7*ms146_200aaaaa;
extern T7*ms31_429082137;
extern T7*ms146_1384937;
extern T7*ms146_1333845564;
extern T7*ms450_988446515;
extern T7*ms31_1642811761;
extern T7*ms31_357547920a;
extern T7*ms538_220658643;
extern T7*ms57_1921122658;
extern T7*ms17_403144;
extern T7*ms31_323648892;
extern T7*ms146_1374414125;
extern T7*ms31_967710041;
extern T7*ms31_783384421;
extern T7*ms464_1338477769;
extern T7*ms31_252aa;
extern T7*ms539_1956876694;
extern T7*ms34_493970962;
extern T7*ms481_1319944131;
extern T7*ms31_1272262895a;
extern T7*ms463_1499a;
extern T7*ms507_186359672;
extern T7*ms494_1291418954;
extern T7*ms482_1349308461;
extern T7*ms146_200aaaaaa;
extern T7*ms262_268188217;
extern T7*ms35_625239712;
extern T7*ms459_195717202;
extern T7*ms35_1294117598;
extern T7*ms31_59;
extern T7*ms34_240;
extern T7*ms34_112002107;
extern T7*ms507_1921122658;
extern T7*ms464_1338477769a;
extern T7*ms31_41065;
extern T7*ms31_535136282;
extern T7*ms57_174030686;
extern T7*ms31_1013884793a;
extern T7*ms146_435396;
extern T7*ms462_0;
extern T7*ms57_612561;
extern T7*ms57_1834148709;
extern T7*ms463_0;
extern T7*ms34_36;
extern T7*ms466_0;
extern T7*ms477_447584;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void*se_ma66(int argc,...);
void X230remove_traversing_cursor(T0*C,T0* a1);
T0* X230item(T0*C,T2 a1);
void X230add_traversing_cursor(T0*C,T0* a1);
T6 X230has(T0*C,T0* a1);
T0* X230first(T0*C);
T6 X230cursor_same_position(T0*C,T0* a1,T0* a2);
void X230put_last(T0*C,T0* a1);
T6 X230cursor_off(T0*C,T0* a1);
T0* X532make(T0*C,T2 a1);
T0* X532resize(T0*C,T0* a1,T2 a2);
T6 X26is_connected(T0*C);
void X26put_integer(T0*C,T2 a1);
void X26put_character(T0*C,T3 a1);
void X26put_string(T0*C,T0* a1);
T0* X374item(T0*C);
T6 X374after(T0*C);
void X374forth(T0*C);
void X374start(T0*C);
void X374go_after(T0*C);
void X374search_forth(T0*C,T0* a1);
T0* X298item(T0*C);
T6 X298after(T0*C);
void X298forth(T0*C);
void X298start(T0*C);
T0* X237item(T0*C);
T6 X237after(T0*C);
void X237forth(T0*C);
void X237start(T0*C);
void X237go_after(T0*C);
void X237search_forth(T0*C,T0* a1);
void X57append_dollar_n_to_string(T0*C,T2 a1,T2 a2,T0* a3);
T6 X57is_equal(T0*C,T0* a1);
void X57print_dollar_dollar_declaration(T0*C,T0* a1);
void X57print_dollar_dollar_finalization(T0*C,T0* a1);
void X57print_conversion_routine(T0*C,T0* a1);
void X57print_dollar_dollar_initialization(T0*C,T0* a1);
void X57append_dollar_dollar_to_string(T0*C,T0* a1);
T0* X389item(T0*C);
T6 X389after(T0*C);
void X389forth(T0*C);
void X389start(T0*C);
T6 X260test(T0*C,T0* a1,T0* a2);
T2 X387count(T0*C);
T0* X387cursor_item(T0*C,T0* a1);
T6 X387cursor_after(T0*C,T0* a1);
void X387cursor_forth(T0*C,T0* a1);
void X387cursor_start(T0*C,T0* a1);
T0* X387new_cursor(T0*C);
T0* X72name(T0*C);
T6 X72is_equal(T0*C,T0* a1);
T0* X72type(T0*C);
T2 X72id(T0*C);
T6 X72is_terminal(T0*C);
T6 X72is_useful(T0*C);
void X72set_useful(T0*C,T6 a1);
T6 X10is_equal(T0*C,T0* a1);
T0* X10twin(T0*C);
void X253put(T0*C,T0* a1,T2 a2);
T0* X253item(T0*C,T2 a1);
void X253set_all_with(T0*C,T0* a1);
void X253resize(T0*C,T2 a1);
T2 X233count(T0*C);
T0* X233cursor_item(T0*C,T0* a1);
void X233cursor_go_after(T0*C,T0* a1);
T6 X233cursor_after(T0*C,T0* a1);
T6 X233has(T0*C,T0* a1);
void X233cursor_search_forth(T0*C,T0* a1,T0* a2);
void X233cursor_forth(T0*C,T0* a1);
void X233cursor_start(T0*C,T0* a1);
T0* X233new_cursor(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X469clear_all(T0*C,T0* a1);
T0* X469make(T0*C,T2 a1);
T0* X469resize(T0*C,T0* a1,T2 a2);
void X529set_next_cursor(T0*C,T0* a1);
T0* X396make(T0*C,T2 a1);
T0* X396resize(T0*C,T0* a1,T2 a2);
void X475fill(T0*C);
T0* X300cursor_item(T0*C,T0* a1);
T6 X300is_empty(T0*C);
T6 X300cursor_after(T0*C,T0* a1);
void X300cursor_forth(T0*C,T0* a1);
void X300cursor_start(T0*C,T0* a1);
T0* X300new_cursor(T0*C);
T2 X567count(T0*C);
T2 X567item(T0*C,T2 a1);
T2 X567lower(T0*C);
void X395put(T0*C,T0* a1,T2 a2);
T0* X395item(T0*C,T2 a1);
void X395set_all_with(T0*C,T0* a1);
void X395resize(T0*C,T2 a1);
void X468put(T0*C,T0* a1,T2 a2);
T0* X468item(T0*C,T2 a1);
void X468set_all_with(T0*C,T0* a1);
void X468resize(T0*C,T2 a1);
T6 X451is_connected(T0*C);
void X451read_character(T0*C);
T6 X451end_of_input(T0*C);
T3 X451last_character(T0*C);
T0* X375cursor_item(T0*C,T0* a1);
void X375cursor_go_after(T0*C,T0* a1);
T6 X375is_empty(T0*C);
T6 X375cursor_after(T0*C,T0* a1);
T6 X375has(T0*C,T0* a1);
void X375cursor_search_forth(T0*C,T0* a1,T0* a2);
void X375cursor_forth(T0*C,T0* a1);
void X375cursor_start(T0*C,T0* a1);
T0* X375new_cursor(T0*C);
T0* X29default_message(T0*C);
T0* T2toT41(T2 source);
T2 T41toT2(T0* source);

#ifdef __cplusplus
}
#endif
