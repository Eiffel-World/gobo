/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#define WIN32 1
#define EIF_WINDOWS 1
#endif
#ifdef WIN32
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_OBJECT;
#define EIF_REFERENCE EIF_OBJECT*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#define EIF_PROCEDURE EIF_POINTER

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define geint8(x) x
#define genat8(x) x
#define geint16(x) x
#define genat16(x) x
#define geint32(x) x##L
#define genat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else /* ISO C 99 */
#define geint64(x) x##LL
#define genat64(x) x##ULL
#endif 
#endif 

/* Interoperability with ISE */
#define RTI64C(x) geint64(x)

/* Memory allocation, GC */
#define gealloc(x) calloc((x),1)

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int geargc;
extern char** geargv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define gejmp_buf sigjmp_buf
#define gesetjmp(x) sigsetjmp((x),1)
#define gelongjmp(x,y) siglongjmp((x),(y))
#else
#define gejmp_buf jmp_buf
#define gesetjmp(x) setjmp((x))
#define gelongjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Context of features containing a rescue clause.
*/
struct gerescue {
	gejmp_buf jb;
	struct gerescue *previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern struct gerescue *gerescue;

extern void geraise(int code);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cpluscplus
extern "C" {
#endif

#define T0 EIF_OBJECT

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* geboxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* geboxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* geboxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* geboxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* geboxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* geboxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* geboxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* geboxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* geboxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* geboxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* geboxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* geboxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* geboxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* geboxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_FLAG */
typedef struct S32 T32;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S37 T37;

/* ET_XACE_UNIVERSE_PARSER */
typedef struct S38 T38;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S39 T39;

/* DS_HASH_TABLE [STRING, STRING] */
typedef struct S40 T40;

/* ST_SPLITTER */
typedef struct S41 T41;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S43 T43;

/* KL_EQUALITY_TESTER [STRING] */
typedef struct S44 T44;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S45 T45;

/* ET_XACE_UNIVERSE */
typedef struct S48 T48;

/* ET_LACE_PARSER */
typedef struct S49 T49;

/* ET_LACE_ERROR_HANDLER */
typedef struct S50 T50;

/* ET_LACE_UNIVERSE */
typedef struct S51 T51;

/* ET_NULL_ERROR_HANDLER */
typedef struct S52 T52;

/* ET_SYSTEM */
typedef struct S53 T53;

/* ET_CLASS */
typedef struct S55 T55;

/* ET_C_GENERATOR */
typedef struct S56 T56;

/* KL_SHELL_COMMAND */
typedef struct S57 T57;

/* UT_VERSION */
typedef struct S58 T58;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S59 T59;

/* KL_OPERATING_SYSTEM */
typedef struct S60 T60;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S62 T62;

/* UT_VERSION_NUMBER */
typedef struct S64 T64;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S65 T65;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S66 T66;

/* KL_LINKABLE [CHARACTER] */
typedef struct S67 T67;

/* TYPED_POINTER [ANY] */
typedef struct S69 T69;

/* KL_STANDARD_FILES */
typedef struct S71 T71;

/* KL_STDERR_FILE */
typedef struct S72 T72;

/* KL_STDOUT_FILE */
typedef struct S73 T73;

/* UC_STRING */
typedef struct S74 T74;

/* KL_ANY_ROUTINES */
typedef struct S75 T75;

/* DS_ARRAYED_LIST [STRING] */
typedef struct S76 T76;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S77 T77;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S78 T78;

/* AP_ERROR_HANDLER */
typedef struct S79 T79;

/* AP_ERROR */
typedef struct S80 T80;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S81 T81;

/* ST_WORD_WRAPPER */
typedef struct S82 T82;

/* ET_XACE_AST_FACTORY */
typedef struct S83 T83;

/* XM_DOCUMENT */
typedef struct S84 T84;

/* XM_ELEMENT */
typedef struct S85 T85;

/* XM_POSITION_TABLE */
typedef struct S86 T86;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S88 T88;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S89 T89;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S90 T90;

/* ET_XACE_VALIDATOR */
typedef struct S91 T91;

/* ET_XACE_PREPROCESSOR */
typedef struct S92 T92;

/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
typedef struct S93 T93;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S94 T94;

/* ET_XACE_LIBRARY_PARSER */
typedef struct S95 T95;

/* XM_EIFFEL_PARSER */
typedef struct S96 T96;

/* UT_MESSAGE */
typedef struct S99 T99;

/* DS_SPARSE_TABLE_KEYS [STRING, STRING] */
typedef struct S100 T100;

/* SPECIAL [STRING] */
typedef struct S102 T102;

/* SPECIAL [INTEGER] */
typedef struct S103 T103;

/* DS_HASH_TABLE_CURSOR [STRING, STRING] */
typedef struct S104 T104;

/* KL_SPECIAL_ROUTINES [INTEGER] */
typedef struct S105 T105;

/* KL_SPECIAL_ROUTINES [STRING] */
typedef struct S106 T106;

/* DS_LINKED_LIST [STRING] */
typedef struct S107 T107;

/* DS_LINKED_LIST_CURSOR [STRING] */
typedef struct S108 T108;

/* DS_HASH_SET [INTEGER] */
typedef struct S109 T109;

/* EXECUTION_ENVIRONMENT */
typedef struct S110 T110;

/* ET_LACE_AST_FACTORY */
typedef struct S111 T111;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S112 T112;

/* YY_FILE_BUFFER */
typedef struct S113 T113;

/* YY_BUFFER */
typedef struct S114 T114;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S115 T115;

/* SPECIAL [ANY] */
typedef struct S117 T117;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S118 T118;

/* ET_IDENTIFIER */
typedef struct S119 T119;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S120 T120;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S121 T121;

/* ET_LACE_CLUSTERS */
typedef struct S122 T122;

/* ET_LACE_CLUSTER */
typedef struct S123 T123;

/* ET_LACE_EXCLUDE */
typedef struct S124 T124;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S125 T125;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S126 T126;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S127 T127;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S128 T128;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S129 T129;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S130 T130;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S131 T131;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S132 T132;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S133 T133;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S134 T134;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S135 T135;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S136 T136;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S137 T137;

/* KL_PLATFORM */
typedef struct S138 T138;

/* KL_INTEGER_ROUTINES */
typedef struct S139 T139;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S140 T140;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S141 T141;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S142 T142;

/* ET_DYNAMIC_TYPE */
typedef struct S143 T143;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S145 T145;

/* ET_QUERY_LIST */
typedef struct S146 T146;

/* ET_PROCEDURE_LIST */
typedef struct S148 T148;

/* ET_DYNAMIC_FEATURE */
typedef struct S150 T150;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S151 T151;

/* DT_DATE_TIME */
typedef struct S152 T152;

/* DT_SYSTEM_CLOCK */
typedef struct S153 T153;

/* ET_TOKEN_CONSTANTS */
typedef struct S157 T157;

/* ET_EIFFEL_PARSER */
typedef struct S158 T158;

/* ET_CLASS_TYPE */
typedef struct S159 T159;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S160 T160;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S161 T161;

/* ET_EXTERNAL_FUNCTION */
typedef struct S163 T163;

/* ET_KEYWORD */
typedef struct S166 T166;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S168 T168;

/* ET_TYPE_CHECKER */
typedef struct S169 T169;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S170 T170;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S171 T171;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S172 T172;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S173 T173;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S174 T174;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S175 T175;

/* DS_ARRAYED_LIST [INTEGER] */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S177 T177;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S178 T178;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S180 T180;

/* ET_CURRENT */
typedef struct S182 T182;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S183 T183;

/* ET_CALL_INSTRUCTION */
typedef struct S184 T184;

/* ET_CALL_EXPRESSION */
typedef struct S186 T186;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S187 T187;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S188 T188;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S189 T189;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S191 T191;

/* DS_HASH_SET [STRING] */
typedef struct S192 T192;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S193 T193;

/* DS_HASH_TABLE [BOOLEAN, STRING] */
typedef struct S194 T194;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S195 T195;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S196 T196;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S197 T197;

/* UT_TEMPLATE_EXPANDER */
typedef struct S198 T198;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S199 T199;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S200 T200;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S201 T201;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S202 T202;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S203 T203;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S204 T204;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S205 T205;

/* ET_RESULT */
typedef struct S206 T206;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S207 T207;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S209 T209;

/* ET_FORMAL_ARGUMENT */
typedef struct S214 T214;

/* DS_QUICK_SORTER [INTEGER] */
typedef struct S215 T215;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S217 T217;

/* ARRAY [STRING] */
typedef struct S221 T221;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S222 T222;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S223 T223;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S225 T225;

/* ET_ATTRIBUTE */
typedef struct S226 T226;

/* UT_INTEGER_FORMATTER */
typedef struct S234 T234;

/* DS_CELL [INTEGER] */
typedef struct S235 T235;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S237 T237;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S238 T238;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S239 T239;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S240 T240;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S241 T241;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S242 T242;

/* UNIX_FILE_INFO */
typedef struct S244 T244;

/* ET_AST_FACTORY */
typedef struct S246 T246;

/* ET_XACE_CLUSTERS */
typedef struct S247 T247;

/* ET_XACE_CLUSTER */
typedef struct S250 T250;

/* ET_XACE_OPTIONS */
typedef struct S251 T251;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S252 T252;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S253 T253;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S254 T254;

/* XM_ATTRIBUTE */
typedef struct S255 T255;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S256 T256;

/* ET_XACE_LIBRARY */
typedef struct S258 T258;

/* DS_HASH_TABLE [INTEGER, STRING] */
typedef struct S259 T259;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S262 T262;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S263 T263;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S264 T264;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S265 T265;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S266 T266;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S267 T267;

/* ET_CLASS_NAME_TESTER */
typedef struct S268 T268;

/* ET_AST_NULL_PROCESSOR */
typedef struct S270 T270;

/* ET_FEATURE_FLATTENER */
typedef struct S271 T271;

/* ET_INTERFACE_CHECKER */
typedef struct S272 T272;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S273 T273;

/* ET_PROVIDER_CHECKER */
typedef struct S274 T274;

/* ET_ANCESTOR_BUILDER */
typedef struct S275 T275;

/* DT_DATE_TIME_DURATION */
typedef struct S279 T279;

/* ET_EIFFEL_PREPARSER */
typedef struct S280 T280;

/* ET_NONE_GROUP */
typedef struct S281 T281;

/* ET_PARENT */
typedef struct S282 T282;

/* ET_TUPLE_TYPE */
typedef struct S283 T283;

/* ET_RENAME_LIST */
typedef struct S284 T284;

/* ET_EXPORT_LIST */
typedef struct S285 T285;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S286 T286;

/* ET_PARENT_LIST */
typedef struct S287 T287;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S289 T289;

/* ARRAY [INTEGER] */
typedef struct S290 T290;

/* ET_BASE_TYPE_LIST */
typedef struct S291 T291;

/* ET_DO_PROCEDURE */
typedef struct S292 T292;

/* KL_COMPARABLE_COMPARATOR [INTEGER] */
typedef struct S294 T294;

/* ET_DEFERRED_PROCEDURE */
typedef struct S297 T297;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S298 T298;

/* DS_ARRAYED_LIST_CURSOR [STRING] */
typedef struct S299 T299;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S300 T300;

/* SPECIAL [AP_OPTION] */
typedef struct S302 T302;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S303 T303;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S304 T304;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S305 T305;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S306 T306;

/* XM_NAMESPACE_RESOLVER */
typedef struct S307 T307;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S308 T308;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S309 T309;

/* XM_CALLBACKS_NULL */
typedef struct S310 T310;

/* ET_XACE_OPTION_NAMES */
typedef struct S311 T311;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
typedef struct S314 T314;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S316 T316;

/* SPECIAL [ET_XACE_LIBRARY] */
typedef struct S317 T317;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
typedef struct S318 T318;

/* XM_EIFFEL_SCANNER */
typedef struct S319 T319;

/* XM_DEFAULT_POSITION */
typedef struct S320 T320;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S322 T322;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S323 T323;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S324 T324;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S326 T326;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S327 T327;

/* XM_EIFFEL_DECLARATION */
typedef struct S328 T328;

/* XM_DTD_EXTERNAL_ID */
typedef struct S329 T329;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S330 T330;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S331 T331;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S332 T332;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S333 T333;

/* DS_BILINKED_LIST [STRING] */
typedef struct S334 T334;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S335 T335;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S336 T336;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S337 T337;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S338 T338;

/* SPECIAL [BOOLEAN] */
typedef struct S339 T339;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S340 T340;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S341 T341;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S342 T342;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S343 T343;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S344 T344;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S345 T345;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S347 T347;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S349 T349;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S350 T350;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S351 T351;

/* SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S352 T352;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
typedef struct S353 T353;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S354 T354;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S355 T355;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S357 T357;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S358 T358;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S360 T360;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
typedef struct S361 T361;

/* TO_SPECIAL [INTEGER] */
typedef struct S362 T362;

/* TO_SPECIAL [STRING] */
typedef struct S363 T363;

/* DS_LINKABLE [STRING] */
typedef struct S364 T364;

/* DS_HASH_SET_CURSOR [INTEGER] */
typedef struct S365 T365;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S367 T367;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S369 T369;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S371 T371;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S372 T372;

/* TO_SPECIAL [ANY] */
typedef struct S373 T373;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S374 T374;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S375 T375;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S376 T376;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S377 T377;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S378 T378;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S379 T379;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S380 T380;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S381 T381;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S383 T383;

/* SPECIAL [ET_CLASS] */
typedef struct S385 T385;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S386 T386;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S387 T387;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S388 T388;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S389 T389;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S390 T390;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S391 T391;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S392 T392;

/* MANAGED_POINTER */
typedef struct S393 T393;

/* DS_ARRAYED_STACK [INTEGER] */
typedef struct S394 T394;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S395 T395;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S396 T396;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S397 T397;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S398 T398;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S399 T399;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S400 T400;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S401 T401;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S403 T403;

/* KL_DIRECTORY */
typedef struct S405 T405;

/* KL_EIFFEL_COMPILER */
typedef struct S406 T406;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S407 T407;

/* ET_CLASS_NAME_LIST */
typedef struct S409 T409;

/* ET_CLIENTS */
typedef struct S410 T410;

/* ET_FEATURE_CLAUSE */
typedef struct S411 T411;

/* SPECIAL [ET_KEYWORD] */
typedef struct S413 T413;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S414 T414;

/* ET_AGENT_KEYWORD */
typedef struct S415 T415;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S416 T416;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S417 T417;

/* ET_PRECURSOR_KEYWORD */
typedef struct S418 T418;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S419 T419;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S420 T420;

/* ET_SYMBOL */
typedef struct S421 T421;

/* SPECIAL [ET_SYMBOL] */
typedef struct S422 T422;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S423 T423;

/* SPECIAL [ET_POSITION] */
typedef struct S424 T424;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S425 T425;

/* ET_BIT_CONSTANT */
typedef struct S426 T426;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S427 T427;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S428 T428;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S430 T430;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S431 T431;

/* SPECIAL [ET_BREAK] */
typedef struct S433 T433;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S434 T434;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S436 T436;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S437 T437;

/* SPECIAL [ET_CURRENT] */
typedef struct S438 T438;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S439 T439;

/* ET_FREE_OPERATOR */
typedef struct S440 T440;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S441 T441;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S442 T442;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S444 T444;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S445 T445;

/* ET_KEYWORD_OPERATOR */
typedef struct S446 T446;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S447 T447;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S448 T448;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S449 T449;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S450 T450;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S452 T452;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S453 T453;

/* SPECIAL [ET_RESULT] */
typedef struct S454 T454;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S455 T455;

/* ET_RETRY_INSTRUCTION */
typedef struct S456 T456;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S457 T457;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S458 T458;

/* ET_SYMBOL_OPERATOR */
typedef struct S459 T459;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S460 T460;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S461 T461;

/* ET_VOID */
typedef struct S462 T462;

/* SPECIAL [ET_VOID] */
typedef struct S463 T463;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S464 T464;

/* ET_SEMICOLON_SYMBOL */
typedef struct S465 T465;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S466 T466;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S467 T467;

/* ET_BRACKET_SYMBOL */
typedef struct S468 T468;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S469 T469;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S470 T470;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S471 T471;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S472 T472;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S473 T473;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S474 T474;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S475 T475;

/* ET_VERBATIM_STRING */
typedef struct S476 T476;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S477 T477;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S478 T478;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S479 T479;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S480 T480;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S481 T481;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S482 T482;

/* ET_TRUE_CONSTANT */
typedef struct S484 T484;

/* ET_FALSE_CONSTANT */
typedef struct S485 T485;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S486 T486;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S487 T487;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S489 T489;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S491 T491;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S492 T492;

/* ET_CREATOR_LIST */
typedef struct S493 T493;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S494 T494;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S495 T495;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S496 T496;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S497 T497;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S498 T498;

/* ET_INVARIANTS */
typedef struct S499 T499;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S500 T500;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S501 T501;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S503 T503;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S505 T505;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S507 T507;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S511 T511;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S512 T512;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S514 T514;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S515 T515;

/* ET_CREATE_EXPRESSION */
typedef struct S516 T516;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S517 T517;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S518 T518;

/* ET_MANIFEST_TUPLE */
typedef struct S519 T519;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S520 T520;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S521 T521;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S522 T522;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S523 T523;

/* ET_FORMAL_PARAMETER */
typedef struct S524 T524;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S525 T525;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S527 T527;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S528 T528;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S530 T530;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S531 T531;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S532 T532;

/* ET_CONSTRAINT_CREATOR */
typedef struct S533 T533;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S534 T534;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S535 T535;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S537 T537;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S538 T538;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S539 T539;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S540 T540;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S541 T541;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S543 T543;

/* ET_BIT_N */
typedef struct S544 T544;

/* ET_BIT_FEATURE */
typedef struct S545 T545;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S546 T546;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S550 T550;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S551 T551;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S552 T552;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S553 T553;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S554 T554;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S555 T555;

/* SPECIAL [ET_PARENT] */
typedef struct S556 T556;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S557 T557;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S558 T558;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S559 T559;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S560 T560;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S561 T561;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S562 T562;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S563 T563;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S565 T565;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S566 T566;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S567 T567;

/* ET_RENAME */
typedef struct S568 T568;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S569 T569;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S570 T570;

/* SPECIAL [ET_EXPORT] */
typedef struct S572 T572;

/* SPECIAL [ET_CLIENTS] */
typedef struct S573 T573;

/* ET_ALL_EXPORT */
typedef struct S574 T574;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S575 T575;

/* ET_FEATURE_EXPORT */
typedef struct S576 T576;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S577 T577;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S579 T579;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S580 T580;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S582 T582;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S584 T584;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S585 T585;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S586 T586;

/* ET_CREATOR */
typedef struct S587 T587;

/* SPECIAL [ET_CREATOR] */
typedef struct S588 T588;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S590 T590;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S592 T592;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S594 T594;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S595 T595;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S597 T597;

/* ET_CONVERT_FUNCTION */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S599 T599;

/* ET_CONVERT_PROCEDURE */
typedef struct S600 T600;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S601 T601;

/* SPECIAL [ET_TYPE] */
typedef struct S602 T602;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S604 T604;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S606 T606;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S607 T607;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S608 T608;

/* SPECIAL [ET_QUERY] */
typedef struct S609 T609;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S610 T610;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S613 T613;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S614 T614;

/* SPECIAL [ET_CONSTANT] */
typedef struct S615 T615;

/* ET_PRECONDITIONS */
typedef struct S617 T617;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S618 T618;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S619 T619;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S620 T620;

/* ET_COMPOUND */
typedef struct S621 T621;

/* SPECIAL [ET_COMPOUND] */
typedef struct S622 T622;

/* ET_POSTCONDITIONS */
typedef struct S623 T623;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S624 T624;

/* ET_DO_FUNCTION */
typedef struct S625 T625;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S626 T626;

/* ET_ONCE_FUNCTION */
typedef struct S627 T627;

/* ET_DEFERRED_FUNCTION */
typedef struct S628 T628;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S631 T631;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S632 T632;

/* ET_ONCE_PROCEDURE */
typedef struct S633 T633;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S634 T634;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S635 T635;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S637 T637;

/* ET_PREFIX_NAME */
typedef struct S638 T638;

/* ET_PREFIX_FREE_NAME */
typedef struct S639 T639;

/* ET_INFIX_NAME */
typedef struct S640 T640;

/* ET_INFIX_FREE_NAME */
typedef struct S641 T641;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S642 T642;

/* ET_ALIAS_NAME */
typedef struct S643 T643;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S644 T644;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S645 T645;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S646 T646;

/* ET_ALIAS_FREE_NAME */
typedef struct S647 T647;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S648 T648;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S650 T650;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S651 T651;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S653 T653;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S654 T654;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S655 T655;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S657 T657;

/* ET_LOCAL_VARIABLE */
typedef struct S658 T658;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S659 T659;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S661 T661;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S662 T662;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S663 T663;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S664 T664;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S665 T665;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S666 T666;

/* ET_LOOP_INVARIANTS */
typedef struct S667 T667;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S669 T669;

/* ET_VARIANT */
typedef struct S670 T670;

/* SPECIAL [ET_VARIANT] */
typedef struct S671 T671;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S675 T675;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S678 T678;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S679 T679;

/* ET_LIKE_FEATURE */
typedef struct S681 T681;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S682 T682;

/* ET_LIKE_CURRENT */
typedef struct S683 T683;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S685 T685;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S686 T686;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S689 T689;

/* ET_BRACKET_EXPRESSION */
typedef struct S690 T690;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S691 T691;

/* SPECIAL [ET_WRITABLE] */
typedef struct S692 T692;

/* ET_ASSIGNMENT */
typedef struct S693 T693;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S694 T694;

/* ET_IF_INSTRUCTION */
typedef struct S695 T695;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S696 T696;

/* ET_INSPECT_INSTRUCTION */
typedef struct S697 T697;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S698 T698;

/* ET_LOOP_INSTRUCTION */
typedef struct S700 T700;

/* ET_DEBUG_INSTRUCTION */
typedef struct S701 T701;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S702 T702;

/* ET_CHECK_INSTRUCTION */
typedef struct S703 T703;

/* ET_BANG_INSTRUCTION */
typedef struct S705 T705;

/* ET_QUALIFIED_CALL */
typedef struct S706 T706;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S707 T707;

/* ET_CREATE_INSTRUCTION */
typedef struct S709 T709;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S710 T710;

/* ET_ELSEIF_PART_LIST */
typedef struct S711 T711;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S712 T712;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S713 T713;

/* ET_ELSEIF_PART */
typedef struct S714 T714;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S715 T715;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S716 T716;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S717 T717;

/* ET_WHEN_PART_LIST */
typedef struct S718 T718;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S719 T719;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S721 T721;

/* ET_WHEN_PART */
typedef struct S722 T722;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S723 T723;

/* ET_CHOICE_LIST */
typedef struct S724 T724;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S725 T725;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S726 T726;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S727 T727;

/* SPECIAL [ET_CHOICE] */
typedef struct S729 T729;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S732 T732;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S734 T734;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S735 T735;

/* ET_CHOICE_RANGE */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S737 T737;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S738 T738;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S739 T739;

/* ET_MANIFEST_STRING_LIST */
typedef struct S740 T740;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S742 T742;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S743 T743;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S745 T745;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S746 T746;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S747 T747;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S749 T749;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S750 T750;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S751 T751;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S752 T752;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S753 T753;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S754 T754;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S755 T755;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S756 T756;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S758 T758;

/* ET_FEATURE_ADDRESS */
typedef struct S759 T759;

/* ET_CURRENT_ADDRESS */
typedef struct S760 T760;

/* ET_RESULT_ADDRESS */
typedef struct S761 T761;

/* ET_EXPRESSION_ADDRESS */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S763 T763;

/* ET_INFIX_EXPRESSION */
typedef struct S764 T764;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S766 T766;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S767 T767;

/* ET_EQUALITY_EXPRESSION */
typedef struct S768 T768;

/* ET_PREFIX_EXPRESSION */
typedef struct S769 T769;

/* ET_OLD_EXPRESSION */
typedef struct S770 T770;

/* ET_CALL_AGENT */
typedef struct S771 T771;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S772 T772;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S774 T774;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S775 T775;

/* ET_MANIFEST_ARRAY */
typedef struct S776 T776;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S777 T777;

/* ET_STRIP_EXPRESSION */
typedef struct S778 T778;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S779 T779;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S780 T780;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S781 T781;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S782 T782;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S783 T783;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S784 T784;

/* ET_MANIFEST_TYPE */
typedef struct S785 T785;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S787 T787;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S788 T788;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S789 T789;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S790 T790;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S791 T791;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S792 T792;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S793 T793;

/* ET_AGENT_OPEN_TARGET */
typedef struct S794 T794;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S795 T795;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S796 T796;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S797 T797;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S798 T798;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S799 T799;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S800 T800;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S801 T801;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S802 T802;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S803 T803;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S804 T804;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S807 T807;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S808 T808;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S809 T809;

/* ET_TAGGED_ASSERTION */
typedef struct S811 T811;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S814 T814;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S815 T815;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S818 T818;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S819 T819;

/* DS_ARRAYED_LIST_CURSOR [INTEGER] */
typedef struct S820 T820;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S822 T822;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S824 T824;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S826 T826;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S827 T827;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S828 T828;

/* SPECIAL [ET_AGENT] */
typedef struct S829 T829;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S830 T830;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S831 T831;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S833 T833;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S834 T834;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S835 T835;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S836 T836;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S837 T837;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S839 T839;

/* SPECIAL [ET_FEATURE] */
typedef struct S840 T840;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S841 T841;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S843 T843;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S845 T845;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S846 T846;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S847 T847;

/* DS_HASH_SET_CURSOR [STRING] */
typedef struct S848 T848;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
typedef struct S849 T849;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
typedef struct S851 T851;

/* RX_BYTE_CODE */
typedef struct S854 T854;

/* RX_CASE_MAPPING */
typedef struct S855 T855;

/* RX_CHARACTER_SET */
typedef struct S856 T856;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S858 T858;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S859 T859;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S862 T862;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S863 T863;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S864 T864;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S865 T865;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S866 T866;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S867 T867;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S868 T868;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S869 T869;

/* C_STRING */
typedef struct S872 T872;

/* ET_SYSTEM_ERROR */
typedef struct S873 T873;

/* ET_INTERNAL_ERROR */
typedef struct S874 T874;

/* ET_VALIDITY_ERROR */
typedef struct S875 T875;

/* ET_CLUSTER_ERROR */
typedef struct S876 T876;

/* ET_SYNTAX_ERROR */
typedef struct S877 T877;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S878 T878;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S879 T879;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S880 T880;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S881 T881;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S882 T882;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S883 T883;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S884 T884;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S885 T885;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S886 T886;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S887 T887;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S888 T888;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S889 T889;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S891 T891;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S892 T892;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S893 T893;

/* UC_UTF8_ROUTINES */
typedef struct S894 T894;

/* UC_UTF8_STRING */
typedef struct S895 T895;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S896 T896;

/* KL_CHARACTER_BUFFER */
typedef struct S897 T897;

/* KL_CHARACTER_ROUTINES */
typedef struct S898 T898;

/* KL_STDIN_FILE */
typedef struct S899 T899;

/* ET_FILE_POSITION */
typedef struct S900 T900;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S902 T902;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S904 T904;

/* KL_ARRAY_ROUTINES [INTEGER] */
typedef struct S906 T906;

/* ARRAY [ET_TYPE] */
typedef struct S907 T907;

/* TYPED_POINTER [SPECIAL [CHARACTER]] */
typedef struct S909 T909;

/* ET_BRACED_TYPE_LIST */
typedef struct S910 T910;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S911 T911;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S912 T912;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S913 T913;

/* ET_KEYWORD_EXPRESSION */
typedef struct S914 T914;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S916 T916;

/* UT_TRISTATE */
typedef struct S917 T917;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S918 T918;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S919 T919;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S920 T920;

/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
typedef struct S921 T921;

/* DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
typedef struct S923 T923;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S925 T925;

/* ET_FEATURE_NAME_TESTER */
typedef struct S926 T926;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S928 T928;

/* ET_ALIAS_NAME_TESTER */
typedef struct S929 T929;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S931 T931;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S932 T932;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S933 T933;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S934 T934;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S935 T935;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S936 T936;

/* ET_SIGNATURE_CHECKER */
typedef struct S937 T937;

/* ET_PARENT_CHECKER2 */
typedef struct S938 T938;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S939 T939;

/* ET_PRECURSOR_CHECKER */
typedef struct S940 T940;

/* ET_PARENT_CHECKER3 */
typedef struct S941 T941;

/* ET_FEATURE_CHECKER */
typedef struct S942 T942;

/* ET_SUPPLIER_BUILDER */
typedef struct S943 T943;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S944 T944;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
typedef struct S945 T945;

/* ET_PARENT_CHECKER1 */
typedef struct S946 T946;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S947 T947;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S952 T952;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S953 T953;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S954 T954;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S955 T955;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S956 T956;

/* DS_LINKED_QUEUE [STRING] */
typedef struct S958 T958;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S959 T959;

/* TO_SPECIAL [ET_XACE_LIBRARY] */
typedef struct S960 T960;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S961 T961;

/* DS_LINKED_STACK [INTEGER] */
typedef struct S962 T962;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S963 T963;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S964 T964;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S965 T965;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S966 T966;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S967 T967;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S969 T969;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S971 T971;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S972 T972;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S973 T973;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S974 T974;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S975 T975;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S976 T976;

/* DS_BILINKED_LIST_CURSOR [STRING] */
typedef struct S977 T977;

/* DS_BILINKABLE [STRING] */
typedef struct S978 T978;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S979 T979;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S980 T980;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S981 T981;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S982 T982;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S983 T983;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S984 T984;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S985 T985;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S986 T986;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S987 T987;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S989 T989;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S990 T990;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S991 T991;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S992 T992;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S993 T993;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S994 T994;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S995 T995;

/* EXCEPTIONS */
typedef struct S996 T996;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S997 T997;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S998 T998;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S999 T999;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1000 T1000;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1001 T1001;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1002 T1002;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1003 T1003;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1004 T1004;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1006 T1006;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1007 T1007;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1008 T1008;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1009 T1009;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1010 T1010;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1011 T1011;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1012 T1012;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1013 T1013;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1014 T1014;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1015 T1015;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1016 T1016;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1017 T1017;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1018 T1018;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1019 T1019;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1020 T1020;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1021 T1021;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1022 T1022;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1023 T1023;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1024 T1024;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1026 T1026;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1027 T1027;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1029 T1029;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1030 T1030;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1031 T1031;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1032 T1032;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1033 T1033;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1034 T1034;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1035 T1035;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1036 T1036;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1037 T1037;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1039 T1039;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1040 T1040;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1041 T1041;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1042 T1042;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1043 T1043;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1044 T1044;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1045 T1045;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1046 T1046;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1047 T1047;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1048 T1048;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1049 T1049;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1050 T1050;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1051 T1051;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S1052 T1052;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1053 T1053;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1054 T1054;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1055 T1055;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1056 T1056;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1057 T1057;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1058 T1058;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1059 T1059;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1060 T1060;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1061 T1061;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1062 T1062;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1063 T1063;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1064 T1064;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1069 T1069;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1070 T1070;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1071 T1071;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1072 T1072;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1073 T1073;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1074 T1074;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1075 T1075;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1076 T1076;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1077 T1077;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1078 T1078;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1079 T1079;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1080 T1080;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1081 T1081;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1099 T1099;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1101 T1101;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1107 T1107;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1113 T1113;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1119 T1119;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1128 T1128;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1129 T1129;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1131 T1131;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1132 T1132;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1133 T1133;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1134 T1134;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1136 T1136;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
typedef struct S1137 T1137;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1138 T1138;

/* UC_UNICODE_ROUTINES */
typedef struct S1139 T1139;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1140 T1140;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1144 T1144;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1145 T1145;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1146 T1146;

/* DS_LINKED_QUEUE [CHARACTER] */
typedef struct S1149 T1149;

/* UC_UTF16_ROUTINES */
typedef struct S1150 T1150;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1151 T1151;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1152 T1152;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1153 T1153;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
typedef struct S1154 T1154;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1156 T1156;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1158 T1158;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1159 T1159;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1161 T1161;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1162 T1162;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1164 T1164;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S1165 T1165;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1166 T1166;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1167 T1167;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1168 T1168;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1169 T1169;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1170 T1170;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1171 T1171;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1172 T1172;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1173 T1173;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1174 T1174;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1176 T1176;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1177 T1177;

/* ET_REDECLARED_FEATURE */
typedef struct S1178 T1178;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1179 T1179;

/* DS_HASH_TABLE [INTEGER, ET_CLASS] */
typedef struct S1180 T1180;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
typedef struct S1181 T1181;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
typedef struct S1183 T1183;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1185 T1185;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1186 T1186;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1187 T1187;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1189 T1189;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1190 T1190;

/* DS_LINKABLE [INTEGER] */
typedef struct S1192 T1192;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S1193 T1193;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1194 T1194;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1195 T1195;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1196 T1196;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1199 T1199;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1200 T1200;

/* SPECIAL [NATURAL_8] */
typedef struct S1206 T1206;

/* STRING_SEARCHER */
typedef struct S1207 T1207;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1209 T1209;

/* XM_COMMENT */
typedef struct S1210 T1210;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1211 T1211;

/* XM_CHARACTER_DATA */
typedef struct S1212 T1212;

/* XM_NAMESPACE */
typedef struct S1213 T1213;

/* ET_FEATURE_IDS */
typedef struct S1214 T1214;

/* ET_FEATURE_LIST */
typedef struct S1215 T1215;

/* ET_PARENT_FEATURE */
typedef struct S1216 T1216;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1217 T1217;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1218 T1218;

/* ET_INHERITED_FEATURE */
typedef struct S1219 T1219;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1225 T1225;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1226 T1226;

/* ET_CONVERT_EXPRESSION */
typedef struct S1229 T1229;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1230 T1230;

/* ET_COMPRESSED_POSITION */
typedef struct S1233 T1233;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1234 T1234;

/* ET_REPLICATED_FEATURE */
typedef struct S1236 T1236;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1237 T1237;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1238 T1238;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1240 T1240;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1241 T1241;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1242 T1242;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1243 T1243;

/* ARRAY [BOOLEAN] */
typedef struct S1244 T1244;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1245 T1245;

/* SPECIAL [ARRAY [INTEGER]] */
typedef struct S1246 T1246;

/* SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
typedef struct S1247 T1247;

/* SPECIAL [NATURAL_64] */
typedef struct S1248 T1248;

/* ARRAY [NATURAL_64] */
typedef struct S1249 T1249;

/* DS_LINKABLE [CHARACTER] */
typedef struct S1250 T1250;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1252 T1252;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1253 T1253;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1254 T1254;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1255 T1255;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1256 T1256;

/* SPECIAL [ET_RENAME] */
typedef struct S1257 T1257;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1259 T1259;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1261 T1261;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1262 T1262;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1263 T1263;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1264 T1264;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1266 T1266;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1267 T1267;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1269 T1269;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1271 T1271;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1272 T1272;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1273 T1273;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1274 T1274;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1275 T1275;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1277 T1277;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1279 T1279;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1280 T1280;

/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1282 T1282;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1283 T1283;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
typedef struct S1284 T1284;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1286 T1286;

/* SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1287 T1287;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
typedef struct S1288 T1288;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
typedef struct S1289 T1289;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1291 T1291;

/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1292 T1292;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1293 T1293;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1295 T1295;

/* AP_OPTION_COMPARATOR */
typedef struct S1296 T1296;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1297 T1297;

/* STD_FILES */
typedef struct S1305 T1305;

/* PLATFORM */
typedef struct S1306 T1306;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1308 T1308;

/* XM_NODE_TYPER */
typedef struct S1309 T1309;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1316 T1316;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1317 T1317;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1318 T1318;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1321 T1321;

/* KL_STRING_INPUT_STREAM */
typedef struct S1325 T1325;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1328 T1328;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1337 T1337;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1338 T1338;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1342 T1342;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1343 T1343;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1344 T1344;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1345 T1345;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1346 T1346;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1347 T1347;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1348 T1348;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1349 T1349;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1350 T1350;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1351 T1351;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1352 T1352;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1353 T1353;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1354 T1354;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1355 T1355;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1356 T1356;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1357 T1357;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1358 T1358;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1361 T1361;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1362 T1362;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1363 T1363;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1364 T1364;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1365 T1365;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1366 T1366;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1367 T1367;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1368 T1368;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1370 T1370;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1372 T1372;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1373 T1373;

/* TO_SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1374 T1374;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1377 T1377;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1379 T1379;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S1380 T1380;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1387 T1387;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1388 T1388;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1389 T1389;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1390 T1390;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1391 T1391;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1392 T1392;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1393 T1393;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1398 T1398;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1400 T1400;

/* CONSOLE */
typedef struct S1401 T1401;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1402 T1402;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1405 T1405;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a13; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a2; /* error_handler */
	T0* a3; /* ace_filename */
	T0* a4; /* last_universe */
	T0* a7; /* finalize_flag */
	T0* a8; /* cat_flag */
	T0* a9; /* no_c_compile_flag */
	T0* a10; /* silent_flag */
	T0* a11; /* verbose_flag */
	T0* a12; /* version_flag */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a3; /* mode */
	T0* a7; /* name */
	T0* a10; /* string_name */
	T0* a11; /* character_buffer */
	T1 a12; /* end_of_file */
	T14 a17; /* file_pointer */
	T1 a19; /* descriptor_available */
	T0* a24; /* last_string */
	T2 a26; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a6; /* warning_file */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a8; /* application_description */
	T0* a9; /* parameters_description */
	T0* a11; /* error_handler */
	T0* a14; /* argument_list */
	T0* a16; /* current_options */
	T1 a17; /* is_first_option */
	T0* a23; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a10; /* first_cell */
};

/* Struct for type AP_FLAG */
struct S32 {
	int id;
	T6 a2; /* occurrences */
	T0* a3; /* description */
	T0* a4; /* long_form */
	T2 a5; /* short_form */
	T1 a6; /* has_short_form */
	T1 a7; /* is_mandatory */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S37 {
	int id;
	T0* a13; /* description */
	T2 a14; /* short_form */
	T1 a15; /* has_short_form */
	T0* a16; /* long_form */
	T6 a17; /* occurrences */
	T1 a21; /* is_hidden */
	T1 a22; /* is_mandatory */
};

/* Struct for type ET_XACE_UNIVERSE_PARSER */
struct S38 {
	int id;
	T0* a1; /* last_universe */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_preprocessor */
	T0* a11; /* parsed_libraries */
	T0* a12; /* error_handler */
	T0* a14; /* library_parser */
	T0* a17; /* eiffel_error_handler */
	T0* a18; /* eiffel_ast_factory */
	T1 a138; /* is_shallow */
	T1 a139; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S39 {
	int id;
	T6 a2; /* error_count */
	T0* a3; /* error_file */
	T0* a5; /* warning_file */
	T0* a6; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING, STRING] */
struct S40 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a9; /* slots_position */
	T6 a11; /* count */
	T0* a12; /* equality_tester */
	T6 a13; /* found_position */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a18; /* item_storage */
	T0* a21; /* clashes */
	T0* a22; /* slots */
	T0* a23; /* key_storage */
	T6 a24; /* free_slot */
	T0* a25; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ST_SPLITTER */
struct S41 {
	int id;
	T1 a3; /* has_escape_character */
	T2 a4; /* escape_character */
	T0* a6; /* separator_codes */
	T0* a8; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S43 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING] */
struct S44 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S45 {
	int id;
};

/* Struct for type ET_XACE_UNIVERSE */
struct S48 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a37; /* system_name */
	T0* a38; /* internal_eiffel_parser */
	T0* a39; /* ast_factory */
	T1 a40; /* use_assign_keyword */
	T1 a41; /* use_attribute_keyword */
	T1 a42; /* use_convert_keyword */
	T1 a43; /* use_create_keyword */
	T1 a44; /* use_recast_keyword */
	T1 a45; /* use_reference_keyword */
	T1 a46; /* use_void_keyword */
	T1 a47; /* providers_enabled */
	T0* a48; /* clusters */
	T0* a50; /* null_processor */
	T0* a51; /* provider_checker */
	T0* a52; /* ancestor_builder */
	T0* a53; /* feature_flattener */
	T0* a54; /* implementation_checker */
	T0* a55; /* flat_implementation_checker */
	T0* a56; /* ise_version */
	T0* a58; /* ecma_version */
	T0* a59; /* dotnet_assemblies */
	T1 a61; /* is_preparsed */
	T6 a62; /* feature_count */
	T1 a63; /* flat_mode */
	T1 a64; /* flat_dbc_mode */
	T1 a65; /* suppliers_enabled */
	T0* a67; /* root_class_name */
	T0* a68; /* libraries */
	T0* a69; /* creation_procedure_name */
	T0* a70; /* options */
	T0* a73; /* general_class */
	T0* a74; /* tuple_class */
	T0* a75; /* bit_class */
	T6 a76; /* string_class_id */
	T0* a77; /* native_array_class */
	T6 a78; /* character_class_id */
	T6 a79; /* wide_character_class_id */
	T6 a80; /* integer_class_id */
	T6 a81; /* natural_class_id */
	T6 a82; /* real_class_id */
	T6 a83; /* double_class_id */
	T0* a84; /* type_class */
	T0* a85; /* routine_class */
	T0* a86; /* procedure_class */
	T0* a87; /* predicate_class */
	T0* a88; /* function_class */
	T0* a89; /* arguments_class */
	T0* a90; /* platform_class */
	T0* a91; /* system_object_class */
	T0* a92; /* system_string_class */
	T0* a93; /* any_type */
	T0* a94; /* none_type */
	T0* a95; /* integer_type */
	T0* a96; /* natural_type */
	T0* a97; /* character_type */
	T0* a98; /* string_type */
	T0* a99; /* real_type */
	T0* a100; /* double_type */
	T0* a101; /* tuple_type */
	T0* a102; /* array_any_type */
	T0* a103; /* array_none_type */
	T0* a104; /* any_parent */
	T0* a105; /* any_parents */
	T0* a106; /* system_object_parents */
	T0* a107; /* integer_convert_feature */
	T0* a108; /* integer_8_convert_feature */
	T0* a109; /* integer_16_convert_feature */
	T0* a110; /* integer_32_convert_feature */
	T0* a111; /* integer_64_convert_feature */
	T0* a112; /* natural_convert_feature */
	T0* a113; /* natural_8_convert_feature */
	T0* a114; /* natural_16_convert_feature */
	T0* a115; /* natural_32_convert_feature */
	T0* a116; /* natural_64_convert_feature */
	T0* a117; /* real_convert_feature */
	T0* a118; /* double_convert_feature */
	T0* a119; /* real_32_convert_feature */
	T0* a120; /* real_64_convert_feature */
	T0* a121; /* boolean_ref_class */
	T0* a122; /* character_8_ref_class */
	T0* a123; /* character_32_ref_class */
	T0* a124; /* character_ref_class */
	T6 a125; /* character_ref_class_id */
	T0* a126; /* wide_character_ref_class */
	T6 a127; /* wide_character_ref_class_id */
	T0* a128; /* integer_8_ref_class */
	T0* a129; /* integer_16_ref_class */
	T0* a130; /* integer_32_ref_class */
	T0* a131; /* integer_64_ref_class */
	T0* a132; /* integer_ref_class */
	T6 a133; /* integer_ref_class_id */
	T0* a134; /* natural_8_ref_class */
	T0* a135; /* natural_16_ref_class */
	T0* a136; /* natural_32_ref_class */
	T0* a137; /* natural_64_ref_class */
	T0* a138; /* natural_ref_class */
	T6 a139; /* natural_ref_class_id */
	T0* a140; /* real_32_ref_class */
	T0* a141; /* real_64_ref_class */
	T0* a142; /* real_ref_class */
	T6 a143; /* real_ref_class_id */
	T0* a144; /* double_ref_class */
	T6 a145; /* double_ref_class_id */
	T0* a146; /* pointer_ref_class */
	T0* a147; /* numeric_class */
	T0* a148; /* comparable_class */
	T0* a149; /* part_comparable_class */
	T0* a150; /* hashable_class */
	T0* a151; /* boolean_convert_feature */
	T0* a152; /* character_convert_feature */
	T0* a153; /* wide_character_convert_feature */
	T0* a154; /* pointer_convert_feature */
	T1 a155; /* cluster_dependence_enabled */
	T0* a157; /* internal_dotnet_assembly_consumer */
	T0* a158; /* internal_eiffel_preparser */
	T6 a159; /* copy_seed */
	T6 a160; /* void_seed */
	T0* a161; /* supplier_handler */
};

/* Struct for type ET_LACE_PARSER */
struct S49 {
	int id;
	T0* a2; /* last_universe */
	T6 a3; /* yy_parsing_status */
	T0* a5; /* named_clusters */
	T0* a7; /* override_cluster_names */
	T0* a8; /* ast_factory */
	T6 a9; /* eif_lineno */
	T0* a11; /* eif_buffer */
	T0* a12; /* input_buffer */
	T6 a13; /* yy_end */
	T6 a14; /* yy_position */
	T6 a15; /* yy_line */
	T6 a16; /* yy_column */
	T6 a18; /* yy_suspended_yystacksize */
	T6 a19; /* yy_suspended_yystate */
	T6 a20; /* yy_suspended_yyn */
	T6 a21; /* yy_suspended_yychar1 */
	T6 a22; /* yy_suspended_index */
	T6 a23; /* yy_suspended_yyss_top */
	T6 a24; /* yy_suspended_yy_goto */
	T6 a26; /* error_count */
	T1 a27; /* yy_lookahead_needed */
	T6 a28; /* yyerrstatus */
	T6 a29; /* yyssp */
	T0* a30; /* yyss */
	T0* a39; /* yypact */
	T6 a41; /* last_token */
	T0* a44; /* yytranslate */
	T0* a47; /* yycheck */
	T0* a48; /* yytable */
	T0* a50; /* yydefact */
	T0* a52; /* yyr1 */
	T0* a54; /* yypgoto */
	T0* a55; /* yydefgoto */
	T0* a58; /* filename */
	T0* a59; /* error_handler */
	T6 a61; /* yy_start_state */
	T6 a62; /* line */
	T6 a63; /* column */
	T6 a64; /* position */
	T1 a65; /* yy_more_flag */
	T6 a66; /* yy_more_len */
	T6 a67; /* yy_last_accepting_state */
	T6 a68; /* yy_last_accepting_cpos */
	T1 a69; /* yy_rejected */
	T6 a70; /* yy_state_count */
	T6 a71; /* yy_full_match */
	T6 a72; /* yy_lp */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_lp */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_start */
	T6 a77; /* yyvsp1 */
	T6 a78; /* yyvsp2 */
	T6 a79; /* yyvsp3 */
	T6 a80; /* yyvsp4 */
	T6 a81; /* yyvsp5 */
	T6 a82; /* yyvsp6 */
	T6 a83; /* yyvsp7 */
	T0* a91; /* yy_state_stack */
	T0* a92; /* yy_ec */
	T0* a93; /* yy_content_area */
	T0* a94; /* yy_content */
	T0* a95; /* yy_accept */
	T0* a96; /* yy_chk */
	T0* a97; /* yy_base */
	T0* a98; /* yy_def */
	T0* a99; /* yy_meta */
	T0* a101; /* yy_nxt */
	T0* a103; /* yy_acclist */
	T0* a113; /* yytypes2 */
	T6 a114; /* yyvsc1 */
	T0* a115; /* yyvs1 */
	T0* a116; /* yyspecial_routines1 */
	T0* a118; /* last_any_value */
	T6 a119; /* yyvsc2 */
	T0* a120; /* yyvs2 */
	T0* a121; /* yyspecial_routines2 */
	T0* a122; /* last_et_identifier_value */
	T0* a123; /* yyvs4 */
	T0* a125; /* yyvs7 */
	T6 a127; /* yyvsc4 */
	T0* a128; /* yyspecial_routines4 */
	T0* a129; /* yyvs3 */
	T0* a131; /* yyvs5 */
	T6 a133; /* yyvsc3 */
	T0* a134; /* yyspecial_routines3 */
	T6 a136; /* yyvsc5 */
	T0* a137; /* yyspecial_routines5 */
	T6 a138; /* yyvsc7 */
	T0* a139; /* yyspecial_routines7 */
	T0* a140; /* yyvs6 */
	T6 a143; /* yyvsc6 */
	T0* a144; /* yyspecial_routines6 */
	T0* a146; /* yytypes1 */
	T6 a187; /* code_ */
	T0* a190; /* str_ */
	T0* a203; /* msil_clr_version_value */
	T0* a205; /* metadata_cache_path_value */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S50 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S51 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a37; /* tuple_class */
	T0* a38; /* procedure_class */
	T0* a39; /* function_class */
	T0* a40; /* predicate_class */
	T0* a41; /* system_name */
	T0* a42; /* internal_eiffel_parser */
	T0* a43; /* ast_factory */
	T1 a44; /* cluster_dependence_enabled */
	T0* a46; /* ise_version */
	T0* a47; /* general_class */
	T1 a48; /* use_void_keyword */
	T1 a49; /* use_assign_keyword */
	T1 a50; /* use_attribute_keyword */
	T1 a51; /* use_convert_keyword */
	T1 a52; /* use_create_keyword */
	T1 a53; /* use_recast_keyword */
	T1 a54; /* use_reference_keyword */
	T1 a55; /* providers_enabled */
	T0* a56; /* clusters */
	T0* a58; /* null_processor */
	T0* a59; /* provider_checker */
	T0* a60; /* ancestor_builder */
	T0* a61; /* feature_flattener */
	T0* a62; /* implementation_checker */
	T0* a63; /* flat_implementation_checker */
	T0* a65; /* ecma_version */
	T0* a66; /* dotnet_assemblies */
	T1 a68; /* is_preparsed */
	T6 a69; /* feature_count */
	T1 a70; /* flat_mode */
	T1 a71; /* flat_dbc_mode */
	T1 a72; /* suppliers_enabled */
	T6 a75; /* copy_seed */
	T6 a76; /* void_seed */
	T0* a78; /* bit_class */
	T6 a79; /* string_class_id */
	T0* a80; /* native_array_class */
	T6 a81; /* character_class_id */
	T6 a82; /* wide_character_class_id */
	T6 a83; /* integer_class_id */
	T6 a84; /* natural_class_id */
	T6 a85; /* real_class_id */
	T6 a86; /* double_class_id */
	T0* a87; /* type_class */
	T0* a88; /* routine_class */
	T0* a89; /* arguments_class */
	T0* a90; /* platform_class */
	T0* a91; /* system_object_class */
	T0* a92; /* system_string_class */
	T0* a93; /* any_type */
	T0* a94; /* none_type */
	T0* a95; /* integer_type */
	T0* a96; /* natural_type */
	T0* a97; /* character_type */
	T0* a98; /* string_type */
	T0* a99; /* real_type */
	T0* a100; /* double_type */
	T0* a101; /* tuple_type */
	T0* a102; /* array_any_type */
	T0* a103; /* array_none_type */
	T0* a104; /* any_parent */
	T0* a105; /* any_parents */
	T0* a106; /* system_object_parents */
	T0* a107; /* integer_convert_feature */
	T0* a108; /* integer_8_convert_feature */
	T0* a109; /* integer_16_convert_feature */
	T0* a110; /* integer_32_convert_feature */
	T0* a111; /* integer_64_convert_feature */
	T0* a112; /* natural_convert_feature */
	T0* a113; /* natural_8_convert_feature */
	T0* a114; /* natural_16_convert_feature */
	T0* a115; /* natural_32_convert_feature */
	T0* a116; /* natural_64_convert_feature */
	T0* a117; /* real_convert_feature */
	T0* a118; /* double_convert_feature */
	T0* a119; /* real_32_convert_feature */
	T0* a120; /* real_64_convert_feature */
	T0* a121; /* boolean_ref_class */
	T0* a122; /* character_8_ref_class */
	T0* a123; /* character_32_ref_class */
	T0* a124; /* character_ref_class */
	T6 a125; /* character_ref_class_id */
	T0* a126; /* wide_character_ref_class */
	T6 a127; /* wide_character_ref_class_id */
	T0* a128; /* integer_8_ref_class */
	T0* a129; /* integer_16_ref_class */
	T0* a130; /* integer_32_ref_class */
	T0* a131; /* integer_64_ref_class */
	T0* a132; /* integer_ref_class */
	T6 a133; /* integer_ref_class_id */
	T0* a134; /* natural_8_ref_class */
	T0* a135; /* natural_16_ref_class */
	T0* a136; /* natural_32_ref_class */
	T0* a137; /* natural_64_ref_class */
	T0* a138; /* natural_ref_class */
	T6 a139; /* natural_ref_class_id */
	T0* a140; /* real_32_ref_class */
	T0* a141; /* real_64_ref_class */
	T0* a142; /* real_ref_class */
	T6 a143; /* real_ref_class_id */
	T0* a144; /* double_ref_class */
	T6 a145; /* double_ref_class_id */
	T0* a146; /* pointer_ref_class */
	T0* a147; /* numeric_class */
	T0* a148; /* comparable_class */
	T0* a149; /* part_comparable_class */
	T0* a150; /* hashable_class */
	T0* a151; /* boolean_convert_feature */
	T0* a152; /* character_convert_feature */
	T0* a153; /* wide_character_convert_feature */
	T0* a154; /* pointer_convert_feature */
	T0* a155; /* internal_dotnet_assembly_consumer */
	T0* a156; /* internal_eiffel_preparser */
	T0* a157; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S52 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* has_error */
	T1 a6; /* benchmark_shown */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S53 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* null_dynamic_type_set_builder */
	T0* a4; /* dynamic_types */
	T1 a5; /* catcall_mode */
	T0* a6; /* dynamic_type_set_builder */
	T0* a7; /* boolean_type */
	T0* a8; /* character_type */
	T0* a9; /* wide_character_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_type */
	T0* a23; /* double_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a38; /* root_type */
	T0* a39; /* root_creation_procedure */
	T0* a40; /* array_area_feature */
	T0* a41; /* array_lower_feature */
	T0* a42; /* array_upper_feature */
	T0* a43; /* typed_pointer_to_pointer_feature */
};

/* Struct for type ET_CLASS */
struct S55 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* class_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* eiffel_class */
	T0* a10; /* master_class */
	T6 a11; /* time_stamp */
	T0* a14; /* formal_parameters */
	T0* a19; /* class_mark */
	T1 a23; /* is_parsed */
	T0* a25; /* group */
	T0* a26; /* overridden_class */
	T6 a35; /* index */
	T1 a36; /* interface_checked */
	T1 a37; /* has_interface_error */
	T1 a41; /* has_syntax_error */
	T0* a45; /* filename */
	T0* a46; /* creators */
	T0* a47; /* frozen_keyword */
	T0* a48; /* external_keyword */
	T0* a49; /* providers */
	T1 a50; /* in_system */
	T0* a51; /* parents */
	T0* a52; /* invariants */
	T0* a53; /* convert_features */
	T1 a54; /* has_flat_implementation_error */
	T1 a55; /* flat_implementation_checked */
	T1 a56; /* has_implementation_error */
	T1 a57; /* implementation_checked */
	T0* a58; /* suppliers */
	T1 a59; /* has_flattening_error */
	T1 a60; /* features_flattened */
	T1 a61; /* has_deferred_features */
	T1 a62; /* has_ancestors_error */
	T1 a63; /* ancestors_built */
	T0* a64; /* feature_clauses */
	T0* a65; /* first_indexing */
	T0* a66; /* second_indexing */
	T0* a67; /* obsolete_message */
	T0* a68; /* leading_break */
	T1 a69; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S56 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* short_names */
	T0* a3; /* type_checker */
	T0* a4; /* universe */
	T0* a5; /* current_system */
	T0* a6; /* current_file */
	T0* a8; /* header_file */
	T0* a9; /* current_type */
	T0* a10; /* current_feature */
	T0* a12; /* current_function_header_buffer */
	T0* a13; /* current_function_body_buffer */
	T0* a14; /* temp_variables */
	T0* a15; /* used_temp_variables */
	T0* a16; /* free_temp_variables */
	T0* a17; /* conforming_types */
	T0* a18; /* non_conforming_types */
	T0* a19; /* operand_stack */
	T0* a20; /* call_operands */
	T0* a21; /* polymorphic_type_ids */
	T0* a22; /* polymorphic_types */
	T0* a23; /* standalone_type_sets */
	T0* a24; /* polymorphic_call_feature */
	T0* a25; /* current_agents */
	T0* a26; /* agent_open_operands */
	T0* a27; /* agent_closed_operands */
	T0* a28; /* agent_target */
	T0* a30; /* agent_arguments */
	T0* a31; /* agent_instruction */
	T0* a32; /* agent_expression */
	T0* a33; /* wrapper_expression */
	T0* a34; /* wrapper_dynamic_type_sets */
	T0* a35; /* manifest_array_types */
	T0* a36; /* manifest_tuple_types */
	T0* a37; /* once_features */
	T0* a38; /* constant_features */
	T0* a39; /* called_features */
	T0* a40; /* included_header_filenames */
	T0* a42; /* included_runtime_header_files */
	T0* a43; /* included_runtime_c_files */
	T0* a44; /* c_filenames */
	T0* a45; /* cpp_filenames */
	T1 a46; /* is_finalize */
	T0* a47; /* external_c_regexp */
	T0* a48; /* external_c_macro_regexp */
	T0* a49; /* external_c_struct_regexp */
	T0* a50; /* external_c_inline_regexp */
	T0* a51; /* old_external_c_regexp */
	T0* a52; /* old_external_c_macro_regexp */
	T0* a53; /* old_external_c_struct_regexp */
	T6 a109; /* indentation */
	T6 a112; /* unique_count */
	T0* a229; /* assignment_target */
	T1 a230; /* in_operand */
	T0* a232; /* call_target_type */
	T0* a247; /* current_agent */
};

/* Struct for type KL_SHELL_COMMAND */
struct S57 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a4; /* command */
	T6 a5; /* return_code */
	T1 a7; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S58 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S59 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* character_index */
	T0* a11; /* boolean_index */
	T0* a12; /* double_index */
	T0* a13; /* real_index */
	T0* a14; /* integer_index */
	T0* a15; /* integer_8_index */
	T0* a16; /* integer_16_index */
	T0* a17; /* integer_32_index */
	T0* a18; /* integer_64_index */
	T0* a19; /* natural_index */
	T0* a20; /* natural_8_index */
	T0* a21; /* natural_16_index */
	T0* a22; /* natural_32_index */
	T0* a23; /* natural_64_index */
	T0* a24; /* pointer_index */
	T0* a25; /* none_index */
	T0* a26; /* string_index */
	T1 a27; /* catcall_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a37; /* current_feature_impl */
	T0* a38; /* current_class_impl */
	T0* a39; /* enclosing_inline_agents */
	T0* a40; /* overloaded_procedures */
	T0* a41; /* overloaded_queries */
	T0* a42; /* best_overloaded_features */
	T0* a43; /* used_contexts */
	T0* a44; /* unused_contexts */
	T0* a45; /* current_context */
	T1 a47; /* in_precursor */
	T0* a180; /* current_inline_agent */
	T1 a181; /* in_rescue */
	T1 a184; /* in_invariant */
	T1 a185; /* in_precondition */
	T1 a186; /* in_postcondition */
	T0* a190; /* current_target_type */
	T1 a192; /* in_assertion */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S60 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S62 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S64 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S65 {
	int id;
	T2 a16; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S66 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER] */
struct S67 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S69 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type KL_STANDARD_FILES */
struct S71 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S72 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S73 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type UC_STRING */
struct S74 {
	int id;
	T6 a1; /* count */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T0* a7; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S75 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING] */
struct S76 {
	int id;
	T6 a2; /* count */
	T0* a7; /* internal_cursor */
	T0* a9; /* storage */
	T0* a14; /* special_routines */
	T6 a15; /* capacity */
	T0* a20; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S77 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T0* a9; /* storage */
	T0* a12; /* special_routines */
	T6 a13; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S78 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S79 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a4; /* warning_file */
	T0* a5; /* info_file */
};

/* Struct for type AP_ERROR */
struct S80 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a4; /* code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S81 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ST_WORD_WRAPPER */
struct S82 {
	int id;
	T6 a3; /* new_line_indentation */
	T6 a4; /* broken_words */
	T6 a5; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S83 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S84 {
	int id;
	T0* a1; /* root_element */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
	T0* a8; /* last_cell */
	T6 a9; /* count */
	T0* a13; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S85 {
	int id;
	T0* a1; /* parent */
	T0* a3; /* name */
	T0* a15; /* namespace */
	T0* a18; /* first_cell */
	T0* a19; /* last_cell */
	T6 a20; /* count */
	T0* a21; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S86 {
	int id;
	T0* a2; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S88 {
	int id;
	T0* a1; /* error */
	T0* a3; /* tree */
	T0* a5; /* start */
	T0* a8; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S89 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S90 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S91 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S92 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
struct S93 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* equality_tester */
	T0* a9; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a20; /* special_item_routines */
	T0* a21; /* special_key_routines */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S94 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_PARSER */
struct S95 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a5; /* library_parser */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_parser */
	T0* a9; /* tree_pipe */
	T0* a10; /* last_library */
	T1 a129; /* is_shallow */
	T1 a130; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S96 {
	int id;
	T0* a3; /* internal_last_error_description */
	T0* a8; /* scanner */
	T0* a14; /* error_positions */
	T0* a16; /* scanners */
	T1 a17; /* in_external_dtd */
	T0* a18; /* callbacks */
	T0* a19; /* entities */
	T0* a21; /* pe_entities */
	T0* a22; /* dtd_resolver */
	T0* a24; /* entity_resolver */
	T1 a25; /* use_namespaces */
	T6 a26; /* string_mode */
	T0* a28; /* yyss */
	T0* a31; /* yytranslate */
	T0* a33; /* yyr1 */
	T0* a35; /* yytypes1 */
	T0* a37; /* yytypes2 */
	T0* a39; /* yydefact */
	T0* a41; /* yydefgoto */
	T0* a43; /* yypact */
	T0* a45; /* yypgoto */
	T0* a47; /* yytable */
	T0* a49; /* yycheck */
	T6 a51; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a61; /* error_count */
	T1 a62; /* yy_lookahead_needed */
	T6 a63; /* yyerrstatus */
	T6 a64; /* yyssp */
	T6 a72; /* last_token */
	T6 a81; /* yyvsp1 */
	T6 a82; /* yyvsp2 */
	T6 a83; /* yyvsp3 */
	T6 a84; /* yyvsp4 */
	T6 a85; /* yyvsp5 */
	T6 a86; /* yyvsp6 */
	T6 a87; /* yyvsp7 */
	T6 a88; /* yyvsp8 */
	T6 a89; /* yyvsp9 */
	T6 a90; /* yyvsp10 */
	T6 a91; /* yyvsp11 */
	T0* a92; /* last_string_value */
	T6 a103; /* yyvsc1 */
	T0* a104; /* yyvs1 */
	T0* a105; /* yyspecial_routines1 */
	T0* a107; /* last_any_value */
	T6 a108; /* yyvsc4 */
	T0* a109; /* yyvs4 */
	T0* a110; /* yyspecial_routines4 */
	T6 a112; /* yyvsc2 */
	T0* a113; /* yyvs2 */
	T0* a114; /* yyspecial_routines2 */
	T0* a121; /* yyvs11 */
	T6 a122; /* yyvsc11 */
	T0* a123; /* yyspecial_routines11 */
	T0* a125; /* yyvs10 */
	T0* a126; /* yyvs5 */
	T6 a128; /* yyvsc10 */
	T0* a129; /* yyspecial_routines10 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyvs3 */
	T0* a137; /* yyspecial_routines3 */
	T0* a143; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a151; /* yyvs8 */
	T0* a154; /* yyvs7 */
	T6 a155; /* yyvsc8 */
	T0* a156; /* yyspecial_routines8 */
	T6 a158; /* yyvsc7 */
	T0* a159; /* yyspecial_routines7 */
	T0* a161; /* yyvs9 */
	T6 a163; /* yyvsc9 */
	T0* a164; /* yyspecial_routines9 */
	T6 a170; /* yyvsc5 */
	T0* a171; /* yyspecial_routines5 */
	T0* a177; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S99 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING, STRING] */
struct S100 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [STRING] */
struct S102 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [INTEGER] */
struct S103 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING, STRING] */
struct S104 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER] */
struct S105 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING] */
struct S106 {
	int id;
};

/* Struct for type DS_LINKED_LIST [STRING] */
struct S107 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING] */
struct S108 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER] */
struct S109 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a15; /* count */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* special_item_routines */
	T0* a21; /* item_storage */
	T0* a22; /* clashes */
	T0* a24; /* slots */
	T6 a25; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S110 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S111 {
	int id;
	T0* a9; /* error_handler */
	T0* a10; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S112 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T6 a15; /* slots_position */
	T0* a17; /* equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type YY_FILE_BUFFER */
struct S113 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a11; /* end_of_file */
	T6 a12; /* capacity */
	T1 a13; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S114 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a11; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S115 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type SPECIAL [ANY] */
struct S117 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S118 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S119 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a4; /* status_code */
	T6 a12; /* compressed_position */
	T6 a14; /* hash_code */
	T0* a15; /* name */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S120 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S121 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S122 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S123 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a12; /* parent */
	T1 a18; /* is_override */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a34; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S124 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S125 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S126 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S127 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S128 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S129 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S130 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S131 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S132 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S133 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S134 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S135 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S136 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S137 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S138 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S139 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S140 {
	int id;
	T6 a2; /* capacity */
	T6 a3; /* count */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* position */
	T6 a8; /* last_position */
	T6 a11; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a19; /* item_storage */
	T0* a22; /* clashes */
	T0* a23; /* slots */
	T0* a24; /* key_storage */
	T6 a25; /* free_slot */
	T0* a26; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S141 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a3; /* current_system */
	T1 a4; /* catcall_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S142 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S143 {
	int id;
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T0* a7; /* queries */
	T6 a8; /* id */
	T0* a11; /* base_class */
	T0* a14; /* procedures */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a18; /* next_type */
	T1 a23; /* has_static */
	T0* a24; /* query_calls */
	T0* a25; /* procedure_calls */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S145 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_QUERY_LIST */
struct S146 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S148 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S150 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T0* a6; /* result_type_set */
	T1 a7; /* is_generated */
	T6 a11; /* builtin_code */
	T1 a13; /* is_creation */
	T0* a14; /* first_precursor */
	T1 a15; /* is_regular */
	T0* a16; /* other_precursors */
	T1 a41; /* is_built */
	T1 a46; /* is_current_type_needed */
	T1 a47; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S151 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S152 {
	int id;
	T6 a12; /* time_storage */
	T6 a16; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S153 {
	int id;
	T6 a2; /* second */
	T6 a4; /* year */
	T6 a5; /* month */
	T6 a6; /* day */
	T6 a7; /* hour */
	T6 a8; /* minute */
	T6 a9; /* millisecond */
	T1 a10; /* is_utc */
	T0* a21; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S157 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S158 {
	int id;
	T0* a1; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a7; /* last_keywords */
	T0* a9; /* last_symbols */
	T0* a11; /* assertions */
	T0* a13; /* queries */
	T0* a15; /* procedures */
	T0* a17; /* constraints */
	T0* a19; /* providers */
	T0* a21; /* universe */
	T0* a22; /* ast_factory */
	T0* a23; /* error_handler */
	T1 a24; /* use_assign_keyword */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_convert_keyword */
	T1 a27; /* use_create_keyword */
	T1 a28; /* use_recast_keyword */
	T1 a29; /* use_reference_keyword */
	T1 a30; /* use_void_keyword */
	T1 a31; /* providers_enabled */
	T1 a32; /* overriding_class_added */
	T1 a33; /* is_null */
	T6 a35; /* last_text_count */
	T6 a36; /* last_literal_start */
	T0* a37; /* filename */
	T0* a38; /* current_class */
	T0* a40; /* yyss */
	T0* a48; /* input_buffer */
	T0* a49; /* yytranslate */
	T0* a51; /* yyr1 */
	T0* a53; /* yytypes1 */
	T0* a55; /* yytypes2 */
	T0* a57; /* yydefact */
	T0* a59; /* yydefgoto */
	T0* a61; /* yypact */
	T0* a63; /* yypgoto */
	T0* a65; /* yytable */
	T0* a67; /* yycheck */
	T6 a69; /* time_stamp */
	T0* a70; /* cluster */
	T6 a72; /* yy_start_state */
	T6 a73; /* yy_line */
	T6 a74; /* yy_column */
	T6 a75; /* yy_position */
	T6 a76; /* line */
	T6 a77; /* column */
	T6 a78; /* position */
	T0* a80; /* yy_state_stack */
	T6 a81; /* yy_end */
	T6 a82; /* yy_start */
	T6 a83; /* yy_parsing_status */
	T6 a85; /* yy_suspended_yystacksize */
	T6 a86; /* yy_suspended_yystate */
	T6 a87; /* yy_suspended_yyn */
	T6 a88; /* yy_suspended_yychar1 */
	T6 a89; /* yy_suspended_index */
	T6 a90; /* yy_suspended_yyss_top */
	T6 a91; /* yy_suspended_yy_goto */
	T6 a93; /* error_count */
	T1 a94; /* yy_lookahead_needed */
	T6 a95; /* yyerrstatus */
	T6 a96; /* yyssp */
	T6 a104; /* last_token */
	T0* a113; /* last_class */
	T0* a114; /* last_clients */
	T0* a115; /* last_export_clients */
	T0* a116; /* last_feature_clause */
	T6 a117; /* last_literal_end */
	T0* a118; /* verbatim_marker */
	T0* a119; /* verbatim_open_white_characters */
	T0* a120; /* verbatim_close_white_characters */
	T1 a121; /* yy_more_flag */
	T6 a122; /* yy_more_len */
	T6 a123; /* yy_last_accepting_state */
	T6 a124; /* yy_last_accepting_cpos */
	T1 a125; /* yy_rejected */
	T6 a126; /* yy_state_count */
	T6 a127; /* yy_full_match */
	T6 a128; /* yy_lp */
	T6 a129; /* yy_looking_for_trail_begin */
	T6 a130; /* yy_full_lp */
	T6 a131; /* yy_full_state */
	T0* a132; /* yy_nxt */
	T0* a134; /* yy_chk */
	T0* a136; /* yy_base */
	T0* a138; /* yy_def */
	T0* a140; /* yy_ec */
	T0* a142; /* yy_meta */
	T0* a144; /* yy_accept */
	T0* a146; /* yy_acclist */
	T0* a148; /* yy_content */
	T0* a149; /* yy_content_area */
	T6 a150; /* yyvsp1 */
	T6 a151; /* yyvsp2 */
	T6 a152; /* yyvsp3 */
	T6 a153; /* yyvsp4 */
	T6 a154; /* yyvsp5 */
	T6 a155; /* yyvsp6 */
	T6 a156; /* yyvsp7 */
	T6 a157; /* yyvsp8 */
	T6 a158; /* yyvsp9 */
	T6 a159; /* yyvsp10 */
	T6 a160; /* yyvsp11 */
	T6 a161; /* yyvsp12 */
	T6 a162; /* yyvsp13 */
	T6 a163; /* yyvsp14 */
	T6 a164; /* yyvsp15 */
	T6 a165; /* yyvsp16 */
	T6 a166; /* yyvsp17 */
	T6 a167; /* yyvsp18 */
	T6 a168; /* yyvsp19 */
	T6 a169; /* yyvsp20 */
	T6 a170; /* yyvsp21 */
	T6 a171; /* yyvsp22 */
	T6 a172; /* yyvsp23 */
	T6 a173; /* yyvsp24 */
	T6 a174; /* yyvsp25 */
	T6 a175; /* yyvsp26 */
	T6 a176; /* yyvsp27 */
	T6 a177; /* yyvsp28 */
	T6 a178; /* yyvsp29 */
	T6 a179; /* yyvsp30 */
	T6 a180; /* yyvsp31 */
	T6 a181; /* yyvsp32 */
	T6 a182; /* yyvsp33 */
	T6 a183; /* yyvsp34 */
	T6 a184; /* yyvsp35 */
	T6 a185; /* yyvsp36 */
	T6 a186; /* yyvsp37 */
	T6 a187; /* yyvsp38 */
	T6 a188; /* yyvsp39 */
	T6 a189; /* yyvsp40 */
	T6 a190; /* yyvsp41 */
	T6 a191; /* yyvsp42 */
	T6 a192; /* yyvsp43 */
	T6 a193; /* yyvsp44 */
	T6 a194; /* yyvsp45 */
	T6 a195; /* yyvsp46 */
	T6 a196; /* yyvsp47 */
	T6 a197; /* yyvsp48 */
	T6 a198; /* yyvsp49 */
	T6 a199; /* yyvsp50 */
	T6 a200; /* yyvsp51 */
	T6 a201; /* yyvsp52 */
	T6 a202; /* yyvsp53 */
	T6 a203; /* yyvsp54 */
	T6 a204; /* yyvsp55 */
	T6 a205; /* yyvsp56 */
	T6 a206; /* yyvsp57 */
	T6 a207; /* yyvsp58 */
	T6 a208; /* yyvsp59 */
	T6 a209; /* yyvsp60 */
	T6 a210; /* yyvsp61 */
	T6 a211; /* yyvsp62 */
	T6 a212; /* yyvsp63 */
	T6 a213; /* yyvsp64 */
	T6 a214; /* yyvsp65 */
	T6 a215; /* yyvsp66 */
	T6 a216; /* yyvsp67 */
	T6 a217; /* yyvsp68 */
	T6 a218; /* yyvsp69 */
	T6 a219; /* yyvsp70 */
	T6 a220; /* yyvsp71 */
	T6 a221; /* yyvsp72 */
	T6 a222; /* yyvsp73 */
	T6 a223; /* yyvsp74 */
	T6 a224; /* yyvsp75 */
	T6 a225; /* yyvsp76 */
	T6 a226; /* yyvsp77 */
	T6 a227; /* yyvsp78 */
	T6 a228; /* yyvsp79 */
	T6 a229; /* yyvsp80 */
	T6 a230; /* yyvsp81 */
	T6 a231; /* yyvsp82 */
	T6 a232; /* yyvsp83 */
	T6 a233; /* yyvsp84 */
	T6 a234; /* yyvsp85 */
	T6 a235; /* yyvsp86 */
	T6 a236; /* yyvsp87 */
	T6 a237; /* yyvsp88 */
	T6 a238; /* yyvsp89 */
	T6 a239; /* yyvsp90 */
	T6 a240; /* yyvsp91 */
	T6 a241; /* yyvsp92 */
	T6 a242; /* yyvsp93 */
	T6 a243; /* yyvsp94 */
	T6 a244; /* yyvsp95 */
	T6 a245; /* yyvsp96 */
	T6 a246; /* yyvsp97 */
	T6 a247; /* yyvsp98 */
	T6 a248; /* yyvsp99 */
	T6 a249; /* yyvsp100 */
	T6 a250; /* yyvsp101 */
	T6 a251; /* yyvsp102 */
	T6 a252; /* yyvsp103 */
	T6 a253; /* yyvsp104 */
	T6 a254; /* yyvsp105 */
	T6 a255; /* yyvsp106 */
	T6 a256; /* yyvsp107 */
	T6 a257; /* yyvsp108 */
	T6 a258; /* yyvsp109 */
	T6 a259; /* yyvsp110 */
	T6 a260; /* yyvsp111 */
	T6 a261; /* yyvsp112 */
	T6 a262; /* yyvsp113 */
	T6 a263; /* yyvsp114 */
	T6 a264; /* yyvsp115 */
	T6 a265; /* yyvsp116 */
	T6 a284; /* yyvsc1 */
	T0* a285; /* yyvs1 */
	T0* a286; /* yyspecial_routines1 */
	T0* a288; /* last_any_value */
	T6 a289; /* yyvsc2 */
	T0* a290; /* yyvs2 */
	T0* a291; /* yyspecial_routines2 */
	T0* a292; /* last_et_keyword_value */
	T6 a293; /* yyvsc3 */
	T0* a294; /* yyvs3 */
	T0* a295; /* yyspecial_routines3 */
	T0* a296; /* last_et_agent_keyword_value */
	T6 a297; /* yyvsc4 */
	T0* a298; /* yyvs4 */
	T0* a299; /* yyspecial_routines4 */
	T0* a300; /* last_et_precursor_keyword_value */
	T6 a301; /* yyvsc5 */
	T0* a302; /* yyvs5 */
	T0* a303; /* yyspecial_routines5 */
	T0* a304; /* last_et_symbol_value */
	T6 a305; /* yyvsc6 */
	T0* a306; /* yyvs6 */
	T0* a307; /* yyspecial_routines6 */
	T0* a308; /* last_et_position_value */
	T6 a309; /* yyvsc7 */
	T0* a310; /* yyvs7 */
	T0* a311; /* yyspecial_routines7 */
	T0* a312; /* last_et_bit_constant_value */
	T6 a313; /* yyvsc8 */
	T0* a314; /* yyvs8 */
	T0* a315; /* yyspecial_routines8 */
	T0* a316; /* last_et_boolean_constant_value */
	T6 a317; /* yyvsc9 */
	T0* a318; /* yyvs9 */
	T0* a319; /* yyspecial_routines9 */
	T0* a320; /* last_et_break_value */
	T6 a321; /* yyvsc10 */
	T0* a322; /* yyvs10 */
	T0* a323; /* yyspecial_routines10 */
	T0* a324; /* last_et_character_constant_value */
	T6 a325; /* yyvsc11 */
	T0* a326; /* yyvs11 */
	T0* a327; /* yyspecial_routines11 */
	T0* a328; /* last_et_current_value */
	T6 a329; /* yyvsc12 */
	T0* a330; /* yyvs12 */
	T0* a331; /* yyspecial_routines12 */
	T0* a332; /* last_et_free_operator_value */
	T6 a333; /* yyvsc13 */
	T0* a334; /* yyvs13 */
	T0* a335; /* yyspecial_routines13 */
	T0* a336; /* last_et_identifier_value */
	T6 a337; /* yyvsc14 */
	T0* a338; /* yyvs14 */
	T0* a339; /* yyspecial_routines14 */
	T0* a340; /* last_et_integer_constant_value */
	T6 a341; /* yyvsc15 */
	T0* a342; /* yyvs15 */
	T0* a343; /* yyspecial_routines15 */
	T0* a344; /* last_et_keyword_operator_value */
	T6 a345; /* yyvsc16 */
	T0* a346; /* yyvs16 */
	T0* a347; /* yyspecial_routines16 */
	T0* a348; /* last_et_manifest_string_value */
	T6 a349; /* yyvsc17 */
	T0* a350; /* yyvs17 */
	T0* a351; /* yyspecial_routines17 */
	T0* a352; /* last_et_real_constant_value */
	T6 a353; /* yyvsc18 */
	T0* a354; /* yyvs18 */
	T0* a355; /* yyspecial_routines18 */
	T0* a356; /* last_et_result_value */
	T6 a357; /* yyvsc19 */
	T0* a358; /* yyvs19 */
	T0* a359; /* yyspecial_routines19 */
	T0* a360; /* last_et_retry_instruction_value */
	T6 a361; /* yyvsc20 */
	T0* a362; /* yyvs20 */
	T0* a363; /* yyspecial_routines20 */
	T0* a364; /* last_et_symbol_operator_value */
	T6 a365; /* yyvsc21 */
	T0* a366; /* yyvs21 */
	T0* a367; /* yyspecial_routines21 */
	T0* a368; /* last_et_void_value */
	T6 a369; /* yyvsc22 */
	T0* a370; /* yyvs22 */
	T0* a371; /* yyspecial_routines22 */
	T0* a372; /* last_et_semicolon_symbol_value */
	T6 a373; /* yyvsc23 */
	T0* a374; /* yyvs23 */
	T0* a375; /* yyspecial_routines23 */
	T0* a376; /* last_et_bracket_symbol_value */
	T6 a377; /* yyvsc24 */
	T0* a378; /* yyvs24 */
	T0* a379; /* yyspecial_routines24 */
	T0* a380; /* last_et_question_mark_symbol_value */
	T6 a382; /* last_break_end */
	T6 a383; /* last_comment_end */
	T6 a385; /* ms_column */
	T6 a386; /* ms_line */
	T6 a391; /* break_kind */
	T0* a552; /* yyvs42 */
	T0* a553; /* yyvs78 */
	T0* a554; /* yyvs97 */
	T0* a555; /* yyvs101 */
	T0* a556; /* yyvs56 */
	T0* a557; /* yyvs53 */
	T0* a558; /* yyvs67 */
	T0* a559; /* yyvs86 */
	T6 a560; /* yyvsc78 */
	T0* a561; /* yyspecial_routines78 */
	T0* a562; /* yyvs79 */
	T0* a565; /* yyvs82 */
	T6 a566; /* yyvsc79 */
	T0* a567; /* yyspecial_routines79 */
	T0* a568; /* yyvs80 */
	T6 a569; /* yyvsc82 */
	T0* a570; /* yyspecial_routines82 */
	T0* a571; /* yyvs81 */
	T6 a572; /* yyvsc80 */
	T0* a573; /* yyspecial_routines80 */
	T0* a574; /* yyvs54 */
	T0* a575; /* yyvs96 */
	T6 a576; /* yyvsc81 */
	T0* a577; /* yyspecial_routines81 */
	T6 a579; /* yyvsc42 */
	T0* a580; /* yyspecial_routines42 */
	T6 a581; /* yyvsc76 */
	T0* a582; /* yyvs76 */
	T0* a583; /* yyspecial_routines76 */
	T0* a584; /* yyvs74 */
	T0* a586; /* yyvs75 */
	T6 a587; /* yyvsc75 */
	T0* a588; /* yyspecial_routines75 */
	T6 a589; /* yyvsc74 */
	T0* a590; /* yyspecial_routines74 */
	T0* a591; /* yyvs50 */
	T0* a593; /* yyvs49 */
	T6 a594; /* yyvsc49 */
	T0* a595; /* yyspecial_routines49 */
	T0* a596; /* yyvs70 */
	T0* a597; /* yyvs48 */
	T6 a599; /* yyvsc50 */
	T0* a600; /* yyspecial_routines50 */
	T0* a601; /* yyvs88 */
	T6 a603; /* yyvsc48 */
	T0* a604; /* yyspecial_routines48 */
	T0* a605; /* yyvs47 */
	T6 a606; /* yyvsc47 */
	T0* a607; /* yyspecial_routines47 */
	T6 a608; /* yyvsc97 */
	T0* a609; /* yyspecial_routines97 */
	T6 a610; /* yyvsc101 */
	T0* a611; /* yyspecial_routines101 */
	T0* a612; /* yyvs27 */
	T6 a614; /* yyvsc99 */
	T0* a615; /* yyvs99 */
	T0* a616; /* yyspecial_routines99 */
	T0* a617; /* yyvs107 */
	T0* a618; /* yyvs61 */
	T0* a619; /* yyvs87 */
	T0* a620; /* yyvs100 */
	T6 a621; /* yyvsc100 */
	T0* a622; /* yyspecial_routines100 */
	T6 a623; /* yyvsc107 */
	T0* a624; /* yyspecial_routines107 */
	T0* a625; /* yyvs106 */
	T0* a626; /* yyvs69 */
	T0* a627; /* yyvs64 */
	T6 a628; /* yyvsc106 */
	T0* a629; /* yyspecial_routines106 */
	T6 a630; /* yyvsc61 */
	T0* a631; /* yyspecial_routines61 */
	T0* a632; /* yyvs60 */
	T0* a633; /* yyvs44 */
	T6 a634; /* yyvsc60 */
	T0* a635; /* yyspecial_routines60 */
	T0* a636; /* yyvs68 */
	T6 a637; /* yyvsc68 */
	T0* a638; /* yyspecial_routines68 */
	T6 a639; /* yyvsc44 */
	T0* a640; /* yyspecial_routines44 */
	T0* a641; /* yyvs43 */
	T6 a642; /* yyvsc43 */
	T0* a643; /* yyspecial_routines43 */
	T6 a644; /* yyvsc87 */
	T0* a645; /* yyspecial_routines87 */
	T6 a646; /* yyvsc70 */
	T0* a647; /* yyspecial_routines70 */
	T6 a648; /* yyvsc56 */
	T0* a649; /* yyspecial_routines56 */
	T0* a650; /* yyvs55 */
	T6 a651; /* yyvsc55 */
	T0* a652; /* yyspecial_routines55 */
	T6 a653; /* yyvsc53 */
	T0* a654; /* yyspecial_routines53 */
	T0* a655; /* yyvs51 */
	T0* a656; /* yyvs52 */
	T6 a657; /* yyvsc52 */
	T0* a658; /* yyspecial_routines52 */
	T0* a659; /* yyvs112 */
	T6 a660; /* yyvsc51 */
	T0* a661; /* yyspecial_routines51 */
	T6 a662; /* yyvsc112 */
	T0* a663; /* yyspecial_routines112 */
	T0* a664; /* yyvs110 */
	T0* a665; /* yyvs111 */
	T6 a666; /* yyvsc111 */
	T0* a667; /* yyspecial_routines111 */
	T6 a668; /* yyvsc67 */
	T0* a669; /* yyspecial_routines67 */
	T0* a670; /* yyvs66 */
	T6 a671; /* yyvsc66 */
	T0* a672; /* yyspecial_routines66 */
	T0* a673; /* yyvs105 */
	T0* a675; /* yyvs104 */
	T0* a677; /* yyvs33 */
	T6 a678; /* yyvsc105 */
	T0* a679; /* yyspecial_routines105 */
	T0* a680; /* yyvs46 */
	T0* a682; /* yyvs103 */
	T0* a683; /* yyvs91 */
	T0* a684; /* yyvs45 */
	T0* a685; /* yyvs102 */
	T0* a686; /* yyvs73 */
	T0* a687; /* yyvs65 */
	T6 a689; /* yyvsc104 */
	T0* a690; /* yyspecial_routines104 */
	T6 a692; /* yyvsc65 */
	T0* a693; /* yyspecial_routines65 */
	T6 a694; /* yyvsc33 */
	T0* a695; /* yyspecial_routines33 */
	T6 a696; /* yyvsc69 */
	T0* a697; /* yyspecial_routines69 */
	T6 a700; /* yyvsc64 */
	T0* a701; /* yyspecial_routines64 */
	T0* a702; /* yyvs32 */
	T6 a703; /* yyvsc32 */
	T0* a704; /* yyspecial_routines32 */
	T6 a707; /* yyvsc73 */
	T0* a708; /* yyspecial_routines73 */
	T0* a709; /* yyvs72 */
	T0* a710; /* yyvs71 */
	T6 a712; /* yyvsc71 */
	T0* a713; /* yyspecial_routines71 */
	T6 a714; /* yyvsc72 */
	T0* a715; /* yyspecial_routines72 */
	T6 a716; /* yyvsc91 */
	T0* a717; /* yyspecial_routines91 */
	T0* a719; /* yyvs90 */
	T0* a720; /* yyvs89 */
	T6 a721; /* yyvsc89 */
	T0* a722; /* yyspecial_routines89 */
	T6 a723; /* yyvsc90 */
	T0* a724; /* yyspecial_routines90 */
	T0* a725; /* yyvs62 */
	T6 a726; /* yyvsc103 */
	T0* a727; /* yyspecial_routines103 */
	T6 a729; /* yyvsc102 */
	T0* a730; /* yyspecial_routines102 */
	T6 a732; /* yyvsc86 */
	T0* a733; /* yyspecial_routines86 */
	T6 a735; /* yyvsc92 */
	T0* a736; /* yyvs92 */
	T0* a737; /* yyspecial_routines92 */
	T6 a739; /* yyvsc113 */
	T0* a740; /* yyvs113 */
	T0* a741; /* yyspecial_routines113 */
	T6 a742; /* yyvsc45 */
	T0* a743; /* yyspecial_routines45 */
	T6 a745; /* yyvsc110 */
	T0* a746; /* yyspecial_routines110 */
	T6 a747; /* yyvsc27 */
	T0* a748; /* yyspecial_routines27 */
	T0* a749; /* yyvs26 */
	T6 a750; /* yyvsc26 */
	T0* a751; /* yyspecial_routines26 */
	T6 a752; /* yyvsc88 */
	T0* a753; /* yyspecial_routines88 */
	T0* a754; /* yyvs85 */
	T0* a755; /* yyvs37 */
	T6 a756; /* yyvsc85 */
	T0* a757; /* yyspecial_routines85 */
	T0* a758; /* yyvs35 */
	T0* a759; /* yyvs116 */
	T0* a760; /* yyvs77 */
	T0* a761; /* yyvs84 */
	T0* a762; /* yyvs57 */
	T0* a764; /* yyvs25 */
	T6 a765; /* yyvsc54 */
	T0* a766; /* yyspecial_routines54 */
	T6 a767; /* yyvsc77 */
	T0* a768; /* yyspecial_routines77 */
	T0* a769; /* yyvs59 */
	T0* a770; /* yyvs58 */
	T6 a771; /* yyvsc59 */
	T0* a772; /* yyspecial_routines59 */
	T6 a773; /* yyvsc58 */
	T0* a774; /* yyspecial_routines58 */
	T0* a775; /* yyvs115 */
	T6 a776; /* yyvsc84 */
	T0* a777; /* yyspecial_routines84 */
	T6 a778; /* yyvsc115 */
	T0* a779; /* yyspecial_routines115 */
	T0* a780; /* yyvs114 */
	T0* a781; /* yyvs41 */
	T6 a782; /* yyvsc114 */
	T0* a783; /* yyspecial_routines114 */
	T6 a784; /* yyvsc41 */
	T0* a785; /* yyspecial_routines41 */
	T0* a786; /* yyvs38 */
	T0* a787; /* yyvs40 */
	T6 a788; /* yyvsc40 */
	T0* a789; /* yyspecial_routines40 */
	T0* a790; /* yyvs39 */
	T6 a791; /* yyvsc38 */
	T0* a792; /* yyspecial_routines38 */
	T6 a793; /* yyvsc39 */
	T0* a794; /* yyspecial_routines39 */
	T0* a795; /* yyvs108 */
	T0* a796; /* yyvs95 */
	T6 a797; /* yyvsc57 */
	T0* a798; /* yyspecial_routines57 */
	T6 a799; /* yyvsc95 */
	T0* a800; /* yyspecial_routines95 */
	T0* a801; /* yyvs94 */
	T6 a802; /* yyvsc94 */
	T0* a803; /* yyspecial_routines94 */
	T6 a806; /* yyvsc62 */
	T0* a807; /* yyspecial_routines62 */
	T6 a808; /* yyvsc37 */
	T0* a809; /* yyspecial_routines37 */
	T6 a810; /* yyvsc108 */
	T0* a811; /* yyspecial_routines108 */
	T0* a812; /* yyvs98 */
	T6 a813; /* yyvsc25 */
	T0* a814; /* yyspecial_routines25 */
	T0* a815; /* yyvs63 */
	T6 a816; /* yyvsc63 */
	T0* a817; /* yyspecial_routines63 */
	T6 a819; /* yyvsc116 */
	T0* a820; /* yyspecial_routines116 */
	T0* a823; /* yyvs36 */
	T0* a824; /* yyvs83 */
	T0* a825; /* yyvs93 */
	T0* a826; /* yyvs109 */
	T0* a827; /* yyvs34 */
	T6 a828; /* yyvsc35 */
	T0* a829; /* yyspecial_routines35 */
	T6 a830; /* yyvsc34 */
	T0* a831; /* yyspecial_routines34 */
	T6 a832; /* yyvsc98 */
	T0* a833; /* yyspecial_routines98 */
	T6 a834; /* yyvsc93 */
	T0* a835; /* yyspecial_routines93 */
	T6 a836; /* yyvsc96 */
	T0* a837; /* yyspecial_routines96 */
	T6 a838; /* yyvsc109 */
	T0* a839; /* yyspecial_routines109 */
	T6 a840; /* yyvsc46 */
	T0* a841; /* yyspecial_routines46 */
	T0* a842; /* yyvs30 */
	T6 a843; /* yyvsc36 */
	T0* a844; /* yyspecial_routines36 */
	T0* a845; /* yyvs31 */
	T6 a847; /* yyvsc83 */
	T0* a848; /* yyspecial_routines83 */
	T6 a849; /* yyvsc31 */
	T0* a850; /* yyspecial_routines31 */
	T6 a851; /* yyvsc30 */
	T0* a852; /* yyspecial_routines30 */
	T0* a853; /* yyvs28 */
	T0* a854; /* yyvs29 */
	T6 a855; /* yyvsc29 */
	T0* a856; /* yyspecial_routines29 */
	T6 a857; /* yyvsc28 */
	T0* a858; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S159 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S160 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S161 {
	int id;
	T0* a3; /* eiffel_class */
	T0* a4; /* actual_parameters */
	T0* a7; /* type_mark */
	T0* a8; /* name */
	T0* a9; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S163 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* declared_type */
	T6 a8; /* hash_code */
	T0* a9; /* is_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T0* a13; /* implementation_feature */
	T6 a14; /* builtin_code */
	T0* a15; /* assigner */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* alias_clause */
	T0* a20; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a33; /* semicolon */
	T0* a34; /* feature_clause */
	T0* a35; /* other_seeds */
	T6 a36; /* id */
	T6 a37; /* version */
	T0* a38; /* frozen_keyword */
	T0* a39; /* first_precursor */
	T0* a40; /* other_precursors */
	T1 a41; /* assertions_checked */
	T1 a42; /* has_assertions_error */
	T0* a43; /* synonym */
};

/* Struct for type ET_KEYWORD */
struct S166 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S168 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S169 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a5; /* universe */
	T1 a7; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S170 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S171 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S172 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S173 {
	int id;
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S174 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S175 {
	int id;
	T6 a1; /* capacity */
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER] */
struct S176 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
struct S177 {
	int id;
	T6 a5; /* position */
	T0* a7; /* internal_cursor */
	T0* a12; /* item_storage */
	T6 a13; /* last_position */
	T6 a14; /* capacity */
	T6 a17; /* slots_position */
	T6 a19; /* count */
	T6 a20; /* free_slot */
	T6 a21; /* modulus */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a26; /* equality_tester */
	T0* a27; /* internal_keys */
	T6 a28; /* found_position */
	T0* a31; /* clashes */
	T0* a32; /* slots */
	T0* a33; /* key_storage */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S178 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S180 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S182 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a9; /* index */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S183 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a6; /* left_symbol */
	T0* a8; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S184 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S186 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S187 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S188 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S189 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a11; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a19; /* special_item_routines */
	T0* a20; /* item_storage */
	T0* a21; /* clashes */
	T0* a23; /* slots */
	T6 a24; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S190 {
	int id;
	T0* a4; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* item_storage */
	T6 a13; /* count */
	T6 a14; /* last_position */
	T6 a15; /* free_slot */
	T6 a17; /* position */
	T6 a18; /* capacity */
	T6 a21; /* slots_position */
	T0* a23; /* equality_tester */
	T0* a24; /* key_equality_tester */
	T0* a25; /* internal_keys */
	T6 a26; /* found_position */
	T0* a27; /* clashes */
	T6 a28; /* modulus */
	T0* a29; /* slots */
	T6 a35; /* clashes_previous_position */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S191 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING] */
struct S192 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T0* a17; /* equality_tester */
	T6 a18; /* count */
	T6 a21; /* slots_position */
	T0* a25; /* special_item_routines */
	T0* a26; /* clashes */
	T0* a28; /* slots */
	T6 a29; /* found_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S193 {
	int id;
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING] */
struct S194 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T6 a19; /* count */
	T6 a20; /* last_position */
	T6 a21; /* free_slot */
	T6 a22; /* capacity */
	T6 a25; /* slots_position */
	T6 a29; /* modulus */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* equality_tester */
	T6 a36; /* found_position */
	T0* a37; /* clashes */
	T0* a38; /* slots */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S195 {
	int id;
	T0* a1; /* offset_vector */
	T6 a3; /* offset_vector_count */
	T6 a4; /* brastart_capacity */
	T0* a5; /* brastart_vector */
	T6 a6; /* brastart_lower */
	T6 a7; /* brastart_count */
	T6 a8; /* eptr_capacity */
	T0* a9; /* eptr_vector */
	T6 a10; /* eptr_lower */
	T6 a11; /* eptr_upper */
	T0* a12; /* byte_code */
	T0* a13; /* pattern */
	T6 a18; /* subexpression_count */
	T6 a19; /* pattern_count */
	T6 a20; /* pattern_position */
	T6 a21; /* code_index */
	T6 a22; /* maxbackrefs */
	T6 a23; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a31; /* error_message */
	T1 a37; /* is_anchored */
	T0* a41; /* character_case_mapping */
	T0* a42; /* word_set */
	T6 a43; /* subject_next_start */
	T6 a44; /* subject_start */
	T6 a45; /* match_count */
	T6 a46; /* subject_end */
	T0* a47; /* subject */
	T6 a49; /* error_code */
	T6 a50; /* error_position */
	T1 a61; /* is_startline */
	T1 a62; /* is_caseless */
	T1 a63; /* is_multiline */
	T1 a64; /* is_dotall */
	T1 a65; /* is_extended */
	T1 a66; /* is_empty_allowed */
	T1 a67; /* is_dollar_endonly */
	T1 a68; /* is_bol */
	T1 a69; /* is_eol */
	T1 a70; /* is_greedy */
	T1 a71; /* is_strict */
	T1 a72; /* is_ichanged */
	T6 a258; /* first_matched_index */
	T6 a260; /* eptr */
	T6 a261; /* offset_top */
	T1 a262; /* is_matching_caseless */
	T1 a263; /* is_matching_multiline */
	T1 a264; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S196 {
	int id;
	T6 a3; /* mode */
	T0* a8; /* name */
	T0* a11; /* string_name */
	T14 a15; /* file_pointer */
	T1 a17; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S197 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S198 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S199 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S200 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S201 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S202 {
	int id;
	T1 a1; /* is_generated */
	T0* a3; /* target_type */
	T0* a4; /* static_feature */
	T0* a6; /* current_feature */
	T6 a7; /* id */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T0* a12; /* result_type_set */
	T0* a14; /* dynamic_type_sets */
	T6 a18; /* builtin_code */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* is_built */
	T0* a23; /* parent_type */
	T1 a49; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S203 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_set */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S204 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* result_type_set */
	T0* a10; /* open_operand_type_sets */
	T0* a11; /* base_type */
	T0* a13; /* base_class */
	T0* a19; /* procedures */
	T0* a21; /* first_type */
	T0* a22; /* other_types */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S205 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* open_operand_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_RESULT */
struct S206 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a5; /* index */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S207 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
	T0* a8; /* result_type_set */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S209 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S214 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type DS_QUICK_SORTER [INTEGER] */
struct S215 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S217 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ARRAY [STRING] */
struct S221 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S222 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* other_types */
	T0* a4; /* internal_other_types */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S223 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* constant */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_indexing */
	T0* a28; /* other_seeds */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T1 a36; /* assertions_checked */
	T1 a37; /* has_assertions_error */
	T0* a38; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S225 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* unique_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_indexing */
	T0* a28; /* other_seeds */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T1 a36; /* assertions_checked */
	T1 a37; /* has_assertions_error */
	T0* a38; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S226 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a11; /* first_seed */
	T1 a21; /* implementation_checked */
	T1 a22; /* has_implementation_error */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* other_seeds */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* frozen_keyword */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T1 a34; /* assertions_checked */
	T1 a35; /* has_assertions_error */
	T0* a36; /* synonym */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S234 {
	int id;
};

/* Struct for type DS_CELL [INTEGER] */
struct S235 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S237 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S238 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S239 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S240 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
	T0* a9; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S241 {
	int id;
	T6 a1; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S242 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S244 {
	int id;
	T0* a2; /* buffered_file_info */
	T0* a5; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S246 {
	int id;
};

/* Struct for type ET_XACE_CLUSTERS */
struct S247 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_CLUSTER */
struct S250 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a17; /* is_override */
	T0* a25; /* parent */
	T1 a36; /* is_implicit */
	T0* a38; /* provider_constraint */
	T0* a39; /* dependant_constraint */
	T1 a40; /* is_mounted */
};

/* Struct for type ET_XACE_OPTIONS */
struct S251 {
	int id;
	T0* a18; /* declared_abstract */
	T0* a20; /* declared_recursive */
	T0* a22; /* declared_read_only */
	T6 a24; /* declared_fst_expansion_factor */
	T6 a25; /* declared_heap_size */
	T6 a26; /* declared_inlining_size */
	T6 a27; /* declared_stack_size */
	T0* a28; /* declared_address_expression */
	T0* a29; /* declared_arguments */
	T0* a30; /* declared_array_optimization */
	T0* a31; /* declared_assembly */
	T0* a32; /* declared_assertion */
	T0* a33; /* declared_callback */
	T0* a34; /* declared_case_insensitive */
	T0* a35; /* declared_check_vape */
	T0* a36; /* declared_clean */
	T0* a37; /* declared_cls_compliant */
	T0* a38; /* declared_component */
	T0* a39; /* declared_console_application */
	T0* a40; /* declared_create_keyword_extension */
	T0* a41; /* declared_culture */
	T0* a42; /* declared_c_compiler_options */
	T0* a43; /* declared_dead_code_removal */
	T0* a44; /* declared_debug_option */
	T0* a45; /* declared_debug_tag */
	T0* a46; /* declared_debugger */
	T0* a47; /* declared_document */
	T0* a48; /* declared_dotnet_naming_convention */
	T0* a49; /* declared_dynamic_runtime */
	T0* a50; /* declared_exception_trace */
	T0* a51; /* declared_exclude */
	T0* a52; /* declared_export_option */
	T0* a53; /* declared_finalize_option */
	T0* a54; /* declared_flat_fst_optimization */
	T0* a55; /* declared_fst_optimization */
	T0* a56; /* declared_garbage_collector */
	T0* a57; /* declared_gc_info */
	T0* a58; /* declared_header */
	T0* a59; /* declared_high_memory_compiler */
	T0* a60; /* declared_il_verifiable */
	T0* a61; /* declared_include */
	T0* a62; /* declared_inlining */
	T0* a63; /* declared_jumps_optimization */
	T0* a64; /* declared_layout */
	T0* a65; /* declared_layout_optimization */
	T0* a66; /* declared_leaves_optimization */
	T0* a67; /* declared_line_generation */
	T0* a68; /* declared_link */
	T0* a69; /* declared_linker */
	T0* a70; /* declared_linux_fpu_double_precision */
	T0* a71; /* declared_manifest_string_trace */
	T0* a72; /* declared_map */
	T0* a73; /* declared_metadata_cache_path */
	T0* a74; /* declared_msil_assembly_compatibility */
	T0* a75; /* declared_msil_clr_version */
	T0* a76; /* declared_msil_generation */
	T0* a77; /* declared_msil_generation_version */
	T0* a78; /* declared_multithreaded */
	T0* a79; /* declared_namespace */
	T0* a80; /* declared_no_default_lib */
	T0* a81; /* declared_override_cluster */
	T0* a82; /* declared_portable_code_generation */
	T0* a83; /* declared_precompiled */
	T0* a84; /* declared_prefix_option */
	T0* a85; /* declared_profile */
	T0* a86; /* declared_public_key_token */
	T0* a87; /* declared_reloads_optimization */
	T0* a88; /* declared_shared_library_definition */
	T0* a89; /* declared_split */
	T0* a90; /* declared_storable_filename */
	T0* a91; /* declared_strip_option */
	T0* a92; /* declared_target */
	T0* a93; /* declared_trace */
	T0* a94; /* declared_use_cluster_name_as_namespace */
	T0* a95; /* declared_use_full_cluster_name_as_namespace */
	T0* a96; /* declared_verbose */
	T0* a97; /* declared_version */
	T0* a98; /* declared_visible_filename */
	T0* a99; /* declared_warning */
	T0* a100; /* declared_wedit */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S252 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library */
	T0* a3; /* position */
	T0* a4; /* library_prefix */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S253 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S254 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S255 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S256 {
	int id;
	T1 a1; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
	T0* a7; /* container */
	T1 a8; /* before */
};

/* Struct for type ET_XACE_LIBRARY */
struct S258 {
	int id;
	T0* a1; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* options */
	T0* a5; /* clusters */
	T0* a6; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER, STRING] */
struct S259 {
	int id;
	T6 a4; /* found_position */
	T0* a8; /* item_storage */
	T0* a9; /* key_storage */
	T6 a10; /* position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T6 a19; /* count */
	T6 a20; /* capacity */
	T0* a22; /* equality_tester */
	T6 a23; /* modulus */
	T6 a24; /* slots_position */
	T6 a25; /* clashes_previous_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a30; /* internal_cursor */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S262 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S263 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S264 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S265 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S266 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S267 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S268 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S270 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S271 {
	int id;
	T0* a1; /* named_features */
	T0* a3; /* queries */
	T0* a4; /* procedures */
	T0* a5; /* aliased_features */
	T0* a7; /* clients_list */
	T0* a8; /* client_names */
	T0* a10; /* feature_adaptation_resolver */
	T0* a11; /* dotnet_feature_adaptation_resolver */
	T0* a12; /* identifier_type_resolver */
	T0* a13; /* anchored_type_checker */
	T0* a14; /* signature_checker */
	T0* a15; /* parent_checker */
	T0* a16; /* formal_parameter_checker */
	T0* a17; /* precursor_checker */
	T0* a18; /* universe */
	T0* a19; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S272 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S273 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* supplier_builder */
	T0* a3; /* current_class */
	T0* a4; /* no_suppliers */
	T1 a5; /* flat_mode */
	T1 a6; /* flat_dbc_mode */
	T1 a7; /* suppliers_enabled */
	T0* a8; /* universe */
	T1 a12; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S274 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S275 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S279 {
	int id;
	T6 a3; /* year */
	T6 a4; /* month */
	T6 a5; /* day */
	T6 a6; /* hour */
	T6 a7; /* minute */
	T6 a8; /* second */
	T6 a9; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S280 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a10; /* last_text_count */
	T6 a11; /* last_literal_start */
	T0* a12; /* filename */
	T0* a13; /* universe */
	T0* a14; /* ast_factory */
	T0* a15; /* error_handler */
	T0* a21; /* input_buffer */
	T0* a23; /* last_classname */
	T6 a25; /* yy_start_state */
	T6 a26; /* yy_line */
	T6 a27; /* yy_column */
	T6 a28; /* yy_position */
	T6 a29; /* line */
	T6 a30; /* column */
	T6 a31; /* position */
	T0* a33; /* yy_state_stack */
	T6 a35; /* yy_end */
	T6 a36; /* yy_start */
	T6 a37; /* last_token */
	T1 a44; /* yy_more_flag */
	T6 a45; /* yy_more_len */
	T6 a46; /* yy_state_count */
	T0* a47; /* yy_ec */
	T0* a48; /* yy_content_area */
	T0* a49; /* yy_content */
	T0* a50; /* yy_accept */
	T6 a51; /* yy_last_accepting_state */
	T6 a52; /* yy_last_accepting_cpos */
	T0* a53; /* yy_chk */
	T0* a54; /* yy_base */
	T0* a55; /* yy_def */
	T0* a56; /* yy_meta */
	T0* a58; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a64; /* yy_looking_for_trail_begin */
	T6 a66; /* yy_full_match */
	T6 a67; /* yy_full_state */
	T6 a68; /* yy_full_lp */
	T1 a74; /* yy_rejected */
	T1 a75; /* class_keyword_found */
	T6 a76; /* last_literal_end */
	T0* a77; /* verbatim_marker */
	T0* a78; /* verbatim_open_white_characters */
	T0* a79; /* verbatim_close_white_characters */
	T6 a88; /* ms_column */
	T6 a89; /* ms_line */
	T6 a93; /* last_break_end */
	T6 a94; /* last_comment_end */
};

/* Struct for type ET_NONE_GROUP */
struct S281 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_PARENT */
struct S282 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a9; /* end_keyword */
};

/* Struct for type ET_TUPLE_TYPE */
struct S283 {
	int id;
	T0* a1; /* tuple_keyword */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_RENAME_LIST */
struct S284 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S285 {
	int id;
	T0* a1; /* export_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S286 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S287 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S289 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ARRAY [INTEGER] */
struct S290 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S291 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_PROCEDURE */
struct S292 {
	int id;
	T0* a5; /* arguments */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* is_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T0* a13; /* implementation_class */
	T0* a14; /* implementation_feature */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* locals */
	T0* a18; /* compound */
	T0* a19; /* postconditions */
	T0* a20; /* rescue_clause */
	T0* a21; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* assertions_checked */
	T1 a41; /* has_assertions_error */
	T0* a42; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER] */
struct S294 {
	int id;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S297 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a6; /* arguments */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a11; /* hash_code */
	T0* a12; /* is_keyword */
	T0* a13; /* end_keyword */
	T0* a14; /* clients */
	T0* a15; /* implementation_class */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a26; /* implementation_checked */
	T1 a27; /* has_implementation_error */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* semicolon */
	T0* a33; /* feature_clause */
	T0* a34; /* other_seeds */
	T0* a35; /* frozen_keyword */
	T6 a36; /* id */
	T6 a37; /* version */
	T1 a38; /* assertions_checked */
	T1 a39; /* has_assertions_error */
	T0* a40; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S298 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a7; /* other_types */
	T0* a8; /* targets */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING] */
struct S299 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S300 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S302 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S303 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S304 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S305 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S306 {
	int id;
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S307 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a5; /* element_local_part */
	T1 a9; /* forward_xmlns */
	T0* a11; /* attributes_prefix */
	T0* a13; /* attributes_local_part */
	T0* a14; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S308 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S309 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S310 {
	int id;
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S311 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
struct S314 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S316 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY] */
struct S317 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
struct S318 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S319 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a14; /* character_entity */
	T0* a16; /* input_stream */
	T0* a17; /* input_resolver */
	T1 a25; /* yy_more_flag */
	T6 a26; /* yy_more_len */
	T6 a27; /* yy_end */
	T6 a28; /* yy_start */
	T6 a29; /* yy_line */
	T6 a30; /* yy_column */
	T6 a31; /* yy_position */
	T0* a32; /* input_buffer */
	T0* a34; /* yy_state_stack */
	T6 a35; /* yy_state_count */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_content_area */
	T0* a38; /* yy_content */
	T0* a39; /* yy_accept */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T0* a42; /* yy_chk */
	T0* a43; /* yy_base */
	T0* a44; /* yy_def */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_nxt */
	T6 a49; /* yy_lp */
	T0* a50; /* yy_acclist */
	T6 a53; /* yy_looking_for_trail_begin */
	T6 a55; /* yy_full_match */
	T6 a56; /* yy_full_state */
	T6 a57; /* yy_full_lp */
	T1 a63; /* yy_rejected */
	T0* a65; /* last_error */
	T0* a66; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S320 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S322 {
	int id;
	T0* a2; /* first_cell */
	T0* a3; /* internal_cursor */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S323 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S324 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* capacity */
	T6 a14; /* slots_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* internal_keys */
	T6 a20; /* modulus */
	T6 a21; /* clashes_previous_position */
	T0* a23; /* internal_cursor */
	T6 a25; /* found_position */
	T0* a26; /* key_storage */
	T0* a27; /* clashes */
	T0* a28; /* slots */
	T0* a31; /* equality_tester */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S326 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S327 {
	int id;
	T1 a2; /* use_namespaces */
	T6 a3; /* count */
	T0* a4; /* first */
	T0* a5; /* second */
	T0* a6; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S328 {
	int id;
	T0* a1; /* version */
	T0* a3; /* encoding */
	T1 a5; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S329 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S330 {
	int id;
	T6 a2; /* position */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a14; /* modulus */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* internal_cursor */
	T6 a22; /* found_position */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a26; /* item_storage */
	T0* a27; /* special_item_routines */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S331 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S332 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S333 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING] */
struct S334 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S335 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S336 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S337 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S338 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S339 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S340 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S341 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S342 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S343 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S344 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S345 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S347 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S349 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S350 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S351 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S352 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
struct S353 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S354 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T0* a35; /* yy_nxt */
	T0* a37; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a41; /* yy_def */
	T0* a43; /* yy_ec */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_accept */
	T0* a49; /* yy_content */
	T0* a50; /* yy_content_area */
	T6 a57; /* last_token */
	T0* a58; /* last_value */
	T0* a64; /* input_filter */
	T0* a67; /* input_stream */
	T0* a68; /* input_resolver */
	T0* a88; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S355 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S357 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S358 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a15; /* character_entity */
	T0* a17; /* input_stream */
	T0* a18; /* input_resolver */
	T1 a20; /* decl_start_sent */
	T1 a22; /* decl_end_sent */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_end */
	T6 a33; /* yy_start */
	T6 a34; /* yy_line */
	T6 a35; /* yy_column */
	T6 a36; /* yy_position */
	T0* a37; /* input_buffer */
	T0* a39; /* yy_state_stack */
	T6 a40; /* yy_state_count */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_content_area */
	T0* a43; /* yy_content */
	T0* a44; /* yy_accept */
	T6 a45; /* yy_last_accepting_state */
	T6 a46; /* yy_last_accepting_cpos */
	T0* a47; /* yy_chk */
	T0* a48; /* yy_base */
	T0* a49; /* yy_def */
	T0* a50; /* yy_meta */
	T0* a52; /* yy_nxt */
	T6 a54; /* yy_lp */
	T0* a55; /* yy_acclist */
	T6 a58; /* yy_looking_for_trail_begin */
	T6 a60; /* yy_full_match */
	T6 a61; /* yy_full_state */
	T6 a62; /* yy_full_lp */
	T1 a68; /* yy_rejected */
	T0* a70; /* last_error */
	T0* a71; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S360 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a39; /* yy_chk */
	T0* a41; /* yy_base */
	T0* a43; /* yy_def */
	T0* a45; /* yy_ec */
	T0* a47; /* yy_meta */
	T0* a49; /* yy_accept */
	T0* a51; /* yy_content */
	T0* a52; /* yy_content_area */
	T6 a58; /* last_token */
	T0* a59; /* last_value */
	T0* a65; /* input_filter */
	T0* a69; /* input_stream */
	T0* a70; /* input_resolver */
	T0* a91; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
struct S361 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER] */
struct S362 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING] */
struct S363 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [STRING] */
struct S364 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER] */
struct S365 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S367 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S369 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S371 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S372 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S373 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S374 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S375 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S376 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S377 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S378 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S379 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S380 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S381 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S383 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S385 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S386 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S387 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S388 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S389 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S390 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S391 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S392 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* left_bracket */
	T0* a7; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S393 {
	int id;
	T14 a1; /* item */
	T6 a3; /* count */
	T1 a4; /* is_shared */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER] */
struct S394 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S395 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S396 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S397 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S398 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S399 {
	int id;
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S400 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S401 {
	int id;
	T6 a1; /* count */
	T0* a4; /* internal_cursor */
	T0* a9; /* item_storage */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a13; /* last_position */
	T6 a14; /* free_slot */
	T6 a16; /* position */
	T6 a18; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a31; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S403 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type KL_DIRECTORY */
struct S405 {
	int id;
	T1 a2; /* end_of_input */
	T0* a3; /* last_entry */
	T6 a5; /* mode */
	T0* a7; /* name */
	T0* a9; /* string_name */
	T0* a10; /* entry_buffer */
	T0* a13; /* lastentry */
	T14 a16; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S406 {
	int id;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S407 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S409 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S410 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S411 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a3; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S413 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S414 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S415 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S416 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S417 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S418 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a9; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S419 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S420 {
	int id;
};

/* Struct for type ET_SYMBOL */
struct S421 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S422 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S423 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S424 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S425 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S426 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S428 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S430 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S431 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S433 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S434 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S436 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S437 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S438 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S439 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S440 {
	int id;
	T2 a1; /* code */
	T6 a3; /* hash_code */
	T6 a9; /* compressed_position */
	T0* a10; /* free_operator_name */
	T6 a16; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S441 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S442 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S444 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S445 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S446 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S447 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S448 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S449 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S450 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S452 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S453 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S454 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S455 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S456 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S457 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S458 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S459 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a15; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S460 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S461 {
	int id;
};

/* Struct for type ET_VOID */
struct S462 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S463 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S464 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S465 {
	int id;
	T2 a1; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S466 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S467 {
	int id;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S468 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S469 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S470 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S471 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a10; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S472 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S473 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S474 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* type */
	T0* a22; /* cast_type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S475 {
	int id;
	T0* a1; /* value */
	T6 a6; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* cast_type */
	T0* a25; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S476 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a11; /* compressed_position */
	T6 a13; /* index */
	T0* a26; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S477 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a7; /* compressed_position */
	T6 a9; /* index */
	T0* a22; /* cast_type */
	T0* a26; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S478 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S479 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S480 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a31; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S481 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S482 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S484 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S485 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S486 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S487 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S489 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S491 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S492 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S493 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S494 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S495 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S497 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S498 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S499 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a4; /* storage */
	T6 a5; /* count */
	T1 a7; /* has_assertions_error */
	T1 a8; /* assertions_checked */
	T1 a19; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S500 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S501 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S503 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S505 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S507 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S511 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S512 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S514 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S515 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S516 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S517 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S518 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S519 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S520 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S521 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S522 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S523 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S524 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S525 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S527 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S528 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S530 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S531 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S532 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a3; /* constraint */
	T0* a4; /* creation_procedures */
	T0* a5; /* type_mark */
	T0* a6; /* name */
	T6 a7; /* index */
	T0* a10; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S533 {
	int id;
	T0* a1; /* create_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S534 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S535 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S537 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S538 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S539 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S540 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S541 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S543 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S544 {
	int id;
	T0* a2; /* constant */
	T6 a3; /* size */
	T0* a5; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S545 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a3; /* name */
	T6 a4; /* size */
	T0* a28; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S546 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S548 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S550 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S551 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S552 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S553 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S554 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S555 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S556 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S557 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S558 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S559 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S560 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S561 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S562 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S563 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S565 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S566 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S567 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S568 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a4; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S569 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S570 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S572 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S573 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S574 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S575 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S576 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S577 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S579 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S580 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S582 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S583 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S584 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S585 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S586 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S587 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a3; /* clients */
	T0* a4; /* storage */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S588 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S589 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S590 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S592 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S594 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S595 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S597 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S598 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S599 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S600 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a5; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S601 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S602 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S604 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S605 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S606 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S607 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S608 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S609 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S610 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S613 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S614 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S617 {
	int id;
	T0* a1; /* require_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S618 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S619 {
	int id;
	T0* a1; /* local_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S620 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S621 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S622 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S623 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S624 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S625 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* is_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* assertions_checked */
	T1 a47; /* has_assertions_error */
	T0* a48; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S626 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S627 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* is_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* assertions_checked */
	T1 a47; /* has_assertions_error */
	T0* a48; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S628 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a6; /* arguments */
	T0* a7; /* declared_type */
	T0* a8; /* is_keyword */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T0* a11; /* implementation_class */
	T0* a12; /* implementation_feature */
	T0* a13; /* assigner */
	T0* a14; /* obsolete_message */
	T0* a15; /* preconditions */
	T0* a16; /* postconditions */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a36; /* first_precursor */
	T0* a37; /* other_precursors */
	T0* a38; /* semicolon */
	T0* a39; /* feature_clause */
	T0* a40; /* other_seeds */
	T0* a41; /* frozen_keyword */
	T6 a42; /* id */
	T6 a43; /* version */
	T1 a44; /* assertions_checked */
	T1 a45; /* has_assertions_error */
	T0* a46; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S631 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S632 {
	int id;
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S633 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* is_keyword */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* assertions_checked */
	T1 a41; /* has_assertions_error */
	T0* a42; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S634 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* is_keyword */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T0* a11; /* implementation_feature */
	T6 a12; /* builtin_code */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a20; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a35; /* semicolon */
	T0* a36; /* feature_clause */
	T0* a37; /* other_seeds */
	T0* a38; /* frozen_keyword */
	T6 a39; /* id */
	T6 a40; /* version */
	T1 a41; /* assertions_checked */
	T1 a42; /* has_assertions_error */
	T0* a43; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S635 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S636 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S637 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S638 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a15; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S639 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a17; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S640 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a18; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S641 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a38; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S642 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S643 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a56; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S644 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S645 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S646 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S647 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a16; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S648 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S650 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S651 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S653 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S654 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S655 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S657 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S658 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S659 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S661 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S662 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S663 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S664 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S665 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S666 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S667 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S668 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S669 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S670 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a3; /* tag */
	T0* a4; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S671 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S672 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S673 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S674 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S675 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S676 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S678 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S679 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S681 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* name */
	T6 a26; /* seed */
	T1 a28; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S682 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S683 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S685 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S686 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S687 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S689 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S690 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S691 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S692 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S693 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S694 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S695 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a5; /* elseif_parts */
	T0* a6; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S696 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S697 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S698 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S700 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a6; /* invariant_part */
	T0* a7; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S701 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S702 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S703 {
	int id;
	T0* a1; /* check_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S705 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a6; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S706 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S707 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S709 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S710 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S711 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S712 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S713 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S714 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S715 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S716 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S717 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S718 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S719 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S720 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S721 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S722 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S723 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S724 {
	int id;
	T0* a1; /* when_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S725 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S726 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S727 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S729 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S731 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S732 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S734 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S735 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S736 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S737 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S738 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S739 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S740 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S741 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S742 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S743 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S745 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S746 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S747 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S749 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S750 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S751 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S752 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S753 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T6 a6; /* index */
	T0* a8; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S754 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S755 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S756 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S757 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S758 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S759 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S760 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* current_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S761 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* result_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S762 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S763 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S764 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S766 {
	int id;
	T0* a1; /* and_keyword */
	T0* a3; /* then_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S767 {
	int id;
	T0* a1; /* or_keyword */
	T0* a3; /* else_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S768 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S769 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S770 {
	int id;
	T0* a1; /* old_keyword */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type ET_CALL_AGENT */
struct S771 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
	T0* a9; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S772 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S774 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S775 {
	int id;
	T0* a1; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S776 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S777 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S778 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
	T6 a8; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S779 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S780 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S781 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S782 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S783 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S784 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S785 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S786 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S787 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S788 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S789 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S790 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S791 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S792 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S793 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S794 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S795 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S796 {
	int id;
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S797 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S798 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S799 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S800 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S801 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S802 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S803 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S804 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S806 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S807 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S808 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S809 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T0* a5; /* question_mark */
	T6 a8; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S811 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S814 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S815 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S818 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S819 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER] */
struct S820 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S822 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
struct S824 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S826 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S827 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S828 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S829 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S830 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S831 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S833 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S834 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S835 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S836 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S837 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S839 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S840 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S841 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S843 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S845 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S846 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S847 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING] */
struct S848 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
struct S849 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
struct S851 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S854 {
	int id;
	T6 a1; /* count */
	T0* a5; /* byte_code */
	T6 a6; /* capacity */
	T6 a8; /* character_sets_count */
	T6 a9; /* character_sets_capacity */
	T0* a10; /* character_sets */
};

/* Struct for type RX_CASE_MAPPING */
struct S855 {
	int id;
	T0* a2; /* flip_table */
	T0* a3; /* lower_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S856 {
	int id;
	T0* a2; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S858 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S859 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S862 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S863 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S864 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S865 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S866 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S867 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S868 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S869 {
	int id;
	T11 a3; /* part1 */
	T6 a4; /* sign */
	T11 a5; /* part2 */
	T6 a6; /* last_state */
	T1 a7; /* internal_overflowed */
	T0* a9; /* leading_separators */
	T0* a10; /* trailing_separators */
	T1 a11; /* leading_separators_acceptable */
	T1 a12; /* trailing_separators_acceptable */
	T6 a13; /* conversion_type */
};

/* Struct for type C_STRING */
struct S872 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S873 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S874 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S875 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a6; /* default_template */
	T0* a9; /* parameters */
	T0* a11; /* current_class */
	T0* a12; /* class_impl */
	T0* a13; /* position */
	T0* a15; /* code */
	T0* a18; /* etl_code */
	T1 a59; /* ise_fatal */
	T1 a60; /* se_fatal */
	T1 a61; /* ve_fatal */
	T1 a62; /* ge_fatal */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S876 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S877 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a11; /* filename */
	T0* a12; /* position */
	T1 a13; /* ise_reported */
	T1 a14; /* ise_fatal */
	T1 a15; /* se_reported */
	T1 a16; /* se_fatal */
	T1 a17; /* ve_reported */
	T1 a18; /* ve_fatal */
	T1 a19; /* ge_reported */
	T1 a20; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S878 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S879 {
	int id;
	T6 a2; /* count */
	T0* a3; /* internal_cursor */
	T0* a5; /* first_cell */
	T0* a6; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S880 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S881 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S882 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S883 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S884 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S885 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S886 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S887 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S888 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S889 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* agent_type */
	T0* a8; /* other_types */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S891 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S892 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S893 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S894 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S895 {
	int id;
	T6 a2; /* count */
	T0* a6; /* area */
	T6 a22; /* byte_count */
	T6 a35; /* internal_hash_code */
	T6 a39; /* last_byte_index_input */
	T6 a40; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S896 {
	int id;
	T0* a1; /* last_string */
	T6 a12; /* encoding */
	T0* a19; /* utf_queue */
	T0* a20; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S897 {
	int id;
	T0* a3; /* as_special */
	T0* a6; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S898 {
	int id;
};

/* Struct for type KL_STDIN_FILE */
struct S899 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a5; /* character_buffer */
	T14 a10; /* file_pointer */
	T6 a15; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S900 {
	int id;
	T0* a2; /* filename */
	T6 a10; /* compressed_position */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S902 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S904 {
	int id;
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER] */
struct S906 {
	int id;
};

/* Struct for type ARRAY [ET_TYPE] */
struct S907 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER]] */
struct S909 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S910 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S911 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S912 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S913 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S914 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S916 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type UT_TRISTATE */
struct S917 {
	int id;
	T2 a4; /* value */
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S918 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S919 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S920 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
struct S921 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
struct S923 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S925 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a36; /* slots_position */
	T6 a37; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S926 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S928 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a26; /* slots_position */
	T6 a28; /* count */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S929 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S931 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S932 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a18; /* count */
	T6 a29; /* slots_position */
	T6 a33; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S933 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* rename_table */
	T0* a5; /* export_table */
	T0* a6; /* undefine_table */
	T0* a7; /* redefine_table */
	T0* a8; /* select_table */
	T0* a9; /* replicable_features */
	T1 a10; /* has_fatal_error */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S934 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* dotnet_features */
	T0* a4; /* other_dotnet_features */
	T1 a5; /* has_fatal_error */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S935 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S936 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S937 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* parent_context */
	T1 a4; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S938 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S939 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S940 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* current_feature */
	T1 a5; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S941 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S942 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a7; /* current_feature_impl */
	T0* a8; /* current_class_impl */
	T0* a9; /* enclosing_inline_agents */
	T0* a10; /* overloaded_procedures */
	T0* a11; /* overloaded_queries */
	T0* a12; /* best_overloaded_features */
	T0* a13; /* used_contexts */
	T0* a14; /* unused_contexts */
	T0* a15; /* current_context */
	T1 a17; /* has_fatal_error */
	T1 a18; /* in_assertion */
	T1 a19; /* in_invariant */
	T1 a21; /* in_precondition */
	T1 a22; /* in_postcondition */
	T0* a23; /* current_target_type */
	T1 a24; /* in_precursor */
	T0* a25; /* current_inline_agent */
	T1 a26; /* in_rescue */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S943 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a5; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S944 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* sorted_items */
	T0* a7; /* cycle */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
struct S945 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S946 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S947 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* universe */
	T1 a5; /* has_fatal_error */
	T0* a7; /* current_formal */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S952 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S953 {
	int id;
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S954 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S955 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S956 {
	int id;
	T0* a5; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING] */
struct S958 {
	int id;
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S959 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY] */
struct S960 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S961 {
	int id;
	T6 a5; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER] */
struct S962 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S963 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S964 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S965 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S966 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S967 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S969 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S971 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S972 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S973 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S974 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S975 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S976 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING] */
struct S977 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING] */
struct S978 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S979 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S980 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S981 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S982 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S983 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S984 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S985 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S986 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S987 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S989 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S990 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S991 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S992 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S993 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S994 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S995 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S996 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S997 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S998 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S999 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1000 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1001 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1002 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1003 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1004 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1006 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1007 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1008 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1009 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1010 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1011 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1012 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1013 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1014 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1015 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1016 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1017 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1018 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1019 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1020 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1021 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1022 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1023 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1024 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1025 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1026 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1027 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1029 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1030 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1031 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1032 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1033 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1034 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1035 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1036 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1037 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1039 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1040 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1041 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1042 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1043 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1044 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1045 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1047 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S1052 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1053 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1054 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1055 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1056 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1057 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1058 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1059 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1060 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1061 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1062 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1063 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1064 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1069 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1070 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1071 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1074 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1075 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1076 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1077 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1078 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1079 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1080 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1081 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1082 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1100 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1113 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1114 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* index */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1119 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1123 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1129 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S1130 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1131 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1132 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1133 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1134 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1135 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
struct S1137 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1139 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1140 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1144 {
	int id;
	T0* a7; /* integer_overflow_state1 */
	T0* a8; /* integer_overflow_state2 */
	T0* a10; /* natural_overflow_state1 */
	T0* a11; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1145 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1146 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER] */
struct S1149 {
	int id;
	T6 a1; /* count */
	T0* a3; /* first_cell */
	T0* a5; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1150 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1151 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1152 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1153 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
struct S1154 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1156 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1158 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1159 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1161 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1162 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1164 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S1165 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1166 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1167 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1168 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1169 {
	int id;
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a11; /* internal_cursor */
	T0* a14; /* item_storage */
	T0* a16; /* key_equality_tester */
	T0* a17; /* internal_keys */
	T6 a18; /* position */
	T6 a19; /* last_position */
	T6 a20; /* free_slot */
	T6 a22; /* modulus */
	T6 a29; /* slots_position */
	T0* a30; /* equality_tester */
	T6 a31; /* clashes_previous_position */
	T0* a34; /* key_storage */
	T0* a35; /* clashes */
	T0* a36; /* slots */
	T0* a38; /* special_item_routines */
	T0* a39; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1170 {
	int id;
	T6 a5; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a10; /* internal_cursor */
	T0* a15; /* item_storage */
	T6 a16; /* modulus */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T0* a22; /* equality_tester */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1171 {
	int id;
	T6 a1; /* count */
	T6 a8; /* capacity */
	T6 a9; /* found_position */
	T0* a13; /* internal_cursor */
	T0* a17; /* key_storage */
	T0* a18; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* position */
	T6 a23; /* last_position */
	T6 a24; /* free_slot */
	T6 a26; /* modulus */
	T0* a32; /* equality_tester */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
	T0* a38; /* clashes */
	T0* a39; /* slots */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1172 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T6 a17; /* count */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T6 a21; /* capacity */
	T0* a27; /* equality_tester */
	T0* a28; /* key_equality_tester */
	T0* a29; /* internal_keys */
	T0* a34; /* clashes */
	T6 a35; /* modulus */
	T0* a36; /* slots */
	T6 a37; /* slots_position */
	T6 a38; /* clashes_previous_position */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1173 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1174 {
	int id;
	T6 a1; /* capacity */
	T6 a4; /* found_position */
	T0* a7; /* item_storage */
	T6 a8; /* modulus */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* internal_cursor */
	T0* a15; /* equality_tester */
	T6 a16; /* count */
	T6 a23; /* slots_position */
	T0* a24; /* special_item_routines */
	T0* a25; /* clashes */
	T0* a27; /* slots */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1176 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T6 a13; /* capacity */
	T6 a16; /* slots_position */
	T0* a18; /* equality_tester */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1177 {
	int id;
	T0* a2; /* cycle */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* items */
	T0* a6; /* sorted_items */
	T0* a7; /* indexes */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1178 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* next */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1179 {
	int id;
	T6 a3; /* count */
	T0* a6; /* storage */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
	T0* a9; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_CLASS] */
struct S1180 {
	int id;
	T6 a2; /* position */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a8; /* modulus */
	T6 a14; /* capacity */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* equality_tester */
	T0* a20; /* internal_keys */
	T0* a21; /* internal_cursor */
	T6 a23; /* found_position */
	T0* a24; /* item_storage */
	T0* a25; /* key_storage */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a29; /* special_item_routines */
	T0* a30; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
struct S1181 {
	int id;
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
	T6 a9; /* count */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
struct S1183 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1185 {
	int id;
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1186 {
	int id;
	T0* a3; /* cycle */
	T0* a4; /* sorted_items */
	T0* a5; /* items */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* indexes */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1187 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
struct S1189 {
	int id;
	T6 a2; /* count */
	T0* a4; /* last_cell */
	T0* a5; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
struct S1190 {
	int id;
	T1 a1; /* before */
	T0* a3; /* current_cell */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
	T1 a6; /* after */
};

/* Struct for type DS_LINKABLE [INTEGER] */
struct S1192 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S1193 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1194 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1195 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1196 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1199 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1200 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1206 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1207 {
	int id;
	T0* a2; /* deltas */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1209 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T0* a7; /* equality_tester */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T6 a21; /* free_slot */
	T0* a22; /* internal_cursor */
	T6 a24; /* found_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a28; /* special_item_routines */
};

/* Struct for type XM_COMMENT */
struct S1210 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1211 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1212 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1213 {
	int id;
	T0* a2; /* uri */
	T0* a4; /* ns_prefix */
};

/* Struct for type ET_FEATURE_IDS */
struct S1214 {
	int id;
	T6 a1; /* count */
	T0* a4; /* feature_ids */
};

/* Struct for type ET_FEATURE_LIST */
struct S1215 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1216 {
	int id;
	T0* a3; /* next */
	T0* a4; /* precursor_feature */
	T0* a5; /* parent */
	T0* a6; /* new_name */
	T0* a7; /* undefine_name */
	T0* a8; /* redefine_name */
	T0* a9; /* select_name */
	T0* a10; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1217 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1218 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1219 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1225 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1226 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1229 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1230 {
	int id;
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1233 {
	int id;
	T6 a3; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1234 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1236 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1237 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1238 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1240 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1241 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1242 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1243 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1244 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1245 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type SPECIAL [ARRAY [INTEGER]] */
struct S1246 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
struct S1247 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1248 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_64] */
struct S1249 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKABLE [CHARACTER] */
struct S1250 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1252 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1253 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1254 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1255 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1256 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1257 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1259 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1261 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1262 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1263 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1264 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1266 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1267 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1269 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1271 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1272 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1273 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1274 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1275 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1277 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1279 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1280 {
	int id;
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1282 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1283 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
struct S1284 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
struct S1286 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1287 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
struct S1288 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
struct S1289 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1291 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
struct S1292 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
struct S1293 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1295 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1296 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1297 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1305 {
	int id;
	T0* a2; /* default_output */
};

/* Struct for type PLATFORM */
struct S1306 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1308 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1309 {
	int id;
	T0* a1; /* element */
	T0* a3; /* xml_attribute */
	T0* a5; /* composite */
	T0* a6; /* document */
	T0* a7; /* character_data */
	T0* a8; /* processing_instruction */
	T0* a9; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1316 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1317 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1318 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1321 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1325 {
	int id;
	T1 a1; /* end_of_input */
	T2 a3; /* last_character */
	T0* a6; /* string */
	T6 a7; /* location */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1328 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1337 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1338 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1342 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1343 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1344 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1345 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1346 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1347 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1348 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1349 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1350 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1351 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1352 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1353 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1354 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1355 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1356 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1357 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1358 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1361 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1362 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1363 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1364 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1365 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1366 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1367 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1368 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1370 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1372 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
struct S1373 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1374 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
struct S1377 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1379 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S1380 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1387 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1388 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1389 {
	int id;
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1390 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1391 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1392 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1393 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1398 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1400 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type CONSOLE */
struct S1401 {
	int id;
	T14 a1; /* file_pointer */
	T0* a3; /* name */
	T6 a4; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1402 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1405 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


extern T0* gems(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1648(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1637T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1646(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1649(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T63x8434(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T143x11342T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T143x11328(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T143x11324T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T143x11321(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T143x11341T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T143x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T143x11339T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T143x11340T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T143x11330(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T143x11329(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T143x11358(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T143x11337(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T143x11322(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T143x11320(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T143x11351(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T143x11344(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T143x11343(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T143x11331(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T143x11317(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T143x11361(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T143x11323(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T144x5896(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T144x5843T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T144x5848T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T144x5839(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T144x5838(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T144x5900(T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T144x5785(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T144x5846T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T144x5882T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T144x5887T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T144x5957T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T144x5960T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T144x5935T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T144x5958T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T144x5963T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T144x5966T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T144x5964T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T144x5965T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T144x5961T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T144x5945T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T144x5938T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T144x5779(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T144x5930T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T144x5786(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T144x5962T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T144x5953T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T144x5956T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T144x5954T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T144x5934T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T144x5955T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T144x5936T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T144x5940T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T144x5939T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T144x5950T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T144x5865T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T144x5789(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T144x5867T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.first_seed */
extern T6 T147x11463(T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T147x11383(T0* C);
/* Call to ET_QUERY.name */
extern T0* T147x11460(T0* C);
/* Call to ET_QUERY.type */
extern T0* T147x11461(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T147x11458T6(T0* C, T6 a1);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T147x11388(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T147x11384(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T147x11387(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T147x23(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T147x11462(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T147x11423T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T147x11422(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T147x11412(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T147x11540(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T147x11414(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T147x11413(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T147x11473(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T147x11416(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T147x11417(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T147x11418(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T147x11419(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T147x11409(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T147x11410(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T147x11445T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T149x11423T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T149x11463(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T149x11422(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T149x11460(T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T149x11388(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T149x11384(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T149x11387(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T149x23(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T149x11462(T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T149x11458T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T149x11425T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T149x11409(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T149x11410(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T149x11445T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T154x5866T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T154x5900(T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T154x5844T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.to_text */
extern T0* T154x5896(T0* C);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T154x5891T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T154x5848T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T154x5889T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.last_leaf */
extern T0* T154x5904(T0* C);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T154x5887T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_named_type */
extern T1 T154x5854(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T154x5855(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T154x5878T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T154x5881T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type */
extern T0* T154x5845T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T154x5879T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T154x5883T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T154x5886T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T154x5884T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T154x5885T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T154x5882T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T154x5857T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T154x5930T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T154x5856T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.direct_base_class */
extern T0* T154x5843T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T154x5865T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_type */
extern T0* T154x5849T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T154x5890T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T154x5888T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T154x5846T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T154x5853T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_type */
extern T1 T154x5867T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T154x5874T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T154x5877T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T154x5875T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T154x5876T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_formal_types */
extern T1 T154x5860T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T154x5858T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T154x5870T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T154x5871T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T154x5872T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T154x5868T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T154x5873T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T154x5869T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T155x5939T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T155x5932(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T155x5936T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T155x5940T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T155x5971T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T155x5938T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T155x5969T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T155x5934T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T155x5968T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T155x5963T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T155x5961T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T155x5967T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T155x5966T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T155x5964T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T155x5965T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T155x5970T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T155x5952T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T155x5957T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T155x5953T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T155x5955T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T155x5960T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T155x5956T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T155x5954T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T155x5958T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T155x5950T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T155x5935T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.name */
extern T0* T156x10877(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T156x5903(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T156x5904(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T156x10875T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T156x10879(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T156x10878(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T156x5900(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T156x10884(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T156x10882(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T156x10883(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T156x23(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T156x10915(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T156x10916(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T156x10905(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T156x10885(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T159x5779(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T159x5786(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T159x5843T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T159x5896(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T159x5838(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T159x5839(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T159x5789(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T159x5854(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T159x5758(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T159x5900(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T162x11361(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.other_types */
extern T0* T162x11363(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.first_type */
extern T0* T162x11362(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T162x11366(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T162x11359(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T162x11358(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T162x11365(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T162x11356T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_subset */
extern T1 T162x11360T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T164x5918(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T164x5917(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T164x5919T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T164x5916(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T167x6769(T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T179x11383(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T179x11460(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T179x11458T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T179x11385(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T179x11475(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T179x11395(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T179x11463(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T179x11410(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T179x11384(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T179x11473(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T179x11415(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T179x11462(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T179x11423T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.other_seeds */
extern T0* T179x11464(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T179x11414(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T179x11413(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T179x11461(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T179x11412(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T179x11477(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T179x11476(T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T179x11474(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T179x11397(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T179x11472(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T179x11391(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T179x11390(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T179x11409(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T179x11417(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T179x11418(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T179x11419(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T179x11394(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T179x11446T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T179x11447T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T179x11429T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T179x11457(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T179x11416(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T179x23(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T181x5904(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T181x5900(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T181x10937(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T181x10954(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T185x5904(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T185x5900(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T185x10922(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T208x10948T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T208x10949(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T208x10947(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T210x11006(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T210x11005(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T210x5900(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T211x10879(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T211x10878(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T211x5900(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T211x10884(T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T211x10914(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T211x10912(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T211x10893(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T211x10898(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T211x10899(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T211x10886(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T211x10887(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T211x10909(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T211x10907(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T211x10906(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T211x10904(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T211x10903(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T211x10902(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T211x10901(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T211x10900(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T211x10897(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T211x10896(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T211x10895(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T211x10894(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T211x10892(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T211x10891(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T211x10889(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T211x10888(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T211x10910(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T218x16551(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T218x16548(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T218x16543(T0* C);
/* Call to ET_AGENT.index */
extern T6 T218x10954(T0* C);
/* Call to ET_AGENT.target */
extern T0* T218x16542(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T218x16545(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T218x16544(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T219x16558(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T219x16557(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T219x16556(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T219x16555(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T219x16554(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T219x16553(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T220x10949(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T220x10948T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T220x10947(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T224x5900(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T224x10954(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T224x16586(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T227x10954(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T228x5900(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T228x10954(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T228x10953(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T230x10953(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T230x10954(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T231x5900(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T231x10939(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T236x11477(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T236x11474(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T236x11479(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T236x11473(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T236x11490(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T236x11489(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T236x11486(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T236x11470(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T236x11488(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T236x11472(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T236x11475(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T236x11478(T0* C);
/* Call to ET_POSITION.column */
extern T6 T243x10990(T0* C);
/* Call to ET_POSITION.line */
extern T6 T243x10989(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T243x10991(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T243x10995(T0* C);
/* Call to XM_NODE.parent */
extern T0* T257x9469(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T293x10920(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T293x10919(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T293x5900(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T293x10921T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T319x5068(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T319x18451T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T319x5073(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T319x18462(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T319x5064(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T319x18460(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T435x10954(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T435x19690(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T443x19990(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T443x10954(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T443x19982(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T443x19992(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T443x19981(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T443x5900(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T443x19983(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T529x5927T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T536x5900(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T536x10919(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T547x5925T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T547x5923(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T547x5924(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T591x18110(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T591x18108(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T591x18109(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T603x5899(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T611x5930T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T611x5929(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T612x10923(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T616x5902(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T616x5900(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T629x16597(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T630x16598(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T643x21067T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T643x10896(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T643x10900(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T643x10906(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T643x10907(T0* C);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T643x10878(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T643x5900(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T643x10913T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T643x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T643x10885(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T643x21053(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T643x21052(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T643x10910(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T643x10905(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T677x5912T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T677x5917(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T688x11005(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T688x11004(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T688x11003(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T688x11006(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T688x10954(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T699x10940(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T708x5900(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T708x5904(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T708x5931(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T728x10966(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T728x10964(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T728x10965(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T730x10968(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T733x5900(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T765x5900(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T773x16544(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T773x11489(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T773x16543(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T773x16542(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T773x11490(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T773x11488(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T805x10957(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T810x5900(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T810x10944(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T812x10942(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T816x11490(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T816x11489(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T816x11488(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T901x11096(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T901x11108(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T901x11104T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T901x11105(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T901x11107(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T901x11095(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T901x11093(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T901x11094(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T904x20603(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T904x5857T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T908x5891T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T908x5848T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T908x5889T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T908x5896(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T908x5846T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T908x5890T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T908x5867T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T908x5888T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T908x5883T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T908x5886T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T908x5857T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T908x5882T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T908x5887T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T908x5884T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T908x5885T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T908x5856T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T908x5871T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T908x5872T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T908x5874T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T908x5868T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T908x5877T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T908x5873T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T908x5875T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T908x5860T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T908x5858T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T908x5869T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T908x5878T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T908x5870T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T908x5876T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T908x5881T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T908x5879T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T908x5866T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T908x5844T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T908x5865T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1160x11469(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1160x11456(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1160x11465(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1160x11467(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1160x11454(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1160x11468(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1160x11455(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1160x11453(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1160x11466(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1224x11474(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1228x19717(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1228x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1228x10890(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1235x24407(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1235x24406(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1235x24405(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1235x24408(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.compound */
extern T0* T1303x22226(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.rescue_clause */
extern T0* T1303x22228(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.locals */
extern T0* T1303x11490(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1303x16544(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1304x18261(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1304x18263(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1304x11490(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1304x11462(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1304x11474(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1304x11416(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1334x10954(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1335x11488(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1335x11489(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1336x11489(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1386x5900(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1640(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T70x8564(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T70x8557T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T70x8549T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T70x8551T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T70x8563T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T97x9753T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T98x9809T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T98x9810T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T98x9815(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T98x9808(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T98x9814T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T98x9816T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T98x9813T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T98x9817T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T98x9811T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T98x9812T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T98x9807(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T143x11345T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T143x11346T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T143x11325(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T143x11327T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T143x11367T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T143x11352T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T143x11338T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T144x5842(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T144x5908T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T147x11485(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T147x11482(T0* C);
/* Call to ET_QUERY.reset */
extern void T147x11381(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T147x11440T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T149x11485(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T149x11482(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T149x11381(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T149x11440T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T154x5908T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T154x5842(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T154x5897T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T156x10880T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T156x10876(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T162x11367T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T167x6825T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T167x6939T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T167x6806T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T167x6882T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T167x6820T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T167x6869T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T167x6943T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T167x6924T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T167x6827T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T167x6791T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T167x6807T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T167x6833T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T167x6904T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T167x6888T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T167x6876T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T167x6789T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T167x6788T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T167x6787T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T167x6898T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T167x6899T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T167x6793T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T167x6794T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T167x6818T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T167x6866T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T167x6950T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T167x6871T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T167x6813T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T167x6855T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T167x6916T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T167x6839T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T167x6853T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T167x6913T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T167x6837T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T167x6910T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T167x6944T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T167x6906T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T167x6914T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T167x6804T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T167x6911T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T167x6926T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T167x6847T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T167x6884T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T167x6849T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T167x6938T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T167x6831T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T167x6857T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T167x6919T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T167x6923T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T167x6942T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T167x6799T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T167x6854T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T167x6915T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T167x6834T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T167x6912T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T167x6836T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T167x6909T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T167x6826T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T167x6802T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T167x6801T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T167x6856T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T167x6949T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T167x6953T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T167x6933T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T167x6872T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T167x6952T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T167x6931T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T167x6941T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T167x6956T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T167x6932T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T167x6803T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T167x6957T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T167x6792T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T167x6835T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T167x6838T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T167x6790T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T167x6954T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T167x6817T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T167x6805T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T167x6852T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T167x6811T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T167x6937T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T167x6830T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T167x6873T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T179x11481(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T179x11480(T0* C);
/* Call to ET_FEATURE.process */
extern void T179x5908T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T179x11484(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T179x11483(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T179x11437T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T179x11436T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T179x11428T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T179x11448T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T179x11433T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T179x11439T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T179x11438T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T179x11444(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T179x11443(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T179x11434T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T179x11435T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T179x11430T6(T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T181x5908T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T181x10941(T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T211x10880T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T218x16550T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T218x5908T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.process */
extern void T219x5908T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T224x10955T6(T0* C, T6 a1);
/* Call to ET_OPERAND.set_index */
extern void T227x10955T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T228x5908T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T228x10955T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T228x10952(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T230x5908T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T230x10952(T0* C);
/* Call to XM_NODE.node_set_parent */
extern void T257x9477T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T257x9479T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T293x10918(T0* C);
/* Call to KI_CHARACTER_OUTPUT_STREAM.put_character */
extern void T296x8557T2(T0* C, T2 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T319x18447(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T319x18446T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T319x18452T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T319x18443(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T319x5079(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T319x18445T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T435x10955T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T443x10955T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T443x19996(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T443x19995T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T443x19993T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T443x19994T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T643x10876(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T643x21065(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T643x21064(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T684x5908T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T684x11008(T0* C);
/* Call to ET_CHOICE.reset */
extern void T728x10963(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T733x10963(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T765x10876(T0* C);
/* Call to ET_ASSERTION.process */
extern void T812x5908T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T812x10941(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type */
extern void T1202x11370T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1334x10955T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c26(void);
/* GEC.report_cannot_read_error */
extern void T21f32(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T72f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T72f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T72f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T72f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T72f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T895f1(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T895f27(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T894f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge346os9173;
extern T0* ge346ov9173;
extern T0* T895f32(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T894c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T139f1(T0* C, T6 a1);
/* INTEGER_32.to_character */
extern T2 T6f15(T6* C);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge282os2764;
extern T0* ge282ov2764;
extern T0* T895f26(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T139c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f6(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge413os11201;
extern T6 ge413ov11201;
extern T6 T138f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T138f2(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge336os1653;
extern T0* ge336ov1653;
extern T0* T895f25(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T138c5(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T895f24(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T894f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T894f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f39(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f44(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f5(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f12(T0* C);
/* INTEGER_32.max */
extern T6 T6f16(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f11(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T895f23(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T895f38(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T895f69(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T895f79(T0* C);
/* STRING_8.make */
extern void T17f40(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c40(T6 a1);
/* STRING_8.make_area */
extern void T17f45(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c9(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f43(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T895f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T895f31(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T75f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge277os1652;
extern T0* ge277ov1652;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T75c4(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge285os1581;
extern T0* ge285ov1581;
extern T0* T72f1(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_VERSION_NUMBER.default_message */
extern T0* T64f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T64f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern unsigned char ge331os1573;
extern T0* ge331ov1573;
extern T0* T64f6(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f11(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f38(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f7(T0* C, T0* a1, T0* a2);
/* STRING_8.infix "+" */
extern T0* T17f7(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f10(T0* C, T6 a1);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T895f13(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T895f61(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T895c61(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T895f73(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T895f46(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T895f46p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T895f61p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T895f80(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T894f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T894f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T895f3(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f4(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T895f50(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T895f28(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge358os23497;
extern T0* ge358ov23497;
extern T0* T894f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T74c8(void);
/* UC_STRING.make */
extern void T74f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T74f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T74f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T74f2(T0* C);
/* UC_STRING.capacity */
extern T6 T74f2p1(T0* C);
/* UC_STRING.make */
extern void T74f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T74f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T74f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T894f23(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T895f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T895f30(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T894f25(T0* C);
/* UC_UTF8_STRING.infix "+" */
extern T0* T895f12(T0* C, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T895f58(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge427os9111;
extern T0* ge427ov9111;
extern T0* T895f47(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T895f60(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T895f78(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T895f86(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T895f77(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T895f87(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T895f76(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T895f75(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T895f88(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T895f37(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T895f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T895f67(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T895f67p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T895f58p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T895f74(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T895f49(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1148s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T895f44(T0* C);
/* ARRAY [STRING].item */
extern T0* T221f5(T0* C, T6 a1);
/* ARRAY [STRING].valid_index */
extern T1 T221f4(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T895f34(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T869f1(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T869f17(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T869f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T869f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1144f1(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* ARRAY [NATURAL_64].item */
extern T11 T1249f4(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2055os22348;
extern T0* ge2055ov22348;
extern T0* T869f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1144c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* ARRAY [NATURAL_64].put */
extern void T1249f6(T0* C, T11 a1, T6 a2);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* ARRAY [NATURAL_64].make */
extern T0* T1249c5(T6 a1, T6 a2);
/* ARRAY [NATURAL_64].make_area */
extern void T1249f7(T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make */
extern T0* T1248c2(T6 a1);
/* STRING_8.has */
extern T1 T17f32(T0* C, T2 a1);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge43os93;
extern T0* ge43ov93;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1206c2(T6 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(T6* C);
/* UC_UTF8_STRING.code */
extern T10 T895f43(T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f31(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f28(T6* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T869f22(T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern unsigned char ge2052os1256;
extern T0* ge2052ov1256;
extern T0* T895f42(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T869f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T869f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T869f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c59(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T869f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T869c16(void);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f21(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T895f33(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T895f41(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T869f2(T0* C);
/* STRING_8.is_integer */
extern T1 T17f25(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f28(T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f23(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T895f14(T0* C, T6 a1);
/* UC_UTF8_STRING.append_character */
extern void T895f59(T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f9(T0* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f10(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T895f62(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T895f81(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T895f62p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f52(T0* C);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f9(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f24(T0* C);
/* STRING_8.copy */
extern void T17f55(T0* C, T0* a1);
/* UT_VERSION_NUMBER.string_ */
extern T0* T64f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T62c7(T0* a1);
/* ARRAY [STRING].put */
extern void T221f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING].make */
extern T0* T221c7(T6 a1, T6 a2);
/* ARRAY [STRING].make_area */
extern void T221f9(T0* C, T6 a1);
/* SPECIAL [STRING].make */
extern T0* T102c5(T6 a1);
/* GEC.process_universe */
extern void T21f31(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T57f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge335os1576;
extern T0* ge335ov1576;
extern T0* T57f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T60c7(void);
/* KL_SHELL_COMMAND.system */
extern void T57f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T57f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T895f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f3(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2171os4633;
extern T0* ge2171ov4633;
extern T0* T57f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T57f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c47(T14 a1);
/* STRING_8.from_c */
extern void T17f50(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T872f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T872f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f60(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T393f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1226f2(T1226* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1226f3(T1226* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T872f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T872f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T393f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T393c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T872f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2052os1255;
extern T0* ge2052ov1255;
extern T0* T17f23(T0* C);
/* C_STRING.make_empty */
extern T0* T872c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T393c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T996f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T996f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T996c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T393f2(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T57f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T895f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f6(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T57c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T57f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T66f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T66f7(T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T66f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T66f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T110f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge394os8375;
extern T0* ge394ov8375;
extern T0* T66f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T110c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T66f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T65f1(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T65f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T65f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T65f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T65f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T65f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T65f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T65f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T65f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge314os1577;
extern T0* ge314ov1577;
extern T0* T21f22(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge314os1580;
extern T0* ge314ov1580;
extern T0* T21f25(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T66c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge410os8343;
extern T1 ge410ov8343;
extern T1 T60f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T60f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge410os8347;
extern T0* ge410ov8347;
extern T0* T60f5(T0* C);
/* STRING_8.is_equal */
extern T1 T17f18(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f22(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T60f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T110f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T110f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge314os1578;
extern T0* ge314ov1578;
extern T0* T21f24(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T65c20(void);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge410os8342;
extern T1 ge410ov8342;
extern T1 T60f1(T0* C);
/* GEC.operating_system */
extern T0* T21f21(T0* C);
/* GEC.no_c_compile */
extern T1 T21f20(T0* C);
/* AP_FLAG.was_found */
extern T1 T32f1(T0* C);
/* ET_C_GENERATOR.generate */
extern void T56f288(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].wipe_out */
extern void T76f26(T0* C);
/* DS_ARRAYED_LIST [STRING].clear_items */
extern void T76f32(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_all_cursors_after */
extern void T76f31(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_next_cursor */
extern void T299f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_position */
extern void T299f6(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T56f292(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T56f294(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T52f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T52f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f163(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T56f58(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T199c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T56f293(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T196f26(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T196f33(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T196f36(T0* C, T14 a1);
/* DS_HASH_TABLE [STRING, STRING].replace */
extern void T40f58(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].item_storage_put */
extern void T40f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].search_position */
extern void T40f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_item */
extern T6 T40f17(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].hash_position */
extern T6 T40f8(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T895f17(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T895f17p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T193f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T43f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T43f2(T0* C);
/* DS_HASH_TABLE [STRING, STRING].key_storage_item */
extern T0* T40f16(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_item */
extern T6 T40f10(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].unset_found_item */
extern void T40f41(T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T198f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].value */
extern T0* T40f34(T0* C, T0* a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T198f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1040os7208;
extern T0* ge1040ov7208;
extern T0* T56f57(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T198c3(void);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T196f1(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T196f2(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T196f12(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T196f19(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T196f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T196f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f30p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T196f18(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T196c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T196f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T196f9(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T56f56(T0* C);
/* DS_HASH_TABLE [STRING, STRING].has */
extern T1 T40f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].item */
extern T0* T76f6(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].item */
extern T0* T40f31(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].item_storage_item */
extern T0* T40f35(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].force */
extern void T40f57(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].key_storage_put */
extern void T40f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].slots_put */
extern void T40f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].clashes_put */
extern void T40f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].resize */
extern void T40f44(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_resize */
extern void T40f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER].resize */
extern T0* T105f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER].resized_area */
extern T0* T103f4(T0* C, T6 a1);
/* SPECIAL [INTEGER].copy_data */
extern void T103f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER].move_data */
extern void T103f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].overlapping_move */
extern void T103f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].non_overlapping_move */
extern void T103f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].make */
extern T0* T103c7(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].special_integer_ */
extern unsigned char ge283os4576;
extern T0* ge283ov4576;
extern T0* T40f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER].default_create */
extern T0* T105c4(void);
/* DS_HASH_TABLE [STRING, STRING].key_storage_resize */
extern void T40f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].resize */
extern T0* T106f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING].resized_area */
extern T0* T102f3(T0* C, T6 a1);
/* SPECIAL [STRING].copy_data */
extern void T102f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING].move_data */
extern void T102f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].overlapping_move */
extern void T102f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].non_overlapping_move */
extern void T102f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING, STRING].item_storage_resize */
extern void T40f50(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_resize */
extern void T40f49(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_modulus */
extern T6 T40f19(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_capacity */
extern T6 T40f7(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].set_key_equality_tester */
extern void T40f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].internal_set_equality_tester */
extern void T100f6(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge286os7209;
extern T0* ge286ov7209;
extern T0* T56f41(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T193c2(void);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern void T40f37(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern T0* T40c37(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_with_equality_testers */
extern void T40f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].make */
extern T0* T100c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].new_cursor */
extern T0* T100f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING].make */
extern T0* T361c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].new_cursor */
extern T0* T40f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING, STRING].make */
extern T0* T104c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].make_sparse_container */
extern void T40f48(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_slots */
extern void T40f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER].make */
extern T0* T105f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER].make_area */
extern T0* T362c2(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_clashes */
extern void T40f55(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_key_storage */
extern void T40f54(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].make */
extern T0* T106f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING].make_area */
extern T0* T363c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].default_create */
extern T0* T106c3(void);
/* DS_HASH_TABLE [STRING, STRING].make_item_storage */
extern void T40f53(T0* C, T6 a1);
/* ET_C_GENERATOR.c_config */
extern T0* T56f55(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T56f467(T0* C, T0* a1);
/* UC_UTF8_STRING.index_of */
extern T6 T895f18(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T895f36(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f27(T0* C, T2 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T66f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T65f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].put */
extern void T40f59(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T895f64(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f48(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T895f63(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T895f82(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T895f83(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f53(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f57(T0* C, T6 a1);
/* ET_C_GENERATOR.string_ */
extern T0* T56f111(T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f50(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER].put_right */
extern void T67f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER].make */
extern T0* T67c3(T2 a1);
/* STRING_8.clear_all */
extern void T17f51(T0* C);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T45f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T45f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T66f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T65f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T56f105(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T56f251(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T56f250(T0* C);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T45f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge392os4629;
extern T0* ge392ov4629;
extern T0* T45f2(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge334os1574;
extern T0* ge334ov1574;
extern T0* T56f106(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T45c5(void);
/* ET_C_GENERATOR.generate_c_code */
extern void T56f291(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge949os6477;
extern T0* ge949ov6477;
extern T0* T56f11(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T150c58(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T911f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T119f45(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T214f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T168f10(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T911f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T214f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T209f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T911f3(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T214f3(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T209f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T168c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T815f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1129c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T814c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge937os15003;
extern T0* ge937ov15003;
extern T0* T168f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T815c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge905os11627;
extern T0* ge905ov11627;
extern T0* T150f10(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T168c12(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T141f2(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T59f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T298c11(T0* a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T53f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T55f180(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T53f55(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T142f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T142f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T390f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T389f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T389f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T389f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T389f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T389f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T389c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T142f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T142f8(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T204c35(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T204f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern unsigned char ge932os11355;
extern T0* ge932ov11355;
extern T0* T204f17(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T200c11(void);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T205c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T205f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T205f16(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T197c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T197f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T197f16(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge938os5576;
extern T0* ge938ov5576;
extern T0* T53f44(T0* C);
/* ET_DYNAMIC_TYPE.make */
extern T0* T143c32(T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T143f12(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T203c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T203f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T203f16(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T392f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T392f3(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T160f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T160f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T142f2(T0* C, T6 a1);
/* ET_DO_PROCEDURE.make */
extern T0* T292c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge781os12860;
extern T0* ge781ov12860;
extern T0* T157f609(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T409f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge781os12312;
extern T0* ge781ov12312;
extern T0* T157f43(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T409c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T583f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T1052c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T582c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge796os6047;
extern T0* ge796ov6047;
extern T0* T409f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T583c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge781os12521;
extern T0* ge781ov12521;
extern T0* T157f107(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T166c23(void);
/* ET_KEYWORD.make_token */
extern void T166f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T166f25(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge776os2687;
extern T0* ge776ov2687;
extern T0* T166f2(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T157c785(void);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge781os12535;
extern T0* ge781ov12535;
extern T0* T157f574(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T166c42(void);
/* ET_DO_PROCEDURE.tokens */
extern T0* T292f10(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T119c94(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T119f102(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T119c102(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T119f103(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T119f3(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T139f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T119f25(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T898f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge280os2763;
extern T0* ge280ov2763;
extern T0* T119f24(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T898c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T190f42(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T190f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T190f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T190f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T190f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T190f48(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T190f47(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T841f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T841f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T189f32(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T189f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T189f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T189f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T189f40(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T189f38(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T189f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T837f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T837f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].wipe_out */
extern void T194f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_wipe_out */
extern void T194f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_wipe_out */
extern void T194f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_wipe_out */
extern void T194f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_wipe_out */
extern void T194f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].unset_found_item */
extern void T194f56(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].move_all_cursors_after */
extern void T194f55(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_next_cursor */
extern void T849f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_position */
extern void T849f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING].wipe_out */
extern void T192f42(T0* C);
/* DS_HASH_SET [STRING].slots_wipe_out */
extern void T192f55(T0* C);
/* DS_HASH_SET [STRING].clashes_wipe_out */
extern void T192f54(T0* C);
/* DS_HASH_SET [STRING].key_storage_wipe_out */
extern void T192f53(T0* C);
/* DS_HASH_SET [STRING].item_storage_wipe_out */
extern void T192f52(T0* C);
/* DS_HASH_SET [STRING].unset_found_item */
extern void T192f48(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors_after */
extern void T192f51(T0* C);
/* DS_HASH_SET_CURSOR [STRING].set_next_cursor */
extern void T848f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].set_position */
extern void T848f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].forth */
extern void T194f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_forth */
extern void T194f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].add_traversing_cursor */
extern void T194f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].remove_traversing_cursor */
extern void T194f67(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_item */
extern T6 T194f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_for_iteration */
extern T0* T194f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_key */
extern T0* T194f9(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_item */
extern T0* T194f14(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_for_iteration */
extern T1 T194f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_item */
extern T1 T194f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_item */
extern T1 T194f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].after */
extern T1 T194f1(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_after */
extern T1 T194f7(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].start */
extern void T194f46(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_start */
extern void T194f53(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_off */
extern T1 T194f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].is_empty */
extern T1 T194f32(T0* C);
/* DS_HASH_SET [STRING].forth */
extern void T192f41(T0* C);
/* DS_HASH_SET [STRING].cursor_forth */
extern void T192f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING].add_traversing_cursor */
extern void T192f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING].remove_traversing_cursor */
extern void T192f61(T0* C, T0* a1);
/* DS_HASH_SET [STRING].clashes_item */
extern T6 T192f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T56f309(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T56f347(T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9p1(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f34(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f33(T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28p1(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_for_iteration */
extern T0* T192f2(T0* C);
/* DS_HASH_SET [STRING].cursor_item */
extern T0* T192f5(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_storage_item */
extern T0* T192f7(T0* C, T6 a1);
/* DS_HASH_SET [STRING].after */
extern T1 T192f1(T0* C);
/* DS_HASH_SET [STRING].cursor_after */
extern T1 T192f4(T0* C, T0* a1);
/* DS_HASH_SET [STRING].start */
extern void T192f40(T0* C);
/* DS_HASH_SET [STRING].cursor_start */
extern void T192f49(T0* C, T0* a1);
/* DS_HASH_SET [STRING].cursor_off */
extern T1 T192f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING].is_empty */
extern T1 T192f30(T0* C);
/* ET_C_GENERATOR.print_main_function */
extern void T56f308(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T56f332(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T56f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T175f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T175f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T175f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T819f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T819f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T56f439(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T56f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T56f350(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T56f318(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T56f460(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T56f315(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T56f331(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T56f311(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T56f351(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T52f158(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T52f190(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge317os8632;
extern T0* ge317ov8632;
extern T0* T71f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T72c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T72f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T72f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T72f3(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T72f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge315os1575;
extern T0* ge315ov1575;
extern T0* T52f2(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T71c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T874c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f158(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f190(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T28f5(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T202f13(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T168f2(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T150f8(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T202f5(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge781os12515;
extern T0* ge781ov12515;
extern T0* T157f9(T0* C);
/* ET_CURRENT.make */
extern T0* T182c26(void);
/* ET_CURRENT.make_token */
extern void T182f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T182f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T182f2(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T202f27(T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T150f3(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T150f9(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T175f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T56f459(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T56f231(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T172f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T172f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T121f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T120f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T120f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T120f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T120f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T120f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T120c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T172f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T172f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T119f101(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f11(T6* C);
/* STRING_8.append_integer */
extern void T17f42(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T172f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T142f13(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T56f252(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T56f458(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T56f330(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_name */
extern void T56f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.tokens */
extern T0* T56f29(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T56f465(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T56f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T56f249(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T56f464(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T119f18(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T56f463(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T56f337(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T174f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T174f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T750f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T663f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T663f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T663f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T663f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T663f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T663c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T174f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T174f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T56f457(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T174f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T174f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T174f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T175f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T175f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T56f456(T0* C, T0* a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T56f326(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge949os6473;
extern T0* ge949ov6473;
extern T0* T56f89(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T56f317(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_object_type_name */
extern void T56f310(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T56f324(T0* C);
/* ET_C_GENERATOR.indent */
extern void T56f323(T0* C);
/* ET_C_GENERATOR.print_getypes_array */
extern void T56f307(T0* C);
/* ET_C_GENERATOR.print_geconst_function */
extern void T56f306(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T190f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T190f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T190f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T190f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T190f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T190f3(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T190f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T190f10(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T56f344(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T56f345(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T189f1(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T189f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T189f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T189f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T189f16(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T189f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T189f15(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T189f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T190f2(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T190f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T190f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T190f1(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T190f5(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T190f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T190f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T190f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T190f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T56f305(T0* C);
/* ET_C_GENERATOR.print_gevoid_function */
extern void T56f304(T0* C);
/* ET_C_GENERATOR.print_current_name */
extern void T56f335(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T188f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T188f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T188f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T188f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T188f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T188f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T188f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T834f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T834f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T188f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T188f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T188f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T188f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T188f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gemt_function */
extern void T56f303(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T56f343(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T56f322(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T56f327(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T56f316(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge781os12551;
extern T0* ge781ov12551;
extern T0* T157f16(T0* C);
/* ET_RESULT.make */
extern T0* T206c24(void);
/* ET_RESULT.make_token */
extern void T206f26(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T206f27(T0* C);
/* ET_RESULT.tokens */
extern T0* T206f2(T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T56f325(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T188f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T188f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T188f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T188f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T188f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T188f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T188f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T188f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T188f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T187f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T187f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T187f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T187f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T187f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T187f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T187f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T833f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T833f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T187f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T187f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T187f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T187f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T187f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gema_function */
extern void T56f302(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T200f2(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T56f329(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T56f321(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T56f328(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T56f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T200f3(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T187f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T187f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T187f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T187f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T187f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T187f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T187f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T187f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T187f23(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T56f301(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T180f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T180f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T180f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T831f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T831f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T56f342(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T56f455(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T56f454(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_routine_name */
extern void T56f437(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T142f12(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T142f16(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T142f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T391f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T391f5(T0* C, T6 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f20(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T895f66(T0* C);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T56f453(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T183f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T183f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T758f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T757f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T757f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T757f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T757f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T757f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T757c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T758f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1112c2(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge646os6047;
extern T0* ge646ov6047;
extern T0* T183f9(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T758c3(void);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T183f1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T183f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_name */
extern void T56f452(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T56f451(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_type_name */
extern void T56f450(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_closed_operand_name */
extern void T56f449(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T202f15(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T202f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T150f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T150f18(T0* C);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f8(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T895f20(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f29(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1207f1(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1207f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1207f6(T0* C, T0* a1, T6 a2, T0* a3);
/* SPECIAL [INTEGER].fill_with */
extern void T103f9(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.string_searcher */
extern unsigned char ge2052os1254;
extern T0* ge2052ov1254;
extern T0* T17f33(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1207c5(void);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T119f98(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T119f95(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T180f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T202f2(T0* C);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T150f40(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T191f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T191f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T847f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T847f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T191f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T191f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T191f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T191f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T846f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T845f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T845f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T845f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T845f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T845f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T845c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T191f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T191f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T202f61(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T150f61(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_calls */
extern void T56f300(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].wipe_out */
extern void T177f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_wipe_out */
extern void T177f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_wipe_out */
extern void T177f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_wipe_out */
extern void T177f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_wipe_out */
extern void T177f57(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].unset_found_item */
extern void T177f48(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].move_all_cursors_after */
extern void T177f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_next_cursor */
extern void T822f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_position */
extern void T822f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].wipe_out */
extern void T176f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER].clear_items */
extern void T176f21(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].move_all_cursors_after */
extern void T176f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_next_cursor */
extern void T820f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_position */
extern void T820f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T56f340(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_query_call */
extern void T56f339(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_target_expression */
extern void T56f438(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T56f436(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T56f435(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T56f434(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T56f433(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T56f432(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T56f431(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T56f430(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T56f429(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T56f428(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T56f427(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T56f426(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T56f425(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T56f424(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T56f423(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T56f422(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T56f421(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T56f420(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T56f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T56f418(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T56f417(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T56f416(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T56f415(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T56f414(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T56f413(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T56f412(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T56f411(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T56f410(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T56f409(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T56f408(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T56f407(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T56f406(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T56f405(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T56f404(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T56f403(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T56f402(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T56f401(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T56f400(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T56f399(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T56f398(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T56f397(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T56f396(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T56f395(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T56f394(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T56f393(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T56f392(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T56f391(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T56f390(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T56f389(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T56f388(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T56f387(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T56f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T56f385(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T56f384(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T56f383(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T56f382(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T56f381(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T56f380(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T56f379(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T56f378(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T56f377(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T56f376(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T56f375(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T56f374(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T56f373(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T56f372(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T56f371(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T56f370(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T56f369(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T56f368(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T56f367(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T56f366(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T56f365(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T56f364(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T56f363(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T56f362(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T56f361(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T56f360(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T56f359(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T56f358(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T56f357(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T56f356(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T56f355(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T56f461(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T234f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge249os7211;
extern T0* ge249ov7211;
extern T0* T56f248(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T234c1(void);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T56f354(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T56f353(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T56f352(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T190f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T190f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T190f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T190f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T190f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T190f20(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T190f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T190f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T190f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T190f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T839f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T840f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T840f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T840f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T840f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T840f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T840c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T190f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T789f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T615f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T615f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T615c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T190f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T190f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T190f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T190f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T190f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T175f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item */
extern T0* T177f4(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_item */
extern T0* T177f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].search_position */
extern void T177f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_item */
extern T6 T177f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].hash_position */
extern T6 T177f16(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f18(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f22(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_item */
extern T6 T177f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_item */
extern T6 T177f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].item */
extern T6 T176f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].sort */
extern void T176f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort */
extern void T215f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort_with_comparator */
extern void T215f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER].subsort_with_comparator */
extern void T215f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER].force */
extern void T290f13(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].auto_resize */
extern void T290f15(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].capacity */
extern T6 T290f7(T0* C);
/* SPECIAL [INTEGER].aliased_resized_area */
extern T0* T103f3(T0* C, T6 a1);
/* ARRAY [INTEGER].make_area */
extern void T290f14(T0* C, T6 a1);
/* ARRAY [INTEGER].additional_space */
extern T6 T290f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f20(T6* C, T6 a1);
/* ARRAY [INTEGER].empty_area */
extern T1 T290f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].swap */
extern void T176f23(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].replace */
extern void T176f22(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER].less_than */
extern T1 T294f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].item */
extern T6 T290f4(T0* C, T6 a1);
/* ARRAY [INTEGER].put */
extern void T290f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].make */
extern T0* T290c11(T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].is_empty */
extern T1 T176f11(T0* C);
/* ET_C_GENERATOR.polymorphic_type_id_sorter */
extern unsigned char ge949os6201;
extern T0* ge949ov6201;
extern T0* T56f98(T0* C);
/* DS_QUICK_SORTER [INTEGER].make */
extern T0* T215c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER].make */
extern T0* T294c2(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].forth */
extern void T177f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_forth */
extern void T177f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].add_traversing_cursor */
extern void T177f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].remove_traversing_cursor */
extern void T177f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].go_before */
extern void T178f18(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_go_before */
extern void T178f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_traversing_cursor */
extern void T178f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T826f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_position */
extern void T826f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].off */
extern T1 T826f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_off */
extern T1 T178f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_before */
extern T1 T178f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_after */
extern T1 T178f4(T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_call */
extern void T56f341(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T56f448(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T56f245(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T56f447(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T56f446(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T56f445(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T56f444(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T56f244(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T56f443(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T56f243(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T56f442(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T56f441(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T56f440(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_dynamic_type_sets */
extern void T56f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_set */
extern void T222f13(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_standalone_type */
extern void T222f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T173f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T390f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T995c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge934os15003;
extern T0* ge934ov15003;
extern T0* T173f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T390c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T173f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has */
extern T1 T173f1(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T173f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T173c10(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T173f13(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T222f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T173f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item_for_iteration */
extern T0* T178f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_item */
extern T0* T178f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item */
extern T0* T178f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].finish */
extern void T178f21(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_finish */
extern void T178f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].add_traversing_cursor */
extern void T178f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T178f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T178f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T828f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T827f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T827f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T827f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T827f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T827f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T827c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T178f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T178f12(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T222c11(T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].after */
extern T1 T178f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].forth */
extern void T178f19(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_forth */
extern void T178f23(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T168f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T168f3(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T168f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T815f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T814f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T814f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T814f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T814f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T814f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T168f6(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T168f11(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_for_iteration */
extern T0* T177f3(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_item */
extern T0* T177f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].after */
extern T1 T177f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_after */
extern T1 T177f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].start */
extern void T177f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_start */
extern void T177f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_off */
extern T1 T177f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].is_empty */
extern T1 T177f34(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T56f336(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T175f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T175f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T175f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T56f334(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T56f333(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.seeded_procedure */
extern T0* T55f21(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T148f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T217f10(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T56f95(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_LIST.item */
extern T0* T173f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].force_last */
extern void T177f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_put */
extern void T177f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_put */
extern void T177f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_put */
extern void T177f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].resize */
extern void T177f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_resize */
extern void T177f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].special_integer_ */
extern T0* T177f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_resize */
extern void T177f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_resize */
extern void T177f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_resize */
extern void T177f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_modulus */
extern T6 T177f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_capacity */
extern T6 T177f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_put */
extern void T177f49(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].force_last */
extern void T176f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].resize */
extern void T176f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].new_capacity */
extern T6 T176f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].extendible */
extern T1 T176f8(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].has */
extern T1 T177f1(T0* C, T6 a1);
/* ET_C_GENERATOR.print_polymorphic_query_calls */
extern void T56f299(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T55f17(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T146f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T207f11(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gems_function */
extern void T56f298(T0* C);
/* ET_C_GENERATOR.print_types */
extern void T56f297(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T56f314(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_geboxed_function */
extern void T56f313(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T56f349(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T56f348(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T56f312(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge781os12320;
extern T0* ge781ov12320;
extern T0* T157f15(T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge781os12339;
extern T0* ge781ov12339;
extern T0* T157f14(T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge781os12329;
extern T0* ge781ov12329;
extern T0* T157f13(T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge781os12323;
extern T0* ge781ov12323;
extern T0* T157f12(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge781os12352;
extern T0* ge781ov12352;
extern T0* T157f11(T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T119f16(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T895f19(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T895f70(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T895f84(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1139f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge363os24210;
extern T0* ge363ov24210;
extern T0* T1139f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge363os24209;
extern T0* ge363ov24209;
extern T0* T1139f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge363os24198;
extern T0* ge363ov24198;
extern T0* T1139f37(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T139f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1139f46(T0* C);
/* SPECIAL [ARRAY [INTEGER]].make */
extern T0* T1246c2(T6 a1);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge363os24208;
extern T0* ge363ov24208;
extern T0* T1139f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge363os24207;
extern T0* ge363ov24207;
extern T0* T1139f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge363os24206;
extern T0* ge363ov24206;
extern T0* T1139f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge363os24205;
extern T0* ge363ov24205;
extern T0* T1139f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge363os24204;
extern T0* ge363ov24204;
extern T0* T1139f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge363os24203;
extern T0* ge363ov24203;
extern T0* T1139f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge363os24202;
extern T0* ge363ov24202;
extern T0* T1139f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge363os24201;
extern T0* ge363ov24201;
extern T0* T1139f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge363os24200;
extern T0* ge363ov24200;
extern T0* T1139f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge363os24199;
extern T0* ge363ov24199;
extern T0* T1139f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge363os24197;
extern T0* ge363ov24197;
extern T0* T1139f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge363os24196;
extern T0* ge363ov24196;
extern T0* T1139f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge363os24195;
extern T0* ge363ov24195;
extern T0* T1139f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge363os24194;
extern T0* ge363ov24194;
extern T0* T1139f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge363os24193;
extern T0* ge363ov24193;
extern T0* T1139f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge363os24192;
extern T0* ge363ov24192;
extern T0* T1139f31(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER]]].make */
extern T0* T1247c2(T6 a1);
/* UC_UTF8_STRING.unicode */
extern unsigned char ge343os2765;
extern T0* ge343ov2765;
extern T0* T895f48(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1139c47(void);
/* STRING_8.as_upper */
extern T0* T17f26(T0* C);
/* STRING_8.to_upper */
extern void T17f56(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge781os12317;
extern T0* ge781ov12317;
extern T0* T157f10(T0* C);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T56f296(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING].replace */
extern void T194f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_put */
extern void T194f61(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].search_position */
extern void T194f51(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].hash_position */
extern T6 T194f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING].test */
extern T1 T44f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_item */
extern T6 T194f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item */
extern T1 T194f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].force */
extern void T194f49(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_put */
extern void T194f65(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_put */
extern void T194f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_put */
extern void T194f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].resize */
extern void T194f62(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_resize */
extern void T194f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].special_integer_ */
extern T0* T194f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_resize */
extern void T194f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_resize */
extern void T194f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T341f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T339f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T339f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T339f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T339f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T339f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].make */
extern T0* T339c4(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_resize */
extern void T194f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_modulus */
extern T6 T194f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_capacity */
extern T6 T194f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING].force */
extern void T192f43(T0* C, T0* a1);
/* DS_HASH_SET [STRING].slots_put */
extern void T192f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].clashes_put */
extern void T192f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].slots_item */
extern T6 T192f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING].hash_position */
extern T6 T192f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING].resize */
extern void T192f58(T0* C, T6 a1);
/* DS_HASH_SET [STRING].clashes_resize */
extern void T192f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING].special_integer_ */
extern T0* T192f27(T0* C);
/* DS_HASH_SET [STRING].key_storage_resize */
extern void T192f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_resize */
extern void T192f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING].key_storage_item */
extern T0* T192f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING].slots_resize */
extern void T192f63(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_modulus */
extern T6 T192f11(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_capacity */
extern T6 T192f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_put */
extern void T192f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING].search_position */
extern void T192f56(T0* C, T0* a1);
/* DS_HASH_SET [STRING].key_equality_tester */
extern T0* T192f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].has */
extern T1 T194f4(T0* C, T0* a1);
/* ET_C_GENERATOR.generate_ids */
extern void T56f295(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T201f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T202f65(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T150f64(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].force_last */
extern void T76f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].resize */
extern void T76f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].new_capacity */
extern T6 T76f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].extendible */
extern T1 T76f17(T0* C, T6 a1);
/* ET_C_GENERATOR.set_finalize */
extern void T56f287(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f19(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T56c286(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T56f290(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f298(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T195f2(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f298p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T195f308(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T195f40(T0* C);
/* RX_BYTE_CODE.integer_item */
extern T6 T854f2(T0* C, T6 a1);
/* RX_BYTE_CODE.opcode_item */
extern T6 T854f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T195f180(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T195f74(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T195f73(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T195f39(T0* C, T6 a1);
/* RX_BYTE_CODE.character_item */
extern T6 T854f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T195f307(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T195f38(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T195f75(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T195f36(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T195f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T195f121(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T195f119(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T195f306(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T854f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T195f56(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T854f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T195f321(T0* C, T1 a1);
/* RX_CHARACTER_SET.has */
extern T1 T856f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1151os15656;
extern T0* ge1151ov15656;
extern T0* T195f139(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T856c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T856f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T856f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T856f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T856c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T341f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T981c2(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge283os4574;
extern T0* ge283ov4574;
extern T0* T856f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T341c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1145os15489;
extern T6 ge1145ov15489;
extern T6 T195f138(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge413os11203;
extern T6 ge413ov11203;
extern T6 T138f3(T0* C);
/* KL_PLATFORM.old_maximum_integer */
extern T6 T138f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T195f185(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T854f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T854f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T854f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T854f7(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T195f133(T0* C, T6 a1, T1 a2);
/* RX_CASE_MAPPING.flip_case */
extern T6 T855f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T195f212(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1151os15649;
extern T0* ge1151ov15649;
extern T0* T195f227(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T195f211(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T195f207(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T195f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T195f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T195f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T195f122(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T195f120(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T195f101(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T195f324(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T854f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T854f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T854f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T195f325(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T195f323(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T854f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T854f26(T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T854f11(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1151os15655;
extern T0* ge1151ov15655;
extern T0* T195f140(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1151os15647;
extern T0* ge1151ov15647;
extern T0* T195f157(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T856f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T856f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T859f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1151os15658;
extern T0* ge1151ov15658;
extern T0* T195f149(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1151os15643;
extern T0* ge1151ov15643;
extern T0* T195f17(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1151os15653;
extern T0* ge1151ov15653;
extern T0* T195f226(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1151os15652;
extern T0* ge1151ov15652;
extern T0* T195f225(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1151os15651;
extern T0* ge1151ov15651;
extern T0* T195f224(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1151os15650;
extern T0* ge1151ov15650;
extern T0* T195f223(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1151os15654;
extern T0* ge1151ov15654;
extern T0* T195f222(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1151os15648;
extern T0* ge1151ov15648;
extern T0* T195f221(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1151os15644;
extern T0* ge1151ov15644;
extern T0* T195f220(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1151os15645;
extern T0* ge1151ov15645;
extern T0* T195f219(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1151os15646;
extern T0* ge1151ov15646;
extern T0* T195f217(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T195f147(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING].count */
extern T6 T221f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1151os15657;
extern T0* ge1151ov15657;
extern T0* T195f218(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T195f145(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T856f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1145os15487;
extern T0* ge1145ov15487;
extern T0* T195f142(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T195f77(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T195f322(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T195f320(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T195f53(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T854f16(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1145os15488;
extern T6 ge1145ov15488;
extern T6 T195f51(T0* C);
/* RX_BYTE_CODE.append_opcode */
extern void T854f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T195f305(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T195f304(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T854f14(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T195f14(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f303(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f303p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T195c297(void);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T195f297p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T195f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T195f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T195f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T195f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T195f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T195f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T195f313(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T195f312(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T195f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T195f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T195f309(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T195f301(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T195f300(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1151os15642;
extern T0* ge1151ov15642;
extern T0* T195f16(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T855c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T855f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T855f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T855f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T855f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f299(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f299p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1145os15486;
extern T0* ge1145ov15486;
extern T0* T195f15(T0* C);
/* STRING_8.put */
extern void T17f54(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T854c13(T6 a1);
/* DS_ARRAYED_LIST [STRING].make */
extern void T76f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].make */
extern T0* T76c21(T6 a1);
/* DS_ARRAYED_LIST [STRING].new_cursor */
extern T0* T76f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].make */
extern T0* T299c5(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].set_key_equality_tester */
extern void T194f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].internal_set_equality_tester */
extern void T851f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make */
extern T0* T194c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_with_equality_testers */
extern void T194f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].make */
extern T0* T851c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].new_cursor */
extern T0* T851f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING].make */
extern T0* T1137c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_cursor */
extern T0* T194f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].make */
extern T0* T849c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_sparse_container */
extern void T194f66(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_slots */
extern void T194f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_clashes */
extern void T194f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_key_storage */
extern void T194f74(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_item_storage */
extern void T194f73(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING].default_create */
extern T0* T44c2(void);
/* DS_HASH_SET [STRING].set_equality_tester */
extern void T192f39(T0* C, T0* a1);
/* DS_HASH_SET [STRING].make */
extern T0* T192c38(T6 a1);
/* DS_HASH_SET [STRING].new_cursor */
extern T0* T192f16(T0* C);
/* DS_HASH_SET_CURSOR [STRING].make */
extern T0* T848c6(T0* a1);
/* DS_HASH_SET [STRING].make_slots */
extern void T192f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_clashes */
extern void T192f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_key_storage */
extern void T192f45(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_item_storage */
extern void T192f44(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T191c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T191f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T847c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T846f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1136c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T846c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T190c41(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T190f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T843c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T843f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1135c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T190f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T841c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T190f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T190f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T190f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T190f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T839f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1134c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T839c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T190f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T789f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1121c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T789c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T189c31(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T189f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T837c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T189f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T189f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T189f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T189f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T189f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T189f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T188c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T188f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T834c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T188f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T188f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T188f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T188f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T188f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T188f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T836f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1133c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T835c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T836c3(void);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T187c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T187f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T833c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T187f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T187f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T187f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T187f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T187f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T187f40(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.make */
extern T0* T186c22(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T186f23(T0* C, T0* a1, T0* a2);
/* ET_CALL_INSTRUCTION.make */
extern T0* T184c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T184f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T183c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T183f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge781os12498;
extern T0* ge781ov12498;
extern T0* T157f556(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T421c60(void);
/* ET_SYMBOL.make_leaf */
extern void T421f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T421f2(T0* C);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge781os12493;
extern T0* ge781ov12493;
extern T0* T157f555(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T421c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T183f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T180c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T180f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T831c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T830f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1132c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T829c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T830c3(void);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T150f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T178c17(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T178f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T826c5(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T828f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1131c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T828c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_map */
extern T0* T177c41(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_with_equality_testers */
extern void T177f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T824c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T824f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T1130c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T177f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T822c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_sparse_container */
extern void T177f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_slots */
extern void T177f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_clashes */
extern void T177f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_key_storage */
extern void T177f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_item_storage */
extern void T177f68(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].make */
extern T0* T176c15(T6 a1);
/* DS_ARRAYED_LIST [INTEGER].new_cursor */
extern T0* T176f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].make */
extern T0* T820c4(T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T175c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T175f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T819c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T750f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1108c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T750c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T174c8(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T142c11(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T142f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T391c4(T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T172c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T172f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T818c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T121f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T374c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T121c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T171c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge316os2434;
extern T0* ge316ov2434;
extern T0* T56f7(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T170c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T169c12(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge894os15079;
extern T0* ge894ov15079;
extern T0* T169f4(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T297c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge781os12517;
extern T0* ge781ov12517;
extern T0* T157f601(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T166c69(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T297f10(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T297f67p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T169f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T169f12p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T56f289(T0* C, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T55f43(T0* C);
/* ET_SYSTEM.compile */
extern void T53f48(T0* C);
/* ET_SYSTEM.compile_system */
extern void T53f51(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T53f54(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T141f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T59f197(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T59f200(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T59f205(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T59f206(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T59f207(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T52f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T52f193(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T73f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T73f14(T0* C);
/* KL_STDOUT_FILE.put_string */
extern void T73f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T73f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T73f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T73f1(T0* C);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f193(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T207f7(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T217f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T59f52(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge933os7564;
extern T0* ge933ov7564;
extern T0* T59f51(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T59f50(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T59f204(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T207f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T217f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_feature_name */
extern unsigned char ge933os7779;
extern T0* ge933ov7779;
extern T0* T59f49(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T119f30(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1139f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge361os24188;
extern T0* ge361ov24188;
extern T0* T1139f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge361os24187;
extern T0* ge361ov24187;
extern T0* T1139f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge361os24176;
extern T0* ge361ov24176;
extern T0* T1139f22(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge361os24186;
extern T0* ge361ov24186;
extern T0* T1139f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge361os24185;
extern T0* ge361ov24185;
extern T0* T1139f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge361os24184;
extern T0* ge361ov24184;
extern T0* T1139f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge361os24183;
extern T0* ge361ov24183;
extern T0* T1139f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge361os24182;
extern T0* ge361ov24182;
extern T0* T1139f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge361os24181;
extern T0* ge361ov24181;
extern T0* T1139f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge361os24180;
extern T0* ge361ov24180;
extern T0* T1139f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge361os24179;
extern T0* ge361ov24179;
extern T0* T1139f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge361os24178;
extern T0* ge361ov24178;
extern T0* T1139f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge361os24177;
extern T0* ge361ov24177;
extern T0* T1139f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge361os24175;
extern T0* ge361ov24175;
extern T0* T1139f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge361os24174;
extern T0* ge361ov24174;
extern T0* T1139f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge361os24173;
extern T0* ge361ov24173;
extern T0* T1139f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge361os24172;
extern T0* ge361ov24172;
extern T0* T1139f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge361os24171;
extern T0* ge361ov24171;
extern T0* T1139f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge361os24170;
extern T0* ge361ov24170;
extern T0* T1139f16(T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T26f15(T0* C);
/* ET_IDENTIFIER.string_ */
extern T0* T119f38(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_class_name */
extern unsigned char ge933os7778;
extern T0* ge933ov7778;
extern T0* T59f48(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T59f199(T0* C, T0* a1, T0* a2);
/* DS_CELL [INTEGER].put */
extern void T235f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T202f68(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T150f66(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T59f203(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T59f202(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T150f42(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T202f67(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T150f65(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T202f62(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T168f9(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_mode */
extern void T141f9(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_mode */
extern void T59f194(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T141f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T59f196(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T141f10(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T59f195(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T202f63(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T150f60(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T202f64(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T55f42(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T493f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T587f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T587f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T410f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T410f8(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T119f79(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T409f4(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T409f5(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T587f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T52f157(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T52f189(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge317os8631;
extern T0* ge317ov8631;
extern T0* T71f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T73c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T73f13(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T73f18(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T73f3(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T73f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T52f195(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T873c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T52f12(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f157(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f189(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f12(T0* C);
/* ET_CLASS.named_query */
extern T0* T55f38(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T146f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T55f39(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T148f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T52f156(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T873c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T52f11(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f11(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T51f8(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T158f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T158f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T158f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T158f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T158f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T158f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T158f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T158f899(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T158f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T158f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T158f896(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T158c895(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T158f910(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T158f914(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge955os13642;
extern T0* ge955ov13642;
extern T0* T158f68(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T158f867(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER].to_special */
extern T0* T105f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T158f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T158f1747(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER].subcopy */
extern void T906f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER].subcopy */
extern void T290f16(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge278os2682;
extern T0* ge278ov2682;
extern T0* T158f882(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER].default_create */
extern T0* T906c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T158f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge955os13639;
extern T0* ge955ov13639;
extern T0* T158f66(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T158f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T158f1739(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge955os13638;
extern T0* ge955ov13638;
extern T0* T158f64(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge955os13637;
extern T0* ge955ov13637;
extern T0* T158f62(T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge955os13636;
extern T0* ge955ov13636;
extern T0* T158f60(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge955os13635;
extern T0* ge955ov13635;
extern T0* T158f58(T0* C);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge955os13634;
extern T0* ge955ov13634;
extern T0* T158f56(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge955os13633;
extern T0* ge955ov13633;
extern T0* T158f54(T0* C);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge955os13632;
extern T0* ge955ov13632;
extern T0* T158f52(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge955os13631;
extern T0* ge955ov13631;
extern T0* T158f50(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T158f913(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T158f41(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T158f909(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T158f39(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T158f908(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T158f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T158f919(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T158f923(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T897f4(T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T158f918(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T158f922(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge959os14495;
extern T0* ge959ov14495;
extern T0* T158f147(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T158f870(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge959os14494;
extern T0* ge959ov14494;
extern T0* T158f145(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge959os14493;
extern T0* ge959ov14493;
extern T0* T158f143(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge959os14492;
extern T0* ge959ov14492;
extern T0* T158f141(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge959os14491;
extern T0* ge959ov14491;
extern T0* T158f139(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge959os14490;
extern T0* ge959ov14490;
extern T0* T158f137(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge959os14489;
extern T0* ge959ov14489;
extern T0* T158f135(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge959os14488;
extern T0* ge959ov14488;
extern T0* T158f133(T0* C);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge166os5094;
extern T0* ge166ov5094;
extern T0* T158f34(T0* C);
/* YY_BUFFER.make */
extern T0* T114c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T114f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.put */
extern void T897f11(T0* C, T2 a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T897f14(T0* C, T0* a1, T6 a2);
/* STRING_8.subcopy */
extern void T17f62(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T114f9(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T897c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge410os8344;
extern T1 ge410ov8344;
extern T1 T60f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1306c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T897f7(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T401c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T401f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1001c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T401f47(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T401f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T401f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T401f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T401f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T401f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T401f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T387f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T993c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T385c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T387c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T400c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T400f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1000c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T541f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1039c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T531c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T541c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T238c17(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T238f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T863c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T632f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1069c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T610c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T632c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T239c17(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T239f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T864c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T614f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1064c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T609c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T614c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T399c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T399f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T999c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T998f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1199c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T997c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T998c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T398c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T423f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1009c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T422c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T423c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T397c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T414f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1006c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T413c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T414c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T396c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T655f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1078c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T620c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T655c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T395c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T648f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1075c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T626c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T648c3(void);
/* DS_ARRAYED_STACK [INTEGER].make */
extern T0* T394c8(T6 a1);
/* ET_XACE_UNIVERSE.eiffel_parser */
extern T0* T48f8(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T52f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T873c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T52f10(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f10(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T55f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T52f154(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T873c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T52f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f154(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f9(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge781os12406;
extern T0* ge781ov12406;
extern T0* T157f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T53f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T52f153(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T873c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T52f8(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f153(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f8(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T53f53(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T157f8(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge781os12466;
extern T0* ge781ov12466;
extern T0* T157f6(T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge781os12473;
extern T0* ge781ov12473;
extern T0* T157f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge781os12441;
extern T0* ge781ov12441;
extern T0* T157f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge781os12404;
extern T0* ge781ov12404;
extern T0* T157f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T52f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T52f191(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T875c614(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T875f630(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T875f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T55f27(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T875f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T875f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge941os23350;
extern T0* ge941ov23350;
extern T0* T875f14(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1233c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T52f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f191(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T52f161(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T875c613(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T52f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T52f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T875c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T52f14(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge781os12379;
extern T0* ge781ov12379;
extern T0* T157f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T161c91(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T160f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T160c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T160f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T678f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1089c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T676c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge834os6047;
extern T0* ge834ov6047;
extern T0* T160f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T678c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge781os12497;
extern T0* ge781ov12497;
extern T0* T157f553(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T421c58(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge781os12492;
extern T0* ge781ov12492;
extern T0* T157f552(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T468c81(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T468f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T468f2(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T160f2(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T52f159(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T873c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T52f13(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f159(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f13(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T51f165(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T279f1(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T279f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T279f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T139f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T279f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T279f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T279f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T279f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T279f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T279c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T279f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T279f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T152f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T152f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T152f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T152f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T152f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T152f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T152f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T152f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T152f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T152f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T152f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T152f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge371os11996;
extern T6 ge371ov11996;
extern T6 T152f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T152f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge371os11995;
extern T6 ge371ov11995;
extern T6 T152f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T152f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge371os11994;
extern T6 ge371ov11994;
extern T6 T152f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T139f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T152f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T152f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T152f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T279f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T152f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T152f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1114os12190;
extern T0* ge1114ov12190;
extern T0* T279f2(T0* C);
/* DT_DATE_TIME.make */
extern T0* T152c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T152f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T152f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T152f1(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T152f2(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T152f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T152f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T152f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T152f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T152f3(T0* C);
/* ET_XACE_UNIVERSE.print_time */
extern void T48f169(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T51f168(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T888f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T137f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T888f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T52f211(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T52f212(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1295c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T137f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T137f8(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T895f21(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T895f71(T0* C);
/* STRING_8.as_lower */
extern T0* T17f30(T0* C);
/* STRING_8.to_lower */
extern void T17f63(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T137f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T126f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T126f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T126f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T52f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f211(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f212(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f35(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T888f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T126f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T888f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T125f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T376f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T125f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T51f67(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T888c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T280f130(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T280f139(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T280f143(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T250f54(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T247f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T123f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T122f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T407c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].make_from_linear */
extern T0* T76c38(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].forth */
extern void T108f9(T0* C);
/* DS_LINKED_LIST [STRING].cursor_forth */
extern void T107f12(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].add_traversing_cursor */
extern void T107f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T108f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].remove_traversing_cursor */
extern void T107f14(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set */
extern void T108f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING].item */
extern T0* T108f2(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].start */
extern void T108f8(T0* C);
/* DS_LINKED_LIST [STRING].cursor_start */
extern void T107f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].cursor_off */
extern T1 T107f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].new_cursor */
extern T0* T107f1(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].make */
extern T0* T108c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T41f1(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T41f2(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING].force_last */
extern void T107f10(T0* C, T0* a1);
/* DS_LINKABLE [STRING].put_right */
extern void T364f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING].make */
extern T0* T364c3(T0* a1);
/* DS_LINKED_LIST [STRING].is_empty */
extern T1 T107f3(T0* C);
/* DS_HASH_SET [INTEGER].has */
extern T1 T109f1(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].search_position */
extern void T109f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].clashes_item */
extern T6 T109f12(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].hash_position */
extern T6 T109f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_storage_item */
extern T6 T109f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].item_storage_item */
extern T6 T109f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_equality_tester */
extern T0* T109f17(T0* C);
/* DS_HASH_SET [INTEGER].slots_item */
extern T6 T109f14(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T41f5(T0* C);
/* DS_LINKED_LIST [STRING].make */
extern T0* T107c9(void);
/* ST_SPLITTER.set_separators */
extern void T41f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER].put */
extern void T109f30(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].slots_put */
extern void T109f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].clashes_put */
extern void T109f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].item_storage_put */
extern void T109f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].unset_found_item */
extern void T109f36(T0* C);
/* DS_HASH_SET [INTEGER].make */
extern T0* T109c29(T6 a1);
/* DS_HASH_SET [INTEGER].new_cursor */
extern T0* T109f10(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER].make */
extern T0* T365c3(T0* a1);
/* DS_HASH_SET [INTEGER].make_slots */
extern void T109f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].special_integer_ */
extern T0* T109f23(T0* C);
/* DS_HASH_SET [INTEGER].new_modulus */
extern T6 T109f6(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_clashes */
extern void T109f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_key_storage */
extern void T109f33(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_item_storage */
extern void T109f32(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T41c9(void);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T280f142(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T250f53(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T247f11(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T123f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T122f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T52f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T52f194(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T876c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T52f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f194(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f20(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T405f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T405f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T405f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T405f33(T0* C, T14 a1);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T250f52(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T250f59(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T250f56(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.put_last */
extern void T247f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T403f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T403f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1003f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1002f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1002f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1002f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1002f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1002f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1002c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T403f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T403f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T250f49(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T247f7(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T247c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T403c10(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T403f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1004c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1003f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1200c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1003c3(void);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T250f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T250f47(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_override */
extern void T250f61(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T250f60(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T250f46(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_options */
extern void T250f48(T0* C, T0* a1);
/* ET_XACE_CLUSTER.make */
extern T0* T250c41(T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T250f51(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T247f8(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T250f31(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T123f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T123f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T123f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T122f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T375f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T375f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T132f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T130f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T130f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T130f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T130f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T130f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T130c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T375f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T375f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T123f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T122f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T122c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T375c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T375f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T990c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T132f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T378c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T132c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T123f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T123f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T123f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T123f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T123f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T123f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T123c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T123f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T122f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T119f99(T0* C, T6 a1, T6 a2);
/* ET_LACE_CLUSTER.name */
extern T0* T123f13(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T123f30(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T66f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T405f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T405f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T405f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge394os8373;
extern T0* ge394ov8373;
extern T0* T66f14(T0* C);
/* KL_DIRECTORY.make */
extern void T405f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T405c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T405f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T405f8(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T65f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T65f18(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T250f24(T0* C, T0* a1);
/* DS_HASH_SET [STRING].has */
extern T1 T192f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T250f28(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING].forth */
extern void T848f10(T0* C);
/* DS_HASH_SET_CURSOR [STRING].go_after */
extern void T848f11(T0* C);
/* DS_HASH_SET [STRING].cursor_go_after */
extern void T192f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].item */
extern T0* T848f3(T0* C);
/* DS_HASH_SET_CURSOR [STRING].after */
extern T1 T848f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING].start */
extern void T848f9(T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T250f27(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T251f102(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1002os17602;
extern T0* ge1002ov17602;
extern T0* T251f103(T0* C);
/* ET_XACE_OPTIONS.string_equality_tester */
extern unsigned char ge348os1582;
extern T0* ge348ov1582;
extern T0* T251f16(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T43c3(void);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T251f101(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T250f24p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T124f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T124f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T124f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T123f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T52f165(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T876c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T52f19(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f165(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T280f141(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T52f183(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T877c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T877f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T280f24(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T900c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T900f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T900f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T55f177(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T55f181(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T495f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T600f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T910f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T598f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T600f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T598f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T493f11(T0* C);
/* ET_CREATOR.reset */
extern void T587f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T499f24(T0* C);
/* ET_PARENT_LIST.reset */
extern void T287f12(T0* C);
/* ET_PARENT.reset */
extern void T282f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T286f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T285f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T576f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T574f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T284f10(T0* C);
/* ET_RENAME.reset */
extern void T568f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T568f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T160f28(T0* C);
/* ET_PARENT.parent */
extern T0* T282f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T392f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T148f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T146f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T55f188(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge781os12857;
extern T0* ge781ov12857;
extern T0* T157f103(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T291c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T953f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1187c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T952c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge836os15003;
extern T0* ge836ov15003;
extern T0* T291f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T953c3(void);
/* ET_CLASS.tokens */
extern T0* T55f4(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T55f187(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T55f186(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T55f185(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T55f184(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T52f196(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T875c617(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T52f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f196(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T52f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T875c622(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T52f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T875c621(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T52f197(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T875c618(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f197(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T55f44(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T52f199(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T875c620(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f199(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T55f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T52f198(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T875c619(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f198(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T55f170(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T55f183(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T55f173(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T55f175(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T55f172(T0* C, T0* a1);
/* ET_CLASS.reset_all */
extern void T55f171(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T55f190(T0* C);
/* ET_CLASS.reset_parsed */
extern void T55f189(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge781os12859;
extern T0* ge781ov12859;
extern T0* T157f105(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T148c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge720os6047;
extern T0* ge720ov6047;
extern T0* T148f3(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge781os12858;
extern T0* ge781ov12858;
extern T0* T157f104(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T146c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge722os6047;
extern T0* ge722ov6047;
extern T0* T146f3(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge781os12511;
extern T0* ge781ov12511;
extern T0* T157f106(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T166c22(void);
/* ET_CLASS.cloned_class */
extern T0* T55f22(T0* C);
/* ET_CLASS.copy */
extern void T55f182(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T55c158(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge781os12353;
extern T0* ge781ov12353;
extern T0* T157f78(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T51f74(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T140f41(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T140f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T140f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T140f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T140f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T140f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T140f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T140f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T140f27(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T140f53(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T388f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T386f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T386f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T386f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T386f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T386f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T386c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T140f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T387f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T385f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T385f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T385f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T385f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T385f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T140f17(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T140f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T140f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T140f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T140f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T140f45(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T140f44(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T268f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T140f43(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T246f1(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T55c178(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T140f34(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T140f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T140f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T140f61(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.eiffel_class */
extern T0* T48f72(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T280f146(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T280f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T52f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T52f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T52f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T52f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T52f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T280f159(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T280f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T280f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T280f154(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T280f157(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T280f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].force_new */
extern void T259f41(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_put */
extern void T259f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_put */
extern void T259f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_put */
extern void T259f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_put */
extern void T259f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_item */
extern T6 T259f18(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].hash_position */
extern T6 T259f17(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_item */
extern T6 T259f16(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].resize */
extern void T259f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_resize */
extern void T259f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].special_integer_ */
extern T0* T259f32(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_resize */
extern void T259f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_resize */
extern void T259f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_item */
extern T0* T259f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].slots_resize */
extern void T259f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_modulus */
extern T6 T259f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_capacity */
extern T6 T259f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].unset_found_item */
extern void T259f44(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found_key */
extern T0* T259f3(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found */
extern T1 T259f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].search */
extern void T259f38(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].search_position */
extern void T259f43(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge960os14307;
extern T0* ge960ov14307;
extern T0* T280f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T280f128(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].set_key_equality_tester */
extern void T259f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].internal_set_equality_tester */
extern void T921f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T280f127(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].make_map */
extern T0* T259c37(T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_with_equality_testers */
extern void T259f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].make */
extern T0* T921c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].new_cursor */
extern T0* T921f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING].make */
extern T0* T1154c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_cursor */
extern T0* T259f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, STRING].make */
extern T0* T923c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_sparse_container */
extern void T259f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_slots */
extern void T259f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_clashes */
extern void T259f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_key_storage */
extern void T259f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_item_storage */
extern void T259f55(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T280f160(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T897f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T897f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T280f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge960os14308;
extern T0* ge960ov14308;
extern T0* T280f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T52f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T52f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T52f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T52f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T280f156(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T280f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T246f56(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T280f95(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].replace_found_item */
extern void T259f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].found_item */
extern T6 T259f2(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_item */
extern T6 T259f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T158f887(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T158f874(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T158f859(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T158f881(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T158f1743(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T158f873(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T158f872(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T280f158(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T280f152(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T52f167(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f167(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T280f155(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T280f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T280f151(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T280f149(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T280f34(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T113f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T897f5(T0* C, T0* a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.compact_left */
extern void T113f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T897f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T113f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T897f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge161os10806;
extern T6 ge161ov10806;
extern T6 T113f10(T0* C);
/* YY_BUFFER.fill */
extern void T114f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T113f18(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T114f13(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T280f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T280f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T280f150(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T897f1(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T280f145(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T113f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T113f25(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge962os14483;
extern T0* ge962ov14483;
extern T0* T280f22(T0* C);
/* YY_FILE_BUFFER.make */
extern T0* T113c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T113f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T113f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge317os8630;
extern T0* ge317ov8630;
extern T0* T71f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T899c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T899f20(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T899f23(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T899f13(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T899f22(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T280f119(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T280f147(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T113f26(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T280f147p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T280f147p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T244f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T244f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2035os1900;
extern T0* ge2035ov1900;
extern T0* T22f22(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T244c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T244f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T244f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f46(T0* C);
/* UNIX_FILE_INFO.update */
extern void T244f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T244f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f13(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f21(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge391os19252;
extern T1 ge391ov19252;
extern T1 T406f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge391os19243;
extern T0* ge391ov19243;
extern T0* T406f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge332os14477;
extern T0* ge332ov14477;
extern T0* T280f20(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T406c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T280f19(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f15(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f23(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge960os14338;
extern T0* ge960ov14338;
extern T0* T280f118(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T280f18(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T280f117(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T280f116(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T280f115(T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T250f16(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T250f16p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T250f29(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T123f29(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T405f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T405f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T405f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T405f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T405f1(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T405f4(T0* C);
/* KL_DIRECTORY.open_read */
extern void T405f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T405f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T405f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T405f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T405f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T405f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T280f17(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge958os18013;
extern T0* ge958ov18013;
extern T0* T280f113(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T280f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T52f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f207(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T375f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T403f2(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T51f73(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T280f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T280f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T280f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T280f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T280f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T280f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T280f131(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T280c129(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T280f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T280f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T280f144(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T280f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge957os17969;
extern T0* ge957ov17969;
extern T0* T280f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T280f122(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge957os17968;
extern T0* ge957ov17968;
extern T0* T280f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge957os17967;
extern T0* ge957ov17967;
extern T0* T280f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge957os17966;
extern T0* ge957ov17966;
extern T0* T280f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge957os17965;
extern T0* ge957ov17965;
extern T0* T280f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge957os17964;
extern T0* ge957ov17964;
extern T0* T280f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge957os17963;
extern T0* ge957ov17963;
extern T0* T280f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge957os17962;
extern T0* ge957ov17962;
extern T0* T280f80(T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T280f9(T0* C);
/* ET_XACE_UNIVERSE.preparse_single */
extern void T48f172(T0* C);
/* ET_XACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T48f60(T0* C);
/* ET_XACE_UNIVERSE.eiffel_preparser */
extern T0* T48f66(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T153f1(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T153f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T152f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T153f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T153f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T153f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T153f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T153f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T153f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T153f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T153f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T153f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T153f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T153f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T153f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T153f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T153f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T153f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T393c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T153f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T153f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T153f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T153f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T153f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T153f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T153f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T152c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1106os11877;
extern T0* ge1106ov11877;
extern T0* T151f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T153c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T151c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T53f35(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T53f52(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T51f163(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T273f14(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T273c13(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T943f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T943c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge892os23988;
extern T0* ge892ov23988;
extern T0* T943f4(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T942c32(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T942f33(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T242f36(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T242f38(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T241f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T241f19(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T867f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T866f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T866f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T866f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T866f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T866f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T866c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T241f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T241f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T241f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T241f18(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T241f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T868f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T241f16(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T241f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T868f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T241f2(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T942f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T241f4(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T242c35(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T242f37(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T602c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge865os15003;
extern T0* ge865ov15003;
extern T0* T242f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T674c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T241f3(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T241c13(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T241f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T868c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T867f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1138c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T867c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T240c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T240f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T865c4(T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T237c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T237f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T862c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T796f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1124c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T774c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T796c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge879os8073;
extern T0* ge879ov8073;
extern T0* T942f6(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T273f17(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T273f9(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T272c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T941c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1179c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1179f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1283c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T941f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T272f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T272f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T271c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T940c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge889os23901;
extern T0* ge889ov23901;
extern T0* T940f4(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1178c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1216f2(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1216f1(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1216c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T939c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T939f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T938c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T938f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T937c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T936c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1177c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1177f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].make */
extern T0* T1181c12(T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].new_cursor */
extern T0* T1181f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].make */
extern T0* T1289c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].make */
extern T0* T1288f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER]].make_area */
extern T0* T1374c2(T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].make */
extern T0* T1287c5(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].default_create */
extern T0* T1288c3(void);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1282c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1282f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1370c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1370f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1398c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1282f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1372c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1282f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1282f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_slots */
extern void T1282f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1282f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1282f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1282f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1282f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1356f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1393c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1355c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1356c3(void);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1282f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1241c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1241f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1357c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T936f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T935c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T935f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T934c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1176f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1277f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1176c35(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1176f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1277c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1277f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1367c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1176f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1279c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1176f53(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1176f42(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1176f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1176f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1176f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1176f60(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1176f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1274f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1366c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1272c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1274c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1176f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1280f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1368c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1275c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1280c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1174f33(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1173c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1174c32(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1174f14(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1273c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1174f42(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1174f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1174f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1174f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1174f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1174f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1174f38(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T933c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_map */
extern T0* T1172c44(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_with_equality_testers */
extern void T1172f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1269c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1269f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1364c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1172f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1266c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_sparse_container */
extern void T1172f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].unset_found_item */
extern void T1172f55(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_slots */
extern void T1172f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].special_integer_ */
extern T0* T1172f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_modulus */
extern T6 T1172f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_clashes */
extern void T1172f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_key_storage */
extern void T1172f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_item_storage */
extern void T1172f73(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1271f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1365c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1267c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1271c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1171f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1264f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1171c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1171f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1264c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1264f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1363c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1171f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1263c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1171f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1171f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1171f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1171f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1171f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1171f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1171f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T637f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1072c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T566c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T637c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1171f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1170f39(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1170c38(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1170f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1262c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1170f51(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1170f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1170f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1170f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1170f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1170f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1170f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1169f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1259f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge827os5972;
extern T0* ge827ov5972;
extern T0* T933f4(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T926c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1169c41(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1169f50(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1259c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1259f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1361c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1169f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1256c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1169f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1169f53(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1169f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1169f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1169f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1169f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1169f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1169f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1261f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1362c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1257c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1261c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T932f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge826os2686;
extern T0* ge826ov2686;
extern T0* T271f9(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T268c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T932c39(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T932f9(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1168c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T932f45(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T932f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T932f14(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T932f3(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T932f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T932f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T932f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T388f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T994c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T388c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T931c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T931f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1167c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T1165f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1255c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1166c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T1165c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T928f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1162f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge825os17875;
extern T0* ge825ov17875;
extern T0* T271f6(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T929c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T928c35(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T928f37(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1162c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1162f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1254c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T928f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1164c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T928f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T928f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T928f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T928f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T928f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T928f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T928f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T646f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1074c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T644c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T646c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T928f39(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1159f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1253c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1161c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1159c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T925f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1156f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T271f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T925c45(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T925f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1156c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1156f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1252c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T925f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1158c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T925f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T925f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T925f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T925f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T925f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T925f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T925f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T925f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T271f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T271f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T275c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T947c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1186c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1186f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_map */
extern T0* T1292c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1292f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1377c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1377f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1400c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1292f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1379c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1292f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1292f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_slots */
extern void T1292f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1292f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1292f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_clashes */
extern void T1292f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1292f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T530f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1036c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T525c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T530c3(void);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1292f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1245c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1245f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1358c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T947f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T946c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T946f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_map */
extern T0* T945c40(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_with_equality_testers */
extern void T945f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].make */
extern T0* T1183c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T1183f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1291c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T945f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1185c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_sparse_container */
extern void T945f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].unset_found_item */
extern void T945f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_slots */
extern void T945f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].special_integer_ */
extern T0* T945f18(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_modulus */
extern T6 T945f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_clashes */
extern void T945f45(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_key_storage */
extern void T945f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_item_storage */
extern void T945f43(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T944c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T944f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_map */
extern T0* T1180c36(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_with_equality_testers */
extern void T1180f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].make */
extern T0* T1284c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].new_cursor */
extern T0* T1284f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1373c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_cursor */
extern T0* T1180f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1286c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_sparse_container */
extern void T1180f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].unset_found_item */
extern void T1180f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_slots */
extern void T1180f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].special_integer_ */
extern T0* T1180f28(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_modulus */
extern T6 T1180f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_clashes */
extern void T1180f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_key_storage */
extern void T1180f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_item_storage */
extern void T1180f57(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T275f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T275f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T274c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T274f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T274f3(T0* C);
/* ET_XACE_UNIVERSE.activate_processors */
extern void T48f167(T0* C);
/* ET_SYSTEM.compile_all */
extern void T53f50(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T145f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T140f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T140f63(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T145f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T140f62(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T145f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T148f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T146f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T55f72(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T55f77(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T166f13(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T145f2(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T140f31(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T145f1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T140f30(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T145f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T140f59(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T140f38(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T140f37(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T140f1(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T145c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T51f167(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T273f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T273f15(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.compile_degree_3 */
extern void T48f171(T0* C);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T51f166(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T73f12(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T73f16(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T73f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T73f21(T0* C, T14 a1, T2 a2);
/* ET_XACE_UNIVERSE.compile_degree_4 */
extern void T48f170(T0* C);
/* ET_LACE_UNIVERSE.parse_all */
extern void T51f164(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T158f907(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T158f911(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T158f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T158f916(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T158f915(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T158f920(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T158f932(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T158f931(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T118f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T117f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T117f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T117f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T117f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T117f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T117c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T118f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T373c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T118c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T158f930(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T158f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T158f1713(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T158f1722(T0* C);
/* DS_ARRAYED_STACK [INTEGER].force */
extern void T394f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].resize */
extern void T394f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].new_capacity */
extern T6 T394f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].extendible */
extern T1 T394f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T158f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T158f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T158f1710(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T158f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T482f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T481f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T246f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T158f1708(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T482f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T481f35(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T158f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T158f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T158f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T158f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T158f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T158f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T158f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T158f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T158f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T158f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T158f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T158f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T158f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T158f1694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T158f1693(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T437f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T436f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T436f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T436f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T436f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T436f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T436c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T437f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1014c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T437c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T158f1692(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T158f1691(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T450f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T449f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T449f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T449f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T449f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T449f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T449c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T450f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1019c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T450c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T158f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T158f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T158f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T158f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T158f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T158f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T158f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T158f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T158f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T158f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T158f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T158f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T158f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T158f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T158f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T158f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T158f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T158f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T158f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T158f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T158f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T158f1669(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T158f1668(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T808f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T804f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T804f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T804f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T804f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T804f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T804c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T808f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1128c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T808c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T246f311(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T809c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge781os12494;
extern T0* ge781ov12494;
extern T0* T157f736(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T471c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T471f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T471f2(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge781os12496;
extern T0* ge781ov12496;
extern T0* T157f564(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T421c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge781os12491;
extern T0* ge781ov12491;
extern T0* T157f563(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T421c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T809f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T158f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T158f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T158f1665(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T807f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T806f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T806f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T806f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T806f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T806f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T806c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T807f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1127c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T807c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T158f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER].replace */
extern void T394f12(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].item */
extern T6 T394f1(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T246f310(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T158f1664(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T790f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T158f1663(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T803f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T791f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T791f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T791f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T791f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T791f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T791c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T803f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1126c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T803c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T246f309(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T790c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T790f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge514os6047;
extern T0* ge514ov6047;
extern T0* T790f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T790f2(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T158f564(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T158f585(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T398f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T158f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T158f1661(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T158f1726(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T398f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T398f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T423f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T422f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T422f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T422f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T422f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T422f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T398f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T398f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T158f1660(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T158f1720(T0* C);
/* DS_ARRAYED_STACK [INTEGER].remove */
extern void T394f10(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T158f1725(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T398f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T158f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T158f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T158f1657(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T802f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T793f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T793f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T793f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T793f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T793f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T793c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T802f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1125c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T802c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T246f302(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T794c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T794f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T158f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T158f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T158f1654(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T158f1653(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T158f846(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T119f106(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T619f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T119f34(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T912f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T658f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T912f3(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T658f3(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T158f880(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T396f2(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T396f1(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T119f105(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T209f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T158f879(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T395f2(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T395f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T158f1652(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T796f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T774f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T774f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T774f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T774f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T774f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T395f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T158f1651(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T246f308(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T801f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T801f32(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T801f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T801f30(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T801c29(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T801f34(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T801f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T801f35(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1114c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge781os12502;
extern T0* ge781ov12502;
extern T0* T157f733(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T415c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T415f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T415f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T415f2(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T246f169(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T158f1650(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T158f1649(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T396f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T158f1648(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T246f307(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T800f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T800f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T800f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T800f32(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T800f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T800f30(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T800c29(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T800f3(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T800f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T158f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T158f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T158f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T158f1644(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T246f306(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T799f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T799f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T799f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T799f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T799f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T799f30(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T799c29(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T799f3(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T799f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T158f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T158f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T158f1641(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T158f1640(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T246f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T798f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T798f33(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T798f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T798f31(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T798c30(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T798f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T798f9(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T798f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T246f162(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T158f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T158f1638(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T158f1637(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T246f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T797f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T797f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T797f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T797f33(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T797f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T797f31(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T797c30(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T797f4(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T797f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T158f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T158f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T158f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T158f1633(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T246f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T795f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T795f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T795f34(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T795f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T795f32(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T795f31(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T795c30(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T795f4(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T795f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T158f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T158f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T158f1630(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T792f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T772f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T772f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T772f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T772f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T772f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T772c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T792f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1123c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T792c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T246f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T771f26(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T771c25(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T771f2(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T771c24(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T158f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T158f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T158f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T158f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T158f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T158f1624(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T246f252(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T158f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T158f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T158f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T158f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T158f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T158f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T158f1617(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T158f1616(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T778f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T158f1615(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T788f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T779f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T779f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T779f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T779f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T779f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T779c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T788f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1120c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T788c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T246f300(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T778f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T778c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T778f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T585f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1054c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T537c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge804os6047;
extern T0* ge804ov6047;
extern T0* T778f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T585c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge781os12553;
extern T0* ge781ov12553;
extern T0* T157f735(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T166c31(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T778f2(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T158f563(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T397f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T158f1614(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T158f1613(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T158f1721(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T397f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T397f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T414f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T413f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T413f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T413f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T413f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T413f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T397f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T397f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T158f1612(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T158f1719(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T397f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T158f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T158f1610(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T519f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T158f1609(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T787f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T520f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T520f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T520f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T520f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T520f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T520c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T787f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1119c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T787c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T246f299(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T519f23(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T519c21(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T519f21p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T519f6(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T519f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T158f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T158f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T158f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T158f1605(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T158f1604(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T776f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T158f1603(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T786f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T777f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T777f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T777f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T777f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T777f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T777c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T786f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1118c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T786c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T246f298(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T776f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T776c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T776f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T776f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge781os12495;
extern T0* ge781ov12495;
extern T0* T157f566(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T421c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge781os12490;
extern T0* ge781ov12490;
extern T0* T157f734(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T421c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T776f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T158f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T158f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T158f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T158f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T158f1598(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T246f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T785c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T785f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T158f1597(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T784f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T755f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T755f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T755f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T755f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T755f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T755c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T784f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1117c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T784c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T246f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T754f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T754c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T754f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T158f1596(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T780f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T158f1595(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T783f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T781f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T781f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T781f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T781f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T781f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T781c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T783f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1116c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T783c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T246f295(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T780c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T780f2(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T780f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T780f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T780f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T158f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T158f1593(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T782f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T691f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T691f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T691f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T691f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T691f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T691c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T782f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T782c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T158f1592(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T246f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T690c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T158f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T158f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T158f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T158f1588(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T158f1587(T0* C);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T246f293(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T775f16(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T775c15(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge781os12541;
extern T0* ge781ov12541;
extern T0* T157f610(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T166c26(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T775f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T158f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T158f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T158f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T158f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T158f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T158f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T158f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T158f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T158f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T158f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T158f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T158f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T158f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T158f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T158f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T158f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T158f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T158f1569(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T158f1568(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T246f292(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T770f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T770c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge781os12540;
extern T0* ge781ov12540;
extern T0* T157f732(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T166c29(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T770f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T158f1567(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T246f290(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T769c16(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T246f291(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T440f51(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T440f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T158f1566(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T158f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T158f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T158f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T246f331(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T459f73(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T459f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T158f1564(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T158f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T246f330(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T459f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T158f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T158f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T158f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T158f1560(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T158f1559(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T246f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T768c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T158f1558(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T158f1557(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T246f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T764c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T158f1556(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T246f288(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T767f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T767c31(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge781os12519;
extern T0* ge781ov12519;
extern T0* T157f575(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T166c43(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge781os12542;
extern T0* ge781ov12542;
extern T0* T157f731(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T446c46(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T446f52(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T446f53(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T446f2(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T767f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T158f1555(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T246f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T766f32(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T766c31(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge781os12554;
extern T0* ge781ov12554;
extern T0* T157f578(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T166c46(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge781os12503;
extern T0* ge781ov12503;
extern T0* T157f730(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T446c48(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T766f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T158f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T158f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T158f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T158f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T158f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T158f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T158f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T158f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T158f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T158f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T158f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T158f1543(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T158f1542(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T246f286(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T459f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T158f1541(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T246f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T459f70(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T158f1540(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T246f283(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T440f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T158f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T158f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T158f1537(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T763f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T692f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T692f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T692f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T692f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T692f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T692c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T763f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1113c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T763c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T158f1536(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T158f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T912f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T658f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T619f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T619f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T158f1535(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T246f282(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T762f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T762c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge781os12487;
extern T0* ge781ov12487;
extern T0* T157f729(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T421c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T762f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T158f1534(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T246f281(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T761f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T761c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T761f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T158f1533(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T246f280(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T760f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T760c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T760f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T158f1532(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T246f279(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T759f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T759c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T759f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T158f1531(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T246f278(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T158f1530(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T158f1529(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T756f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T707f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T707f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T707f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T707f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T707f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T707c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T756f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1111c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T756c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T246f277(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T158f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T158f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T158f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T158f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T158f1524(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T158f1523(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T246f274(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T158f1522(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T158f1521(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T158f1734(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T58f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T58f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T58f12(T0* C);
/* UT_VERSION.revision */
extern T6 T58f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T58f10(T0* C);
/* UT_VERSION.minor */
extern T6 T58f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T58f8(T0* C);
/* UT_VERSION.major */
extern T6 T58f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T58f6(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge260os1587;
extern T0* ge260ov1587;
extern T0* T158f681(T0* C);
/* UT_VERSION.make */
extern T0* T58c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T51f45(T0* C);
/* ET_XACE_UNIVERSE.is_ise */
extern T1 T48f156(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T158f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T158f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T158f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T158f1517(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T158f1516(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T158f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T911f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T214f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T158f1515(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T246f276(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T753f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T753f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T753c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge781os12543;
extern T0* ge781ov12543;
extern T0* T157f728(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T418c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T418f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T418f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T418f2(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T753f4(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T246f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T158f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T158f1513(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T752f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T739f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T739f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T739f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T739f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T739f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T739c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T752f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1110c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T752c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T246f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T738f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T738c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T738f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T158f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T158f1511(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T751f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T686f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T686f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T686f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T686f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T686f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T686c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T751f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T751c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T158f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T158f1509(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T158f1508(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T689f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T685f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T685f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T685f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T685f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T685f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T685c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T689f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1091c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T689c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T246f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T749f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T749c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T749f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T158f1507(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T158f1506(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T246f271(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T747f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T747f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T747c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T747f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T158f1505(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T158f1504(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T246f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T158f1503(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T158f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T119f104(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T158f1502(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T746f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T745f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T745f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T745f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T745f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T745f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T745c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T746f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1107c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T746c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T246f269(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T158f1501(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T740f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T158f1500(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T743f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T741f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T741f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T741f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T741f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T741f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T741c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T743f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1106c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T743c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T246f268(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T740c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T740f2(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T740f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge656os6047;
extern T0* ge656ov6047;
extern T0* T740f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T158f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T158f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T158f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T158f1496(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T158f1495(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T702f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T702f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T702f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T702f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T702f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T702c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1105c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T742c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T246f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T701c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T701f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T246f266(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge781os12516;
extern T0* ge781ov12516;
extern T0* T157f582(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T166c50(void);
/* ET_AST_FACTORY.tokens */
extern T0* T246f332(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T621f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T621c10(void);
/* ET_COMPOUND.make */
extern void T621f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge781os12518;
extern T0* ge781ov12518;
extern T0* T157f572(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T166c40(void);
/* ET_COMPOUND.tokens */
extern T0* T621f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T158f1494(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T246f237(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T621c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T621f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge743os6047;
extern T0* ge743ov6047;
extern T0* T621f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T158f1493(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T737f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T734f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T734f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T734f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T734f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T734f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T734c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T737f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1103c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T737c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T158f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T158f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T158f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T158f1489(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T158f1488(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T735f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T729f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T729f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T729f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T729f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T729f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T729c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T735f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1102c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T735c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T246f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T736c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge781os12489;
extern T0* ge781ov12489;
extern T0* T157f568(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T421c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T736f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T158f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T158f1486(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T732f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T731f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T731f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T731f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T731f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T731f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T731c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T732f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1101c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T732c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T246f264(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T158f1485(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T724f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T158f1484(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T727f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T725f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T725f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T725f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T725f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T725f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T725c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T727f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1100c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T727c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T246f263(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T724f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T724c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T724f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge741os6047;
extern T0* ge741ov6047;
extern T0* T724f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge781os12561;
extern T0* ge781ov12561;
extern T0* T157f579(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T166c47(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T724f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T158f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T158f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T158f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T158f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T158f1479(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T726f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T723f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T723f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T723f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T723f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T723f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T723c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T726f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1099c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T726c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T246f262(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T722c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T158f1478(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T718f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T158f1477(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T721f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T719f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T719f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T719f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T719f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T719f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T719c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T721f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1097c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T721c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T246f261(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T718c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge764os6047;
extern T0* ge764ov6047;
extern T0* T718f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T158f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T158f1475(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T158f1474(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T720f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T698f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T698f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T698f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T698f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T698f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T698c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T720f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1096c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T720c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T246f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T697f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T697c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T697f4(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T246f248(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T914c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T166f12(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T166f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T158f1473(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T158f1472(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T717f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T715f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T715f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T715f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T715f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T715f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T715c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T717f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1095c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T717c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T246f259(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T714c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T158f1471(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T711f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T158f1470(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T716f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T713f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T713f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T713f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T713f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T713f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T713c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T716f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1094c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T716c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T246f258(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T711c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge748os6047;
extern T0* ge748ov6047;
extern T0* T711f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T158f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T158f1468(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T712f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T696f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T696f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T696f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T696f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T696f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T696c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T712f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1093c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T712c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T246f257(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T695f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T695f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T695c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T695f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T158f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T158f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T158f1465(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T158f1464(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T710f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T517f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T517f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T517f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T517f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T517f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T517c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T710f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1092c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T710c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T246f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T516f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T516c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge781os12513;
extern T0* ge781ov12513;
extern T0* T157f587(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T166c55(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T516f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T246f253(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T706c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T158f1463(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T158f1462(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T246f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T709f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T709c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T709f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T158f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T158f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T158f1459(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T158f1458(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T246f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T705f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T705c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge781os12484;
extern T0* ge781ov12484;
extern T0* T157f562(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T421c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T705f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T158f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T158f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T158f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T158f1454(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T246f250(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T158f1453(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T158f1452(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T158f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T399f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T399f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T399f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T999f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T999f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T703f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T399f4(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T246f329(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T703f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T703c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T703f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge538os6047;
extern T0* ge538ov6047;
extern T0* T703f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge781os12510;
extern T0* ge781ov12510;
extern T0* T157f581(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T166c49(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T703f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T158f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T158f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T158f1449(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T246f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T700f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T700f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T700c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T700f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T158f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T158f1447(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T158f1446(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T246f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T694c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge781os12483;
extern T0* ge781ov12483;
extern T0* T157f570(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T421c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T694f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T158f1445(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T246f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T693c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge781os12482;
extern T0* ge781ov12482;
extern T0* T157f569(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T421c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T693f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T158f1444(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T246f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T687c13(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge731os21664;
extern T0* ge731ov21664;
extern T0* T687f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T687f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T158f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T158f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T158f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T158f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T158f1439(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T673f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T622f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T622f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T622f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T622f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T622f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T622c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T673f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1086c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T673c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T158f1438(T0* C);
/* ET_COMPOUND.put_first */
extern void T621f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T158f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T158f1436(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T246f244(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge781os12538;
extern T0* ge781ov12538;
extern T0* T157f577(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T166c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T158f1435(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T158f1434(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T246f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge781os12527;
extern T0* ge781ov12527;
extern T0* T157f576(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T166c44(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T158f1433(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T158f1432(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T246f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge781os12550;
extern T0* ge781ov12550;
extern T0* T157f593(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T166c61(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T158f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T158f1430(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T246f241(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T158f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T158f1428(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T246f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T158f1427(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T158f1426(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T246f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T158f1425(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T158f1424(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T246f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T158f1423(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T158f1422(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T682f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T543f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T543f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T543f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T543f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T543f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T543c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T682f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1090c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T682c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T246f236(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T683f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T683c55(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge781os12536;
extern T0* ge781ov12536;
extern T0* T157f727(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T166c30(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T683f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T158f1421(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T246f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T681f61(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T681c60(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T681f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T158f1420(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T678f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T676f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T676f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T676f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T676f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T676f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T246f234(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T246f231(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T679c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T158f1419(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T158f1418(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T158f1737(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T246f233(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T913c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T160f12(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T246f232(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T160f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T158f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T158f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T158f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T158f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T158f1413(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T675f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T555f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T555f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T555f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T555f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T555f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T555c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T675f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T675c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T246f229(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T160f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T158f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T158f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T158f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T158f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T158f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T158f1407(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T246f230(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T158f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T158f1405(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T246f228(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T283f86(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T283c85(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge781os12555;
extern T0* ge781ov12555;
extern T0* T157f670(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T283f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T158f1404(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T158f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T246f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T159c90(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T246f317(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T55f176(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T401f42(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T401f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T401f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T401f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T401f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T55f71(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T401f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T401f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T401f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T401f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T401f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T401f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T401f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T401f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T401f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T401f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T401f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T401f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T246f328(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T904c53(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T55f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T392f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T532f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T524f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T158f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T158f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T158f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T158f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T158f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T158f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T158f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T158f1396(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T158f1395(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T602f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T602f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T602f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T602f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T602f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T158f1394(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T246f129(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T545f94(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T545c93(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge781os12509;
extern T0* ge781ov12509;
extern T0* T157f715(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T545f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T158f1393(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T158f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T52f204(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T875f627(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T875f626(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T875f624(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T875c625(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T52f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f204(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T52f203(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T875c623(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f203(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T158f1715(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T55f164(T0* C);
/* ET_CLASS.set_parsed */
extern void T55f163(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T544f1(T0* C);
/* ET_BIT_N.compute_size */
extern void T544f93(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T246f316(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T544f94(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T544c92(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T544f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T158f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T158f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T158f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T158f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T158f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T158f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T158f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T158f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T158f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T158f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T158f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T158f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T158f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T158f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T158f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T158f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T158f1376(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T158f1375(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T672f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T671f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T671f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T671f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T671f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T671f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T671c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T672f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1085c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T672c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T246f227(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T670f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T670c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge781os12559;
extern T0* ge781ov12559;
extern T0* T157f599(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T166c67(void);
/* ET_VARIANT.tokens */
extern T0* T670f2(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T246f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T158f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T158f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T158f1372(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T158f1371(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T669f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T668f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T668f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T668f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T668f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T668f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T668c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T669f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1084c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T669c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T158f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T667f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T246f327(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T667f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T667c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T667f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T667f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge781os12534;
extern T0* ge781ov12534;
extern T0* T157f608(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T166c76(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T667f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T158f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T158f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T158f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T158f1367(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T666f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T500f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T500f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T500f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T500f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T500f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T500c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T666f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1083c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T666c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T158f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T499f21(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T246f326(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T499f22(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T499c20(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T499f23(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T499f6(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T499f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T158f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T158f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T158f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T158f1364(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T158f1363(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T665f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T624f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T624f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T624f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T624f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T624f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T624c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T665f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1082c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T665c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T158f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T623f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T246f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T623f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T623f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T623c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T623f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T623f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge781os12522;
extern T0* ge781ov12522;
extern T0* T157f718(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T166c32(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T623f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T158f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T158f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T158f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T158f1359(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T158f1358(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T664f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T618f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T618f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T618f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T618f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T618f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T618c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T664f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1081c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T664c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T158f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T617f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T246f324(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T617f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T617f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T617c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T617f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T617f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge781os12549;
extern T0* ge781ov12549;
extern T0* T157f717(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T166c35(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T617f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T158f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T158f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T158f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T158f1354(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T158f1353(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T158f1736(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T399f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T399f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T998f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T997f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T997f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T997f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T997f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T997f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T399f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T399f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T246f312(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T246f313(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T811c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T158f1352(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T158f1351(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T158f1735(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T399f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T399f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T399f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T811f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T399f2(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T399f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T158f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T158f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T158f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T158f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T158f1346(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T158f1345(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T662f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T657f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T657f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T657f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T657f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T657f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T657c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T662f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1080c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T662c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T246f226(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T246f225(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T658c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T158f1344(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T158f1343(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T661f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T659f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T659f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T659f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T659f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T659f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T659c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T661f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1079c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T661c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T246f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T912c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge956os14260;
extern T0* ge956ov14260;
extern T0* T158f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T158f1342(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T246f223(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T158f1341(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T619f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T158f1340(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T158f1339(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T912f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T912f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T658f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T619f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T619f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T158f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T158f1337(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T655f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T620f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T620f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T620f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T620f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T620f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T158f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T396f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T396f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T396f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T396f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T246f323(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T619f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T619c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T619f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge713os6047;
extern T0* ge713ov6047;
extern T0* T619f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge781os12537;
extern T0* ge781ov12537;
extern T0* T157f584(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T166c52(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T619f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T158f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T158f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T158f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T158f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T158f1332(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T158f1331(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T654f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T650f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T650f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T650f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T650f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T650f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T650c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T654f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1077c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T654c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T246f222(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T246f221(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T214c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T158f1330(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T158f1329(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T653f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T651f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T651f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T651f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T651f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T651f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T651c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T653f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1076c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T653c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T246f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T911c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T158f1328(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T246f219(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T158f1327(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T209f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T158f1326(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T158f1325(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T911f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T209f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T209f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T158f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T158f1323(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T648f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T626f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T626f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T626f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T626f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T626f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T158f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T395f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T395f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T395f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T395f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T246f322(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T209c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T209f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge702os6047;
extern T0* ge702ov6047;
extern T0* T209f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T209f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T158f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T158f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T158f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T158f1319(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T158f1318(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T646f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T644f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T644f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T644f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T644f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T644f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T158f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T158f878(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T246f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T647f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T647c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T647f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T647f5(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge786os21069;
extern T0* ge786ov21069;
extern T0* T647f2(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge781os12504;
extern T0* ge781ov12504;
extern T0* T157f580(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T166c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T158f1317(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T246f218(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T643f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T643c81(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T643f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T643f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T158f1316(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T158f1315(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T246f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T643c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T158f1314(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T246f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T643c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T158f1313(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T246f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T643c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T158f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T246f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T643c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T158f1311(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T246f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T643c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T158f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T246f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T643c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T158f1309(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T246f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T643c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T158f1308(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T246f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T643c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T158f1307(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T246f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T643c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T158f1306(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T246f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T643c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T158f1305(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T246f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T643c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T158f1304(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T246f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T643c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T158f1303(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T246f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T643c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T158f1302(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T246f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T643c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T158f1301(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T246f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T643c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T158f1300(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T246f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T643c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T158f1299(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T246f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T643c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T158f1298(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T246f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T643c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T158f1297(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T246f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T643c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T158f1296(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T642f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T567f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T567f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T567f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T567f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T567f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T567c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T642f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1073c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T642c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T246f197(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T645c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T158f1295(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T158f1294(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T637f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T566f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T566f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T566f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T566f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T566f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T158f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T158f877(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T246f196(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T641f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T641c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T641f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T641f5(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge813os21069;
extern T0* ge813ov21069;
extern T0* T641f2(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge781os12531;
extern T0* ge781ov12531;
extern T0* T157f583(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T166c51(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T158f1293(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T158f1292(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T158f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T158f876(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T246f178(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T639f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T639c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T639f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T639f5(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge823os21069;
extern T0* ge823ov21069;
extern T0* T639f2(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge781os12544;
extern T0* ge781ov12544;
extern T0* T157f590(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T166c58(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T158f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T158f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T158f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T158f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T158f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T158f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T158f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T158f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T158f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T158f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T158f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T158f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T158f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T158f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T158f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T158f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T158f1275(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T246f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T640f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T640c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T640f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T640f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T158f1274(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T246f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T640c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T158f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T246f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T640c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T158f1272(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T246f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T640c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T158f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T246f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T640c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T158f1270(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T246f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T640c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T158f1269(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T246f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T640c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T158f1268(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T246f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T640c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T158f1267(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T246f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T640c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T158f1266(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T246f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T640c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T158f1265(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T246f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T640c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T158f1264(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T246f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T640c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T158f1263(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T246f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T640c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T158f1262(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T246f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T640c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T158f1261(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T246f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T640c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T158f1260(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T246f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T640c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T158f1259(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T246f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T640c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T158f1258(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T158f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T246f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T638f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T638c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T638f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T638f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T158f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T246f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T638c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T158f1255(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T246f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T638c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T158f1254(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T158f1253(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T636f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T613f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T613f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T613f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T613f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T613f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T613c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T636f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1071c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T636c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T246f174(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T158f1252(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T158f1251(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T635f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T631f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T631f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T631f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T631f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T631f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T631c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T635f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1070c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T635c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T246f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T158f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T158f1249(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T158f1248(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T467f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T466f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T466f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T466f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T466f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T466f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T466c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T467f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1025c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T467c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T158f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T158f1246(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T158f1245(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T632f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T610f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T610f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T610f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T610f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T610f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T158f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T158f1746(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T52f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T875c628(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T52f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f205(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T634f71(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T158f1779(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge781os12444;
extern T0* ge781ov12444;
extern T0* T157f433(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge781os12409;
extern T0* ge781ov12409;
extern T0* T157f549(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge781os12408;
extern T0* ge781ov12408;
extern T0* T157f547(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge781os12399;
extern T0* ge781ov12399;
extern T0* T157f545(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge781os12398;
extern T0* ge781ov12398;
extern T0* T157f543(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge781os12463;
extern T0* ge781ov12463;
extern T0* T157f494(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge781os12471;
extern T0* ge781ov12471;
extern T0* T157f540(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge781os12470;
extern T0* ge781ov12470;
extern T0* T157f538(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge781os12469;
extern T0* ge781ov12469;
extern T0* T157f536(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge781os12422;
extern T0* ge781ov12422;
extern T0* T157f484(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T475c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T475f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge781os12448;
extern T0* ge781ov12448;
extern T0* T157f524(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge781os12446;
extern T0* ge781ov12446;
extern T0* T157f482(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge781os12428;
extern T0* ge781ov12428;
extern T0* T157f480(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge781os12417;
extern T0* ge781ov12417;
extern T0* T157f474(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge781os12429;
extern T0* ge781ov12429;
extern T0* T157f472(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge781os12423;
extern T0* ge781ov12423;
extern T0* T157f470(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T52f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T875c629(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T907f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T52f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge781os12476;
extern T0* ge781ov12476;
extern T0* T157f366(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T157f400(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge781os12427;
extern T0* ge781ov12427;
extern T0* T157f429(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T158f1778(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge781os12439;
extern T0* ge781ov12439;
extern T0* T157f31(T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge781os12454;
extern T0* ge781ov12454;
extern T0* T157f401(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T158f1777(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge781os12391;
extern T0* ge781ov12391;
extern T0* T157f522(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge781os12395;
extern T0* ge781ov12395;
extern T0* T157f520(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge781os12394;
extern T0* ge781ov12394;
extern T0* T157f518(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge781os12393;
extern T0* ge781ov12393;
extern T0* T157f516(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge781os12390;
extern T0* ge781ov12390;
extern T0* T157f514(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge781os12392;
extern T0* ge781ov12392;
extern T0* T157f512(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge781os12389;
extern T0* ge781ov12389;
extern T0* T157f510(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge781os12388;
extern T0* ge781ov12388;
extern T0* T157f508(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge781os12387;
extern T0* ge781ov12387;
extern T0* T157f506(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge781os12386;
extern T0* ge781ov12386;
extern T0* T157f504(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge781os12385;
extern T0* ge781ov12385;
extern T0* T157f502(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge781os12384;
extern T0* ge781ov12384;
extern T0* T157f500(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge781os12383;
extern T0* ge781ov12383;
extern T0* T157f498(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge781os12382;
extern T0* ge781ov12382;
extern T0* T157f496(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge781os12468;
extern T0* ge781ov12468;
extern T0* T157f492(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge781os12467;
extern T0* ge781ov12467;
extern T0* T157f490(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge781os12465;
extern T0* ge781ov12465;
extern T0* T157f488(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge781os12462;
extern T0* ge781ov12462;
extern T0* T157f409(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge781os12461;
extern T0* ge781ov12461;
extern T0* T157f407(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge781os12424;
extern T0* ge781ov12424;
extern T0* T157f478(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge781os12416;
extern T0* ge781ov12416;
extern T0* T157f476(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T158f1776(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T158f1775(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T157f37(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T158f1774(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge781os12478;
extern T0* ge781ov12478;
extern T0* T157f465(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T157f42(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge781os12397;
extern T0* ge781ov12397;
extern T0* T157f39(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T158f1773(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge781os12475;
extern T0* ge781ov12475;
extern T0* T157f463(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge781os12435;
extern T0* ge781ov12435;
extern T0* T157f461(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge781os12451;
extern T0* ge781ov12451;
extern T0* T157f459(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge781os12445;
extern T0* ge781ov12445;
extern T0* T157f457(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge781os12431;
extern T0* ge781ov12431;
extern T0* T157f455(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge781os12400;
extern T0* ge781ov12400;
extern T0* T157f453(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge781os12396;
extern T0* ge781ov12396;
extern T0* T157f451(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge781os12438;
extern T0* ge781ov12438;
extern T0* T157f449(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge781os12437;
extern T0* ge781ov12437;
extern T0* T157f447(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge781os12436;
extern T0* ge781ov12436;
extern T0* T157f445(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T157f444(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge781os12434;
extern T0* ge781ov12434;
extern T0* T157f442(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T158f1772(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge781os12381;
extern T0* ge781ov12381;
extern T0* T157f440(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T157f439(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge781os12380;
extern T0* ge781ov12380;
extern T0* T157f437(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T158f1771(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge781os12412;
extern T0* ge781ov12412;
extern T0* T157f435(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge781os12464;
extern T0* ge781ov12464;
extern T0* T157f431(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T158f1770(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T158f1769(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge781os12430;
extern T0* ge781ov12430;
extern T0* T157f426(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge781os12447;
extern T0* ge781ov12447;
extern T0* T157f422(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge781os12420;
extern T0* ge781ov12420;
extern T0* T157f424(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge781os12426;
extern T0* ge781ov12426;
extern T0* T157f420(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge781os12425;
extern T0* ge781ov12425;
extern T0* T157f418(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge781os12414;
extern T0* ge781ov12414;
extern T0* T157f416(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T157f412(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge781os12413;
extern T0* ge781ov12413;
extern T0* T157f414(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T158f1768(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T158f1767(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge781os12443;
extern T0* ge781ov12443;
extern T0* T157f405(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge781os12401;
extern T0* ge781ov12401;
extern T0* T157f403(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T158f1766(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T158f1765(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge781os12378;
extern T0* ge781ov12378;
extern T0* T157f394(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge781os12407;
extern T0* ge781ov12407;
extern T0* T157f392(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge781os12477;
extern T0* ge781ov12477;
extern T0* T157f390(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge781os12449;
extern T0* ge781ov12449;
extern T0* T157f34(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T157f389(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge781os12442;
extern T0* ge781ov12442;
extern T0* T157f396(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T158f1764(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge781os12405;
extern T0* ge781ov12405;
extern T0* T157f383(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge781os12433;
extern T0* ge781ov12433;
extern T0* T157f381(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge781os12458;
extern T0* ge781ov12458;
extern T0* T157f379(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge781os12459;
extern T0* ge781ov12459;
extern T0* T157f377(T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge781os12410;
extern T0* ge781ov12410;
extern T0* T157f375(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge781os12411;
extern T0* ge781ov12411;
extern T0* T157f373(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge781os12402;
extern T0* ge781ov12402;
extern T0* T157f371(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge781os12453;
extern T0* ge781ov12453;
extern T0* T157f369(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge781os12457;
extern T0* ge781ov12457;
extern T0* T157f367(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge781os12472;
extern T0* ge781ov12472;
extern T0* T157f363(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge781os12403;
extern T0* ge781ov12403;
extern T0* T157f177(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T157f365(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge781os12456;
extern T0* ge781ov12456;
extern T0* T157f385(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T246f321(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T634f77(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T634f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T634f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T634f73(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T634f72(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T634c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T634f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T158f1244(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T158f1243(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T246f172(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T297f72(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T297f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T297f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T297f68(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T158f1242(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T158f1241(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T246f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T633f76(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T633f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T633f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T633f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T633f71(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T633f70(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T633f69(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T633c68(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T633f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T158f1240(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T158f1239(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T246f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T292f76(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T292f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T292f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T292f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T292f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T292f70(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T292f69(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T158f1238(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T158f1237(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T614f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T609f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T609f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T609f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T609f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T609f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T158f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T158f1745(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T163f72(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T158f1763(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T158f1762(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T158f1761(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T158f1760(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T158f1759(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge781os12479;
extern T0* ge781ov12479;
extern T0* T157f466(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T158f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T158f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T158f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T158f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T158f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T158f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T158f1752(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T158f1751(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T158f1750(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T158f1749(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T158f1748(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T246f320(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T163f79(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T163f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T163f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T163f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T163f74(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T163f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T163c71(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T163f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T158f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T158f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T158f1234(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T158f1233(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T246f168(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T628f74(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T628f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T628f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T628f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T628f69(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T628c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T628f2(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T628f68p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T158f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T158f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T158f1230(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T158f1229(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T246f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T627f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T627f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T627f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T627f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T627f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T627f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T627f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T627f70(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T627c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T627f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T158f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T158f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T158f1226(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T158f1225(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T246f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T625f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T625f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T625f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T625f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T625f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T625f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T625f71(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T625f70(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T625c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T625f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T158f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T158f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T158f1222(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T158f1221(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T246f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T225f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T225c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge781os12557;
extern T0* ge781ov12557;
extern T0* T157f737(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T166c34(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T225f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T158f1220(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T158f1219(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T246f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T223f68(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T223c67(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T223f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T158f1218(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T158f1217(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T246f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T226f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T226c65(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T226f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T158f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T158f1215(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T158f1733(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T238f23(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T238f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T238f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T863f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T238f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T863f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T238f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T238f29(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T238f33(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T238f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T238f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T238f34(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T863f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T238f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T238f26(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T238f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T238f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T238f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T238f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T238f3(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T238f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T51f176(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.register_feature */
extern void T48f197(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T158f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T634f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T158f1214(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T246f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T158f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T158f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T158f1211(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T158f1732(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T396f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T396f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T395f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T395f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T238f20(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T238f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T863f2(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T238f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T238f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T238f19(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T158f1210(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T158f1209(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T158f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T239f23(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T239f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T239f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T864f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T239f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T864f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T239f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T239f29(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T239f33(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T239f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T239f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T239f34(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T864f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T239f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T239f26(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T239f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T239f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T239f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T239f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T239f3(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T239f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T158f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T163f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T158f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T158f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T158f1206(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T158f1205(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T158f1730(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T239f20(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T239f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T864f2(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T239f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T239f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T239f19(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T158f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T158f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T158f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T158f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T158f1200(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T158f1199(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T608f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T607f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T607f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T607f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T607f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T607f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T607c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T608f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1063c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T608c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T246f160(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T411c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge781os12526;
extern T0* ge781ov12526;
extern T0* T157f596(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T166c64(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T411f2(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T246f152(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T158f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T158f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T158f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T158f1195(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T497f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T158f1194(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T606f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T498f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T498f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T498f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T498f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T498f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T498c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T606f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1062c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T606c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T246f159(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T497c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge567os6047;
extern T0* ge567ov6047;
extern T0* T497f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T158f1193(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T158f1729(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T238f18(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T238f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T238f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T239f18(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T239f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T239f24(T0* C);
/* ET_CLASS.set_procedures */
extern void T55f168(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T148f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T148f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T238f2(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T55f167(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T146f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T146f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T239f2(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T158f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T158f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T158f1190(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T605f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T604f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T604f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T604f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T604f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T604f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T604c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T605f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1061c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T605c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T246f158(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T158f1189(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T910f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T158f1188(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T601f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T597f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T597f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T597f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T597f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T597f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T597c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T601f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1060c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T601c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T246f157(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T910f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T910c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T910f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge872os6047;
extern T0* ge872ov6047;
extern T0* T910f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T910f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T158f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T158f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T158f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T158f1184(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T599f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T592f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T592f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T592f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T592f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T592f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T592c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T599f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1059c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T599c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T246f156(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T600c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T600f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T158f1183(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T246f155(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T598c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge781os12485;
extern T0* ge781ov12485;
extern T0* T157f561(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T421c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T598f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T158f1182(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T595f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T594f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T594f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T594f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T594f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T594f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T594c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T595f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1058c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T595c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T246f154(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T158f1181(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T495f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T158f1180(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T590f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T496f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T496f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T496f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T590f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1057c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T590c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T246f153(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T495c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T495f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge558os6047;
extern T0* ge558ov6047;
extern T0* T495f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge781os12512;
extern T0* ge781ov12512;
extern T0* T157f595(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T166c63(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T495f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T158f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T158f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T158f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T158f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T158f1175(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T158f1174(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T585f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T537f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T537f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T537f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T537f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T537f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T246f149(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T158f1173(T0* C);
/* ET_CREATOR.put_first */
extern void T587f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T158f1172(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T589f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T588f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T588f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T588f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T588f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T588f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T588c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T589f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1056c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T589c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T246f151(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T587c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T587f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T587f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge781os12514;
extern T0* ge781ov12514;
extern T0* T157f600(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T166c68(void);
/* ET_CREATOR.tokens */
extern T0* T587f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T158f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T158f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T158f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T158f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T158f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T158f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T158f946(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T158f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T158f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T158f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T158f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T158f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T158f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T158f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T158f1158(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T586f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T494f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T494f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T494f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T494f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T494f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T494c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T586f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1055c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T586c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T158f1157(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T493f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T158f1156(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T246f150(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T493c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge562os6047;
extern T0* ge562ov6047;
extern T0* T493f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T158f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T158f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T158f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T158f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T158f1151(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T286f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T158f1150(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T584f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T560f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T560f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T560f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T560f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T560f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T560c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T584f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1053c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T584c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T246f148(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T286c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T286f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T286f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge781os12546;
extern T0* ge781ov12546;
extern T0* T157f605(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T166c73(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T286f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T158f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T158f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T158f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T158f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T158f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T158f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T158f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T158f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T158f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T158f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T158f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T158f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T158f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T158f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T158f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T158f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T158f1133(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T583f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T582f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T582f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T582f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T582f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T582f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T246f147(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T158f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T158f1131(T0* C);
/* ET_CLIENTS.put_first */
extern void T410f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T158f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T158f1129(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T580f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T573f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T573f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T573f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T573f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T573f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T573c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T580f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1051c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T580c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T246f146(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T410f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T410c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T410f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T410f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T410f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T158f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T158f1127(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T246f145(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T410c18(void);
/* ET_CLIENTS.make */
extern void T410f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T158f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T158f1125(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T158f1124(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T576f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T158f1123(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T579f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T577f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T577f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T577f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T577f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T577f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T577c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T579f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1050c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T579c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T246f143(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T576c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T576f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T576f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T158f1122(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T158f1121(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T575f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T572f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T572f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T572f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T572f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T572f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T572c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T575f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T575c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T246f144(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T158f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T158f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T158f1118(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T158f1117(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T246f142(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T574c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge781os12505;
extern T0* ge781ov12505;
extern T0* T157f716(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T166c28(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T574f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T158f1116(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T570f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T559f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T559f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T559f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T559f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T559f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T559c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T570f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1048c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T570c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T158f1115(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T285f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T158f1114(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T246f141(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T285c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T285f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge565os6047;
extern T0* ge565ov6047;
extern T0* T285f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge781os12524;
extern T0* ge781ov12524;
extern T0* T157f589(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T166c57(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T285f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T158f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T158f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T158f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T158f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T158f1109(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T158f1108(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T569f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T565f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T565f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T565f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T565f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T565f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T565c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T569f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1047c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T569c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T246f140(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T568c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge781os12506;
extern T0* ge781ov12506;
extern T0* T157f571(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T166c39(void);
/* ET_RENAME.tokens */
extern T0* T568f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T158f1107(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T246f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T158f1106(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T284f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T158f1105(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T563f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T558f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T558f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T558f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T558f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T558f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T558c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T563f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1046c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T563c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T246f138(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T284c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T284f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge590os6047;
extern T0* ge590ov6047;
extern T0* T284f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge781os12548;
extern T0* ge781ov12548;
extern T0* T157f592(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T166c60(void);
/* ET_RENAME_LIST.tokens */
extern T0* T284f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T158f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T158f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T158f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T158f1101(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T158f1100(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T562f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T561f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T561f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T561f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T561f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T561f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T561c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T562f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1045c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T562c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T246f137(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T158f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T158f1098(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T287f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T158f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T158f1096(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T158f1095(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T554f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T492f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T492f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T492f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T492f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T492f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T492c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T554f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1043c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T554c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T246f136(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T287c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T287f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge585os6047;
extern T0* ge585ov6047;
extern T0* T287f5(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge781os12532;
extern T0* ge781ov12532;
extern T0* T157f597(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T166c65(void);
/* ET_PARENT_LIST.tokens */
extern T0* T287f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T158f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T158f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T158f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T158f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T158f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T158f1089(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T557f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T556f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T556f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T556f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T556f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T556f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T556c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T557f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1044c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T557c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T158f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T246f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T282c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T282f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T282f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T392f12(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T160f11(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T55f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T392f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T158f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T158f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T158f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T158f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T158f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T158f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T158f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T158f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T158f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T158f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T158f1078(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T158f1077(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T553f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T491f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T491f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T491f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T491f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T491f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T491c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T553f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1042c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T553c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T246f135(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T158f1076(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T158f1075(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T550f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T548f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T548f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T548f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T548f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T548f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T548c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T550f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1041c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T550c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T246f134(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T246f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T551c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T158f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T158f1073(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T158f1728(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T538f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T246f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T552c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T538f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T538f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T158f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T158f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T158f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T158f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T158f1068(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T546f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T539f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T539f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T539f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T539f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T539f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T539c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T546f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1040c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T546c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T246f130(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T538f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T538c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T538f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge847os6047;
extern T0* ge847ov6047;
extern T0* T538f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T538f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T158f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T158f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T158f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T158f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T158f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T158f1062(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T246f131(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T158f1061(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T158f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T246f315(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T540c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T246f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T902c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T158f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T158f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T158f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T158f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T158f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T158f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T158f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T158f1053(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T541f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T531f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T531f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T531f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T531f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T531f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T158f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T158f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T158f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T158f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T158f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T158f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T158f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T158f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T158f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T158f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T158f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T158f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T158f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T158f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T158f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T158f1037(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T533f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T158f1036(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T535f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T534f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T534f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T534f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T534f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T534f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T534c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T535f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1037c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T535c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T246f128(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T533c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T533f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T533f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T533f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T158f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T158f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T158f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T158f1032(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T158f1031(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T530f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T525f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T525f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T525f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T525f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T525f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T158f1727(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T400f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T400f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T400f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T400f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T246f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T532f64(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T532c63(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T532f65(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge781os12481;
extern T0* ge781ov12481;
extern T0* T157f567(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T421c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T532f2(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T158f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T158f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T158f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T158f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T158f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T158f1026(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T158f1025(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T246f126(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T524f62(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T524c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T158f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T158f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T158f1022(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T528f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T527f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T527f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T527f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T527f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T527f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T527c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T528f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1035c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T528c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T246f125(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T158f1021(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T392f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T532f67(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T524f63(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T392f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T392f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T158f1020(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T523f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T522f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T522f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T522f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T522f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T522f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T522c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T523f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1034c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T523c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T246f124(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T392f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T392c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T392f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge572os6047;
extern T0* ge572ov6047;
extern T0* T392f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T392f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T158f1019(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T158f1018(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T158f1724(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T400f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T400f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T400f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1000f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1000f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T392f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T532f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T400f1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T392f2(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T55f166(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T158f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T158f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T158f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T158f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T158f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T158f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T158f1011(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T55f162(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T55f161(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T55f169(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T55f160(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T158f578(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T52f202(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T55f29(T0* C);
/* ET_CLASS.set_name */
extern void T55f174(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T158f875(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T158f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T158f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T158f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T158f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T521f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T514f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T514f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T514f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T514f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T514f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T514c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T521f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1033c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T521c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T246f123(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T158f1006(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T515f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T511f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T511f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T511f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T511f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T511f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T511c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T515f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1032c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T515c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T246f122(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T518c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T518f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T158f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T158f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T158f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T158f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T158f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T158f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T158f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T158f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T158f997(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T158f996(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T512f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T505f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T505f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T505f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T505f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T505f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T505c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T512f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1031c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T512c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T246f121(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T158f995(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T246f120(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T158f994(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T158f993(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T507f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T503f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T503f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T503f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T503f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T503f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T503c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T507f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1030c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T507c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T246f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T158f992(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T246f117(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T158f991(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T158f990(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T501f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T489f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T489f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T489f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T489f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T489f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T489c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T501f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1029c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T501c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T158f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T158f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T158f987(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T158f986(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T246f116(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T158f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T158f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T158f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T158f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T158f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T158f980(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T158f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T158f1718(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T401f38(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T401f52(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T401f51(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T401f50(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T401f49(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T401f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1001f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1001f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T401f41(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T401f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T401f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T401f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T401f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T401f56(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T401f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T401f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T401f3(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T401f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T401f2(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T401f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T401f39(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T401f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T401f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T401f27(T0* C);
/* ET_CLASS.set_providers */
extern void T55f165(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T158f978(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T158f1717(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T158f1716(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T52f188(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T875c616(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T52f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f22(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T51f175(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_void_seed */
extern void T48f196(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge781os12474;
extern T0* ge781ov12474;
extern T0* T157f178(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T51f174(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_copy_seed */
extern void T48f195(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T52f187(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T875c615(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T52f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T51f173(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_default_create_seed */
extern void T48f194(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T55f203(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T55f202(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T55f201(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T55f200(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T55f199(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T55f198(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T55f197(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T55f196(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T282f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T287f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T287f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T158f977(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T158f976(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T55f195(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T158f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T158f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T158f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T158f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T158f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T158f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T158f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T158f968(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T158f967(T0* C);
/* ET_CLASS.set_leading_break */
extern void T55f194(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T158f966(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T158f929(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T473f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T472f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T472f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T472f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T472f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T472f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T472c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T473f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1027c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T473c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T470f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T469f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T469f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T469f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T469f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T469f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T469c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T470f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1026c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T470c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T464f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T463f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T463f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T463f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T463f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T463f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T463c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T464f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1024c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T464c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T461f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T460f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T460f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T460f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T460f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T460f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T460c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T461f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1023c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T461c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T458f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T457f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T457f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T457f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T457f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T457f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T457c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T458f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1022c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T458c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T455f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T454f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T454f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T454f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T454f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T454f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T454c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T455f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1021c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T455c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T453f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T452f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T452f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T452f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T452f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T452f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T452c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T453f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1020c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T453c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T448f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T447f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T447f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T447f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T447f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T447f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T447c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T448f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1018c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T448c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T445f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T444f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T444f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T444f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T444f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T444f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T444c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T445f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1017c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T445c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T442f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T441f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T441f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T441f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T441f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T441f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T441c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T442f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1016c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T442c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T439f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T438f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T438f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T438f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T438f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T438f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T438c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T439f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1015c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T439c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T434f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T433f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T433f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T433f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T433f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T433f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T433c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T434f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1013c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T434c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T431f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T430f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T430f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T430f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T430f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T430f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T430c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T431f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1012c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T431c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T428f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T427f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T427f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T427f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T427f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T427f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T427c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T428f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1011c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T428c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T425f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T424f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T424f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T424f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T424f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T424f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T424c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T425f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1010c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T425c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T420f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T419f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T419f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T419f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T419f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T419f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T419c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T420f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1008c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T420c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T417f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T416f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T416f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T416f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T416f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T416f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T416c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T417f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1007c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T417c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T158f928(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T158f926(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T158f945(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T158f951(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T158f955(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T158f381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T158f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T158f965(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T158f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T158f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T158f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T158f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T158f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T158f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T158f925(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T158f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T158f964(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T158f953(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T246f15(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T246f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T246f13(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T482f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T482c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T482f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T158f883(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T246f12(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T481f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T481c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T481f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T246f11(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T480f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T480c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T480f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T246f10(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T479f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T479c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T479f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T246f9(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T478f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T478c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T478f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T246f8(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T426f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T426c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T426f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T52f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T52f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T52f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T52f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T52f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T246f7(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T477f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T158f886(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T477c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T477f34(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T158f889(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T246f6(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T476f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T158f885(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T476c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T476f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T158f406(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T158f404(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T158f1744(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T158f402(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T158f963(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T246f5(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T475f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T52f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f169(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T246f4(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T474f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T158f884(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T474c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T474f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T158f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T246f115(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T487f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T487c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T487f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T52f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T52f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T158f961(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T246f114(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T486f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T486c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T486f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T52f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T246f3(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T440f47(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T440c46(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T440f4(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T440f48(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T440f49(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T158f954(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T158f960(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T158f959(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T246f113(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T166f27(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T166c38(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T246f112(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T418f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T246f111(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T246f110(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge781os12508;
extern T0* ge781ov12508;
extern T0* T157f607(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T166c75(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T246f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge781os12556;
extern T0* ge781ov12556;
extern T0* T157f606(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T166c74(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T246f108(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T166c37(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T246f107(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T246f106(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge781os12539;
extern T0* ge781ov12539;
extern T0* T157f604(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T166c72(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T246f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge781os12530;
extern T0* ge781ov12530;
extern T0* T157f603(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T166c71(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T246f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge781os12525;
extern T0* ge781ov12525;
extern T0* T157f602(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T166c70(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T246f103(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T166c36(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T246f102(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T246f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T246f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T246f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T246f98(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge781os12533;
extern T0* ge781ov12533;
extern T0* T157f598(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T166c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T246f97(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T246f96(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T446f47(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T446c51(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T246f95(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T246f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T246f93(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T182f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T246f92(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T246f91(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge781os12552;
extern T0* ge781ov12552;
extern T0* T157f594(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T166c62(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T246f90(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T206f28(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T246f89(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T246f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T246f87(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge781os12545;
extern T0* ge781ov12545;
extern T0* T157f591(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T166c59(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T246f86(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T246f85(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T166c33(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T246f84(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T246f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T246f82(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge781os12520;
extern T0* ge781ov12520;
extern T0* T157f588(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T166c56(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T246f81(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T246f80(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge781os12507;
extern T0* ge781ov12507;
extern T0* T157f586(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T166c54(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T246f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge781os12558;
extern T0* ge781ov12558;
extern T0* T157f585(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T166c53(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T246f78(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T246f77(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T456f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T456c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T456f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T456f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T456f2(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T246f76(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T246f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T246f74(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T485f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T485c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T485f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T485f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T485f2(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T246f73(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T246f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T246f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T246f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T246f69(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T415f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T246f68(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T246f67(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T462f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T462c24(void);
/* ET_VOID.make_token */
extern void T462f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T462f27(T0* C);
/* ET_VOID.tokens */
extern T0* T462f2(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T246f66(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T484f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T484c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T484f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T484f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T484f2(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T246f65(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T246f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T246f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T246f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T246f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T246f60(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T446c50(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T246f59(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T246f58(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T446c49(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T246f57(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T246f55(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T246f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T246f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T246f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T246f51(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge781os12529;
extern T0* ge781ov12529;
extern T0* T157f573(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T166c41(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T246f50(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T246f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T246f2(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T158f958(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T246f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T246f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T246f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T246f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T246f44(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T421f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T246f43(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T459f58(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T459c68(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T459f69(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T246f42(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T246f41(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T459c67(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T246f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T459c66(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T246f39(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T421c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T246f38(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T459c65(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T158f389(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T158f957(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T158f956(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T246f37(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge781os12500;
extern T0* ge781ov12500;
extern T0* T157f565(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T421c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T246f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T246f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T246f34(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T468f82(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T246f33(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T246f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T246f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T246f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T246f29(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T471f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T246f28(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T246f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T246f26(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge781os12486;
extern T0* ge781ov12486;
extern T0* T157f560(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T421c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T246f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T157f559(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T465c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T465f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T465f2(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T246f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge781os12488;
extern T0* ge781ov12488;
extern T0* T157f558(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T421c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T246f23(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T459c64(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T246f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T459c63(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T246f21(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T421c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T246f20(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T459c62(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T246f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T459c61(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T246f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T459c60(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T246f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T459c59(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T246f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T459c57(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T158f388(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T158f936(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T158f952(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T158f281(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T158f935(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T158f280(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T158f279(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T158f934(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T158f924(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T158f933(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T158f950(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T158f1714(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T158f1738(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T692f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T719f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T723f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T671f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T597f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T604f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T602f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T779f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T739f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T558f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T565f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T609f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T610f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T618f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T624f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T492f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T561f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T556f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T755f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T491f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T520f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T741f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T745f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T777f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T668f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T620f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T657f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T659f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T543f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T560f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T500f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T685f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T698f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T774f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T505f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T514f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T511f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T503f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T489f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T696f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T522f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T527f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T525f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T626f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T650f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T651f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T537f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T566f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T577f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T498f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T607f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T631f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T567f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T757f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T663f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T559f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T572f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T713f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T715f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T702f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T494f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T588f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T517f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T496f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T594f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T592f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T531f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T534f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T539f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T548f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T615f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T622f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T573f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T582f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T385f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T725f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T731f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T734f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T729f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T686f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T772f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T691f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T781f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T613f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T644f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T793f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T791f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T806f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T804f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T555f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T676f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T707f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T472f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T469f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T466f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T463f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T460f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T457f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T454f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T452f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T449f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T447f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T444f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T120f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T441f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T438f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T436f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T433f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T430f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T427f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T424f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T422f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T419f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T416f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T413f6(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T117f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T158f927(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T158f71(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T158f868(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T398f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T398f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T397f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T397f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER].wipe_out */
extern void T394f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER].clear_items */
extern void T394f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T158f47(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T158f46(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T158f865(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T158f45(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T158f864(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T158f863(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T158f862(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T158f44(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge956os14262;
extern T0* ge956ov14262;
extern T0* T158f860(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T158f43(T0* C);
/* ET_XACE_UNIVERSE.parse_all */
extern void T48f168(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T53f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T59c193(T0* a1);
/* DS_CELL [INTEGER].make */
extern T0* T235c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge933os7777;
extern T0* ge933ov7777;
extern T0* T59f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T59f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge933os7776;
extern T0* ge933ov7776;
extern T0* T59f4(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T59f198(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T59f201(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T59f46(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_mode */
extern void T53f46(T0* C, T1 a1);
/* GEC.is_cat */
extern T1 T21f18(T0* C);
/* ET_SYSTEM.make */
extern T0* T53c45(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T53f49(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T141c8(T0* a1);
/* GEC.is_verbose */
extern T1 T21f17(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T51f162(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T51f177(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T51f188(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T51f187(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge781os12359;
extern T0* ge781ov12359;
extern T0* T157f97(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge781os12374;
extern T0* ge781ov12374;
extern T0* T157f96(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge781os12366;
extern T0* ge781ov12366;
extern T0* T157f93(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge781os12361;
extern T0* ge781ov12361;
extern T0* T157f88(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T289c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T910c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T910f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge781os12377;
extern T0* ge781ov12377;
extern T0* T157f83(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge781os12355;
extern T0* ge781ov12355;
extern T0* T157f82(T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge781os12344;
extern T0* ge781ov12344;
extern T0* T157f50(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T51f77(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T51f186(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge260os1588;
extern T0* ge260ov1588;
extern T0* T51f64(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T51f185(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T51f184(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T51f183(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T51f182(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T51f181(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T51f180(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T51f179(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_ise_version */
extern void T48f166(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_keyword_usage */
extern void T48f180(T0* C);
/* ET_XACE_UNIVERSE.set_ecma_version */
extern void T48f191(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T48f190(T0* C);
/* ET_XACE_UNIVERSE.tokens */
extern T0* T48f71(T0* C);
/* ET_XACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T48f189(T0* C);
/* ET_XACE_UNIVERSE.ise_5_7_60362 */
extern T0* T48f57(T0* C);
/* ET_XACE_UNIVERSE.set_use_void_keyword */
extern void T48f188(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_reference_keyword */
extern void T48f187(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_recast_keyword */
extern void T48f186(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_create_keyword */
extern void T48f185(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_convert_keyword */
extern void T48f184(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_attribute_keyword */
extern void T48f183(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_assign_keyword */
extern void T48f182(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge260os1593;
extern T0* ge260ov1593;
extern T0* T21f16(T0* C);
/* UT_VERSION.make_latest */
extern T0* T58c16(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T52f152(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f152(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T51f161(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_error_handler */
extern void T48f165(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T52c151(void);
/* GEC.is_silent */
extern T1 T21f15(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f45(T0* C, T14 a1);
/* GEC.parse_ace_file */
extern void T21f30(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T49f1(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T49f211(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T49f215(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T49f228(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T49f227(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T49f226(T0* C, T6 a1);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T49f145(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T137f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T137f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T137f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T111f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T137c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T136f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T135f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T135f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T135f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T135f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T135f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T135c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T136f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T381c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T136c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T137f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T126f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T49f142(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T111f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T126c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T125f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T376f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T376f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T376f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T376f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T49f141(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T111f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T125c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T376f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T376c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T376f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T991c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T134f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T128f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T128f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T128f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T128f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T128f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T128c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T134f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T380c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T134c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T124f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T124c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T133f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T131f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T131f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T131f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T131f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T131f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T131c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T133f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T379c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T133c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T49f135(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T112f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T112f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T112f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T112f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T112f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T112f14(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T112f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T112f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T112f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T112f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T112f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T112f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T112f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T112f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T112f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T112f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T112f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T112f46(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T367f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T119f32(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T119f39(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T112f41(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T111f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T49f132(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T49f239(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T50f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T50f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T50f5(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T99c7(T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T49f189(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T112f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T112f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T112f1(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T112f37(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T123f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T49f130(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T111f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T122c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T375f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T129f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T127f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T127f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T127f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T127f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T127f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T127c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T129f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T377c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T129c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T49f126(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge979os4860;
extern T0* ge979ov4860;
extern T0* T49f204(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T49f169(T0* C, T0* a1);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge979os4861;
extern T0* ge979ov4861;
extern T0* T49f202(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T115f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T115f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T115f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T115f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T115f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T115f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T115f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T115f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T115f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T115f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T115f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T115f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T115f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T115f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T115f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T115f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T115f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T115f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T115f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T115f45(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge979os4862;
extern T0* ge979ov4862;
extern T0* T49f201(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T51f172(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T51f171(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T51f170(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T51f169(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T49f124(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T111f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T51c160(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T270c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T51f178(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge781os12360;
extern T0* ge781ov12360;
extern T0* T157f102(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge781os12372;
extern T0* ge781ov12372;
extern T0* T157f101(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge781os12358;
extern T0* ge781ov12358;
extern T0* T157f100(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge781os12371;
extern T0* ge781ov12371;
extern T0* T157f99(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge781os12373;
extern T0* ge781ov12373;
extern T0* T157f98(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge781os12376;
extern T0* ge781ov12376;
extern T0* T157f95(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge781os12375;
extern T0* ge781ov12375;
extern T0* T157f94(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge781os12370;
extern T0* ge781ov12370;
extern T0* T157f92(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge781os12369;
extern T0* ge781ov12369;
extern T0* T157f91(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge781os12368;
extern T0* ge781ov12368;
extern T0* T157f90(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge781os12367;
extern T0* ge781ov12367;
extern T0* T157f89(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge781os12365;
extern T0* ge781ov12365;
extern T0* T157f87(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge781os12364;
extern T0* ge781ov12364;
extern T0* T157f86(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge781os12363;
extern T0* ge781ov12363;
extern T0* T157f85(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge781os12362;
extern T0* ge781ov12362;
extern T0* T157f84(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge781os12357;
extern T0* ge781ov12357;
extern T0* T157f81(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge781os12356;
extern T0* ge781ov12356;
extern T0* T157f80(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge781os12354;
extern T0* ge781ov12354;
extern T0* T157f79(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge781os12348;
extern T0* ge781ov12348;
extern T0* T157f77(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge781os12347;
extern T0* ge781ov12347;
extern T0* T157f76(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge781os12335;
extern T0* ge781ov12335;
extern T0* T157f75(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge781os12313;
extern T0* ge781ov12313;
extern T0* T157f74(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge781os12321;
extern T0* ge781ov12321;
extern T0* T157f73(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge781os12337;
extern T0* ge781ov12337;
extern T0* T157f72(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge781os12338;
extern T0* ge781ov12338;
extern T0* T157f71(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge781os12342;
extern T0* ge781ov12342;
extern T0* T157f70(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge781os12350;
extern T0* ge781ov12350;
extern T0* T157f69(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge781os12351;
extern T0* ge781ov12351;
extern T0* T157f68(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge781os12336;
extern T0* ge781ov12336;
extern T0* T157f67(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge781os12341;
extern T0* ge781ov12341;
extern T0* T157f66(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge781os12340;
extern T0* ge781ov12340;
extern T0* T157f65(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge781os12333;
extern T0* ge781ov12333;
extern T0* T157f64(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge781os12332;
extern T0* ge781ov12332;
extern T0* T157f63(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge781os12331;
extern T0* ge781ov12331;
extern T0* T157f62(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge781os12330;
extern T0* ge781ov12330;
extern T0* T157f61(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge781os12327;
extern T0* ge781ov12327;
extern T0* T157f60(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge781os12326;
extern T0* ge781ov12326;
extern T0* T157f59(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge781os12325;
extern T0* ge781ov12325;
extern T0* T157f58(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge781os12324;
extern T0* ge781ov12324;
extern T0* T157f57(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge781os12319;
extern T0* ge781ov12319;
extern T0* T157f56(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge781os12318;
extern T0* ge781ov12318;
extern T0* T157f55(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge781os12316;
extern T0* ge781ov12316;
extern T0* T157f54(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge781os12328;
extern T0* ge781ov12328;
extern T0* T157f53(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge781os12343;
extern T0* ge781ov12343;
extern T0* T157f52(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge781os12314;
extern T0* ge781ov12314;
extern T0* T157f51(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge781os12346;
extern T0* ge781ov12346;
extern T0* T157f49(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge781os12345;
extern T0* ge781ov12345;
extern T0* T157f48(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge781os12315;
extern T0* ge781ov12315;
extern T0* T157f47(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge781os12349;
extern T0* ge781ov12349;
extern T0* T157f46(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T281c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T281f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge781os12334;
extern T0* ge781ov12334;
extern T0* T157f45(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge781os12322;
extern T0* ge781ov12322;
extern T0* T157f44(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T140f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T383f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T51f57(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T140c39(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T140f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T383c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T383f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T992c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T140f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T140f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T140f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T140f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T140f55(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T111f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T246c333(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T111f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c151(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T115f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T115f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T115f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T372f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T115f58(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T372f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T115f2(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T115f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T115f1(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T115f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T115f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T115f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T115f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T115f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T49f225(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T49f224(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T49f222(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T49f238(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T49f221(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T49f237(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T49f191(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T49f10(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T49f188(T0* C);
/* ET_LACE_PARSER.set_start_condition */
extern void T49f243(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T49f185(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T897f2(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T49f168(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T49f160(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T49f236(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T49f242(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T49f111(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T49f235(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T49f233(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T49f110(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T49f109(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T49f234(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T72f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T72f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T72f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T49f157(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T49f38(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T49f220(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T49f229(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T49f240(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T49f244(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T49f246(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T128f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T135f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T131f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T127f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T130f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T49f223(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T115f37(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T115f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T115f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T115f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T115f47(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T115f46(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T49f214(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T49f219(T0* C);
/* YY_BUFFER.set_position */
extern void T114f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T113f19(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T49f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T112f36(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T112f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T112f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T112f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T112f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T112f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T371f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T371f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T49f213(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T49f218(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T49c210(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T49f212(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T49f217(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T49f232(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge978os4805;
extern T0* ge978ov4805;
extern T0* T49f156(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T49f207(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge978os4804;
extern T0* ge978ov4804;
extern T0* T49f155(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge978os4803;
extern T0* ge978ov4803;
extern T0* T49f154(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge978os4802;
extern T0* ge978ov4802;
extern T0* T49f153(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge978os4801;
extern T0* ge978ov4801;
extern T0* T49f152(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge978os4800;
extern T0* ge978ov4800;
extern T0* T49f151(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge978os4799;
extern T0* ge978ov4799;
extern T0* T49f150(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge978os4798;
extern T0* ge978ov4798;
extern T0* T49f149(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge978os4797;
extern T0* ge978ov4797;
extern T0* T49f148(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge978os4796;
extern T0* ge978ov4796;
extern T0* T49f147(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T49f231(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T49f216(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T49f230(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T49f241(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T49f245(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge980os5237;
extern T0* ge980ov5237;
extern T0* T49f199(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T49f209(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge980os5236;
extern T0* ge980ov5236;
extern T0* T49f198(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge980os5235;
extern T0* ge980ov5235;
extern T0* T49f197(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge980os5234;
extern T0* ge980ov5234;
extern T0* T49f196(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge980os5233;
extern T0* ge980ov5233;
extern T0* T49f195(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge980os5232;
extern T0* ge980ov5232;
extern T0* T49f194(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge980os5231;
extern T0* ge980ov5231;
extern T0* T49f193(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T49f57(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T115c36(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T115f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T372c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T115f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T115f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T115f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T115f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T112c35(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T112f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T369c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T369f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T989c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T112f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T371c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T112f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T112f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T112f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T112f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T112f57(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T367c2(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T111c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T50c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T50f2(T0* C);
/* GEC.parse_ecf_file */
extern void T21f29(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f28(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T39f1(T0* C);
/* ET_XACE_UNIVERSE_PARSER.parse_file */
extern void T38f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T96f2(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T96f7(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T96f6(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T96f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T96f12(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c37(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T96f4(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T322f1(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T96f9(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T96f15(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T323f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T323f2(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T323f1(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T322f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T963f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T963f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T963c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T322f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T322c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T322f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T964c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T323f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T965f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T965c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T323c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T39f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T39f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T39f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T88f4(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T91f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T39f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T880c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T320f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T320f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T86f1(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T891f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T892f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T892f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T891f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T892f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T891f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T891f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T892f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T891f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T892f3(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T891f2(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T891f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T892f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T892f1(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T891c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T91f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T256f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T84f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T84f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T256f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T84f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T256f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T85f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T85f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T85f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T39f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T882c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T91f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T91f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1033os3910;
extern T0* ge1033ov3910;
extern T0* T91f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1033os3885;
extern T0* ge1033ov3885;
extern T0* T91f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1033os3908;
extern T0* ge1033ov3908;
extern T0* T91f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1033os3911;
extern T0* ge1033ov3911;
extern T0* T91f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1033os3894;
extern T0* ge1033ov3894;
extern T0* T91f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1033os3907;
extern T0* ge1033ov3907;
extern T0* T91f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T39f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T39f17(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T39f18(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T267c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1033os3898;
extern T0* ge1033ov3898;
extern T0* T91f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T91f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1033os3906;
extern T0* ge1033ov3906;
extern T0* T91f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1033os3905;
extern T0* ge1033ov3905;
extern T0* T91f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1033os3904;
extern T0* ge1033ov3904;
extern T0* T91f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1033os3903;
extern T0* ge1033ov3903;
extern T0* T91f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1033os3902;
extern T0* ge1033ov3902;
extern T0* T91f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1033os3901;
extern T0* ge1033ov3901;
extern T0* T91f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1033os3900;
extern T0* ge1033ov3900;
extern T0* T91f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1033os3890;
extern T0* ge1033ov3890;
extern T0* T91f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T39f25(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T886c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1033os3889;
extern T0* ge1033ov3889;
extern T0* T886f7(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].has */
extern T1 T259f35(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1003os4077;
extern T0* ge1003ov4077;
extern T0* T311f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].put_new */
extern void T259f40(T0* C, T6 a1, T0* a2);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T311f29(T0* C);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge990os9888;
extern T0* ge990ov9888;
extern T0* T91f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T311c192(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T85f5(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T256f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T84f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T256f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T84f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T85f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T85f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T85f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T85f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T85f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1309f2(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1309c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1033os3897;
extern T0* ge1033ov3897;
extern T0* T91f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T91f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T91f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T39f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T885c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1033os3912;
extern T0* ge1033ov3912;
extern T0* T91f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1033os3893;
extern T0* ge1033ov3893;
extern T0* T91f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T91f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T91f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T91f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T39f23(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T884c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T91f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T39f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T264c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1033os3888;
extern T0* ge1033ov3888;
extern T0* T91f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1033os3896;
extern T0* ge1033ov3896;
extern T0* T91f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T256f2(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T256f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T84f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T85f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T85f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T256c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T91f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1033os3886;
extern T0* ge1033ov3886;
extern T0* T91f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T85f7(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T85f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T85f12(T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T1213f1(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1213f3(T0* C);
/* XM_ELEMENT.has_namespace */
extern T1 T85f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1309f4(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T39f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T883c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T85f6(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1033os3884;
extern T0* ge1033ov3884;
extern T0* T91f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T39f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T881c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T85f4(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T91f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1033os3883;
extern T0* ge1033ov3883;
extern T0* T91f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T91f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].wipe_out */
extern void T93f37(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_wipe_out */
extern void T93f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_wipe_out */
extern void T93f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_wipe_out */
extern void T93f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_wipe_out */
extern void T93f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].unset_found_item */
extern void T93f41(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].move_all_cursors_after */
extern void T93f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_next_cursor */
extern void T316f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_position */
extern void T316f5(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_root_class_name */
extern void T48f173(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_class */
extern void T48f192(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_universe */
extern T0* T38f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE.mount_libraries */
extern void T48f174(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T253f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T247f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T250f57(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T247f9(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T250f58(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T247f13(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T254f3(T0* C, T6 a1);
/* ET_XACE_UNIVERSE_PARSER.fill_system */
extern void T38f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.set_libraries */
extern void T48f179(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_options */
extern void T48f178(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_creation_procedure_name */
extern void T48f177(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_creation */
extern void T48f193(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_system_name */
extern void T48f176(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_clusters */
extern void T48f175(T0* C, T0* a1);
/* ET_XACE_LIBRARY.merge_libraries */
extern void T258f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T253f9(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T252f10(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T252f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T252f7(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T252f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T39f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T1380c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T253f4(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T253f3(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T253f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T254f1(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T247f6(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T250f55(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_externals */
extern void T38f234(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T250f44(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T916f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1152f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1152c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T916f3(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T916c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T916f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1151c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_export */
extern T0* T38f133(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T251f130(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T879f1(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T262f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T879f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1146f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1146c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T879c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T879f4(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1145c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_exported_feature */
extern T0* T38f226(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T83f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T878c3(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_alias */
extern unsigned char ge1033os3909;
extern T0* ge1033ov3909;
extern T0* T38f228(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_feature */
extern T0* T38f225(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T83f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T262c4(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_export */
extern T0* T38f132(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T251f138(T0* C, T0* a1);
/* DS_HASH_SET [STRING].force_last */
extern void T192f68(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_include_dir */
extern T0* T38f131(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T251f149(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].set_equality_tester */
extern void T76f39(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_location */
extern T0* T38f130(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_link_library */
extern T0* T38f129(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T83f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T251c104(void);
/* ET_XACE_UNIVERSE_PARSER.uc_external */
extern T0* T38f30(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_options */
extern T0* T38f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_options */
extern void T38f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.uc_debug */
extern T0* T38f128(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_optimize */
extern T0* T38f127(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_check */
extern T0* T38f125(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_loop */
extern T0* T38f122(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_invariant */
extern T0* T38f120(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_ensure */
extern T0* T38f118(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_enable */
extern unsigned char ge1033os3899;
extern T0* ge1033ov3899;
extern T0* T38f116(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_require */
extern T0* T38f115(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T251f184(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T917f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T917f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T917c5(void);
/* UT_TRISTATE.set_undefined */
extern void T917f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T251f183(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1002os17496;
extern T0* ge1002ov17496;
extern T0* T251f9(T0* C);
/* DS_HASH_SET [STRING].put_last */
extern void T192f67(T0* C, T0* a1);
/* DS_HASH_SET [STRING].compress */
extern void T192f69(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors */
extern void T192f71(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].key_storage_put */
extern void T192f70(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.options */
extern T0* T251f17(T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T251f182(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T251f181(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T251f180(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T251f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T251f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T251f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T251f176(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1002os17494;
extern T0* ge1002ov17494;
extern T0* T251f8(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T251f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T251f174(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T251f173(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T251f172(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T251f171(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T251f170(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T251f169(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T251f168(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T251f167(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T251f166(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T251f165(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T251f164(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T251f163(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T251f162(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T251f161(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T251f160(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T251f159(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T251f158(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T251f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T251f156(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T251f155(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T251f154(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T251f153(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T251f152(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T251f151(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T251f150(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1002os17493;
extern T0* ge1002ov17493;
extern T0* T251f7(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T251f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T251f147(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T251f146(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T251f145(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1002os17492;
extern T0* ge1002ov17492;
extern T0* T251f6(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T251f144(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T251f143(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T251f142(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1002os17491;
extern T0* ge1002ov17491;
extern T0* T251f5(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T251f141(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T251f140(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T251f139(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T251f137(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T251f136(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T251f135(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1002os17490;
extern T0* ge1002ov17490;
extern T0* T251f4(T0* C);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T251f134(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T39f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T266c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T251f133(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T251f132(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T251f131(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T251f129(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T251f128(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T251f127(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T251f126(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T251f125(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T251f124(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T251f123(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T251f122(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T251f121(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1002os17489;
extern T0* ge1002ov17489;
extern T0* T251f3(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T251f120(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T251f119(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T251f118(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T251f117(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T251f116(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T251f115(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T251f114(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T251f113(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T251f112(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T251f111(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1002os17488;
extern T0* ge1002ov17488;
extern T0* T251f2(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T39f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T265c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T265f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T251f110(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1002os17487;
extern T0* ge1002ov17487;
extern T0* T251f1(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T251f109(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T251f108(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T251f107(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T251f106(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T39f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T263c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_UNIVERSE_PARSER.is_false */
extern T1 T38f114(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T251f105(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.is_true */
extern T1 T38f113(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.option_codes */
extern T0* T38f32(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_equality_tester */
extern T0* T38f13(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_value */
extern T0* T38f31(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_option */
extern T0* T38f28(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T253f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T254f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T254f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T919f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T918f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T918f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T918f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T918f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T918f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T918c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T254f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T254f9(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T83f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T253c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T254c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T254f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T920c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T919f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1153c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T919c3(void);
/* ET_XACE_UNIVERSE_PARSER.new_mount */
extern T0* T38f27(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T252f9(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T83f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T252c8(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T39f27(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.parse_library */
extern void T95f222(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_library */
extern void T95f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY.set_libraries */
extern void T258f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY.set_clusters */
extern void T258f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.fill_externals */
extern void T95f225(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.new_export */
extern T0* T95f124(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_exported_feature */
extern T0* T95f217(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_alias */
extern T0* T95f219(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_feature */
extern T0* T95f216(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_class */
extern T0* T95f127(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_export */
extern T0* T95f123(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_include_dir */
extern T0* T95f122(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_location */
extern T0* T95f121(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_link_library */
extern T0* T95f120(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_external */
extern T0* T95f21(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_options */
extern T0* T95f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_options */
extern void T95f224(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_PARSER.uc_debug */
extern T0* T95f119(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_optimize */
extern T0* T95f118(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_check */
extern T0* T95f116(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_loop */
extern T0* T95f113(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_invariant */
extern T0* T95f111(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_ensure */
extern T0* T95f109(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_enable */
extern T0* T95f107(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_require */
extern T0* T95f106(T0* C);
/* ET_XACE_LIBRARY_PARSER.is_false */
extern T1 T95f105(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.is_true */
extern T1 T95f104(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.option_codes */
extern T0* T95f23(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_equality_tester */
extern T0* T95f4(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_value */
extern T0* T95f22(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_option */
extern T0* T95f19(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_mount */
extern T0* T95f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.execution_environment */
extern T0* T95f131(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_mount */
extern T0* T95f17(T0* C);
/* ET_XACE_LIBRARY.set_library_prefix */
extern void T258f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_prefix */
extern unsigned char ge1033os3895;
extern T0* ge1033ov3895;
extern T0* T95f16(T0* C);
/* ET_XACE_LIBRARY.set_options */
extern void T258f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.new_cluster */
extern T0* T95f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_libraries */
extern void T250f50(T0* C, T0* a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T251f15(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T917f2(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T251f14(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T917f1(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T917f3(T0* C);
/* ET_XACE_OPTIONS.recursive */
extern T1 T251f13(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T251f12(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T250f45(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T251f11(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T251f10(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_class */
extern T0* T95f128(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_feature */
extern T0* T95f218(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T250f43(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T250f42(T0* C, T1 a1);
/* ET_XACE_LIBRARY_PARSER.uc_relative */
extern unsigned char ge1033os3892;
extern T0* ge1033ov3892;
extern T0* T95f126(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T39f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T887c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.uc_abstract */
extern unsigned char ge1033os3891;
extern T0* ge1033ov3891;
extern T0* T95f125(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T83f4(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_cluster */
extern T0* T95f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_ */
extern T0* T95f12(T0* C);
/* ET_XACE_LIBRARY.set_name */
extern void T258f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_name */
extern T0* T95f11(T0* C);
/* ET_XACE_UNIVERSE_PARSER.execution_environment */
extern T0* T38f140(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T895f53(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].force_new */
extern void T93f52(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_put */
extern void T93f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_put */
extern void T93f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_put */
extern void T93f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_put */
extern void T93f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_item */
extern T6 T93f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].hash_position */
extern T6 T93f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_item */
extern T6 T93f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].resize */
extern void T93f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_resize */
extern void T93f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].special_integer_ */
extern T0* T93f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_resize */
extern void T93f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_resize */
extern void T93f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].resize */
extern T0* T318f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY].resized_area */
extern T0* T317f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY].copy_data */
extern void T317f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY].move_data */
extern void T317f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].overlapping_move */
extern void T317f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].non_overlapping_move */
extern void T317f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].make */
extern T0* T317c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_item */
extern T0* T93f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_resize */
extern void T93f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_modulus */
extern T6 T93f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_capacity */
extern T6 T93f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T83f5(T0* C);
/* ET_XACE_LIBRARY.make */
extern T0* T258c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found_item */
extern T0* T93f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_item */
extern T0* T93f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found */
extern T1 T93f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search */
extern void T93f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search_position */
extern void T93f53(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_prefix */
extern T0* T38f136(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_mount */
extern T0* T38f26(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T83f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T247c4(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T403f11(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_cluster */
extern T0* T38f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.new_class */
extern T0* T38f137(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.new_feature */
extern T0* T38f227(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_relative */
extern T0* T38f135(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_abstract */
extern T0* T38f134(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_cluster */
extern T0* T38f23(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_creation */
extern T0* T38f22(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_class */
extern T0* T38f21(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_root */
extern T0* T38f20(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_name */
extern T0* T38f19(T0* C);
/* ET_XACE_UNIVERSE.make_with_factory */
extern T0* T48c164(T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.make_basic_classes */
extern void T48f181(T0* C);
/* ET_XACE_UNIVERSE.class_name_tester */
extern T0* T48f49(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_ast_factory */
extern T0* T38f16(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_error_handler */
extern T0* T38f15(T0* C);
/* XM_ELEMENT.set_name */
extern void T85f30(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_system */
extern T0* T38f9(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T92f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T85f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T85f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T256f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1308f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1308f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T85f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1308f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T85f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T85f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T85f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T85f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T256f4(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T84f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T85f24(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T85f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T85f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T256f3(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T84f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T85f23(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T92f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T39f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1140c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T92f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T92f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T92f9(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T895f54(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T895f55(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f36(T0* C, T2 a1);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T92f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1033os3914;
extern T0* ge1033ov3914;
extern T0* T92f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1033os3913;
extern T0* ge1033ov3913;
extern T0* T92f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T92f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T255f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T91f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T91f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1033os3887;
extern T0* ge1033ov3887;
extern T0* T91f4(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_library */
extern T0* T38f6(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_ */
extern T0* T38f5(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T88f2(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T96f1(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T96f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T96f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T96f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T96f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T96f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T96f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T96f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T96f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T357f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T329f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T355f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T340f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T340f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T340f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T340f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T340f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T340c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T355f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T987c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T355c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T329f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T96f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T329c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T96f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].force */
extern void T324f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_put */
extern void T324f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_put */
extern void T324f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_put */
extern void T324f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_item */
extern T6 T324f17(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_item */
extern T6 T324f16(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].hash_position */
extern T6 T324f13(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].resize */
extern void T324f50(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_resize */
extern void T324f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].special_integer_ */
extern T0* T324f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_resize */
extern void T324f57(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_resize */
extern void T324f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T971f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T966f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T966f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T966f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T966f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T966f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T966c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_item */
extern T0* T324f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_resize */
extern void T324f55(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_modulus */
extern T6 T324f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_capacity */
extern T6 T324f12(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_put */
extern void T324f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].search_position */
extern void T324f41(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].unset_found_item */
extern void T324f44(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].has */
extern T1 T324f1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T360c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T360f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T326c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T360f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T360f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T360f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T360f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T360f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER].make */
extern T0* T962c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T360f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T360f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T360f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T360f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T360f32(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T360f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T360f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1271os18410;
extern T0* ge1271ov18410;
extern T0* T360f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T360f53(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1271os18409;
extern T0* ge1271ov18409;
extern T0* T360f48(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1271os18408;
extern T0* ge1271ov18408;
extern T0* T360f46(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1271os18407;
extern T0* ge1271ov18407;
extern T0* T360f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1271os18406;
extern T0* ge1271ov18406;
extern T0* T360f42(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1271os18403;
extern T0* ge1271ov18403;
extern T0* T360f40(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T360f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T360f223(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T360f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T360f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1271os18400;
extern T0* ge1271ov18400;
extern T0* T360f38(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T360f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T360f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T360f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T961c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T360f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T354f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T96f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T354c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T354f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T354f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T354f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T354f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T354f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T354f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T354f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T354f32(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T354f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T354f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T354f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T354f52(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T354f46(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T354f44(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T354f42(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T354f40(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T354f38(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T354f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T354f219(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T354f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T354f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T354f36(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T354f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T354f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T354f6(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T96f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T357f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T96f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T96f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T354c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T333f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T333f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T333f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T333f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].resize */
extern T0* T353f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING]].resized_area */
extern T0* T352f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING]].copy_data */
extern void T352f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING]].move_data */
extern void T352f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].overlapping_move */
extern void T352f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].non_overlapping_move */
extern void T352f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].make */
extern T0* T352c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].make */
extern T0* T353f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING]].make_area */
extern T0* T986c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].default_create */
extern T0* T353c3(void);
/* DS_BILINKED_LIST [STRING].force_last */
extern void T334f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].put_right */
extern void T978f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].attach_left */
extern void T978f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].make */
extern T0* T978c4(T0* a1);
/* DS_BILINKED_LIST [STRING].is_empty */
extern T1 T334f3(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T96f162(T0* C);
/* DS_BILINKED_LIST [STRING].set_equality_tester */
extern void T334f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T96f180(T0* C);
/* DS_BILINKED_LIST [STRING].make */
extern T0* T334c11(void);
/* DS_BILINKED_LIST [STRING].new_cursor */
extern T0* T334f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].make */
extern T0* T977c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T333f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T333f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1183os18884;
extern T0* ge1183ov18884;
extern T0* T333f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T333f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T333f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T333f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T333f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T333f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T333f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T333f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T96f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T333c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T351f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T349f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T349f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T349f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T349f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T349f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T349c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T351f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T985c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T351c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T333f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T333f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T333f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T333f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T333f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T333f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T350f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T347f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T347f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T347f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T347f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T347f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T347c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T350f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T984c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T350c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T332f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T976f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T976f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T976c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T332f3(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T96f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T332c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T332f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T975c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T96f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T975f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T332f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T332f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T975f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T332f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T975f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T96f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T357f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T975f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T975f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T332f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T332f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T331f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T331c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T331f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T331f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T331f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T331f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T331f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T331f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T974c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T974f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1195c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T331c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T974f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1196f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1196f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1196c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T974f3(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T331c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T974f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T96f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T331c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T96f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T331f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T331f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T331c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T331f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T345f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T344f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T344f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T344f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T344f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T344f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T344c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T345f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T983c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T345c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T331c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T331f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T96f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T357f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T96f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T330f1(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T330f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T330f11(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T330f12(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T327f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T327f13(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING].item */
extern T0* T334f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T972f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T330f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T330f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T330f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T330f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T343f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T342f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T342f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T342f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T342f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T342f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T342c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T343f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T982c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T343c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T330f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T330f39(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T330f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T330f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T330f36(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T330f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T330f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T330f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T330f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T330f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T330f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T330f7(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T330f35(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T96f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T330c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T972c2(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T330f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T330f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T973c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T330f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T330f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T330f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T330f40(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T96f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T96f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T327f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].forth */
extern void T977f9(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_forth */
extern void T334f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].add_traversing_cursor */
extern void T334f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T977f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].remove_traversing_cursor */
extern void T334f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set */
extern void T977f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING].item */
extern T0* T977f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].start */
extern void T977f8(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_start */
extern void T334f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].cursor_off */
extern T1 T334f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T327f17(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T327f16(T0* C);
/* DS_BILINKED_LIST [STRING].last */
extern T0* T334f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T327f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T327f15(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T96f242(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T327f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T327f14(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T327f8(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T96f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T326f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1269os10043;
extern T0* ge1269ov10043;
extern T0* T96f23(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T358c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T358f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T358f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T358f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T358f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T358f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T358f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T358f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T358f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T358f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T358f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T358f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T358f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T358f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T358f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T358f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T358f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T358f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T358f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T358f226(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T358f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T358f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T358f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T358f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T358f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T358f16(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T323f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T326f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T96f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T326f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T326f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T329f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T96f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T357f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T96f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T357f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T357c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T328f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T328f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T328f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T338f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T337f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T337f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T337f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T337f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T337f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T337c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T338f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T980c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T338c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T328c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T328f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T96f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T96f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T96f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T96f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T357f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T96f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T96f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T357f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T96f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T96f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T96f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T96f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f61(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T326f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T896f29(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T139f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T96f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T896c28(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].make */
extern T0* T1149c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T326f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T354f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T360f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T360f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item */
extern T0* T324f2(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_item */
extern T0* T324f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T96f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T96f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T96f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T96f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T96f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T96f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T96f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T96f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T895c56(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T895f72(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T894f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T894f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T894f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T894f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T96f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T96f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T96f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T96f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T96f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1269os10111;
extern T0* ge1269ov10111;
extern T0* T96f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1269os10112;
extern T0* ge1269ov10112;
extern T0* T96f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T96f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T895c57(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T336f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T335f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T335f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T335f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T335f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T335f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T335c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T336f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T979c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T336c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T96f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T327f19(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T327f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T327f1(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T96f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T327f20(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T327c20(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T327c18(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T96f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T96f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T96f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T96f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T96f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T96f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T96f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T354f221(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T360f225(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T354f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T360f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T354f220(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1325c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T894f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T894f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T894f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T354f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T354f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T360f224(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T360f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T360f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T96f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T96f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T96f29(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T96f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T96f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T96f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T96f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T96f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T337f6(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T339f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING]].clear_all */
extern void T352f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T347f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T349f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T344f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T340f6(T0* C);
/* SPECIAL [STRING].clear_all */
extern void T102f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T342f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T335f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T96f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T96f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T310c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T96f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T96f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].wipe_out */
extern void T324f38(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_wipe_out */
extern void T324f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_wipe_out */
extern void T324f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_wipe_out */
extern void T324f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_wipe_out */
extern void T324f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].move_all_cursors_after */
extern void T324f43(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_next_cursor */
extern void T969f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_position */
extern void T969f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T96f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T319c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T319f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T319f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T319f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T319f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T319f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T319f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T319f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T319f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T319f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T319f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T319f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T319f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T319f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T319f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T319f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T319f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T319f224(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T319f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T319f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T319f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T319f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T319f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T319f15(T0* C);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables */
extern T0* T38c229(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables_and_factory */
extern void T38f231(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T90f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T86c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T892c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T96f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T88c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T88f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T309f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T90c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T88f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T89c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T88f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T307c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T96f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T96c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T96f20(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].set_key_equality_tester */
extern void T324f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].internal_set_equality_tester */
extern void T967f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map_default */
extern T0* T324c37(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map */
extern void T324f42(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_with_equality_testers */
extern void T324f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T967c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T967f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T1193c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T324f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T969c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_sparse_container */
extern void T324f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_slots */
extern void T324f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_clashes */
extern void T324f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_key_storage */
extern void T324f61(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_item_storage */
extern void T324f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T971f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1194c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T971c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].default_capacity */
extern T6 T324f7(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T96f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T96f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1265os9990;
extern T0* ge1265ov9990;
extern T0* T96f50(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T96f182(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1265os9989;
extern T0* ge1265ov9989;
extern T0* T96f48(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1265os9988;
extern T0* ge1265ov9988;
extern T0* T96f46(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1265os9987;
extern T0* ge1265ov9987;
extern T0* T96f44(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1265os9986;
extern T0* ge1265ov9986;
extern T0* T96f42(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1265os9985;
extern T0* ge1265ov9985;
extern T0* T96f40(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1265os9984;
extern T0* ge1265ov9984;
extern T0* T96f38(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1265os9983;
extern T0* ge1265ov9983;
extern T0* T96f36(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1265os9982;
extern T0* ge1265ov9982;
extern T0* T96f34(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1265os9981;
extern T0* ge1265ov9981;
extern T0* T96f32(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T96f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T94f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T94f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T94c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T91c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T92c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.set_parsed_libraries */
extern void T95f221(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.make_with_variables_and_factory */
extern T0* T95c220(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].set_key_equality_tester */
extern void T93f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].internal_set_equality_tester */
extern void T314f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_map */
extern T0* T93c36(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_with_equality_testers */
extern void T93f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].make */
extern T0* T314c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T314f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T959c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T93f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T316c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_sparse_container */
extern void T93f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_slots */
extern void T93f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_clashes */
extern void T93f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_key_storage */
extern void T93f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_item_storage */
extern void T93f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].make */
extern T0* T318f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY].make_area */
extern T0* T960c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].default_create */
extern T0* T318c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T83c9(void);
/* DS_HASH_TABLE [STRING, STRING].force_last */
extern void T40f39(T0* C, T0* a1, T0* a2);
/* GEC.execution_environment */
extern T0* T21f14(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f13(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T39c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T39f4(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T895f5(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T895f4(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T895f29(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T895f16(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T895c68(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f17(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f5(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f1(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f2(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f18(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f20(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f14(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T244f1(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T244f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f39(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c39(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f8(T0* C);
/* GEC.parse_arguments */
extern void T21f27(T0* C);
/* DS_ARRAYED_LIST [STRING].first */
extern T0* T76f3(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T37f1(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T78f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T78f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T304f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T78f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T304f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T78f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T37f3(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T82f1(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T82f12(T0* C, T0* a1);
/* UC_UTF8_STRING.put */
extern void T895f65(T0* C, T2 a1, T6 a2);
/* ST_WORD_WRAPPER.is_space */
extern T1 T82f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T82f2(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T82f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge71os3830;
extern T0* ge71ov3830;
extern T0* T37f8(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T82f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T82c9(void);
/* STRING_8.make_filled */
extern T0* T17c41(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f46(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f10(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T66f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge320os8414;
extern T0* ge320ov8414;
extern T0* T66f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T66f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T65f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge322os8414;
extern T0* ge322ov8414;
extern T0* T65f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T65f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T37f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T37f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T37f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T37f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T37f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T81f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T81f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T37f20(T0* C);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T37f18(T0* C);
/* AP_FLAG.name */
extern T0* T32f8(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T32f9(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T78f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T78f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T78f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T78f1(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T78f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T78f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T78f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T78f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T304f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T78f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T78f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T37f2(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T77f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T77f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T300f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T77f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T300f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T77f28(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T37f24(T0* C);
/* AP_FLAG.example */
extern T0* T32f12(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T77f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T77f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T77f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T77f1(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T77f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T77f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T77f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T77f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T300f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T77f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T77f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f33(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T64c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f27(T0* C);
/* AP_PARSER.parse_list */
extern void T30f29(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f33(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge333os1571;
extern T0* ge333ov1571;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10p1(T0* C, T0* a1);
/* AP_PARSER.check_mandatory_options */
extern void T30f32(T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T79f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T79f6(T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T80f12(T0* C);
/* AP_ERROR.message */
extern T0* T80f13(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T80f15(T0* C);
/* AP_ERROR.string_ */
extern T0* T80f14(T0* C);
/* AP_ERROR.make_missing_option_error */
extern T0* T80c16(T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T37f23(T0* C);
/* AP_PARSER.parse_argument */
extern void T30f31(T0* C);
/* AP_PARSER.parse_short */
extern void T30f35(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T37f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T37f41(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T37f28(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T79f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T37f27(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T37f33(T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T37f32(T0* C);
/* AP_FLAG.names */
extern T0* T32f15(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1297f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1297f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1297f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T77f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T77f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1296f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1296f2(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T77f3(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T77c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T77f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T300c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T303f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T954c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T302c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T303c3(void);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1297c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1296c3(void);
/* AP_FLAG.record_occurrence */
extern void T32f23(T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T80c18(T0* a1);
/* DS_ARRAYED_LIST [STRING].off */
extern T1 T76f5(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_off */
extern T1 T76f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].cursor_before */
extern T1 T76f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].cursor_after */
extern T1 T76f8(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T37f19(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T32f10(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T80c17(T0* a1);
/* AP_PARSER.parse_long */
extern void T30f34(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T80c19(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].forth */
extern void T76f24(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_forth */
extern void T76f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].add_traversing_cursor */
extern void T76f36(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].remove_traversing_cursor */
extern void T76f37(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].item_for_iteration */
extern T0* T76f4(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_item */
extern T0* T76f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].after */
extern T1 T76f1(T0* C);
/* DS_ARRAYED_LIST [STRING].start */
extern void T76f23(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_start */
extern void T76f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].is_empty */
extern T1 T76f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].off */
extern T1 T299f2(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f30(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T37f39(T0* C);
/* AP_FLAG.reset */
extern void T32f22(T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T79f8(T0* C);
/* DS_ARRAYED_LIST [STRING].force */
extern void T76f22(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put */
extern void T76f28(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_cursors_right */
extern void T76f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_right */
extern void T76f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put_last */
extern void T76f33(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f10(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T78f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T78f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T306f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T305f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T305f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T305f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T305f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T305f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T305c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T78f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T78f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f4(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T81c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T32c18(T2 a1, T0* a2);
/* AP_FLAG.initialize */
extern void T32f20(T0* C);
/* AP_FLAG.set_long_form */
extern void T32f19(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T32f21(T0* C, T2 a1);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T77f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T77f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T303f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T302f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T302f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T302f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T302f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T302f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T77f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T77f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T32f17(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T32c16(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f25(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c24(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T37f35(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T37c34(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T37f38(T0* C);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T37f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T37f36(T0* C, T2 a1);
/* AP_PARSER.make_empty */
extern void T30f28(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T79c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T79f3(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T78c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T78f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T304c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T306f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T955c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T306c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f1(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f6(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T889f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T141f7(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T141f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T298f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1225f3(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T222f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type */
extern void T217f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T217f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T519f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T519f14(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T202f52(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T202f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T150f50(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T150f52(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T202f51(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T202f56(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T150f49(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T150f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T150f67(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type */
extern void T207f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T207f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T207f12p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type */
extern void T205f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type */
extern void T204f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type */
extern void T203f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_type */
extern void T197f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_type */
extern void T143f37(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.reset */
extern void T811f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T811f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T940f96(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T767f33(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T766f33(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T459f74(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T446f54(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T440f52(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T736f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T749f11(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T749f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T749f11p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T183f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T749f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T747f11(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T709f13(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T706f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T706f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T709f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T705f13(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T703f12(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T701f6(T0* C);
/* ET_COMPOUND.reset */
extern void T621f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T700f12(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T700f8(T0* C);
/* ET_VARIANT.reset */
extern void T670f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T667f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T697f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T718f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T722f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T724f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T697f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T695f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T711f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T714f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T714f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T695f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T694f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T693f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T687f14(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T456f16(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T749f12(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T747f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T709f14(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T705f14(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T703f13(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T701f7(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T700f13(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T697f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T695f12(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T694f7(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T693f7(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T687f15(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T456f17(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T184f14(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T647f46(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T643f82(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T641f64(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T640f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T639f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T638f65(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T647f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T643f83(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T641f65(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T640f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T639f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T638f66(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T647f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T643f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T480f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T479f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T478f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T480f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T479f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T478f45(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T480f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T479f50(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T478f50(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T480f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T479f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T478f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T360f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T360f233(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T113f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T360f233p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T360f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T358f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T358f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T358f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T358f19(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T354f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T354f229(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T354f229p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T354f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T319f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T319f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T319f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T319f18(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T360f227(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T360f227p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T360f227p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T360f237(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T961f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T961f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T961f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T961f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T961f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T961f1(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1139f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T961f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T961f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T360f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T360f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T360f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T360f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T360f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T360f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1273os18469;
extern T0* ge1273ov18469;
extern T0* T360f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T360f241(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T360f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T360f240(T0* C);
/* DS_LINKED_STACK [INTEGER].remove */
extern void T962f7(T0* C);
/* DS_LINKED_STACK [INTEGER].item */
extern T6 T962f2(T0* C);
/* DS_LINKED_STACK [INTEGER].is_empty */
extern T1 T962f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T360f238(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER].force */
extern void T962f6(T0* C, T6 a1);
/* DS_LINKABLE [INTEGER].put_right */
extern void T1192f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER].make */
extern T0* T1192c3(T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T360f239(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T360f236(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T360f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T360f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T360f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T360f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T360f234(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T358f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T358f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T358f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T358f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T358f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T358f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T358f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T358f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T358f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T358f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T358f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T358f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T358f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T358f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T358f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T358f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T358f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T358f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T358f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T358f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T358f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T354f223(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T354f223p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T354f232(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T354f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T354f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T354f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T354f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T354f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T354f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T354f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T354f237(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T354f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T354f236(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T354f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T354f235(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T354f231(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T354f234(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T354f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T354f230(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T354f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T354f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T319f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T319f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T319f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T319f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T319f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T319f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T319f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T319f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T319f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T319f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T319f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T319f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T319f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T319f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T319f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T319f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T319f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T319f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T319f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T319f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T319f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T360f229(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T358f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T354f225(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T319f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T360f230(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T896f30(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T896f7(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T358f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T354f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T319f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T360f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T358f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T354f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T319f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T360f228(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1325f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1325f5(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f32(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T358f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T354f224(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T319f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T645f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1212f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1309f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1309f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1211f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1309f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1210f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1309f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T255f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1309f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T85f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1309f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1212f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1211f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1210f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T255f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T85f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T809f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T471f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T809f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T940f95(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T471f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T940f91(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1114f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T794f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1114f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T940f90(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T794f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T940f94(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1338f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1328f18(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1229f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1114f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T809f11(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T801f39(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T800f40(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T799f40(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T798f40(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T797f41(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T795f41(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T794f10(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T785f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T778f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T776f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T775f19(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T771f31(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T770f19(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T769f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T768f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T764f20(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T762f19(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T761f19(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T760f19(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T759f19(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T754f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T753f23(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T738f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T690f19(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T519f26(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T516f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T487f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T486f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T485f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T484f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T482f40(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T481f40(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T480f50(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T479f51(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T478f51(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T474f40(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T471f15(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T462f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T426f33(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T206f30(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T186f29(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T182f33(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T119f97(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T477f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T476f41(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T475f36(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T801f38(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T800f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T799f39(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T798f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T797f40(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T795f40(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T771f30(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T767f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T766f34(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T468f85(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T459f76(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T446f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T440f53(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1328f19(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1230f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1229f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T801f37(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T623f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T617f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T209f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T911f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T214f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T790f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T800f38(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T619f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T912f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T658f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T800f38p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T799f38(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T799f38p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T798f38(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T797f39(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T797f39p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T795f39(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T795f39p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T785f18(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T778f26(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T776f25(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T775f18(T0* C);
/* ET_CALL_AGENT.reset */
extern void T771f28(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T770f18(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T769f18(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T768f17(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T764f17(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T762f18(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T761f18(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T760f18(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T759f18(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T754f19(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T753f22(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T738f27(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T738f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T738f27p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T738f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T690f18(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T780f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T468f84(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T519f25(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T516f21(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T516f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T487f38(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T486f38(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T485f35(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T484f35(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T482f38(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T481f38(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T480f48(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T479f49(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T478f49(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T477f36(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T476f40(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T475f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T474f39(T0* C);
/* ET_VOID.reset */
extern void T462f29(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T426f32(T0* C);
/* ET_RESULT.reset */
extern void T206f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25p1(T0* C);
/* ET_CURRENT.reset */
extern void T182f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1328f17(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1230f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1229f15(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T801f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T800f37(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T799f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T798f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T797f38(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T795f38(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T785f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T778f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T776f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T775f17(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T771f27(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T770f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T769f17(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T768f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T764f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T762f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T761f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T760f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T759f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T754f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T753f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T738f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T690f17(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T519f24(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T516f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T487f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T486f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T485f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T484f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T482f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T481f37(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T480f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T479f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T478f47(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T477f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T476f39(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T475f34(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T474f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T462f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T426f31(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T206f25(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T186f24(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T182f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T119f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T634f78(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T633f77(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T628f75(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T627f79(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T625f79(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T297f73(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T292f77(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T226f68(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T225f70(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T223f70(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T163f80(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T634f100(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T633f99(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T628f98(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T627f101(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T625f101(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T297f96(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T292f99(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T226f89(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T225f93(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T223f92(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T163f102(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T634f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T633f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T628f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T627f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T625f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T297f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T292f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T226f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T225f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T223f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T163f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T634f98(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T633f97(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T628f96(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T627f99(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T625f99(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T297f94(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T292f97(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T226f87(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T225f91(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T223f90(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T163f100(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T634f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T633f98(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T628f97(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T627f100(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T625f100(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T297f95(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T292f98(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T226f88(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T225f92(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T223f91(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T163f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T634f96(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T633f95(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T628f94(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T627f97(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T625f97(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T297f92(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T292f95(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T226f85(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T225f89(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T223f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T163f98(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T634f97(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T633f96(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T628f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T627f98(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T625f98(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T297f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T292f96(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T226f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T225f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T223f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T163f99(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T634f94(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T633f93(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T628f92(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T627f95(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T625f95(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T297f90(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T292f93(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T226f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T225f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T223f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T163f92(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T634f102(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T209f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T209f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T209f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T214f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T911f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T214f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T633f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T628f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T627f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T625f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T297f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T292f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T226f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T225f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T223f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T163f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T634f76(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T633f75(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T628f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T627f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T625f77(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T297f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T292f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T226f67(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T225f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T223f69(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T163f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T634f93(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T633f92(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T628f91(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T627f94(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T625f94(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T297f89(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T292f92(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T226f78(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T225f82(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T223f81(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T163f91(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T634f95(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T633f94(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T628f93(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T627f96(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T625f96(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T297f91(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T292f94(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T226f84(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T225f88(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T223f87(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T163f97(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T634f86(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T633f85(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T628f83(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T627f87(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T625f87(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T297f81(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T292f85(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T226f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T225f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T223f85(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T163f95(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T634f87(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T633f86(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T628f84(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T627f88(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T625f88(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T297f82(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T292f86(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T226f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T225f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T223f86(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T163f96(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T634f81(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T633f80(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T628f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T627f82(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T625f82(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T297f76(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T292f80(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T226f71(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T225f73(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T223f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T163f83(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T634f82(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T633f81(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T628f79(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T627f83(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T625f83(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T297f77(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T292f81(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T226f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T225f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T223f74(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T163f84(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T634f83(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T633f82(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T628f80(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T627f84(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T625f84(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T297f78(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T292f82(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T226f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T225f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T223f75(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T163f85(T0* C);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T942f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T942f131(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T942f192(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T242f42(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T242f16(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T681f27(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T942f190(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T242f40(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T52f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T875c787(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T52f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T52f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T875c776(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T52f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T875c786(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T52f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T780f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T183f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T780f8(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T183f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T942f219(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T942f218(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1229c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T942f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1328c16(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T169f10(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T524f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T524f19(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T51f159(T0* C);
/* ET_XACE_UNIVERSE.is_dotnet */
extern T1 T48f163(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T55f146(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T910f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T495f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T495f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T55f145(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T242f19(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T242f33(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T52f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T875c785(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T52f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T52f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T875c775(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T52f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T875c784(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T942f189(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T52f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T875c783(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T52f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_CLIENTS.has_any */
extern T1 T410f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T409f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T409f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T52f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T875c782(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T51f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.has_class */
extern T1 T48f162(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T410f9(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T410f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T409f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T409f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T52f330(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T875c752(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T52f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f330(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T52f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T875c749(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T52f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T52f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T875c748(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T942f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T51f192(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T943f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_expression_supplier */
extern void T48f201(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T52f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T875c745(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T52f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T52f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T875c744(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T942f27(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T52f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T875c753(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T52f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T942f20(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T942f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T942f38(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T119f80(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T942f63(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T942f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T942f191(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T52f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T875c751(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T52f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T52f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T875c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T52f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T875c747(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T52f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T52f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T875c746(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T52f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T875c743(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T52f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T119f22(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T942f129(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T942f188(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T942f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T169f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T169f9(T0* C);
/* ET_CLASS.ancestor */
extern T0* T55f118(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T291f5(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T169f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T52f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T875c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T52f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T52f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T875c741(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T942f128(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T942f187(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T940f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T59f351(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T59f367(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T59f386(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T59f350(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T59f405(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T59f191(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T59f404(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T59f383(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T59f391(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T59f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T59f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T207c9(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T59f382(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T59f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T59f182(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T59f187(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T59f332(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T59f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T59f384(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T59f365(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T59f381(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T59f183(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T59f364(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T59f380(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T56f468(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T56f474(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T202f16(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T150f19(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T175f20(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T175f12(T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T56f473(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T56f472(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T119f21(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T56f471(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T119f20(T0* C);
/* ET_FEATURE_CHECKER.process_current */
extern void T942f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T942f132(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T942f193(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T940f38(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T59f406(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T59f457(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T59f501(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T56f469(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T56f475(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T942f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T942f133(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T942f194(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T52f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T875c758(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T52f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T875c757(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T52f334(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T875c756(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f334(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T52f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T875c755(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T52f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T875c754(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T940f39(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T59f407(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T59f458(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T59f502(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T56f470(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T56f476(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T947f27(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T946f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T941f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T939f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T938f8(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T937f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T936f8(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T935f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T275f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T275f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T55f214(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T275f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T52f285(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T875c707(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1283f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1179f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1283f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1179f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1283f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1179f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1283f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1179f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1283f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1179f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1283f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1179f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1179f1(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1283f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1179f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1179f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T52f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f285(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1179f5(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T275f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T287f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T287f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T944f15(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].wipe_out */
extern void T1181f13(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].clear_items */
extern void T1181f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].move_all_cursors_after */
extern void T1181f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_next_cursor */
extern void T1289f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_position */
extern void T1289f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].wipe_out */
extern void T1180f37(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_wipe_out */
extern void T1180f47(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_wipe_out */
extern void T1180f46(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_wipe_out */
extern void T1180f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_wipe_out */
extern void T1180f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].move_all_cursors_after */
extern void T1180f42(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_next_cursor */
extern void T1286f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_position */
extern void T1286f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1179f22(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1179f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1179f25(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T944f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T944f6(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T275f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T946f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T275f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T947f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T947f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T52f413(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T875c835(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1358f3(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1245f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1358f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1245f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1358f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1245f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1358f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1245f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T532f20(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T524f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1358f2(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1245f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1358f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1245f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1245f3(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1358f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1245f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1245f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1245f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T52f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f413(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f148(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1186f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].wipe_out */
extern void T1292f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1292f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1292f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1292f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1292f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1292f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1379f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_position */
extern void T1379f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1245f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1245f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1245f19(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1186f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T532f71(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T524f67(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1245f2(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T52f412(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T875c834(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f412(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1186f2(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1186f12(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1244f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1244f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T1244c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T1244f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1245f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].replace */
extern void T1181f16(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].item */
extern T0* T1181f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].cloned_object */
extern T0* T1181f1(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].twin */
extern T0* T1181f3(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].copy */
extern void T1181f17(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].twin */
extern T0* T1287f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].valid_cursor */
extern T1 T1181f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER].cloned_object */
extern T0* T176f12(T0* C);
/* DS_ARRAYED_LIST [INTEGER].twin */
extern T0* T176f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER].copy */
extern void T176f25(T0* C, T0* a1);
/* SPECIAL [INTEGER].twin */
extern T0* T103f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].valid_cursor */
extern T1 T176f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1186f1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T947f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T52f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T875c833(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T52f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T52f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T875c832(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T52f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T947f6(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T947f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T275f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T55f215(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].wipe_out */
extern void T945f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_wipe_out */
extern void T945f55(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_wipe_out */
extern void T945f54(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_wipe_out */
extern void T945f53(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_wipe_out */
extern void T945f52(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].move_all_cursors_after */
extern void T945f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_next_cursor */
extern void T1185f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_position */
extern void T1185f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].forth */
extern void T1185f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_forth */
extern void T945f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].add_traversing_cursor */
extern void T945f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].remove_traversing_cursor */
extern void T945f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_item */
extern T6 T945f27(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T291f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].item */
extern T0* T1185f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_item */
extern T0* T945f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_item */
extern T0* T945f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].after */
extern T1 T1185f1(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_after */
extern T1 T945f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].start */
extern void T1185f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_start */
extern void T945f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_off */
extern T1 T945f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].is_empty */
extern T1 T945f38(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T275f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T291f4(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T242f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].force_new */
extern void T945f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_put */
extern void T945f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_put */
extern void T945f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_put */
extern void T945f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_put */
extern void T945f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_item */
extern T6 T945f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].hash_position */
extern T6 T945f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].resize */
extern void T945f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_resize */
extern void T945f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_resize */
extern void T945f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_resize */
extern void T945f63(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T953f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T952f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T952f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T952f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T952f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T952f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_item */
extern T6 T945f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_resize */
extern void T945f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_capacity */
extern T6 T945f25(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T52f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T875f665(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T875c713(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T52f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f81(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found_item */
extern T0* T945f23(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found */
extern T1 T945f22(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search */
extern void T945f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search_position */
extern void T945f56(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T52f290(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T875c712(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T52f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f290(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f80(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T52f289(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T875c711(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T52f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f289(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T52f288(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T875c710(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T52f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f288(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T52f287(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T875c709(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T52f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f287(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T52f286(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T875c708(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f286(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T55f70(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1179f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T944f14(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1179f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T275f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T275f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T944f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T944f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T944f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T944f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found_item */
extern T6 T1180f33(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_item */
extern T6 T1180f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found */
extern T1 T1180f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search */
extern void T1180f61(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search_position */
extern void T1180f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_item */
extern T6 T1180f9(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].hash_position */
extern T6 T1180f12(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_item */
extern T0* T1180f11(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_item */
extern T6 T1180f13(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T944f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T944f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].put_last */
extern void T1181f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER].put_last */
extern void T176f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].put */
extern void T1180f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_put */
extern void T1180f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_put */
extern void T1180f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_put */
extern void T1180f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_put */
extern void T1180f54(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].resize */
extern void T1181f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].resize */
extern T0* T1288f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER]].resized_area */
extern T0* T1287f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].copy_data */
extern void T1287f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER]].move_data */
extern void T1287f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].overlapping_move */
extern void T1287f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].non_overlapping_move */
extern void T1287f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].resize */
extern void T1180f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_resize */
extern void T1180f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_resize */
extern void T1180f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_resize */
extern void T1180f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_resize */
extern void T1180f48(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1179f23(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T944f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T944f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].has */
extern T1 T1180f1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T275f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T55f213(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T275f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T273f18(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T55f209(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T273f23(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T55f212(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T273f22(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T55f211(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T55f210(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T273f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T401f70(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1001f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T401f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1001f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1001f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1001f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T401f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T401f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T401f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T401f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T401f73(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T273f25(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T942f35(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T499f27(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T499f26(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T52f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T875c740(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T52f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T499f9(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T499f10(T0* C, T6 a1);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T499f25(T0* C);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T51f191(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_supplier_handler */
extern void T48f200(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T273f24(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T273f26(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T1215f1(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T942f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T623f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T623f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T942f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T617f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T617f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T942f34(T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T273f20(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T273c19(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T273f11(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T55f208(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T273f10(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T272f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T272f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T55f193(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T272f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T272f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T941f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T941f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1179f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1179f24(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1179f2(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T272f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T272f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T52f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T875c633(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T52f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T52f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T875c632(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T52f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T875c631(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T52f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T533f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T533f8(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T524f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T272f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T55f192(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T272f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T271f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T271f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T55f206(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T271f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T271f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T925f59(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T925f71(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T925f70(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T925f69(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T925f68(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T925f67(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1158f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1158f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T271f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T925f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T925f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T925f27(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T925f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T925f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T925f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T925f39(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T926f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T925f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T925f35(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T271f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T52f256(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T875c678(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T52f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f256(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T52f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T875c677(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T52f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T875c676(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T52f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T52f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T875c675(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T52f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T875c674(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T587f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T587f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T493f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T52f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T875c673(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T587f13(T0* C);
/* ET_CREATOR.first */
extern T0* T587f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T410f14(T0* C);
/* ET_CLIENTS.first */
extern T0* T410f17(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T410f16(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T587f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T52f59(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f251(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T493f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T493f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T271f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T52f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T875c672(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T52f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T52f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T875c671(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T52f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T52f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T875c670(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T52f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T52f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T875c669(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T52f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T52f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T875c668(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T52f242(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T875c663(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T52f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f242(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T52f241(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T875c662(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T52f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f241(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T52f240(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T875c661(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1219f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1216f16(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1216f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f240(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T925f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T925f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T925f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T925f42(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T55f207(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T928f46(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T928f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T928f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T928f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T928f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T928f53(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1164f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1164f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T925f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T925f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T925f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T271f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T937f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1243f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1242f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1242f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1243f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1242f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1243f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T937f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T52f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T875c736(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T52f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T52f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T875c735(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T937f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T937f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1243f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1243f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1242f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1242f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1242f1(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1243c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1216f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T937f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T52f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T875c734(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T52f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T52f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T875c733(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T52f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T875c732(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T937f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T52f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T875c731(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T52f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T52f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T875c730(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T52f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T875c729(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T937f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T928f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T928f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T928f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T928f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T928f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T928f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T928f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T928f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T928f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T928f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1159f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1161f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1161f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1161f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1161f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1161f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T928f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T928f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T928f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T928f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T928f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T928f47(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T929f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T52f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T875c660(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T52f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T52f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T875c659(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T52f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T875c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T52f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T52f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T875c657(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1216f14(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T52f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T875c656(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T52f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T875c655(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T52f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T875c654(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T52f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T875c653(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T52f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T875c652(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f231(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T928f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T928f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T928f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T928f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T925f24(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T925f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T925f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T925f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T925f41(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T271f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T936f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1177f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1282f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1282f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1282f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1282f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1282f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1282f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1372f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_position */
extern void T1372f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1241f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1241f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1241f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1357f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1357f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1177f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T52f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T875c728(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1357f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1241f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1241f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1241f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1357f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1241f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1357f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1241f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1241f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1241f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1357f3(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1241f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1241f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1357f2(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1357f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1241f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1241f2(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T52f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f306(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T936f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T936f9(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1177f1(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1177f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1241f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T52f230(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T875c651(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T52f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f230(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T52f229(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T875c650(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f229(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T52f228(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T875c649(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f228(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T52f227(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T875c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f227(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T52f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T875c647(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f226(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T52f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T875c646(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T52f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T875c645(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T52f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f224(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T52f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T875c644(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T52f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f223(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T271f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T52f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T875c667(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T52f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T925f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T925f25(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T52f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T875c666(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T52f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T935f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1218f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1218f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T238f38(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T238f40(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1321f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge880os17874;
extern T0* ge880ov17874;
extern T0* T271f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1218c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1321c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1217f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1217f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T239f38(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T239f40(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1318f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge880os17873;
extern T0* ge880ov17873;
extern T0* T271f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1217c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1318c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T925f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T925f63(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T271f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T271f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T52f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T875c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T52f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T52f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T875c684(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T52f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T52f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T875c683(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T52f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T875c682(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1219f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1219f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T271f44(T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1219f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1178f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1219f33(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1178f31(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1214f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1214f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1214f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1214f2(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1214f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1214f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER].cloned_array */
extern T0* T906f1(T0* C, T0* a1);
/* ARRAY [INTEGER].twin */
extern T0* T290f10(T0* C);
/* ARRAY [INTEGER].copy */
extern void T290f18(T0* C, T0* a1);
/* ARRAY [INTEGER].set_area */
extern void T290f20(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1214f5(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1219f21(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1178f20(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1214c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1214f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER].resize */
extern void T906f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER].conservative_resize */
extern void T290f17(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1214f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1214f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1216f20(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T1215f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1215c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge698os6047;
extern T0* ge698ov6047;
extern T0* T1215f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T410f15(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T409f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1216f19(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1216f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T52f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T875c681(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T52f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1216f18(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T271f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T52f274(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T875c696(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T52f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f274(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1216f11(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T271f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T52f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T875c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T52f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T52f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T875c705(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T271f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T52f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T875c704(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T52f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T52f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T875c703(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T52f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T875c702(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T52f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T271f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T52f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T875c701(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T52f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T52f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T875c700(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T52f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T875c699(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T52f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T875c698(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T52f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T875c697(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T52f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1219f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T271f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T931f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T931f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T931f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1167f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1167f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T932f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T932f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T932f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T932f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T932f64(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T932f63(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1168f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1168f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T932f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T932f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T932f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T932f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T932f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T932f21(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T932f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T932f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T932f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T932f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T932f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T932f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T932f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T932f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T932f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T932f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T932f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T932f26(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T932f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T932f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T932f47(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T932f58(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T931f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T932f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T932f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T932f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T932f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T932f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T932f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T932f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T932f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T932f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T932f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T932f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T932f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T932f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T932f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T932f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T931f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T931f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T931f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T931f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T931f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T410f13(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T119f91(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T119f93(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T409f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T931f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T931f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T931f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T931f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T1165f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1166f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1166f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1166f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1166f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1166f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T931f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T931f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T576f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T574f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T576f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T574f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T576f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T285f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T271f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T271f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T940f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T52f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T875c680(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T623f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T623f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T623f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T52f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T623f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T52f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T875c679(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T617f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T617f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T617f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T617f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T271f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T52f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T875c695(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T52f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T875c694(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T52f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T52f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T875c693(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T52f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T875c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T52f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T875c691(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T52f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T875c690(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T52f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T875c689(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T52f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T52f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T875c688(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T52f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T52f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T875c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T52f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T875c686(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1178f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T52f243(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T875c664(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T52f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f243(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1219f19(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1216f17(T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1178f18(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1219f18(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1178f17(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T271f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T925f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T925f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T925f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T925f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T925f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T925f62(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T271f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T933f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T933f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].wipe_out */
extern void T1172f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_wipe_out */
extern void T1172f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_wipe_out */
extern void T1172f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_wipe_out */
extern void T1172f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_wipe_out */
extern void T1172f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].move_all_cursors_after */
extern void T1172f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_next_cursor */
extern void T1266f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_position */
extern void T1266f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].forth */
extern void T1172f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_forth */
extern void T1172f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].add_traversing_cursor */
extern void T1172f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].remove_traversing_cursor */
extern void T1172f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_item */
extern T6 T1172f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T933f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T52f305(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T875c727(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1352f2(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1238f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1352f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1238f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1352f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1238f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1352f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1238f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1352f1(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1238f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1238f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1352f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1238f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1238f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1352f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1238f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1238f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1238f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1352c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1238f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T52f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f305(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1219f39(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1242f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1405f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1405c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1242f3(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1242c8(void);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1178f35(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1216f21(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1219f38(T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1178f34(T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1219f37(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1178f33(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T52f304(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T875c726(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f304(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T933f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T933f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1237f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1237f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1237f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1348f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1237f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1348f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1238f16(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1219f28(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1178f26(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1237f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1237f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1237f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1237f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1237f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1237f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1237f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1238c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1350f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1392c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1351c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1350c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_for_iteration */
extern T6 T1172f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_key */
extern T6 T1172f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_item */
extern T6 T1172f14(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_for_iteration */
extern T0* T1172f2(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_item */
extern T0* T1172f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_item */
extern T0* T1172f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].after */
extern T1 T1172f1(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_after */
extern T1 T1172f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].start */
extern void T1172f45(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_start */
extern void T1172f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_off */
extern T1 T1172f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].is_empty */
extern T1 T1172f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T933f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].force_new */
extern void T1172f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_put */
extern void T1172f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_put */
extern void T1172f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_put */
extern void T1172f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_put */
extern void T1172f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_item */
extern T6 T1172f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].hash_position */
extern T6 T1172f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].resize */
extern void T1172f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_resize */
extern void T1172f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_resize */
extern void T1172f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_resize */
extern void T1172f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1271f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1267f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1267f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1267f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1267f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1267f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_resize */
extern void T1172f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_capacity */
extern T6 T1172f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].replace_found_item */
extern void T1172f49(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1236c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1237c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1237f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1348c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1236f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1237f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1349f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1349c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1237f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found_item */
extern T0* T1172f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found */
extern T1 T1172f4(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search */
extern void T1172f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search_position */
extern void T1172f60(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T933f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T52f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T875c719(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T52f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T52f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T875c718(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T52f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f85(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1171f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1171f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1171f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1171f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1171f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1171f58(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1263f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1263f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1171f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1171f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1171f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1171f72(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1171f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T52f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T875c717(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T52f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f84(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1171f7(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1171f16(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1171f11(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1171f6(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1171f15(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1171f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1171f5(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1171f14(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1171f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1171f56(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1171f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1171f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1170f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1170f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1170f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1170f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1170f57(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1170f56(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1262f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1262f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1170f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1170f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1170f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1170f71(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1170f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T52f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T875c716(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T52f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f83(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1170f4(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1170f12(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1170f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1170f3(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1170f11(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1170f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1170f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1170f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1169f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1169f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1169f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1169f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1169f57(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1169f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1256f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1256f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1169f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1169f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1169f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1169f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1169f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T52f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T875c715(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T52f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f82(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1169f5(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1169f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1169f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1169f4(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1169f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1169f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1169f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1169f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T925f75(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T925f86(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T925f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T925f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T925f85(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T925f87(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T925f84(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T933f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1219f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1219c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1219f30(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1219f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1219f23(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1216f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1178f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1178f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T925f76(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T933f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1178f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1178f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1216f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1216f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1171f47(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1171f55(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1171f4(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1216f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1171f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1171f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1171f46(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1171f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1171f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1171f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1170f41(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1170f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1170f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1170f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1170f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1170f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1170f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1170f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1170f73(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1170f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1170f68(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1170f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1170f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1170f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1170f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1170f2(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1170f40(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1216f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1169f44(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1169f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1169f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1169f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1169f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1169f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1169f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1169f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1169f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1169f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1169f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1169f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1169f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1169f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1169f3(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1169f2(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1169f43(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T933f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1216f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1216f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T925f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T925f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T925f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T925f81(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T925f78(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T933f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T52f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T875c725(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T52f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f92(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1171f52(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1171f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1171f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1171f66(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T286f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T286f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1171f51(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1171f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1171f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1171f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1171f64(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T933f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T52f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T875c724(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T52f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T933f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T52f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T875c723(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T52f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f90(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1170f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T933f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T52f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T875c722(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T52f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f89(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1170f6(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1170f46(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T576f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T576f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1170f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1170f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1170f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1170f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1170f61(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T52f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T875c721(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T52f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f88(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1169f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T933f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T52f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T875c720(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T52f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f87(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1169f49(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T284f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T284f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1169f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1169f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1169f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1169f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1261f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1257f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1257f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1257f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1257f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1257f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1169f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T933f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T52f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T875c714(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T934f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1176f37(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1176f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1176f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1176f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1176f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1176f41(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1279f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1279f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1174f34(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1174f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1174f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1174f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1174f44(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1174f43(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1273f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1273f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T934f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T934f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T934f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T934f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T934f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T934f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1240f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1240f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1240f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1353f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1240f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1353f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1240f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1240f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1240f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1240f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1240f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1240f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1240f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1176f2(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1176f5(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1176f1(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1176f38(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1176f47(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1176f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1176f15(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1173f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1176f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1176f17(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T934f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T934f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1174f3(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1174f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1174f2(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1174f36(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1174f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1174f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1174f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1174f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1174f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1174f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T934f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T934f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1174f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1174f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1174f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1174f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1174f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1176f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1176f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1176f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1176f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1176f49(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1176f57(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1176f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1274f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1272f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1272f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1272f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1272f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1272f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1176f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1280f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1275f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1275f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1275f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1275f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1275f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1176f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1176f14(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1176f48(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1240c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1240f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1353c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1240f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1354f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1354c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1240f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T925f77(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T925f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1174f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1174f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1174f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1174f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1174f48(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T271f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T938f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T271f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T939f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T939f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T271f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T55f205(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T271f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T270f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T169f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T158f1780(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T888f5(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.preparse */
extern void T51f189(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T51f190(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T280f161(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T280f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T280f163(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_XACE_UNIVERSE.preparse */
extern void T48f198(T0* C);
/* ET_XACE_UNIVERSE.preparse_multiple */
extern void T48f199(T0* C);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T942f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T942f57(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T51f193(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T943f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_result_supplier */
extern void T48f202(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T942f65(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T942f62(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T169f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T52f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T875c739(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T52f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T52f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T875c738(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T533f10(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T533f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T392f11(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T169f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T942f64(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T51f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T943f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_argument_supplier */
extern void T48f203(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T942f69(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T940f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T59f211(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f222(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T59f328(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T53f56(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T59f327(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_builtin_code */
extern void T202f66(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_builtin_code */
extern void T150f63(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T59f326(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T59f325(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T59f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T59f323(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T59f322(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T59f321(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T59f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T59f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T59f318(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T59f317(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T59f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T59f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T59f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T59f313(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T59f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T59f311(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T59f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T59f309(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T59f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T59f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T59f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T59f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T59f304(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T59f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T59f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T59f301(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T59f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T59f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T59f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T59f297(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T59f296(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T59f295(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T59f294(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T59f293(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T59f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T59f291(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T59f290(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T59f289(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T59f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T59f287(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T59f286(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T59f285(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T59f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T59f283(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T59f282(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T59f281(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T59f280(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T59f279(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T59f278(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T59f277(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T59f276(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T59f275(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T59f274(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T59f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T59f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T59f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T59f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T59f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T59f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T59f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T59f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T59f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T59f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T59f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T59f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T59f261(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T59f260(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T59f259(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T59f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T59f257(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T59f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T59f255(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T59f254(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T59f253(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T59f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T59f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T59f250(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T59f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T59f248(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T59f247(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T59f246(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T59f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T59f244(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T59f243(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T59f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T59f241(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T59f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T59f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T59f238(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T59f237(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T59f236(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T59f235(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T59f234(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T59f233(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_argument_dynamic_types */
extern void T59f346(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f222p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T59f331(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T59f330(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T59f329(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T59f347(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T56f477(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T56f529(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T56f586(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print */
extern void T56f591(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1305f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1401f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1401f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1305f1(T0* C);
/* STD_FILES.output */
extern unsigned char ge2049os24598;
extern T0* ge2049ov24598;
extern T0* T1305f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1401c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1401f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1401f2(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1401f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f34(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T56f263(T0* C);
/* STD_FILES.set_output_default */
extern void T1305f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1305c4(void);
/* DS_LINKED_LIST [STRING].item */
extern T0* T107f8(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T41c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T56f605(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T56f604(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T56f603(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T56f622(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T56f621(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T56f620(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T56f619(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_body */
extern void T56f618(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T56f617(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T56f616(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T56f615(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T56f614(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T173f8(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T173f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T56f613(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T56f612(T0* C);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T56f611(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T56f602(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T898f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T56f268(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T56f601(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T56f610(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T195f254(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T195f257(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T195f256(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T195f253(T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T56f600(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T195f252(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T195f255(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T195f326(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T195f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T195f328(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T195f259(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T195f265(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T195f294(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T195f293(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T195f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T195f291(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T854f12(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T195f290(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T195f296(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T195f330(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T195f329(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T195f289(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T195f287(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T195f268(T0* C, T6 a1, T6 a2);
/* RX_CASE_MAPPING.to_lower */
extern T6 T855f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T56f594(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T56f599(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T942f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T942f134(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T942f195(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T242f43(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T242f17(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T242f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T942f229(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T52f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T875c804(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T28f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T52f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T875c803(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T52f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T875c762(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T52f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T942f251(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T52f339(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T875c761(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f339(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T52f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T875c760(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T52f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T875c759(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_IDENTIFIER.set_tuple_label */
extern void T119f109(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T942f215(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T238f39(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T239f39(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T240f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T238f37(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T238f43(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T238f42(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T238f41(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T238f44(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T240f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T240f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T240f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T865f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T240f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T240f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T865f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T240f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T240f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T240f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T240f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T240f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T240f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T240f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T240f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T239f37(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T239f43(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T239f42(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T239f41(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T239f44(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T239f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T55f216(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T146f12(T0* C, T0* a1, T0* a2);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T186f9(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T940f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T940f83(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T59f408(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T59f459(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T59f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T59f402(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T59f544(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T168f7(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T59f387(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T56f478(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T56f530(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T56f588(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T56f587(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T56f607(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T56f606(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T942f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T942f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T52f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T875c639(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T52f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T52f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T875c638(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T52f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T52f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T875c637(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T52f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T482f39(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T481f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T52f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T875c636(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T52f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T52f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T875c635(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T52f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T52f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T875c634(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T52f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T940f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T59f212(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T59f223(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T56f479(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T56f531(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T56f589(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_name */
extern void T186f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T942f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T942f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T52f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T875c640(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T52f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T940f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T59f213(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T59f224(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T56f480(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T56f532(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T942f39(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T942f51(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T940f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T59f214(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T59f225(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T56f481(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T56f533(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T942f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T942f58(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T942f68(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T942f67(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T621f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T942f66(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T51f195(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T943f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_local_supplier */
extern void T48f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T942f71(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T942f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T52f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T875c643(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T52f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T52f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T875c642(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T52f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T52f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T875c641(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T940f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T940f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T59f215(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T59f226(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T59f335(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T59f334(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T59f333(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T59f349(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T59f348(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T56f482(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T56f534(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T56f590(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T56f608(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T56f609(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T56f623(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T189f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T189f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T189f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T189f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T189f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T189f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T189f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T189f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T189f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T189f45(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T942f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T942f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T940f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T59f216(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T59f227(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T56f483(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T56f535(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T942f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T942f149(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T942f212(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T940f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T59f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T59f485(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T59f530(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T56f484(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T56f536(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T942f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T942f142(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T942f209(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T940f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T59f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T59f477(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T59f527(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T56f485(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T56f537(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T942f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T942f145(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T942f210(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T940f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T59f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T59f480(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T59f528(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T56f486(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T56f538(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T56f592(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T942f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T942f146(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T942f211(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T940f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T59f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T59f481(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T59f529(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T200f7(T0* C);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T56f487(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T56f539(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T942f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T942f147(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T940f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T59f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T59f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T56f488(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T56f540(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T942f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T942f148(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T940f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T59f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T59f483(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T56f489(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T56f541(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T942f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T942f137(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T942f206(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T942f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T942f204(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T942f203(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T942f202(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T942f201(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T942f200(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T942f199(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T942f198(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T942f197(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T940f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T59f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T59f472(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T59f524(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T59f523(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T59f522(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T59f521(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T59f520(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T59f519(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T59f518(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T59f517(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T59f516(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T59f515(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T56f490(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T56f542(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T942f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T942f138(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T940f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T59f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T59f473(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T56f491(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T56f543(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T942f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T942f139(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T940f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T59f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T59f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T56f492(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T56f544(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T942f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T942f140(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T942f208(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T942f207(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T940f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T59f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T59f475(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T59f526(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T59f525(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T56f493(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T56f545(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T481f20(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T459f9(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T942f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T942f141(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T940f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T59f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T59f476(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T56f494(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T56f546(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T482f20(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T942f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T942f135(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T942f196(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T940f50(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T59f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T59f470(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T59f514(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T56f495(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T56f547(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T942f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T942f136(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T940f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T59f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T59f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T56f496(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T56f548(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T942f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T942f143(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T940f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T59f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T59f478(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T56f497(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T942f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T942f144(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T940f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T59f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T59f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T56f498(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T942f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T942f150(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T942f213(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T52f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T875c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.is_like_current */
extern T1 T242f24(T0* C);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T242f34(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T52f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T875c790(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T52f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1229f7(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T516f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T52f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T875c789(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T52f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T942f252(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T51f198(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T943f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_create_supplier */
extern void T48f207(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T942f31(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T52f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T875c788(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T238f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T55f217(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T148f12(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T942f228(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T940f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T59f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T59f467(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T59f513(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T59f455(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T59f189(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T59f401(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_expression */
extern void T56f499(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T56f549(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T942f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T942f151(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T942f214(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T940f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T59f440(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T59f491(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T59f534(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T56f500(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T56f550(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T188f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T188f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T188f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T188f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T188f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T188f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T188f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T188f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T188f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T836f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T835f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T835f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T835f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T835f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T835f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T188f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T188f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T188f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T188f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T188f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T188f33(T0* C);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T942f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T942f54(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T940f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T59f217(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T59f228(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T56f501(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T56f551(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T56f593(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T942f43(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T942f55(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T940f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T59f218(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T59f229(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T56f502(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T56f552(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T942f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T942f56(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T940f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T59f219(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T59f230(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T56f503(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T56f553(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T942f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T942f59(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T940f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T59f220(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T59f231(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T56f504(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T56f554(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T942f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T942f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T940f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T59f221(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f232(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T59f345(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T59f344(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T59f343(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T59f342(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T59f341(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T59f340(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T59f339(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T59f338(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T59f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T59f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f232p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T56f505(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T56f555(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T942f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T942f153(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T940f37(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T780f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T940f93(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T59f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T59f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T56f506(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T56f556(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T942f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T942f163(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T942f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T51f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T943f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_static_supplier */
extern void T48f205(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T738f15(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T940f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T59f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T59f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T59f532(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T202f69(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T150f68(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T56f507(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T56f557(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T56f261(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T942f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T942f166(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T942f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T52f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T875c771(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T747f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T52f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T52f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T875c770(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T52f351(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T875c773(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T52f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f351(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T940f40(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T940f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T52f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T875c851(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T52f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T875c850(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T753f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T747f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T418f22(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T52f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T875c849(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T52f427(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T875c848(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T52f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f427(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f150(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T940f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T940f88(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T59f409(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T59f460(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T59f504(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T202f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T150f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T201f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1317f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1316f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1316f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1316f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1316f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1316f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1316c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1317f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1387c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge915os15003;
extern T0* ge915ov15003;
extern T0* T201f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1317c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T201f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T201f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T201c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T202c60(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T202f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T202f50(T0* C);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T56f508(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T56f558(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T942f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T942f167(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T940f68(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T59f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T59f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T56f509(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T56f559(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T942f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T942f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T52f352(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T875c774(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T52f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f352(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T942f238(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T942f237(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T942f236(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T942f235(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T942f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T940f41(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T59f410(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T59f461(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T59f509(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T59f508(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T59f507(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T59f506(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T59f505(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T56f510(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T56f560(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T56f595(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T942f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T942f169(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T940f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T59f411(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T59f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T56f511(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T56f561(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T942f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T942f170(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T940f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T59f412(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T59f463(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T56f512(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T56f562(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T942f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T942f171(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T242f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T242f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T242f21(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T940f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T59f413(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T59f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T56f513(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T56f563(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T942f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T942f172(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T764f19(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1230f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1230c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T242f23(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T764f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T940f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T59f414(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T59f465(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T56f514(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T56f564(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T942f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T942f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T52f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T875c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T468f43(T0* C);
/* ET_SYMBOL.text */
extern T0* T421f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T52f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T942f239(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T940f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T59f415(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T59f466(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T59f512(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T56f515(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T56f565(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T468f11(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T421f11(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T942f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T942f174(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T940f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T59f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T59f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T56f516(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T56f566(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T942f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T942f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T52f356(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T875c778(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T52f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f356(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T940f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T59f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T59f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T56f517(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T56f567(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T942f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T942f176(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T942f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T771f17(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T52f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T875c806(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T52f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T942f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T942f275(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T942f263(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T942f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T942f268(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T52f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T875c822(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T52f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T52f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T875c821(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T52f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T875c820(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T52f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T52f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T875c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T790f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T790f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T52f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T875c818(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T52f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T52f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T875c817(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T160f29(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T160f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T942f267(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1337f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1338c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1337c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1389f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1402c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1388c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge517os15003;
extern T0* ge517ov15003;
extern T0* T1337f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1389c2(void);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T52f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T875c816(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T52f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T942f262(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T942f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T771f29(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T942f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T942f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T942f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T942f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T942f240(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T52f383(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T875c805(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f383(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T942f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T942f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T942f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T942f271(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T940f72(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T940f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T59f442(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T59f493(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T59f538(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T59f554(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T59f565(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T205f33(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T59f553(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T59f564(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T59f569(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T59f558(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T59f557(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T59f552(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T59f563(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_procedure_call */
extern void T59f568(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T217c8(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T59f537(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T59f551(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T59f550(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T59f549(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T59f536(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T59f548(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T59f562(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T59f567(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T59f571(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T59f547(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T59f561(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T56f518(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T56f569(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T56f597(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T180f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T180f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T830f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T829f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T829f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T829f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T829f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T829f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T180f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T180f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T56f568(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T56f596(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T687f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T184f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T184f12(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T184f11(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T186f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_target */
extern void T186f26(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T942f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T942f177(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T940f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T59f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T59f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T56f519(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T56f570(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T942f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T942f178(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T161f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T942f243(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T776f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T776f14(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T940f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T59f439(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T59f490(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T59f533(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T56f520(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T56f571(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T187f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T187f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T187f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T187f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T187f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T187f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T187f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T187f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T187f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T187f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T187f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T187f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T187f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T187f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T187f33(T0* C);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T942f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T942f179(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T942f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T52f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T875c781(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T52f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T52f358(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T875c780(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T52f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f358(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T52f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T875c779(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T778f16(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T778f19(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T940f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T59f441(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T59f492(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T59f535(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T56f521(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T56f572(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T942f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T942f180(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T942f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T940f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T59f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T59f486(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T59f531(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T56f522(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T56f573(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T942f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T942f181(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T942f249(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T942f269(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T237f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T237f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T862f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T862f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T237f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T237f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T942f248(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T51f200(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T943f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T48f209(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T942f266(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T52f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T875c815(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T52f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T52f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T875c814(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T237f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T52f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T875c813(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T52f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T52f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T875c812(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T52f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T52f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T875c811(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T51f197(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T943f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T48f206(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T942f247(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T942f246(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T51f199(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T943f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T48f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T942f265(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T52f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T875c810(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T52f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T875c809(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T52f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T875c808(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T52f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T875c807(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T237f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T237f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T237f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T237f10(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T940f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T59f443(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T59f494(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T59f542(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T59f559(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T59f566(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T59f570(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T59f541(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T59f556(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T59f540(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T59f539(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T59f555(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T56f523(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T56f575(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T56f574(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T56f598(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T942f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T942f182(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T940f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T59f444(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T59f495(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T56f524(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T56f577(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T56f576(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T942f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T942f183(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T940f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T59f445(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T59f496(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T56f525(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T56f579(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T56f578(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T942f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T942f184(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T942f250(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T942f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T940f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T59f446(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T59f497(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T59f543(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T59f560(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T56f526(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T56f581(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T56f580(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T942f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T942f185(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T940f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T59f447(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T59f498(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T56f527(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T56f583(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T56f582(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T942f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T942f186(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T940f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T59f448(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T59f499(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T56f528(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T56f585(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T56f584(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T947f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T947f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T52f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T875c826(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T52f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T532f26(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T166f20(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T524f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T52f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T875c825(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T532f24(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T166f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T524f22(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T52f402(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T875c824(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T52f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f402(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T52f401(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T875c823(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T52f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f401(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T946f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T946f10(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T946f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T946f11(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T941f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T941f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T941f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1179f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1179f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1179f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T939f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T939f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T52f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T875c737(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T52f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T939f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T58f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge260os1584;
extern T0* ge260ov1584;
extern T0* T939f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T58c18(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T939f19(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T938f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T938f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T938f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T938f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T938f11(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T937f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T937f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T936f10(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T936f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T935f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T935f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T935f11(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T169f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T169f27(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T169f11(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T947f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T946f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T941f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T939f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T938f12(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T937f17(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T936f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T935f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T169f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T947f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T947f22(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T946f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T946f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T52f405(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T875c827(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T52f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f405(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T941f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T939f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T939f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T938f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T938f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T937f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T937f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T936f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T935f13(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T169f21(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T169f29(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T947f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T946f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T941f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T939f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T938f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T937f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T936f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T935f14(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T169f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T947f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T946f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T941f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T939f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T938f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T937f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T936f15(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T935f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T169f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T947f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T947f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T52f414(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T875c836(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f414(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T946f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T946f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T52f407(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T875c829(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T52f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f407(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T52f406(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T875c828(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T52f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f406(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T941f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T939f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T938f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T937f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T937f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T936f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T935f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T169f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T169f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T947f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T947f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T52f415(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T875c837(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f415(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T946f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T946f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T52f408(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T875c830(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f408(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T941f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T939f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T938f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T937f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T937f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T936f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T935f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T935f21(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T52f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T875c844(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f423(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T52f422(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T875c843(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f422(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T935f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T935f23(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T545f36(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T545f97(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T545f99(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T169f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T169f31(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T169f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T947f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T947f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T947f30(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T52f421(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T875c842(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f421(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T946f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T946f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T946f25(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T52f409(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T875c831(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f409(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T941f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T939f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T938f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T937f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T936f18(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T936f21(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T681f29(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1177f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1177f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1177f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1177f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].put */
extern void T1282f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1282f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_put */
extern void T1282f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1282f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1282f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1282f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1282f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search_position */
extern void T1282f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1282f11(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T681f58(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1282f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].resize */
extern void T1282f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1282f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1282f50(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1356f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1355f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1355f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1355f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1355f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1355f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1282f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1282f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1241f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1177f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1177f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1177f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1282f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1282f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found */
extern T1 T1282f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search */
extern void T1282f60(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T935f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T935f22(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T52f425(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T875c846(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f425(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T52f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T875c845(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T681f66(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T681f65(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T169f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T169f32(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T947f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T946f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T941f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T939f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T938f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T937f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T936f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T935f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T169f18(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T169f28(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T942f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T942f152(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T942f221(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T687f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T52f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T875c764(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T52f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T942f220(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T52f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T875c763(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T52f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T687f16(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T942f216(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T940f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T59f352(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T59f368(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T59f393(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T59f392(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T59f449(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T59f388(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T56f624(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T56f636(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T942f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T942f154(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T52f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T875c765(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T52f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T942f223(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T693f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T942f222(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T52f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T875c796(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T52f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T52f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T875c795(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T52f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T875c794(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T52f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T52f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T875c793(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T942f255(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T52f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T875c792(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T942f254(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T942f253(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T940f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T59f353(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T59f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T59f395(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T59f453(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T59f394(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T59f452(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T59f451(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T59f450(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T56f625(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T56f637(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T942f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T942f155(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T942f224(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T52f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T875c766(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T52f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T242f20(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T58f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge260os1585;
extern T0* ge260ov1585;
extern T0* T942f30(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T940f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T59f354(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T59f370(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T59f396(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T59f454(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T59f188(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T56f626(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T56f638(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T942f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T942f156(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T711f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T940f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T940f85(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T714f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T940f92(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T59f355(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T59f371(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T56f627(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T56f639(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T942f98(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T942f157(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T52f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T875c768(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T52f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T724f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T724f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T718f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T52f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T875c767(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T52f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T940f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T940f86(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T940f89(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T59f356(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T59f372(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T56f628(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T56f640(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T56f283(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T942f99(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T942f158(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T942f226(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T52f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T875c797(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T52f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T942f225(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T667f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T667f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T940f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T940f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T59f357(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T59f373(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f398(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f398p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f397(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f397p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T56f629(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T56f641(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T942f100(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T942f159(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T940f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T59f358(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f374(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f374p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T56f630(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T56f642(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T942f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T942f160(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T703f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T703f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T940f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T59f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f375(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f375p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T56f631(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T56f643(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T942f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T942f161(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T942f227(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T942f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T52f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T875c802(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T52f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T875c801(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T709f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T709f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T706f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T183f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T705f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T705f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T52f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T875c800(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T709f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T705f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T52f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T875c799(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T52f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T52f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T875c798(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T706f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T940f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T59f360(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T59f376(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T59f399(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T59f456(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T59f500(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T709f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T705f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T56f632(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T56f644(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T56f648(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T942f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T942f162(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T940f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T59f361(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T59f377(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T56f633(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T56f645(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T942f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T942f164(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T942f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T52f347(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T875c769(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f347(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T940f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T59f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T59f378(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T59f400(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T56f634(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T56f646(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T942f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T942f165(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T942f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T52f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T875c772(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T749f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T940f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T59f363(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T59f379(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T59f403(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T56f635(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T56f647(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T947f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T947f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T52f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T875c838(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T904f5(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T52f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T875c841(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T52f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T52f417(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T875c840(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f417(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1186f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1186f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1186f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1186f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].put */
extern void T1292f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1292f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_put */
extern void T1292f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_put */
extern void T1292f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1292f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1292f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1292f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search_position */
extern void T1292f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1292f11(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T532f61(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T524f59(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1292f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].resize */
extern void T1292f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1292f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1292f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1292f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_resize */
extern void T1292f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1245f18(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1186f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1186f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found_item */
extern T6 T1292f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1292f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found */
extern T1 T1292f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search */
extern void T1292f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T52f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T875c839(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T946f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T941f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T939f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T938f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T937f16(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T936f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T935f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T169f19(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T942f276(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T942f280(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T940f80(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T59f510(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T59f545(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T56f652(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T56f657(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T56f658(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T942f277(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T942f281(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T940f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T59f511(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T59f546(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T56f651(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T56f656(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T942f278(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T942f282(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T942f284(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T184f6(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T184f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T940f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T59f572(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T59f575(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T59f578(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T56f649(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T56f654(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T56f659(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T942f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T942f283(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T52f426(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T875c847(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T456f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T52f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f426(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T940f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T59f573(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T59f576(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T56f650(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T56f655(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T942f285(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T942f286(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T940f79(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T59f574(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T59f577(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T56f653(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T889f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T298f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1225f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1347f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1346f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1346f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1346f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1346f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1346f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1346c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1347f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1391c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge929os15003;
extern T0* ge929ov15003;
extern T0* T1225f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1347c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1225f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1225f1(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1225f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1225c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T222f15(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.reset */
extern void T641f63(T0* C);
/* ET_INFIX_NAME.reset */
extern void T640f92(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T639f63(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T638f64(T0* C);
/* ET_IDENTIFIER.reset */
extern void T119f107(T0* C);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T641f62(T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T640f91(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T639f62(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T638f63(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T119f96(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T904f54(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T683f57(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T681f63(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T545f96(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T544f95(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T532f68(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T524f64(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T283f87(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T160f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T161f93(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T392f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T159f91(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T55f159(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T904f55(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T683f58(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T681f62(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T545f95(T0* C);
/* ET_BIT_N.reset */
extern void T544f96(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T532f69(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T533f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T524f65(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T283f88(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T904f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T683f59(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T681f64(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T545f98(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T544f97(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T532f70(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T524f66(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T283f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T634f79(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T633f78(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T297f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T292f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T634f80(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T633f79(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T633f79p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T297f75(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T292f79(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T292f79p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T634f84(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T633f83(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T297f79(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T292f83(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T634f85(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T633f84(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T297f80(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T292f84(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T628f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T627f80(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T625f80(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T226f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T225f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T223f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T163f81(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T628f77(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T627f81(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T627f81p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T625f81(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T625f81p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T226f70(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T225f72(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T223f72(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T163f82(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T628f81(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T627f85(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T625f85(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T226f80(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T225f84(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T223f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T163f93(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T628f82(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T627f86(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T625f86(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T226f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T225f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T223f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T163f94(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T161f95(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T159f93(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T55f179(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T161f94(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T159f92(T0* C);
/* ET_CLASS.reset_type */
extern void T55f204(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T205f39(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T204f39(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T203f38(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T197f38(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T143f35(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T205f37(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T204f37(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T203f36(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T197f36(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T143f34(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T205f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T204f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T203f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T197f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T143f36(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T205f42(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T204f42(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T203f41(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T197f41(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T143f38(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T205f36(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T204f36(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T203f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T197f35(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T143f33(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T205f43(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T204f43(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T203f42(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T197f42(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T143f39(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T205f44(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T204f44(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T203f43(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T197f43(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T143f40(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T310f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T307f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T307f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T307f12(T0* C);
/* DS_LINKED_QUEUE [STRING].make */
extern T0* T958c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T956c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1189c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].new_cursor */
extern T0* T1189f1(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1190c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T90f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1209c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1343c2(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1209f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1209f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1344c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1209f35(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1209f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1209f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1209f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1209f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1209f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1209f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1345f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1390c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1342c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1345c3(void);
/* XM_DOCUMENT.make */
extern T0* T84c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T84f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T84f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T84f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1308c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T84f6(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T84f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T85f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T256f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T84f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T84f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T84f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T84f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T84f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T84f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T84f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T84f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T84f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T84f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T84f5(T0* C);
/* XM_DOCUMENT.list_make */
extern void T84f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T85c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T85f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1225os9478;
extern T0* ge1225ov9478;
extern T0* T84f3(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1213c8(void);
/* XM_NAMESPACE.make */
extern void T1213f7(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1213c7(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T310f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T307f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T90f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T90f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T86f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T892f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1234f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1234c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T892f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T893c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T90f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1210c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T85f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T85f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T85f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T85f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1210c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T310f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T307f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T90f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1211c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1211c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T310f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T307f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T90f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1212c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T310f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T307f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T956f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].force_last */
extern void T1189f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].put_right */
extern void T1293f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].attach_left */
extern void T1293f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1293c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].is_empty */
extern T1 T1189f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T956f8(T0* C);
/* DS_HASH_TABLE [STRING, STRING].set_equality_tester */
extern void T40f61(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T956f9(T0* C);
/* DS_HASH_TABLE [STRING, STRING].make_map_default */
extern T0* T40c60(void);
/* DS_HASH_TABLE [STRING, STRING].default_capacity */
extern T6 T40f36(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T90f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T85c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T85c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T84f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T84f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T90f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1209f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1209f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1209f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1209f13(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1209f11(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1213f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1209f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1209f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1209f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1209f45(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1345f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1342f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1342f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1342f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1342f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1342f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1209f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1209f5(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1209f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1209f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1209f10(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1209f36(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1209f33(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1343f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1209f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1213f6(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1209f2(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1209f1(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T310f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T307f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T956f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_last */
extern void T1189f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].set_last_cell */
extern void T1189f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].forget_right */
extern void T1293f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_last_cursors_after */
extern void T1189f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_next_cursor */
extern void T1190f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_after */
extern void T1190f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].wipe_out */
extern void T1189f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_all_cursors_after */
extern void T1189f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T956f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1199os24090;
extern T0* ge1199ov24090;
extern T0* T956f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T307f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T956f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].back */
extern void T1190f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_back */
extern void T1189f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].add_traversing_cursor */
extern void T1189f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_traversing_cursor */
extern void T1189f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set */
extern void T1190f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].go_before */
extern void T1190f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_go_before */
extern void T1189f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_before */
extern void T1190f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_off */
extern T1 T1189f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].item */
extern T0* T1190f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].finish */
extern void T1190f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_finish */
extern void T1189f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1199os24091;
extern T0* ge1199ov24091;
extern T0* T956f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T307f4(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T90f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T85f2(T0* C);
/* XM_DOCUMENT.process */
extern void T84f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1309f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T85f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T84f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T310f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T307f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T956f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].force_new */
extern void T40f62(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].last */
extern T0* T1189f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T956f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T307f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING].force */
extern void T958f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING].is_empty */
extern T1 T958f2(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T956f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T307f8(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T307f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T307f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1166os17717;
extern T0* ge1166ov17717;
extern T0* T307f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T90f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T255c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T310f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T307f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T90f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T310f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T307f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T307f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T307f6(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T307f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T307f39(T0* C);
/* DS_LINKED_QUEUE [STRING].remove */
extern void T958f8(T0* C);
/* DS_LINKED_QUEUE [STRING].wipe_out */
extern void T958f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T307f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1166os17716;
extern T0* ge1166ov17716;
extern T0* T307f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1166os17724;
extern T0* ge1166ov17724;
extern T0* T307f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1166os17723;
extern T0* ge1166ov17723;
extern T0* T307f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T307f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1166os17718;
extern T0* ge1166ov17718;
extern T0* T307f22(T0* C);
/* DS_LINKED_QUEUE [STRING].item */
extern T0* T958f1(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T307f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T956f1(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T90f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T310f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T307f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T90f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T310f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T307f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T90f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T89f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T307f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T90f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T89f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T196f25(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T171f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T170f8(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T196f27(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T171f6(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T170f5(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T196f23(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T196f31(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T196f34(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T171f7(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T171f2(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T170f6(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T196f24(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T196f32(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T196f35(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T171f5(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T170f4(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T196f22(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T171f8(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T170f7(T0* C);
/* KL_STDIN_FILE.read_character */
extern void T899f19(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T899f21(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T899f14(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T899f6(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T899f11(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T896f31(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].remove */
extern void T1149f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].wipe_out */
extern void T1149f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T896f33(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T896f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T896f36(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER].force */
extern void T1149f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER].put_right */
extern void T1250f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].is_empty */
extern T1 T1149f4(T0* C);
/* DS_LINKABLE [CHARACTER].make */
extern T0* T1250c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T896f23(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1264os23533;
extern T0* ge1264ov23533;
extern T0* T896f26(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1150f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1150f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1150f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1150f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1150f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge344os2766;
extern T0* ge344ov2766;
extern T0* T896f21(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1150c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T896f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T896f24(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T896f34(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1325f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T896f32(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T894f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T894f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1150f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1150f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* ET_KEYWORD.position */
extern T0* T166f9(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1219f27(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1178f25(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1219f24(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1178f22(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1236f4(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1219f25(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1178f23(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1236f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1237f9(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1219f26(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1178f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T647f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T639f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T440f35(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T647f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T641f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T639f8(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1219f11(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1178f10(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T634f52(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T633f50(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T628f53(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T627f54(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T625f54(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T297f48(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T292f50(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T226f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T225f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T223f51(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T163f57(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1219f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T634f54(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T633f52(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T628f55(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T627f56(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T625f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T297f50(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T292f52(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T226f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T225f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T223f53(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T163f59(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1219f14(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1178f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T634f55(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T633f53(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T628f56(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T627f57(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T625f57(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T297f51(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T292f53(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T226f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T225f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T223f54(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T163f60(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1178f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T634f56(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T633f54(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T628f57(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T627f58(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T625f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T297f52(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T292f54(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T226f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T225f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T223f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T163f61(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1219f16(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1178f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T634f57(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T633f55(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T628f58(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T627f59(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T625f59(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T297f53(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T292f55(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T226f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T225f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T223f56(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T163f62(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T634f50(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T633f48(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T628f51(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T627f52(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T625f52(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T297f46(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T292f48(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T226f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T225f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T223f49(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T163f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T634f58(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T633f56(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T628f59(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T627f60(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T625f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T297f54(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T292f56(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T226f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T225f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T223f57(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T163f63(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1219f12(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1178f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T634f53(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T633f51(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T628f54(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T627f55(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T625f55(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T297f49(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T292f51(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T226f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T225f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T223f52(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T163f58(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T281f4(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T250f19(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T123f23(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T281f3(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T250f20(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T123f24(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T281f6(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T250f21(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T123f25(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T281f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T281f11(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T250f15(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T250f26(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T250f35(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T250f34(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T123f10(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T123f14(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T123f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T123f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T123f11(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T281f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T281f10(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T250f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T250f30(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T123f27(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T123f33(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T281f9(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T250f23(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T123f28(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T811f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T801f15(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T800f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T799f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T798f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T797f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T795f18(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T785f8(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T778f11(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T776f10(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T775f7(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T771f11(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T770f7(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T769f6(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T768f7(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T764f7(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T762f7(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T761f7(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T760f7(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T759f7(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T754f8(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T753f10(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T738f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T690f7(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T519f10(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T516f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T487f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T486f17(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T485f18(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T484f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T482f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T481f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T480f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T479f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T478f29(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T477f19(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T476f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T475f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T474f18(T0* C);
/* ET_VOID.assertion */
extern T0* T462f12(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T426f16(T0* C);
/* ET_RESULT.assertion */
extern T0* T206f12(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T186f8(T0* C);
/* ET_CURRENT.assertion */
extern T0* T182f13(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T119f73(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T811f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1328f12(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1229f11(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T809f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T801f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T800f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T799f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T798f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T797f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T795f16(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T785f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T778f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T776f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T775f6(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T771f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T770f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T769f5(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T768f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T764f6(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T762f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T761f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T760f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T759f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T754f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T753f9(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T738f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T690f6(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T519f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T516f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T487f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T486f10(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T485f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T484f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T482f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T481f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T480f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T479f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T478f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T477f12(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T476f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T475f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T474f11(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T471f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T462f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T426f9(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T206f11(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T186f7(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T182f12(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T119f72(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T801f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T800f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T799f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T798f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T797f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T795f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T801f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T798f23(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T738f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T736f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T487f9(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T486f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T480f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T479f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T478f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T474f10(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T186f6(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T119f71(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T738f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T487f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T486f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T480f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T479f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T478f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T474f27(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T186f18(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T119f87(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T738f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T487f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T486f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T480f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T479f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T478f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T474f28(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T186f19(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T119f88(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T738f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T487f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T486f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T480f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T479f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T478f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T474f29(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T186f20(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T119f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T532f60(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T533f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T524f58(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T55f152(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1328f15(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T769f12(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T690f11(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T186f14(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T913f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T904f29(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T683f30(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T681f25(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T679f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T545f27(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T544f27(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T532f43(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T524f39(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T283f17(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T161f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T159f19(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T55f82(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T647f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T643f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T647f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T643f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T647f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T643f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T647f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T643f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T643f38(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T647f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T643f6(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T641f39(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T640f19(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T639f21(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T638f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T647f38(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T643f57(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T647f39(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T647f41(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T643f58(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T643f60(T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T647f40(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T75f3(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T647f42(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T643f59(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T641f57(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T641f43(T0* C);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T640f68(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T639f57(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T639f25(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T638f54(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T477f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T476f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T475f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T421f8(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T415f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T487f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1233c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1233f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T486f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T485f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T484f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T482f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T481f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T480f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T479f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T478f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T477f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T476f35(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T475f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T474f34(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T468f80(T0* C);
/* ET_VOID.last_position */
extern T0* T462f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T426f27(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T421f16(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T418f17(T0* C);
/* ET_RESULT.last_position */
extern T0* T206f23(T0* C);
/* ET_CURRENT.last_position */
extern T0* T182f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T166f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T119f85(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T600f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T289f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T598f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T289f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T902f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T552f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T551f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T540f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T902f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T540f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T902f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T683f48(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T681f50(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T552f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T158f894(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T551f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T158f893(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T545f80(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T544f79(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T540f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T902f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T158f891(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T538f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T158f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T538f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T538f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T683f11(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T681f4(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T545f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T544f10(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T540f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T158f890(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T480f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T479f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T478f8(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T360f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T320c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T358f1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T354f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T319f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T360f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T358f4(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T354f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T319f4(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T360f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T896f3(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T896f2(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T358f5(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T354f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T319f5(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T360f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T358f6(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T354f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T319f6(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T645f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T75f2(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T645f5(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T641f58(T0* C, T0* a1);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T640f69(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T640f23(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T639f58(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T638f55(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T638f20(T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T119f90(T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T645f3(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T641f10(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T640f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T639f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T638f7(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T119f44(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T900f1(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T900f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T900f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T900f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T900f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T900f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T900f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T900f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T900f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T480f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T480f47(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T480f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T479f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T479f48(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T479f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T478f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T478f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T478f17(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T468f19(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T468f86(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T468f41(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T459f17(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T459f75(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T459f21(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T421f12(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T421f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T421f13(T0* C);
/* ET_CURRENT.to_text */
extern T0* T182f17(T0* C);
/* ET_CURRENT.append_to_string */
extern void T182f32(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T182f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T166f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T166f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T166f19(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T119f48(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T119f108(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T487f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T486f32(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T485f28(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T484f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T482f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T481f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T480f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T479f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T478f20(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T477f25(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T476f29(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T475f24(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T474f33(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T468f9(T0* C);
/* ET_VOID.is_null */
extern T1 T462f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T459f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T446f10(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T440f45(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T426f26(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T421f9(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T418f16(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T415f12(T0* C);
/* ET_RESULT.is_null */
extern T1 T206f22(T0* C);
/* ET_CURRENT.is_null */
extern T1 T182f20(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T166f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T119f40(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1233f1(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T487f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T486f30(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T485f26(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T484f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T482f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T481f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T480f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T479f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T478f18(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T477f23(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T476f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T475f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T474f31(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T468f10(T0* C);
/* ET_VOID.line */
extern T6 T462f20(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T459f18(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T456f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T446f11(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T440f43(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T426f24(T0* C);
/* ET_SYMBOL.line */
extern T6 T421f10(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T418f14(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T415f10(T0* C);
/* ET_RESULT.line */
extern T6 T206f19(T0* C);
/* ET_CURRENT.line */
extern T6 T182f18(T0* C);
/* ET_KEYWORD.line */
extern T6 T166f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T119f35(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1233f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T487f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T486f31(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T485f27(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T484f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T482f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T481f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T480f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T479f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T478f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T477f24(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T476f28(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T475f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T474f32(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T468f42(T0* C);
/* ET_VOID.column */
extern T6 T462f21(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T459f19(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T456f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T446f45(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T440f44(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T426f25(T0* C);
/* ET_SYMBOL.column */
extern T6 T421f14(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T418f15(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T415f11(T0* C);
/* ET_RESULT.column */
extern T6 T206f20(T0* C);
/* ET_CURRENT.column */
extern T6 T182f19(T0* C);
/* ET_KEYWORD.column */
extern T6 T166f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T119f36(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge541os11475;
extern T0* ge541ov11475;
extern T0* T499f18(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T499f16(T0* C);
/* ET_INVARIANTS.type */
extern T0* T499f17(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T499f12(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T634f47(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T633f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T628f48(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T627f50(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T625f50(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T499f13(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T297f43(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T292f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T226f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T225f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T223f46(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T163f52(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T499f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T634f48(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T628f49(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T499f14(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T297f44(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T226f45(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T225f47(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T223f47(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T163f53(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T499f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1328f7(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1230f9(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1229f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T801f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T800f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T799f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T798f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T797f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T795f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T785f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T778f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T776f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T775f5(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T771f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T770f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T769f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T768f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T764f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T762f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T761f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T760f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T759f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T754f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T753f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T738f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T690f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T519f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T516f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T487f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T486f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T485f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T484f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T482f9(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T481f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T480f13(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T479f13(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T478f13(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T477f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T476f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T475f9(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T474f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T462f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T426f8(T0* C);
/* ET_RESULT.expression_item */
extern T0* T206f10(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T186f5(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T182f10(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T119f43(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1328f14(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1229f13(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T801f20(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T800f21(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T799f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T798f21(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T797f22(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T795f22(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T785f11(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T778f14(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T776f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T775f10(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T771f15(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T770f10(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T769f10(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T768f10(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T764f10(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T762f10(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T761f10(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T760f10(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T759f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T753f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T738f14(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T690f10(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T519f15(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T516f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T487f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T486f22(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T485f21(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T484f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T482f23(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T481f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T480f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T479f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T478f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T477f27(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T476f31(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T475f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T474f23(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T462f15(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T426f19(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T186f13(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1114f3(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T754f11(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T206f15(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T182f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T119f78(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1114f4(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T794f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T487f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T486f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T482f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T481f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T480f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T479f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T478f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T477f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T476f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T475f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T474f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T426f10(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T485f13(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T484f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T482f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T481f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T480f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T479f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T478f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T477f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T476f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T475f13(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T426f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T487f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T486f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T485f14(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T484f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T482f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T481f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T477f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T476f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T475f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T474f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T426f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T487f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T486f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T485f15(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T484f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T480f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T479f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T478f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T477f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T476f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T475f15(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T474f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T426f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T487f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T486f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T485f16(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T484f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T482f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T481f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T480f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T479f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T478f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T474f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T426f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T487f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T486f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T485f17(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T484f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T482f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T481f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T480f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T479f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T478f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T477f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T476f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T475f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T474f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T801f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T800f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T799f20(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T771f14(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T771f18(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T801f26(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T801f28(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T800f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T800f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T799f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T799f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T798f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T798f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T797f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T797f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T795f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T795f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T771f22(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T767f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T766f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T647f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T643f7(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T641f40(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T640f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T639f22(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T638f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T459f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T446f19(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T440f18(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T119f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T767f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T766f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T647f19(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T643f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T641f17(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T640f43(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T639f33(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T638f30(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T468f21(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T459f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T446f20(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T440f19(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T119f54(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T767f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T766f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T647f20(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T643f42(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T641f18(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T640f44(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T639f34(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T638f31(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T468f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T459f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T446f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T440f20(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T119f55(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T767f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T766f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T647f21(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T643f43(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T641f19(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T640f45(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T639f35(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T638f32(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T468f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T459f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T446f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T440f21(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T119f56(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T767f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T766f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T647f22(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T643f44(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T641f20(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T640f46(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T639f36(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T638f33(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T468f24(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T459f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T446f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T440f22(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T119f57(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T767f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T766f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T647f24(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T643f46(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T641f22(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T640f48(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T639f38(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T638f35(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T468f25(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T459f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T446f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T440f23(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T119f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T767f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T766f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T647f25(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T643f47(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T641f23(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T640f49(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T639f39(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T638f36(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T468f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T459f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T446f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T440f24(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T119f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T767f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T766f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T647f26(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T643f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T641f24(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T640f50(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T639f40(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T638f37(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T468f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T459f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T446f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T440f25(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T119f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T767f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T766f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T647f27(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T643f48(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T641f25(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T640f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T639f41(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T638f38(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T468f28(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T459f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T446f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T440f26(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T119f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T767f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T766f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T647f30(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T643f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T641f28(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T640f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T639f44(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T638f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T468f29(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T459f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T446f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T440f27(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T119f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T767f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T766f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T647f31(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T643f51(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T641f29(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T640f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T639f45(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T638f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T468f30(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T459f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T446f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T440f28(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T119f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T767f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T766f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T647f32(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T643f52(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T641f30(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T640f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T639f46(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T638f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T468f31(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T459f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T446f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T440f29(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T119f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T767f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T766f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T647f33(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T643f53(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T641f31(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T640f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T639f47(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T638f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T468f32(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T459f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T446f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T440f30(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T119f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T767f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T766f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T647f34(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T643f54(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T641f48(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T640f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T639f48(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T638f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T468f33(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T459f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T446f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T440f31(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T119f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T767f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T766f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T647f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T643f37(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T641f11(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T640f8(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T639f18(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T638f24(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T468f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T459f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T446f33(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T440f32(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T119f49(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T767f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T766f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T647f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T643f36(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T641f12(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T640f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T639f19(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T638f25(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T468f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T459f37(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T446f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T440f33(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T119f50(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T767f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T766f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T647f37(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T643f55(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T641f13(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T640f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T639f20(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T638f26(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T468f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T459f38(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T446f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T440f34(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T119f51(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T767f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T647f18(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T643f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T641f16(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T640f42(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T639f32(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T638f29(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T468f12(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T459f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T446f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T440f11(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T119f53(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T767f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T766f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T647f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T643f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T641f15(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T640f41(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T639f31(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T638f28(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T468f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T459f13(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T446f15(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T440f14(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T119f52(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T766f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T647f29(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T643f50(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T641f27(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T640f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T639f43(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T638f40(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T468f13(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T459f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T446f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T440f12(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T119f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T767f9(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T766f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T647f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T643f49(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T641f26(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T640f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T639f42(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T638f39(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T468f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T459f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T446f16(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T440f15(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T119f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T767f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T766f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T647f23(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T643f45(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T641f21(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T640f47(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T639f37(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T638f34(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T468f14(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T459f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T446f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T440f13(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T119f58(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T641f54(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T640f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T639f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T638f51(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T468f37(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T459f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T446f36(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T440f36(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T418f10(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T119f82(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T641f55(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T640f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T639f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T638f52(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T468f38(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T459f40(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T446f37(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T440f37(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T418f11(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T119f83(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T767f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T766f10(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T468f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T459f16(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T446f18(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T440f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T767f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T766f30(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T468f8(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T459f8(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T446f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T440f42(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T418f12(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T767f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T767f29(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T766f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T766f29(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T468f39(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T468f40(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T459f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T459f42(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T446f38(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T446f39(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T440f38(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T440f39(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T418f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T687f9(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T184f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1328f8(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T771f8(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T186f10(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T184f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1328f9(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T769f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T687f8(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1337f3(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1328f6(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1230f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1229f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T801f24(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T800f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T799f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T798f25(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T797f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T795f25(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T790f9(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T785f13(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T780f9(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T778f17(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T776f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T775f12(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T771f19(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T770f12(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T769f13(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T768f12(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T764f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T762f12(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T761f12(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T760f12(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T759f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T754f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T753f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T738f17(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T690f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T687f12(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T519f17(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T516f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T487f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T486f24(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T485f23(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T484f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T482f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T481f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T480f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T479f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T478f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T477f29(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T476f33(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T475f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T474f25(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T462f17(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T426f21(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T206f18(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T186f16(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T183f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T182f23(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T119f84(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T687f10(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1337f2(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1328f5(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1230f6(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1229f5(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T801f17(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T800f18(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T799f18(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T798f19(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T797f20(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T795f20(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T790f7(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T785f10(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T780f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T778f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T776f13(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T775f9(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T771f13(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T770f9(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T769f9(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T768f9(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T764f9(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T762f9(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T761f9(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T760f9(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T759f9(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T754f10(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T753f12(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T738f13(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T690f9(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T687f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T519f13(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T516f10(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T487f19(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T486f19(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T485f20(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T484f20(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T482f22(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T481f22(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T480f30(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T479f32(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T478f32(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T477f21(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T476f25(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T475f20(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T474f20(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T462f14(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T426f18(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T206f14(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T186f12(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T183f3(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T182f15(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T119f77(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T641f9(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T640f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T639f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T638f6(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T119f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1328f11(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1230f1(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1229f10(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T801f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T800f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T799f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T798f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T797f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T795f23(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T785f12(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T778f15(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T776f16(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T775f11(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T771f16(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T770f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T769f11(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T768f11(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T764f11(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T762f11(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T761f11(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T760f11(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T759f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T754f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T753f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T738f16(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T690f12(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T519f16(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T516f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T487f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T486f23(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T485f22(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T484f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T482f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T481f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T480f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T479f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T478f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T477f28(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T476f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T475f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T474f24(T0* C);
/* ET_VOID.is_current */
extern T1 T462f16(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T426f20(T0* C);
/* ET_RESULT.is_current */
extern T1 T206f16(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T186f15(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T119f81(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1328f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1230f8(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1229f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T801f25(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T800f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T799f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T798f26(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T797f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T795f26(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T785f14(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T778f18(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T778f20(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T776f18(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T776f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T775f13(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T771f20(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T771f21(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T770f13(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T769f14(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T768f13(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T764f13(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T762f13(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T761f13(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T760f13(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T759f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T754f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T753f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T738f18(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T690f14(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T519f18(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T519f20(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T516f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T487f25(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T486f25(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T485f24(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T484f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T482f26(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T481f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T480f7(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T479f7(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T478f7(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T477f11(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T476f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T475f10(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T474f26(T0* C);
/* ET_VOID.position */
extern T0* T462f18(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T426f22(T0* C);
/* ET_RESULT.position */
extern T0* T206f17(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T186f17(T0* C);
/* ET_CURRENT.position */
extern T0* T182f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1328f13(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1230f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1229f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T801f27(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T790f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T800f27(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T799f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T798f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T797f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T795f28(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T785f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T778f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T776f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T775f14(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T771f23(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T770f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T769f15(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T768f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T764f14(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T762f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T761f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T760f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T759f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T754f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T753f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T738f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T690f15(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T468f79(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T780f10(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T519f19(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T516f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T487f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T486f29(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T485f25(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T484f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T482f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T481f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T480f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T479f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T478f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T477f30(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T476f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T475f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T474f30(T0* C);
/* ET_VOID.last_leaf */
extern T0* T462f19(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T426f23(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T206f21(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T186f21(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T182f25(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T634f59(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T297f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T292f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T634f63(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T633f61(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T628f64(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T627f65(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T625f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T297f60(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T292f61(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T226f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T225f62(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T223f62(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T163f67(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T634f64(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T633f62(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T628f65(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T627f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T625f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T297f61(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T292f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T226f61(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T225f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T223f63(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T163f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T634f68(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T297f87(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T297f86(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T297f85(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T297f83(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T633f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T628f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T628f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T628f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T628f87(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T628f85(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T627f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T625f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T297f65(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T292f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T226f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T226f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T225f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T225f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T223f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T223f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T163f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T634f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T634f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T634f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T634f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T634f88(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T633f67(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T633f90(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T633f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T633f88(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T633f87(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T628f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T628f86(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T627f68(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T627f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T627f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T627f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T627f89(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T625f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T625f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T625f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T625f90(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T625f89(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T297f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T297f84(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T292f67(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T292f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T292f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T292f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T292f87(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T226f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T226f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T226f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T226f74(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T225f65(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T225f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T225f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T225f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T225f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T225f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T223f65(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T223f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T223f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T223f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T223f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T163f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T163f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T163f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T163f87(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T163f86(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T634f67(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T633f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T297f64(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T292f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T634f66(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T633f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T297f63(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T292f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T634f65(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T633f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T297f62(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T292f63(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T226f32(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T225f34(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T223f34(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T226f33(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T225f35(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T223f35(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T634f21(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T633f20(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T297f7(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T292f6(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T634f23(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T633f22(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T297f3(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T292f2(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T634f22(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T633f21(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T297f4(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T292f3(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T634f24(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T633f23(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T297f5(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T292f4(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T634f45(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T633f57(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T628f60(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T627f61(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T625f61(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T297f55(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T292f57(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T226f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T225f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T223f58(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T163f50(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T634f18(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T633f26(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T297f24(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T292f26(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T913f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T904f10(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T683f10(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T681f7(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T679f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T545f9(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T544f12(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T532f36(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T524f34(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T283f6(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T161f13(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T159f11(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T55f76(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T913f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T904f47(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T683f49(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T681f53(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T679f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T545f81(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T544f80(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T532f56(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T524f54(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T283f73(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T161f78(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T159f77(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T55f144(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T913f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T904f1(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T683f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T681f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T679f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T545f8(T0* C);
/* ET_BIT_N.type */
extern T0* T544f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T532f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T524f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T283f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T161f12(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T159f4(T0* C);
/* ET_CLASS.type */
extern T0* T55f40(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T913f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T904f52(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T683f54(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T681f59(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T679f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T545f92(T0* C);
/* ET_BIT_N.label */
extern T0* T544f91(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T532f62(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T524f60(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T283f84(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T161f88(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T159f89(T0* C);
/* ET_CLASS.label */
extern T0* T55f157(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_subset */
extern T1 T889f4(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_subset */
extern T1 T298f3(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_subset */
extern T1 T222f5(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_subset */
extern T1 T205f29(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_subset */
extern T1 T204f30(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.is_subset */
extern T1 T203f29(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.is_subset */
extern T1 T197f29(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.is_subset */
extern T1 T143f27(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T889f6(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T298f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T222f7(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T205f14(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T204f15(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T203f14(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T197f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T143f20(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T889f10(T0* C);
/* ET_DYNAMIC_TYPE_LIST.special_type */
extern T0* T173f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T298f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T222f10(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T205f31(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T204f32(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T203f31(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T197f31(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T143f29(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T889f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T298f9(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T222f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T889f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has_expanded */
extern T1 T173f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T298f4(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T222f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T205f13(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T204f14(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T203f13(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T197f13(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T143f19(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T889f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T298f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T222f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T205f15(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T204f16(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T203f15(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T197f15(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T143f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T161f15(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T166f14(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T159f15(T0* C);
/* ET_CLASS.is_separate */
extern T1 T55f83(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T55f84(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T639f16(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T638f14(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T119f47(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T641f36(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T640f16(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T119f46(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T641f50(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T640f61(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T639f50(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T638f47(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T119f74(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T641f52(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T640f63(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T639f52(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T638f49(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T119f75(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T640f11(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T638f8(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T641f49(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T640f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T639f49(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T638f46(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T119f17(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T641f51(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T640f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T639f51(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T638f48(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T119f19(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T641f53(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T640f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T639f53(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T638f50(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T119f23(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T641f34(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T640f14(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T639f13(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T638f11(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T119f33(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T641f32(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T640f12(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T639f11(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T638f9(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T119f37(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T641f33(T0* C, T0* a1);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T640f13(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T639f12(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T638f10(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T119f42(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T641f56(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T640f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T639f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T638f53(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T119f86(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T641f59(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T640f72(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T639f59(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T638f58(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T119f92(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T641f35(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T640f15(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T639f14(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T638f12(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T242f30(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T242f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T242f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T242f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T242f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T242f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T242f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T242f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T242f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T242f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T545f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T544f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T283f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T161f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T159f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T55f129(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T545f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T544f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T283f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T161f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T159f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T55f130(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T242f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T242f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T242f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T545f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T544f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T283f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T161f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T159f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T55f134(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T242f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T242f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T545f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T544f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T283f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T161f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T159f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T55f137(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T242f12(T0* C, T0* a1);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T545f89(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T544f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T283f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T161f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T159f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T55f153(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T242f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T545f90(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T544f89(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T283f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T161f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T159f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T55f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T242f7(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T242f8(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T545f32(T0* C);
/* ET_BIT_N.root_context */
extern T0* T544f31(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T283f26(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T161f29(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T159f28(T0* C);
/* ET_CLASS.root_context */
extern T0* T55f93(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T242f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T904f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T683f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T681f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T545f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T544f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T532f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T524f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T283f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T161f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T392f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T160f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T159f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T55f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T904f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T683f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T681f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T545f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T544f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T532f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T524f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T283f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T161f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T159f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T55f87(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T904f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T683f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T681f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T545f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T544f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T532f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T524f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T283f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T161f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T159f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T55f96(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T904f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T683f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T681f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T545f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T544f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T532f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T524f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T283f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T161f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T159f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T55f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T904f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T683f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T681f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T545f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T544f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T532f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T524f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T283f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T161f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T159f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T55f101(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T904f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T683f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T681f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T545f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T544f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T532f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T524f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T283f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T161f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T159f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T55f95(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T904f14(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T683f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T681f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T545f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T544f20(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T532f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T524f27(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T283f13(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T160f14(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T161f21(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T392f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T159f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T55f85(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T904f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T683f16(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T55f105(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T681f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T545f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T544f21(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T532f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T524f28(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T283f14(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T160f15(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T161f22(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T392f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T159f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T55f86(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T904f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T683f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T681f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T545f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T544f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T532f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T524f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T283f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T161f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T159f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T55f94(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T904f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T683f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T681f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T545f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T544f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T532f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T524f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T283f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T161f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T392f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T160f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T159f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T55f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T904f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T683f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T681f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T545f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T544f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T532f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T524f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T283f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T161f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T159f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T55f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T904f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T683f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T681f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T545f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T544f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T532f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T524f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T283f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T161f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T159f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T55f97(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T904f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T55f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T683f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T681f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T532f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T524f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T904f33(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T683f35(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T681f37(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T545f37(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T544f35(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T532f53(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T524f51(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T283f49(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T161f50(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T159f48(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T55f115(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T904f34(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T683f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T681f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T545f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T532f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T524f48(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T904f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T683f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T681f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T545f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T544f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T532f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T524f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T283f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T161f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T159f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T55f128(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T904f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T683f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T681f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T545f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T544f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T532f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T524f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T283f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T161f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T159f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T55f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T904f26(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T683f27(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T681f24(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T545f26(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T544f26(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T532f37(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T524f35(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T283f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T161f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T159f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T55f81(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T904f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T683f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T681f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T545f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T544f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T532f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T524f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T283f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T904f11(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T683f12(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T681f12(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T532f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T524f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T904f30(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T683f33(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T681f32(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T545f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T544f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T532f25(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T524f23(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T283f37(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T161f40(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T159f40(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T55f113(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T904f32(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T683f32(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T681f31(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T545f48(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T544f47(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T532f48(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T524f46(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T283f44(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T160f17(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T160f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T904f40(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T683f46(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T681f48(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T545f65(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T544f64(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T532f27(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T524f25(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T283f58(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T161f63(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T159f62(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T55f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T904f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T683f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T681f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T532f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T524f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T904f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T904f44(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T683f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T681f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T545f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T545f69(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T544f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T544f67(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T532f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T532f44(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T524f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T524f42(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T283f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T283f77(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T161f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T161f52(T0* C);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T159f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T159f52(T0* C);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T55f123(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_6_latest */
extern T0* T55f141(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T904f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T683f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T681f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T545f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T544f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T532f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T524f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T283f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T161f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge260os1589;
extern T0* ge260ov1589;
extern T0* T161f53(T0* C);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T392f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T160f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T159f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T159f53(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T55f120(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T55f142(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T904f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T683f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T681f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T545f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T544f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T532f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T524f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T283f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T160f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T161f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T159f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T55f121(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T904f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T683f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T681f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T545f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T544f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T532f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T524f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T283f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T161f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T159f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T55f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T904f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T683f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T681f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T545f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T544f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T532f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T524f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T283f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T161f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T159f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T55f78(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T904f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T683f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T681f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T545f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T544f15(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T532f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T524f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T283f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T160f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T161f2(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T392f15(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T159f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T55f34(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T904f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T683f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T681f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T545f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T544f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T532f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T524f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T283f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T161f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T159f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T55f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T904f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T683f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T681f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T545f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T544f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T532f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T524f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T283f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T161f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T159f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T55f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T904f45(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T683f45(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T681f47(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T545f71(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T544f70(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T532f54(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T524f52(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T283f62(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T161f67(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T159f66(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T55f139(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T904f48(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T683f50(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T681f54(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T545f82(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T544f81(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T532f57(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T524f55(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T283f71(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T161f76(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T159f75(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T904f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T683f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T681f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T545f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T532f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T524f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T904f51(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T683f53(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T681f57(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T545f87(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T544f86(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T283f80(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T160f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T161f83(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T392f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T159f82(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T904f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T683f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T681f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T545f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T544f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T532f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T524f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T283f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T161f77(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T159f76(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T55f143(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T904f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T683f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T681f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T545f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T545f88(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T532f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T524f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T904f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T683f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T681f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T545f86(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T544f85(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T532f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T524f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T283f78(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T161f82(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T159f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T55f150(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T904f2(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T683f5(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T681f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T532f51(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T524f49(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T904f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T683f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T681f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T545f12(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T544f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T532f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T524f8(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T283f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T161f1(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T159f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T55f33(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T904f20(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T683f21(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T681f8(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T545f10(T0* C);
/* ET_BIT_N.position */
extern T0* T544f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T532f52(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T524f50(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T283f23(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T904f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T683f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T681f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T545f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T544f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T532f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T524f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T283f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T161f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T159f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T55f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T634f19(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T634f92(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T633f18(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T633f91(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T297f20(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T297f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T292f22(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T292f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T634f30(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T633f30(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T292f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T634f31(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T633f31(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T297f29(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T292f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T634f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T55f122(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T493f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T587f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T410f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T55f151(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T291f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T409f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T633f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T297f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T292f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T634f26(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T633f25(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T297f23(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T292f25(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T634f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T634f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T633f58(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T633f60(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T297f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T297f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T292f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T292f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T634f27(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T633f27(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T297f25(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T292f27(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T634f61(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T633f59(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T297f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T292f59(T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T634f3(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T633f3(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T297f2(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T292f1(T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T634f25(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T633f24(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T297f22(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T292f24(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T634f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T633f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T297f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T292f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T628f18(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T628f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T627f20(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T627f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T625f20(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T625f93(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T226f10(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T226f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T225f12(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T225f81(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T223f12(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T223f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T163f22(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T163f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T627f32(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T625f32(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T226f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T225f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T223f39(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T163f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T628f31(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T627f33(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T625f33(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T226f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T225f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T223f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T163f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T628f34(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T627f36(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T625f36(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T226f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T225f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T223f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T163f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T628f32(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T627f34(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T625f34(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T163f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T628f33(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T627f35(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T625f35(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T226f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T225f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T223f42(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T163f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T628f35(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T625f37(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T226f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T225f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T223f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T163f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T628f21(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T627f23(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T625f23(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T226f13(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T225f15(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T163f25(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T628f23(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T627f25(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T625f25(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T226f15(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T223f17(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T163f26(T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T628f20(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T627f22(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T625f22(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T225f14(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T223f14(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T163f24(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T628f24(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T627f26(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T625f26(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T226f17(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T225f19(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T223f19(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T163f27(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T628f50(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T627f51(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T625f51(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T226f46(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T225f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T223f48(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T163f54(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T226f16(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T225f18(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T223f18(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T628f61(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T628f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T627f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T627f64(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T625f62(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T625f64(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T226f57(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T226f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T225f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T225f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T223f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T223f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T163f64(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T163f66(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T628f27(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T627f29(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T625f29(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T226f20(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T225f22(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T223f22(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T163f29(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T628f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T627f63(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T625f63(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T226f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T225f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T223f60(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T163f65(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T628f25(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T627f27(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T625f27(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T226f18(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T225f20(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T223f20(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T163f28(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T628f22(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T627f24(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T625f24(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T226f14(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T225f16(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T223f16(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T163f5(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T628f5(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T627f3(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T625f3(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T226f3(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T225f3(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T223f3(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T163f3(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T628f26(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T627f28(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T625f28(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T226f19(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T225f21(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T223f21(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T163f21(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T545f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T544f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T283f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T161f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T159f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T55f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T161f6(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T159f14(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T55f15(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T55f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T161f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T159f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T55f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T545f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T544f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T283f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T161f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T159f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T55f103(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T545f47(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T544f46(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T283f36(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T161f39(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T159f38(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T55f112(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T545f30(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T544f29(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T283f24(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T161f27(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T159f26(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T55f91(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T545f31(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T544f30(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T283f25(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T161f28(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T159f27(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T55f92(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T545f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T544f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T283f38(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T161f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T159f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T55f109(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T545f42(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T544f41(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T283f31(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T161f34(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T159f33(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T55f100(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T545f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T544f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T283f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T161f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T159f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T55f106(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T545f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T544f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T283f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T161f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T159f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T55f107(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T545f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T544f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T283f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T161f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T159f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T55f110(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T545f91(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T544f90(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T283f83(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T161f87(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T161f90(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T159f86(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T159f88(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T55f156(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T161f16(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T159f16(T0* C);
/* ET_CLASS.is_generic */
extern T1 T55f16(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T161f42(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T392f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T159f39(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T55f114(T0* C, T0* a1);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T545f29(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T544f28(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T159f5(T0* C);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T545f83(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T544f82(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T544f87(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T283f74(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T283f79(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T160f21(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T161f79(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T161f89(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T392f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T159f78(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T159f87(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T55f147(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T55f155(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T545f85(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T544f84(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T283f76(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T161f81(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T159f80(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T55f149(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T545f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T544f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T283f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T161f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T159f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T55f135(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T545f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T544f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T283f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T161f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T159f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T55f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T545f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T544f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T283f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T161f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T159f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T55f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T545f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T544f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T283f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T161f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T159f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T55f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T545f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T544f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T283f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T161f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T159f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T55f136(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T545f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T544f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T283f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T161f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T159f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T55f104(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T545f43(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T544f42(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T283f32(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T161f35(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T159f34(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T55f102(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T545f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T544f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T283f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T161f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T159f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T55f108(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T545f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T544f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T283f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T161f38(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T159f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T55f111(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T544f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T283f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T161f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T159f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T55f124(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T545f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T544f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T283f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T161f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T159f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T55f119(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.base_type_actual */
extern T0* T544f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T283f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T161f51(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T159f49(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T55f116(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T545f40(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T544f39(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T283f52(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T161f54(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T159f51(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T55f117(T0* C);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T161f26(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T159f25(T0* C);
/* ET_CLASS.position */
extern T0* T55f90(T0* C);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T161f86(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T159f85(T0* C);
/* ET_CLASS.upper_name */
extern T0* T55f20(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T544f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T283f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T161f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T159f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T55f148(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T545f14(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T544f16(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T283f10(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T161f10(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T159f12(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T55f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T545f7(T0* C);
/* ET_BIT_N.to_text */
extern T0* T544f9(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T283f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T161f5(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T159f6(T0* C);
/* ET_CLASS.to_text */
extern T0* T55f13(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T205f7(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T204f7(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T203f7(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T197f7(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T143f4(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T205f5(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T204f5(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T203f5(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T197f5(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T143f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T205f28(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T204f29(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T197f28(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T143f26(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T205f3(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T204f3(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T203f3(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T197f3(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T143f5(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T205f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T200f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge906os15003;
extern T0* ge906ov15003;
extern T0* T200f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T200f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T200f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T205f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T141f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T59f210(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T889c11(T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T205f22(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T205f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T200c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T204f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T204f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T204f23(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T204f20p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T203f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T203f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T203f22(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T203f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T197f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T141f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T59f209(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge781os12450;
extern T0* ge781ov12450;
extern T0* T157f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T197f22(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T143f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T143f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T205f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T205f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T204f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T204f18(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.last_result_feature_name */
extern unsigned char ge781os12440;
extern T0* ge781ov12440;
extern T0* T157f38(T0* C);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T150f62(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T204f18p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T203f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T203f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge781os12415;
extern T0* ge781ov12415;
extern T0* T157f32(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T203f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T197f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T141f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T59f208(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge781os12452;
extern T0* ge781ov12452;
extern T0* T157f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T143f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T143f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T205f34(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T204f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T203f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T197f33(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T143f31(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T205f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T204f12(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T203f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T197f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T143f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T203f32(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T197f32(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T143f30(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T205f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T204f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T203f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T197f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T143f28(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T205f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T204f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T203f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T197f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T143f22(T0* C, T6 a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T1380f1(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T1380f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T1380f6(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T1380f4(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1295f1(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1295f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1295f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1295f4(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1140f1(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1140f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1140f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1140f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T887f1(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T887f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T887f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T887f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T886f1(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T886f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T886f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T886f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T885f1(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T885f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T885f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T885f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T884f1(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T884f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T884f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T884f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T883f1(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T883f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T883f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T883f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T882f1(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T882f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T882f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T882f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T881f1(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T881f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T881f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T881f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T880f1(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T880f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T880f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T880f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T877f1(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T877f3(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T877f6(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T877f4(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T876f1(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T876f3(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T876f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T876f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T875f5(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T875f7(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T875f10(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T875f8(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T874f1(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T874f3(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T874f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T874f4(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T873f1(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T873f3(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T873f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T873f4(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T267f1(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T267f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T267f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T267f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T266f1(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T266f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T266f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T266f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T265f1(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T265f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T265f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T264f1(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T264f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T264f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T264f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T263f1(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T263f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T263f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T263f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T199f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T199f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T199f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T199f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T99f1(T0* C);
/* UT_MESSAGE.message */
extern T0* T99f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T99f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T99f4(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T62f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T62f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T62f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T62f5(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T896f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].item */
extern T2 T1149f2(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T896f4(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T899f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T899f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T899f12(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T899f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T896f27(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T896f27p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1325f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge404os1673;
extern T0* ge404ov1673;
extern T0* T22f37(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T896f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge318os1648;
extern T0* ge318ov1648;
extern T0* T1325f2(T0* C);
extern T0* gema221(T6 c, ...);
extern T0* gema290(T6 c, ...);
extern T0* gema859(T6 c, ...);
extern T0* gema907(T6 c, ...);
extern T0* gema309(T6 c, ...);
extern int gevoid(T0* C, ...);
extern T0* ge416ov8565;
extern T0* ge420ov2759;
extern T0* ge245ov8435;
extern T0* ge358ov23496;
extern T0* ge427ov9110;
extern T0* ge393ov1692;
extern T0* ge949ov6562;
extern T0* ge781ov12562;
extern T0* ge781ov12705;
extern T0* ge781ov12721;
extern T0* ge949ov6571;
extern T0* ge949ov6538;
extern T0* ge949ov6496;
extern T0* ge944ov22450;
extern T0* ge944ov22449;
extern T0* ge944ov22448;
extern T0* ge781ov12679;
extern T0* ge949ov6533;
extern T0* ge949ov6529;
extern T0* ge949ov6557;
extern T0* ge949ov6508;
extern T0* ge949ov6528;
extern T0* ge949ov6563;
extern T0* ge949ov6547;
extern T0* ge949ov6535;
extern T0* ge949ov6572;
extern T0* ge949ov6560;
extern T0* ge781ov12682;
extern T0* ge949ov6545;
extern T0* ge949ov6575;
extern T0* ge949ov6573;
extern T0* ge949ov6577;
extern T0* ge949ov6574;
extern T0* ge949ov6498;
extern T0* ge949ov6497;
extern T0* ge949ov6561;
extern T0* ge949ov6532;
extern T0* ge949ov6540;
extern T0* ge949ov6502;
extern T0* ge949ov6539;
extern T0* ge949ov6552;
extern T0* ge949ov6531;
extern T0* ge949ov6524;
extern T0* ge949ov6523;
extern T0* ge949ov6509;
extern T0* ge949ov6504;
extern T0* ge949ov6503;
extern T0* ge949ov6516;
extern T0* ge949ov6515;
extern T0* ge949ov6514;
extern T0* ge949ov6536;
extern T0* ge949ov6499;
extern T0* ge949ov6546;
extern T0* ge949ov6569;
extern T0* ge949ov6570;
extern T0* ge949ov6530;
extern T0* ge949ov6501;
extern T0* ge949ov6522;
extern T0* ge949ov6505;
extern T0* ge949ov6506;
extern T0* ge949ov6510;
extern T0* ge949ov6511;
extern T0* ge949ov6512;
extern T0* ge949ov6513;
extern T0* ge949ov6517;
extern T0* ge949ov6518;
extern T0* ge949ov6519;
extern T0* ge949ov6520;
extern T0* ge949ov6521;
extern T0* ge949ov6525;
extern T0* ge949ov6526;
extern T0* ge949ov6507;
extern T0* ge949ov6568;
extern T0* ge781ov12570;
extern T0* ge781ov12589;
extern T0* ge781ov12579;
extern T0* ge781ov12573;
extern T0* ge781ov12602;
extern T0* ge781ov12567;
extern T0* ge1146ov15601;
extern T0* ge1146ov15586;
extern T0* ge1146ov15579;
extern T0* ge1146ov15564;
extern T0* ge1146ov15589;
extern T0* ge1146ov15582;
extern T0* ge1146ov15590;
extern T0* ge1146ov15599;
extern T0* ge1146ov15592;
extern T0* ge1146ov15588;
extern T0* ge1146ov15576;
extern T0* ge1146ov15577;
extern T0* ge1146ov15591;
extern T0* ge1146ov15578;
extern T0* ge1146ov15565;
extern T0* ge1146ov15566;
extern T0* ge1146ov15567;
extern T0* ge1146ov15573;
extern T0* ge1146ov15575;
extern T0* ge1146ov15570;
extern T0* ge1146ov15595;
extern T0* ge1146ov15594;
extern T0* ge1146ov15571;
extern T0* ge1146ov15572;
extern T0* ge1146ov15569;
extern T0* ge1146ov15568;
extern T0* ge1142ov15359;
extern T0* ge781ov12701;
extern T0* ge418ov8565;
extern T0* ge947ov22438;
extern T0* ge947ov22432;
extern T0* ge947ov22426;
extern T0* ge947ov22434;
extern T0* ge947ov22428;
extern T0* ge947ov22422;
extern T0* ge947ov22437;
extern T0* ge947ov22431;
extern T0* ge947ov22425;
extern T0* ge947ov22439;
extern T0* ge947ov22433;
extern T0* ge947ov22427;
extern T0* ge781ov12632;
extern T0* ge947ov22436;
extern T0* ge947ov22430;
extern T0* ge947ov22424;
extern T0* ge781ov12669;
extern T0* ge781ov12677;
extern T0* ge781ov12648;
extern T0* ge781ov12630;
extern T0* ge948ov23312;
extern T0* ge948ov23070;
extern T0* ge948ov22934;
extern T0* ge948ov23310;
extern T0* ge948ov23068;
extern T0* ge948ov22932;
extern T0* ge948ov23311;
extern T0* ge948ov23069;
extern T0* ge948ov22933;
extern T0* ge781ov12605;
extern T0* ge947ov22435;
extern T0* ge947ov22429;
extern T0* ge947ov22423;
extern T0* ge940ov24590;
extern T0* ge940ov24588;
extern T0* ge940ov24586;
extern T0* ge1070ov4609;
extern T0* ge939ov23365;
extern T0* ge939ov23361;
extern T0* ge939ov23357;
extern T0* ge993ov17145;
extern T0* ge394ov8374;
extern T0* ge593ov11091;
extern T0* ge593ov11092;
extern T0* ge939ov23366;
extern T0* ge939ov23362;
extern T0* ge939ov23358;
extern T0* ge946ov23374;
extern T0* ge946ov23373;
extern T0* ge948ov23267;
extern T0* ge948ov23041;
extern T0* ge948ov22889;
extern T0* ge948ov23269;
extern T0* ge948ov22891;
extern T0* ge948ov23262;
extern T0* ge948ov22884;
extern T0* ge948ov23265;
extern T0* ge948ov22887;
extern T0* ge948ov23261;
extern T0* ge948ov22883;
extern T0* ge948ov23260;
extern T0* ge948ov22882;
extern T0* ge781ov12695;
extern T0* ge781ov12603;
extern T0* ge781ov12788;
extern T0* ge781ov12789;
extern T0* ge781ov12790;
extern T0* ge781ov12791;
extern T0* ge781ov12792;
extern T0* ge781ov12793;
extern T0* ge781ov12794;
extern T0* ge781ov12795;
extern T0* ge781ov12796;
extern T0* ge781ov12797;
extern T0* ge781ov12798;
extern T0* ge781ov12799;
extern T0* ge781ov12800;
extern T0* ge781ov12801;
extern T0* ge781ov12802;
extern T0* ge781ov12803;
extern T0* ge781ov12804;
extern T0* ge781ov12805;
extern T0* ge781ov12806;
extern T0* ge781ov12807;
extern T0* ge781ov12808;
extern T0* ge781ov12809;
extern T0* ge781ov12810;
extern T0* ge781ov12811;
extern T0* ge781ov12853;
extern T0* ge781ov12854;
extern T0* ge781ov12855;
extern T0* ge781ov12563;
extern T0* ge781ov12564;
extern T0* ge781ov12565;
extern T0* ge781ov12566;
extern T0* ge781ov12568;
extern T0* ge781ov12569;
extern T0* ge781ov12571;
extern T0* ge781ov12572;
extern T0* ge781ov12574;
extern T0* ge781ov12575;
extern T0* ge781ov12576;
extern T0* ge781ov12577;
extern T0* ge781ov12578;
extern T0* ge781ov12580;
extern T0* ge781ov12581;
extern T0* ge781ov12582;
extern T0* ge781ov12583;
extern T0* ge781ov12584;
extern T0* ge781ov12585;
extern T0* ge781ov12586;
extern T0* ge781ov12587;
extern T0* ge781ov12588;
extern T0* ge781ov12590;
extern T0* ge781ov12591;
extern T0* ge781ov12592;
extern T0* ge781ov12593;
extern T0* ge781ov12594;
extern T0* ge781ov12595;
extern T0* ge781ov12596;
extern T0* ge781ov12597;
extern T0* ge781ov12598;
extern T0* ge781ov12599;
extern T0* ge781ov12600;
extern T0* ge781ov12601;
extern T0* ge781ov12604;
extern T0* ge781ov12606;
extern T0* ge781ov12607;
extern T0* ge781ov12608;
extern T0* ge781ov12609;
extern T0* ge781ov12610;
extern T0* ge781ov12611;
extern T0* ge781ov12612;
extern T0* ge781ov12613;
extern T0* ge781ov12614;
extern T0* ge781ov12615;
extern T0* ge781ov12616;
extern T0* ge781ov12617;
extern T0* ge781ov12618;
extern T0* ge781ov12619;
extern T0* ge781ov12620;
extern T0* ge781ov12621;
extern T0* ge781ov12622;
extern T0* ge781ov12623;
extern T0* ge781ov12624;
extern T0* ge781ov12625;
extern T0* ge781ov12626;
extern T0* ge781ov12627;
extern T0* ge781ov12628;
extern T0* ge781ov12629;
extern T0* ge781ov12631;
extern T0* ge781ov12633;
extern T0* ge781ov12634;
extern T0* ge781ov12635;
extern T0* ge781ov12636;
extern T0* ge781ov12637;
extern T0* ge781ov12638;
extern T0* ge781ov12639;
extern T0* ge781ov12640;
extern T0* ge781ov12641;
extern T0* ge781ov12642;
extern T0* ge781ov12643;
extern T0* ge781ov12644;
extern T0* ge781ov12645;
extern T0* ge781ov12646;
extern T0* ge781ov12647;
extern T0* ge781ov12649;
extern T0* ge781ov12650;
extern T0* ge781ov12651;
extern T0* ge781ov12652;
extern T0* ge781ov12653;
extern T0* ge781ov12654;
extern T0* ge781ov12655;
extern T0* ge781ov12656;
extern T0* ge781ov12657;
extern T0* ge781ov12658;
extern T0* ge781ov12659;
extern T0* ge781ov12660;
extern T0* ge781ov12661;
extern T0* ge781ov12662;
extern T0* ge781ov12663;
extern T0* ge781ov12664;
extern T0* ge781ov12665;
extern T0* ge781ov12666;
extern T0* ge781ov12667;
extern T0* ge781ov12668;
extern T0* ge781ov12670;
extern T0* ge781ov12671;
extern T0* ge781ov12672;
extern T0* ge781ov12673;
extern T0* ge781ov12674;
extern T0* ge781ov12675;
extern T0* ge781ov12676;
extern T0* ge781ov12678;
extern T0* ge781ov12680;
extern T0* ge781ov12681;
extern T0* ge781ov12683;
extern T0* ge781ov12684;
extern T0* ge781ov12685;
extern T0* ge781ov12686;
extern T0* ge781ov12687;
extern T0* ge781ov12688;
extern T0* ge781ov12689;
extern T0* ge781ov12691;
extern T0* ge781ov12692;
extern T0* ge781ov12693;
extern T0* ge781ov12694;
extern T0* ge781ov12696;
extern T0* ge781ov12697;
extern T0* ge781ov12698;
extern T0* ge781ov12699;
extern T0* ge781ov12700;
extern T0* ge781ov12702;
extern T0* ge781ov12703;
extern T0* ge781ov12704;
extern T0* ge781ov12706;
extern T0* ge781ov12707;
extern T0* ge781ov12708;
extern T0* ge781ov12709;
extern T0* ge781ov12710;
extern T0* ge781ov12711;
extern T0* ge781ov12712;
extern T0* ge781ov12713;
extern T0* ge781ov12714;
extern T0* ge781ov12715;
extern T0* ge781ov12716;
extern T0* ge781ov12717;
extern T0* ge781ov12718;
extern T0* ge781ov12719;
extern T0* ge781ov12720;
extern T0* ge781ov12722;
extern T0* ge781ov12723;
extern T0* ge781ov12724;
extern T0* ge781ov12725;
extern T0* ge781ov12726;
extern T0* ge781ov12727;
extern T0* ge781ov12728;
extern T0* ge781ov12729;
extern T0* ge781ov12731;
extern T0* ge781ov12732;
extern T0* ge781ov12733;
extern T0* ge781ov12734;
extern T0* ge781ov12735;
extern T0* ge781ov12736;
extern T0* ge781ov12737;
extern T0* ge781ov12738;
extern T0* ge781ov12739;
extern T0* ge781ov12740;
extern T0* ge781ov12741;
extern T0* ge781ov12742;
extern T0* ge781ov12743;
extern T0* ge781ov12744;
extern T0* ge781ov12745;
extern T0* ge781ov12746;
extern T0* ge781ov12747;
extern T0* ge781ov12748;
extern T0* ge781ov12749;
extern T0* ge781ov12750;
extern T0* ge781ov12751;
extern T0* ge781ov12752;
extern T0* ge781ov12753;
extern T0* ge781ov12754;
extern T0* ge781ov12755;
extern T0* ge781ov12756;
extern T0* ge781ov12757;
extern T0* ge781ov12758;
extern T0* ge781ov12759;
extern T0* ge781ov12760;
extern T0* ge781ov12761;
extern T0* ge781ov12762;
extern T0* ge781ov12763;
extern T0* ge781ov12764;
extern T0* ge781ov12765;
extern T0* ge781ov12766;
extern T0* ge781ov12767;
extern T0* ge781ov12768;
extern T0* ge781ov12769;
extern T0* ge781ov12770;
extern T0* ge781ov12771;
extern T0* ge781ov12772;
extern T0* ge781ov12773;
extern T0* ge781ov12774;
extern T0* ge781ov12775;
extern T0* ge781ov12776;
extern T0* ge781ov12777;
extern T0* ge781ov12778;
extern T0* ge781ov12779;
extern T0* ge781ov12780;
extern T0* ge781ov12781;
extern T0* ge781ov12782;
extern T0* ge781ov12783;
extern T0* ge781ov12784;
extern T0* ge781ov12785;
extern T0* ge781ov12786;
extern T0* ge294ov10818;
extern T0* ge391ov19247;
extern T0* ge391ov19244;
extern T0* ge960ov14339;
extern T0* ge389ov19111;
extern T0* ge948ov23278;
extern T0* ge948ov23044;
extern T0* ge948ov22900;
extern T0* ge948ov23277;
extern T0* ge948ov22899;
extern T0* ge948ov23309;
extern T0* ge948ov23067;
extern T0* ge948ov22931;
extern T0* ge948ov23308;
extern T0* ge948ov23066;
extern T0* ge948ov22930;
extern T0* ge781ov12730;
extern T0* ge781ov12690;
extern T0* ge948ov23314;
extern T0* ge948ov23072;
extern T0* ge948ov22936;
extern T0* ge948ov23313;
extern T0* ge948ov23071;
extern T0* ge948ov22935;
extern T0* ge1259ov9734;
extern T0* ge1259ov9733;
extern T0* ge1003ov3915;
extern T0* ge1003ov3916;
extern T0* ge1003ov3917;
extern T0* ge1003ov3918;
extern T0* ge1003ov3919;
extern T0* ge1003ov3920;
extern T0* ge1003ov3921;
extern T0* ge1003ov3922;
extern T0* ge1003ov3923;
extern T0* ge1003ov3924;
extern T0* ge1003ov3925;
extern T0* ge1003ov3926;
extern T0* ge1003ov3927;
extern T0* ge1003ov3928;
extern T0* ge1003ov3929;
extern T0* ge1003ov3930;
extern T0* ge1003ov3931;
extern T0* ge1003ov3932;
extern T0* ge1003ov3933;
extern T0* ge1003ov3934;
extern T0* ge1003ov3935;
extern T0* ge1003ov3936;
extern T0* ge1003ov3937;
extern T0* ge1003ov3938;
extern T0* ge1003ov3939;
extern T0* ge1003ov3940;
extern T0* ge1003ov3941;
extern T0* ge1003ov3942;
extern T0* ge1003ov3943;
extern T0* ge1003ov3944;
extern T0* ge1003ov3945;
extern T0* ge1003ov3946;
extern T0* ge1003ov3947;
extern T0* ge1003ov3948;
extern T0* ge1003ov3949;
extern T0* ge1003ov3950;
extern T0* ge1003ov3951;
extern T0* ge1003ov3952;
extern T0* ge1003ov3953;
extern T0* ge1003ov3954;
extern T0* ge1003ov3955;
extern T0* ge1003ov3956;
extern T0* ge1003ov3957;
extern T0* ge1003ov3958;
extern T0* ge1003ov3959;
extern T0* ge1003ov3960;
extern T0* ge1003ov3961;
extern T0* ge1003ov3962;
extern T0* ge1003ov3963;
extern T0* ge1003ov3964;
extern T0* ge1003ov3965;
extern T0* ge1003ov3966;
extern T0* ge1003ov3967;
extern T0* ge1003ov3968;
extern T0* ge1003ov3969;
extern T0* ge1003ov3970;
extern T0* ge1003ov3971;
extern T0* ge1003ov3972;
extern T0* ge1003ov3973;
extern T0* ge1003ov3974;
extern T0* ge1003ov3975;
extern T0* ge1003ov3976;
extern T0* ge1003ov3977;
extern T0* ge1003ov3978;
extern T0* ge1003ov3979;
extern T0* ge1003ov3980;
extern T0* ge1003ov3981;
extern T0* ge1003ov3982;
extern T0* ge1003ov3983;
extern T0* ge1003ov3984;
extern T0* ge1003ov3985;
extern T0* ge1003ov3986;
extern T0* ge1003ov3987;
extern T0* ge1003ov3988;
extern T0* ge1003ov3989;
extern T0* ge1003ov3990;
extern T0* ge1003ov3991;
extern T0* ge1003ov3992;
extern T0* ge1003ov3993;
extern T0* ge1003ov3994;
extern T0* ge1003ov3995;
extern T0* ge1036ov3882;
extern T0* ge1003ov4101;
extern T0* ge1003ov4088;
extern T0* ge1003ov4093;
extern T0* ge1003ov4094;
extern T0* ge1003ov4095;
extern T0* ge1003ov4082;
extern T0* ge1003ov4099;
extern T0* ge1003ov4103;
extern T0* ge1003ov4086;
extern T0* ge1003ov4078;
extern T0* ge1003ov4089;
extern T0* ge1003ov4087;
extern T0* ge1003ov4084;
extern T0* ge1003ov4098;
extern T0* ge1003ov4097;
extern T0* ge1003ov4080;
extern T0* ge1003ov4102;
extern T0* ge1003ov4079;
extern T0* ge1003ov4085;
extern T0* ge1003ov4100;
extern T0* ge1003ov4092;
extern T0* ge1003ov4081;
extern T0* ge1003ov4096;
extern T0* ge1003ov4090;
extern T0* ge1003ov4083;
extern T0* ge1003ov4105;
extern T0* ge1003ov4091;
extern T0* ge1036ov3881;
extern T0* ge1036ov3880;
extern T0* ge999ov17161;
extern T0* ge1266ov10271;
extern T0* ge1266ov10233;
extern T0* ge1266ov10231;
extern T0* ge1266ov10272;
extern T0* ge1266ov10244;
extern T0* ge1266ov10243;
extern T0* ge1266ov10254;
extern T0* ge1266ov10248;
extern T0* ge1266ov10247;
extern T0* ge1266ov10246;
extern T0* ge1266ov10252;
extern T0* ge1266ov10251;
extern T0* ge1266ov10253;
extern T0* ge1266ov10230;
extern T0* ge1266ov10256;
extern T0* ge1266ov10265;
extern T0* ge1269ov10086;
extern T0* ge1269ov10084;
extern T0* ge1269ov10085;
extern T0* ge1266ov10266;
extern T0* ge1266ov10267;
extern T0* ge1266ov10270;
extern T0* ge1266ov10268;
extern T0* ge1266ov10269;
extern T0* ge1266ov10263;
extern T0* ge1262ov18764;
extern T0* ge1262ov18765;
extern T0* ge1266ov10236;
extern T0* ge1266ov10259;
extern T0* ge1266ov10279;
extern T0* ge1266ov10280;
extern T0* ge1266ov10281;
extern T0* ge1266ov10274;
extern T0* ge1266ov10257;
extern T0* ge1266ov10258;
extern T0* ge1266ov10260;
extern T0* ge1266ov10264;
extern T0* ge71ov3817;
extern T0* ge328ov1570;
extern T0* ge70ov3307;
extern T0* ge73ov9411;
extern T0* ge73ov9417;
extern T0* ge71ov3818;
extern T0* ge71ov3819;
extern T0* ge71ov3820;
extern T0* ge73ov9412;
extern T0* ge73ov9418;
extern T0* ge73ov9413;
extern T0* ge73ov9419;
extern T0* ge73ov9414;
extern T0* ge73ov9420;
extern T0* ge70ov3302;
extern T0* ge70ov3301;
extern T0* ge70ov3309;
extern T0* ge70ov3308;
extern T0* ge1273ov18471;
extern T0* ge1273ov18472;
extern T0* ge1264ov23504;
extern T0* ge1264ov23506;
extern T0* ge948ov23292;
extern T0* ge948ov23052;
extern T0* ge948ov22914;
extern T0* ge948ov23291;
extern T0* ge948ov22913;
extern T0* ge948ov23115;
extern T0* ge948ov22964;
extern T0* ge948ov22737;
extern T0* ge948ov23289;
extern T0* ge948ov23051;
extern T0* ge948ov22911;
extern T0* ge948ov23288;
extern T0* ge948ov22910;
extern T0* ge948ov23114;
extern T0* ge948ov22963;
extern T0* ge948ov22736;
extern T0* ge948ov23082;
extern T0* ge948ov22949;
extern T0* ge948ov22704;
extern T0* ge948ov23081;
extern T0* ge948ov22703;
extern T0* ge948ov23294;
extern T0* ge948ov23054;
extern T0* ge948ov22916;
extern T0* ge948ov23319;
extern T0* ge948ov23075;
extern T0* ge948ov22941;
extern T0* ge948ov23320;
extern T0* ge948ov22942;
extern T0* ge948ov23317;
extern T0* ge948ov23074;
extern T0* ge948ov22939;
extern T0* ge948ov23318;
extern T0* ge948ov22940;
extern T0* ge948ov23210;
extern T0* ge948ov23009;
extern T0* ge948ov22832;
extern T0* ge948ov23323;
extern T0* ge948ov23077;
extern T0* ge948ov22945;
extern T0* ge948ov23324;
extern T0* ge948ov22946;
extern T0* ge948ov23321;
extern T0* ge948ov23076;
extern T0* ge948ov22943;
extern T0* ge948ov23322;
extern T0* ge948ov22944;
extern T0* ge948ov23208;
extern T0* ge948ov23008;
extern T0* ge948ov22830;
extern T0* ge948ov23146;
extern T0* ge948ov22980;
extern T0* ge948ov22768;
extern T0* ge948ov23148;
extern T0* ge948ov22770;
extern T0* ge948ov23144;
extern T0* ge948ov22766;
extern T0* ge948ov23150;
extern T0* ge948ov22772;
extern T0* ge948ov23147;
extern T0* ge948ov22769;
extern T0* ge948ov23145;
extern T0* ge948ov22767;
extern T0* ge948ov23190;
extern T0* ge948ov22991;
extern T0* ge948ov22812;
extern T0* ge948ov23100;
extern T0* ge948ov22957;
extern T0* ge948ov22722;
extern T0* ge948ov23098;
extern T0* ge948ov22720;
extern T0* ge948ov23092;
extern T0* ge948ov22956;
extern T0* ge948ov22714;
extern T0* ge948ov23091;
extern T0* ge948ov22955;
extern T0* ge948ov22713;
extern T0* ge948ov23303;
extern T0* ge948ov23061;
extern T0* ge948ov22925;
extern T0* ge948ov23307;
extern T0* ge948ov23065;
extern T0* ge948ov22929;
extern T0* ge948ov23282;
extern T0* ge948ov23047;
extern T0* ge948ov22904;
extern T0* ge948ov23306;
extern T0* ge948ov23064;
extern T0* ge948ov22928;
extern T0* ge948ov23189;
extern T0* ge948ov22999;
extern T0* ge948ov22811;
extern T0* ge948ov23191;
extern T0* ge948ov22813;
extern T0* ge948ov23297;
extern T0* ge948ov23056;
extern T0* ge948ov22919;
extern T0* ge948ov23284;
extern T0* ge948ov23048;
extern T0* ge948ov22906;
extern T0* ge948ov23285;
extern T0* ge948ov22907;
extern T0* ge948ov23188;
extern T0* ge948ov22998;
extern T0* ge948ov22810;
extern T0* ge948ov23184;
extern T0* ge948ov22997;
extern T0* ge948ov22806;
extern T0* ge948ov23185;
extern T0* ge948ov22807;
extern T0* ge948ov23176;
extern T0* ge948ov22994;
extern T0* ge948ov22798;
extern T0* ge948ov23187;
extern T0* ge948ov22809;
extern T0* ge948ov23186;
extern T0* ge948ov22808;
extern T0* ge948ov23183;
extern T0* ge948ov22996;
extern T0* ge948ov22805;
extern T0* ge948ov23155;
extern T0* ge948ov22984;
extern T0* ge948ov22777;
extern T0* ge948ov23154;
extern T0* ge948ov22983;
extern T0* ge948ov22776;
extern T0* ge948ov23153;
extern T0* ge948ov22982;
extern T0* ge948ov22775;
extern T0* ge948ov23152;
extern T0* ge948ov22981;
extern T0* ge948ov22774;
extern T0* ge948ov23151;
extern T0* ge948ov22773;
extern T0* ge948ov23090;
extern T0* ge948ov22954;
extern T0* ge948ov22712;
extern T0* ge948ov23088;
extern T0* ge948ov22953;
extern T0* ge948ov22710;
extern T0* ge948ov23118;
extern T0* ge948ov22965;
extern T0* ge948ov22740;
extern T0* ge948ov23119;
extern T0* ge948ov22741;
extern T0* ge948ov23102;
extern T0* ge948ov22958;
extern T0* ge948ov22724;
extern T0* ge948ov23101;
extern T0* ge948ov22723;
extern T0* ge948ov23103;
extern T0* ge948ov22725;
extern T0* ge948ov23127;
extern T0* ge948ov22969;
extern T0* ge948ov22749;
extern T0* ge948ov23116;
extern T0* ge948ov22738;
extern T0* ge948ov23117;
extern T0* ge948ov22739;
extern T0* ge948ov23161;
extern T0* ge948ov22985;
extern T0* ge948ov22783;
extern T0* ge948ov23158;
extern T0* ge948ov22780;
extern T0* ge948ov23165;
extern T0* ge948ov22986;
extern T0* ge948ov22787;
extern T0* ge948ov23162;
extern T0* ge948ov22784;
extern T0* ge948ov23159;
extern T0* ge948ov22781;
extern T0* ge948ov23166;
extern T0* ge948ov22788;
extern T0* ge948ov23163;
extern T0* ge948ov22785;
extern T0* ge948ov23160;
extern T0* ge948ov22782;
extern T0* ge948ov23167;
extern T0* ge948ov22789;
extern T0* ge948ov23274;
extern T0* ge948ov23043;
extern T0* ge948ov22896;
extern T0* ge948ov23172;
extern T0* ge948ov22990;
extern T0* ge948ov22794;
extern T0* ge948ov23171;
extern T0* ge948ov22793;
extern T0* ge948ov23157;
extern T0* ge948ov22779;
extern T0* ge948ov23156;
extern T0* ge948ov22778;
extern T0* ge948ov23164;
extern T0* ge948ov22786;
extern T0* ge948ov23170;
extern T0* ge948ov22989;
extern T0* ge948ov22792;
extern T0* ge948ov23169;
extern T0* ge948ov22988;
extern T0* ge948ov22791;
extern T0* ge948ov23168;
extern T0* ge948ov22987;
extern T0* ge948ov22790;
extern T0* ge948ov23252;
extern T0* ge948ov23036;
extern T0* ge948ov22874;
extern T0* ge948ov23250;
extern T0* ge948ov23035;
extern T0* ge948ov22872;
extern T0* ge948ov23105;
extern T0* ge948ov22959;
extern T0* ge948ov22727;
extern T0* ge948ov23218;
extern T0* ge948ov23014;
extern T0* ge948ov22840;
extern T0* ge948ov23104;
extern T0* ge948ov22726;
extern T0* ge948ov23217;
extern T0* ge948ov22839;
extern T0* ge948ov23216;
extern T0* ge948ov23013;
extern T0* ge948ov22838;
extern T0* ge948ov23135;
extern T0* ge948ov22974;
extern T0* ge948ov22757;
extern T0* ge948ov23133;
extern T0* ge948ov22972;
extern T0* ge948ov22755;
extern T0* ge948ov23132;
extern T0* ge948ov22754;
extern T0* ge948ov23139;
extern T0* ge948ov22976;
extern T0* ge948ov22761;
extern T0* ge948ov23138;
extern T0* ge948ov22760;
extern T0* ge948ov23140;
extern T0* ge948ov22977;
extern T0* ge948ov22762;
extern T0* ge948ov23200;
extern T0* ge948ov23003;
extern T0* ge948ov22822;
extern T0* ge948ov23199;
extern T0* ge948ov22821;
extern T0* ge948ov23198;
extern T0* ge948ov22820;
extern T0* ge948ov23197;
extern T0* ge948ov22819;
extern T0* ge948ov23201;
extern T0* ge948ov23004;
extern T0* ge948ov22823;
extern T0* ge948ov23121;
extern T0* ge948ov22966;
extern T0* ge948ov22743;
extern T0* ge948ov23120;
extern T0* ge948ov22742;
extern T0* ge948ov23126;
extern T0* ge948ov22748;
extern T0* ge948ov23123;
extern T0* ge948ov22967;
extern T0* ge948ov22745;
extern T0* ge948ov23124;
extern T0* ge948ov22746;
extern T0* ge948ov23215;
extern T0* ge948ov22837;
extern T0* ge948ov23122;
extern T0* ge948ov22744;
extern T0* ge948ov23136;
extern T0* ge948ov22758;
extern T0* ge948ov23125;
extern T0* ge948ov22968;
extern T0* ge948ov22747;
extern T0* ge948ov23130;
extern T0* ge948ov22970;
extern T0* ge948ov22752;
extern T0* ge948ov23128;
extern T0* ge948ov22750;
extern T0* ge948ov23129;
extern T0* ge948ov22751;
extern T0* ge948ov23223;
extern T0* ge948ov23018;
extern T0* ge948ov22845;
extern T0* ge948ov23219;
extern T0* ge948ov23015;
extern T0* ge948ov22841;
extern T0* ge948ov23221;
extern T0* ge948ov23016;
extern T0* ge948ov22843;
extern T0* ge948ov23131;
extern T0* ge948ov22971;
extern T0* ge948ov22753;
extern T0* ge948ov23137;
extern T0* ge948ov22975;
extern T0* ge948ov22759;
extern T0* ge948ov23212;
extern T0* ge948ov23011;
extern T0* ge948ov22834;
extern T0* ge948ov23195;
extern T0* ge948ov23001;
extern T0* ge948ov22817;
extern T0* ge948ov23222;
extern T0* ge948ov23017;
extern T0* ge948ov22844;
extern T0* ge948ov23134;
extern T0* ge948ov22973;
extern T0* ge948ov22756;
extern T0* ge948ov23141;
extern T0* ge948ov22978;
extern T0* ge948ov22763;
extern T0* ge948ov23213;
extern T0* ge948ov23012;
extern T0* ge948ov22835;
extern T0* ge948ov23211;
extern T0* ge948ov23010;
extern T0* ge948ov22833;
extern T0* ge948ov23196;
extern T0* ge948ov23002;
extern T0* ge948ov22818;
extern T0* ge948ov23214;
extern T0* ge948ov22836;
extern T0* ge948ov23280;
extern T0* ge948ov23046;
extern T0* ge948ov22902;
extern T0* ge948ov23281;
extern T0* ge948ov22903;
extern T0* ge949ov6537;
extern T0* ge949ov6500;
extern T0* ge948ov23084;
extern T0* ge948ov22706;
extern T0* ge948ov23083;
extern T0* ge948ov22705;
extern T0* ge948ov23296;
extern T0* ge948ov23055;
extern T0* ge948ov22918;
extern T0* ge948ov23290;
extern T0* ge948ov22912;
extern T0* ge948ov23295;
extern T0* ge948ov22917;
extern T0* ge948ov23209;
extern T0* ge948ov22831;
extern T0* ge949ov6558;
extern T0* ge948ov23244;
extern T0* ge948ov23032;
extern T0* ge948ov22866;
extern T0* ge948ov23243;
extern T0* ge948ov23031;
extern T0* ge948ov22865;
extern T0* ge948ov23242;
extern T0* ge948ov23030;
extern T0* ge948ov22864;
extern T0* ge948ov23241;
extern T0* ge948ov23029;
extern T0* ge948ov22863;
extern T0* ge948ov23240;
extern T0* ge948ov23028;
extern T0* ge948ov22862;
extern T0* ge948ov23239;
extern T0* ge948ov23027;
extern T0* ge948ov22861;
extern T0* ge948ov23245;
extern T0* ge948ov23033;
extern T0* ge948ov22867;
extern T0* ge948ov23254;
extern T0* ge948ov23037;
extern T0* ge948ov22876;
extern T0* ge948ov23255;
extern T0* ge948ov23038;
extern T0* ge948ov22877;
extern T0* ge948ov23251;
extern T0* ge948ov22873;
extern T0* ge949ov6576;
extern T0* ge949ov6554;
extern T0* ge949ov6556;
extern T0* ge949ov6553;
extern T0* ge949ov6555;
extern T0* ge949ov6541;
extern T0* ge949ov6542;
extern T0* ge949ov6543;
extern T0* ge949ov6544;
extern T0* ge949ov6548;
extern T0* ge949ov6549;
extern T0* ge949ov6550;
extern T0* ge949ov6551;
extern T0* ge948ov23178;
extern T0* ge948ov22800;
extern T0* ge948ov23181;
extern T0* ge948ov22995;
extern T0* ge948ov22803;
extern T0* ge948ov23174;
extern T0* ge948ov22993;
extern T0* ge948ov22796;
extern T0* ge948ov23177;
extern T0* ge948ov22799;
extern T0* ge948ov23112;
extern T0* ge948ov22962;
extern T0* ge948ov22734;
extern T0* ge948ov23107;
extern T0* ge948ov22960;
extern T0* ge948ov22729;
extern T0* ge948ov23110;
extern T0* ge948ov22732;
extern T0* ge948ov23109;
extern T0* ge948ov22731;
extern T0* ge948ov23108;
extern T0* ge948ov22961;
extern T0* ge948ov22730;
extern T0* ge948ov23293;
extern T0* ge948ov23053;
extern T0* ge948ov22915;
extern T0* ge948ov23298;
extern T0* ge948ov23057;
extern T0* ge948ov22920;
extern T0* ge781ov12787;
extern T0* ge948ov23080;
extern T0* ge948ov22948;
extern T0* ge948ov22702;
extern T0* ge948ov23227;
extern T0* ge948ov23021;
extern T0* ge948ov22849;
extern T0* ge948ov23234;
extern T0* ge948ov23025;
extern T0* ge948ov22856;
extern T0* ge948ov23233;
extern T0* ge948ov22855;
extern T0* ge948ov23232;
extern T0* ge948ov23024;
extern T0* ge948ov22854;
extern T0* ge948ov23231;
extern T0* ge948ov22853;
extern T0* ge948ov23230;
extern T0* ge948ov23023;
extern T0* ge948ov22852;
extern T0* ge948ov23229;
extern T0* ge948ov22851;
extern T0* ge948ov23228;
extern T0* ge948ov23022;
extern T0* ge948ov22850;
extern T0* ge948ov23226;
extern T0* ge948ov22848;
extern T0* ge948ov23301;
extern T0* ge948ov23059;
extern T0* ge948ov22923;
extern T0* ge948ov23299;
extern T0* ge948ov23058;
extern T0* ge948ov22921;
extern T0* ge948ov23238;
extern T0* ge948ov23026;
extern T0* ge948ov22860;
extern T0* ge948ov23237;
extern T0* ge948ov22859;
extern T0* ge948ov23257;
extern T0* ge948ov23039;
extern T0* ge948ov22879;
extern T0* ge948ov23259;
extern T0* ge948ov23040;
extern T0* ge948ov22881;
extern T0* ge948ov23249;
extern T0* ge948ov23034;
extern T0* ge948ov22871;
extern T0* ge948ov23236;
extern T0* ge948ov22858;
extern T0* ge948ov23235;
extern T0* ge948ov22857;
extern T0* ge948ov23253;
extern T0* ge948ov22875;
extern T0* ge948ov23248;
extern T0* ge948ov22870;
extern T0* ge948ov23315;
extern T0* ge948ov23073;
extern T0* ge948ov22937;
extern T0* ge948ov23316;
extern T0* ge948ov22938;
extern T0* ge948ov23287;
extern T0* ge948ov23050;
extern T0* ge948ov22909;
extern T0* ge948ov23286;
extern T0* ge948ov23049;
extern T0* ge948ov22908;
extern T0* ge948ov23279;
extern T0* ge948ov23045;
extern T0* ge948ov22901;
extern T0* ge948ov23305;
extern T0* ge948ov23063;
extern T0* ge948ov22927;
extern T0* ge948ov23094;
extern T0* ge948ov22716;
extern T0* ge948ov23193;
extern T0* ge948ov23000;
extern T0* ge948ov22815;
extern T0* ge948ov23304;
extern T0* ge948ov23062;
extern T0* ge948ov22926;
extern T0* ge948ov23093;
extern T0* ge948ov22715;
extern T0* ge948ov23192;
extern T0* ge948ov22814;
extern T0* ge948ov23276;
extern T0* ge948ov22898;
extern T0* ge948ov23275;
extern T0* ge948ov22897;
extern T0* ge948ov23095;
extern T0* ge948ov22717;
extern T0* ge948ov23194;
extern T0* ge948ov22816;
extern T0* ge948ov23272;
extern T0* ge948ov23042;
extern T0* ge948ov22894;
extern T0* ge948ov23273;
extern T0* ge948ov22895;
extern T0* ge948ov23087;
extern T0* ge948ov22952;
extern T0* ge948ov22709;
extern T0* ge948ov23086;
extern T0* ge948ov22951;
extern T0* ge948ov22708;
extern T0* ge948ov23202;
extern T0* ge948ov23005;
extern T0* ge948ov22824;
extern T0* ge948ov23142;
extern T0* ge948ov22979;
extern T0* ge948ov22764;
extern T0* ge948ov23143;
extern T0* ge948ov22765;
extern T0* ge948ov23204;
extern T0* ge948ov23006;
extern T0* ge948ov22826;
extern T0* ge948ov23205;
extern T0* ge948ov22827;
extern T0* ge948ov23203;
extern T0* ge948ov22825;
extern T0* ge948ov23206;
extern T0* ge948ov23007;
extern T0* ge948ov22828;
extern T0* ge948ov23225;
extern T0* ge948ov23020;
extern T0* ge948ov22847;
extern T0* ge948ov23224;
extern T0* ge948ov23019;
extern T0* ge948ov22846;
extern T0* ge948ov23085;
extern T0* ge948ov22950;
extern T0* ge948ov22707;
extern T0* ge949ov6578;
extern T0* ge948ov23180;
extern T0* ge948ov22802;
extern T0* ge948ov23182;
extern T0* ge948ov22804;
extern T0* ge948ov23175;
extern T0* ge948ov22797;
extern T0* ge948ov23173;
extern T0* ge948ov22992;
extern T0* ge948ov22795;
extern T0* ge948ov23179;
extern T0* ge948ov22801;
extern T0* ge948ov23106;
extern T0* ge948ov22728;
extern T0* ge948ov23207;
extern T0* ge948ov22829;
extern T0* ge948ov23283;
extern T0* ge948ov22905;
extern T0* ge948ov23099;
extern T0* ge948ov22721;
extern T0* ge948ov23097;
extern T0* ge948ov22719;
extern T0* ge948ov23096;
extern T0* ge948ov22718;
extern T0* ge948ov23302;
extern T0* ge948ov23060;
extern T0* ge948ov22924;
extern T0* ge949ov6559;
extern T0* ge860ov21645;
extern T0* ge863ov20731;
extern T0* ge839ov20762;
extern T0* ge867ov18074;
extern T0* ge1217ov9444;
extern T0* ge1198ov18327;
extern T0* ge1198ov18326;
extern T0* ge423ov8565;
extern T0* ge319ov8565;
extern T0* ge310ov8565;
extern T0* ge785ov21372;
extern T0* ge781ov12852;
extern T0* ge781ov12833;
extern T0* ge781ov12849;
extern T0* ge781ov12837;
extern T0* ge781ov12838;
extern T0* ge781ov12839;
extern T0* ge781ov12840;
extern T0* ge781ov12834;
extern T0* ge781ov12841;
extern T0* ge781ov12842;
extern T0* ge781ov12843;
extern T0* ge781ov12844;
extern T0* ge781ov12835;
extern T0* ge781ov12850;
extern T0* ge781ov12845;
extern T0* ge781ov12846;
extern T0* ge781ov12847;
extern T0* ge781ov12836;
extern T0* ge781ov12848;
extern T0* ge781ov12851;
extern T0* ge1264ov23503;
extern T0* ge1264ov23505;
extern T0* ge781ov12829;
extern T0* ge781ov12828;
extern T0* ge781ov12816;
extern T0* ge781ov12817;
extern T0* ge781ov12818;
extern T0* ge781ov12819;
extern T0* ge781ov12820;
extern T0* ge781ov12821;
extern T0* ge781ov12822;
extern T0* ge781ov12823;
extern T0* ge781ov12824;
extern T0* ge781ov12825;
extern T0* ge781ov12826;
extern T0* ge781ov12827;
extern T0* ge781ov12831;
extern T0* ge781ov12832;
extern T0* ge781ov12812;
extern T0* ge781ov12813;
extern T0* ge781ov12814;
extern T0* ge781ov12815;
extern T0* ge781ov12830;
extern T0* ge807ov19714;
extern T0* ge807ov19713;
extern T0* ge812ov21465;
extern T0* ge822ov21357;
extern T0* ge1014ov8435;
extern T0* ge1011ov8435;
extern T0* ge1005ov8435;
extern T0* ge1021ov8435;
extern T0* ge1018ov8435;
extern T0* ge1017ov8435;
extern T0* ge1013ov8435;
extern T0* ge1020ov8435;
extern T0* ge1012ov8435;
extern T0* ge1024ov8435;
extern T0* ge1008ov8435;
extern T0* ge1019ov8435;
extern T0* ge1023ov8435;
extern T0* ge1015ov8435;
extern T0* ge1006ov8435;
extern T0* ge236ov8435;
extern T0* ge239ov8435;
extern T0* ge235ov8435;
extern T0* ge417ov23571;
extern T0* ge404ov1672;
extern EIF_TYPE getypes[];
#ifdef __cpluscplus
}
#endif


/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void file_mkdir(char* dirname);
extern void file_rename(char* from, char* to);
extern void file_link(char *from, char *to);
extern void file_unlink(char *name);
extern EIF_POINTER file_open(char *name, int how);
extern EIF_POINTER file_dopen(int fd, int how);
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);
extern void file_close(FILE *fp);
extern void file_flush(FILE *fp);
extern EIF_INTEGER file_fd(FILE *f);
extern EIF_CHARACTER file_gc(FILE *f);
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_CHARACTER file_lh(FILE *f);
extern EIF_INTEGER eif_file_size(FILE *fp);
extern void file_tnil(FILE *f);
extern EIF_INTEGER file_tell(FILE *f);
extern void file_touch(char *name);
extern void file_utime(char *name, time_t stamp, int how);
extern void file_stat(char *path, struct stat *buf);
extern void file_perm(char *name, char *who, char *what, int flag);
extern void file_chmod(char *path, int mode);
extern void file_chown(char *name, int uid);
extern void file_chgrp(char *name, int gid);
extern void file_tnwl(FILE *f);
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);
extern void file_pc(FILE *f, char c);
extern void file_go(FILE *f, EIF_INTEGER pos);
extern void file_recede(FILE *f, EIF_INTEGER pos);
extern void file_move(FILE *f, EIF_INTEGER pos);
extern EIF_BOOLEAN file_feof(FILE *fp);
extern EIF_BOOLEAN file_exists(char *name);
extern EIF_BOOLEAN file_path_exists(char *name);
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);
extern EIF_INTEGER file_gi(FILE *f);
extern EIF_REAL_32 file_gr(FILE *f);
extern EIF_REAL_64 file_gd(FILE *f);
extern void file_pi(FILE *f, EIF_INTEGER number);
extern void file_pr(FILE *f, EIF_REAL_32 number);
extern void file_pd(FILE *f, EIF_REAL_64 val);
extern EIF_INTEGER stat_size(void);
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);
extern EIF_INTEGER file_info(struct stat *buf, int op);
extern EIF_REFERENCE file_owner(int uid);
extern EIF_REFERENCE file_group(int gid);
extern EIF_INTEGER file_gib(FILE* f);
extern EIF_REAL_32 file_grb(FILE* f);
extern EIF_REAL_64 file_gdb(FILE* f);
extern EIF_POINTER file_binary_open(char* name, int how);
extern EIF_POINTER file_binary_dopen(int fd, int how);
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);
extern void file_pib(FILE* f, EIF_INTEGER number);
extern void file_prb(FILE* f, EIF_REAL_32 number);
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/* OpenBSD does not support 'ftime' unless -lcompat is specified. */
/* Use the recommended XSI (X/Open System Interface) extension instead. */
#include <sys/time.h>
#include <sys/types.h>
#define geftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define getimebsz sizeof(struct timeval)
#define getimebmillitm(p) ((struct timeval*)(p))->tv_usec
#define getimebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
#define geftime(p) ftime((struct timeb*)(p))
#define getimebsz sizeof(struct timeb)
#define getimebmillitm(p) ((struct timeb*)(p))->millitm
#define getimebtime(p) ((struct timeb*)(p))->time
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
