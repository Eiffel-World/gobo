/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#define WIN32 1
#define EIF_WINDOWS 1
#endif
#ifdef WIN32
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_OBJECT;
#define EIF_REFERENCE EIF_OBJECT*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#define EIF_PROCEDURE EIF_POINTER

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define geint8(x) x
#define genat8(x) x
#define geint16(x) x
#define genat16(x) x
#define geint32(x) x##L
#define genat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else /* ISO C 99 */
#define geint64(x) x##LL
#define genat64(x) x##ULL
#endif 
#endif 

/* Interoperability with ISE */
#define RTI64C(x) geint64(x)

/* Memory allocation, GC */
#define gealloc(x) calloc((x),1)

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

#endif

#define T0 EIF_OBJECT

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* geboxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* geboxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* geboxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* geboxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* geboxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* geboxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* geboxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* geboxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* geboxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* geboxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* geboxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* geboxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* geboxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* geboxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* ET_ERROR_HANDLER */
typedef struct S27 T27;

/* KL_EXCEPTIONS */
typedef struct S28 T28;

/* AP_PARSER */
typedef struct S29 T29;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S30 T30;

/* AP_FLAG */
typedef struct S31 T31;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S36 T36;

/* ET_LACE_PARSER */
typedef struct S37 T37;

/* ET_LACE_ERROR_HANDLER */
typedef struct S38 T38;

/* ET_LACE_UNIVERSE */
typedef struct S39 T39;

/* ET_NULL_ERROR_HANDLER */
typedef struct S40 T40;

/* ET_SYSTEM */
typedef struct S41 T41;

/* ET_CLASS */
typedef struct S43 T43;

/* ET_C_GENERATOR */
typedef struct S44 T44;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S45 T45;

/* KL_SHELL_COMMAND */
typedef struct S46 T46;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S47 T47;

/* UT_VERSION */
typedef struct S48 T48;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S49 T49;

/* KL_OPERATING_SYSTEM */
typedef struct S51 T51;

/* UT_TEMPLATE_EXPANDER */
typedef struct S52 T52;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S54 T54;

/* UT_VERSION_NUMBER */
typedef struct S56 T56;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S57 T57;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S58 T58;

/* SPECIAL [STRING_8] */
typedef struct S59 T59;

/* ARRAY [STRING_8] */
typedef struct S60 T60;

/* KL_STRING_ROUTINES */
typedef struct S61 T61;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S63 T63;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S64 T64;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S65 T65;

/* TYPED_POINTER [ANY] */
typedef struct S67 T67;

/* KL_STANDARD_FILES */
typedef struct S68 T68;

/* KL_STDERR_FILE */
typedef struct S69 T69;

/* KL_STDOUT_FILE */
typedef struct S70 T70;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S71 T71;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S72 T72;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S73 T73;

/* AP_ERROR_HANDLER */
typedef struct S74 T74;

/* AP_ERROR */
typedef struct S75 T75;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S76 T76;

/* ST_WORD_WRAPPER */
typedef struct S77 T77;

/* ET_LACE_AST_FACTORY */
typedef struct S78 T78;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S79 T79;

/* YY_FILE_BUFFER */
typedef struct S80 T80;

/* YY_BUFFER */
typedef struct S81 T81;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S82 T82;

/* SPECIAL [INTEGER_32] */
typedef struct S83 T83;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S84 T84;

/* SPECIAL [ANY] */
typedef struct S86 T86;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S87 T87;

/* ET_IDENTIFIER */
typedef struct S88 T88;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S89 T89;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S90 T90;

/* ET_LACE_CLUSTERS */
typedef struct S91 T91;

/* ET_LACE_CLUSTER */
typedef struct S92 T92;

/* ET_LACE_EXCLUDE */
typedef struct S93 T93;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S94 T94;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S95 T95;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S96 T96;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S97 T97;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S98 T98;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S99 T99;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S100 T100;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S101 T101;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S102 T102;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S103 T103;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S104 T104;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S105 T105;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S106 T106;

/* KL_PLATFORM */
typedef struct S107 T107;

/* KL_INTEGER_ROUTINES */
typedef struct S108 T108;

/* UT_MESSAGE */
typedef struct S109 T109;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S110 T110;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S111 T111;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S112 T112;

/* ET_DYNAMIC_TYPE */
typedef struct S113 T113;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S115 T115;

/* ET_QUERY_LIST */
typedef struct S116 T116;

/* ET_PROCEDURE_LIST */
typedef struct S118 T118;

/* ET_DYNAMIC_FEATURE */
typedef struct S120 T120;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S121 T121;

/* DT_DATE_TIME */
typedef struct S122 T122;

/* DT_SYSTEM_CLOCK */
typedef struct S123 T123;

/* ET_TOKEN_CONSTANTS */
typedef struct S127 T127;

/* ET_EIFFEL_PARSER */
typedef struct S128 T128;

/* ET_CLASS_TYPE */
typedef struct S129 T129;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S130 T130;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S131 T131;

/* ET_EXTERNAL_FUNCTION */
typedef struct S133 T133;

/* ET_KEYWORD */
typedef struct S136 T136;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S138 T138;

/* ET_TYPE_CHECKER */
typedef struct S139 T139;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S140 T140;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S141 T141;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S142 T142;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S143 T143;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S144 T144;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S145 T145;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S146 T146;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S147 T147;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S148 T148;

/* DS_ARRAYED_LIST [ET_CALL_AGENT] */
typedef struct S150 T150;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S151 T151;

/* ET_CALL_INSTRUCTION */
typedef struct S152 T152;

/* ET_CALL_EXPRESSION */
typedef struct S155 T155;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S156 T156;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S157 T157;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S158 T158;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S159 T159;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S160 T160;

/* DS_HASH_SET [STRING_8] */
typedef struct S161 T161;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S162 T162;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S163 T163;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S164 T164;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S165 T165;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S166 T166;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S167 T167;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S168 T168;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S169 T169;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S170 T170;

/* ET_RESULT */
typedef struct S171 T171;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S172 T172;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S174 T174;

/* ET_FORMAL_ARGUMENT */
typedef struct S179 T179;

/* ET_CURRENT */
typedef struct S180 T180;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S181 T181;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S183 T183;

/* ET_CALL_AGENT */
typedef struct S184 T184;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S187 T187;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S188 T188;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S190 T190;

/* ET_ATTRIBUTE */
typedef struct S191 T191;

/* UT_INTEGER_FORMATTER */
typedef struct S200 T200;

/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
typedef struct S202 T202;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S204 T204;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S205 T205;

/* DS_CELL [INTEGER_32] */
typedef struct S206 T206;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S209 T209;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S210 T210;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S211 T211;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S212 T212;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S213 T213;

/* EXECUTION_ENVIRONMENT */
typedef struct S215 T215;

/* UNIX_FILE_INFO */
typedef struct S216 T216;

/* ET_AST_FACTORY */
typedef struct S218 T218;

/* ARRAY [INTEGER_32] */
typedef struct S219 T219;

/* ET_DO_PROCEDURE */
typedef struct S220 T220;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S222 T222;

/* ET_DEFERRED_PROCEDURE */
typedef struct S225 T225;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S226 T226;

/* KL_ANY_ROUTINES */
typedef struct S228 T228;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S229 T229;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S230 T230;

/* SPECIAL [AP_OPTION] */
typedef struct S232 T232;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S233 T233;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S234 T234;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S235 T235;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S236 T236;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S237 T237;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S239 T239;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S241 T241;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S242 T242;

/* TO_SPECIAL [INTEGER_32] */
typedef struct S243 T243;

/* TO_SPECIAL [ANY] */
typedef struct S244 T244;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S245 T245;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S246 T246;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S247 T247;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S248 T248;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S249 T249;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S250 T250;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S251 T251;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S252 T252;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S253 T253;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S254 T254;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S255 T255;

/* MANAGED_POINTER */
typedef struct S256 T256;

/* ET_SYMBOL */
typedef struct S257 T257;

/* ET_BRACKET_SYMBOL */
typedef struct S258 T258;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S260 T260;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S261 T261;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S262 T262;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S263 T263;

/* ET_AST_NULL_PROCESSOR */
typedef struct S264 T264;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S265 T265;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S266 T266;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S267 T267;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S268 T268;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S269 T269;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S271 T271;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S274 T274;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S276 T276;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S277 T277;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S278 T278;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S279 T279;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST_CURSOR [ET_CALL_AGENT] */
typedef struct S281 T281;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S282 T282;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S284 T284;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S285 T285;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S286 T286;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S287 T287;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S288 T288;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S289 T289;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S291 T291;

/* SPECIAL [ET_FEATURE] */
typedef struct S292 T292;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S293 T293;

/* SPECIAL [ET_CONSTANT] */
typedef struct S294 T294;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S296 T296;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S298 T298;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S299 T299;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S300 T300;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S301 T301;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S302 T302;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
typedef struct S305 T305;

/* TO_SPECIAL [STRING_8] */
typedef struct S306 T306;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S307 T307;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S308 T308;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S309 T309;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S310 T310;

/* SPECIAL [ET_QUERY] */
typedef struct S311 T311;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S312 T312;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S313 T313;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S314 T314;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S315 T315;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S316 T316;

/* SPECIAL [ET_TYPE] */
typedef struct S317 T317;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S318 T318;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S319 T319;

/* C_STRING */
typedef struct S322 T322;

/* KL_CHARACTER_BUFFER */
typedef struct S323 T323;

/* ET_CLASS_NAME_TESTER */
typedef struct S324 T324;

/* ET_FEATURE_FLATTENER */
typedef struct S326 T326;

/* ET_INTERFACE_CHECKER */
typedef struct S327 T327;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S328 T328;

/* ET_PROVIDER_CHECKER */
typedef struct S329 T329;

/* ET_ANCESTOR_BUILDER */
typedef struct S330 T330;

/* DT_DATE_TIME_DURATION */
typedef struct S333 T333;

/* ET_EIFFEL_PREPARSER */
typedef struct S334 T334;

/* ET_NONE_GROUP */
typedef struct S335 T335;

/* ET_PARENT */
typedef struct S336 T336;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S337 T337;

/* ET_TUPLE_TYPE */
typedef struct S338 T338;

/* ET_RENAME_LIST */
typedef struct S339 T339;

/* ET_EXPORT_LIST */
typedef struct S340 T340;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S341 T341;

/* ET_PARENT_LIST */
typedef struct S342 T342;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S344 T344;

/* ET_INTERNAL_ERROR */
typedef struct S345 T345;

/* ET_SYSTEM_ERROR */
typedef struct S346 T346;

/* ET_VALIDITY_ERROR */
typedef struct S347 T347;

/* ET_BASE_TYPE_LIST */
typedef struct S348 T348;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S350 T350;

/* KL_CHARACTER_ROUTINES */
typedef struct S351 T351;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S353 T353;

/* SPECIAL [ET_CLASS] */
typedef struct S355 T355;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S356 T356;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S357 T357;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S358 T358;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S359 T359;

/* ET_INFIX_FREE_NAME */
typedef struct S360 T360;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S361 T361;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S362 T362;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S363 T363;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S364 T364;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S365 T365;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S366 T366;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S367 T367;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S368 T368;

/* KL_DIRECTORY */
typedef struct S371 T371;

/* KL_EIFFEL_COMPILER */
typedef struct S372 T372;

/* ST_SPLITTER */
typedef struct S373 T373;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S374 T374;

/* ET_CLASS_NAME_LIST */
typedef struct S377 T377;

/* ET_CLIENTS */
typedef struct S378 T378;

/* ET_FEATURE_CLAUSE */
typedef struct S379 T379;

/* SPECIAL [ET_KEYWORD] */
typedef struct S381 T381;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S382 T382;

/* ET_AGENT_KEYWORD */
typedef struct S383 T383;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S384 T384;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S385 T385;

/* ET_PRECURSOR_KEYWORD */
typedef struct S386 T386;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S387 T387;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S388 T388;

/* SPECIAL [ET_SYMBOL] */
typedef struct S389 T389;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S390 T390;

/* SPECIAL [ET_POSITION] */
typedef struct S391 T391;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S392 T392;

/* ET_BIT_CONSTANT */
typedef struct S393 T393;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S394 T394;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S395 T395;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S397 T397;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S398 T398;

/* SPECIAL [ET_BREAK] */
typedef struct S400 T400;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S401 T401;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S403 T403;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S404 T404;

/* SPECIAL [ET_CURRENT] */
typedef struct S405 T405;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S406 T406;

/* ET_FREE_OPERATOR */
typedef struct S407 T407;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S408 T408;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S409 T409;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S411 T411;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S412 T412;

/* ET_KEYWORD_OPERATOR */
typedef struct S413 T413;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S414 T414;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S415 T415;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S416 T416;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S417 T417;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S419 T419;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S420 T420;

/* SPECIAL [ET_RESULT] */
typedef struct S421 T421;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S422 T422;

/* ET_RETRY_INSTRUCTION */
typedef struct S423 T423;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S424 T424;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S425 T425;

/* ET_SYMBOL_OPERATOR */
typedef struct S426 T426;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S427 T427;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S428 T428;

/* ET_VOID */
typedef struct S429 T429;

/* SPECIAL [ET_VOID] */
typedef struct S430 T430;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S431 T431;

/* ET_SEMICOLON_SYMBOL */
typedef struct S432 T432;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S433 T433;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S434 T434;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S435 T435;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S436 T436;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S437 T437;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S438 T438;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S439 T439;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S440 T440;

/* ET_VERBATIM_STRING */
typedef struct S441 T441;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S442 T442;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S443 T443;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S444 T444;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S445 T445;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S446 T446;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S447 T447;

/* ET_TRUE_CONSTANT */
typedef struct S449 T449;

/* ET_FALSE_CONSTANT */
typedef struct S450 T450;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S451 T451;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S452 T452;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S454 T454;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S456 T456;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S457 T457;

/* ET_CREATOR_LIST */
typedef struct S458 T458;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S459 T459;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S460 T460;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S461 T461;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S462 T462;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S463 T463;

/* ET_INVARIANTS */
typedef struct S464 T464;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S465 T465;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S466 T466;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S468 T468;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S470 T470;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S472 T472;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S476 T476;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S477 T477;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S479 T479;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S480 T480;

/* ET_CREATE_EXPRESSION */
typedef struct S481 T481;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S482 T482;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S483 T483;

/* ET_MANIFEST_TUPLE */
typedef struct S484 T484;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S485 T485;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S486 T486;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S487 T487;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S488 T488;

/* ET_FORMAL_PARAMETER */
typedef struct S489 T489;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S490 T490;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S492 T492;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S493 T493;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S495 T495;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S496 T496;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S497 T497;

/* ET_CONSTRAINT_CREATOR */
typedef struct S498 T498;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S499 T499;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S500 T500;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S502 T502;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S503 T503;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S504 T504;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S505 T505;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S506 T506;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S508 T508;

/* ET_BIT_N */
typedef struct S509 T509;

/* ET_BIT_FEATURE */
typedef struct S510 T510;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S511 T511;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S513 T513;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S515 T515;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S516 T516;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S517 T517;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S518 T518;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S519 T519;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S520 T520;

/* SPECIAL [ET_PARENT] */
typedef struct S521 T521;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S522 T522;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S523 T523;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S524 T524;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S525 T525;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S526 T526;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S527 T527;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S528 T528;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S530 T530;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S531 T531;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S532 T532;

/* ET_RENAME */
typedef struct S533 T533;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S534 T534;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S535 T535;

/* SPECIAL [ET_EXPORT] */
typedef struct S537 T537;

/* SPECIAL [ET_CLIENTS] */
typedef struct S538 T538;

/* ET_ALL_EXPORT */
typedef struct S539 T539;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S540 T540;

/* ET_FEATURE_EXPORT */
typedef struct S541 T541;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S542 T542;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S544 T544;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S545 T545;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S547 T547;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S549 T549;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S550 T550;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S551 T551;

/* ET_CREATOR */
typedef struct S552 T552;

/* SPECIAL [ET_CREATOR] */
typedef struct S553 T553;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S554 T554;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S555 T555;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S557 T557;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S559 T559;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S560 T560;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S562 T562;

/* ET_CONVERT_FUNCTION */
typedef struct S563 T563;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S564 T564;

/* ET_CONVERT_PROCEDURE */
typedef struct S565 T565;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S566 T566;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S568 T568;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S569 T569;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S570 T570;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S571 T571;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S572 T572;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S575 T575;

/* ET_PRECONDITIONS */
typedef struct S577 T577;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S578 T578;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S579 T579;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S580 T580;

/* ET_COMPOUND */
typedef struct S581 T581;

/* SPECIAL [ET_COMPOUND] */
typedef struct S582 T582;

/* ET_POSTCONDITIONS */
typedef struct S583 T583;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S584 T584;

/* ET_DO_FUNCTION */
typedef struct S585 T585;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S586 T586;

/* ET_ONCE_FUNCTION */
typedef struct S587 T587;

/* ET_DEFERRED_FUNCTION */
typedef struct S588 T588;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S591 T591;

/* ET_ONCE_PROCEDURE */
typedef struct S592 T592;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S593 T593;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S594 T594;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S596 T596;

/* ET_PREFIX_NAME */
typedef struct S597 T597;

/* ET_PREFIX_FREE_NAME */
typedef struct S598 T598;

/* ET_INFIX_NAME */
typedef struct S599 T599;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S600 T600;

/* ET_ALIAS_NAME */
typedef struct S601 T601;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S602 T602;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S603 T603;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S604 T604;

/* ET_ALIAS_FREE_NAME */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S606 T606;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S608 T608;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S609 T609;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S611 T611;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S612 T612;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S613 T613;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S615 T615;

/* ET_LOCAL_VARIABLE */
typedef struct S616 T616;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S617 T617;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S619 T619;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S620 T620;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S621 T621;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S622 T622;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S623 T623;

/* ET_LOOP_INVARIANTS */
typedef struct S624 T624;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S625 T625;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S626 T626;

/* ET_VARIANT */
typedef struct S627 T627;

/* SPECIAL [ET_VARIANT] */
typedef struct S628 T628;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S629 T629;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S630 T630;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S631 T631;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S633 T633;

/* ET_LIKE_FEATURE */
typedef struct S635 T635;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S636 T636;

/* ET_LIKE_CURRENT */
typedef struct S637 T637;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S639 T639;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S640 T640;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S641 T641;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S642 T642;

/* ET_BRACKET_EXPRESSION */
typedef struct S643 T643;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S644 T644;

/* SPECIAL [ET_WRITABLE] */
typedef struct S645 T645;

/* ET_ASSIGNMENT */
typedef struct S646 T646;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S647 T647;

/* ET_IF_INSTRUCTION */
typedef struct S648 T648;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S649 T649;

/* ET_INSPECT_INSTRUCTION */
typedef struct S650 T650;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S651 T651;

/* ET_LOOP_INSTRUCTION */
typedef struct S653 T653;

/* ET_DEBUG_INSTRUCTION */
typedef struct S654 T654;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S655 T655;

/* ET_CHECK_INSTRUCTION */
typedef struct S656 T656;

/* ET_BANG_INSTRUCTION */
typedef struct S658 T658;

/* ET_QUALIFIED_CALL */
typedef struct S659 T659;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S660 T660;

/* ET_CREATE_INSTRUCTION */
typedef struct S662 T662;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S663 T663;

/* ET_ELSEIF_PART_LIST */
typedef struct S664 T664;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S665 T665;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S666 T666;

/* ET_ELSEIF_PART */
typedef struct S667 T667;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S670 T670;

/* ET_WHEN_PART_LIST */
typedef struct S671 T671;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S674 T674;

/* ET_WHEN_PART */
typedef struct S675 T675;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S676 T676;

/* ET_CHOICE_LIST */
typedef struct S677 T677;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S678 T678;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S680 T680;

/* SPECIAL [ET_CHOICE] */
typedef struct S682 T682;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S684 T684;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S685 T685;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S688 T688;

/* ET_CHOICE_RANGE */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S690 T690;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S691 T691;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S692 T692;

/* ET_MANIFEST_STRING_LIST */
typedef struct S693 T693;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S694 T694;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S695 T695;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S696 T696;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S698 T698;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S699 T699;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S700 T700;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S702 T702;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S703 T703;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S704 T704;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S705 T705;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S706 T706;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S707 T707;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S708 T708;

/* ET_FEATURE_ADDRESS */
typedef struct S709 T709;

/* ET_CURRENT_ADDRESS */
typedef struct S710 T710;

/* ET_RESULT_ADDRESS */
typedef struct S711 T711;

/* ET_EXPRESSION_ADDRESS */
typedef struct S712 T712;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S713 T713;

/* ET_INFIX_EXPRESSION */
typedef struct S714 T714;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S716 T716;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S717 T717;

/* ET_EQUALITY_EXPRESSION */
typedef struct S718 T718;

/* ET_PREFIX_EXPRESSION */
typedef struct S719 T719;

/* ET_OLD_EXPRESSION */
typedef struct S720 T720;

/* ET_INLINE_AGENT */
typedef struct S721 T721;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S722 T722;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S723 T723;

/* ET_MANIFEST_ARRAY */
typedef struct S724 T724;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S725 T725;

/* ET_STRIP_EXPRESSION */
typedef struct S726 T726;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S727 T727;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S728 T728;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S729 T729;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S732 T732;

/* ET_MANIFEST_TYPE */
typedef struct S733 T733;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S734 T734;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S735 T735;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S736 T736;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S737 T737;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S738 T738;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S739 T739;

/* ET_AGENT_OPEN_TARGET */
typedef struct S740 T740;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S742 T742;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S743 T743;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S744 T744;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S746 T746;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S747 T747;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S748 T748;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S749 T749;

/* ET_TAGGED_ASSERTION */
typedef struct S751 T751;

/* TYPED_POINTER [SPECIAL [CHARACTER_8]] */
typedef struct S754 T754;

/* ET_BRACED_TYPE_LIST */
typedef struct S755 T755;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S756 T756;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S757 T757;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S758 T758;

/* ET_KEYWORD_EXPRESSION */
typedef struct S759 T759;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S761 T761;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S762 T762;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S763 T763;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S764 T764;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S765 T765;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S766 T766;

/* EXCEPTIONS */
typedef struct S767 T767;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S768 T768;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S769 T769;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S770 T770;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S771 T771;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S772 T772;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S773 T773;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S774 T774;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S775 T775;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S776 T776;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S777 T777;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S778 T778;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S779 T779;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S781 T781;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S782 T782;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S783 T783;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S784 T784;

/* ET_CLUSTER_ERROR */
typedef struct S785 T785;

/* ET_SYNTAX_ERROR */
typedef struct S786 T786;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S787 T787;

/* KL_STDIN_FILE */
typedef struct S791 T791;

/* ET_FILE_POSITION */
typedef struct S792 T792;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S793 T793;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S794 T794;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S796 T796;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S798 T798;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S799 T799;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S801 T801;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S803 T803;

/* ET_FEATURE_NAME_TESTER */
typedef struct S804 T804;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S806 T806;

/* ET_ALIAS_NAME_TESTER */
typedef struct S807 T807;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S809 T809;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S810 T810;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S811 T811;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S812 T812;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S813 T813;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S814 T814;

/* ET_SIGNATURE_CHECKER */
typedef struct S815 T815;

/* ET_PARENT_CHECKER2 */
typedef struct S816 T816;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S817 T817;

/* ET_PRECURSOR_CHECKER */
typedef struct S818 T818;

/* ET_PARENT_CHECKER3 */
typedef struct S819 T819;

/* ET_FEATURE_CHECKER */
typedef struct S820 T820;

/* ET_SUPPLIER_BUILDER */
typedef struct S821 T821;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S822 T822;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
typedef struct S823 T823;

/* ET_PARENT_CHECKER1 */
typedef struct S824 T824;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S825 T825;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S830 T830;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S831 T831;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S832 T832;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S833 T833;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S834 T834;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S835 T835;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S836 T836;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S837 T837;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S838 T838;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S839 T839;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S841 T841;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S842 T842;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S843 T843;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S844 T844;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S845 T845;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S846 T846;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S847 T847;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S848 T848;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S849 T849;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S850 T850;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S851 T851;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S852 T852;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S853 T853;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S854 T854;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S855 T855;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S856 T856;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S857 T857;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S858 T858;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S859 T859;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S860 T860;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S861 T861;

/* TO_SPECIAL [ET_VOID] */
typedef struct S862 T862;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S863 T863;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S864 T864;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S865 T865;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S867 T867;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S868 T868;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S869 T869;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S870 T870;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S871 T871;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S872 T872;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S873 T873;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S874 T874;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S875 T875;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S877 T877;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S878 T878;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S879 T879;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S880 T880;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S881 T881;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S882 T882;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S883 T883;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S884 T884;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S885 T885;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S886 T886;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S887 T887;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S888 T888;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S889 T889;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S890 T890;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S891 T891;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S892 T892;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S893 T893;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S894 T894;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S895 T895;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S896 T896;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S897 T897;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S898 T898;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S899 T899;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S900 T900;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S901 T901;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S906 T906;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S907 T907;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S908 T908;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S909 T909;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S910 T910;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S911 T911;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S912 T912;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S913 T913;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S914 T914;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S915 T915;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S916 T916;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S917 T917;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S918 T918;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S919 T919;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S920 T920;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S921 T921;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S922 T922;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S923 T923;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S924 T924;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S925 T925;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S926 T926;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S927 T927;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S928 T928;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S929 T929;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S930 T930;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S931 T931;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S933 T933;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S934 T934;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S935 T935;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S936 T936;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S937 T937;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S939 T939;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S940 T940;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S941 T941;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S942 T942;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S943 T943;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S944 T944;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S945 T945;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S946 T946;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S947 T947;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S948 T948;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S949 T949;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S950 T950;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S951 T951;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S953 T953;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S954 T954;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S955 T955;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S956 T956;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S957 T957;

/* SPECIAL [NATURAL_8] */
typedef struct S962 T962;

/* STRING_SEARCHER */
typedef struct S963 T963;

/* UC_UNICODE_ROUTINES */
typedef struct S965 T965;

/* ET_FEATURE_IDS */
typedef struct S966 T966;

/* ET_FEATURE_LIST */
typedef struct S967 T967;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S970 T970;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S971 T971;

/* ET_PARENT_FEATURE */
typedef struct S973 T973;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S974 T974;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S975 T975;

/* ET_INHERITED_FEATURE */
typedef struct S976 T976;

/* ET_REDECLARED_FEATURE */
typedef struct S978 T978;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S980 T980;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S981 T981;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
typedef struct S985 T985;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S987 T987;

/* SPECIAL [NATURAL_64] */
typedef struct S988 T988;

/* ARRAY [NATURAL_64] */
typedef struct S989 T989;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S990 T990;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S991 T991;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S993 T993;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S995 T995;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S996 T996;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S998 T998;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S999 T999;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1000 T1000;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1001 T1001;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1002 T1002;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1003 T1003;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1004 T1004;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1005 T1005;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1006 T1006;

/* ET_REPLICATED_FEATURE */
typedef struct S1008 T1008;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1009 T1009;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1010 T1010;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1011 T1011;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1012 T1012;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1014 T1014;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1016 T1016;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1017 T1017;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1018 T1018;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1019 T1019;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1020 T1020;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1021 T1021;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S1022 T1022;

/* SPECIAL [BOOLEAN] */
typedef struct S1023 T1023;

/* ARRAY [BOOLEAN] */
typedef struct S1024 T1024;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
typedef struct S1025 T1025;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1027 T1027;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1029 T1029;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1030 T1030;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1031 T1031;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1033 T1033;

/* DS_LINKABLE [STRING_8] */
typedef struct S1034 T1034;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S1035 T1035;

/* AP_OPTION_COMPARATOR */
typedef struct S1037 T1037;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1038 T1038;

/* STD_FILES */
typedef struct S1045 T1045;

/* PLATFORM */
typedef struct S1046 T1046;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1048 T1048;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1049 T1049;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1050 T1050;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1053 T1053;

/* ET_COMPRESSED_POSITION */
typedef struct S1059 T1059;

/* ET_CONVERT_EXPRESSION */
typedef struct S1062 T1062;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1063 T1063;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1068 T1068;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1074 T1074;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1075 T1075;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1078 T1078;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1079 T1079;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1080 T1080;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1081 T1081;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1082 T1082;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1083 T1083;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1085 T1085;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1087 T1087;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1088 T1088;

/* SPECIAL [ET_RENAME] */
typedef struct S1089 T1089;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1091 T1091;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1093 T1093;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1094 T1094;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1095 T1095;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1097 T1097;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S1099 T1099;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1100 T1100;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1101 T1101;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1103 T1103;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1105 T1105;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1106 T1106;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1107 T1107;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1108 T1108;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1109 T1109;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1110 T1110;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1111 T1111;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1112 T1112;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1113 T1113;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1114 T1114;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1116 T1116;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1118 T1118;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1119 T1119;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1120 T1120;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1121 T1121;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1122 T1122;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1123 T1123;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1124 T1124;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1125 T1125;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
typedef struct S1126 T1126;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1128 T1128;

/* SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1129 T1129;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
typedef struct S1130 T1130;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
typedef struct S1131 T1131;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1133 T1133;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1134 T1134;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1135 T1135;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1147 T1147;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1148 T1148;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1149 T1149;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1150 T1150;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1154 T1154;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1155 T1155;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1156 T1156;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S1157 T1157;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1158 T1158;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1159 T1159;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1160 T1160;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1161 T1161;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1162 T1162;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1163 T1163;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1165 T1165;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1167 T1167;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1168 T1168;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1169 T1169;

/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1170 T1170;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1173 T1173;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1175 T1175;

/* CONSOLE */
typedef struct S1176 T1176;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1177 T1177;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1182 T1182;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1184 T1184;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1187 T1187;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a5; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a2; /* error_handler */
	T0* a3; /* ace_filename */
	T0* a4; /* last_universe */
	T0* a6; /* finalize_flag */
	T0* a7; /* cat_flag */
	T0* a8; /* no_c_compile_flag */
	T0* a9; /* silent_flag */
	T0* a10; /* verbose_flag */
	T0* a11; /* version_flag */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T1 a2; /* end_of_file */
	T0* a3; /* last_string */
	T6 a5; /* mode */
	T0* a9; /* name */
	T0* a12; /* string_name */
	T0* a13; /* character_buffer */
	T2 a17; /* last_character */
	T14 a19; /* file_pointer */
	T1 a21; /* descriptor_available */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ERROR_HANDLER */
struct S27 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* benchmark_shown */
	T1 a6; /* has_error */
	T1 a7; /* is_ise */
	T1 a8; /* has_eiffel_error */
	T1 a22; /* has_internal_error */
	T1 a25; /* is_verbose */
	T1 a27; /* is_se */
	T1 a28; /* is_pedantic */
	T1 a59; /* is_ve */
	T1 a60; /* is_ge */
};

/* Struct for type KL_EXCEPTIONS */
struct S28 {
	int id;
};

/* Struct for type AP_PARSER */
struct S29 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a8; /* application_description */
	T0* a9; /* parameters_description */
	T0* a11; /* error_handler */
	T0* a14; /* argument_list */
	T0* a16; /* current_options */
	T1 a17; /* is_first_option */
	T0* a23; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S30 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a10; /* first_cell */
};

/* Struct for type AP_FLAG */
struct S31 {
	int id;
	T6 a2; /* occurrences */
	T0* a3; /* description */
	T0* a4; /* long_form */
	T2 a5; /* short_form */
	T1 a6; /* has_short_form */
	T1 a7; /* is_mandatory */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S36 {
	int id;
	T0* a13; /* description */
	T2 a14; /* short_form */
	T1 a15; /* has_short_form */
	T0* a16; /* long_form */
	T6 a17; /* occurrences */
	T1 a21; /* is_hidden */
	T1 a22; /* is_mandatory */
};

/* Struct for type ET_LACE_PARSER */
struct S37 {
	int id;
	T0* a2; /* last_universe */
	T6 a3; /* yy_parsing_status */
	T0* a5; /* named_clusters */
	T0* a7; /* override_cluster_names */
	T0* a8; /* ast_factory */
	T6 a9; /* eif_lineno */
	T0* a11; /* eif_buffer */
	T0* a12; /* input_buffer */
	T6 a13; /* yy_end */
	T6 a14; /* yy_position */
	T6 a15; /* yy_line */
	T6 a16; /* yy_column */
	T6 a18; /* yy_suspended_yystacksize */
	T6 a19; /* yy_suspended_yystate */
	T6 a20; /* yy_suspended_yyn */
	T6 a21; /* yy_suspended_yychar1 */
	T6 a22; /* yy_suspended_index */
	T6 a23; /* yy_suspended_yyss_top */
	T6 a24; /* yy_suspended_yy_goto */
	T6 a26; /* error_count */
	T1 a27; /* yy_lookahead_needed */
	T6 a28; /* yyerrstatus */
	T6 a29; /* yyssp */
	T0* a30; /* yyss */
	T0* a39; /* yypact */
	T6 a41; /* last_token */
	T0* a44; /* yytranslate */
	T0* a47; /* yycheck */
	T0* a48; /* yytable */
	T0* a50; /* yydefact */
	T0* a52; /* yyr1 */
	T0* a54; /* yypgoto */
	T0* a55; /* yydefgoto */
	T0* a58; /* filename */
	T0* a59; /* error_handler */
	T6 a61; /* yy_start_state */
	T6 a62; /* line */
	T6 a63; /* column */
	T6 a64; /* position */
	T1 a65; /* yy_more_flag */
	T6 a66; /* yy_more_len */
	T6 a67; /* yy_last_accepting_state */
	T6 a68; /* yy_last_accepting_cpos */
	T1 a69; /* yy_rejected */
	T6 a70; /* yy_state_count */
	T6 a71; /* yy_full_match */
	T6 a72; /* yy_lp */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_lp */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_start */
	T6 a77; /* yyvsp1 */
	T6 a78; /* yyvsp2 */
	T6 a79; /* yyvsp3 */
	T6 a80; /* yyvsp4 */
	T6 a81; /* yyvsp5 */
	T6 a82; /* yyvsp6 */
	T6 a83; /* yyvsp7 */
	T0* a91; /* yy_state_stack */
	T0* a92; /* yy_ec */
	T0* a93; /* yy_content_area */
	T0* a94; /* yy_content */
	T0* a95; /* yy_accept */
	T0* a96; /* yy_chk */
	T0* a97; /* yy_base */
	T0* a98; /* yy_def */
	T0* a99; /* yy_meta */
	T0* a101; /* yy_nxt */
	T0* a103; /* yy_acclist */
	T0* a113; /* yytypes2 */
	T6 a114; /* yyvsc1 */
	T0* a115; /* yyvs1 */
	T0* a116; /* yyspecial_routines1 */
	T0* a118; /* last_any_value */
	T6 a119; /* yyvsc2 */
	T0* a120; /* yyvs2 */
	T0* a121; /* yyspecial_routines2 */
	T0* a122; /* last_et_identifier_value */
	T0* a123; /* yyvs4 */
	T0* a125; /* yyvs7 */
	T6 a127; /* yyvsc4 */
	T0* a128; /* yyspecial_routines4 */
	T0* a129; /* yyvs3 */
	T0* a131; /* yyvs5 */
	T6 a133; /* yyvsc3 */
	T0* a134; /* yyspecial_routines3 */
	T6 a136; /* yyvsc5 */
	T0* a137; /* yyspecial_routines5 */
	T6 a138; /* yyvsc7 */
	T0* a139; /* yyspecial_routines7 */
	T0* a140; /* yyvs6 */
	T6 a143; /* yyvsc6 */
	T0* a144; /* yyspecial_routines6 */
	T0* a146; /* yytypes1 */
	T6 a187; /* code_ */
	T0* a190; /* str_ */
	T0* a203; /* msil_clr_version_value */
	T0* a205; /* metadata_cache_path_value */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S38 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S39 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* unknown_class */
	T0* a5; /* classes */
	T0* a6; /* root_creation */
	T6 a8; /* default_create_seed */
	T0* a9; /* any_class */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a37; /* any_type */
	T0* a38; /* system_name */
	T0* a39; /* tuple_class */
	T0* a40; /* procedure_class */
	T0* a41; /* function_class */
	T0* a42; /* predicate_class */
	T0* a43; /* internal_eiffel_parser */
	T0* a44; /* ast_factory */
	T1 a45; /* use_assign_keyword */
	T1 a46; /* use_attribute_keyword */
	T1 a47; /* use_convert_keyword */
	T1 a48; /* use_create_keyword */
	T1 a49; /* use_recast_keyword */
	T1 a50; /* use_reference_keyword */
	T1 a51; /* use_void_keyword */
	T1 a52; /* providers_enabled */
	T0* a53; /* clusters */
	T0* a55; /* null_processor */
	T0* a56; /* provider_checker */
	T0* a57; /* ancestor_builder */
	T0* a58; /* feature_flattener */
	T0* a59; /* implementation_checker */
	T0* a60; /* flat_implementation_checker */
	T0* a61; /* ise_version */
	T0* a63; /* ecma_version */
	T0* a64; /* dotnet_assemblies */
	T1 a66; /* is_preparsed */
	T6 a67; /* feature_count */
	T1 a68; /* flat_mode */
	T1 a69; /* flat_dbc_mode */
	T1 a70; /* suppliers_enabled */
	T0* a74; /* general_class */
	T0* a75; /* bit_class */
	T6 a76; /* string_class_id */
	T0* a77; /* native_array_class */
	T6 a78; /* character_class_id */
	T6 a79; /* wide_character_class_id */
	T6 a80; /* integer_class_id */
	T6 a81; /* natural_class_id */
	T6 a82; /* real_class_id */
	T6 a83; /* double_class_id */
	T0* a84; /* type_class */
	T0* a85; /* routine_class */
	T0* a86; /* arguments_class */
	T0* a87; /* platform_class */
	T0* a88; /* system_object_class */
	T0* a89; /* system_string_class */
	T0* a90; /* none_type */
	T0* a91; /* tuple_type */
	T0* a92; /* array_any_type */
	T0* a93; /* array_none_type */
	T0* a94; /* any_parent */
	T0* a95; /* any_parents */
	T0* a96; /* system_object_parents */
	T0* a97; /* integer_convert_feature */
	T0* a98; /* integer_8_convert_feature */
	T0* a99; /* integer_16_convert_feature */
	T0* a100; /* integer_32_convert_feature */
	T0* a101; /* integer_64_convert_feature */
	T0* a102; /* natural_convert_feature */
	T0* a103; /* natural_8_convert_feature */
	T0* a104; /* natural_16_convert_feature */
	T0* a105; /* natural_32_convert_feature */
	T0* a106; /* natural_64_convert_feature */
	T0* a107; /* real_convert_feature */
	T0* a108; /* double_convert_feature */
	T0* a109; /* real_32_convert_feature */
	T0* a110; /* real_64_convert_feature */
	T0* a111; /* boolean_ref_class */
	T0* a112; /* character_8_ref_class */
	T0* a113; /* character_32_ref_class */
	T0* a114; /* character_ref_class */
	T6 a115; /* character_ref_class_id */
	T0* a116; /* wide_character_ref_class */
	T6 a117; /* wide_character_ref_class_id */
	T0* a118; /* integer_8_ref_class */
	T0* a119; /* integer_16_ref_class */
	T0* a120; /* integer_32_ref_class */
	T0* a121; /* integer_64_ref_class */
	T0* a122; /* integer_ref_class */
	T6 a123; /* integer_ref_class_id */
	T0* a124; /* natural_8_ref_class */
	T0* a125; /* natural_16_ref_class */
	T0* a126; /* natural_32_ref_class */
	T0* a127; /* natural_64_ref_class */
	T0* a128; /* natural_ref_class */
	T6 a129; /* natural_ref_class_id */
	T0* a130; /* real_32_ref_class */
	T0* a131; /* real_64_ref_class */
	T0* a132; /* real_ref_class */
	T6 a133; /* real_ref_class_id */
	T0* a134; /* double_ref_class */
	T6 a135; /* double_ref_class_id */
	T0* a136; /* pointer_ref_class */
	T0* a137; /* numeric_class */
	T0* a138; /* comparable_class */
	T0* a139; /* part_comparable_class */
	T0* a140; /* hashable_class */
	T0* a141; /* boolean_convert_feature */
	T0* a142; /* character_convert_feature */
	T0* a143; /* wide_character_convert_feature */
	T0* a144; /* pointer_convert_feature */
	T1 a145; /* cluster_dependence_enabled */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T0* a148; /* internal_eiffel_preparser */
	T6 a149; /* copy_seed */
	T6 a150; /* void_seed */
	T0* a152; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S40 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* benchmark_shown */
	T1 a6; /* has_error */
	T1 a7; /* is_ise */
	T1 a8; /* has_eiffel_error */
	T1 a18; /* has_internal_error */
	T1 a25; /* is_verbose */
	T1 a27; /* is_se */
	T1 a28; /* is_pedantic */
	T1 a59; /* is_ve */
	T1 a60; /* is_ge */
};

/* Struct for type ET_SYSTEM */
struct S41 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* null_dynamic_type_set_builder */
	T0* a4; /* dynamic_types */
	T1 a5; /* catcall_mode */
	T0* a6; /* dynamic_type_set_builder */
	T0* a7; /* boolean_type */
	T0* a8; /* character_type */
	T0* a9; /* wide_character_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_type */
	T0* a23; /* double_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a38; /* root_type */
	T0* a39; /* root_creation_procedure */
	T0* a40; /* array_area_feature */
	T0* a41; /* array_lower_feature */
	T0* a42; /* array_upper_feature */
	T0* a43; /* typed_pointer_pointer_item_feature */
};

/* Struct for type ET_CLASS */
struct S43 {
	int id;
	T0* a2; /* formal_parameters */
	T0* a4; /* queries */
	T0* a7; /* procedures */
	T0* a9; /* class_mark */
	T0* a10; /* name */
	T6 a11; /* id */
	T0* a12; /* ancestors */
	T0* a14; /* class_keyword */
	T0* a15; /* end_keyword */
	T0* a16; /* eiffel_class */
	T0* a17; /* master_class */
	T6 a18; /* time_stamp */
	T6 a26; /* index */
	T1 a27; /* interface_checked */
	T1 a28; /* has_interface_error */
	T1 a31; /* is_parsed */
	T1 a32; /* has_syntax_error */
	T0* a35; /* group */
	T0* a36; /* creators */
	T1 a37; /* in_system */
	T0* a39; /* overridden_class */
	T0* a45; /* filename */
	T1 a46; /* features_flattened */
	T1 a47; /* has_flattening_error */
	T0* a48; /* parents */
	T0* a59; /* frozen_keyword */
	T0* a60; /* external_keyword */
	T0* a61; /* providers */
	T0* a62; /* invariants */
	T0* a63; /* convert_features */
	T1 a64; /* has_flat_implementation_error */
	T1 a65; /* flat_implementation_checked */
	T1 a66; /* has_implementation_error */
	T1 a67; /* implementation_checked */
	T0* a68; /* suppliers */
	T1 a69; /* has_deferred_features */
	T1 a70; /* has_ancestors_error */
	T1 a71; /* ancestors_built */
	T0* a72; /* feature_clauses */
	T0* a73; /* first_indexing */
	T0* a74; /* second_indexing */
	T0* a75; /* obsolete_message */
	T0* a76; /* leading_break */
	T1 a77; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S44 {
	int id;
	T1 a1; /* short_names */
	T0* a2; /* type_checker */
	T0* a3; /* universe */
	T0* a4; /* current_system */
	T0* a5; /* current_file */
	T0* a7; /* header_file */
	T0* a8; /* current_type */
	T0* a9; /* current_feature */
	T0* a11; /* current_function_header_buffer */
	T0* a12; /* current_function_body_buffer */
	T0* a13; /* temp_variables */
	T0* a14; /* used_temp_variables */
	T0* a15; /* free_temp_variables */
	T0* a16; /* conforming_types */
	T0* a17; /* non_conforming_types */
	T0* a18; /* operand_stack */
	T0* a19; /* call_operands */
	T0* a20; /* polymorphic_type_ids */
	T0* a21; /* polymorphic_types */
	T0* a22; /* standalone_type_sets */
	T0* a23; /* polymorphic_call_feature */
	T0* a24; /* call_agents */
	T0* a25; /* agent_open_operands */
	T0* a26; /* agent_closed_operands */
	T0* a27; /* agent_arguments */
	T0* a28; /* agent_instruction */
	T0* a29; /* agent_expression */
	T0* a30; /* wrapper_expression */
	T0* a31; /* wrapper_dynamic_type_sets */
	T0* a32; /* manifest_array_types */
	T0* a33; /* manifest_tuple_types */
	T0* a34; /* once_features */
	T0* a35; /* constant_features */
	T0* a36; /* called_features */
	T0* a37; /* included_header_filenames */
	T0* a39; /* included_runtime_header_files */
	T0* a40; /* included_runtime_c_files */
	T1 a41; /* has_fatal_error */
	T6 a94; /* indentation */
	T6 a97; /* unique_count */
	T0* a213; /* assignment_target */
	T1 a214; /* in_operand */
	T0* a216; /* call_target_type */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S45 {
	int id;
	T6 a3; /* mode */
	T0* a8; /* name */
	T0* a11; /* string_name */
	T14 a15; /* file_pointer */
	T1 a17; /* descriptor_available */
};

/* Struct for type KL_SHELL_COMMAND */
struct S46 {
	int id;
	T0* a1; /* string_command */
	T0* a3; /* command */
	T6 a4; /* exit_code */
	T6 a5; /* return_code */
	T1 a7; /* is_system_code */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S47 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* capacity */
	T6 a18; /* modulus */
	T6 a19; /* clashes_previous_position */
	T0* a21; /* equality_tester */
	T0* a22; /* internal_keys */
	T6 a23; /* found_position */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a26; /* key_storage */
	T0* a29; /* internal_cursor */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type UT_VERSION */
struct S48 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S49 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* character_index */
	T0* a11; /* boolean_index */
	T0* a12; /* double_index */
	T0* a13; /* real_index */
	T0* a14; /* integer_index */
	T0* a15; /* integer_8_index */
	T0* a16; /* integer_16_index */
	T0* a17; /* integer_32_index */
	T0* a18; /* integer_64_index */
	T0* a19; /* natural_index */
	T0* a20; /* natural_8_index */
	T0* a21; /* natural_16_index */
	T0* a22; /* natural_32_index */
	T0* a23; /* natural_64_index */
	T0* a24; /* pointer_index */
	T0* a25; /* none_index */
	T0* a26; /* string_index */
	T1 a27; /* catcall_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a37; /* current_feature_impl */
	T0* a38; /* current_class_impl */
	T0* a39; /* current_enclosing_feature */
	T0* a40; /* overloaded_procedures */
	T0* a41; /* overloaded_queries */
	T0* a42; /* best_overloaded_features */
	T0* a43; /* used_contexts */
	T0* a44; /* unused_contexts */
	T0* a45; /* current_context */
	T1 a47; /* in_precursor */
	T1 a179; /* in_rescue */
	T1 a181; /* in_invariant */
	T1 a182; /* in_precondition */
	T1 a183; /* in_postcondition */
	T0* a188; /* current_target_type */
	T1 a189; /* in_assertion */
	T1 a190; /* in_inline_agent */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S51 {
	int id;
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S52 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S54 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S56 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S57 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S58 {
	int id;
};

/* Struct for type SPECIAL [STRING_8] */
struct S59 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S60 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_STRING_ROUTINES */
struct S61 {
	int id;
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S63 {
	int id;
	T2 a16; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S64 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S65 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S67 {
	int id;
	T14 a1; /* pointer_item */
};

/* Struct for type KL_STANDARD_FILES */
struct S68 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S69 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S70 {
	int id;
	T14 a1; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S71 {
	int id;
	T6 a2; /* count */
	T0* a6; /* internal_cursor */
	T0* a8; /* storage */
	T0* a14; /* special_routines */
	T6 a15; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S72 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T0* a9; /* storage */
	T0* a12; /* special_routines */
	T6 a13; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S73 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S74 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a4; /* warning_file */
	T0* a5; /* info_file */
};

/* Struct for type AP_ERROR */
struct S75 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a4; /* code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S76 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ST_WORD_WRAPPER */
struct S77 {
	int id;
	T6 a3; /* new_line_indentation */
	T6 a4; /* broken_words */
	T6 a5; /* maximum_text_width */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S78 {
	int id;
	T0* a9; /* error_handler */
	T0* a10; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S79 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T6 a15; /* slots_position */
	T0* a17; /* equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type YY_FILE_BUFFER */
struct S80 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a11; /* end_of_file */
	T6 a12; /* capacity */
	T1 a13; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S81 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a11; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S82 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S83 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S84 {
	int id;
};

/* Struct for type SPECIAL [ANY] */
struct S86 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S87 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S88 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a4; /* status_code */
	T6 a12; /* compressed_position */
	T6 a14; /* hash_code */
	T0* a15; /* name */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S89 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S90 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S91 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S92 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a12; /* parent */
	T1 a18; /* is_override */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a33; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S93 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S94 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S95 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S96 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S97 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S98 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S99 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S100 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S101 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S102 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S103 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S104 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S105 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S106 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S107 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S108 {
	int id;
};

/* Struct for type UT_MESSAGE */
struct S109 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S110 {
	int id;
	T6 a2; /* capacity */
	T6 a3; /* count */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* position */
	T6 a8; /* last_position */
	T6 a11; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a19; /* item_storage */
	T0* a22; /* clashes */
	T0* a23; /* slots */
	T0* a24; /* key_storage */
	T6 a25; /* free_slot */
	T0* a26; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S111 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a3; /* current_system */
	T1 a4; /* catcall_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S112 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S113 {
	int id;
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T0* a7; /* queries */
	T6 a8; /* id */
	T0* a11; /* base_class */
	T0* a14; /* procedures */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a18; /* next_type */
	T1 a23; /* has_static */
	T0* a24; /* query_calls */
	T0* a25; /* procedure_calls */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S115 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_QUERY_LIST */
struct S116 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S118 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S120 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T0* a6; /* result_type_set */
	T1 a7; /* is_generated */
	T6 a12; /* builtin_code */
	T1 a14; /* is_creation */
	T0* a15; /* first_precursor */
	T1 a16; /* is_regular */
	T0* a17; /* other_precursors */
	T1 a41; /* is_built */
	T1 a46; /* is_current_type_needed */
	T1 a47; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S121 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S122 {
	int id;
	T6 a12; /* time_storage */
	T6 a16; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S123 {
	int id;
	T6 a2; /* second */
	T6 a4; /* year */
	T6 a5; /* month */
	T6 a6; /* day */
	T6 a7; /* hour */
	T6 a8; /* minute */
	T6 a9; /* millisecond */
	T1 a10; /* is_utc */
	T0* a21; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S127 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S128 {
	int id;
	T0* a1; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a7; /* last_keywords */
	T0* a9; /* last_symbols */
	T0* a11; /* assertions */
	T0* a13; /* queries */
	T0* a15; /* procedures */
	T0* a17; /* constraints */
	T0* a19; /* providers */
	T0* a21; /* universe */
	T0* a22; /* ast_factory */
	T0* a23; /* error_handler */
	T1 a24; /* use_assign_keyword */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_convert_keyword */
	T1 a27; /* use_create_keyword */
	T1 a28; /* use_recast_keyword */
	T1 a29; /* use_reference_keyword */
	T1 a30; /* use_void_keyword */
	T1 a31; /* providers_enabled */
	T1 a32; /* overriding_class_added */
	T1 a33; /* is_null */
	T6 a35; /* last_text_count */
	T6 a36; /* last_literal_start */
	T0* a37; /* filename */
	T0* a38; /* current_class */
	T0* a40; /* yyss */
	T0* a48; /* input_buffer */
	T0* a49; /* yytranslate */
	T0* a51; /* yyr1 */
	T0* a53; /* yytypes1 */
	T0* a55; /* yytypes2 */
	T0* a57; /* yydefact */
	T0* a59; /* yydefgoto */
	T0* a61; /* yypact */
	T0* a63; /* yypgoto */
	T0* a65; /* yytable */
	T0* a67; /* yycheck */
	T6 a69; /* time_stamp */
	T0* a70; /* cluster */
	T6 a72; /* yy_start_state */
	T6 a73; /* yy_line */
	T6 a74; /* yy_column */
	T6 a75; /* yy_position */
	T6 a76; /* line */
	T6 a77; /* column */
	T6 a78; /* position */
	T0* a80; /* yy_state_stack */
	T6 a81; /* yy_end */
	T6 a82; /* yy_start */
	T6 a83; /* yy_parsing_status */
	T6 a85; /* yy_suspended_yystacksize */
	T6 a86; /* yy_suspended_yystate */
	T6 a87; /* yy_suspended_yyn */
	T6 a88; /* yy_suspended_yychar1 */
	T6 a89; /* yy_suspended_index */
	T6 a90; /* yy_suspended_yyss_top */
	T6 a91; /* yy_suspended_yy_goto */
	T6 a93; /* error_count */
	T1 a94; /* yy_lookahead_needed */
	T6 a95; /* yyerrstatus */
	T6 a96; /* yyssp */
	T6 a104; /* last_token */
	T0* a113; /* last_class */
	T0* a114; /* last_clients */
	T0* a115; /* last_export_clients */
	T0* a116; /* last_feature_clause */
	T6 a117; /* last_literal_end */
	T0* a118; /* verbatim_marker */
	T0* a119; /* verbatim_open_white_characters */
	T0* a120; /* verbatim_close_white_characters */
	T1 a121; /* yy_more_flag */
	T6 a122; /* yy_more_len */
	T6 a123; /* yy_last_accepting_state */
	T6 a124; /* yy_last_accepting_cpos */
	T1 a125; /* yy_rejected */
	T6 a126; /* yy_state_count */
	T6 a127; /* yy_full_match */
	T6 a128; /* yy_lp */
	T6 a129; /* yy_looking_for_trail_begin */
	T6 a130; /* yy_full_lp */
	T6 a131; /* yy_full_state */
	T0* a132; /* yy_nxt */
	T0* a134; /* yy_chk */
	T0* a136; /* yy_base */
	T0* a138; /* yy_def */
	T0* a140; /* yy_ec */
	T0* a142; /* yy_meta */
	T0* a144; /* yy_accept */
	T0* a146; /* yy_acclist */
	T0* a148; /* yy_content */
	T0* a149; /* yy_content_area */
	T6 a150; /* yyvsp1 */
	T6 a151; /* yyvsp2 */
	T6 a152; /* yyvsp3 */
	T6 a153; /* yyvsp4 */
	T6 a154; /* yyvsp5 */
	T6 a155; /* yyvsp6 */
	T6 a156; /* yyvsp7 */
	T6 a157; /* yyvsp8 */
	T6 a158; /* yyvsp9 */
	T6 a159; /* yyvsp10 */
	T6 a160; /* yyvsp11 */
	T6 a161; /* yyvsp12 */
	T6 a162; /* yyvsp13 */
	T6 a163; /* yyvsp14 */
	T6 a164; /* yyvsp15 */
	T6 a165; /* yyvsp16 */
	T6 a166; /* yyvsp17 */
	T6 a167; /* yyvsp18 */
	T6 a168; /* yyvsp19 */
	T6 a169; /* yyvsp20 */
	T6 a170; /* yyvsp21 */
	T6 a171; /* yyvsp22 */
	T6 a172; /* yyvsp23 */
	T6 a173; /* yyvsp24 */
	T6 a174; /* yyvsp25 */
	T6 a175; /* yyvsp26 */
	T6 a176; /* yyvsp27 */
	T6 a177; /* yyvsp28 */
	T6 a178; /* yyvsp29 */
	T6 a179; /* yyvsp30 */
	T6 a180; /* yyvsp31 */
	T6 a181; /* yyvsp32 */
	T6 a182; /* yyvsp33 */
	T6 a183; /* yyvsp34 */
	T6 a184; /* yyvsp35 */
	T6 a185; /* yyvsp36 */
	T6 a186; /* yyvsp37 */
	T6 a187; /* yyvsp38 */
	T6 a188; /* yyvsp39 */
	T6 a189; /* yyvsp40 */
	T6 a190; /* yyvsp41 */
	T6 a191; /* yyvsp42 */
	T6 a192; /* yyvsp43 */
	T6 a193; /* yyvsp44 */
	T6 a194; /* yyvsp45 */
	T6 a195; /* yyvsp46 */
	T6 a196; /* yyvsp47 */
	T6 a197; /* yyvsp48 */
	T6 a198; /* yyvsp49 */
	T6 a199; /* yyvsp50 */
	T6 a200; /* yyvsp51 */
	T6 a201; /* yyvsp52 */
	T6 a202; /* yyvsp53 */
	T6 a203; /* yyvsp54 */
	T6 a204; /* yyvsp55 */
	T6 a205; /* yyvsp56 */
	T6 a206; /* yyvsp57 */
	T6 a207; /* yyvsp58 */
	T6 a208; /* yyvsp59 */
	T6 a209; /* yyvsp60 */
	T6 a210; /* yyvsp61 */
	T6 a211; /* yyvsp62 */
	T6 a212; /* yyvsp63 */
	T6 a213; /* yyvsp64 */
	T6 a214; /* yyvsp65 */
	T6 a215; /* yyvsp66 */
	T6 a216; /* yyvsp67 */
	T6 a217; /* yyvsp68 */
	T6 a218; /* yyvsp69 */
	T6 a219; /* yyvsp70 */
	T6 a220; /* yyvsp71 */
	T6 a221; /* yyvsp72 */
	T6 a222; /* yyvsp73 */
	T6 a223; /* yyvsp74 */
	T6 a224; /* yyvsp75 */
	T6 a225; /* yyvsp76 */
	T6 a226; /* yyvsp77 */
	T6 a227; /* yyvsp78 */
	T6 a228; /* yyvsp79 */
	T6 a229; /* yyvsp80 */
	T6 a230; /* yyvsp81 */
	T6 a231; /* yyvsp82 */
	T6 a232; /* yyvsp83 */
	T6 a233; /* yyvsp84 */
	T6 a234; /* yyvsp85 */
	T6 a235; /* yyvsp86 */
	T6 a236; /* yyvsp87 */
	T6 a237; /* yyvsp88 */
	T6 a238; /* yyvsp89 */
	T6 a239; /* yyvsp90 */
	T6 a240; /* yyvsp91 */
	T6 a241; /* yyvsp92 */
	T6 a242; /* yyvsp93 */
	T6 a243; /* yyvsp94 */
	T6 a244; /* yyvsp95 */
	T6 a245; /* yyvsp96 */
	T6 a246; /* yyvsp97 */
	T6 a247; /* yyvsp98 */
	T6 a248; /* yyvsp99 */
	T6 a249; /* yyvsp100 */
	T6 a250; /* yyvsp101 */
	T6 a251; /* yyvsp102 */
	T6 a252; /* yyvsp103 */
	T6 a253; /* yyvsp104 */
	T6 a254; /* yyvsp105 */
	T6 a255; /* yyvsp106 */
	T6 a256; /* yyvsp107 */
	T6 a257; /* yyvsp108 */
	T6 a258; /* yyvsp109 */
	T6 a259; /* yyvsp110 */
	T6 a260; /* yyvsp111 */
	T6 a261; /* yyvsp112 */
	T6 a262; /* yyvsp113 */
	T6 a263; /* yyvsp114 */
	T6 a264; /* yyvsp115 */
	T6 a265; /* yyvsp116 */
	T6 a284; /* yyvsc1 */
	T0* a285; /* yyvs1 */
	T0* a286; /* yyspecial_routines1 */
	T0* a288; /* last_any_value */
	T6 a289; /* yyvsc2 */
	T0* a290; /* yyvs2 */
	T0* a291; /* yyspecial_routines2 */
	T0* a292; /* last_et_keyword_value */
	T6 a293; /* yyvsc3 */
	T0* a294; /* yyvs3 */
	T0* a295; /* yyspecial_routines3 */
	T0* a296; /* last_et_agent_keyword_value */
	T6 a297; /* yyvsc4 */
	T0* a298; /* yyvs4 */
	T0* a299; /* yyspecial_routines4 */
	T0* a300; /* last_et_precursor_keyword_value */
	T6 a301; /* yyvsc5 */
	T0* a302; /* yyvs5 */
	T0* a303; /* yyspecial_routines5 */
	T0* a304; /* last_et_symbol_value */
	T6 a305; /* yyvsc6 */
	T0* a306; /* yyvs6 */
	T0* a307; /* yyspecial_routines6 */
	T0* a308; /* last_et_position_value */
	T6 a309; /* yyvsc7 */
	T0* a310; /* yyvs7 */
	T0* a311; /* yyspecial_routines7 */
	T0* a312; /* last_et_bit_constant_value */
	T6 a313; /* yyvsc8 */
	T0* a314; /* yyvs8 */
	T0* a315; /* yyspecial_routines8 */
	T0* a316; /* last_et_boolean_constant_value */
	T6 a317; /* yyvsc9 */
	T0* a318; /* yyvs9 */
	T0* a319; /* yyspecial_routines9 */
	T0* a320; /* last_et_break_value */
	T6 a321; /* yyvsc10 */
	T0* a322; /* yyvs10 */
	T0* a323; /* yyspecial_routines10 */
	T0* a324; /* last_et_character_constant_value */
	T6 a325; /* yyvsc11 */
	T0* a326; /* yyvs11 */
	T0* a327; /* yyspecial_routines11 */
	T0* a328; /* last_et_current_value */
	T6 a329; /* yyvsc12 */
	T0* a330; /* yyvs12 */
	T0* a331; /* yyspecial_routines12 */
	T0* a332; /* last_et_free_operator_value */
	T6 a333; /* yyvsc13 */
	T0* a334; /* yyvs13 */
	T0* a335; /* yyspecial_routines13 */
	T0* a336; /* last_et_identifier_value */
	T6 a337; /* yyvsc14 */
	T0* a338; /* yyvs14 */
	T0* a339; /* yyspecial_routines14 */
	T0* a340; /* last_et_integer_constant_value */
	T6 a341; /* yyvsc15 */
	T0* a342; /* yyvs15 */
	T0* a343; /* yyspecial_routines15 */
	T0* a344; /* last_et_keyword_operator_value */
	T6 a345; /* yyvsc16 */
	T0* a346; /* yyvs16 */
	T0* a347; /* yyspecial_routines16 */
	T0* a348; /* last_et_manifest_string_value */
	T6 a349; /* yyvsc17 */
	T0* a350; /* yyvs17 */
	T0* a351; /* yyspecial_routines17 */
	T0* a352; /* last_et_real_constant_value */
	T6 a353; /* yyvsc18 */
	T0* a354; /* yyvs18 */
	T0* a355; /* yyspecial_routines18 */
	T0* a356; /* last_et_result_value */
	T6 a357; /* yyvsc19 */
	T0* a358; /* yyvs19 */
	T0* a359; /* yyspecial_routines19 */
	T0* a360; /* last_et_retry_instruction_value */
	T6 a361; /* yyvsc20 */
	T0* a362; /* yyvs20 */
	T0* a363; /* yyspecial_routines20 */
	T0* a364; /* last_et_symbol_operator_value */
	T6 a365; /* yyvsc21 */
	T0* a366; /* yyvs21 */
	T0* a367; /* yyspecial_routines21 */
	T0* a368; /* last_et_void_value */
	T6 a369; /* yyvsc22 */
	T0* a370; /* yyvs22 */
	T0* a371; /* yyspecial_routines22 */
	T0* a372; /* last_et_semicolon_symbol_value */
	T6 a373; /* yyvsc23 */
	T0* a374; /* yyvs23 */
	T0* a375; /* yyspecial_routines23 */
	T0* a376; /* last_et_bracket_symbol_value */
	T6 a377; /* yyvsc24 */
	T0* a378; /* yyvs24 */
	T0* a379; /* yyspecial_routines24 */
	T0* a380; /* last_et_question_mark_symbol_value */
	T6 a382; /* last_break_end */
	T6 a383; /* last_comment_end */
	T6 a385; /* ms_column */
	T6 a386; /* ms_line */
	T6 a391; /* break_kind */
	T0* a552; /* yyvs42 */
	T0* a553; /* yyvs78 */
	T0* a554; /* yyvs97 */
	T0* a555; /* yyvs101 */
	T0* a556; /* yyvs56 */
	T0* a557; /* yyvs53 */
	T0* a558; /* yyvs67 */
	T0* a559; /* yyvs86 */
	T6 a560; /* yyvsc78 */
	T0* a561; /* yyspecial_routines78 */
	T0* a562; /* yyvs79 */
	T0* a565; /* yyvs82 */
	T6 a566; /* yyvsc79 */
	T0* a567; /* yyspecial_routines79 */
	T0* a568; /* yyvs80 */
	T6 a569; /* yyvsc82 */
	T0* a570; /* yyspecial_routines82 */
	T0* a571; /* yyvs81 */
	T6 a572; /* yyvsc80 */
	T0* a573; /* yyspecial_routines80 */
	T0* a574; /* yyvs54 */
	T0* a575; /* yyvs96 */
	T6 a576; /* yyvsc81 */
	T0* a577; /* yyspecial_routines81 */
	T6 a579; /* yyvsc42 */
	T0* a580; /* yyspecial_routines42 */
	T6 a581; /* yyvsc76 */
	T0* a582; /* yyvs76 */
	T0* a583; /* yyspecial_routines76 */
	T0* a584; /* yyvs74 */
	T0* a586; /* yyvs75 */
	T6 a587; /* yyvsc75 */
	T0* a588; /* yyspecial_routines75 */
	T6 a589; /* yyvsc74 */
	T0* a590; /* yyspecial_routines74 */
	T0* a591; /* yyvs50 */
	T0* a593; /* yyvs49 */
	T6 a594; /* yyvsc49 */
	T0* a595; /* yyspecial_routines49 */
	T0* a596; /* yyvs70 */
	T0* a597; /* yyvs48 */
	T6 a599; /* yyvsc50 */
	T0* a600; /* yyspecial_routines50 */
	T0* a601; /* yyvs88 */
	T6 a603; /* yyvsc48 */
	T0* a604; /* yyspecial_routines48 */
	T0* a605; /* yyvs47 */
	T6 a606; /* yyvsc47 */
	T0* a607; /* yyspecial_routines47 */
	T6 a608; /* yyvsc97 */
	T0* a609; /* yyspecial_routines97 */
	T6 a610; /* yyvsc101 */
	T0* a611; /* yyspecial_routines101 */
	T0* a612; /* yyvs27 */
	T6 a614; /* yyvsc99 */
	T0* a615; /* yyvs99 */
	T0* a616; /* yyspecial_routines99 */
	T0* a617; /* yyvs107 */
	T0* a618; /* yyvs61 */
	T0* a619; /* yyvs87 */
	T0* a620; /* yyvs100 */
	T6 a621; /* yyvsc100 */
	T0* a622; /* yyspecial_routines100 */
	T6 a623; /* yyvsc107 */
	T0* a624; /* yyspecial_routines107 */
	T0* a625; /* yyvs106 */
	T0* a626; /* yyvs69 */
	T0* a627; /* yyvs64 */
	T6 a628; /* yyvsc106 */
	T0* a629; /* yyspecial_routines106 */
	T6 a630; /* yyvsc61 */
	T0* a631; /* yyspecial_routines61 */
	T0* a632; /* yyvs60 */
	T0* a633; /* yyvs44 */
	T6 a634; /* yyvsc60 */
	T0* a635; /* yyspecial_routines60 */
	T0* a636; /* yyvs68 */
	T6 a637; /* yyvsc68 */
	T0* a638; /* yyspecial_routines68 */
	T6 a639; /* yyvsc44 */
	T0* a640; /* yyspecial_routines44 */
	T0* a641; /* yyvs43 */
	T6 a642; /* yyvsc43 */
	T0* a643; /* yyspecial_routines43 */
	T6 a644; /* yyvsc87 */
	T0* a645; /* yyspecial_routines87 */
	T6 a646; /* yyvsc70 */
	T0* a647; /* yyspecial_routines70 */
	T6 a648; /* yyvsc56 */
	T0* a649; /* yyspecial_routines56 */
	T0* a650; /* yyvs55 */
	T6 a651; /* yyvsc55 */
	T0* a652; /* yyspecial_routines55 */
	T6 a653; /* yyvsc53 */
	T0* a654; /* yyspecial_routines53 */
	T0* a655; /* yyvs51 */
	T0* a656; /* yyvs52 */
	T6 a657; /* yyvsc52 */
	T0* a658; /* yyspecial_routines52 */
	T0* a659; /* yyvs112 */
	T6 a660; /* yyvsc51 */
	T0* a661; /* yyspecial_routines51 */
	T6 a662; /* yyvsc112 */
	T0* a663; /* yyspecial_routines112 */
	T0* a664; /* yyvs110 */
	T0* a665; /* yyvs111 */
	T6 a666; /* yyvsc111 */
	T0* a667; /* yyspecial_routines111 */
	T6 a668; /* yyvsc67 */
	T0* a669; /* yyspecial_routines67 */
	T0* a670; /* yyvs66 */
	T6 a671; /* yyvsc66 */
	T0* a672; /* yyspecial_routines66 */
	T0* a673; /* yyvs105 */
	T0* a675; /* yyvs104 */
	T0* a677; /* yyvs33 */
	T6 a678; /* yyvsc105 */
	T0* a679; /* yyspecial_routines105 */
	T0* a680; /* yyvs46 */
	T0* a682; /* yyvs103 */
	T0* a683; /* yyvs91 */
	T0* a684; /* yyvs45 */
	T0* a685; /* yyvs102 */
	T0* a686; /* yyvs73 */
	T0* a687; /* yyvs65 */
	T6 a689; /* yyvsc104 */
	T0* a690; /* yyspecial_routines104 */
	T6 a692; /* yyvsc65 */
	T0* a693; /* yyspecial_routines65 */
	T6 a694; /* yyvsc33 */
	T0* a695; /* yyspecial_routines33 */
	T6 a696; /* yyvsc69 */
	T0* a697; /* yyspecial_routines69 */
	T6 a700; /* yyvsc64 */
	T0* a701; /* yyspecial_routines64 */
	T0* a702; /* yyvs32 */
	T6 a703; /* yyvsc32 */
	T0* a704; /* yyspecial_routines32 */
	T6 a707; /* yyvsc73 */
	T0* a708; /* yyspecial_routines73 */
	T0* a709; /* yyvs72 */
	T0* a710; /* yyvs71 */
	T6 a712; /* yyvsc71 */
	T0* a713; /* yyspecial_routines71 */
	T6 a714; /* yyvsc72 */
	T0* a715; /* yyspecial_routines72 */
	T6 a716; /* yyvsc91 */
	T0* a717; /* yyspecial_routines91 */
	T0* a719; /* yyvs90 */
	T0* a720; /* yyvs89 */
	T6 a721; /* yyvsc89 */
	T0* a722; /* yyspecial_routines89 */
	T6 a723; /* yyvsc90 */
	T0* a724; /* yyspecial_routines90 */
	T0* a725; /* yyvs62 */
	T6 a726; /* yyvsc103 */
	T0* a727; /* yyspecial_routines103 */
	T6 a729; /* yyvsc102 */
	T0* a730; /* yyspecial_routines102 */
	T6 a732; /* yyvsc86 */
	T0* a733; /* yyspecial_routines86 */
	T6 a735; /* yyvsc92 */
	T0* a736; /* yyvs92 */
	T0* a737; /* yyspecial_routines92 */
	T6 a739; /* yyvsc113 */
	T0* a740; /* yyvs113 */
	T0* a741; /* yyspecial_routines113 */
	T6 a742; /* yyvsc45 */
	T0* a743; /* yyspecial_routines45 */
	T6 a745; /* yyvsc110 */
	T0* a746; /* yyspecial_routines110 */
	T6 a747; /* yyvsc27 */
	T0* a748; /* yyspecial_routines27 */
	T0* a749; /* yyvs26 */
	T6 a750; /* yyvsc26 */
	T0* a751; /* yyspecial_routines26 */
	T6 a752; /* yyvsc88 */
	T0* a753; /* yyspecial_routines88 */
	T0* a754; /* yyvs85 */
	T0* a755; /* yyvs37 */
	T6 a756; /* yyvsc85 */
	T0* a757; /* yyspecial_routines85 */
	T0* a758; /* yyvs35 */
	T0* a759; /* yyvs116 */
	T0* a760; /* yyvs77 */
	T0* a761; /* yyvs84 */
	T0* a762; /* yyvs57 */
	T0* a764; /* yyvs25 */
	T6 a765; /* yyvsc54 */
	T0* a766; /* yyspecial_routines54 */
	T6 a767; /* yyvsc77 */
	T0* a768; /* yyspecial_routines77 */
	T0* a769; /* yyvs59 */
	T0* a770; /* yyvs58 */
	T6 a771; /* yyvsc59 */
	T0* a772; /* yyspecial_routines59 */
	T6 a773; /* yyvsc58 */
	T0* a774; /* yyspecial_routines58 */
	T0* a775; /* yyvs115 */
	T6 a776; /* yyvsc84 */
	T0* a777; /* yyspecial_routines84 */
	T6 a778; /* yyvsc115 */
	T0* a779; /* yyspecial_routines115 */
	T0* a780; /* yyvs114 */
	T0* a781; /* yyvs41 */
	T6 a782; /* yyvsc114 */
	T0* a783; /* yyspecial_routines114 */
	T6 a784; /* yyvsc41 */
	T0* a785; /* yyspecial_routines41 */
	T0* a786; /* yyvs38 */
	T0* a787; /* yyvs40 */
	T6 a788; /* yyvsc40 */
	T0* a789; /* yyspecial_routines40 */
	T0* a790; /* yyvs39 */
	T6 a791; /* yyvsc38 */
	T0* a792; /* yyspecial_routines38 */
	T6 a793; /* yyvsc39 */
	T0* a794; /* yyspecial_routines39 */
	T0* a795; /* yyvs108 */
	T0* a796; /* yyvs95 */
	T6 a797; /* yyvsc57 */
	T0* a798; /* yyspecial_routines57 */
	T6 a799; /* yyvsc95 */
	T0* a800; /* yyspecial_routines95 */
	T0* a801; /* yyvs94 */
	T6 a802; /* yyvsc94 */
	T0* a803; /* yyspecial_routines94 */
	T6 a806; /* yyvsc62 */
	T0* a807; /* yyspecial_routines62 */
	T6 a808; /* yyvsc37 */
	T0* a809; /* yyspecial_routines37 */
	T6 a810; /* yyvsc108 */
	T0* a811; /* yyspecial_routines108 */
	T0* a812; /* yyvs98 */
	T6 a813; /* yyvsc25 */
	T0* a814; /* yyspecial_routines25 */
	T0* a815; /* yyvs63 */
	T6 a816; /* yyvsc63 */
	T0* a817; /* yyspecial_routines63 */
	T6 a819; /* yyvsc116 */
	T0* a820; /* yyspecial_routines116 */
	T0* a823; /* yyvs36 */
	T0* a824; /* yyvs83 */
	T0* a825; /* yyvs93 */
	T0* a826; /* yyvs109 */
	T0* a827; /* yyvs34 */
	T6 a828; /* yyvsc35 */
	T0* a829; /* yyspecial_routines35 */
	T6 a830; /* yyvsc34 */
	T0* a831; /* yyspecial_routines34 */
	T6 a832; /* yyvsc98 */
	T0* a833; /* yyspecial_routines98 */
	T6 a834; /* yyvsc93 */
	T0* a835; /* yyspecial_routines93 */
	T6 a836; /* yyvsc96 */
	T0* a837; /* yyspecial_routines96 */
	T6 a838; /* yyvsc109 */
	T0* a839; /* yyspecial_routines109 */
	T6 a840; /* yyvsc46 */
	T0* a841; /* yyspecial_routines46 */
	T0* a842; /* yyvs30 */
	T6 a843; /* yyvsc36 */
	T0* a844; /* yyspecial_routines36 */
	T0* a845; /* yyvs31 */
	T6 a847; /* yyvsc83 */
	T0* a848; /* yyspecial_routines83 */
	T6 a849; /* yyvsc31 */
	T0* a850; /* yyspecial_routines31 */
	T6 a851; /* yyvsc30 */
	T0* a852; /* yyspecial_routines30 */
	T0* a853; /* yyvs28 */
	T0* a854; /* yyvs29 */
	T6 a855; /* yyvsc29 */
	T0* a856; /* yyspecial_routines29 */
	T6 a857; /* yyvsc28 */
	T0* a858; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S129 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S130 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S131 {
	int id;
	T0* a3; /* eiffel_class */
	T0* a4; /* actual_parameters */
	T0* a7; /* type_mark */
	T0* a8; /* name */
	T0* a9; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S133 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* declared_type */
	T6 a8; /* hash_code */
	T0* a9; /* is_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T0* a13; /* implementation_feature */
	T6 a14; /* builtin_code */
	T0* a15; /* assigner */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* alias_clause */
	T0* a20; /* first_indexing */
	T6 a22; /* first_seed */
	T1 a26; /* implementation_checked */
	T1 a27; /* has_implementation_error */
	T0* a32; /* semicolon */
	T0* a33; /* feature_clause */
	T0* a34; /* other_seeds */
	T6 a35; /* id */
	T6 a36; /* version */
	T0* a37; /* frozen_keyword */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T1 a40; /* assertions_checked */
	T1 a41; /* has_assertions_error */
	T0* a42; /* synonym */
};

/* Struct for type ET_KEYWORD */
struct S136 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S138 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S139 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_feature */
	T0* a4; /* universe */
	T1 a6; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S140 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S141 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S142 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S143 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S144 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S145 {
	int id;
	T6 a1; /* capacity */
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S146 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S147 {
	int id;
	T6 a5; /* position */
	T0* a7; /* internal_cursor */
	T0* a12; /* item_storage */
	T6 a13; /* last_position */
	T6 a14; /* capacity */
	T6 a17; /* slots_position */
	T6 a19; /* count */
	T6 a20; /* free_slot */
	T6 a21; /* modulus */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a26; /* equality_tester */
	T0* a27; /* internal_keys */
	T6 a28; /* found_position */
	T0* a31; /* clashes */
	T0* a32; /* slots */
	T0* a33; /* key_storage */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S148 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_CALL_AGENT] */
struct S150 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S151 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a5; /* right_symbol */
	T6 a6; /* count */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S152 {
	int id;
	T0* a1; /* target */
	T0* a3; /* arguments */
	T0* a4; /* qualified_name */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S155 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S156 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S157 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S158 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a11; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a19; /* special_item_routines */
	T0* a20; /* item_storage */
	T0* a21; /* clashes */
	T0* a23; /* slots */
	T6 a24; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S159 {
	int id;
	T0* a4; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* item_storage */
	T6 a13; /* count */
	T6 a14; /* last_position */
	T6 a15; /* free_slot */
	T6 a17; /* position */
	T6 a18; /* capacity */
	T6 a21; /* slots_position */
	T0* a23; /* equality_tester */
	T0* a24; /* key_equality_tester */
	T0* a25; /* internal_keys */
	T6 a26; /* found_position */
	T0* a27; /* clashes */
	T6 a28; /* modulus */
	T0* a29; /* slots */
	T6 a35; /* clashes_previous_position */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S160 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S161 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* position */
	T0* a11; /* item_storage */
	T6 a12; /* capacity */
	T6 a13; /* modulus */
	T6 a15; /* last_position */
	T6 a16; /* free_slot */
	T0* a18; /* equality_tester */
	T6 a19; /* count */
	T6 a22; /* slots_position */
	T6 a26; /* clashes_previous_position */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* found_position */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S162 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S163 {
	int id;
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S164 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a20; /* procedures */
	T0* a24; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S165 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S166 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S167 {
	int id;
	T1 a1; /* is_generated */
	T0* a3; /* target_type */
	T0* a4; /* static_feature */
	T0* a6; /* current_feature */
	T6 a7; /* id */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T0* a12; /* result_type_set */
	T0* a14; /* dynamic_type_sets */
	T6 a18; /* builtin_code */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* is_built */
	T0* a23; /* parent_type */
	T1 a49; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S168 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_set */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a20; /* procedures */
	T0* a24; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S169 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* result_type_set */
	T0* a10; /* open_operand_type_sets */
	T0* a11; /* base_type */
	T0* a13; /* base_class */
	T0* a17; /* first_type */
	T0* a18; /* other_types */
	T0* a21; /* procedures */
	T0* a25; /* next_type */
	T1 a26; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S170 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* open_operand_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a20; /* procedures */
	T0* a24; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_RESULT */
struct S171 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a5; /* index */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S172 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
	T0* a8; /* result_type_set */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S174 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S179 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_CURRENT */
struct S180 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a9; /* index */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S181 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S183 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ET_CALL_AGENT */
struct S184 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
	T0* a9; /* implicit_result */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S187 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* other_types */
	T0* a4; /* internal_other_types */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S188 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* constant */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a18; /* implementation_checked */
	T1 a19; /* has_implementation_error */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* first_indexing */
	T0* a27; /* other_seeds */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* frozen_keyword */
	T0* a31; /* first_precursor */
	T0* a32; /* other_precursors */
	T1 a35; /* assertions_checked */
	T1 a36; /* has_assertions_error */
	T0* a37; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S190 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* unique_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a17; /* implementation_checked */
	T1 a18; /* has_implementation_error */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* first_indexing */
	T0* a27; /* other_seeds */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* frozen_keyword */
	T0* a31; /* first_precursor */
	T0* a32; /* other_precursors */
	T1 a35; /* assertions_checked */
	T1 a36; /* has_assertions_error */
	T0* a37; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S191 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a11; /* first_seed */
	T1 a15; /* implementation_checked */
	T1 a16; /* has_implementation_error */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* other_seeds */
	T6 a26; /* id */
	T6 a27; /* version */
	T0* a28; /* frozen_keyword */
	T0* a29; /* first_precursor */
	T0* a30; /* other_precursors */
	T1 a33; /* assertions_checked */
	T1 a34; /* has_assertions_error */
	T0* a35; /* synonym */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S200 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
struct S202 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S204 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S205 {
	int id;
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S206 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S209 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S210 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S211 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
	T0* a9; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S212 {
	int id;
	T6 a1; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S213 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S215 {
	int id;
};

/* Struct for type UNIX_FILE_INFO */
struct S216 {
	int id;
	T0* a2; /* buffered_file_info */
	T0* a5; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S218 {
	int id;
};

/* Struct for type ARRAY [INTEGER_32] */
struct S219 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_DO_PROCEDURE */
struct S220 {
	int id;
	T0* a5; /* arguments */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* is_keyword */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T0* a13; /* implementation_class */
	T0* a14; /* implementation_feature */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* locals */
	T0* a18; /* compound */
	T0* a19; /* postconditions */
	T0* a20; /* rescue_clause */
	T0* a21; /* first_indexing */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T6 a26; /* first_seed */
	T0* a29; /* other_seeds */
	T0* a30; /* semicolon */
	T0* a31; /* feature_clause */
	T6 a32; /* id */
	T6 a33; /* version */
	T0* a34; /* frozen_keyword */
	T0* a35; /* first_precursor */
	T0* a36; /* other_precursors */
	T1 a37; /* assertions_checked */
	T1 a38; /* has_assertions_error */
	T0* a39; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S222 {
	int id;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S225 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a6; /* arguments */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a11; /* hash_code */
	T0* a12; /* is_keyword */
	T0* a13; /* end_keyword */
	T0* a14; /* clients */
	T0* a15; /* implementation_class */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* first_indexing */
	T1 a21; /* implementation_checked */
	T1 a22; /* has_implementation_error */
	T6 a24; /* first_seed */
	T0* a27; /* other_seeds */
	T0* a28; /* semicolon */
	T0* a29; /* feature_clause */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* frozen_keyword */
	T0* a33; /* first_precursor */
	T0* a34; /* other_precursors */
	T1 a35; /* assertions_checked */
	T1 a36; /* has_assertions_error */
	T0* a37; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S226 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a7; /* other_types */
	T0* a8; /* targets */
};

/* Struct for type KL_ANY_ROUTINES */
struct S228 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S229 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S230 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S232 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S233 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S234 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S235 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S236 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S237 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S239 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S241 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S242 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [INTEGER_32] */
struct S243 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S244 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S245 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S246 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S247 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S248 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S249 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S250 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S251 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S252 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S253 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S254 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S255 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type MANAGED_POINTER */
struct S256 {
	int id;
	T14 a1; /* item */
	T6 a3; /* count */
	T1 a4; /* is_shared */
};

/* Struct for type ET_SYMBOL */
struct S257 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S258 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a12; /* seed */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S260 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S261 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S262 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S263 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S264 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S265 {
	int id;
	T0* a1; /* container */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S266 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S267 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S268 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S269 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S271 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S274 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S276 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S277 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S278 {
	int id;
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S279 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S280 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CALL_AGENT] */
struct S281 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S282 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S284 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S285 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S286 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S287 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S288 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S289 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S291 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S292 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S293 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S294 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S296 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S298 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S299 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S300 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S301 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S302 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
struct S305 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [STRING_8] */
struct S306 {
	int id;
	T0* a1; /* area */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S307 {
	int id;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S308 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S309 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S310 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S311 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S312 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S313 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S314 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S315 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S316 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S317 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S318 {
	int id;
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S319 {
	int id;
	T11 a2; /* part1 */
	T6 a3; /* sign */
	T11 a4; /* part2 */
	T6 a6; /* last_state */
	T0* a7; /* leading_separators */
	T0* a8; /* trailing_separators */
	T1 a9; /* leading_separators_acceptable */
	T1 a10; /* trailing_separators_acceptable */
	T6 a11; /* conversion_type */
	T1 a12; /* internal_overflowed */
};

/* Struct for type C_STRING */
struct S322 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S323 {
	int id;
	T0* a3; /* as_special */
	T0* a6; /* area */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S324 {
	int id;
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S326 {
	int id;
	T0* a1; /* named_features */
	T0* a3; /* queries */
	T0* a4; /* procedures */
	T0* a5; /* aliased_features */
	T0* a7; /* clients_list */
	T0* a8; /* client_names */
	T0* a10; /* feature_adaptation_resolver */
	T0* a11; /* dotnet_feature_adaptation_resolver */
	T0* a12; /* identifier_type_resolver */
	T0* a13; /* anchored_type_checker */
	T0* a14; /* signature_checker */
	T0* a15; /* parent_checker */
	T0* a16; /* formal_parameter_checker */
	T0* a17; /* precursor_checker */
	T0* a18; /* universe */
	T0* a19; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S327 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S328 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* supplier_builder */
	T0* a3; /* current_class */
	T0* a4; /* no_suppliers */
	T1 a5; /* flat_mode */
	T1 a6; /* flat_dbc_mode */
	T1 a7; /* suppliers_enabled */
	T0* a8; /* universe */
	T1 a12; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S329 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S330 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S333 {
	int id;
	T6 a3; /* year */
	T6 a4; /* month */
	T6 a5; /* day */
	T6 a6; /* hour */
	T6 a7; /* minute */
	T6 a8; /* second */
	T6 a9; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S334 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a10; /* last_text_count */
	T6 a11; /* last_literal_start */
	T0* a12; /* filename */
	T0* a13; /* universe */
	T0* a14; /* ast_factory */
	T0* a15; /* error_handler */
	T0* a21; /* input_buffer */
	T0* a23; /* last_classname */
	T6 a25; /* yy_start_state */
	T6 a26; /* yy_line */
	T6 a27; /* yy_column */
	T6 a28; /* yy_position */
	T6 a29; /* line */
	T6 a30; /* column */
	T6 a31; /* position */
	T0* a33; /* yy_state_stack */
	T6 a35; /* yy_end */
	T6 a36; /* yy_start */
	T6 a37; /* last_token */
	T1 a44; /* yy_more_flag */
	T6 a45; /* yy_more_len */
	T6 a46; /* yy_state_count */
	T0* a47; /* yy_ec */
	T0* a48; /* yy_content_area */
	T0* a49; /* yy_content */
	T0* a50; /* yy_accept */
	T6 a51; /* yy_last_accepting_state */
	T6 a52; /* yy_last_accepting_cpos */
	T0* a53; /* yy_chk */
	T0* a54; /* yy_base */
	T0* a55; /* yy_def */
	T0* a56; /* yy_meta */
	T0* a58; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a64; /* yy_looking_for_trail_begin */
	T6 a66; /* yy_full_match */
	T6 a67; /* yy_full_state */
	T6 a68; /* yy_full_lp */
	T1 a74; /* yy_rejected */
	T1 a75; /* class_keyword_found */
	T6 a76; /* last_literal_end */
	T0* a77; /* verbatim_marker */
	T0* a78; /* verbatim_open_white_characters */
	T0* a79; /* verbatim_close_white_characters */
	T6 a88; /* ms_column */
	T6 a89; /* ms_line */
	T6 a93; /* last_break_end */
	T6 a94; /* last_comment_end */
};

/* Struct for type ET_NONE_GROUP */
struct S335 {
	int id;
	T0* a3; /* name */
};

/* Struct for type ET_PARENT */
struct S336 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a9; /* end_keyword */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S337 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* left_bracket */
	T0* a7; /* right_bracket */
};

/* Struct for type ET_TUPLE_TYPE */
struct S338 {
	int id;
	T0* a1; /* tuple_keyword */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_RENAME_LIST */
struct S339 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S340 {
	int id;
	T0* a1; /* export_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S341 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S342 {
	int id;
	T6 a2; /* count */
	T0* a5; /* storage */
	T0* a6; /* inherit_keyword */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S344 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S345 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S346 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S347 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* current_class */
	T0* a13; /* class_impl */
	T0* a14; /* position */
	T1 a28; /* ise_reported */
	T1 a29; /* ise_fatal */
	T1 a30; /* se_reported */
	T1 a31; /* se_fatal */
	T1 a32; /* ve_reported */
	T1 a33; /* ve_fatal */
	T1 a34; /* ge_reported */
	T1 a35; /* ge_fatal */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S348 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S350 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* agent_type */
	T0* a8; /* other_types */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S351 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S353 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S355 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S356 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S357 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S358 {
	int id;
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S359 {
	int id;
	T0* a1; /* value */
	T6 a6; /* compressed_position */
	T6 a8; /* index */
	T0* a23; /* cast_type */
	T0* a28; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S360 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a15; /* seed */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S361 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S362 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S363 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S364 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S365 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S366 {
	int id;
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S367 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S368 {
	int id;
	T6 a1; /* count */
	T0* a4; /* internal_cursor */
	T0* a9; /* item_storage */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a13; /* last_position */
	T6 a14; /* free_slot */
	T6 a16; /* position */
	T6 a18; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a31; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type KL_DIRECTORY */
struct S371 {
	int id;
	T1 a2; /* end_of_input */
	T0* a3; /* last_entry */
	T6 a5; /* mode */
	T0* a7; /* name */
	T0* a9; /* string_name */
	T0* a10; /* entry_buffer */
	T0* a13; /* lastentry */
	T14 a16; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S372 {
	int id;
};

/* Struct for type ST_SPLITTER */
struct S373 {
	int id;
	T1 a3; /* has_escape_character */
	T2 a4; /* escape_character */
	T0* a6; /* separator_codes */
	T0* a8; /* separators */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S374 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S377 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S378 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S379 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a3; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S381 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S382 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S383 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a12; /* seed */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S384 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S385 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S386 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a9; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S387 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S388 {
	int id;
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S389 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S390 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S391 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S392 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S393 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S394 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S395 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S397 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S398 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S400 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S401 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S403 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S404 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S405 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S406 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S407 {
	int id;
	T2 a1; /* code */
	T6 a3; /* hash_code */
	T6 a9; /* compressed_position */
	T0* a10; /* free_operator_name */
	T6 a16; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S408 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S409 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S411 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S412 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S413 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a15; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S414 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S415 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S416 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S417 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S419 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S420 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S421 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S422 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S423 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S424 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S425 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S426 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a13; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S428 {
	int id;
};

/* Struct for type ET_VOID */
struct S429 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S430 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S431 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S432 {
	int id;
	T2 a1; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S433 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S434 {
	int id;
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S435 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S436 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S437 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a10; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S438 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S439 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S440 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a24; /* type */
	T0* a25; /* cast_type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S441 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a11; /* compressed_position */
	T6 a13; /* index */
	T0* a24; /* cast_type */
	T0* a33; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S442 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a7; /* compressed_position */
	T6 a9; /* index */
	T0* a20; /* cast_type */
	T0* a29; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S443 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a13; /* sign */
	T0* a22; /* cast_type */
	T0* a28; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S444 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a13; /* sign */
	T0* a22; /* cast_type */
	T0* a28; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S445 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a13; /* sign */
	T0* a22; /* cast_type */
	T0* a27; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S446 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a9; /* sign */
	T0* a18; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S447 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a9; /* sign */
	T0* a18; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S449 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S450 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S451 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a23; /* type */
	T0* a24; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S452 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a23; /* type */
	T0* a24; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S454 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S456 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S457 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S458 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S459 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S460 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S461 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S462 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S463 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S464 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a4; /* storage */
	T6 a5; /* count */
	T1 a7; /* has_assertions_error */
	T1 a8; /* assertions_checked */
	T1 a20; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S465 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S466 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S468 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S470 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S472 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S476 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S477 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S479 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S480 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S481 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S482 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S483 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S484 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S485 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S486 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S487 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S488 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S489 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S490 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S492 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S493 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S495 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S497 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a3; /* constraint */
	T0* a4; /* creation_procedures */
	T0* a5; /* type_mark */
	T0* a6; /* name */
	T6 a7; /* index */
	T0* a10; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S498 {
	int id;
	T0* a1; /* create_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S499 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S500 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S502 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S503 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S504 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S505 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S506 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S508 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S509 {
	int id;
	T0* a2; /* constant */
	T6 a3; /* size */
	T0* a5; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S510 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a3; /* name */
	T6 a4; /* size */
	T0* a18; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S511 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S513 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S515 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S516 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S517 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S518 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S519 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S520 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S521 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S522 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S523 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S524 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S525 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S526 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S527 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S528 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S530 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S531 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S532 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S533 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a4; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S534 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S535 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S537 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S538 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S539 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S540 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S541 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S542 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S544 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S545 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S547 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S548 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S549 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S550 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S551 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S552 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a3; /* clients */
	T0* a4; /* storage */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S553 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S554 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S555 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S557 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S559 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S560 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S562 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S563 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S564 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S565 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a5; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S566 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S568 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S569 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S570 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S571 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S572 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S575 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S577 {
	int id;
	T0* a1; /* require_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S578 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S579 {
	int id;
	T0* a1; /* local_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S580 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S581 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S582 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S583 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S584 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S585 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* is_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a25; /* implementation_checked */
	T1 a26; /* has_implementation_error */
	T0* a31; /* semicolon */
	T0* a32; /* feature_clause */
	T0* a33; /* other_seeds */
	T6 a34; /* id */
	T6 a35; /* version */
	T0* a36; /* frozen_keyword */
	T0* a37; /* first_precursor */
	T0* a38; /* other_precursors */
	T1 a39; /* assertions_checked */
	T1 a40; /* has_assertions_error */
	T0* a41; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S586 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S587 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* is_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a25; /* implementation_checked */
	T1 a26; /* has_implementation_error */
	T0* a31; /* semicolon */
	T0* a32; /* feature_clause */
	T0* a33; /* other_seeds */
	T6 a34; /* id */
	T6 a35; /* version */
	T0* a36; /* frozen_keyword */
	T0* a37; /* first_precursor */
	T0* a38; /* other_precursors */
	T1 a39; /* assertions_checked */
	T1 a40; /* has_assertions_error */
	T0* a41; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S588 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a6; /* arguments */
	T0* a7; /* declared_type */
	T0* a8; /* is_keyword */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T0* a11; /* implementation_class */
	T0* a12; /* implementation_feature */
	T0* a13; /* assigner */
	T0* a14; /* obsolete_message */
	T0* a15; /* preconditions */
	T0* a16; /* postconditions */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a29; /* semicolon */
	T0* a30; /* feature_clause */
	T0* a31; /* other_seeds */
	T6 a32; /* id */
	T6 a33; /* version */
	T0* a34; /* frozen_keyword */
	T0* a35; /* first_precursor */
	T0* a36; /* other_precursors */
	T1 a37; /* assertions_checked */
	T1 a38; /* has_assertions_error */
	T0* a39; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S591 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S592 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* is_keyword */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a29; /* semicolon */
	T0* a30; /* feature_clause */
	T0* a31; /* other_seeds */
	T6 a32; /* id */
	T6 a33; /* version */
	T0* a34; /* frozen_keyword */
	T0* a35; /* first_precursor */
	T0* a36; /* other_precursors */
	T1 a37; /* assertions_checked */
	T1 a38; /* has_assertions_error */
	T0* a39; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S593 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* is_keyword */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T0* a11; /* implementation_feature */
	T6 a12; /* builtin_code */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a30; /* semicolon */
	T0* a31; /* feature_clause */
	T0* a32; /* other_seeds */
	T6 a33; /* id */
	T6 a34; /* version */
	T0* a35; /* frozen_keyword */
	T0* a36; /* first_precursor */
	T0* a37; /* other_precursors */
	T1 a38; /* assertions_checked */
	T1 a39; /* has_assertions_error */
	T0* a40; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S594 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S595 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S596 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S597 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a12; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S598 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a15; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S599 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a12; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S600 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S601 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a58; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S602 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S603 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S604 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S605 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a40; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S606 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S608 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S609 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S611 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S612 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S613 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S616 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S617 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S619 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S620 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S621 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S622 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S623 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S624 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S625 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S626 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S627 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a3; /* tag */
	T0* a4; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S628 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S629 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S630 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S631 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S633 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S635 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* name */
	T6 a36; /* seed */
	T1 a38; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S636 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S637 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S639 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S640 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S641 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S642 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S643 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S644 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S645 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S646 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S647 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S648 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a5; /* elseif_parts */
	T0* a6; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S649 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S650 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S651 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S653 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a6; /* invariant_part */
	T0* a7; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S654 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S655 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S656 {
	int id;
	T0* a1; /* check_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S658 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a6; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S659 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S660 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S662 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S663 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S664 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S665 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S666 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S667 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S668 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S669 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S670 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S671 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S672 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S673 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S674 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S675 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S676 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S677 {
	int id;
	T0* a1; /* when_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S678 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S679 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S680 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S682 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S684 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S685 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S687 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S688 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S689 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S690 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S691 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S692 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S693 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S694 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S695 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S696 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S698 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S699 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S700 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S702 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S703 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S704 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S705 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T6 a6; /* index */
	T0* a8; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S706 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S707 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S708 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S709 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S710 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* current_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S711 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* result_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S712 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S713 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S714 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S716 {
	int id;
	T0* a1; /* and_keyword */
	T0* a3; /* then_keyword */
	T6 a9; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S717 {
	int id;
	T0* a1; /* or_keyword */
	T0* a3; /* else_keyword */
	T6 a9; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S718 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S719 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S720 {
	int id;
	T0* a1; /* old_keyword */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type ET_INLINE_AGENT */
struct S721 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* associated_feature */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S722 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S723 {
	int id;
	T0* a1; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S724 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S725 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S726 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
	T6 a8; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S727 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S728 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S729 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S730 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S731 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S732 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S733 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S734 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S735 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S736 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S737 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S738 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S739 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S740 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S741 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S742 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S743 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S744 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S746 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S747 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S748 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S749 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T0* a5; /* question_mark */
	T6 a8; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S751 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER_8]] */
struct S754 {
	int id;
	T14 a1; /* pointer_item */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S755 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S756 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S757 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S758 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S759 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S761 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S762 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S763 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S764 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S765 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S766 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S767 {
	int id;
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S768 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S769 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S770 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S771 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S772 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S773 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S774 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S775 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S776 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S777 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S778 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S779 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S781 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S782 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S783 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S784 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S785 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S786 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a11; /* filename */
	T0* a12; /* position */
	T1 a13; /* ise_reported */
	T1 a14; /* ise_fatal */
	T1 a15; /* se_reported */
	T1 a16; /* se_fatal */
	T1 a17; /* ve_reported */
	T1 a18; /* ve_fatal */
	T1 a19; /* ge_reported */
	T1 a20; /* ge_fatal */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S787 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type KL_STDIN_FILE */
struct S791 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a5; /* character_buffer */
	T14 a10; /* file_pointer */
	T6 a15; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S792 {
	int id;
	T0* a2; /* filename */
	T6 a10; /* compressed_position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S793 {
	int id;
	T6 a4; /* found_position */
	T0* a8; /* key_storage */
	T0* a9; /* item_storage */
	T6 a10; /* position */
	T6 a11; /* count */
	T6 a12; /* capacity */
	T6 a14; /* free_slot */
	T6 a15; /* last_position */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T0* a22; /* equality_tester */
	T6 a23; /* modulus */
	T6 a24; /* slots_position */
	T6 a25; /* clashes_previous_position */
	T0* a28; /* clashes */
	T0* a29; /* slots */
	T0* a30; /* internal_cursor */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S794 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S796 {
	int id;
	T6 a15; /* index */
	T0* a18; /* name */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S798 {
	int id;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S799 {
	int id;
	T6 a1; /* index */
	T0* a3; /* agent_expression */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S801 {
	int id;
	T0* a7; /* integer_overflow_state1 */
	T0* a8; /* integer_overflow_state2 */
	T0* a10; /* natural_overflow_state1 */
	T0* a11; /* natural_overflow_state2 */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S803 {
	int id;
	T6 a1; /* count */
	T0* a9; /* internal_cursor */
	T6 a13; /* position */
	T6 a16; /* found_position */
	T0* a19; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* last_position */
	T6 a23; /* free_slot */
	T6 a24; /* modulus */
	T6 a26; /* slots_position */
	T6 a27; /* clashes_previous_position */
	T0* a31; /* equality_tester */
	T0* a35; /* key_storage */
	T0* a36; /* clashes */
	T0* a37; /* slots */
	T6 a38; /* capacity */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S804 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S806 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* capacity */
	T6 a14; /* slots_position */
	T6 a16; /* count */
	T6 a17; /* free_slot */
	T0* a18; /* equality_tester */
	T6 a19; /* modulus */
	T6 a20; /* clashes_previous_position */
	T0* a25; /* clashes */
	T0* a26; /* slots */
	T0* a27; /* key_storage */
	T0* a28; /* internal_cursor */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S807 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S809 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S810 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a17; /* count */
	T6 a29; /* slots_position */
	T6 a33; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S811 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* rename_table */
	T0* a6; /* export_table */
	T0* a7; /* undefine_table */
	T0* a8; /* redefine_table */
	T0* a9; /* select_table */
	T0* a10; /* replicable_features */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S812 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* dotnet_features */
	T0* a5; /* other_dotnet_features */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S813 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S814 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S815 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* parent_context */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S816 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S817 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S818 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* current_feature */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S819 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S820 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a7; /* current_feature_impl */
	T0* a8; /* current_class_impl */
	T0* a9; /* current_enclosing_feature */
	T0* a10; /* overloaded_procedures */
	T0* a11; /* overloaded_queries */
	T0* a12; /* best_overloaded_features */
	T0* a13; /* used_contexts */
	T0* a14; /* unused_contexts */
	T0* a15; /* current_context */
	T1 a17; /* has_fatal_error */
	T1 a18; /* in_assertion */
	T1 a19; /* in_invariant */
	T1 a22; /* in_precondition */
	T1 a23; /* in_postcondition */
	T0* a24; /* current_target_type */
	T1 a25; /* in_precursor */
	T1 a26; /* in_rescue */
	T1 a31; /* in_inline_agent */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S821 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a5; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S822 {
	int id;
	T0* a1; /* sorted_items */
	T0* a3; /* cycle */
	T0* a5; /* indexes */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
struct S823 {
	int id;
	T6 a1; /* count */
	T6 a5; /* found_position */
	T0* a8; /* item_storage */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T0* a18; /* equality_tester */
	T0* a19; /* key_equality_tester */
	T0* a20; /* internal_keys */
	T0* a21; /* internal_cursor */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T6 a25; /* modulus */
	T0* a26; /* slots */
	T6 a27; /* slots_position */
	T6 a28; /* clashes_previous_position */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S824 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S825 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* formal_parameter_sorter */
	T0* a4; /* direct_formal_parameter_sorter */
	T0* a5; /* universe */
	T0* a7; /* current_formal */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S830 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S831 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S832 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S833 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S834 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S835 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S836 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S837 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S838 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S839 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S841 {
	int id;
	T6 a1; /* count */
	T0* a3; /* internal_cursor */
	T0* a5; /* first_cell */
	T0* a6; /* last_cell */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S842 {
	int id;
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T1 a5; /* after */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S843 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a15; /* count */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* special_item_routines */
	T0* a21; /* item_storage */
	T0* a22; /* clashes */
	T0* a24; /* slots */
	T6 a25; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S844 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S845 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S846 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S847 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S848 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S849 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S850 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S851 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S852 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S853 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S854 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S855 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S856 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S857 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S858 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S859 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S860 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S861 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S862 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S863 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S864 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S865 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S867 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S868 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S869 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S870 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S871 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S872 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S873 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S874 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S875 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S877 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S878 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S879 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S880 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S881 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S882 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S883 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S884 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S885 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S886 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S887 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S888 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S889 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S890 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S891 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S892 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S893 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S894 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S895 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S896 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S897 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S898 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S899 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S900 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S901 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S906 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S907 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S908 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S909 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S910 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S911 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S912 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S913 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S914 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S915 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S916 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S917 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S918 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S919 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S920 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S921 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S922 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S923 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S924 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S925 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S926 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S927 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S928 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S929 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S930 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S931 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S933 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S934 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S935 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S936 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S937 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S939 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S940 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S941 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S942 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S943 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S944 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S945 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S946 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S947 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S948 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S949 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S950 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S951 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S953 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S954 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S955 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S956 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S957 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S962 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S963 {
	int id;
	T0* a2; /* deltas */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S965 {
	int id;
};

/* Struct for type ET_FEATURE_IDS */
struct S966 {
	int id;
	T6 a1; /* count */
	T0* a4; /* feature_ids */
};

/* Struct for type ET_FEATURE_LIST */
struct S967 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S970 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S971 {
	int id;
	T14 a1; /* pointer_item */
};

/* Struct for type ET_PARENT_FEATURE */
struct S973 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S974 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S975 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S976 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S978 {
	int id;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S980 {
	int id;
	T6 a3; /* count */
	T6 a6; /* capacity */
	T0* a7; /* storage */
	T0* a8; /* special_routines */
	T0* a9; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S981 {
	int id;
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
struct S985 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S987 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S988 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_64] */
struct S989 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S990 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S991 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S993 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S995 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S996 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S998 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S999 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1000 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1001 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1002 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1003 {
	int id;
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a11; /* internal_cursor */
	T0* a14; /* item_storage */
	T0* a16; /* key_equality_tester */
	T0* a17; /* internal_keys */
	T6 a18; /* position */
	T6 a19; /* last_position */
	T6 a20; /* free_slot */
	T6 a22; /* modulus */
	T6 a29; /* slots_position */
	T0* a30; /* equality_tester */
	T6 a31; /* clashes_previous_position */
	T0* a34; /* key_storage */
	T0* a35; /* clashes */
	T0* a36; /* slots */
	T0* a38; /* special_item_routines */
	T0* a39; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1004 {
	int id;
	T6 a5; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a10; /* internal_cursor */
	T0* a15; /* item_storage */
	T6 a16; /* modulus */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T0* a22; /* equality_tester */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1005 {
	int id;
	T6 a1; /* count */
	T6 a8; /* capacity */
	T6 a9; /* found_position */
	T0* a13; /* internal_cursor */
	T0* a17; /* key_storage */
	T0* a18; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* position */
	T6 a23; /* last_position */
	T6 a24; /* free_slot */
	T6 a26; /* modulus */
	T0* a32; /* equality_tester */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
	T0* a38; /* clashes */
	T0* a39; /* slots */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1006 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T6 a17; /* count */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T6 a21; /* capacity */
	T0* a27; /* equality_tester */
	T0* a28; /* key_equality_tester */
	T0* a29; /* internal_keys */
	T0* a34; /* clashes */
	T6 a35; /* modulus */
	T0* a36; /* slots */
	T6 a37; /* slots_position */
	T6 a38; /* clashes_previous_position */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1008 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1009 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1010 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1011 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1012 {
	int id;
	T6 a1; /* capacity */
	T6 a4; /* found_position */
	T0* a7; /* item_storage */
	T6 a8; /* modulus */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* internal_cursor */
	T0* a15; /* equality_tester */
	T6 a16; /* count */
	T6 a23; /* slots_position */
	T0* a24; /* special_item_routines */
	T0* a25; /* clashes */
	T0* a27; /* slots */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1014 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T6 a13; /* capacity */
	T6 a16; /* slots_position */
	T0* a18; /* equality_tester */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1016 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1017 {
	int id;
	T0* a2; /* cycle */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* items */
	T0* a6; /* sorted_items */
	T0* a7; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1018 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1019 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1020 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1021 {
	int id;
	T6 a4; /* position */
	T6 a6; /* found_position */
	T0* a8; /* item_storage */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a13; /* modulus */
	T6 a19; /* capacity */
	T6 a21; /* slots_position */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a24; /* equality_tester */
	T0* a25; /* internal_keys */
	T0* a26; /* internal_cursor */
	T0* a28; /* key_storage */
	T0* a29; /* clashes */
	T0* a30; /* slots */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S1022 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S1023 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1024 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
struct S1025 {
	int id;
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
	T6 a9; /* count */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
struct S1027 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1029 {
	int id;
	T0* a3; /* cycle */
	T0* a4; /* sorted_items */
	T0* a5; /* items */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1030 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1031 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1033 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S1034 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S1035 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1037 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1038 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1045 {
	int id;
	T0* a2; /* default_output */
};

/* Struct for type PLATFORM */
struct S1046 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1048 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1049 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1050 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1053 {
	int id;
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1059 {
	int id;
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1062 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1063 {
	int id;
	T6 a2; /* index */
	T0* a5; /* expression */
	T0* a9; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1068 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1074 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1075 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1078 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1079 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1080 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1081 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1082 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
struct S1083 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1084 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1086 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1088 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1089 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1091 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1093 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1094 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1095 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1097 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S1099 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1100 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1101 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1103 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1105 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1106 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1107 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1108 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1109 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1110 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a6; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1111 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1112 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1113 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1114 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1116 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1118 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1119 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1120 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1121 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1122 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* position */
	T6 a12; /* modulus */
	T6 a18; /* capacity */
	T6 a20; /* slots_position */
	T0* a21; /* equality_tester */
	T0* a22; /* key_equality_tester */
	T0* a23; /* internal_keys */
	T0* a24; /* internal_cursor */
	T0* a26; /* key_storage */
	T0* a27; /* clashes */
	T0* a28; /* slots */
	T0* a30; /* special_item_routines */
	T0* a31; /* special_key_routines */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1123 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1124 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1125 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
struct S1126 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1128 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1129 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
struct S1130 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
struct S1131 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S1133 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1134 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1135 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1136 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* assembly */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1147 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1148 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1149 {
	int id;
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1150 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1154 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1155 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1156 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S1157 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1158 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1159 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1160 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1161 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1162 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1163 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1165 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1167 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1168 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
struct S1169 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1170 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1173 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1175 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type CONSOLE */
struct S1176 {
	int id;
	T14 a1; /* file_pointer */
	T0* a3; /* name */
	T6 a4; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1177 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1182 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1184 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1187 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

extern int geargc;
extern char** geargv;

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define gejmp_buf sigjmp_buf
#define gesetjmp(x) sigsetjmp((x),1)
#define gelongjmp(x,y) siglongjmp((x),(y))
#else
#define gejmp_buf jmp_buf
#define gesetjmp(x) setjmp((x))
#define gelongjmp(x,y) longjmp((x),(y))
#endif

/*
	Context of features containing a rescue clause.
*/
struct gerescue {
	gejmp_buf jb;
	struct gerescue *previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern struct gerescue *gerescue;

extern void geraise(int code);

#endif

extern T0* gems(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to UT_ERROR.default_message */
extern T0* T55x7952(T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T113x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T113x9527T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T113x9513(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T113x9509T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T113x9506(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T113x9526T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T113x9524T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T113x9525T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T113x9515(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T113x9514(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T113x9522(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T113x9543(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T113x9507(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T113x9505(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T113x9536(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T113x9529(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T113x9528(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T113x9516(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T113x9502(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T113x9546(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T113x9508(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T114x4992(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T114x4939T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T114x4983T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T114x4942T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T114x4881(T0* C);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T114x4944T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T114x4935(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T114x4934(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T114x4996(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T114x4978T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T114x5031T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T114x5053T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T114x5056T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T114x5054T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T114x5051T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T114x5049T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T114x5050T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T114x5052T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T114x5061T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T114x5059T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T114x5062T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T114x5060T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T114x5057T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T114x5041T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T114x5032T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T114x5036T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T114x5034T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T114x5030T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T114x5035T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T114x5046T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T114x4875(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T114x5026T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T114x4882(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T114x5058T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T114x4961T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T114x4885(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T114x4963T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.has_seed */
extern T1 T117x9655T6(T0* C, T6 a1);
/* Call to ET_QUERY.name */
extern T0* T117x9657(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T117x9572(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T117x9568(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T117x9571(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T117x23(T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T117x9660(T0* C);
/* Call to ET_QUERY.type */
extern T0* T117x9658(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T117x9659(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T117x9620T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T117x9609(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T117x9599(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T117x9739(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T117x9601(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T117x9600(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T117x9670(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T117x9603(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T117x9604(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T117x9605(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T117x9606(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T117x9596(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T117x9597(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T117x9642T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T119x9572(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T119x9568(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T119x9571(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T119x9657(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T119x23(T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T119x9620T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T119x9660(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T119x9609(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T119x9659(T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T119x9655T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T119x9622T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T119x9596(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T119x9597(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T119x9642T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T124x4962T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T124x4996(T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T124x4992(T0* C);
/* Call to ET_TYPE.is_named_type */
extern T1 T124x4950(T0* C);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T124x5026T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T124x4961T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_class */
extern T0* T124x4940T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T124x4983T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T124x4986T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T124x4987T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T124x4942T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T124x4949T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T124x4944T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T124x4985T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T124x4984T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.last_leaf */
extern T0* T124x5000(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T124x4951(T0* C);
/* Call to ET_TYPE.base_type */
extern T0* T124x4941T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T124x4974T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T124x4977T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T124x4975T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T124x4972T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T124x4970T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T124x4971T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T124x4973T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T124x4981T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T124x4979T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T124x4982T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T124x4980T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T124x4978T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T124x4953T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type */
extern T0* T124x4945T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T124x4952T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.direct_base_class */
extern T0* T124x4939T0(T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T124x4956T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T124x4954T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T124x4965T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T124x4967T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_type */
extern T1 T124x4963T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T124x4968T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T124x4966T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T124x4964T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T124x4969T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T125x5035T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T125x5030T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T125x5028(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T125x5032T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T125x5036T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T125x5066T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T125x5067T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T125x5034T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T125x5065T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T125x5064T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T125x5059T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T125x5062T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T125x5060T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T125x5061T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T125x5049T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T125x5052T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T125x5050T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T125x5051T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T125x5048T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T125x5046T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T125x5053T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T125x5056T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T125x5054T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T125x5031T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T125x5057T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T125x5063T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_FEATURE_NAME.name */
extern T0* T126x9061(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T126x5000(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T126x9059T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.position */
extern T0* T126x4996(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T126x9062(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T126x4999(T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T126x9063(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T126x23(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T126x9068(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T126x9066(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T126x9067(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T126x9099(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T126x9100(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T126x9089(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T126x9069(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T129x4875(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T129x4882(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T129x4939T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T129x4992(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T129x4934(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T129x4935(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T129x4854(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T129x4885(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T129x4950(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T129x4996(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T132x9546(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.other_types */
extern T0* T132x9548(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.first_type */
extern T0* T132x9547(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T132x9551(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T132x9544(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T132x9543(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T132x9550(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T132x9541T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_subset */
extern T1 T132x9545T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T134x5014(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T134x5015T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T134x5013(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T134x5012(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T137x5815(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T149x9657(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T149x9655T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T149x9569(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T149x9568(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T149x9672(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T149x9582(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T149x9597(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T149x9660(T0* C);
/* Call to ET_FEATURE.last_leaf */
extern T0* T149x5000(T0* C);
/* Call to ET_FEATURE.first_leaf */
extern T0* T149x4999(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T149x9670(T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T149x9661(T0* C);
/* Call to ET_FEATURE.position */
extern T0* T149x4996(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T149x9602(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T149x9659(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T149x9620T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T149x9684(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T149x9683(T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T149x9671(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T149x9584(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T149x9669(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T149x9577(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T149x9576(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T149x9601(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T149x9600(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T149x9658(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T149x9599(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T149x9596(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T149x9604(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T149x9605(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T149x9606(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T149x9581(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T149x9643T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T149x9644T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T149x9626T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T149x9654(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T149x9603(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T149x23(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T153x5000(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T153x9138(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T153x4996(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T153x9121(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T154x5000(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T154x4996(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T154x9106(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T173x9132T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T173x9133(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T173x9131(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T175x9190(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T175x9189(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T175x4996(T0* C);
/* Call to ET_CALL_NAME.name */
extern T0* T176x9061(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T176x4996(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T176x9063(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T176x9068(T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T176x9098(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T176x9096(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T176x9093(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T176x9091(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T176x9090(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T176x9088(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T176x9087(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T176x9086(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T176x9085(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T176x9084(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T176x9083(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T176x9082(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T176x9081(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T176x9080(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T176x9079(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T176x9078(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T176x9077(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T176x9076(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T176x9075(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T176x9073(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T176x9072(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T176x9071(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T176x9070(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T176x9094(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T176x9062(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T185x13783(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T185x13782(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T185x13781(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T185x13780(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T185x13779(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T185x13778(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T186x9133(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T186x9132T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T186x9131(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T189x4996(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T189x9138(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T189x13811(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T192x9138(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T193x4996(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T193x9138(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T193x9137(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T195x9137(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T195x9138(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T196x4996(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T196x9123(T0* C);
/* Call to ET_ENCLOSED_FEATURE.has_implementation_error */
extern T1 T207x9684(T0* C);
/* Call to ET_ENCLOSED_FEATURE.implementation_feature */
extern T0* T207x9681(T0* C);
/* Call to ET_ENCLOSED_FEATURE.has_assertions_error */
extern T1 T207x9686(T0* C);
/* Call to ET_ENCLOSED_FEATURE.implementation_class */
extern T0* T207x9680(T0* C);
/* Call to ET_ENCLOSED_FEATURE.is_inline_agent */
extern T1 T207x9675(T0* C);
/* Call to ET_ENCLOSED_FEATURE.type */
extern T0* T207x9676(T0* C);
/* Call to ET_ENCLOSED_FEATURE.locals */
extern T0* T207x9678(T0* C);
/* Call to ET_ENCLOSED_FEATURE.arguments */
extern T0* T207x9677(T0* C);
/* Call to ET_ENCLOSED_FEATURE.first_precursor */
extern T0* T207x9679(T0* C);
/* Call to ET_ENCLOSED_FEATURE.as_feature */
extern T0* T207x9687(T0* C);
/* Call to ET_ENCLOSED_FEATURE.is_feature */
extern T1 T207x9673(T0* C);
/* Call to ET_ENCLOSED_FEATURE.assertions_checked */
extern T1 T207x9685(T0* C);
/* Call to ET_ENCLOSING_FEATURE.implementation_class */
extern T0* T208x9670(T0* C);
/* Call to ET_ENCLOSING_FEATURE.clients */
extern T0* T208x9672(T0* C);
/* Call to ET_ENCLOSING_FEATURE.implementation_feature */
extern T0* T208x9671(T0* C);
/* Call to ET_POSITION.column */
extern T6 T214x9174(T0* C);
/* Call to ET_POSITION.line */
extern T6 T214x9173(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T214x9175(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T214x9179(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T221x9104(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T221x9103(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.first_leaf */
extern T0* T221x4999(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T221x4996(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T221x9105T0(T0* C, T0* a1);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T349x9189(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T349x9188(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T349x9187(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T349x9190(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T349x9138(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T402x9138(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T402x17867(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T410x18161(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T410x9138(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T410x18153(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T410x18163(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T410x18152(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T410x4996(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T410x18154(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T494x5023T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T501x9103(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T501x4996(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T512x5021T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T512x5019(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T512x5020(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T556x15658(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T556x15656(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T556x15657(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T567x4995(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T573x5026T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T573x5025(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T574x9107(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T576x4998(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T576x4996(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T589x13822(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T590x13823(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T601x17199T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T601x9080(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T601x9084(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T601x9090(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T601x9091(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T601x9097T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.name */
extern T0* T601x9061(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T601x4996(T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T601x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T601x9069(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T601x17185(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T601x17184(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T601x9094(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T601x9089(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T632x5008T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T632x5013(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T652x9124(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T661x4996(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T661x5027(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T661x5000(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T681x9150(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T681x9148(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T681x9149(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T683x9152(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T686x4996(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T715x4996(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T745x9141(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T750x4996(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T750x9128(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T752x9126(T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T753x4992(T0* C);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T753x4986T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T753x4987T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T753x4942T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T753x4944T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T753x4985T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T753x4983T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T753x4967T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T753x4968T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T753x4952T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T753x4963T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T753x4984T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T753x4979T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T753x4953T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T753x4978T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T753x4982T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T753x4980T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T753x4981T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T753x4970T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T753x4972T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T753x4971T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T753x4973T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T753x4956T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T753x4954T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T753x4966T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T753x4962T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T753x4961T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T753x4964T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T753x4969T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T753x4965T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T753x4974T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T753x4977T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T753x4975T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T753x4940T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T796x18769(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T796x4953T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T972x9666(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T972x9653(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T972x9662(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T972x9664(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T972x9651(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T972x9665(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T972x9652(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T972x9650(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T972x9663(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1007x20782(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1007x20781(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1007x20780(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1007x20783(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1044x14432(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1044x14434(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1044x9678(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1044x9659(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1044x9671(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1044x9603(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1060x17219(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1060x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1060x9074(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1072x9138(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1145x4996(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T50x6543(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T50x6536T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T50x6528T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T50x6530T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T50x6542T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T113x9530T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T113x9531T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T113x9510(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T113x9512T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T113x9552T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T113x9537T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T113x9523T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T114x4938(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T114x5004T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T117x9619(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T117x9616(T0* C);
/* Call to ET_QUERY.reset */
extern void T117x9566(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T117x9637T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T119x9619(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T119x9616(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T119x9566(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T119x9637T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T124x5004T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T124x4938(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T124x4993T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T126x9060(T0* C);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T126x9064T6(T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T132x9552T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T137x5871T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T137x5924T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T137x5866T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T137x5864T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T137x5908T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T137x5980T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T137x5852T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T137x5911T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T137x5985T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T137x5949T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inline_agent */
extern void T137x5930T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T137x5960T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T137x5984T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T137x5965T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T137x5983T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T137x5873T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T137x5837T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T137x5853T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T137x5879T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T137x5947T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T137x5931T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T137x5918T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T137x5835T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T137x5834T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T137x5845T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T137x5833T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T137x5941T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T137x5942T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T137x5839T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T137x5840T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T137x5952T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T137x5872T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T137x5848T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T137x5847T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T137x5898T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T137x5990T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T137x5994T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T137x5974T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T137x5914T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T137x5993T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T137x5972T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T137x5982T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T137x5997T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T137x5849T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T137x5998T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T137x5838T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T137x5973T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T137x5991T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T137x5913T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T137x5859T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T137x5953T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T137x5956T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T137x5954T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T137x5967T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T137x5891T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T137x5926T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T137x5893T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T137x5979T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T137x5877T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T137x5899T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T137x5964T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T137x5897T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T137x5957T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T137x5880T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T137x5955T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T137x5882T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T137x5881T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T137x5883T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T137x5836T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T137x5995T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T137x5863T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T137x5850T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T137x5896T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T137x5857T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T137x5876T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T137x5978T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T137x5851T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T137x5915T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T149x9615(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T149x9614(T0* C);
/* Call to ET_FEATURE.process */
extern void T149x5004T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset */
extern void T149x9566(T0* C);
/* Call to ET_FEATURE.set_assertions_error */
extern void T149x9618(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T149x9617(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T149x9634T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T149x9633T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T149x9625T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T149x9645T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T149x9630T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T149x9636T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T149x9635T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T149x9641(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T149x9640(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T149x9631T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T149x9632T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T149x9627T6(T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T153x5004T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T153x9125(T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T176x9064T6(T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T185x5004T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T189x9139T6(T0* C, T6 a1);
/* Call to ET_OPERAND.set_index */
extern void T192x9139T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T193x5004T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T193x9136(T0* C);
/* Call to ET_AGENT_TARGET.set_index */
extern void T193x9139T6(T0* C, T6 a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T195x5004T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T195x9136(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T221x9102(T0* C);
/* Call to KI_CHARACTER_OUTPUT_STREAM.put_character */
extern void T224x6536T2(T0* C, T2 a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T402x9139T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T410x9139T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T410x18167(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T410x18166T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T410x18164T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T410x18165T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T601x9060(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T601x17197(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T601x17196(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T638x5004T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T638x9192(T0* C);
/* Call to ET_CHOICE.reset */
extern void T681x9147(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T686x9147(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T715x9060(T0* C);
/* Call to ET_ASSERTION.process */
extern void T752x5004T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T752x9125(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type */
extern void T959x9555T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1072x9139T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c27(void);
/* GEC.report_cannot_read_error */
extern void T21f33(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T69f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T69f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T69f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T69f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T69f19(T0* C, T14 a1, T14 a2, T6 a3);
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

extern void file_mkdir(char* dirname);
extern void file_rename(char* old, char* new);
extern void file_link(char *from, char *to);
extern void file_unlink(char *name);
extern EIF_POINTER file_open(char *name, int how);
extern EIF_POINTER file_dopen(int fd, int how);
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);
extern void file_close(FILE *fp);
extern void file_flush(FILE *fp);
extern EIF_INTEGER file_fd(FILE *f);
extern EIF_CHARACTER file_gc(FILE *f);
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_CHARACTER file_lh(FILE *f);
extern EIF_INTEGER eif_file_size(FILE *fp);
extern void file_tnil(FILE *f);
extern EIF_INTEGER file_tell(FILE *f);
extern void file_touch(char *name);
extern void file_utime(char *name, time_t stamp, int how);
extern void file_stat(char *path, struct stat *buf);
extern void file_perm(char *name, char *who, char *what, int flag);
extern void file_chmod(char *path, int mode);
extern void file_chown(char *name, int uid);
extern void file_chgrp(char *name, int gid);
extern void file_tnwl(FILE *f);
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);
extern void file_pc(FILE *f, char c);
extern void file_go(FILE *f, EIF_INTEGER pos);
extern void file_recede(FILE *f, EIF_INTEGER pos);
extern void file_move(FILE *f, EIF_INTEGER pos);
extern EIF_BOOLEAN file_feof(FILE *fp);
extern EIF_BOOLEAN file_exists(char *name);
extern EIF_BOOLEAN file_path_exists(char *name);
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);
extern EIF_INTEGER file_gi(FILE *f);
extern EIF_REAL_32 file_gr(FILE *f);
extern EIF_REAL_64 file_gd(FILE *f);
extern void file_pi(FILE *f, EIF_INTEGER number);
extern void file_pr(FILE *f, EIF_REAL_32 number);
extern void file_pd(FILE *f, EIF_REAL_64 val);
extern EIF_INTEGER stat_size(void);
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);
extern EIF_INTEGER file_info(struct stat *buf, int op);
extern EIF_REFERENCE file_owner(int uid);
extern EIF_REFERENCE file_group(int gid);
extern EIF_INTEGER file_gib(FILE* f);
extern EIF_REAL_32 file_grb(FILE* f);
extern EIF_REAL_64 file_gdb(FILE* f);
extern EIF_POINTER file_binary_open(char* name, int how);
extern EIF_POINTER file_binary_dopen(int fd, int how);
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);
extern void file_pib(FILE* f, EIF_INTEGER number);
extern void file_prb(FILE* f, EIF_REAL_32 number);
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#endif
/* TYPED_POINTER [ANY].to_pointer */
extern T14 T67f2(T67* C);
/* KL_STRING_ROUTINES.as_string */
extern T0* T61f5(T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f18(T0* C);
/* STRING_8.append */
extern void T17f36(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.resize */
extern void T17f38(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f2(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f5(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f7(T0* C);
/* INTEGER_32.max */
extern T6 T6f13(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f6(T0* C);
/* STRING_8.make */
extern void T17f35(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c35(T6 a1);
/* STRING_8.make_area */
extern void T17f37(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c8(T6 a1);
/* KL_ANY_ROUTINES.same_types */
extern T1 T228f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge275os1656;
extern T0* ge275ov1656;
extern T0* T61f8(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T228c4(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge283os1584;
extern T0* ge283ov1584;
extern T0* T69f1(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T61c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T54c7(T0* a1);
/* ARRAY [STRING_8].put */
extern void T60f7(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make */
extern T0* T60c6(T6 a1, T6 a2);
/* ARRAY [STRING_8].make_area */
extern void T60f8(T0* C, T6 a1);
/* SPECIAL [STRING_8].make */
extern T0* T59c5(T6 a1);
/* INTEGER_32.infix "<=" */
extern T1 T6f6(T6* C, T6 a1);
/* GEC.process_universe */
extern void T21f32(T0* C, T0* a1);
/* GEC.report_cannot_write_error */
extern void T21f35(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T57c7(T0* a1);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T64f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T64f7(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T61f4(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f42(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T61f10(T0* C, T0* a1, T0* a2);
/* STRING_8.append_character */
extern void T17f40(T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f13(T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T61f1(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f16(T0* C);
/* STRING_8.copy */
extern void T17f52(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T64f8(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T64f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T215f2(T0* C);
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#endif
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge392os7893;
extern T0* ge392ov7893;
extern T0* T64f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T215c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T64f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T63f1(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T63f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T63f11(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T63f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T63f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T63f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T63f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T63f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T63f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge312os1580;
extern T0* ge312ov1580;
extern T0* T21f21(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge312os1583;
extern T0* ge312ov1583;
extern T0* T21f26(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T64c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge408os7858;
extern T1 ge408ov7858;
extern T1 T51f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T51f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge408os7862;
extern T0* ge408ov7862;
extern T0* T51f5(T0* C);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T51f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T215f1(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c47(T14 a1);
/* STRING_8.from_c */
extern void T17f53(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T322f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T322f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f58(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T256f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T971f2(T971* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T971f3(T971* C, T14 a1, T14 a2, T6 a3);
#include <string.h>
/* C_STRING.share_from_pointer */
extern void T322f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T322f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T256f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T256c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T322f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2023os1255;
extern T0* ge2023ov1255;
extern T0* T17f24(T0* C);
/* C_STRING.make_empty */
extern T0* T322c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T256c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T767f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T767f4(T0* C, T14 a1, T6 a2);
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#endif
/* EXCEPTIONS.default_create */
extern T0* T767c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T256f2(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
#include <stdlib.h>
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T215f3(T0* C, T14 a1);
/* STRING_8.to_c */
extern T0* T17f8(T0* C);
/* GEC.windows_file_system */
extern unsigned char ge312os1581;
extern T0* ge312ov1581;
extern T0* T21f25(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T63c20(void);
/* GEC.no_c_compile */
extern T1 T21f20(T0* C);
/* AP_FLAG.was_found */
extern T1 T31f1(T0* C);
/* KL_SHELL_COMMAND.execute */
extern void T46f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge333os1579;
extern T0* ge333ov1579;
extern T0* T46f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T51c7(void);
/* KL_SHELL_COMMAND.system */
extern void T46f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T46f9(T0* C, T14 a1);
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#endif
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2142os6834;
extern T0* ge2142ov6834;
extern T0* T46f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T46f10(T0* C, T0* a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T46f11(T0* C, T14 a1);
/* STRING_8.is_empty */
extern T1 T17f17(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T46c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T46f2(T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T52f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T47f34(T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T61f22(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T61f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T61f2(T0* C, T0* a1, T6 a2);
/* STRING_8.wipe_out */
extern void T17f48(T0* C);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T52f2(T0* C);
/* GEC.template_expander */
extern unsigned char ge1016os1585;
extern T0* ge1016ov1585;
extern T0* T21f19(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T52c3(void);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge408os7857;
extern T1 ge408ov7857;
extern T1 T51f1(T0* C);
/* GEC.operating_system */
extern T0* T21f18(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T47f2(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T47f39(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T47f11(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T47f17(T0* C, T0* a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T163f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T47f20(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T47f13(T0* C, T6 a1);
/* GEC.is_finalize */
extern T1 T21f17(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T47f1(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T47f4(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T47f37(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T47f45(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T47f44(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T47f43(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T47f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T47f41(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make */
extern T0* T47c36(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T47f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].make */
extern T0* T202c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].new_cursor */
extern T0* T202f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8].make */
extern T0* T305c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T47f30(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T204c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T47f47(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T47f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T84f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER_32].make_area */
extern T0* T243c2(T6 a1);
/* SPECIAL [INTEGER_32].make */
extern T0* T83c7(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge281os4031;
extern T0* ge281ov4031;
extern T0* T47f31(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T84c4(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T47f27(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T47f54(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T47f53(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T205f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING_8].make_area */
extern T0* T306c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T205c3(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T47f52(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T163c2(void);
/* GEC.c_config */
extern T0* T21f16(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T47f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T47f46(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T47f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].resize */
extern T0* T84f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T83f4(T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T83f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].move_data */
extern void T83f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T83f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T83f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T47f50(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].resize */
extern T0* T205f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].resized_area */
extern T0* T59f3(T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T59f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].move_data */
extern void T59f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T59f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T59f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T47f49(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T47f48(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T47f16(T0* C, T6 a1);
/* STRING_8.index_of */
extern T6 T17f22(T0* C, T2 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T64f3(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.same_string */
extern T1 T61f13(T0* C, T0* a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f25(T0* C, T6 a1);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T61f14(T0* C, T0* a1, T0* a2);
/* STRING_8.same_string */
extern T1 T17f9(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T63f3(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T61f21(T0* C, T0* a1);
/* STRING_8.keep_head */
extern void T17f50(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T61f20(T0* C, T0* a1);
/* STRING_8.remove_head */
extern void T17f49(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f54(T0* C, T6 a1);
/* GEC.string_ */
extern T0* T21f24(T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f46(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T65f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T65c3(T2 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f45(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f24(T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f23(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f29(T0* C, T14 a1);
/* STRING_8.clear_all */
extern void T17f39(T0* C);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T58f2(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T58f4(T0* C);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T64f2(T0* C, T0* a1, T0* a2);
/* ARRAY [STRING_8].item */
extern T0* T60f5(T0* C, T6 a1);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T63f2(T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T58f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge390os7964;
extern T0* ge390ov7964;
extern T0* T58f3(T0* C);
/* GEC.execution_environment */
extern unsigned char ge332os1577;
extern T0* ge332ov1577;
extern T0* T21f23(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T58c5(void);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T45f22(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T45f31(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T45f34(T0* C, T14 a1);
/* ET_C_GENERATOR.generate */
extern void T44f282(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge932os5536;
extern T0* ge932ov5536;
extern T0* T44f10(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T120c58(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T756f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T88f57(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T179f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T138f10(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T756f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T179f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T174f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T756f3(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T179f3(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T174f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T138c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T263f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T769c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T262c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge920os13197;
extern T0* ge920ov13197;
extern T0* T138f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T263c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge888os9824;
extern T0* ge888ov9824;
extern T0* T120f11(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T138c12(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T111f2(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T49f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T226c11(T0* a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T41f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T43f163(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T41f55(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T112f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T112f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T254f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T253f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T253f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T253f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T253f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T253f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T253c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T112f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T112f8(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T169c35(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T169f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern unsigned char ge915os9540;
extern T0* ge915ov9540;
extern T0* T169f19(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T165c11(void);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T170c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T170f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T170f18(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T164c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T164f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T164f18(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge921os4673;
extern T0* ge921ov4673;
extern T0* T41f44(T0* C);
/* ET_DYNAMIC_TYPE.make */
extern T0* T113c32(T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T113f12(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T168c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T168f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T168f18(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T337f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T337f3(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T130f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T130f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T112f2(T0* C, T6 a1);
/* ET_DO_PROCEDURE.make */
extern T0* T220c71(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge764os11054;
extern T0* ge764ov11054;
extern T0* T127f113(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T377f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge764os10508;
extern T0* ge764ov10508;
extern T0* T127f114(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T377c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T548f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T890c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T547c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge779os5143;
extern T0* ge779ov5143;
extern T0* T377f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T548c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge764os10717;
extern T0* ge764ov10717;
extern T0* T127f77(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T136c39(void);
/* ET_KEYWORD.make_token */
extern void T136f75(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T136f76(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge759os2684;
extern T0* ge759ov2684;
extern T0* T136f2(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T127c782(void);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge764os10731;
extern T0* ge764ov10731;
extern T0* T127f76(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T136c38(void);
/* ET_DO_PROCEDURE.tokens */
extern T0* T220f10(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T88c94(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T88f102(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T88c102(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T88f103(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T88f3(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T108f2(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern unsigned char ge280os4027;
extern T0* ge280ov4027;
extern T0* T88f25(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T108c5(void);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T351f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f12(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge43os93;
extern T0* ge43ov93;
extern T0* T2f15(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T962c2(T6 a1);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge278os6250;
extern T0* ge278ov6250;
extern T0* T88f24(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T351c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T159f42(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T159f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T159f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T159f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T159f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T159f48(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T159f47(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T293f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T293f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T158f32(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T158f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T158f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T158f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T158f40(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T158f38(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T158f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T289f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T289f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T161f42(T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T161f56(T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T161f55(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T161f54(T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T161f53(T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T161f49(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T161f52(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T302f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T302f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].forth */
extern void T161f41(T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T161f51(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T161f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T161f61(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T161f24(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T44f299(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T44f337(T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T140f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T140f9p1(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f31(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge402os1677;
extern T0* ge402ov1677;
extern T0* T22f35(T0* C);
/* KL_CHARACTER_BUFFER.make */
extern T0* T323c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge408os7859;
extern T1 ge408ov7859;
extern T1 T51f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1046c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T323f7(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f33(T0* C);
/* STRING_8.put */
extern void T17f51(T0* C, T2 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f30(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f32(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* TYPED_POINTER [SPECIAL [CHARACTER_8]].to_pointer */
extern T14 T754f2(T754* C);
/* STRING_8.set_count */
extern void T17f46(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T45f28(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T45f28p1(T0* C, T0* a1);
/* ET_C_GENERATOR.execution_environment */
extern T0* T44f91(T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T44f90(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T44f236(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T44f235(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T44f234(T0* C);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T161f2(T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T161f6(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T161f10(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T161f1(T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T161f5(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].start */
extern void T161f40(T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T161f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T161f35(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T161f34(T0* C);
/* ET_C_GENERATOR.print_main_function */
extern void T44f298(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T44f322(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T44f336(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T145f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T145f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T145f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T268f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T268f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T44f429(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T44f451(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T44f340(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T44f308(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T44f449(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T44f305(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T44f321(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T44f301(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T44f341(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T40f160(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T40f171(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge315os8279;
extern T0* ge315ov8279;
extern T0* T68f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T69c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T69f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T69f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T69f3(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T69f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge313os1578;
extern T0* ge313ov1578;
extern T0* T40f2(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T68c4(void);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T40f175(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T40f177(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T40f177p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T40f19(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T345c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T27f160(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T27f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T27f2(T0* C);
/* ET_ERROR_HANDLER.report_error */
extern void T27f201(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T27f202(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T27f202p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T27f23(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T44f77(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T167f13(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T138f2(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T120f8(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T167f5(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge764os10711;
extern T0* ge764ov10711;
extern T0* T127f16(T0* C);
/* ET_CURRENT.make */
extern T0* T180c26(void);
/* ET_CURRENT.make_token */
extern void T180f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T180f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T180f2(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T167f27(T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T120f3(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T120f9(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T145f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T44f448(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T44f215(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T142f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T142f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T90f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T89f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T89f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T89f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T89f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T89f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T89c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T142f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T142f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T88f101(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f11(T6* C);
/* STRING_8.append_integer */
extern void T17f44(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T142f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T112f13(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T44f237(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T44f447(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T44f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_name */
extern void T44f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.tokens */
extern T0* T44f44(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T44f455(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T44f456(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T44f233(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T44f454(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T88f18(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T44f453(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T44f327(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T144f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T144f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T267f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T266f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T266f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T266f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T266f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T266f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T266c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T144f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T144f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T44f443(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T144f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T144f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T144f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T145f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T145f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T44f442(T0* C, T0* a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T44f316(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge932os5532;
extern T0* ge932ov5532;
extern T0* T44f73(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T44f307(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_object_type_name */
extern void T44f300(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T44f314(T0* C);
/* ET_C_GENERATOR.indent */
extern void T44f313(T0* C);
/* ET_C_GENERATOR.print_getypes_array */
extern void T44f297(T0* C);
/* ET_C_GENERATOR.print_geconst_function */
extern void T44f296(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T159f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T159f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T159f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T159f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T159f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T159f3(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T159f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T159f10(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T44f334(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T44f335(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T158f1(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T158f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T158f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T158f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T158f16(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T158f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T158f15(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T158f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T159f2(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T159f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T159f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T159f1(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T159f5(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T159f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T159f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T159f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T159f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T44f295(T0* C);
/* ET_C_GENERATOR.print_gevoid_function */
extern void T44f294(T0* C);
/* ET_C_GENERATOR.print_current_name */
extern void T44f325(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T157f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T157f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T157f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T157f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T157f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T157f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T157f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T286f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T286f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T157f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T157f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T157f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T157f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T157f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gemt_function */
extern void T44f293(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T44f333(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T44f312(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T44f317(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T44f306(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge764os10747;
extern T0* ge764ov10747;
extern T0* T127f15(T0* C);
/* ET_RESULT.make */
extern T0* T171c24(void);
/* ET_RESULT.make_token */
extern void T171f26(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T171f27(T0* C);
/* ET_RESULT.tokens */
extern T0* T171f2(T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T44f315(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T157f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T157f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T157f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T157f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T157f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T157f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T157f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T157f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T157f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T156f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T156f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T156f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T156f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T156f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T156f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T156f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T285f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T285f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T156f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T156f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T156f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T156f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T156f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gema_function */
extern void T44f292(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T165f2(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T44f319(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T44f311(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T44f318(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T44f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T165f3(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T156f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T156f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T156f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T156f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T156f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T156f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T156f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T156f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T156f23(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T44f291(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].wipe_out */
extern void T150f12(T0* C);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].clear_items */
extern void T150f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].move_all_cursors_after */
extern void T150f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CALL_AGENT].set_next_cursor */
extern void T281f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CALL_AGENT].set_position */
extern void T281f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_declaration */
extern void T44f332(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T44f446(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T44f445(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_routine_name */
extern void T44f427(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T112f12(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T112f16(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T112f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T255f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T255f5(T0* C, T6 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T61f23(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T44f444(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.item */
extern T0* T143f3(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T44f324(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_procedure_call */
extern void T44f331(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T44f437(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T44f229(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T44f436(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T44f435(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T44f434(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T44f433(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T44f228(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T44f432(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T44f227(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T44f431(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T44f430(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T167f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T120f18(T0* C);
/* ET_C_GENERATOR.print_target_expression */
extern void T44f428(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_operand */
extern void T44f452(T0* C, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T641f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T152f11(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T152f10(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T152f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T145f2(T0* C);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T155f25(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T151f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T151f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T284f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T282f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T282f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T282f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T282f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T282f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T282c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T284f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T774c2(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge629os5143;
extern T0* ge629ov5143;
extern T0* T151f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T284c3(void);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T151f1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T151f13(T0* C);
/* ET_CALL_EXPRESSION.set_name */
extern void T155f24(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_target */
extern void T155f23(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_operand_name */
extern void T44f441(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T44f440(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_type_name */
extern void T44f439(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_closed_operand_name */
extern void T44f438(T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T184f8(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T167f15(T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T120f10(T0* C);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T61f6(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T61f11(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge411os9383;
extern T6 ge411ov9383;
extern T6 T107f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T107f2(T0* C);
/* KL_STRING_ROUTINES.platform */
extern unsigned char ge334os1657;
extern T0* ge334ov1657;
extern T0* T61f12(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T107c3(void);
/* STRING_8.substring_index */
extern T6 T17f27(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T963f1(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T963f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_8.code */
extern T10 T17f29(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f26(T6* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T963f6(T0* C, T0* a1, T6 a2, T0* a3);
/* SPECIAL [INTEGER_32].fill_with */
extern void T83f9(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.string_searcher */
extern unsigned char ge2023os1254;
extern T0* ge2023ov1254;
extern T0* T17f31(T0* C);
/* STRING_SEARCHER.make */
extern T0* T963c5(void);
/* ET_C_GENERATOR.string_ */
extern T0* T44f96(T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T88f98(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T88f95(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].item */
extern T0* T150f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T167f2(T0* C);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T120f40(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T160f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T160f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T301f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T301f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T160f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T160f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T160f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T160f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T300f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T299f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T299f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T299f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T299f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T299f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T299c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T160f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T160f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T167f61(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T120f61(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_calls */
extern void T44f290(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T147f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T147f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T147f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T147f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T147f57(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T147f48(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T147f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T271f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_position */
extern void T271f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T146f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].clear_items */
extern void T146f21(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T146f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T269f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_position */
extern void T269f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T44f330(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_query_call */
extern void T44f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T44f426(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T44f425(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T44f424(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T44f423(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T44f422(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T44f421(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T44f420(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T44f419(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T44f418(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T44f417(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T44f416(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T44f415(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T44f414(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T44f413(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T44f412(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T44f411(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T44f410(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T44f409(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T44f408(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T44f407(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T44f406(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T44f405(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T44f404(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T44f403(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T44f402(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T44f401(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T44f400(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T44f399(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T44f398(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T44f397(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T44f396(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T44f395(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T44f394(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T44f393(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T44f392(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T44f391(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T44f390(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T44f389(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T44f388(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T44f387(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T44f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T44f385(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T44f384(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T44f383(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T44f382(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T44f381(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T44f380(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T44f379(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T44f378(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T44f377(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T44f376(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T44f375(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T44f374(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T44f373(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T44f372(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T44f371(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T44f370(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T44f369(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T44f368(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T44f367(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T44f366(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T44f365(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T44f364(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T44f363(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T44f362(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T44f361(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T44f360(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T44f359(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T44f358(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T44f357(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T44f356(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T44f355(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T44f354(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T44f353(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T44f352(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T44f351(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T44f350(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T44f349(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T44f348(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T44f347(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T44f346(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T44f345(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T44f450(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T200f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge247os6251;
extern T0* ge247ov6251;
extern T0* T44f232(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T200c1(void);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T44f344(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T44f343(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T44f342(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T159f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T159f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T159f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T159f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T159f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T159f20(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T159f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T159f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T159f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T159f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T291f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T292f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T292f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T292f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T292f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T292f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T292c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T159f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T298f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T294f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T294f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T294f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T294f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T294f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T294c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T159f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T159f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T159f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T159f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T159f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T147f4(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T147f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T147f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T147f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T147f16(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f19(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f22(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T147f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T147f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T146f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T146f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T181f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T181f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T181f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T219f13(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].auto_resize */
extern void T219f15(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T219f7(T0* C);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T83f3(T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_area */
extern void T219f14(T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T219f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f20(T6* C, T6 a1);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T219f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T146f23(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T146f22(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T222f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T219f4(T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T219f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make */
extern T0* T219c11(T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T146f11(T0* C);
/* ET_C_GENERATOR.polymorphic_type_id_sorter */
extern unsigned char ge932os5272;
extern T0* ge932ov5272;
extern T0* T44f83(T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T181c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T222c2(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].forth */
extern void T147f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_forth */
extern void T147f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].add_traversing_cursor */
extern void T147f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T147f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].go_before */
extern void T148f18(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_go_before */
extern void T148f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_traversing_cursor */
extern void T148f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T276f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_position */
extern void T276f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].off */
extern T1 T276f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_off */
extern T1 T148f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_before */
extern T1 T148f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_after */
extern T1 T148f4(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_dynamic_type_sets */
extern void T44f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_set */
extern void T187f13(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_standalone_type */
extern void T187f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T143f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T254f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T766c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge917os13197;
extern T0* ge917ov13197;
extern T0* T143f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T254c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T143f6(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has */
extern T1 T143f1(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T143f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T143c10(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T143f13(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T187f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T143f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item_for_iteration */
extern T0* T148f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_item */
extern T0* T148f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item */
extern T0* T148f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].finish */
extern void T148f21(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_finish */
extern void T148f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].add_traversing_cursor */
extern void T148f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T148f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T148f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T278f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T277f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T277f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T277f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T277f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T277f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T277c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T148f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T148f12(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T187c11(T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].after */
extern T1 T148f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].forth */
extern void T148f19(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_forth */
extern void T148f23(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T138f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T138f3(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T138f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T263f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T262f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T262f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T262f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T262f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T262f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T138f6(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T138f11(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_for_iteration */
extern T0* T147f3(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_item */
extern T0* T147f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].after */
extern T1 T147f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_after */
extern T1 T147f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].start */
extern void T147f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_start */
extern void T147f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_off */
extern T1 T147f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].is_empty */
extern T1 T147f34(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T44f326(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T145f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T145f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T145f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T44f323(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.seeded_procedure */
extern T0* T43f21(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T118f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T183f10(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T44f80(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T147f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T147f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T147f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T147f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T147f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T147f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T147f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T147f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T147f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T147f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T147f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T147f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T147f49(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T146f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T146f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T146f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T146f8(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T147f1(T0* C, T6 a1);
/* ET_C_GENERATOR.print_polymorphic_query_calls */
extern void T44f289(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T43f6(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T116f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T172f11(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gems_function */
extern void T44f288(T0* C);
/* ET_C_GENERATOR.print_types */
extern void T44f287(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T44f304(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_geboxed_function */
extern void T44f303(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T44f339(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T44f338(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T44f302(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge764os10516;
extern T0* ge764ov10516;
extern T0* T127f14(T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge764os10535;
extern T0* ge764ov10535;
extern T0* T127f13(T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge764os10525;
extern T0* ge764ov10525;
extern T0* T127f12(T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge764os10519;
extern T0* ge764ov10519;
extern T0* T127f11(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge764os10548;
extern T0* ge764ov10548;
extern T0* T127f10(T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T88f16(T0* C);
/* STRING_8.as_upper */
extern T0* T17f26(T0* C);
/* STRING_8.to_upper */
extern void T17f56(T0* C);
/* CHARACTER_8.infix "<=" */
extern T1 T2f8(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f4(T2* C, T2 a1);
/* CHARACTER_8.infix ">=" */
extern T1 T2f7(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge764os10513;
extern T0* ge764ov10513;
extern T0* T127f9(T0* C);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T44f286(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force */
extern void T161f43(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T161f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T161f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T161f25(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T161f21(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T161f58(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T161f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T161f31(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T161f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T161f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T161f28(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T161f63(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T161f14(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T161f20(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T161f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T161f44(T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T162f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T161f27(T0* C);
/* DS_HASH_SET [STRING_8].has */
extern T1 T161f3(T0* C, T0* a1);
/* ET_C_GENERATOR.generate_ids */
extern void T44f285(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T166f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T167f65(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T120f64(T0* C, T6 a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T44f284(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T44c281(T0* a1);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T161f39(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge284os6248;
extern T0* ge284ov6248;
extern T0* T44f38(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T162c2(void);
/* DS_HASH_SET [STRING_8].make */
extern T0* T161c38(T6 a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T161f17(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T302c4(T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T161f48(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T161f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T161f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T161f45(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T160c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T160f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T301c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T300f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T779c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T300c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T159c41(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T159f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T296c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T296f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T777c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T159f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T293c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T159f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T159f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T159f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T159f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T291f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T776c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T291c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T159f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T298f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T778c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T298c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T158c31(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T158f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T289c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T158f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T158f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T158f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T158f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T158f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T158f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T157c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T157f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T286c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T157f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T157f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T157f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T157f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T157f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T157f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T288f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T775c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T287c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T288c3(void);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T156c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T156f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T285c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T156f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T156f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T156f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T156f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T156f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T156f40(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.make */
extern T0* T155c22(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T155f28(T0* C, T0* a1, T0* a2);
/* ET_CALL_INSTRUCTION.make */
extern T0* T152c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T152f12(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T151c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T151f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge764os10694;
extern T0* ge764ov10694;
extern T0* T127f55(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T257c60(void);
/* ET_SYMBOL.make_leaf */
extern void T257f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T257f2(T0* C);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge764os10689;
extern T0* ge764ov10689;
extern T0* T127f54(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T257c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T151f4(T0* C);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].make */
extern T0* T150c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].new_cursor */
extern T0* T150f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CALL_AGENT].make */
extern T0* T281c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T280f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T773c2(T6 a1);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T279c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T280c3(void);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T120f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T148c17(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T148f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T276c5(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T278f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T772c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T278c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T147c41(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T147f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T274c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T274f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T771c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T147f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T271c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T147f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T147f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T147f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T147f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T147f68(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T146c15(T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T146f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T269c4(T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T145c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T145f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T268c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T267f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T770c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T267c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T144c8(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T112c11(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T112f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T255c4(T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T142c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T142f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T265c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T90f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T245c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T90c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T141c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge314os2438;
extern T0* ge314ov2438;
extern T0* T44f6(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T140c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T139c11(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge877os13272;
extern T0* ge877ov13272;
extern T0* T139f3(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T225c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge764os10713;
extern T0* ge764ov10713;
extern T0* T127f105(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T136c67(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T225f10(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T225f67p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T139f5(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T139f11p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T44f283(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T45f1(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T45f2(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T45f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T45f12(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T45f19(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T45f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T45f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T45f30p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T45f18(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T45c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T45f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T45f9(T0* C);
/* STRING_8.infix "+" */
extern T0* T17f3(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f4(T0* C, T6 a1);
/* ET_CLASS.lower_name */
extern T0* T43f34(T0* C);
/* ET_SYSTEM.compile */
extern void T41f48(T0* C);
/* ET_SYSTEM.compile_system */
extern void T41f51(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T41f54(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T111f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T49f195(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T49f198(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T49f203(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T49f204(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T49f205(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T40f161(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T40f172(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T70f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T70f13(T0* C);
/* KL_STDOUT_FILE.put_string */
extern void T70f12(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T70f16(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T70f17(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T70f3(T0* C);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T27f161(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T27f196(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T172f7(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T183f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T49f52(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge916os7118;
extern T0* ge916ov7118;
extern T0* T49f51(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T49f50(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T49f202(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T172f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T183f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_feature_name */
extern unsigned char ge916os7316;
extern T0* ge916ov7316;
extern T0* T49f49(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T88f46(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T61f15(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f22(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f23(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T965f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge359os20546;
extern T0* ge359ov20546;
extern T0* T965f2(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge359os20545;
extern T0* ge359ov20545;
extern T0* T965f5(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge359os20534;
extern T0* ge359ov20534;
extern T0* T965f12(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T108f4(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T965f21(T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make */
extern T0* T1078c2(T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge359os20544;
extern T0* ge359ov20544;
extern T0* T965f4(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge359os20543;
extern T0* ge359ov20543;
extern T0* T965f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge359os20542;
extern T0* ge359ov20542;
extern T0* T965f3(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge359os20541;
extern T0* ge359ov20541;
extern T0* T965f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge359os20540;
extern T0* ge359ov20540;
extern T0* T965f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge359os20539;
extern T0* ge359ov20539;
extern T0* T965f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge359os20538;
extern T0* ge359ov20538;
extern T0* T965f16(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge359os20537;
extern T0* ge359ov20537;
extern T0* T965f15(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge359os20536;
extern T0* ge359ov20536;
extern T0* T965f14(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge359os20535;
extern T0* ge359ov20535;
extern T0* T965f13(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge359os20533;
extern T0* ge359ov20533;
extern T0* T965f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge359os20532;
extern T0* ge359ov20532;
extern T0* T965f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge359os20531;
extern T0* ge359ov20531;
extern T0* T965f9(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge359os20530;
extern T0* ge359ov20530;
extern T0* T965f8(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge359os20529;
extern T0* ge359ov20529;
extern T0* T965f7(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge359os20528;
extern T0* ge359ov20528;
extern T0* T965f6(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make */
extern T0* T1079c2(T6 a1);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge341os8120;
extern T0* ge341ov8120;
extern T0* T61f16(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T965c22(void);
/* ET_IDENTIFIER.string_ */
extern T0* T88f44(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_class_name */
extern unsigned char ge916os7315;
extern T0* ge916ov7315;
extern T0* T49f48(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T49f197(T0* C, T0* a1, T0* a2);
/* DS_CELL [INTEGER_32].put */
extern void T206f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T167f68(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T120f66(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T49f201(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T49f200(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T120f42(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T167f67(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T120f65(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T167f62(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T138f9(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_mode */
extern void T111f9(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_mode */
extern void T49f192(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T111f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T49f194(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T111f10(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T49f193(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T167f63(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T120f60(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T167f64(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T43f33(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T458f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T552f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T552f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T378f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T378f9(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T88f58(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T377f5(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T377f4(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T552f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T40f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T40f173(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge315os8278;
extern T0* ge315ov8278;
extern T0* T68f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T70c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T70f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T70f15(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T70f2(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T70f14(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T40f176(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T346c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T40f13(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T27f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T27f197(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T27f200(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T27f13(T0* C);
/* ET_CLASS.named_query */
extern T0* T43f29(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T116f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T43f30(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T118f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T40f165(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T346c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T40f12(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T27f165(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T27f12(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T39f7(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T128f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T128f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T128f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T128f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T128f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T128f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T128f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T128f899(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T128f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T128f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T128f896(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T128c895(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T128f910(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T128f914(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge938os11836;
extern T0* ge938ov11836;
extern T0* T128f68(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T128f872(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T84f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T128f1743(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T128f1748(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T798f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T219f16(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge276os2679;
extern T0* ge276ov2679;
extern T0* T128f889(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T798c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T128f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge938os11833;
extern T0* ge938ov11833;
extern T0* T128f66(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T128f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T128f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge938os11832;
extern T0* ge938ov11832;
extern T0* T128f64(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge938os11831;
extern T0* ge938ov11831;
extern T0* T128f62(T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge938os11830;
extern T0* ge938ov11830;
extern T0* T128f60(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge938os11829;
extern T0* ge938ov11829;
extern T0* T128f58(T0* C);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge938os11828;
extern T0* ge938ov11828;
extern T0* T128f56(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge938os11827;
extern T0* ge938ov11827;
extern T0* T128f54(T0* C);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge938os11826;
extern T0* ge938ov11826;
extern T0* T128f52(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge938os11825;
extern T0* ge938ov11825;
extern T0* T128f50(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T128f913(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T128f41(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T128f909(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T128f39(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T128f908(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T128f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T128f919(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T128f923(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T323f4(T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T128f918(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T128f922(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge942os12689;
extern T0* ge942ov12689;
extern T0* T128f147(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T128f875(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge942os12688;
extern T0* ge942ov12688;
extern T0* T128f145(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge942os12687;
extern T0* ge942ov12687;
extern T0* T128f143(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge942os12686;
extern T0* ge942ov12686;
extern T0* T128f141(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge942os12685;
extern T0* ge942ov12685;
extern T0* T128f139(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge942os12684;
extern T0* ge942ov12684;
extern T0* T128f137(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge942os12683;
extern T0* ge942ov12683;
extern T0* T128f135(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge942os12682;
extern T0* ge942ov12682;
extern T0* T128f133(T0* C);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge165os4173;
extern T0* ge165ov4173;
extern T0* T128f34(T0* C);
/* YY_BUFFER.make */
extern T0* T81c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T81f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.put */
extern void T323f11(T0* C, T2 a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T323f14(T0* C, T0* a1, T6 a2);
/* STRING_8.subcopy */
extern void T17f59(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T81f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T368c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T368f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T839c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T368f47(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T368f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T368f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T368f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T368f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T368f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T368f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T357f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T833c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T355c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T357c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T367c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T367f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T838c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T506f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T877c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T506c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T209c17(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T209f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T309c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T307f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T781c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T308c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T307c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T210c17(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T210f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T312c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T310f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T782c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T311c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T310c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T366c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T366f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T837c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T836f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1033c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T835c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T836c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T365c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T390f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T847c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T389c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T390c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T364c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T382f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T844c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T381c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T382c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T363c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T613f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T914c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T580c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T613c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T362c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T606f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T911c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T586c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T606c3(void);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T361c8(T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T40f164(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T346c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T40f11(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T27f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T27f11(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T43f23(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T40f163(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T346c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T40f10(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T27f163(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T27f10(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge764os10602;
extern T0* ge764ov10602;
extern T0* T127f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T41f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T40f162(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T346c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T40f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T27f162(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T27f9(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T41f53(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T127f8(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge764os10642;
extern T0* ge764ov10642;
extern T0* T127f6(T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge764os10669;
extern T0* ge764ov10669;
extern T0* T127f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge764os10637;
extern T0* ge764ov10637;
extern T0* T127f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge764os10600;
extern T0* ge764ov10600;
extern T0* T127f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T40f170(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T40f174(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T347c866(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T347f869(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T347f15(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T43f40(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T335f4(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T40f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T27f170(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T27f198(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T27f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T40f169(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T347c865(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T40f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T27f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T27f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T40f168(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T347c864(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T40f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T27f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T27f15(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge764os10575;
extern T0* ge764ov10575;
extern T0* T127f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T131c91(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T130f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T130c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T130f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T261f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T768c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T260c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge817os5143;
extern T0* ge817ov5143;
extern T0* T130f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T261c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge764os10693;
extern T0* ge764ov10693;
extern T0* T127f53(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T257c58(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge764os10688;
extern T0* ge764ov10688;
extern T0* T127f52(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T258c81(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T258f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T258f2(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T130f2(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T40f167(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T346c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T40f14(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T27f167(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T27f14(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T39f159(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T333f1(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T333f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T333f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T108f6(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T333f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T333f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T333f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T333f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T333f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T333c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T333f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T333f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T122f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T122f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T122f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T122f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T122f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T122f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T122f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T122f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T122f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T122f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T122f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T122f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge369os10192;
extern T6 ge369ov10192;
extern T6 T122f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T122f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge369os10191;
extern T6 ge369ov10191;
extern T6 T122f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T122f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge369os10190;
extern T6 ge369ov10190;
extern T6 T122f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T108f3(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T122f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T122f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T122f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T333f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T122f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T122f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1090os10386;
extern T0* ge1090ov10386;
extern T0* T333f2(T0* C);
/* DT_DATE_TIME.make */
extern T0* T122c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T122f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T122f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T122f1(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T122f2(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T122f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T122f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T122f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T122f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T122f3(T0* C);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T39f162(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T787f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T106f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T787f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T40f409(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T40f444(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1136c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T106f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T106f8(T0* C);
/* STRING_8.as_lower */
extern T0* T17f28(T0* C);
/* STRING_8.to_lower */
extern void T17f60(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T106f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T95f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T95f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T95f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T40f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T27f409(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T27f444(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T27f91(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T787f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T95f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T787f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T94f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T247f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T94f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T39f65(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T787c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T334f130(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T334f139(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T334f143(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T92f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T91f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T374c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T71c34(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T842f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T841f12(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T841f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T842f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T841f14(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T842f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T842f1(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T842f8(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T841f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T841f8(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T841f2(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T842c7(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T71f20(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T71c20(T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T71f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T229c5(T0* a1);
/* ST_SPLITTER.split */
extern T0* T373f1(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T373f2(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T841f10(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T1034f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T1034c3(T0* a1);
/* DS_LINKED_LIST [STRING_8].is_empty */
extern T1 T841f4(T0* C);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T843f1(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T843f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T843f12(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T843f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T843f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T843f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T843f17(T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T843f14(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T373f5(T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T841c9(void);
/* ST_SPLITTER.set_separators */
extern void T373f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T843f30(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T843f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T843f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T843f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T843f36(T0* C);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T843c29(T6 a1);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T843f10(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T1035c3(T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T843f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T843f23(T0* C);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T843f6(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T843f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T843f33(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T843f32(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T373c9(void);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T334f142(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T92f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T91f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T40f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T40f202(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T785c17(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T92f26(T0* C, T2 a1);
/* ET_LACE_CLUSTER.string_ */
extern T0* T92f29(T0* C);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T92f32(T0* C);
/* ET_LACE_CLUSTER.name */
extern T0* T92f13(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T40f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T27f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T27f199(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T27f19(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T371f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T371f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T371f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T371f33(T0* C, T14 a1);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T92f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T92f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T92f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T91f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T246f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T246f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T101f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T99f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T99f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T99f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T99f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T99f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T99c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T246f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T246f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T92f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T91f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T91c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T246c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T246f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T764c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T101f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T249c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T101c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T92f34(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T92f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T92f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T92f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T92f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T92f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T92c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T92f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T91f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T88f99(T0* C, T6 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T64f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T371f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T371f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T371f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge392os7891;
extern T0* ge392ov7891;
extern T0* T64f14(T0* C);
/* KL_DIRECTORY.make */
extern void T371f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T371c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T371f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T371f8(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T63f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T63f18(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T92f23(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T93f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T93f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T93f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T92f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T92f23p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T40f178(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T785c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T40f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T27f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T27f18(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T334f141(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T40f196(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T786c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T786f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T27f189(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T334f24(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T792c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T792f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T792f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T43f180(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T43f183(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T460f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T565f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T755f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T563f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T565f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T563f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T458f11(T0* C);
/* ET_CREATOR.reset */
extern void T552f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T464f25(T0* C);
/* ET_PARENT_LIST.reset */
extern void T342f12(T0* C);
/* ET_PARENT.reset */
extern void T336f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T341f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T340f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T541f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T539f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T339f10(T0* C);
/* ET_RENAME.reset */
extern void T533f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T533f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T130f28(T0* C);
/* ET_PARENT.parent */
extern T0* T336f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T337f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T118f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T116f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T43f190(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge764os11051;
extern T0* ge764ov11051;
extern T0* T127f175(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T348c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T831f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1031c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T830c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge819os13197;
extern T0* ge819ov13197;
extern T0* T348f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T831c3(void);
/* ET_CLASS.tokens */
extern T0* T43f13(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T43f189(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T43f188(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T43f187(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T43f186(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T40f203(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T347c870(T0* a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T335f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T335f10(T0* C);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge924os17052;
extern T0* ge924ov17052;
extern T0* T347f39(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1059c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T40f24(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T27f203(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T27f24(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T40f208(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T347c875(T0* a1, T0* a2);
/* ET_NONE_GROUP.full_pathname */
extern T0* T335f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T335f11(T0* C);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T27f208(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T40f207(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T347c874(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T27f207(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T40f204(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T347c871(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T27f204(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T43f50(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T92f27(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T40f206(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T347c873(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T27f206(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T43f41(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T92f25(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T335f5(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T40f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T347c872(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T27f205(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T43f175(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T43f185(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T43f164(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T43f179(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T43f177(T0* C, T0* a1);
/* ET_CLASS.reset_all */
extern void T43f176(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T43f192(T0* C);
/* ET_CLASS.reset_parsed */
extern void T43f191(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge764os11053;
extern T0* ge764ov11053;
extern T0* T127f177(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T118c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge704os5143;
extern T0* ge704ov5143;
extern T0* T118f3(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge764os11052;
extern T0* ge764ov11052;
extern T0* T127f176(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T116c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge706os5143;
extern T0* ge706ov5143;
extern T0* T116f3(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge764os10707;
extern T0* ge764ov10707;
extern T0* T127f85(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T136c47(void);
/* ET_CLASS.cloned_class */
extern T0* T43f38(T0* C);
/* ET_CLASS.copy */
extern void T43f184(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T43c158(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge764os10549;
extern T0* ge764ov10549;
extern T0* T127f150(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T39f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T110f41(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T110f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T110f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T110f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T110f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T110f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T110f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T110f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T110f27(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T110f53(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T358f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T356f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T356f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T356f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T356f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T356f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T356c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T110f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T357f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T355f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T355f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T355f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T355f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T355f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T110f17(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T110f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T110f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T110f20(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T110f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T110f45(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T110f44(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T324f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T110f43(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T218f1(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T43c160(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T110f34(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T110f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T110f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T110f61(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T334f146(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T334f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T40f195(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T27f188(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T40f194(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T27f187(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T40f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T27f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T40f192(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T27f185(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T40f191(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T27f184(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T334f159(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T334f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T334f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T334f154(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T334f157(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T334f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T793f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T793f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T793f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T793f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T793f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T793f19(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T793f18(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T793f17(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T793f44(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T793f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T793f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T793f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T793f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T793f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T793f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T793f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T793f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T793f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T793f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T793f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T793f37(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T793f42(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge943os12501;
extern T0* ge943ov12501;
extern T0* T334f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T334f128(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T793f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].internal_set_equality_tester */
extern void T985f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T334f127(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T793c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T793f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].make */
extern T0* T985c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].new_cursor */
extern T0* T985f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1083c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T793f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T987c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T793f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T793f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T793f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T793f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T793f54(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T334f161(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T323f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T323f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T334f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge943os12502;
extern T0* ge943ov12502;
extern T0* T334f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T40f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T27f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T40f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T27f178(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T40f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T27f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T40f183(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T27f176(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T334f156(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T334f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T218f56(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T334f95(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T793f39(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T793f3(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T793f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T128f864(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T128f879(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T128f859(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T128f888(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T128f1744(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T128f878(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T128f877(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T334f158(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T334f152(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T40f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T27f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T334f155(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T334f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T334f151(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T334f149(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T334f34(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T80f19(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T323f5(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T791f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T791f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T791f12(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T791f7(T0* C);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T791f6(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T791f11(T0* C, T14 a1);
/* KL_STDIN_FILE.read_character */
extern void T791f19(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T791f21(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T791f14(T0* C, T14 a1);
/* YY_FILE_BUFFER.compact_left */
extern void T80f21(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T323f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T80f23(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T323f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge160os8806;
extern T6 ge160ov8806;
extern T6 T80f10(T0* C);
/* YY_BUFFER.fill */
extern void T81f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T80f17(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T81f13(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T334f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T334f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T334f150(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T323f1(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T334f145(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T80f22(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T80f24(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge945os12677;
extern T0* ge945ov12677;
extern T0* T334f22(T0* C);
/* YY_FILE_BUFFER.make */
extern T0* T80c16(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T80f20(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T80f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge315os8277;
extern T0* ge315ov8277;
extern T0* T68f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T791c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T791f20(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T791f23(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T791f13(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T791f22(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T334f119(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T334f147(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T80f25(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T334f147p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T334f147p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f36(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f37(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T216f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T216f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2006os1904;
extern T0* ge2006ov1904;
extern T0* T22f27(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T216c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T216f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T216f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f50(T0* C);
/* UNIX_FILE_INFO.update */
extern void T216f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T216f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f14(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f26(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge389os17729;
extern T1 ge389ov17729;
extern T1 T372f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge389os17720;
extern T0* ge389ov17720;
extern T0* T372f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge330os12671;
extern T0* ge330ov12671;
extern T0* T334f20(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T372c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f51(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T334f19(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f16(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f28(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge943os12532;
extern T0* ge943ov12532;
extern T0* T334f118(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T334f18(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T334f117(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T334f116(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T334f115(T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T92f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T92f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T92f28(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T371f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T371f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T371f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T371f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T371f1(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T371f4(T0* C);
/* KL_DIRECTORY.open_read */
extern void T371f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T371f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T371f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T371f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T371f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T371f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T334f17(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge941os15561;
extern T0* ge941ov15561;
extern T0* T334f113(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T92f10(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T92f14(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T92f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T92f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T92f11(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T334f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T40f317(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T27f317(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T246f9(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T39f71(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T334f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T334f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T334f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T334f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T334f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T334f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T334f131(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T334c129(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T334f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T334f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T334f144(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T334f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge940os15517;
extern T0* ge940ov15517;
extern T0* T334f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T334f122(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge940os15516;
extern T0* ge940ov15516;
extern T0* T334f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge940os15515;
extern T0* ge940ov15515;
extern T0* T334f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge940os15514;
extern T0* ge940ov15514;
extern T0* T334f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge940os15513;
extern T0* ge940ov15513;
extern T0* T334f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge940os15512;
extern T0* ge940ov15512;
extern T0* T334f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge940os15511;
extern T0* ge940ov15511;
extern T0* T334f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge940os15510;
extern T0* ge940ov15510;
extern T0* T334f80(T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T334f9(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T123f1(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T123f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T122f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T123f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T123f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T123f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T123f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T123f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T123f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T123f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T123f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T123f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T123f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T123f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T123f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T123f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T123f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T123f23(T0* C, T14 a1);
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/* OpenBSD does not support 'ftime' unless -lcompat is specified. */
/* Use the recommended XSI (X/Open System Interface) extension instead. */
#include <sys/time.h>
#include <sys/types.h>
#define geftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define getimebsz sizeof(struct timeval)
#define getimebmillitm(p) ((struct timeval*)(p))->tv_usec
#define getimebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
#define geftime(p) ftime((struct timeb*)(p))
#define getimebsz sizeof(struct timeb)
#define getimebmillitm(p) ((struct timeb*)(p))->millitm
#define getimebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/* MANAGED_POINTER.make_from_pointer */
extern T0* T256c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T123f22(T0* C);
#include <time.h>
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T123f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T123f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T123f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T123f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T123f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T123f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T122c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1082os10073;
extern T0* ge1082ov10073;
extern T0* T121f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T123c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T121c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T41f35(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T41f52(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T39f157(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T328f14(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T328c13(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T821f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T821c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge875os20413;
extern T0* ge875ov20413;
extern T0* T821f4(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T820c32(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T820f33(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T213f36(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T213f38(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T212f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T212f19(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T315f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T314f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T314f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T314f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T314f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T314f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T314c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T212f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T212f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T212f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T212f18(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T212f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T316f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T212f16(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T212f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T316f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T212f2(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T820f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T212f4(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T213c35(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T213f37(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T318f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T784c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T317c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge848os13197;
extern T0* ge848ov13197;
extern T0* T213f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T318c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T212f3(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T212c13(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T212f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T316c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T315f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T783c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T315c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T211c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T211f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T313c4(T0* a1);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge862os7589;
extern T0* ge862ov7589;
extern T0* T820f6(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T328f17(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T328f9(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T327c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T819c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T980c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T980f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1082c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T819f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T327f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T327f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T326c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T818c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge872os20327;
extern T0* ge872ov20327;
extern T0* T818f5(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T978c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T973f10(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T973f9(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T973c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T817c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T817f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T816c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T816f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T815c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T814c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1017c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1017f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1025c12(T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T1025f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1131c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1130f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]].make_area */
extern T0* T1170c2(T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1129c5(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1130c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1122c35(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1122f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1165c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1165f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1182c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1122f33(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1167c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1122f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1122f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_slots */
extern void T1122f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1122f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1122f11(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1122f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1122f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1124f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1168c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1123c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1124c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1122f57(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1018c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1018f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1125c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T814f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T813c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T813f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T812c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1014f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1116f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1014c35(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1014f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1116c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1116f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1162c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1014f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1118c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1014f53(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1014f42(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1014f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1014f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1014f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1014f60(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1014f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1113f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1161c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1111c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1113c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1014f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1119f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1163c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1114c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1119c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1012f33(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1011c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1012c32(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1012f14(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1112c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1012f42(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1012f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1012f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1012f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1012f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1012f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1012f38(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T811c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1006c44(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1006f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1103c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1103f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1158c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1006f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1100c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1006f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1006f55(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1006f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1006f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1006f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1006f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1006f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1006f73(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1105f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1159c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1101c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1105c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1005f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1097f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1005c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1005f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1097c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1097f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1156c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1005f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1095c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1005f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1005f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1005f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1005f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1005f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1005f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1005f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T596f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T908c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T531c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T596c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1005f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T1099f2(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T1157c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T1023c4(T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T1099c3(void);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1004f39(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1004c38(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1004f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1094c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1004f51(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1004f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1004f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1004f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1004f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1004f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1004f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1003f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1091f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge810os5068;
extern T0* ge810ov5068;
extern T0* T811f5(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T804c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1003c41(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1003f50(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1091c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1091f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1154c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1003f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1088c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1003f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1003f53(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1003f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1003f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1003f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1003f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1003f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1003f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1093f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1155c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1089c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1093c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T810f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge809os2683;
extern T0* ge809ov2683;
extern T0* T326f9(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T324c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T810c39(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T810f9(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1002c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T810f45(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T810f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T810f14(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T810f3(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T810f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T810f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T810f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T358f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T834c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T358c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T809c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T809f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1001c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T999f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1000c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T999c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T806f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T996f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge808os15423;
extern T0* ge808ov15423;
extern T0* T326f6(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T807c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T806c35(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T806f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T996c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T996f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1086c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T806f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T998c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T806f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T806f42(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T806f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T806f31(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T806f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T806f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T806f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T604f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T910c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T602c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T604c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T806f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T995f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1085c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T991c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T995c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T803f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T993f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T326f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T803c45(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T803f55(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T993c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T993f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1084c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T803f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T990c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T803f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T803f62(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T803f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T803f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T803f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T803f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T803f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T803f70(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T326f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T326f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T330c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T825c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1029c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1029f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1134c35(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1134f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1173c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1173f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1184c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1134f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1175c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1134f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1134f41(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1134f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1134f26(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1134f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1134f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1134f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T495f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T874c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T490c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T495c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1134f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1030c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1030f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1135c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T825f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T824c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T824f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_map */
extern T0* T823c40(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_with_equality_testers */
extern void T823f44(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1027c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T1027f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1133c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T823f2(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T981c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_sparse_container */
extern void T823f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].unset_found_item */
extern void T823f46(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_slots */
extern void T823f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].special_integer_ */
extern T0* T823f32(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_modulus */
extern T6 T823f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_clashes */
extern void T823f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_key_storage */
extern void T823f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_item_storage */
extern void T823f62(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T822c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T822f17(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1021c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1021f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].make */
extern T0* T1126c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1126f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1169c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1021f34(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1128c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1021f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1021f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1021f61(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1021f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1021f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1021f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1021f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1021f58(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T330f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T330f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T329c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T329f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T329f3(T0* C);
/* ET_SYSTEM.compile_all */
extern void T41f50(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T115f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T110f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T110f63(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T115f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T110f62(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T115f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T118f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T116f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T43f81(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T43f80(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T136f14(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T115f2(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T110f31(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T115f1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T110f30(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T115f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T110f59(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T110f38(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T110f37(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T110f1(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T115c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T39f161(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T328f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T328f15(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T39f160(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T70f18(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T70f19(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T70f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T70f21(T0* C, T14 a1, T2 a2);
/* ET_LACE_UNIVERSE.parse_all */
extern void T39f158(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T128f907(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T128f911(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T128f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T128f916(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T128f915(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T128f920(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T128f932(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T128f931(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T87f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T86f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T86f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T86f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T86f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T86f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T86c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T87f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T244c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T87c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T128f930(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T128f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T128f1713(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T128f1722(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T361f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T361f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T361f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T361f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T128f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T128f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T128f1710(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T128f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T447f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T446f37(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T218f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T128f1708(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T447f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T446f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T128f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T128f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T128f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T128f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T128f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T128f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T128f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T128f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T128f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T128f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T128f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T128f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T128f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T128f1694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T128f1693(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T404f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T403f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T403f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T403f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T403f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T403f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T403c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T404f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T852c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T404c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T128f1692(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T128f1691(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T417f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T416f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T416f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T416f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T416f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T416f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T416c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T417f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T857c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T417c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T128f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T128f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T128f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T128f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T128f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T128f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T128f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T128f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T128f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T128f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T128f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T128f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T128f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T128f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T128f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T128f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T128f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T128f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T128f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T128f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T128f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T128f1669(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T128f1668(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T748f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T744f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T744f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T744f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T744f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T744f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T744c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T748f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T957c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T748c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T218f308(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T749c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge764os10690;
extern T0* ge764ov10690;
extern T0* T127f735(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T437c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T437f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T437f2(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge764os10692;
extern T0* ge764ov10692;
extern T0* T127f66(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T257c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge764os10687;
extern T0* ge764ov10687;
extern T0* T127f65(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T257c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T749f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T128f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T128f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T128f1665(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T747f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T746f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T746f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T746f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T746f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T746f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T746c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T747f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T956c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T747c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T128f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T361f12(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T361f1(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T218f307(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T128f1664(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T737f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T128f1663(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T743f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T738f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T738f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T738f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T738f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T738f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T738c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T743f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T955c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T743c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T218f306(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T737c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T737f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge602os5143;
extern T0* ge602ov5143;
extern T0* T737f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T737f2(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T128f564(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T128f585(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T365f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T128f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T128f1661(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T128f1726(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T365f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T365f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T390f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T389f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T389f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T389f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T389f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T389f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T365f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T365f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T128f1660(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T128f1720(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T361f10(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T128f1725(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T365f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T128f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T128f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T128f1657(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T739f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T739f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T739f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T739f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T739f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T739c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T954c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T742c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T218f302(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T740c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T740f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T128f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T128f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T128f1654(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T128f1653(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T128f846(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T88f106(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T579f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T88f33(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T757f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T616f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T757f3(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T616f3(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T128f885(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T363f2(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T363f1(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T88f105(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T174f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T128f884(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T362f2(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T362f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T128f1652(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T741f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T722f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T722f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T722f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T722f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T722f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T722c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T741f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T953c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T741c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T362f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T128f1651(T0* C);
/* ET_AST_FACTORY.new_inline_agent */
extern T0* T218f303(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_AGENT.set_agent_keyword */
extern void T721f20(T0* C, T0* a1);
/* ET_INLINE_AGENT.make */
extern T0* T721c19(T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T799c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge764os10698;
extern T0* ge764ov10698;
extern T0* T127f688(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T383c56(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T383f58(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T383f59(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T383f2(T0* C);
/* ET_INLINE_AGENT.tokens */
extern T0* T721f2(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T218f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T593f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T593f77(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T593f76(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T593f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T593f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T593c73(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T593f8(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T218f169(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T128f1650(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T128f1649(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T363f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T128f1648(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T218f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T592f79(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T592f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T592f76(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T592f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T592f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T592f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T592f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T592c71(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T592f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T128f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T128f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T128f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T128f1644(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T218f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T220f79(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T220f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T220f76(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T220f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T220f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T220f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T220f72(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T128f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T128f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T128f1641(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T128f1640(T0* C);
/* ET_AST_FACTORY.new_external_function */
extern T0* T218f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T133f81(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T133f79(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T133f78(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T133f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T133f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T133f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T133c74(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T133f10(T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T218f162(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T128f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T128f1638(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T128f1637(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T218f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T587f81(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T587f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T587f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T587f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T587f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T587f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T587f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T587f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T587c72(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T587f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T128f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T128f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T128f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T128f1633(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T218f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T585f81(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T585f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T585f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T585f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T585f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T585f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T585f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T585f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T585c72(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T585f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T128f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T128f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T128f1630(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T280f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T279f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T279f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T279f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T279f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T279f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T218f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T184f25(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T184c24(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T184f2(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T184c23(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T128f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T128f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T128f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T128f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T128f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T128f1624(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T218f252(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T128f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T128f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T128f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T128f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T128f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T128f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T128f1617(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T128f1616(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T726f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T128f1615(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T736f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T727f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T727f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T727f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T727f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T727f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T727c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T736f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T951c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T736c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T218f300(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T726f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T726c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T726f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T550f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T892c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T502c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge787os5143;
extern T0* ge787ov5143;
extern T0* T726f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T550c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge764os10749;
extern T0* ge764ov10749;
extern T0* T127f734(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T136c27(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T726f2(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T128f563(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T364f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T128f1614(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T128f1613(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T128f1721(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T364f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T364f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T382f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T381f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T381f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T381f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T381f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T381f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T364f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T364f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T128f1612(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T128f1719(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T364f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T128f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T128f1610(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T484f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T128f1609(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T735f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T485f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T485f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T485f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T485f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T485f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T485c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T735f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T950c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T735c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T218f299(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T484f23(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T484c21(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T484f21p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T484f6(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T484f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T128f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T128f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T128f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T128f1605(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T128f1604(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T724f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T128f1603(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T734f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T725f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T725f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T725f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T725f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T725f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T725c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T734f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T949c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T734c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T218f298(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T724f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T724c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T724f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T724f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge764os10691;
extern T0* ge764ov10691;
extern T0* T127f68(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T257c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge764os10686;
extern T0* ge764ov10686;
extern T0* T127f733(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T257c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T724f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T128f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T128f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T128f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T128f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T128f1598(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T218f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T733c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T733f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T128f1597(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T732f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T707f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T707f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T707f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T707f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T707f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T707c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T732f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T948c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T732c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T218f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T706f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T706c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T706f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T128f1596(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T728f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T128f1595(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T729f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T729f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T729f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T729f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T729f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T729c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T947c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T731c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T218f295(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T728c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T728f2(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T728f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T728f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T728f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T128f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T128f1593(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T730f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T644f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T644f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T644f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T644f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T644f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T644c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T730f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T946c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T730c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T128f1592(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T218f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T643c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T128f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T128f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T128f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T128f1588(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T128f1587(T0* C);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T218f293(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T723f16(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T723c15(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge764os10737;
extern T0* ge764ov10737;
extern T0* T127f115(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T136c22(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T723f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T128f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T128f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T128f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T128f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T128f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T128f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T128f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T128f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T128f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T128f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T128f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T128f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T128f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T128f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T128f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T128f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T128f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T128f1569(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T128f1568(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T218f292(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T720f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T720c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge764os10736;
extern T0* ge764ov10736;
extern T0* T127f732(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T136c25(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T720f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T128f1567(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T218f290(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T719c16(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T218f291(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T407f51(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T407f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T128f1566(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T128f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T128f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T128f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T218f327(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T426f73(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T426f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T128f1564(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T128f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T218f326(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T426f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T128f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T128f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T128f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T128f1560(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T128f1559(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T218f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T718c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T128f1558(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T128f1557(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T218f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T714c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T128f1556(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T218f288(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T717f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T717c31(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge764os10715;
extern T0* ge764ov10715;
extern T0* T127f78(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T136c40(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge764os10738;
extern T0* ge764ov10738;
extern T0* T127f731(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T413c46(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T413f52(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T413f53(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T413f2(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T717f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T128f1555(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T218f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T716f32(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T716c31(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge764os10750;
extern T0* ge764ov10750;
extern T0* T127f81(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T136c43(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge764os10699;
extern T0* ge764ov10699;
extern T0* T127f730(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T413c48(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T716f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T128f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T128f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T128f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T128f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T128f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T128f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T128f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T128f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T128f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T128f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T128f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T128f1543(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T128f1542(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T218f286(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T426f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T128f1541(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T218f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T426f70(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T128f1540(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T218f283(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T407f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T128f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T128f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T128f1537(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T713f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T645f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T645f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T645f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T645f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T645f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T645c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T713f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T945c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T713c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T128f1536(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T128f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T757f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T616f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T579f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T579f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T128f1535(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T218f282(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T712f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T712c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge764os10683;
extern T0* ge764ov10683;
extern T0* T127f729(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T257c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T712f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T128f1534(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T218f281(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T711f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T711c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T711f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T128f1533(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T218f280(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T710f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T710c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T710f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T128f1532(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T218f279(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T709f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T709c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T709f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T128f1531(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T218f278(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T128f1530(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T128f1529(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T708f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T660f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T660f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T660f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T660f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T660f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T660c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T708f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T944c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T708c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T218f277(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T128f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T128f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T128f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T128f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T128f1524(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T128f1523(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T218f274(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T128f1522(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T128f1521(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T128f1734(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T48f4(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T48f10(T0* C);
/* UT_VERSION.has_build */
extern T1 T48f9(T0* C);
/* UT_VERSION.minor */
extern T6 T48f8(T0* C);
/* UT_VERSION.has_minor */
extern T1 T48f7(T0* C);
/* UT_VERSION.major */
extern T6 T48f6(T0* C);
/* UT_VERSION.has_major */
extern T1 T48f5(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge258os1591;
extern T0* ge258ov1591;
extern T0* T128f681(T0* C);
/* UT_VERSION.make */
extern T0* T48c14(T6 a1, T6 a2, T6 a3);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T39f146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T128f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T128f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T128f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T128f1517(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T128f1516(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T128f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T756f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T179f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T128f1515(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T218f276(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T705f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T705f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T705c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge764os10739;
extern T0* ge764ov10739;
extern T0* T127f728(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T386c17(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T386f19(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T386f20(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T386f2(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T705f4(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T218f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T128f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T128f1513(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T704f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T692f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T692f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T692f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T692f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T692f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T692c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T704f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T943c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T704c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T218f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T691f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T691c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T691f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T128f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T128f1511(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T703f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T640f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T640f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T640f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T640f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T640f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T640c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T703f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T942c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T703c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T128f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T128f1509(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T128f1508(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T642f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T639f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T639f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T639f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T639f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T639f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T639c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T642f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T925c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T642c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T218f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T702f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T702c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T702f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T128f1507(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T128f1506(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T218f271(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T700f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T700f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T700c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T700f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T128f1505(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T128f1504(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T218f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T128f1503(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T128f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T88f104(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T128f1502(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T699f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T698f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T698f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T698f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T698f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T698f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T698c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T699f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T941c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T699c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T218f269(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T128f1501(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T693f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T128f1500(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T696f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T694f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T694f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T694f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T694f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T694f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T694c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T696f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T940c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T696c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T218f268(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T693c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T693f2(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T693f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge640os5143;
extern T0* ge640ov5143;
extern T0* T693f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T128f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T128f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T128f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T128f1496(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T128f1495(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T695f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T655f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T655f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T655f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T655f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T655f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T655c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T695f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T939c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T695c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T218f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T654c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T654f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T218f266(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge764os10712;
extern T0* ge764ov10712;
extern T0* T127f86(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T136c48(void);
/* ET_AST_FACTORY.tokens */
extern T0* T218f311(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T581f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T581c10(void);
/* ET_COMPOUND.make */
extern void T581f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge764os10714;
extern T0* ge764ov10714;
extern T0* T127f74(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T136c36(void);
/* ET_COMPOUND.tokens */
extern T0* T581f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T128f1494(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T218f237(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T581c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T581f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge726os5143;
extern T0* ge726ov5143;
extern T0* T581f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T128f1493(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T690f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T687f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T687f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T687f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T687f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T687f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T687c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T690f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T937c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T690c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T128f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T128f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T128f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T128f1489(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T128f1488(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T688f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T682f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T682f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T682f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T682f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T682f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T682c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T688f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T936c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T688c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T218f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T689c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge764os10685;
extern T0* ge764ov10685;
extern T0* T127f70(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T257c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T689f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T128f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T128f1486(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T685f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T684f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T684f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T684f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T684f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T684f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T684c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T685f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T935c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T685c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T218f264(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T128f1485(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T677f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T128f1484(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T680f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T678f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T678f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T678f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T678f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T678f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T678c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T680f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T934c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T680c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T218f263(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T677f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T677c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T677f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge724os5143;
extern T0* ge724ov5143;
extern T0* T677f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge764os10757;
extern T0* ge764ov10757;
extern T0* T127f82(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T136c44(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T677f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T128f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T128f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T128f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T128f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T128f1479(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T679f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T676f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T676f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T676f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T676f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T676f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T676c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T679f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T933c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T679c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T218f262(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T675c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T128f1478(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T671f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T128f1477(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T672f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T672f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T672f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T672f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T672f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T672c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T931c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T674c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T218f261(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T671c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge747os5143;
extern T0* ge747ov5143;
extern T0* T671f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T128f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T128f1475(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T128f1474(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T673f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T651f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T651f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T651f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T651f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T651f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T651c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T673f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T930c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T673c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T218f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T650f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T650c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T650f4(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T218f248(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T759c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T136f13(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T136f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T128f1473(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T128f1472(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T670f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T668f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T668f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T668f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T668f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T668f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T668c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T670f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T929c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T670c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T218f259(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T667c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T128f1471(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T664f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T128f1470(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T669f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T666f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T666f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T666f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T666f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T666f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T666c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T669f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T928c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T669c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T218f258(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T664c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge731os5143;
extern T0* ge731ov5143;
extern T0* T664f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T128f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T128f1468(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T665f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T649f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T649f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T649f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T649f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T649f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T649c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T665f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T927c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T665c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T218f257(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T648f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T648f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T648c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T648f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T128f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T128f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T128f1465(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T128f1464(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T663f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T482f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T482f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T482f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T482f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T482f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T482c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T663f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T926c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T663c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T218f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T481f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T481c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge764os10709;
extern T0* ge764ov10709;
extern T0* T127f91(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T136c53(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T481f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T218f253(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T659c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T128f1463(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T128f1462(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T218f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T662f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T662c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T662f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T128f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T128f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T128f1459(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T128f1458(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T218f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T658f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T658c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge764os10680;
extern T0* ge764ov10680;
extern T0* T127f64(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T257c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T658f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T128f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T128f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T128f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T128f1454(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T218f250(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T128f1453(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T128f1452(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T128f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T366f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T366f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T366f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T837f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T837f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T656f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T366f4(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T218f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T656f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T656c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T656f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge508os5143;
extern T0* ge508ov5143;
extern T0* T656f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge764os10706;
extern T0* ge764ov10706;
extern T0* T127f84(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T136c46(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T656f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T128f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T128f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T128f1449(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T218f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T653f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T653f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T653c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T653f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T128f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T128f1447(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T128f1446(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T218f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T647c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge764os10679;
extern T0* ge764ov10679;
extern T0* T127f72(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T257c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T647f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T128f1445(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T218f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T646c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge764os10678;
extern T0* ge764ov10678;
extern T0* T127f71(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T257c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T646f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T128f1444(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T218f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T641c13(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge714os19395;
extern T0* ge714ov19395;
extern T0* T641f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T641f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T128f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T128f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T128f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T128f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T128f1439(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T630f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T582f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T582f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T582f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T582f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T582f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T582c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T630f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T922c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T630c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T128f1438(T0* C);
/* ET_COMPOUND.put_first */
extern void T581f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T128f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T128f1436(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T218f244(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge764os10734;
extern T0* ge764ov10734;
extern T0* T127f80(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T136c42(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T128f1435(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T128f1434(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T218f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge764os10723;
extern T0* ge764ov10723;
extern T0* T127f79(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T136c41(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T128f1433(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T128f1432(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T218f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge764os10746;
extern T0* ge764ov10746;
extern T0* T127f97(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T136c59(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T128f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T128f1430(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T218f241(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T128f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T128f1428(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T218f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T128f1427(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T128f1426(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T218f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T128f1425(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T128f1424(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T218f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T128f1423(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T128f1422(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T636f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T508f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T508f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T508f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T508f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T508f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T508c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T636f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T924c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T636c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T218f236(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T637f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T637c55(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge764os10732;
extern T0* ge764ov10732;
extern T0* T127f727(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T136c26(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T637f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T128f1421(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T218f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T635f61(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T635c60(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T635f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T128f1420(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T261f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T260f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T260f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T260f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T260f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T260f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T218f234(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T218f231(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T633c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T128f1419(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T128f1418(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T128f1737(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T218f233(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T758c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T130f13(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T218f232(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T130f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T128f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T128f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T128f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T128f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T128f1413(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T631f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T520f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T520f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T520f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T520f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T520f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T520c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T631f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T923c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T631c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T218f229(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T130f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T128f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T128f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T128f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T128f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T128f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T128f1407(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T218f230(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T128f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T128f1405(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T218f228(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T338f86(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T338c85(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge764os10751;
extern T0* ge764ov10751;
extern T0* T127f690(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T338f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T128f1404(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T128f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T218f316(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T129c90(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T218f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T43f161(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T368f42(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T368f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T368f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T368f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T368f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T43f85(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T368f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T368f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T368f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T368f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T368f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T368f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T368f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T368f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T368f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T368f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T368f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T368f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T218f324(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T796c53(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T43f44(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T337f15(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T497f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T489f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T128f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T128f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T128f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T128f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T128f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T128f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T128f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T128f1396(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T128f1395(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T318f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T317f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T317f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T317f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T317f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T317f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T128f1394(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T218f129(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T510f94(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T510c93(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge764os10705;
extern T0* ge764ov10705;
extern T0* T127f717(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T510f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T128f1393(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T128f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T40f211(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ise_fatal */
extern void T347f879(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T347f877(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T347c878(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T40f26(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T27f211(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T27f26(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T40f210(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T347c876(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T27f210(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T128f1715(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T43f169(T0* C);
/* ET_CLASS.set_parsed */
extern void T43f168(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T509f1(T0* C);
/* ET_BIT_N.compute_size */
extern void T509f93(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T218f314(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T509f94(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T509c92(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T509f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T128f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T128f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T128f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T128f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T128f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T128f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T128f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T128f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T128f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T128f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T128f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T128f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T128f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T128f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T128f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T128f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T128f1376(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T128f1375(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T629f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T628f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T628f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T628f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T628f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T628f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T628c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T629f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T921c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T629c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T218f227(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T627f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T627c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge764os10755;
extern T0* ge764ov10755;
extern T0* T127f103(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T136c65(void);
/* ET_VARIANT.tokens */
extern T0* T627f2(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T218f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T128f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T128f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T128f1372(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T128f1371(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T626f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T625f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T625f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T625f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T625f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T625f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T625c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T626f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T920c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T626c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T128f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T624f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T218f323(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T624f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T624c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T624f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T624f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge764os10730;
extern T0* ge764ov10730;
extern T0* T127f112(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T136c74(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T624f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T128f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T128f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T128f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T128f1367(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T623f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T465f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T465f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T465f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T465f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T465f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T465c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T623f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T919c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T623c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T128f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T464f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T218f322(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T464f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T464c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T464f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T464f6(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T464f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T128f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T128f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T128f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T128f1364(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T128f1363(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T622f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T584f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T584f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T584f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T584f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T584f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T584c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T622f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T918c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T622c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T128f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T583f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T218f321(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T583f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T583f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T583c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T583f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T583f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge764os10718;
extern T0* ge764ov10718;
extern T0* T127f720(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T136c28(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T583f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T128f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T128f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T128f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T128f1359(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T128f1358(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T621f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T578f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T578f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T578f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T578f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T578f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T578c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T621f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T917c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T621c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T128f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T577f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T218f320(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T577f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T577f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T577c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T577f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T577f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge764os10745;
extern T0* ge764ov10745;
extern T0* T127f719(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T136c31(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T577f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T128f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T128f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T128f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T128f1354(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T128f1353(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T128f1736(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T366f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T366f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T836f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T835f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T835f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T835f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T835f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T835f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T366f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T366f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T218f309(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T218f310(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T751c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T128f1352(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T128f1351(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T128f1735(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T366f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T366f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T366f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T751f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T366f2(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T366f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T128f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T128f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T128f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T128f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T128f1346(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T128f1345(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T620f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T615f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T615f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T615c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T620f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T916c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T620c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T218f226(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T218f225(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T616c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T128f1344(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T128f1343(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T619f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T617f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T617f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T617f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T617f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T617f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T617c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T619f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T915c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T619c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T218f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T757c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge939os12454;
extern T0* ge939ov12454;
extern T0* T128f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T128f1342(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T218f223(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T128f1341(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T579f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T128f1340(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T128f1339(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T757f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T757f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T616f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T579f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T579f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T128f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T128f1337(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T613f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T580f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T580f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T580f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T580f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T580f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T128f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T363f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T363f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T363f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T363f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T218f319(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T579f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T579c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T579f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge698os5143;
extern T0* ge698ov5143;
extern T0* T579f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge764os10733;
extern T0* ge764ov10733;
extern T0* T127f88(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T136c50(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T579f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T128f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T128f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T128f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T128f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T128f1332(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T128f1331(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T612f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T608f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T608f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T608f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T608f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T608f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T608c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T612f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T913c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T612c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T218f222(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T218f221(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T179c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T128f1330(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T128f1329(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T611f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T609f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T609f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T609f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T609f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T609f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T609c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T611f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T912c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T611c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T218f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T756c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T128f1328(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T218f219(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T128f1327(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T174f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T128f1326(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T128f1325(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T756f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T174f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T174f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T128f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T128f1323(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T606f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T586f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T586f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T586f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T586f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T586f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T128f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T362f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T362f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T362f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T362f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T218f318(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T174c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T174f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge687os5143;
extern T0* ge687ov5143;
extern T0* T174f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T174f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T128f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T128f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T128f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T128f1319(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T128f1318(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T604f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T602f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T602f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T602f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T602f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T602f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T128f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T128f883(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T218f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T605f44(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T605c43(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T61f17(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T605f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T605f5(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge769os17201;
extern T0* ge769ov17201;
extern T0* T605f2(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge764os10700;
extern T0* ge764ov10700;
extern T0* T127f83(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T136c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T128f1317(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T218f218(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T601f61(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T601c80(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T601f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T601f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T128f1316(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T128f1315(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T218f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T601c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T128f1314(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T218f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T601c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T128f1313(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T218f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T601c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T128f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T218f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T601c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T128f1311(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T218f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T601c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T128f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T218f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T601c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T128f1309(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T218f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T601c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T128f1308(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T218f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T601c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T128f1307(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T218f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T601c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T128f1306(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T218f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T601c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T128f1305(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T218f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T601c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T128f1304(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T218f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T601c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T128f1303(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T218f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T601c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T128f1302(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T218f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T601c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T128f1301(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T218f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T601c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T128f1300(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T218f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T601c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T128f1299(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T218f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T601c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T128f1298(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T218f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T601c62(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T128f1297(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T218f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T601c60(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T128f1296(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T600f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T532f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T532f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T532f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T532f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T532f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T532c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T600f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T909c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T600c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T218f197(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T603c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T128f1295(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T128f1294(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T596f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T531f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T531f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T531f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T531f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T531f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T128f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T128f882(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T218f196(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T360f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T360c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T360f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T360f5(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge796os17201;
extern T0* ge796ov17201;
extern T0* T360f2(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge764os10727;
extern T0* ge764ov10727;
extern T0* T127f87(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T136c49(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T128f1293(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T128f1292(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T128f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T128f881(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T218f178(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T598f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T598c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T598f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T598f5(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge806os17201;
extern T0* ge806ov17201;
extern T0* T598f2(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge764os10740;
extern T0* ge764ov10740;
extern T0* T127f94(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T136c56(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T128f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T128f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T128f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T128f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T128f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T128f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T128f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T128f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T128f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T128f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T128f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T128f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T128f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T128f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T128f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T128f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T128f1275(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T218f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T599f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T599c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T599f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T599f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T128f1274(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T218f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T599c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T128f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T218f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T599c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T128f1272(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T218f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T599c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T128f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T218f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T599c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T128f1270(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T218f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T599c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T128f1269(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T218f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T599c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T128f1268(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T218f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T599c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T128f1267(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T218f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T599c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T128f1266(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T218f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T599c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T128f1265(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T218f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T599c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T128f1264(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T218f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T599c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T128f1263(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T218f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T599c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T128f1262(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T218f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T599c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T128f1261(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T218f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T599c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T128f1260(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T218f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T599c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T128f1259(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T218f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T599c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T128f1258(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T128f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T218f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T597f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T597c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T597f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T597f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T128f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T218f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T597c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T128f1255(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T218f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T597c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T128f1254(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T128f1253(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T595f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T575f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T575f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T575f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T575f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T575f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T575c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T595f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T907c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T595c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T218f174(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T128f1252(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T128f1251(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T594f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T591f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T591f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T591f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T591f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T591f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T591c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T594f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T906c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T594c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T218f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T128f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T128f1249(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T128f1248(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T434f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T433f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T433f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T433f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T433f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T433f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T433c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T434f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T863c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T434c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T128f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T128f1246(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T128f1245(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T307f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T308f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T308f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T308f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T308f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T308f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T128f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T128f1747(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T40f212(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T347c880(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T40f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T27f212(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T27f29(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T593f80(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T128f1780(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8s_error */
extern void T40f316(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8s */
extern T0* T347c984(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs8_error */
extern T1 T40f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs8s_error */
extern void T27f316(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs8_error */
extern T1 T27f40(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge764os10640;
extern T0* ge764ov10640;
extern T0* T127f489(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8r_error */
extern void T40f315(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8r */
extern T0* T347c983(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8r_error */
extern void T27f315(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge764os10605;
extern T0* ge764ov10605;
extern T0* T127f605(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8q_error */
extern void T40f314(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8q */
extern T0* T347c982(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8q_error */
extern void T27f314(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge764os10604;
extern T0* ge764ov10604;
extern T0* T127f603(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8p_error */
extern void T40f313(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8p */
extern T0* T347c981(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8p_error */
extern void T27f313(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge764os10595;
extern T0* ge764ov10595;
extern T0* T127f601(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8o_error */
extern void T40f312(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8o */
extern T0* T347c980(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8o_error */
extern void T27f312(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge764os10594;
extern T0* ge764ov10594;
extern T0* T127f599(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8n_error */
extern void T40f311(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8n */
extern T0* T347c979(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8n_error */
extern void T27f311(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge764os10660;
extern T0* ge764ov10660;
extern T0* T127f550(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8m_error */
extern void T40f310(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8m */
extern T0* T347c978(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8m_error */
extern void T27f310(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge764os10667;
extern T0* ge764ov10667;
extern T0* T127f596(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8l_error */
extern void T40f309(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8l */
extern T0* T347c977(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8l_error */
extern void T27f309(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge764os10666;
extern T0* ge764ov10666;
extern T0* T127f594(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8k_error */
extern void T40f308(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8k */
extern T0* T347c976(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8k_error */
extern void T27f308(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge764os10665;
extern T0* ge764ov10665;
extern T0* T127f592(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8j_error */
extern void T40f307(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8j */
extern T0* T347c975(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8j_error */
extern void T27f307(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge764os10618;
extern T0* ge764ov10618;
extern T0* T127f540(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T359c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T359f33(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8i_error */
extern void T40f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8i */
extern T0* T347c974(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8i_error */
extern void T27f306(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge764os10645;
extern T0* ge764ov10645;
extern T0* T127f580(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8h_error */
extern void T40f305(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8h */
extern T0* T347c973(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8h_error */
extern void T27f305(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge764os10643;
extern T0* ge764ov10643;
extern T0* T127f538(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8g_error */
extern void T40f304(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8g */
extern T0* T347c972(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8g_error */
extern void T27f304(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge764os10624;
extern T0* ge764ov10624;
extern T0* T127f536(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8f_error */
extern void T40f303(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8f */
extern T0* T347c971(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8f_error */
extern void T27f303(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge764os10613;
extern T0* ge764ov10613;
extern T0* T127f530(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8e_error */
extern void T40f302(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8e */
extern T0* T347c970(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8e_error */
extern void T27f302(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge764os10625;
extern T0* ge764ov10625;
extern T0* T127f528(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8d_error */
extern void T40f301(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8d */
extern T0* T347c969(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8d_error */
extern void T27f301(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge764os10619;
extern T0* ge764ov10619;
extern T0* T127f526(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8c_error */
extern void T40f300(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs8c */
extern T0* T347c968(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs8c_error */
extern void T27f300(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T127f456(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge764os10623;
extern T0* ge764ov10623;
extern T0* T127f485(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T128f1779(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8a_error */
extern void T40f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs8a */
extern T0* T347c966(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs8a_error */
extern void T27f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge764os10635;
extern T0* ge764ov10635;
extern T0* T127f31(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs8b_error */
extern void T40f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs8b */
extern T0* T347c967(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs8b_error */
extern void T27f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge764os10651;
extern T0* ge764ov10651;
extern T0* T127f457(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T128f1778(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4n_error */
extern void T40f296(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4n */
extern T0* T347c964(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs4_error */
extern T1 T40f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs4n_error */
extern void T27f296(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs4_error */
extern T1 T27f39(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge764os10587;
extern T0* ge764ov10587;
extern T0* T127f578(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4m_error */
extern void T40f295(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4m */
extern T0* T347c963(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4m_error */
extern void T27f295(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge764os10591;
extern T0* ge764ov10591;
extern T0* T127f576(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4l_error */
extern void T40f294(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4l */
extern T0* T347c962(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4l_error */
extern void T27f294(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge764os10590;
extern T0* ge764ov10590;
extern T0* T127f574(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4k_error */
extern void T40f293(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4k */
extern T0* T347c961(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4k_error */
extern void T27f293(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge764os10589;
extern T0* ge764ov10589;
extern T0* T127f572(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4o_error */
extern void T40f292(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4o */
extern T0* T347c960(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4o_error */
extern void T27f292(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge764os10586;
extern T0* ge764ov10586;
extern T0* T127f570(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4j_error */
extern void T40f291(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4j */
extern T0* T347c959(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4j_error */
extern void T27f291(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge764os10588;
extern T0* ge764ov10588;
extern T0* T127f568(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4ac_error */
extern void T40f290(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4ac */
extern T0* T347c958(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4ac_error */
extern void T27f290(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge764os10585;
extern T0* ge764ov10585;
extern T0* T127f566(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4ab_error */
extern void T40f289(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4ab */
extern T0* T347c957(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4ab_error */
extern void T27f289(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge764os10584;
extern T0* ge764ov10584;
extern T0* T127f564(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4aa_error */
extern void T40f288(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4aa */
extern T0* T347c956(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4aa_error */
extern void T27f288(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge764os10583;
extern T0* ge764ov10583;
extern T0* T127f562(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4z_error */
extern void T40f287(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4z */
extern T0* T347c955(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4z_error */
extern void T27f287(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge764os10582;
extern T0* ge764ov10582;
extern T0* T127f560(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4y_error */
extern void T40f286(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4y */
extern T0* T347c954(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4y_error */
extern void T27f286(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge764os10581;
extern T0* ge764ov10581;
extern T0* T127f558(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4x_error */
extern void T40f285(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4x */
extern T0* T347c953(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4x_error */
extern void T27f285(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge764os10580;
extern T0* ge764ov10580;
extern T0* T127f556(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4w_error */
extern void T40f284(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4w */
extern T0* T347c952(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4w_error */
extern void T27f284(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge764os10579;
extern T0* ge764ov10579;
extern T0* T127f554(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4v_error */
extern void T40f283(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4v */
extern T0* T347c951(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4v_error */
extern void T27f283(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge764os10578;
extern T0* ge764ov10578;
extern T0* T127f552(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4u_error */
extern void T40f282(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4u */
extern T0* T347c950(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4u_error */
extern void T27f282(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4ae_error */
extern void T40f281(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4ae */
extern T0* T347c949(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4ae_error */
extern void T27f281(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge764os10664;
extern T0* ge764ov10664;
extern T0* T127f548(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4ad_error */
extern void T40f280(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4ad */
extern T0* T347c948(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4ad_error */
extern void T27f280(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge764os10663;
extern T0* ge764ov10663;
extern T0* T127f546(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4t_error */
extern void T40f279(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4t */
extern T0* T347c947(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4t_error */
extern void T27f279(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge764os10662;
extern T0* ge764ov10662;
extern T0* T127f544(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4af_error */
extern void T40f278(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4af */
extern T0* T347c946(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4af_error */
extern void T27f278(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge764os10659;
extern T0* ge764ov10659;
extern T0* T127f465(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4i_error */
extern void T40f277(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4i */
extern T0* T347c945(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4i_error */
extern void T27f277(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge764os10658;
extern T0* ge764ov10658;
extern T0* T127f463(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4h_error */
extern void T40f276(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4h */
extern T0* T347c944(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4h_error */
extern void T27f276(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4r_error */
extern void T40f297(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4r */
extern T0* T347c965(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4r_error */
extern void T27f297(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4g_error */
extern void T40f275(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4g */
extern T0* T347c943(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4g_error */
extern void T27f275(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4s_error */
extern void T40f274(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4s */
extern T0* T347c942(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4s_error */
extern void T27f274(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4f_error */
extern void T40f273(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4f */
extern T0* T347c941(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4f_error */
extern void T27f273(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge764os10620;
extern T0* ge764ov10620;
extern T0* T127f534(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4e_error */
extern void T40f272(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4e */
extern T0* T347c940(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4e_error */
extern void T27f272(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge764os10612;
extern T0* ge764ov10612;
extern T0* T127f532(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4d_error */
extern void T40f271(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4d */
extern T0* T347c939(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4d_error */
extern void T27f271(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4c_error */
extern void T40f270(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4c */
extern T0* T347c938(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4c_error */
extern void T27f270(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4b_error */
extern void T40f269(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4b */
extern T0* T347c937(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4b_error */
extern void T27f269(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4a_error */
extern void T40f268(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs4a */
extern T0* T347c936(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs4a_error */
extern void T27f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T128f1777(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4p_error */
extern void T40f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs4p */
extern T0* T347c934(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs4p_error */
extern void T27f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs4q_error */
extern void T40f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs4q */
extern T0* T347c935(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs4q_error */
extern void T27f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T128f1776(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs11a_error */
extern void T40f265(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs11a */
extern T0* T347c933(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs11_error */
extern T1 T40f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs11a_error */
extern void T27f265(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs11_error */
extern T1 T27f38(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T127f37(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T128f1775(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge764os10674;
extern T0* ge764ov10674;
extern T0* T127f521(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs10a_error */
extern void T40f264(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs10a */
extern T0* T347c932(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs10_error */
extern T1 T40f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs10a_error */
extern void T27f264(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs10_error */
extern T1 T27f37(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T127f42(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge764os10593;
extern T0* ge764ov10593;
extern T0* T127f39(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T128f1774(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9k_error */
extern void T40f263(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9k */
extern T0* T347c931(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs9_error */
extern T1 T40f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs9k_error */
extern void T27f263(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs9_error */
extern T1 T27f36(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge764os10671;
extern T0* ge764ov10671;
extern T0* T127f519(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9j_error */
extern void T40f262(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9j */
extern T0* T347c930(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9j_error */
extern void T27f262(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge764os10631;
extern T0* ge764ov10631;
extern T0* T127f517(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9i_error */
extern void T40f261(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9i */
extern T0* T347c929(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9i_error */
extern void T27f261(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge764os10648;
extern T0* ge764ov10648;
extern T0* T127f515(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9h_error */
extern void T40f260(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9h */
extern T0* T347c928(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9h_error */
extern void T27f260(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge764os10641;
extern T0* ge764ov10641;
extern T0* T127f513(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9g_error */
extern void T40f259(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9g */
extern T0* T347c927(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9g_error */
extern void T27f259(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge764os10627;
extern T0* ge764ov10627;
extern T0* T127f511(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9f_error */
extern void T40f258(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9f */
extern T0* T347c926(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9f_error */
extern void T27f258(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge764os10596;
extern T0* ge764ov10596;
extern T0* T127f509(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9e_error */
extern void T40f257(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9e */
extern T0* T347c925(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9e_error */
extern void T27f257(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge764os10592;
extern T0* ge764ov10592;
extern T0* T127f507(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9d_error */
extern void T40f256(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9d */
extern T0* T347c924(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9d_error */
extern void T27f256(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge764os10634;
extern T0* ge764ov10634;
extern T0* T127f505(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9c_error */
extern void T40f255(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9c */
extern T0* T347c923(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9c_error */
extern void T27f255(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge764os10633;
extern T0* ge764ov10633;
extern T0* T127f503(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9b_error */
extern void T40f254(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9b */
extern T0* T347c922(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9b_error */
extern void T27f254(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge764os10632;
extern T0* ge764ov10632;
extern T0* T127f501(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs9a_error */
extern void T40f253(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs9a */
extern T0* T347c921(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs9a_error */
extern void T27f253(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T127f500(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge764os10630;
extern T0* ge764ov10630;
extern T0* T127f498(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T128f1773(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs7b_error */
extern void T40f252(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs7b */
extern T0* T347c920(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs7_error */
extern T1 T40f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs7b_error */
extern void T27f252(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs7_error */
extern T1 T27f35(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge764os10577;
extern T0* ge764ov10577;
extern T0* T127f496(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs7a_error */
extern void T40f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs7a */
extern T0* T347c919(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs7a_error */
extern void T27f251(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T127f495(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge764os10576;
extern T0* ge764ov10576;
extern T0* T127f493(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T128f1772(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6f_error */
extern void T40f250(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6f */
extern T0* T347c918(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs6_error */
extern T1 T40f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs6f_error */
extern void T27f250(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs6_error */
extern T1 T27f34(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge764os10608;
extern T0* ge764ov10608;
extern T0* T127f491(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6e_error */
extern void T40f249(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6e */
extern T0* T347c917(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs6e_error */
extern void T27f249(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6d_error */
extern void T40f248(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6d */
extern T0* T347c916(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs6d_error */
extern void T27f248(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge764os10661;
extern T0* ge764ov10661;
extern T0* T127f487(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6c_error */
extern void T40f247(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6c */
extern T0* T347c915(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs6c_error */
extern void T27f247(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T128f1771(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6a_error */
extern void T40f245(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6a */
extern T0* T347c913(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs6a_error */
extern void T27f245(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs6b_error */
extern void T40f246(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs6b */
extern T0* T347c914(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs6b_error */
extern void T27f246(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T128f1770(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5f_error */
extern void T40f244(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5f */
extern T0* T347c912(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs5_error */
extern T1 T40f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs5f_error */
extern void T27f244(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs5_error */
extern T1 T27f33(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge764os10626;
extern T0* ge764ov10626;
extern T0* T127f482(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5g_error */
extern void T40f242(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5g */
extern T0* T347c910(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5g_error */
extern void T27f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge764os10644;
extern T0* ge764ov10644;
extern T0* T127f478(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5c_error */
extern void T40f243(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5c */
extern T0* T347c911(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5c_error */
extern void T27f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge764os10616;
extern T0* ge764ov10616;
extern T0* T127f480(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5b_error */
extern void T40f241(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5b */
extern T0* T347c909(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5b_error */
extern void T27f241(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge764os10622;
extern T0* ge764ov10622;
extern T0* T127f476(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5e_error */
extern void T40f240(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5e */
extern T0* T347c908(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5e_error */
extern void T27f240(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge764os10621;
extern T0* ge764ov10621;
extern T0* T127f474(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5a_error */
extern void T40f239(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5a */
extern T0* T347c907(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5a_error */
extern void T27f239(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge764os10610;
extern T0* ge764ov10610;
extern T0* T127f472(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5d_error */
extern void T40f238(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5d */
extern T0* T347c906(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5d_error */
extern void T27f238(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T127f468(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge764os10609;
extern T0* ge764ov10609;
extern T0* T127f470(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T128f1769(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5h_error */
extern void T40f236(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5h */
extern T0* T347c904(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5h_error */
extern void T27f236(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs5i_error */
extern void T40f237(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs5i */
extern T0* T347c905(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs5i_error */
extern void T27f237(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T128f1768(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3f_error */
extern void T40f235(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs3f */
extern T0* T347c903(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs3_error */
extern T1 T40f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs3f_error */
extern void T27f235(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs3_error */
extern T1 T27f32(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3e_error */
extern void T40f234(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs3e */
extern T0* T347c902(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs3e_error */
extern void T27f234(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3d_error */
extern void T40f233(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs3d */
extern T0* T347c901(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs3d_error */
extern void T27f233(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge764os10639;
extern T0* ge764ov10639;
extern T0* T127f461(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3a_error */
extern void T40f232(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs3a */
extern T0* T347c900(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs3a_error */
extern void T27f232(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge764os10597;
extern T0* ge764ov10597;
extern T0* T127f459(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T128f1767(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3b_error */
extern void T40f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs3b */
extern T0* T347c898(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs3b_error */
extern void T27f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs3c_error */
extern void T40f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkbs3c */
extern T0* T347c899(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvkbs3c_error */
extern void T27f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T128f1766(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2f_error */
extern void T40f227(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2f */
extern T0* T347c895(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs2_error */
extern T1 T40f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs2f_error */
extern void T27f227(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs2_error */
extern T1 T27f31(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge764os10574;
extern T0* ge764ov10574;
extern T0* T127f450(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2e_error */
extern void T40f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2e */
extern T0* T347c894(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs2e_error */
extern void T27f226(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge764os10603;
extern T0* ge764ov10603;
extern T0* T127f448(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2d_error */
extern void T40f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2d */
extern T0* T347c893(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs2d_error */
extern void T27f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2a_error */
extern void T40f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2a */
extern T0* T347c892(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs2a_error */
extern void T27f224(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge764os10673;
extern T0* ge764ov10673;
extern T0* T127f446(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2b_error */
extern void T40f229(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2b */
extern T0* T347c897(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs2b_error */
extern void T27f229(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge764os10646;
extern T0* ge764ov10646;
extern T0* T127f34(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs2c_error */
extern void T40f228(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs2c */
extern T0* T347c896(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs2c_error */
extern void T27f228(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T127f445(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge764os10638;
extern T0* ge764ov10638;
extern T0* T127f452(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T128f1765(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1k_error */
extern void T40f222(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1k */
extern T0* T347c890(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs1_error */
extern T1 T40f30(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs1k_error */
extern void T27f222(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbs1_error */
extern T1 T27f30(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge764os10601;
extern T0* ge764ov10601;
extern T0* T127f440(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1j_error */
extern void T40f221(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1j */
extern T0* T347c889(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1j_error */
extern void T27f221(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge764os10629;
extern T0* ge764ov10629;
extern T0* T127f438(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1i_error */
extern void T40f220(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1i */
extern T0* T347c888(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1i_error */
extern void T27f220(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge764os10655;
extern T0* ge764ov10655;
extern T0* T127f436(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1h_error */
extern void T40f219(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1h */
extern T0* T347c887(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1h_error */
extern void T27f219(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge764os10656;
extern T0* ge764ov10656;
extern T0* T127f434(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1g_error */
extern void T40f218(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1g */
extern T0* T347c886(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1g_error */
extern void T27f218(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge764os10606;
extern T0* ge764ov10606;
extern T0* T127f432(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1f_error */
extern void T40f217(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1f */
extern T0* T347c885(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1f_error */
extern void T27f217(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge764os10607;
extern T0* ge764ov10607;
extern T0* T127f430(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1e_error */
extern void T40f216(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1e */
extern T0* T347c884(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1e_error */
extern void T27f216(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge764os10598;
extern T0* ge764ov10598;
extern T0* T127f428(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1d_error */
extern void T40f215(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1d */
extern T0* T347c883(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1d_error */
extern void T27f215(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge764os10650;
extern T0* ge764ov10650;
extern T0* T127f426(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1b_error */
extern void T40f214(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1b */
extern T0* T347c882(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1b_error */
extern void T27f214(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge764os10654;
extern T0* ge764ov10654;
extern T0* T127f424(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1a_error */
extern void T40f213(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1a */
extern T0* T347c881(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1a_error */
extern void T27f213(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge764os10668;
extern T0* ge764ov10668;
extern T0* T127f420(T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge764os10672;
extern T0* ge764ov10672;
extern T0* T127f423(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs1c_error */
extern void T40f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbs1c */
extern T0* T347c891(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvkbs1c_error */
extern void T27f223(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T127f422(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge764os10653;
extern T0* ge764ov10653;
extern T0* T127f442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T128f1244(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T128f1243(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T218f172(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T225f72(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T225f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T225f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T225f68(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T128f1242(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T128f1241(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T128f1240(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T128f1239(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T128f1238(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T128f1237(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T310f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T311f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T311f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T311f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T311f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T311f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T128f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T128f1746(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T133f82(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T128f1764(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T128f1763(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T128f1762(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T128f1761(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T128f1760(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge764os10675;
extern T0* ge764ov10675;
extern T0* T127f522(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T128f1759(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T128f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T128f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T128f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T128f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T128f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T128f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T128f1752(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T128f1751(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T128f1750(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T128f1749(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T128f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T128f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T128f1234(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T128f1233(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T218f168(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T588f74(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T588f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T588f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T588f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T588f69(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T588c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T588f2(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T588f68p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T128f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T128f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T128f1230(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T128f1229(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T128f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T128f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T128f1226(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T128f1225(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T128f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T128f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T128f1222(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T128f1221(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T218f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T190f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T190c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge764os10753;
extern T0* ge764ov10753;
extern T0* T127f689(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T136c30(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T190f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T128f1220(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T128f1219(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T218f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T188f68(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T188c67(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T188f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T128f1218(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T128f1217(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T218f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T191f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T191c65(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T191f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T128f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T128f1215(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T128f1733(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T209f23(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T209f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T209f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T309f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T209f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T309f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T209f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T209f29(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T209f33(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T209f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T209f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T209f34(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T309f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T209f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T209f26(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T209f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T209f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T209f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T209f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T209f8(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T209f9(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T39f182(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T128f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T593f29(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T128f1214(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T218f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T128f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T128f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T128f1211(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T128f1732(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T363f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T363f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T362f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T362f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T209f20(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T209f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T309f3(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T209f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T209f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T209f19(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T128f1210(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T128f1209(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T128f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T210f23(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T210f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T210f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T312f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T210f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T312f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T210f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T210f29(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T210f33(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T210f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T210f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T210f34(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T312f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T210f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T210f26(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T210f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T210f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T210f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T210f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T210f8(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T210f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T128f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T133f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T128f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T128f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T128f1206(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T128f1205(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T128f1730(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T210f20(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T210f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T312f3(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T210f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T210f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T210f19(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T128f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T128f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T128f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T128f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T128f1200(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T128f1199(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T572f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T571f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T571f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T571f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T571f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T571f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T571c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T572f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T901c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T572c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T218f160(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T379c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge764os10722;
extern T0* ge764ov10722;
extern T0* T127f100(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T136c62(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T379f2(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T218f152(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T128f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T128f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T128f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T128f1195(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T462f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T128f1194(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T570f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T463f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T463f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T463f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T463f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T463f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T463c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T570f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T900c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T570c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T218f159(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T462c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge537os5143;
extern T0* ge537ov5143;
extern T0* T462f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T128f1193(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T128f1729(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T209f18(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T209f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T209f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T210f18(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T210f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T210f24(T0* C);
/* ET_CLASS.set_procedures */
extern void T43f173(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T118f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T118f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T209f7(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T43f172(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T116f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T116f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T210f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T128f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T128f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T128f1190(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T569f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T568f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T568f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T568f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T568f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T568f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T568c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T569f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T899c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T569c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T218f158(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T128f1189(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T755f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T128f1188(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T566f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T562f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T562f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T562f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T562f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T562f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T562c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T566f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T898c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T566c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T218f157(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T755f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T755c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T755f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge855os5143;
extern T0* ge855ov5143;
extern T0* T755f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T755f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T128f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T128f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T128f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T128f1184(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T564f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T557f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T557f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T557f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T557f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T557f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T557c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T564f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T897c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T564c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T218f156(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T565c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T565f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T128f1183(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T218f155(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T563c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge764os10681;
extern T0* ge764ov10681;
extern T0* T127f63(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T257c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T563f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T128f1182(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T560f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T559f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T559f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T559f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T559f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T559f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T559c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T560f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T896c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T560c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T218f154(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T128f1181(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T460f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T128f1180(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T555f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T461f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T461f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T461f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T461f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T461f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T461c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T555f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T895c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T555c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T218f153(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T460c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T460f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge528os5143;
extern T0* ge528ov5143;
extern T0* T460f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge764os10708;
extern T0* ge764ov10708;
extern T0* T127f99(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T136c61(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T460f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T128f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T128f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T128f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T128f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T128f1175(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T128f1174(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T550f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T502f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T502f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T502f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T502f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T502f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T218f149(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T128f1173(T0* C);
/* ET_CREATOR.put_first */
extern void T552f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T128f1172(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T554f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T553f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T553f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T553f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T553f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T553f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T553c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T554f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T894c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T554c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T218f151(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T552c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T552f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T552f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge764os10710;
extern T0* ge764ov10710;
extern T0* T127f104(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T136c66(void);
/* ET_CREATOR.tokens */
extern T0* T552f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T128f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T128f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T128f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T128f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T128f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T128f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T128f946(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T128f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T128f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T128f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T128f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T128f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T128f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T128f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T128f1158(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T551f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T459f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T459f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T459f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T459f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T459f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T459c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T551f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T893c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T551c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T128f1157(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T458f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T128f1156(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T218f150(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T458c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge532os5143;
extern T0* ge532ov5143;
extern T0* T458f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T128f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T128f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T128f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T128f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T128f1151(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T341f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T128f1150(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T549f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T525f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T525f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T525f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T525f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T525f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T525c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T549f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T891c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T549c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T218f148(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T341c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T341f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T341f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge764os10742;
extern T0* ge764ov10742;
extern T0* T127f109(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T136c71(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T341f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T128f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T128f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T128f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T128f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T128f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T128f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T128f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T128f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T128f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T128f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T128f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T128f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T128f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T128f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T128f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T128f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T128f1133(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T548f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T547f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T547f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T547f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T547f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T547f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T218f147(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T128f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T128f1131(T0* C);
/* ET_CLIENTS.put_first */
extern void T378f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T128f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T128f1129(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T545f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T538f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T538f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T538f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T538f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T538f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T538c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T545f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T889c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T545c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T218f146(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T378f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T378c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T378f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T378f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T378f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T128f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T128f1127(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T218f145(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T378c18(void);
/* ET_CLIENTS.make */
extern void T378f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T128f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T128f1125(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T128f1124(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T541f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T128f1123(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T544f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T542f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T542f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T542f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T542f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T542f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T542c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T544f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T888c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T544c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T218f143(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T541c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T541f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T541f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T128f1122(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T128f1121(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T540f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T537f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T537f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T537f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T537f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T537f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T537c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T540f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T887c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T540c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T218f144(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T128f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T128f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T128f1118(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T128f1117(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T218f142(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T539c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge764os10701;
extern T0* ge764ov10701;
extern T0* T127f718(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T136c24(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T539f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T128f1116(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T535f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T524f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T524f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T524f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T524f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T524f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T524c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T535f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T886c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T535c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T128f1115(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T340f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T128f1114(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T218f141(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T340c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T340f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge535os5143;
extern T0* ge535ov5143;
extern T0* T340f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge764os10720;
extern T0* ge764ov10720;
extern T0* T127f93(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T136c55(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T340f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T128f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T128f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T128f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T128f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T128f1109(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T128f1108(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T534f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T530f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T530f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T530f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T530f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T530f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T530c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T534f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T885c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T534c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T218f140(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T533c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge764os10702;
extern T0* ge764ov10702;
extern T0* T127f73(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T136c35(void);
/* ET_RENAME.tokens */
extern T0* T533f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T128f1107(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T218f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T128f1106(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T339f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T128f1105(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T528f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T523f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T523f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T523f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T523f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T523f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T523c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T528f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T884c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T528c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T218f138(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T339c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T339f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge560os5143;
extern T0* ge560ov5143;
extern T0* T339f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge764os10744;
extern T0* ge764ov10744;
extern T0* T127f96(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T136c58(void);
/* ET_RENAME_LIST.tokens */
extern T0* T339f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T128f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T128f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T128f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T128f1101(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T128f1100(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T527f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T526f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T526f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T526f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T526f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T526f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T526c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T527f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T883c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T527c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T218f137(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T128f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T128f1098(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T342f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T128f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T128f1096(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T128f1095(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T519f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T457f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T457f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T457f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T457f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T457f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T457c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T519f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T881c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T519c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T218f136(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T342c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T342f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge555os5143;
extern T0* ge555ov5143;
extern T0* T342f8(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge764os10728;
extern T0* ge764ov10728;
extern T0* T127f101(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T136c63(void);
/* ET_PARENT_LIST.tokens */
extern T0* T342f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T128f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T128f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T128f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T128f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T128f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T128f1089(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T522f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T521f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T521f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T521f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T521f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T521f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T521c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T522f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T882c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T522c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T128f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T218f317(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T336c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T336f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T336f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T337f13(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T130f11(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T43f43(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T337f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T128f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T128f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T128f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T128f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T128f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T128f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T128f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T128f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T128f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T128f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T128f1078(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T128f1077(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T518f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T456f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T456f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T456f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T456f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T456f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T456c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T518f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T880c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T518c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T218f135(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T128f1076(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T128f1075(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T515f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T513f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T513f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T513f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T513f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T513f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T513c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T515f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T879c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T515c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T218f134(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T218f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T516c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T128f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T128f1073(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T128f1728(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T503f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T218f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T517c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T503f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T503f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T128f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T128f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T128f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T128f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T128f1068(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T511f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T504f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T504f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T504f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T504f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T504f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T504c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T511f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T878c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T511c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T218f130(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T503f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T503c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T503f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge830os5143;
extern T0* ge830ov5143;
extern T0* T503f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T503f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T128f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T128f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T128f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T128f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T128f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T128f1062(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T218f131(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T128f1061(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T128f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T218f313(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T505c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T218f312(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T794c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T128f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T128f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T128f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T128f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T128f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T128f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T128f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T128f1053(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T506f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T496f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T496f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T496f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T128f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T128f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T128f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T128f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T128f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T128f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T128f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T128f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T128f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T128f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T128f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T128f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T128f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T128f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T128f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T128f1037(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T498f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T128f1036(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T500f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T499f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T499f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T499f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T499f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T499f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T499c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T500f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T875c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T500c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T218f128(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T498c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T498f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T498f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T498f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T128f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T128f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T128f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T128f1032(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T128f1031(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T495f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T490f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T490f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T490f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T490f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T490f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T128f1727(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T367f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T367f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T367f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T367f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T218f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T497f64(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T497c63(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T497f65(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge764os10677;
extern T0* ge764ov10677;
extern T0* T127f69(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T257c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T497f2(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T128f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T128f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T128f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T128f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T128f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T128f1026(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T128f1025(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T218f126(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T489f62(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T489c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T128f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T128f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T128f1022(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T493f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T492f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T492f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T492f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T492f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T492f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T492c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T493f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T873c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T493c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T218f125(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T128f1021(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T337f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T497f67(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T489f63(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T337f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T337f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T128f1020(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T488f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T487f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T487f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T487f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T487f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T487f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T487c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T488f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T872c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T488c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T218f124(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T337f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T337c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T337f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge542os5143;
extern T0* ge542ov5143;
extern T0* T337f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T337f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T128f1019(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T128f1018(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T128f1724(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T367f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T367f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T367f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T838f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T838f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T337f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T497f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T367f1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T337f2(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T43f171(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T128f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T128f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T128f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T128f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T128f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T128f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T128f1011(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T43f167(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T43f166(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T43f174(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T43f165(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T128f578(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T40f209(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T27f209(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T43f42(T0* C);
/* ET_CLASS.set_name */
extern void T43f178(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T128f880(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T128f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T128f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T128f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T128f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T486f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T479f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T479f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T479f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T479f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T479f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T479c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T486f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T871c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T486c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T218f123(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T128f1006(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T480f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T476f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T476f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T476f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T476f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T476f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T476c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T480f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T870c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T480c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T218f122(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T483c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T483f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T128f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T128f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T128f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T128f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T128f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T128f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T128f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T128f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T128f997(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T128f996(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T477f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T470f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T470f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T470f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T470f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T470f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T470c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T477f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T869c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T477c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T218f121(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T128f995(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T218f120(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T128f994(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T128f993(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T472f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T468f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T468f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T468f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T468f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T468f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T468c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T472f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T868c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T472c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T218f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T128f992(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T218f117(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T128f991(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T128f990(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T466f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T454f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T454f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T454f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T454f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T454f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T454c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T466f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T867c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T466c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T128f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T128f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T128f987(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T128f986(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T218f116(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T128f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T128f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T128f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T128f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T128f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T128f980(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T128f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T128f1718(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T368f38(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T368f52(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T368f51(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T368f50(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T368f49(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T368f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T839f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T839f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T368f41(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T368f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T368f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T368f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T368f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T368f56(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T368f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T368f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T368f3(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T368f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T368f2(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T368f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T368f39(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T368f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T368f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T368f27(T0* C);
/* ET_CLASS.set_providers */
extern void T43f170(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T128f978(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T128f1717(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T128f1716(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T40f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T347c868(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T40f23(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T27f194(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T27f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T39f181(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge764os10670;
extern T0* ge764ov10670;
extern T0* T127f239(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T39f180(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge764os10599;
extern T0* ge764ov10599;
extern T0* T127f238(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T40f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T347c867(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T40f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T27f193(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T27f20(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T39f179(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T43f209(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T43f208(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T43f207(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T43f206(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T43f205(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T43f204(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T43f203(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T43f202(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T336f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T342f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T342f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T128f977(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T128f976(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T43f201(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T128f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T128f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T128f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T128f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T128f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T128f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T128f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T128f968(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T128f967(T0* C);
/* ET_CLASS.set_leading_break */
extern void T43f200(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T128f966(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T128f929(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T439f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T438f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T438f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T438f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T438f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T438f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T438c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T439f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T865c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T439c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T436f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T435f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T435f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T435f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T435f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T435f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T435c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T436f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T864c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T436c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T431f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T430f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T430f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T430f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T430f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T430f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T430c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T431f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T862c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T431c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T428f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T427f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T427f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T427f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T427f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T427f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T427c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T428f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T861c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T428c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T425f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T424f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T424f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T424f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T424f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T424f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T424c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T425f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T860c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T425c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T422f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T421f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T421f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T421f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T421f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T421f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T421c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T422f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T859c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T422c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T420f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T419f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T419f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T419f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T419f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T419f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T419c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T420f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T858c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T420c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T415f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T414f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T414f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T414f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T414f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T414f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T414c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T415f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T856c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T415c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T412f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T411f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T411f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T411f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T411f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T411f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T411c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T412f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T855c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T412c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T409f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T408f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T408f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T408f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T408f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T408f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T408c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T409f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T854c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T409c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T406f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T405f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T405f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T405f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T405f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T405f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T405c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T406f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T853c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T406c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T401f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T400f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T400f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T400f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T400f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T400f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T400c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T401f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T851c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T401c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T398f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T397f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T397f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T397f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T397f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T397f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T397c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T398f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T850c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T398c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T395f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T394f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T394f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T394f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T394f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T394f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T394c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T395f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T849c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T395c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T392f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T391f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T391f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T391f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T391f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T391f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T391c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T392f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T848c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T392c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T388f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T387f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T387f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T387f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T387f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T387f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T387c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T388f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T846c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T388c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T385f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T384f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T384f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T384f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T384f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T384f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T384c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T385f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T845c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T385c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T128f928(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T128f926(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T128f945(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T128f951(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T128f955(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T128f381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T128f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T128f965(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T128f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T128f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T128f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T128f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T128f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T128f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T128f925(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T128f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T128f964(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T128f953(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T218f15(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T218f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T218f13(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T447f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T447c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T447f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T128f860(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T218f12(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T446f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T446c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T446f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T218f11(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T445f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T445c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T445f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T218f10(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T444f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T444c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T444f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T218f9(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T443f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T443c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T443f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T218f8(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T393f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T393c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T393f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T40f193(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T27f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T40f190(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T27f183(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T40f189(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T27f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T40f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T27f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T40f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T27f180(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T218f7(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T442f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T128f863(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T442c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T442f34(T0* C);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T108f1(T0* C, T6 a1);
/* INTEGER_32.to_character */
extern T2 T6f16(T6* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T128f887(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T218f6(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T441f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T128f862(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T441c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T441f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T128f406(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T128f404(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T128f1745(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T128f402(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T128f963(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T218f5(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T359f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T40f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T27f175(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T218f4(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T440f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T128f861(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T440c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T440f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T128f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T218f115(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T452f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T452c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T452f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T40f199(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T27f192(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T40f198(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T27f191(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T128f961(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T218f114(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T451f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T451c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T451f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T40f197(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T27f190(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T218f3(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T407f47(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T407c46(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T407f4(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T407f48(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T407f49(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T128f954(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T128f960(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T128f959(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T218f113(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T136f23(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T136c34(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T218f112(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T386f18(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T218f111(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T218f110(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge764os10704;
extern T0* ge764ov10704;
extern T0* T127f111(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T136c73(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T218f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge764os10752;
extern T0* ge764ov10752;
extern T0* T127f110(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T136c72(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T218f108(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T136c33(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T218f107(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T218f106(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge764os10735;
extern T0* ge764ov10735;
extern T0* T127f108(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T136c70(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T218f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge764os10726;
extern T0* ge764ov10726;
extern T0* T127f107(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T136c69(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T218f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge764os10721;
extern T0* ge764ov10721;
extern T0* T127f106(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T136c68(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T218f103(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T136c32(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T218f102(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T218f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T218f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T218f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T218f98(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge764os10729;
extern T0* ge764ov10729;
extern T0* T127f102(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T136c64(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T218f97(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T218f96(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T413f47(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T413c51(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T218f95(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T218f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T218f93(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T180f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T218f92(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T218f91(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge764os10748;
extern T0* ge764ov10748;
extern T0* T127f98(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T136c60(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T218f90(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T171f28(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T218f89(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T218f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T218f87(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge764os10741;
extern T0* ge764ov10741;
extern T0* T127f95(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T136c57(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T218f86(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T218f85(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T136c29(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T218f84(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T218f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T218f82(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge764os10716;
extern T0* ge764ov10716;
extern T0* T127f92(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T136c54(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T218f81(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T218f80(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge764os10703;
extern T0* ge764ov10703;
extern T0* T127f90(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T136c52(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T218f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge764os10754;
extern T0* ge764ov10754;
extern T0* T127f89(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T136c51(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T218f78(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T218f77(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T423f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T423c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T423f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T423f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T423f2(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T218f76(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T218f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T218f74(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T450f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T450c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T450f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T450f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T450f2(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T218f73(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T218f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T218f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T218f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T218f69(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T383f57(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T218f68(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T218f67(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T429f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T429c24(void);
/* ET_VOID.make_token */
extern void T429f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T429f27(T0* C);
/* ET_VOID.tokens */
extern T0* T429f2(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T218f66(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T449f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T449c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T449f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T449f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T449f2(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T218f65(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T218f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T218f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T218f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T218f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T218f60(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T413c50(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T218f59(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T218f58(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T413c49(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T218f57(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T218f55(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T218f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T218f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T218f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T218f51(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge764os10725;
extern T0* ge764ov10725;
extern T0* T127f75(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T136c37(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T218f50(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T218f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T218f2(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T128f958(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T218f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T218f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T218f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T218f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T218f44(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T257f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T218f43(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T426f58(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T426c68(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T426f69(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T218f42(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T218f41(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T426c67(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T218f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T426c66(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T218f39(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T257c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T218f38(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T426c65(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T128f389(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T128f957(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T128f956(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T218f37(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge764os10696;
extern T0* ge764ov10696;
extern T0* T127f67(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T257c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T218f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T218f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T218f34(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T258f82(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T218f33(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T218f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T218f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T218f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T218f29(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T437f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T218f28(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T218f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T218f26(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge764os10682;
extern T0* ge764ov10682;
extern T0* T127f62(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T257c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T218f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T127f61(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T432c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T432f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T432f2(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T218f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge764os10684;
extern T0* ge764ov10684;
extern T0* T127f60(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T257c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T218f23(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T426c64(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T218f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T426c63(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T218f21(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T257c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T218f20(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T426c62(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T218f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T426c61(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T218f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T426c60(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T218f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T426c59(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T218f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T426c57(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T128f388(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T128f936(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T128f952(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T128f281(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T128f935(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T128f280(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T128f279(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T128f934(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T128f924(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T128f933(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T128f950(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T128f1714(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T128f1738(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T645f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T672f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T676f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T628f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T562f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T568f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T317f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T727f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T692f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T523f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T530f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T311f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T308f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T578f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T584f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T457f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T526f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T521f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T707f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T456f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T485f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T694f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T698f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T725f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T625f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T580f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T615f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T617f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T508f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T525f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T465f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T639f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T651f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T722f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T470f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T479f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T476f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T468f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T454f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T649f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T487f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T492f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T490f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T586f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T608f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T609f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T502f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T531f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T542f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T463f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T571f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T591f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T532f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T282f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T266f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T524f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T537f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T666f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T668f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T655f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T459f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T553f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T482f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T461f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T559f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T557f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T496f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T499f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T504f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T513f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T294f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T582f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T538f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T547f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T355f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T678f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T684f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T687f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T682f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T640f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T279f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T644f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T729f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T575f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T602f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T739f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T738f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T746f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T744f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T520f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T260f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T660f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T438f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T435f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T433f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T430f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T427f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T424f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T421f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T419f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T416f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T414f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T411f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T89f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T408f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T405f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T403f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T400f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T397f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T394f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T391f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T389f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T387f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T384f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T381f6(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T86f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T128f927(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T128f71(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T128f873(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T128f921(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T365f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T365f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T364f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T364f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T361f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].clear_items */
extern void T361f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T128f921p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T128f921p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T128f47(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T128f46(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T128f870(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T128f45(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T128f869(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T128f868(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T128f867(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T128f44(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge939os12456;
extern T0* ge939ov12456;
extern T0* T128f865(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T128f43(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T41f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T49c191(T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T206c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge916os7314;
extern T0* ge916ov7314;
extern T0* T49f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T49f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge916os7313;
extern T0* ge916ov7313;
extern T0* T49f4(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T49f196(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T49f199(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T49f46(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_mode */
extern void T41f46(T0* C, T1 a1);
/* GEC.is_cat */
extern T1 T21f15(T0* C);
/* ET_SYSTEM.make */
extern T0* T41c45(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T41f49(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T111c8(T0* a1);
/* GEC.is_verbose */
extern T1 T21f14(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T39f156(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T39f167(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T39f178(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T39f177(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge764os10555;
extern T0* ge764ov10555;
extern T0* T127f169(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge764os10570;
extern T0* ge764ov10570;
extern T0* T127f168(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge764os10562;
extern T0* ge764ov10562;
extern T0* T127f165(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge764os10557;
extern T0* ge764ov10557;
extern T0* T127f160(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge764os10573;
extern T0* ge764ov10573;
extern T0* T127f155(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge764os10551;
extern T0* ge764ov10551;
extern T0* T127f154(T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge764os10540;
extern T0* ge764ov10540;
extern T0* T127f122(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T39f73(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T39f176(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge258os1592;
extern T0* ge258ov1592;
extern T0* T39f62(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T39f175(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T39f174(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T39f173(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T39f172(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T39f171(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T39f170(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T39f169(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge258os1597;
extern T0* ge258ov1597;
extern T0* T21f13(T0* C);
/* UT_VERSION.make_latest */
extern T0* T48c13(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T40f159(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T27f159(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T39f155(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T40c158(void);
/* GEC.is_silent */
extern T1 T21f12(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f47(T0* C, T14 a1);
/* GEC.parse_ace_file */
extern void T21f31(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T37f1(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T37f211(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T37f215(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T37f228(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T37f227(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T37f226(T0* C, T6 a1);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T37f145(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T106f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T106f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T106f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T78f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T106c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T105f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T104f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T104f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T104f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T104f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T104f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T104c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T105f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T252c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T105c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T106f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T95f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T37f142(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T78f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T95c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T94f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T247f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T247f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T247f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T247f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T37f141(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T78f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T94c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T247f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T247c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T247f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T765c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T103f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T97f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T97f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T97f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T97f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T97f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T97c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T103f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T251c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T103c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T93f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T93c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T102f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T100f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T100f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T100f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T100f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T100f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T100c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T102f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T250c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T102c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T37f135(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T79f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T79f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T79f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T79f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T79f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T79f14(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T79f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T79f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T79f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T79f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T79f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T79f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T79f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T79f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T79f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T79f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T79f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T79f46(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T237f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T88f31(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T88f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T79f41(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T78f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T37f132(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T37f239(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T38f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T38f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T38f5(T0* C, T0* a1);
/* UT_MESSAGE.default_message */
extern T0* T109f1(T0* C);
/* UT_MESSAGE.message */
extern T0* T109f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern unsigned char ge329os1576;
extern T0* ge329ov1576;
extern T0* T109f6(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* ARRAY [STRING_8].valid_index */
extern T1 T60f4(T0* C, T6 a1);
/* STRING_8.to_integer */
extern T6 T17f14(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T319f1(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T319f16(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T319f22(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T319f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T801f1(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* ARRAY [NATURAL_64].item */
extern T11 T989f4(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2026os15268;
extern T0* ge2026ov15268;
extern T0* T319f13(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T801c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* ARRAY [NATURAL_64].put */
extern void T989f6(T0* C, T11 a1, T6 a2);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* ARRAY [NATURAL_64].make */
extern T0* T989c5(T6 a1, T6 a2);
/* ARRAY [NATURAL_64].make_area */
extern void T989f7(T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make */
extern T0* T988c2(T6 a1);
/* STRING_8.has */
extern T1 T17f30(T0* C, T2 a1);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f24(T6* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T319f21(T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge2023os1256;
extern T0* ge2023ov1256;
extern T0* T17f21(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T319f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T319f19(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T319f18(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c57(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T319f17(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T319c15(void);
/* KL_STRING_ROUTINES.is_integer */
extern T1 T61f7(T0* C, T0* a1);
/* CHARACTER_8.infix ">" */
extern T1 T2f5(T2* C, T2 a1);
/* UT_MESSAGE.string_ */
extern T0* T109f4(T0* C);
/* UT_MESSAGE.make */
extern T0* T109c7(T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T37f189(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T79f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T79f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T79f1(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T79f37(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T92f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T37f130(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T78f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T91c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T246f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T98f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T96f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T96f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T96f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T96f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T96f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T96c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T98f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T248c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T98c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T37f126(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge962os3933;
extern T0* ge962ov3933;
extern T0* T37f204(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T37f169(T0* C, T0* a1);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge962os3934;
extern T0* ge962ov3934;
extern T0* T37f202(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T82f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T82f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T82f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T82f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T82f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T82f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T82f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T82f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T82f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T82f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T82f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T82f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T82f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T82f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T82f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T82f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T82f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T82f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T82f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T82f45(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge962os3935;
extern T0* ge962ov3935;
extern T0* T37f201(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T39f166(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T39f165(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T39f164(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T39f163(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T37f124(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T78f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T39c154(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T264c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T39f168(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge764os10556;
extern T0* ge764ov10556;
extern T0* T127f174(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge764os10568;
extern T0* ge764ov10568;
extern T0* T127f173(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge764os10554;
extern T0* ge764ov10554;
extern T0* T127f172(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge764os10567;
extern T0* ge764ov10567;
extern T0* T127f171(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge764os10569;
extern T0* ge764ov10569;
extern T0* T127f170(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge764os10572;
extern T0* ge764ov10572;
extern T0* T127f167(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge764os10571;
extern T0* ge764ov10571;
extern T0* T127f166(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge764os10566;
extern T0* ge764ov10566;
extern T0* T127f164(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge764os10565;
extern T0* ge764ov10565;
extern T0* T127f163(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge764os10564;
extern T0* ge764ov10564;
extern T0* T127f162(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge764os10563;
extern T0* ge764ov10563;
extern T0* T127f161(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge764os10561;
extern T0* ge764ov10561;
extern T0* T127f159(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge764os10560;
extern T0* ge764ov10560;
extern T0* T127f158(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge764os10559;
extern T0* ge764ov10559;
extern T0* T127f157(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge764os10558;
extern T0* ge764ov10558;
extern T0* T127f156(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge764os10553;
extern T0* ge764ov10553;
extern T0* T127f153(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge764os10552;
extern T0* ge764ov10552;
extern T0* T127f152(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge764os10550;
extern T0* ge764ov10550;
extern T0* T127f151(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T344c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T755c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T755f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge764os10544;
extern T0* ge764ov10544;
extern T0* T127f149(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge764os10543;
extern T0* ge764ov10543;
extern T0* T127f148(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge764os10531;
extern T0* ge764ov10531;
extern T0* T127f147(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge764os10509;
extern T0* ge764ov10509;
extern T0* T127f146(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge764os10517;
extern T0* ge764ov10517;
extern T0* T127f145(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge764os10533;
extern T0* ge764ov10533;
extern T0* T127f144(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge764os10534;
extern T0* ge764ov10534;
extern T0* T127f143(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge764os10538;
extern T0* ge764ov10538;
extern T0* T127f142(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge764os10546;
extern T0* ge764ov10546;
extern T0* T127f141(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge764os10547;
extern T0* ge764ov10547;
extern T0* T127f140(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge764os10532;
extern T0* ge764ov10532;
extern T0* T127f139(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge764os10537;
extern T0* ge764ov10537;
extern T0* T127f138(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge764os10536;
extern T0* ge764ov10536;
extern T0* T127f137(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge764os10529;
extern T0* ge764ov10529;
extern T0* T127f136(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge764os10528;
extern T0* ge764ov10528;
extern T0* T127f135(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge764os10527;
extern T0* ge764ov10527;
extern T0* T127f134(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge764os10526;
extern T0* ge764ov10526;
extern T0* T127f133(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge764os10523;
extern T0* ge764ov10523;
extern T0* T127f132(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge764os10522;
extern T0* ge764ov10522;
extern T0* T127f131(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge764os10521;
extern T0* ge764ov10521;
extern T0* T127f130(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge764os10520;
extern T0* ge764ov10520;
extern T0* T127f129(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge764os10515;
extern T0* ge764ov10515;
extern T0* T127f128(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge764os10514;
extern T0* ge764ov10514;
extern T0* T127f127(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge764os10512;
extern T0* ge764ov10512;
extern T0* T127f126(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge764os10524;
extern T0* ge764ov10524;
extern T0* T127f125(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge764os10539;
extern T0* ge764ov10539;
extern T0* T127f124(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge764os10510;
extern T0* ge764ov10510;
extern T0* T127f123(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge764os10542;
extern T0* ge764ov10542;
extern T0* T127f121(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge764os10541;
extern T0* ge764ov10541;
extern T0* T127f120(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge764os10511;
extern T0* ge764ov10511;
extern T0* T127f119(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge764os10545;
extern T0* ge764ov10545;
extern T0* T127f118(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T335c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T335f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge764os10530;
extern T0* ge764ov10530;
extern T0* T127f117(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge764os10518;
extern T0* ge764ov10518;
extern T0* T127f116(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T110f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T353f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T39f54(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T110c39(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T110f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T353c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T353f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T832c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T110f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T110f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T110f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T110f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T110f55(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T78f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T218c328(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T78f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T27c158(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T82f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T82f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T82f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T242f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T82f58(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T242f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T82f2(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T82f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T82f1(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T82f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T82f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T82f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T82f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T82f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T37f225(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T37f224(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T37f222(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T37f238(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T37f221(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T37f237(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T37f191(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T37f10(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T37f188(T0* C);
/* ET_LACE_PARSER.set_start_condition */
extern void T37f243(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T37f185(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T323f2(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T37f168(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T37f160(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T37f236(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T37f242(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T37f111(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T37f235(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T37f233(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T37f110(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T37f109(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T37f234(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T69f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T69f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T69f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T37f157(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T37f38(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T37f220(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T37f229(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T37f240(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T37f244(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T37f246(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T97f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T104f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T100f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T96f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T99f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T37f223(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T82f37(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T82f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T82f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T82f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T82f47(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T82f46(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T37f214(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T37f219(T0* C);
/* YY_BUFFER.set_position */
extern void T81f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T80f18(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T37f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T79f36(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T79f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T79f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T79f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T79f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T79f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T241f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T241f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T37f213(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T37f218(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T37c210(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T37f212(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T37f217(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T37f232(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge961os3878;
extern T0* ge961ov3878;
extern T0* T37f156(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T37f207(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge961os3877;
extern T0* ge961ov3877;
extern T0* T37f155(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge961os3876;
extern T0* ge961ov3876;
extern T0* T37f154(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge961os3875;
extern T0* ge961ov3875;
extern T0* T37f153(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge961os3874;
extern T0* ge961ov3874;
extern T0* T37f152(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge961os3873;
extern T0* ge961ov3873;
extern T0* T37f151(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge961os3872;
extern T0* ge961ov3872;
extern T0* T37f150(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge961os3871;
extern T0* ge961ov3871;
extern T0* T37f149(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge961os3870;
extern T0* ge961ov3870;
extern T0* T37f148(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge961os3869;
extern T0* ge961ov3869;
extern T0* T37f147(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T37f231(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T37f216(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T37f230(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T37f241(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T37f245(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge963os4316;
extern T0* ge963ov4316;
extern T0* T37f199(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T37f209(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge963os4315;
extern T0* ge963ov4315;
extern T0* T37f198(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge963os4314;
extern T0* ge963ov4314;
extern T0* T37f197(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge963os4313;
extern T0* ge963ov4313;
extern T0* T37f196(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge963os4312;
extern T0* ge963ov4312;
extern T0* T37f195(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge963os4311;
extern T0* ge963ov4311;
extern T0* T37f194(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge963os4310;
extern T0* ge963ov4310;
extern T0* T37f193(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T37f57(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T82c36(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T82f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T242c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T82f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T82f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T82f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T82f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T79c35(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T79f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T239c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T239f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T763c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T79f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T241c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T79f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T79f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T79f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T79f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T79f57(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T237c2(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T78c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T38c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T38f2(T0* C);
/* GEC.parse_ecf_file */
extern void T21f30(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f29(T0* C, T0* a1);
/* STRING_8.is_equal */
extern T1 T17f20(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f23(T0* C, T0* a1, T0* a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f19(T0* C, T6 a1, T6 a2);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f1(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f4(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f39(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f20(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f22(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f15(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T216f1(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T216f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f38(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c38(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f10(T0* C);
/* GEC.parse_arguments */
extern void T21f28(T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T71f3(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T36f1(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T73f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T73f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T234f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T73f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T234f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T73f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T36f3(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T77f1(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T77f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T77f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T77f2(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T77f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge71os3859;
extern T0* ge71ov3859;
extern T0* T36f8(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T77f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T77c9(void);
/* STRING_8.make_filled */
extern T0* T17c43(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f13(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T64f4(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge318os7932;
extern T0* ge318ov7932;
extern T0* T64f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T64f10(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T63f4(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge320os7932;
extern T0* ge320ov7932;
extern T0* T63f14(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T63f13(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T36f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T36f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T36f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T36f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T36f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T30f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T30f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T30f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T76f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T30f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T76f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T30f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T30f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T30f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T30f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T30f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T30f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T30f9(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T36f20(T0* C);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T36f18(T0* C);
/* AP_FLAG.name */
extern T0* T31f8(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T31f9(T0* C);
/* STRING_8.make_empty */
extern T0* T17c41(void);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T73f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T73f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T73f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T73f1(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T73f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T73f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T73f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T73f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T234f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T73f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T73f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T36f2(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T72f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T72f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T230f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T72f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T230f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T72f28(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T36f24(T0* C);
/* AP_FLAG.example */
extern T0* T31f12(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T72f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T72f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T72f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T72f1(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T72f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T72f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T72f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T72f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T230f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T72f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T72f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f34(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T56c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T29f27(T0* C);
/* AP_PARSER.parse_list */
extern void T29f29(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T29f33(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge331os1574;
extern T0* ge331ov1574;
extern T0* T29f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T28c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T74f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T74f10p1(T0* C, T0* a1);
/* AP_PARSER.check_mandatory_options */
extern void T29f32(T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T74f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T74f6(T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T75f12(T0* C);
/* AP_ERROR.message */
extern T0* T75f13(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T75f15(T0* C);
/* AP_ERROR.string_ */
extern T0* T75f14(T0* C);
/* AP_ERROR.make_missing_option_error */
extern T0* T75c16(T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T36f23(T0* C);
/* AP_PARSER.parse_argument */
extern void T29f31(T0* C);
/* AP_PARSER.parse_short */
extern void T29f35(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T36f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T36f41(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T36f28(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T74f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T36f27(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T36f33(T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T36f32(T0* C);
/* AP_FLAG.names */
extern T0* T31f15(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1038f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1038f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1038f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T72f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T72f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1037f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T61f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1037f2(T0* C);
/* AP_PARSER.all_options */
extern T0* T29f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T72f3(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T72c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T72f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T230c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T233f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T761c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T232c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T233c3(void);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1038c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1037c3(void);
/* AP_FLAG.record_occurrence */
extern void T31f23(T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T75c18(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T71f5(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T71f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].cursor_before */
extern T1 T71f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T71f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T36f19(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T31f10(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T75c17(T0* a1);
/* AP_PARSER.parse_long */
extern void T29f34(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T75c19(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T71f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T71f25(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T71f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T71f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T71f23(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T71f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T229f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T71f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T229f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T71f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T71f4(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T71f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T71f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T71f1(T0* C);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T71f22(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T71f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T71f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T229f2(T0* C);
/* AP_PARSER.reset_parser */
extern void T29f30(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T36f39(T0* C);
/* AP_FLAG.reset */
extern void T31f22(T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T74f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T71f21(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T71f26(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T71f31(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T71f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T71f29(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T29f10(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T73f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T73f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T236f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T235f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T235f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T235f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T235f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T235f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T235c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T73f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T73f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T30c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T30f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T30f4(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T76c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T30f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T30f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T31c18(T2 a1, T0* a2);
/* AP_FLAG.initialize */
extern void T31f20(T0* C);
/* AP_FLAG.set_long_form */
extern void T31f19(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T31f21(T0* C, T2 a1);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T72f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T72f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T233f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T232f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T232f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T232f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T232f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T232f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T72f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T72f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T31f17(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T31c16(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T29f26(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T29f25(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T29c24(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T36f35(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T36c34(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T36f38(T0* C);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T36f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T36f36(T0* C, T2 a1);
/* AP_PARSER.make_empty */
extern void T29f28(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T74c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T74f3(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T73c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T73f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T234c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T236f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T762c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T236c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f1(T0* C);
/* KL_EXCEPTIONS.die */
extern void T28f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f5(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T350f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T111f7(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T111f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T226f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T970f3(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T187f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type */
extern void T183f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T183f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T484f13(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T484f17(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T167f52(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T167f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T120f50(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T120f52(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T167f51(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T167f56(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T120f49(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T120f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T120f67(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type */
extern void T172f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T172f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T172f12p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type */
extern void T170f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type */
extern void T169f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type */
extern void T168f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_type */
extern void T164f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_type */
extern void T113f37(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.reset */
extern void T751f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T751f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T818f90(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T717f33(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T716f33(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T426f74(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T413f54(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T407f52(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T689f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T702f12(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T702f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T702f12p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T151f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T702f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T700f12(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T662f14(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T659f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T659f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T662f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T658f14(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T656f13(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T654f7(T0* C);
/* ET_COMPOUND.reset */
extern void T581f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T653f13(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T653f8(T0* C);
/* ET_VARIANT.reset */
extern void T627f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T624f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T650f10(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T671f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T675f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T677f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T650f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T648f12(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T664f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T667f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T667f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T648f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T647f7(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T646f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T641f15(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T423f17(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T152f14(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T152f14p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T702f11(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T700f11(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T662f13(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T658f13(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T656f12(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T654f6(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T653f12(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T650f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T648f11(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T647f6(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T646f6(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T641f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T423f16(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T152f13(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T605f45(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T601f81(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T599f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T598f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T597f65(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T360f64(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T605f46(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T601f82(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T599f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T598f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T597f66(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T360f65(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T605f47(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T601f83(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T445f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T444f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T443f47(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T445f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T444f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T443f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T445f47(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T444f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T443f48(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T445f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T444f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T443f44(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T603f8(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T749f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T437f15(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T749f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T818f89(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T437f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T818f85(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T799f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T740f10(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T799f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T818f91(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T740f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T818f88(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1075f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1068f18(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1062f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T799f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T749f11(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T740f9(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T733f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T726f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T724f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T723f19(T0* C, T6 a1);
/* ET_INLINE_AGENT.set_index */
extern void T721f24(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T720f19(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T719f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T718f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T714f20(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T712f19(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T711f19(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T710f19(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T709f19(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T706f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T705f23(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T691f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T643f19(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T484f26(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T481f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T452f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T451f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T450f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T449f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T447f40(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T446f40(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T445f50(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T444f51(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T443f51(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T440f40(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T437f14(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T429f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T393f33(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T184f30(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T180f32(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T171f30(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T155f26(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T88f97(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T442f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T441f41(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T359f36(T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T717f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T716f34(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T426f75(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T413f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T407f53(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T258f85(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1068f19(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1063f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1062f17(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T733f18(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T726f26(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T724f25(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T723f18(T0* C);
/* ET_INLINE_AGENT.reset */
extern void T721f22(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T737f13(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T720f18(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T719f18(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T718f17(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T714f17(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T712f18(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T711f18(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T710f18(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T709f18(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T706f19(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T705f22(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T691f27(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T691f10(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T691f27p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T691f11(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T643f18(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T728f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T258f84(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T484f25(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T481f21(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T481f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T452f38(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T451f38(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T450f35(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T449f35(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T447f39(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T446f39(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T445f49(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T444f50(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T443f50(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T442f36(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T441f40(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T440f39(T0* C);
/* ET_VOID.reset */
extern void T429f29(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T393f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T359f35(T0* C);
/* ET_CALL_AGENT.reset */
extern void T184f27(T0* C);
/* ET_CURRENT.reset */
extern void T180f31(T0* C);
/* ET_RESULT.reset */
extern void T171f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T155f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T155f29p1(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1068f17(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1063f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1062f15(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T733f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T726f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T724f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T723f17(T0* C, T0* a1);
/* ET_INLINE_AGENT.process */
extern void T721f21(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T720f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T719f17(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T718f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T714f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T712f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T711f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T710f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T709f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T706f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T705f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T691f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T643f17(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T484f24(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T481f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T452f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T451f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T450f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T449f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T447f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T446f35(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T445f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T444f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T443f45(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T442f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T441f39(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T440f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T429f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T393f31(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T359f34(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T184f26(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T180f27(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T171f25(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T155f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T88f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T593f81(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T592f80(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T588f75(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T587f82(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T585f82(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T225f76(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T220f83(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T191f68(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T190f70(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T188f70(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T133f83(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T593f100(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T592f99(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T588f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T587f101(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T585f101(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T225f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T220f99(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T191f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T190f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T188f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T133f102(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T593f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T592f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T588f96(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T587f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T585f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T225f94(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T220f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T191f87(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T190f91(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T188f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T133f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T593f98(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T592f97(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T588f93(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T587f99(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T585f99(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T225f91(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T220f97(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T191f84(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T190f88(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T188f87(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T133f100(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T593f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T592f98(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T588f94(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T587f100(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T585f100(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T225f92(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T220f98(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T191f85(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T190f89(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T188f88(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T133f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T593f102(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T592f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T588f97(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T587f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T585f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T225f95(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T220f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T191f88(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T190f92(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T188f91(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T133f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T593f103(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T592f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T588f98(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T587f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T585f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T225f96(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T220f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T191f89(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T190f93(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T188f92(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T133f105(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T593f93(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T592f92(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T588f88(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T587f94(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T585f94(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T225f86(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T220f92(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T191f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T190f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T188f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T133f95(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T593f104(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T174f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T174f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T174f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T179f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T756f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T179f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T592f103(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T588f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T587f105(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T585f105(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T225f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T220f103(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T191f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T190f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T188f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T133f106(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T593f78(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T592f78(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T588f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T587f80(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T585f80(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T225f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T220f78(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T191f67(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T190f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T188f69(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T133f80(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T593f92(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T592f91(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T588f87(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T587f93(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T585f93(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T225f85(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T220f91(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T191f78(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T190f82(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T188f81(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T133f94(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T593f105(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T592f104(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T588f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T587f106(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T585f106(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T225f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T220f104(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T191f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T190f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T188f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T133f107(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T593f96(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T592f95(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T588f91(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T587f97(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T585f97(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T225f89(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T220f95(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T191f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T190f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T188f85(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T133f98(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T593f97(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T592f96(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T588f92(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T587f98(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T585f98(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T225f90(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T220f96(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T191f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T190f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T188f86(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T133f99(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T593f83(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T592f82(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T588f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T587f84(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T585f84(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T225f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T220f80(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T191f70(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T190f72(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T188f72(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T133f85(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T593f84(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T592f83(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T588f78(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T587f85(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T585f85(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T225f74(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T220f81(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T191f71(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T190f73(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T188f73(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T133f86(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T593f85(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T592f84(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T588f79(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T587f86(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T585f86(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T225f75(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T220f82(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T191f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T190f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T188f74(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T133f87(T0* C);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T820f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T820f95(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T820f157(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T213f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T213f5(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T635f37(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T820f141(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T213f41(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2d_error */
extern void T40f486(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2d */
extern T0* T347c1156(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T40f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2d_error */
extern void T27f486(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T27f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2c_error */
extern void T40f485(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar2c */
extern T0* T347c1155(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar2c_error */
extern void T27f485(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T40f484(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T347c1154(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T27f484(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T40f483(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T347c1153(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T27f483(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vdpr4d_error */
extern void T40f482(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4d */
extern T0* T347c1152(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T40f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4d_error */
extern void T27f482(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T27f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr4c_error */
extern void T40f481(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vdpr4c */
extern T0* T347c1151(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vdpr4c_error */
extern void T27f481(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T728f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T151f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T728f9(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T151f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T820f144(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T820f143(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1062c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T820f142(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1068c16(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T139f9(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T489f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T489f8(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T39f153(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T43f141(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T755f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T460f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T460f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T43f140(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T213f12(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T213f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T40f480(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T347c1150(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T40f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T27f480(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T27f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T40f479(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T347c1149(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T27f479(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T40f478(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T347c1148(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T27f478(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T820f155(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0f_error */
extern void T40f477(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0f */
extern T0* T347c1147(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T40f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0f_error */
extern void T27f477(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T27f132(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vape0e_error */
extern void T40f476(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vape0e */
extern T0* T347c1146(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vape0e_error */
extern void T27f476(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLIENTS.has_any */
extern T1 T378f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T377f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T377f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T40f475(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T347c1145(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T27f475(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T40f474(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T347c1144(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T27f474(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T39f151(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T378f8(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T378f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T377f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T377f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T40f451(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T347c1121(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T40f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T27f451(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T27f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T40f449(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T347c1119(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T40f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T27f449(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T27f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T820f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T39f191(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T821f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T40f447(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T347c1117(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T40f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T27f447(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T27f115(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T40f452(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T347c1122(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T40f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T27f452(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T27f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T820f20(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T820f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T820f38(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T88f79(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T820f63(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T820f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T820f156(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T40f450(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T347c1120(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T40f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T27f450(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T27f118(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T40f448(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T347c1118(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T40f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T27f448(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T27f116(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T40f446(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T347c1116(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T40f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T27f446(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T27f114(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T88f22(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T820f93(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T820f154(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T820f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T139f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T139f8(T0* C);
/* ET_CLASS.ancestor */
extern T0* T43f97(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T348f5(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T139f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T40f445(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T347c1115(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T40f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T27f445(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T27f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T820f92(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T820f153(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T818f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T49f347(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T49f363(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T49f382(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T49f346(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T49f187(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T49f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T49f387(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T49f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T49f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T172c9(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T49f378(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T49f381(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T49f184(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T49f330(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T49f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T49f380(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T49f361(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T49f377(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T49f180(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T49f360(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T49f376(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T44f457(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T44f464(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T167f16(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T120f19(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T145f20(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T145f12(T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T44f463(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T44f462(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T88f21(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T44f461(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T88f20(T0* C);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T820f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T820f164(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T820f207(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T213f43(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T213f34(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T213f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T820f160(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0h_error */
extern void T40f505(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0h */
extern T0* T347c1175(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0h_error */
extern void T27f505(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0g_error */
extern void T40f504(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0g */
extern T0* T347c1174(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0g_error */
extern void T27f504(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T40f503(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T347c1173(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T27f503(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T40f502(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T347c1172(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T27f502(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuex2c_error */
extern void T40f457(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2c */
extern T0* T347c1127(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T40f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2c_error */
extern void T27f457(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T27f121(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T40f456(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T347c1126(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T27f456(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T820f244(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T40f455(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T347c1125(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T27f455(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T40f454(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T347c1124(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T27f454(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T40f453(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T347c1123(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T27f453(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_IDENTIFIER.set_tuple_label */
extern void T88f108(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T820f139(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T209f39(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T210f39(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T209f38(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T209f40(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T210f38(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T210f40(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T211f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T209f37(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T209f43(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T209f42(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T209f41(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T209f44(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T211f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T211f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T211f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T313f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T211f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T211f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T313f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T211f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T211f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T211f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T211f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T211f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T211f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T211f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T211f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T210f37(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T210f43(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T210f42(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T210f41(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T210f44(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T210f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T43f216(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T116f12(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T43f49(T0* C);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T155f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T818f38(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T818f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T49f402(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T49f445(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T49f483(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T49f398(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T49f520(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T138f7(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T49f383(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T44f458(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T44f465(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T44f469(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T44f468(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T44f470(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T820f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T820f162(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T820f205(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T40f487(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T347c1157(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T27f487(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T40f507(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T347c1177(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T27f507(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T40f506(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T347c1176(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T27f506(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T818f36(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T49f400(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T49f443(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T49f481(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T44f459(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T44f466(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T820f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T820f163(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T820f206(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T818f37(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T49f401(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T49f444(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T49f482(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T44f460(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T44f467(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T825f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T824f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T819f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T817f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T816f9(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T815f19(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T814f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T813f10(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T330f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T330f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T43f198(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T330f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T40f402(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T347c1071(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1082f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T980f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1082f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T980f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1082f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T980f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1082f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T980f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1082f3(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T980f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1082f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T980f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T980f1(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1082f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T980f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T980f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T40f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T27f402(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T27f85(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T980f5(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T330f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T342f3(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T342f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T822f14(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T1025f13(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].clear_items */
extern void T1025f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T1025f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1131f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_position */
extern void T1131f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1021f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1021f48(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1021f47(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1021f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1021f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1021f43(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1128f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_position */
extern void T1128f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T980f21(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T980f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T980f25(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T822f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T822f2(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T330f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T824f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T330f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T825f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T825f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T40f436(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_se_fatal */
extern void T347f1027(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T347c1107(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1135f3(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1030f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1135f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1030f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1135f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1030f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1135f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1030f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T497f39(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T489f37(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1135f2(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1030f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1135f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1030f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1030f3(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1135f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1030f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1030f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1030f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T40f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T27f436(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T27f109(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1029f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1134f36(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1134f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1134f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1134f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1134f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1134f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1175f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_position */
extern void T1175f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1030f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1030f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1030f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1029f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T497f71(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T489f67(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1030f2(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T40f435(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ge_fatal */
extern void T347f1106(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T347f1105(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T347c1104(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T27f435(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1029f2(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1029f12(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1024f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1024f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T1024c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T1024f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1030f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].replace */
extern void T1025f16(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].item */
extern T0* T1025f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T1025f1(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1025f3(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].copy */
extern void T1025f17(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1129f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T1025f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T146f12(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T146f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T146f25(T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T83f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T146f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1029f1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T825f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T40f434(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T347c1103(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T40f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T27f434(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T27f108(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T40f433(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T347c1102(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T40f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T27f433(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T27f107(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T825f6(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T825f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T330f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T43f199(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].wipe_out */
extern void T823f41(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_wipe_out */
extern void T823f50(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_wipe_out */
extern void T823f49(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T823f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T823f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].move_all_cursors_after */
extern void T823f45(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_next_cursor */
extern void T981f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_position */
extern void T981f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].forth */
extern void T981f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_forth */
extern void T823f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].add_traversing_cursor */
extern void T823f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T823f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_item */
extern T6 T823f15(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T348f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].item */
extern T0* T981f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_item */
extern T0* T823f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_item */
extern T0* T823f7(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].after */
extern T1 T981f1(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_after */
extern T1 T823f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].start */
extern void T981f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_start */
extern void T823f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_off */
extern T1 T823f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].is_empty */
extern T1 T823f38(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T330f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T348f4(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T213f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].force_new */
extern void T823f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_put */
extern void T823f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_put */
extern void T823f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_put */
extern void T823f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_put */
extern void T823f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_item */
extern T6 T823f17(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].hash_position */
extern T6 T823f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].resize */
extern void T823f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_resize */
extern void T823f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_resize */
extern void T823f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_resize */
extern void T823f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T831f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T830f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T830f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T830f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T830f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T830f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_item */
extern T6 T823f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_resize */
extern void T823f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_capacity */
extern T6 T823f13(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T40f408(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T347f1078(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T347f1026(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T347c1077(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T40f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T27f408(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T27f90(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found_item */
extern T0* T823f4(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found */
extern T1 T823f3(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search */
extern void T823f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search_position */
extern void T823f51(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T40f407(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T347c1076(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T40f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T27f407(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T27f89(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T40f406(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T347c1075(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T40f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T27f406(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T27f88(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T40f405(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T347c1074(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T40f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T27f405(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T27f87(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T40f404(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T347c1073(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T40f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T27f404(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T27f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T40f403(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T347c1072(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T27f403(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T980f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T822f13(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T980f20(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T330f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T330f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T822f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T822f20(T0* C, T6 a1, T6 a2);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T1022f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T1022c3(T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T822f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T822f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1021f3(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1021f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1021f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1021f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1021f41(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1021f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1021f17(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1021f16(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1021f18(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T822f15(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T822f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].put_last */
extern void T1025f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T146f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put */
extern void T1021f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1021f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1021f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1021f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1021f55(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].resize */
extern void T1025f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].resize */
extern T0* T1130f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1129f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1129f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].move_data */
extern void T1129f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1129f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1129f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1021f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1021f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1021f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1021f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1021f49(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T980f22(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T822f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T822f4(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1021f1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T330f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T43f197(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T330f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T328f18(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T43f212(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T328f23(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T43f215(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T328f22(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T43f214(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T43f213(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T328f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T368f70(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T839f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T368f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T839f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T839f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T839f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T368f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T368f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T368f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T368f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T368f73(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T328f25(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T820f35(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T464f28(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T464f27(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0b_error */
extern void T40f466(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0b */
extern T0* T347c1136(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T40f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0b_error */
extern void T27f466(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T27f127(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T40f465(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T347c1135(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T27f465(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.assertion */
extern T0* T464f10(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T464f19(T0* C, T6 a1);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T464f26(T0* C);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T39f190(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T328f24(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T328f26(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T967f1(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T820f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_POSTCONDITIONS.assertion */
extern T0* T583f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T583f8(T0* C, T6 a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T228f2(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.any_ */
extern T0* T820f21(T0* C);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T820f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_PRECONDITIONS.assertion */
extern T0* T577f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T577f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T820f34(T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T328f20(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T328c19(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T328f11(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T43f211(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T328f10(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T327f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T327f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T43f182(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T327f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T327f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T819f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T819f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T980f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T980f24(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T980f2(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T327f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T327f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T40f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T347c987(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T40f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T27f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T27f42(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T40f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T347c986(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T27f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T40f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T347c985(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T40f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T27f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T27f41(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T498f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T498f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T489f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T327f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T43f181(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T327f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T326f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T326f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T43f195(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T326f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T326f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T803f52(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T803f66(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T803f65(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T803f64(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T803f63(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T803f61(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T990f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T990f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T326f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T803f8(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T803f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T803f7(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T803f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T803f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T803f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T803f29(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T804f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T803f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T803f25(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T326f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T40f373(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T347c1042(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T40f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T27f373(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T27f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T40f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T347c1041(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T27f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T40f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T347c1040(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T40f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T27f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T27f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T40f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T347c1039(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T27f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T40f369(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T347c1038(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T27f369(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T552f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T552f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T458f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T40f368(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T347c1037(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T552f12(T0* C);
/* ET_CREATOR.first */
extern T0* T552f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T378f13(T0* C);
/* ET_CLIENTS.first */
extern T0* T378f15(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T378f14(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T552f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T40f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T27f368(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T27f68(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T458f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T458f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T326f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4b_error */
extern void T40f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4b */
extern T0* T347c1036(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T40f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4b_error */
extern void T27f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T27f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3b_error */
extern void T40f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3b */
extern T0* T347c1035(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T40f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3b_error */
extern void T27f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T27f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T40f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T347c1034(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T27f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T40f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T347c1033(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T27f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T40f363(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T347c1032(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T40f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T27f363(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T27f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T40f362(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T347c1031(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T40f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T27f362(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T27f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T40f361(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T347c1030(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T27f361(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T40f357(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T347c1024(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T40f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T27f357(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T27f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T40f356(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T347c1023(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T40f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T27f356(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T27f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T40f355(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T347c1022(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T976f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T973f11(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T973f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T27f355(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T803f51(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T803f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T803f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T803f33(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T43f196(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T806f39(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T806f52(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T806f51(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T806f50(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T806f49(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T806f48(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T998f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T998f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T803f50(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T803f59(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T803f69(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T326f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T815f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1020f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1019f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1019f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1020f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1019f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1020f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T815f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T40f432(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T347c1101(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T40f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T27f432(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T27f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T40f431(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T347c1100(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T27f431(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T815f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T815f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1020f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1020f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1019f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1019f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1019f1(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1020c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T973f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T815f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T40f430(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T347c1099(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T40f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T27f430(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T27f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T40f429(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T347c1098(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T27f429(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T40f428(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T347c1097(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T27f428(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T815f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T40f427(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T347c1096(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T40f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T27f427(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T27f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T40f426(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T347c1095(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T27f426(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T40f425(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T347c1094(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T27f425(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T815f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T806f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T806f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T806f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T806f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T806f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T806f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T806f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T806f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T806f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T806f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T995f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T991f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T991f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T991f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T991f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T991f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T806f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T806f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T806f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T806f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T806f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T806f41(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T807f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T40f354(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T347c1021(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T40f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T27f354(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T27f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T40f353(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T347c1020(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T27f353(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T40f352(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T347c1019(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T40f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T27f352(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T27f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T40f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T347c1018(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T973f18(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T27f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T40f350(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T347c1017(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T27f350(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T40f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T347c1016(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T27f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T40f348(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T347c1015(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T27f348(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T40f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T347c1014(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T27f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T40f346(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T347c1013(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T27f346(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T806f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T806f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T806f1(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T806f37(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T803f4(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T803f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T803f49(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T803f58(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T803f32(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T326f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T814f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1017f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1122f36(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1122f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1122f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1122f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1122f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1122f41(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1167f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_position */
extern void T1167f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1018f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1018f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1018f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1125f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1125f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1017f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T40f424(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T347c1093(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1125f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1018f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1018f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1018f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1125f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1018f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1125f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1018f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1018f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1018f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1125f3(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1018f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1018f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1125f2(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1125f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1018f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1018f2(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T40f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T27f424(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T27f104(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T814f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T814f8(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1017f1(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1017f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1018f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T40f345(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T347c1012(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T40f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T27f345(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T27f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T40f344(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T347c1011(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T27f344(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T40f343(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T347c1010(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T27f343(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T40f342(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T347c1009(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T27f342(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T40f341(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T347c1008(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T27f341(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T40f340(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T347c1007(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T27f340(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T40f339(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T347c1006(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T40f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T27f339(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T27f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T40f338(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T347c1005(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T40f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T27f338(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T27f53(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T326f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T40f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T347c1029(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T40f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T27f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T27f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T803f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T803f5(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T40f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T347c1028(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T40f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T27f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T27f50(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T813f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T975f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T975f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1053f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge863os15422;
extern T0* ge863ov15422;
extern T0* T326f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T975c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1053c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T974f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T974f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1050f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge863os15421;
extern T0* ge863ov15421;
extern T0* T326f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T974c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1050c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T803f48(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T803f57(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T326f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T326f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T40f380(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T347c1049(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T40f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T27f380(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T27f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T40f379(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T347c1048(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T40f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T27f379(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T27f73(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T40f378(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T347c1047(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T27f378(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T40f377(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T347c1046(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T27f377(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T976f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T976f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T326f44(T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T978f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T976f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T978f31(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T976f33(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T966f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T966f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T966f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T966f2(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T966f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T966f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T798f1(T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T219f10(T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T219f18(T0* C, T0* a1);
/* ARRAY [INTEGER_32].set_area */
extern void T219f20(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T966f5(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T978f20(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T976f21(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T966c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T966f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T798f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T219f17(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T966f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T966f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T973f19(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T967f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T967c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge683os5143;
extern T0* ge683ov5143;
extern T0* T967f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T378f17(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T377f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T973f17(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T973f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T40f376(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T347c1045(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T40f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T27f376(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T27f72(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T973f16(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T326f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T40f391(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T347c1060(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T40f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T27f391(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T27f77(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T973f14(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T326f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T40f401(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T347c1070(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T40f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T27f401(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T27f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T40f400(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T347c1069(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T27f400(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T326f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T40f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T347c1068(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T40f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T27f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T27f83(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T40f398(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T347c1067(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T27f398(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T40f397(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T347c1066(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T40f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T27f397(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T27f82(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T326f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T40f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T347c1065(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T40f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T27f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T27f81(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T40f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T347c1064(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T27f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T40f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T347c1063(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T27f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T40f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T347c1062(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T27f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T40f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T347c1061(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T40f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T27f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T27f80(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T976f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T326f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T809f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T809f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T809f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1001f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1001f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T810f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T810f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T810f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T810f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T810f64(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T810f63(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1002f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1002f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T810f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T810f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T810f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T810f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T810f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T810f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T810f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T810f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T810f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T810f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T810f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T810f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T810f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T810f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T810f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T810f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T810f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T810f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T810f18(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T810f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T810f47(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T810f58(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T809f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T810f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T810f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T810f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T810f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T810f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T810f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T810f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T810f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T810f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T810f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T810f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T810f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T810f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T810f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T810f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T809f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T809f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T809f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T809f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T809f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T378f16(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T88f92(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T88f93(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T377f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T809f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T809f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T809f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T809f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T999f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1000f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1000f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1000f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1000f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1000f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T809f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T809f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T541f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T539f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T541f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T539f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T541f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T340f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T326f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T326f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T818f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T40f375(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T347c1044(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T583f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T583f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T583f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T40f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T27f375(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T27f71(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T583f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T40f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T347c1043(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T577f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T577f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T577f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T27f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T577f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T326f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T40f390(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T347c1059(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T27f390(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T40f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T347c1058(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T40f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T27f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T27f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T40f388(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T347c1057(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T27f388(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T40f387(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T347c1056(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T27f387(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T40f386(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T347c1055(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T27f386(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T40f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T347c1054(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T27f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T40f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T347c1053(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T40f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T27f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T27f76(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T40f383(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T347c1052(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T40f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T27f383(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T27f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T40f382(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T347c1051(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T27f382(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T40f381(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T347c1050(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T27f381(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T978f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T40f358(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T347c1025(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T40f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T27f358(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T27f62(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T978f18(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T973f20(T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T976f19(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T978f17(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T976f18(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T326f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T803f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T803f11(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T803f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T803f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T803f47(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T803f56(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T326f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T811f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T811f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1006f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1006f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1006f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1006f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1006f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1006f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1100f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1100f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1006f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1006f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1006f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1006f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1006f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T811f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T40f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T347c1092(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1110f2(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1010f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1110f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1010f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1110f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1010f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1110f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1010f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1110f1(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1010f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1010f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1110f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1010f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1010f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1110f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1010f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1010f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1010f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1110c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1010f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T40f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T27f423(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T27f103(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T978f35(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1019f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1187f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1187c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1019f3(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1019c8(void);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T976f39(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T973f21(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T978f34(T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T976f38(T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T978f33(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T976f37(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T40f422(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T347c1091(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T27f422(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T811f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T811f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1009f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1009f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1009f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1106f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1009f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1106f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1010f16(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T978f26(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T976f28(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1009f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1009f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1009f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1009f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1009f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1009f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1009f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1010c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1108f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1160c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1108c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1006f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1006f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1006f14(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1006f2(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1006f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1006f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1006f1(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1006f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1006f45(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1006f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1006f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1006f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T811f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1006f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1006f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1006f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1006f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1006f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1006f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1006f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1006f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1006f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1006f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1006f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1105f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1101f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1101f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1101f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1101f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1101f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1006f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1006f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1006f49(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1008c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1009c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1009f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1106c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1008f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1009f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1107f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1107c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1009f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1006f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1006f4(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1006f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1006f60(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T811f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T40f415(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T347c1084(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T40f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T27f415(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T27f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T40f414(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T347c1083(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T40f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T27f414(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T27f95(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1005f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1005f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1005f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1005f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1005f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1005f58(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1095f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1095f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1005f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1005f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1005f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1005f72(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1005f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T40f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T347c1082(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T40f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T27f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T27f94(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1005f7(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1005f16(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1005f11(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1005f6(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1005f15(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1005f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1005f5(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1005f14(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1005f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1005f56(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1005f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1005f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1004f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1004f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1004f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1004f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1004f57(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1004f56(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1094f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1094f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1004f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1004f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1004f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1004f71(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1004f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T40f412(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T347c1081(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T40f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T27f412(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T27f93(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1004f4(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1004f12(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1004f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1004f3(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1004f11(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1004f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1004f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1004f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1003f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1003f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1003f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1003f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1003f57(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1003f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1088f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1088f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1003f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1003f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1003f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1003f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1003f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T40f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T347c1080(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T40f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T27f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T27f92(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1003f5(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1003f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1003f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1003f4(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1003f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1003f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1003f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1003f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T803f75(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T803f86(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T803f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T803f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T803f85(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T803f87(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T803f84(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T811f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T976f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T976c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T976f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T978f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T978f21(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T973f29(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T976f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T976f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T803f76(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T811f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T978f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T978f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T973f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T973f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1005f47(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1005f55(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1005f4(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T973f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1005f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1005f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1005f46(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1005f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1005f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1005f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1004f41(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1004f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1004f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1004f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1004f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1004f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1004f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1004f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1004f73(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1004f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1004f68(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1004f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1004f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1004f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1004f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1004f2(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1004f40(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T973f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1003f44(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1003f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1003f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1003f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1003f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1003f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1003f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1003f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1003f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1003f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1003f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1003f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1003f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1003f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1003f3(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1003f2(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1003f43(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T811f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T973f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T973f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T803f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T803f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T803f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T803f81(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T803f78(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T811f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T40f421(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T347c1090(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T40f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T27f421(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T27f102(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1005f52(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1005f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1005f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1005f66(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T341f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T341f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1005f51(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1005f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1005f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1005f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T1099f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T1023f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T1023f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T1023f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T1023f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T1023f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1005f64(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T811f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T40f420(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T347c1089(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T40f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T27f420(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T27f101(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T811f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T40f419(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T347c1088(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T40f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T27f419(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T27f100(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1004f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T811f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T40f418(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T347c1087(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T40f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T27f418(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T27f99(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1004f6(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1004f46(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T541f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T541f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1004f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1004f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1004f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1004f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1004f61(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T40f417(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T347c1086(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T40f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T27f417(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T27f98(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1003f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T811f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T40f416(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T347c1085(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T40f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T27f416(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T27f97(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1003f49(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T339f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T339f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1003f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1003f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1003f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1003f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1093f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1089f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1089f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1089f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1089f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1089f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1003f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T811f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T40f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T347c1079(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T27f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T812f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1014f37(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1014f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1014f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1014f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1014f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1014f41(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1118f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1118f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1012f34(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1012f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1012f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1012f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1012f44(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1012f43(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1112f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1112f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T812f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T812f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T812f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T812f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T812f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T812f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1016f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1016f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1016f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1120f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1016f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1120f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1016f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1016f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1016f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1016f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1016f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1016f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1016f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1014f2(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1014f5(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1014f1(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1014f38(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1014f47(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1014f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1014f15(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1011f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1014f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1014f17(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T812f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T812f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1012f3(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1012f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1012f2(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1012f36(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1012f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1012f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1012f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1012f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1012f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1012f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T812f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T812f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1012f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1012f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1012f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1012f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1012f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1014f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1014f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1014f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1014f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1014f49(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1014f57(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1014f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1113f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1111f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1111f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1111f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1111f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1111f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1014f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1119f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1114f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1114f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1114f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1114f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1114f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1014f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1014f14(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1014f48(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1016c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1016f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1120c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1016f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1121f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1121c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1016f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T803f77(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T803f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1012f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1012f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1012f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1012f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1012f48(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T326f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T816f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T326f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T817f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T817f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T326f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T43f194(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T326f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T264f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T139f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T128f1739(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T787f5(T0* C, T0* a1);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T92f35(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T335f9(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T92f22(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T335f2(T0* C);
/* ET_LACE_UNIVERSE.preparse */
extern void T39f183(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T39f184(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T334f160(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T334f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T334f163(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T820f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T820f57(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T39f185(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T821f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T820f65(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T820f62(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T139f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T40f539(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T347c1209(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T40f151(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T27f539(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T27f151(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T40f538(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T347c1208(T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T27f538(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vtcg4d_error */
extern void T40f537(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4d */
extern T0* T347c1207(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4d_error */
extern void T27f537(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vtcg4c_error */
extern void T40f536(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vtcg4c */
extern T0* T347c1206(T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vtcg4c_error */
extern void T27f536(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T498f9(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T498f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T337f11(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T139f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T820f64(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T39f187(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T821f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T39f186(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T821f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T820f69(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T818f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T49f209(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T49f220(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_type */
extern void T49f326(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T41f56(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T49f325(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_builtin_code */
extern void T167f66(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_builtin_code */
extern void T120f63(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T49f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T49f323(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T49f322(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T49f321(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T49f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T49f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T49f318(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T49f317(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T49f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T49f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T49f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T49f313(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T49f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T49f311(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T49f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T49f309(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T49f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T49f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T49f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T49f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T49f304(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T49f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T49f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T49f301(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T49f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T49f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T49f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T49f297(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T49f296(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T49f295(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T49f294(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T49f293(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T49f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T49f291(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T49f290(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T49f289(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T49f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T49f287(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T49f286(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T49f285(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T49f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T49f283(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T49f282(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T49f281(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T49f280(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T49f279(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T49f278(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T49f277(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T49f276(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T49f275(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T49f274(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T49f273(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T49f272(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T49f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T49f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T49f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T49f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T49f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T49f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T49f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T49f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T49f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T49f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T49f261(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T49f260(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T49f259(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T49f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T49f257(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T49f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T49f255(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T49f254(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T49f253(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T49f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T49f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T49f250(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T49f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T49f248(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T49f247(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T49f246(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T49f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T49f244(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T49f243(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T49f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T49f241(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T49f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T49f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T49f238(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T49f237(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T49f236(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T49f235(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T49f234(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T49f233(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T49f232(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T49f231(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T49f220p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T49f329(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T49f328(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T49f327(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T49f343(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T44f471(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T44f494(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T44f517(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T841f7(T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T44f528(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T351f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T44f261(T0* C);
/* STRING_8.has_substring */
extern T1 T17f33(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T44f527(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T44f541(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T44f540(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T44f539(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T44f538(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_body */
extern void T44f537(T0* C, T0* a1);
/* ET_C_GENERATOR.print */
extern void T44f523(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1045f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1176f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1176f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1045f1(T0* C);
/* STD_FILES.output */
extern unsigned char ge2020os20845;
extern T0* ge2020ov20845;
extern T0* T1045f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1176c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1176f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1176f2(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1176f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f32(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T44f248(T0* C);
/* STD_FILES.set_output_default */
extern void T1045f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1045c4(void);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T44f536(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T44f535(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T44f534(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T44f533(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T143f8(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T143f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T44f532(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T44f531(T0* C);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T44f530(T0* C, T0* a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T44f526(T0* C, T0* a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T373c11(T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T44f525(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T44f521(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T44f524(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T820f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T820f176(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T820f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T40f516(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T347c1186(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T40f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T27f516(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T27f146(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T820f250(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T820f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T820f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T820f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T820f30(T0* C);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T820f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vpca5d_error */
extern void T40f535(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5d */
extern T0* T347c1205(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T40f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5d_error */
extern void T27f535(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T27f150(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5c_error */
extern void T40f534(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vpca5c */
extern T0* T347c1204(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vpca5c_error */
extern void T27f534(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T40f533(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T347c1203(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T27f533(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T40f532(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T347c1202(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T27f532(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vpca4d_error */
extern void T40f531(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4d */
extern T0* T347c1201(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T40f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4d_error */
extern void T27f531(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T27f149(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4c_error */
extern void T40f530(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vpca4c */
extern T0* T347c1200(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vpca4c_error */
extern void T27f530(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T40f529(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T347c1199(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T27f529(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T40f528(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T347c1198(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T27f528(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T737f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T737f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3c_error */
extern void T40f527(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3c */
extern T0* T347c1197(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T40f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3c_error */
extern void T27f527(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T27f148(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T40f526(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T347c1196(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T27f526(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T130f29(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T130f18(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca2b_error */
extern void T40f525(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2b */
extern T0* T347c1195(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T40f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2b_error */
extern void T27f525(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T27f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T40f524(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T347c1194(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T27f524(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T820f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T820f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_arguments */
extern void T184f29(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1074f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1075c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1074c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1149f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1177c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1148c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge605os13197;
extern T0* ge605ov13197;
extern T0* T1074f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1149c2(void);
/* ET_CALL_AGENT.set_procedure */
extern void T184f28(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T820f159(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T820f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T820f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T820f246(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T820f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T820f216(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T40f515(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T347c1185(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T27f515(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_agent_validity */
extern void T820f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_agent */
extern void T820f253(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INLINE_AGENT.name */
extern T0* T721f12(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_agent_validity */
extern void T820f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_agent */
extern void T820f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T184f11(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T818f50(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T818f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T49f414(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T49f457(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T49f494(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T49f526(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T49f532(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T170f33(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T49f525(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T49f531(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T49f535(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T49f186(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T49f527(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T49f524(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T49f530(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_procedure_call */
extern void T49f534(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T183c8(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T49f397(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T49f493(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T49f523(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T49f522(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T49f521(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T49f492(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_agent_validity */
extern void T49f519(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_agent */
extern void T49f529(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T49f533(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_agent_validity */
extern void T49f518(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_agent */
extern void T49f528(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T44f472(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T44f495(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].force_last */
extern void T150f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].resize */
extern void T150f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].new_capacity */
extern T6 T150f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_AGENT].extendible */
extern T1 T150f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T820f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T820f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6b_error */
extern void T40f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6b */
extern T0* T347c999(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T40f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6b_error */
extern void T27f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T27f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T40f331(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T347c998(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T27f331(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc5b_error */
extern void T40f330(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5b */
extern T0* T347c997(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T40f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5b_error */
extern void T27f330(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T27f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T40f329(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T347c996(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T27f329(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc4b_error */
extern void T40f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4b */
extern T0* T347c995(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T40f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4b_error */
extern void T27f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T27f46(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T40f327(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T347c994(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T27f327(T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T447f38(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T446f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T40f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T347c993(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T40f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T27f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T27f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T40f325(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T347c992(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T27f325(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc2b_error */
extern void T40f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2b */
extern T0* T347c991(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T40f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2b_error */
extern void T27f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T27f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T40f323(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T347c990(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T27f323(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc1b_error */
extern void T40f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1b */
extern T0* T347c989(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T40f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1b_error */
extern void T27f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T27f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T40f321(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T347c988(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T27f321(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T818f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T49f210(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T49f221(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T44f473(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T44f496(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T44f518(T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T820f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T820f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0b_error */
extern void T40f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0b */
extern T0* T347c1001(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T40f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0b_error */
extern void T27f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T27f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T40f333(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T347c1000(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T27f333(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T818f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T49f211(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T49f222(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T44f474(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T44f497(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T820f39(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T820f51(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T818f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T49f212(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T49f223(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T44f475(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T44f498(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T820f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T820f58(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T820f68(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T820f67(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T581f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T820f66(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T39f189(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T821f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T39f188(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T821f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T820f71(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T820f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T40f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T347c1004(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T40f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T27f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T27f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T40f336(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T347c1003(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T40f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T27f336(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T27f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T40f335(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T347c1002(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T27f335(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T818f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T818f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T49f213(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T49f224(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T49f333(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T49f332(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T49f331(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T49f345(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T49f344(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T44f476(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T44f499(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T44f519(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T44f529(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T44f542(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T44f543(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T158f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T158f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T158f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T158f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T158f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T158f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T158f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T158f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T158f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T158f45(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T820f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T820f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T818f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T49f214(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T49f225(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T44f477(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T44f500(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T820f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T820f54(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T818f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T49f215(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T49f226(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T44f478(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T44f501(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T44f520(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T820f43(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T820f55(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T818f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T49f216(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T49f227(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T44f479(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T44f502(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T820f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T820f56(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T818f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T49f217(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T49f228(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T44f480(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T44f503(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T820f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T820f59(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T818f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T49f218(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T49f229(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T44f481(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T44f504(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T820f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T820f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T818f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T49f219(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T49f230(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T49f342(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T49f341(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T49f340(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T49f339(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T49f338(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T49f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T49f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T49f335(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T49f334(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T49f230p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T44f482(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T44f505(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T820f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T820f165(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T820f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T40f472(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T347c1142(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T700f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T40f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T27f472(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T27f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T40f508(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T347c1178(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T40f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T27f508(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T27f130(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T818f39(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T818f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T40f559(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T347c1228(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T27f559(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T40f558(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T347c1227(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T27f558(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T705f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T700f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T386f21(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T40f557(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T347c1226(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T27f557(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T40f556(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T347c1225(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T40f157(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T27f556(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T27f157(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T818f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T818f83(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T49f403(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T49f446(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T49f484(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T167f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T120f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T166f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1049f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1048f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1048f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1048f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1048f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1048f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1048c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1049f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1147c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge898os13197;
extern T0* ge898ov13197;
extern T0* T166f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1049c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T166f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T166f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T166c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T167f69(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T167c60(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T167f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T167f50(T0* C);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T44f483(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T44f506(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T820f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T820f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T40f509(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T347c1179(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T40f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T27f509(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T27f141(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T820f213(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T820f212(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T820f211(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T820f210(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T820f209(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T818f40(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T49f404(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T49f447(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T49f489(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T49f488(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T49f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T49f486(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T49f485(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T44f484(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T44f507(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T44f522(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T165f7(T0* C);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T820f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T820f167(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T818f41(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T49f405(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T49f448(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T44f485(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T44f508(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T820f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T820f168(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T818f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T49f406(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T49f449(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T44f486(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T44f509(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T820f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T820f169(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T213f42(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T213f21(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T213f20(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T818f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T49f407(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T49f450(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T44f487(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T44f510(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T820f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T820f170(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T714f19(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1063f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1063c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T213f22(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T714f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T818f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T49f408(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T49f451(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T44f488(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T44f511(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T820f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T820f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T40f510(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T347c1180(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BRACKET_SYMBOL.text */
extern T0* T258f43(T0* C);
/* ET_SYMBOL.text */
extern T0* T257f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T40f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T27f510(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T27f142(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T820f214(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T818f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T49f409(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T49f452(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T49f490(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T44f489(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T44f512(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T258f10(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T257f10(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T820f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T820f172(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T818f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T49f410(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T49f453(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T44f490(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T44f513(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T820f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T820f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T40f511(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T347c1181(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T40f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T27f511(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T27f143(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T818f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T49f411(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T49f454(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T44f491(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T44f514(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T820f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T820f174(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T818f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T49f412(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T49f455(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T44f492(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T44f515(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T820f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T820f175(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T820f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T818f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T49f413(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T49f456(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T49f491(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T44f493(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T44f516(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T825f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T825f18(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T40f440(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T347c1111(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T40f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T27f440(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T27f112(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T497f11(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T136f19(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T489f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T40f439(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T347c1110(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T27f439(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T497f43(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T136f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T489f41(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T40f438(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T347c1109(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T40f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T27f438(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T27f111(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T40f437(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T347c1108(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T40f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T27f437(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T27f110(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T824f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T824f11(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T824f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T824f12(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T819f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T819f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T819f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T980f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T980f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T980f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T817f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T817f14(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T40f540(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T347c1210(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T40f152(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T27f540(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T27f152(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T817f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T48f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge258os1588;
extern T0* ge258ov1588;
extern T0* T817f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T48c15(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T817f15(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T816f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T816f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T816f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T816f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T816f12(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T815f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T815f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T814f9(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T814f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T813f8(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T813f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T813f20(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T139f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T139f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T139f10(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T825f25(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T824f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T819f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T817f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T816f10(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T815f13(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T814f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T813f9(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T139f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T825f24(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T825f27(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T824f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T824f19(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T40f546(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T347c1216(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T40f154(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T27f546(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T27f154(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T819f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T817f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T817f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T816f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T816f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T815f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T815f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T814f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T813f11(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T139f17(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T139f25(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T820f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T820f186(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T820f232(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T818f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T49f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T49f467(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T49f508(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T44f544(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T44f579(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T820f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T820f177(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T820f219(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T818f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T49f415(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T49f458(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T49f495(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T44f545(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T44f580(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T820f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T820f191(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T820f235(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T818f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T49f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T49f472(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T49f511(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T44f546(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T44f581(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T820f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T820f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T820f221(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T818f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T49f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T49f463(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T49f497(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T44f547(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T44f582(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T44f611(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T820f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T820f187(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T818f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T49f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T49f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T44f548(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T44f583(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T820f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T820f188(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T818f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T49f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T49f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T44f549(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T44f584(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T820f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T820f183(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T820f231(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T820f230(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T820f229(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T820f228(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T820f227(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T820f226(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T820f225(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T820f224(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T820f223(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T820f222(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T818f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T49f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T49f464(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T49f507(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T49f506(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T49f505(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T49f504(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T49f503(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T49f502(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T49f501(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T49f500(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T49f499(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T49f498(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T44f550(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T44f585(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T820f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T820f184(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T818f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T49f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T49f465(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T44f551(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T44f586(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T820f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T820f185(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T818f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T49f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T49f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T44f552(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T44f587(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T820f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T820f189(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T820f234(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T820f233(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T818f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T49f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T49f470(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T49f510(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T49f509(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T44f553(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T44f588(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T446f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T426f16(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T820f129(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T820f190(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T818f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T49f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T49f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T44f554(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T44f589(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T447f23(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T820f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T820f178(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T820f220(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T818f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T49f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T49f459(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T49f496(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T44f555(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T44f590(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T820f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T820f179(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T818f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T49f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T49f460(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T44f556(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T44f591(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T820f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T820f180(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T818f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T49f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T49f461(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T44f557(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T820f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T820f181(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T818f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T49f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T49f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T44f558(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T820f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T820f192(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T820f236(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T40f523(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T347c1193(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T27f523(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T40f522(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T347c1192(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T27f522(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_like_current */
extern T1 T213f19(T0* C);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T213f33(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T40f521(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T347c1191(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T40f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T27f521(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T27f140(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T40f520(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T347c1190(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T27f520(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1062f12(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T481f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T40f519(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T347c1189(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T40f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T27f519(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T27f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T40f518(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T347c1188(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T27f518(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T820f203(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T39f193(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T821f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T40f517(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T347c1187(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T27f517(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T209f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T43f217(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T118f12(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T818f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T49f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T49f473(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T49f512(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T49f441(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_create_expression */
extern void T44f559(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T44f592(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T820f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T820f197(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T820f239(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T818f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T49f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T49f478(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T49f515(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T44f560(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T44f593(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T157f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T157f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T157f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T157f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T157f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T157f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T157f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T157f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T157f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T288f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T287f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T287f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T287f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T287f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T287f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T157f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T157f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T157f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T157f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T157f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T157f33(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T825f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T825f19(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T40f441(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T347c1112(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T27f441(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T824f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T824f20(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T40f548(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T347c1218(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T40f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T27f548(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T27f156(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T40f547(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T347c1217(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T40f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T27f547(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T27f155(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T819f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T817f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T816f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T815f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T815f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T814f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T813f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T139f18(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T139f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T825f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T825f20(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T40f442(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T347c1113(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T27f442(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T824f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T824f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T40f549(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T347c1219(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T27f549(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T819f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T817f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T816f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T815f17(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T815f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T814f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T813f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T813f18(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T40f542(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T347c1212(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T27f542(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T40f541(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T347c1211(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T27f541(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T813f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T813f21(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T510f24(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T510f97(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T510f99(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T139f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T139f27(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T139f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T825f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T825f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T825f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T40f443(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T347c1114(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T27f443(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T824f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T824f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T824f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T40f550(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T347c1220(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T27f550(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T819f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T817f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T816f17(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T815f20(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T814f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T814f19(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T635f39(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1017f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1017f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1017f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1017f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].put */
extern void T1122f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1122f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_put */
extern void T1122f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1122f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1122f17(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1122f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1122f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search_position */
extern void T1122f53(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1122f16(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T635f59(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1122f15(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].resize */
extern void T1122f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1122f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1122f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1124f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1123f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1123f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1123f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1123f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1123f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1122f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1122f47(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1018f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1017f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1017f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1017f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1122f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1122f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found */
extern T1 T1122f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search */
extern void T1122f39(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T813f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T813f19(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T40f544(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T347c1214(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T27f544(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T40f543(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T347c1213(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T27f543(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T635f66(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T635f65(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T139f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T139f28(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T825f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T824f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T819f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T817f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T816f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T815f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T814f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T813f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T139f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T139f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T820f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T820f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T820f146(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T641f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T40f460(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T347c1130(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T40f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T27f460(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T27f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T820f145(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1b_error */
extern void T40f459(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1b */
extern T0* T347c1129(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T40f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1b_error */
extern void T27f459(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T27f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T40f458(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T347c1128(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T27f458(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T641f16(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T820f140(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T818f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T49f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T49f364(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T49f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T49f388(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T49f384(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T44f561(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T44f594(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T820f133(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T820f194(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T818f68(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T728f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T818f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T49f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T49f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T44f562(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T44f595(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T820f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T820f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0b_error */
extern void T40f462(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0b */
extern T0* T347c1132(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T40f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0b_error */
extern void T27f462(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T27f125(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T40f461(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T347c1131(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T27f461(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T820f148(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T646f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T820f147(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T40f490(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T347c1160(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T40f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T27f490(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T27f136(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T40f489(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T347c1159(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T40f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T27f489(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T27f135(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T820f202(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T40f488(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T347c1158(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T27f488(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T820f201(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T820f200(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T818f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T49f349(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T49f365(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T49f391(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T49f390(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T49f440(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T49f439(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T49f438(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T44f563(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T44f596(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T820f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T820f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T820f149(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0b_error */
extern void T40f464(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0b */
extern T0* T347c1134(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T40f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0b_error */
extern void T27f464(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T27f126(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T40f463(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T347c1133(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T27f463(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T213f13(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T48f12(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge258os1589;
extern T0* ge258ov1589;
extern T0* T820f28(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T818f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T49f350(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T49f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T49f392(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T49f185(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T44f564(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T44f597(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T820f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T820f98(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T664f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T818f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T818f80(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T667f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T818f86(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T49f351(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T49f367(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T44f565(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T44f598(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T820f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T820f99(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T40f470(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T347c1140(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T40f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T27f470(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T27f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T40f469(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T347c1139(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T27f469(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CHOICE_LIST.choice */
extern T0* T677f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T677f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T671f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1b_error */
extern void T40f468(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1b */
extern T0* T347c1138(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T40f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1b_error */
extern void T27f468(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T27f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T40f467(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T347c1137(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T27f467(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T818f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T818f81(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T818f84(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T49f352(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T49f368(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T44f566(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T44f599(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T44f277(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T820f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T820f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T820f151(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0b_error */
extern void T40f492(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0b */
extern T0* T347c1162(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T40f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0b_error */
extern void T27f492(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T27f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T40f491(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T347c1161(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T27f491(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T820f150(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T624f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T624f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T818f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T818f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T49f353(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T49f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T49f394(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T49f394p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T49f393(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T49f393p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T44f567(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T44f600(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T820f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T820f100(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T818f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T49f354(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T49f370(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T49f370p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T44f568(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T44f601(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T820f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T820f89(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T656f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T656f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T818f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T49f355(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T49f371(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T49f371p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T44f569(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T44f602(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T820f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T820f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T820f152(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T820f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6i_error */
extern void T40f501(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6i */
extern T0* T347c1171(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6i_error */
extern void T27f501(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6h_error */
extern void T40f500(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6h */
extern T0* T347c1170(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6h_error */
extern void T27f500(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc8d_error */
extern void T40f499(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8d */
extern T0* T347c1169(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8d_error */
extern void T27f499(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc8c_error */
extern void T40f498(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc8c */
extern T0* T347c1168(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8c_error */
extern void T27f498(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T662f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T662f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T659f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T151f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T658f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T658f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5d_error */
extern void T40f497(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5d */
extern T0* T347c1167(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T662f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T658f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5d_error */
extern void T27f497(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5c_error */
extern void T40f496(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc5c */
extern T0* T347c1166(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc5c_error */
extern void T27f496(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc3b_error */
extern void T40f495(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3b */
extern T0* T347c1165(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T40f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3b_error */
extern void T27f495(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T27f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T40f494(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T347c1164(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T27f494(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6f_error */
extern void T40f493(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6f */
extern T0* T347c1163(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6f_error */
extern void T27f493(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T659f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T818f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T49f356(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T49f372(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T49f395(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T49f442(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T662f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T658f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T44f570(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T44f603(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T44f612(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T44f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T820f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T820f91(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T818f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T49f357(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T49f373(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T44f571(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T44f604(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T820f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T820f193(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T820f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T39f192(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T821f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T691f14(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T818f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T49f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T49f474(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T49f513(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T120f68(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T44f572(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T44f605(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T820f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T820f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T820f158(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T40f471(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T347c1141(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T27f471(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T818f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T49f358(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T49f374(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T49f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T44f573(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T44f606(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T820f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T820f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T820f161(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T40f473(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T347c1143(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T27f473(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T702f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T818f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T49f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T49f375(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T49f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T44f574(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T44f607(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T820f134(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T820f195(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T818f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T49f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T49f476(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T44f575(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T44f608(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inline_agent */
extern void T820f138(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_validity */
extern void T820f199(T0* C, T0* a1, T0* a2);
/* ET_INLINE_AGENT.set_arguments */
extern void T721f23(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_feature_validity */
extern void T820f241(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_inline_agent */
extern void T818f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inline_agent */
extern void T49f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_validity */
extern void T49f480(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_feature_validity */
extern void T49f517(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_inline_agent */
extern void T44f576(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T820f135(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T820f196(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T131f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T820f238(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T724f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T724f18(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T818f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T49f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T49f477(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T49f514(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T44f577(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T44f609(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T156f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T156f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T156f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T156f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T156f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T156f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T156f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T156f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T156f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T156f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T156f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T156f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T156f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T156f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T156f33(T0* C);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T820f137(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T820f198(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T820f240(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T40f514(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T347c1184(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T40f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T27f514(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T27f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T40f513(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T347c1183(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T40f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T27f513(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T27f144(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T40f512(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T347c1182(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T27f512(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T726f14(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T726f19(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T818f72(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T49f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T49f479(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T49f516(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T44f578(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T44f610(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T825f23(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T825f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T40f555(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T347c1221(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T796f19(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T27f555(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T40f554(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T347c1224(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T27f554(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T40f553(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T27f553(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T40f552(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T347c1223(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T27f552(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1029f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1029f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1029f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1029f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put */
extern void T1134f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1134f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1134f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1134f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1134f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1134f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1134f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1134f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1134f11(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T497f62(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T489f60(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1134f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1134f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1134f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1134f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1134f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1134f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1030f20(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1029f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1029f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1134f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1134f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1134f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1134f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T40f551(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T347c1222(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T27f551(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T824f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T819f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T817f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T816f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T815f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T814f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T813f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T139f20(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T820f257(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T820f259(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T820f261(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T152f6(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T152f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T818f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T49f536(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T49f541(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T49f546(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T44f613(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T44f618(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T44f623(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T820f258(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T820f260(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T40f545(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T347c1215(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T423f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T40f153(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T27f545(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T27f153(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T818f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T49f537(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T49f542(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T44f614(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T44f619(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T825f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T824f24(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T819f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T817f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T816f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T815f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T814f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T813f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T139f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T825f30(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T824f25(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T819f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T817f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T816f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T815f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T814f21(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T813f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T139f32(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T820f262(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T820f265(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T818f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T49f538(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T49f543(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T44f615(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T44f620(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T44f622(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T820f263(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T820f266(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T818f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T49f539(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T49f544(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T44f616(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T44f621(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T820f264(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T820f267(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T818f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T49f540(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T49f545(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T44f617(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T350f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T226f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T970f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1081f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1080f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1080f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1080f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1080f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1080f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1080c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1081f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1150c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge912os13197;
extern T0* ge912ov13197;
extern T0* T970f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1081c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T970f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T970f1(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T970f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T970c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T187f15(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_seed */
extern void T599f91(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T598f62(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T597f63(T0* C, T6 a1);
/* ET_AGENT_KEYWORD.set_seed */
extern void T383f61(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T360f63(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T88f96(T0* C, T6 a1);
/* ET_INFIX_NAME.reset */
extern void T599f92(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T598f63(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T597f64(T0* C);
/* ET_AGENT_KEYWORD.reset */
extern void T383f60(T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T360f62(T0* C);
/* ET_IDENTIFIER.reset */
extern void T88f107(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T796f54(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T637f59(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T635f64(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T510f96(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T509f96(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T497f68(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T489f64(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T338f87(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T130f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T131f93(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T337f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T129f91(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T43f159(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T796f55(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T637f58(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T635f63(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T510f95(T0* C);
/* ET_BIT_N.reset */
extern void T509f95(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T497f69(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T498f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T489f65(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T338f88(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T796f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T637f57(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T635f62(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T510f98(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T509f97(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T497f70(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T489f66(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T338f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T593f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T592f81(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T225f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T220f84(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T593f86(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T583f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T577f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T174f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T756f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T179f10(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T592f85(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T579f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T757f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T616f9(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T592f85p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T225f78(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T220f85(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T220f85p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T593f94(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T592f93(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T225f87(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T220f93(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T593f95(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T592f94(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T225f88(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T220f94(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T588f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T587f83(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T585f83(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T191f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T190f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T188f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T133f84(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T588f80(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T587f87(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T587f87p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T585f87(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T585f87p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T191f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T190f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T188f75(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T133f88(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T588f89(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T587f95(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T585f95(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T191f80(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T190f84(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T188f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T133f96(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T588f90(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T587f96(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T585f96(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T191f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T190f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T188f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T133f97(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T131f95(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T129f93(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T43f162(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T131f94(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T129f92(T0* C);
/* ET_CLASS.reset_type */
extern void T43f210(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T170f39(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T169f39(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T168f38(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T164f38(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T113f35(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T170f37(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T169f37(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T168f36(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T164f36(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T113f34(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T170f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T169f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T168f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T164f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T113f36(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T170f42(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T169f42(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T168f41(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T164f41(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T113f38(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T170f36(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T169f36(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T168f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T164f35(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T113f33(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T170f43(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T169f43(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T168f42(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T164f42(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T113f39(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T170f44(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T169f44(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T168f43(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T164f43(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T113f40(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T141f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T140f8(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T45f23(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T141f6(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T140f5(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T45f27(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T141f7(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T141f2(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T140f6(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T45f25(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T45f32(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T45f35(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T141f5(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T140f4(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T45f26(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T45f33(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T45f36(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T141f8(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T140f7(T0* C);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T45f24(T0* C);
/* ET_KEYWORD.position */
extern T0* T136f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T605f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T598f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T407f38(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T605f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T598f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T360f8(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T978f25(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T976f27(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T978f22(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T976f24(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1008f4(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T978f23(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T976f25(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1008f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1009f9(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T978f24(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T976f26(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T978f10(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T976f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T593f53(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T592f52(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T588f54(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T587f56(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T585f56(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T225f49(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T220f52(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T191f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T190f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T188f52(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T133f58(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T976f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T593f55(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T592f54(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T588f56(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T587f58(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T585f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T225f51(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T220f54(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T191f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T190f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T188f54(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T133f60(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T978f13(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T976f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T593f56(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T592f55(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T588f57(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T587f59(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T585f59(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T225f52(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T220f55(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T191f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T190f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T188f55(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T133f61(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T978f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T593f57(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T592f56(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T588f58(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T587f60(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T585f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T225f53(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T220f56(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T191f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T190f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T188f56(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T133f62(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T978f15(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T976f16(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T593f58(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T592f57(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T588f59(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T587f61(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T585f61(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T225f54(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T220f57(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T191f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T190f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T188f57(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T133f63(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T593f51(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T592f50(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T588f52(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T587f54(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T585f54(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T225f47(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T220f50(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T191f48(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T190f50(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T188f50(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T133f56(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T593f59(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T592f58(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T588f60(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T587f62(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T585f62(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T225f55(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T220f58(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T191f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T190f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T188f58(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T133f64(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T978f11(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T976f12(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T593f54(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T592f53(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T588f55(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T587f57(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T585f57(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T225f50(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T220f53(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T191f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T190f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T188f53(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T133f59(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T751f3(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T733f11(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T726f15(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T724f14(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T723f10(T0* C);
/* ET_INLINE_AGENT.assertion */
extern T0* T721f13(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T720f10(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T719f11(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T718f10(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T714f10(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T712f10(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T711f10(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T710f10(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T709f10(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T706f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T705f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T691f15(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T643f11(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T484f14(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T481f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T452f20(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T451f20(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T450f21(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T449f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T447f22(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T446f22(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T445f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T444f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T443f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T442f26(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T441f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T440f21(T0* C);
/* ET_VOID.assertion */
extern T0* T429f15(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T393f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T359f21(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T184f16(T0* C);
/* ET_CURRENT.assertion */
extern T0* T180f17(T0* C);
/* ET_RESULT.assertion */
extern T0* T171f17(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T155f14(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T88f83(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T751f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1068f11(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1062f9(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T749f6(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T733f9(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T726f12(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T724f11(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T723f8(T0* C);
/* ET_INLINE_AGENT.agent_actual_argument */
extern T0* T721f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T720f8(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T719f8(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T718f8(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T714f8(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T712f8(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T711f8(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T710f8(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T709f8(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T706f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T705f11(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T691f12(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T643f8(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T484f11(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T481f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T452f18(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T451f18(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T450f19(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T449f19(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T447f20(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T446f20(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T445f30(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T444f31(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T443f31(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T442f24(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T441f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T440f19(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T437f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T429f13(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T393f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T359f19(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T184f14(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T180f15(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T171f14(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T155f11(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T88f78(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T691f9(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T689f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T452f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T451f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T445f29(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T444f30(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T443f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T440f18(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T155f10(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T88f77(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T691f18(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T452f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T451f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T445f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T444f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T443f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T440f27(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T155f18(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T88f87(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T691f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T452f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T451f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T445f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T444f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T443f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T440f28(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T155f19(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T88f88(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T691f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T452f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T451f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T445f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T444f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T443f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T440f29(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T155f20(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T88f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T497f57(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T498f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T489f55(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T43f146(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T796f7(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T758f5(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T637f36(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T635f35(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T633f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T510f17(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T509f20(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T497f37(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T489f30(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T338f6(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T131f17(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T129f7(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T43f55(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T605f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T601f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T605f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T601f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T605f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T601f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T605f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T601f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T601f38(T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T605f37(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T601f56(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T605f38(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T601f57(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T605f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T601f6(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T599f29(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T598f32(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T597f26(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T360f28(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T605f41(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T605f42(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T601f59(T0* C, T0* a1);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T599f69(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T598f58(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T598f36(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T597f55(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T360f58(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T360f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T442f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T441f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T359f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T257f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T452f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1059c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1059f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T451f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T450f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T449f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T447f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T446f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T445f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T444f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T443f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T442f30(T0* C);
/* STRING_8.occurrences */
extern T6 T17f34(T0* C, T2 a1);
/* ET_VERBATIM_STRING.last_position */
extern T0* T441f34(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T440f34(T0* C);
/* ET_VOID.last_position */
extern T0* T429f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T393f27(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T386f16(T0* C);
/* ET_AGENT_KEYWORD.last_position */
extern T0* T383f54(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T359f29(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T258f80(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T257f14(T0* C);
/* ET_CURRENT.last_position */
extern T0* T180f24(T0* C);
/* ET_RESULT.last_position */
extern T0* T171f23(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T136f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T88f85(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T565f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T344f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T563f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T344f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T794f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T517f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T516f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T505f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T794f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T505f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T794f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T637f51(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T635f53(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T517f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T128f894(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T516f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T128f893(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T510f89(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T509f88(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T505f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T794f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T128f891(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T503f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T128f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T503f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T503f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T637f9(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T635f4(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T510f30(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T509f30(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T505f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T128f890(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T445f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T444f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T443f8(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1068f14(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T719f10(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T643f9(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T155f12(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T603f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T228f3(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T603f6(T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T599f70(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T599f33(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T598f59(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T597f56(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T597f30(T0* C);
/* ET_AGENT_KEYWORD.same_extended_feature_name */
extern T1 T383f55(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.any_ */
extern T0* T383f24(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T360f59(T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T88f91(T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T603f3(T0* C);
/* ET_ALIASED_FEATURE_NAME.first_leaf */
extern T0* T603f5(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T599f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T598f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T597f7(T0* C);
/* ET_AGENT_KEYWORD.alias_name */
extern T0* T383f10(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T360f10(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T88f50(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T792f1(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T792f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T792f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T792f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T792f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T792f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T792f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T792f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T792f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T445f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T445f48(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T445f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T444f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T444f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T444f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T443f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T443f49(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T443f29(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T426f37(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T426f76(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T426f56(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T258f41(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T258f86(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T258f42(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T257f13(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T257f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T257f51(T0* C);
/* ET_CURRENT.to_text */
extern T0* T180f19(T0* C);
/* ET_CURRENT.append_to_string */
extern void T180f33(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T180f23(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T136f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T136f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T136f20(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T88f59(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T88f109(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T452f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T451f31(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T450f27(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T449f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T447f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T446f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T445f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T444f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T443f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T442f23(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T441f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T440f32(T0* C);
/* ET_VOID.is_null */
extern T1 T429f21(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T426f40(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T413f17(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T407f45(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T393f25(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T386f15(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T383f51(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T359f26(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T258f9(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T257f9(T0* C);
/* ET_CURRENT.is_null */
extern T1 T180f22(T0* C);
/* ET_RESULT.is_null */
extern T1 T171f21(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T136f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T88f43(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1059f1(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T452f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T451f29(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T450f25(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T449f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T447f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T446f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T445f24(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T444f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T443f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T442f21(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T441f25(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T440f30(T0* C);
/* ET_VOID.line */
extern T6 T429f19(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T426f38(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T423f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T413f18(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T407f43(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T393f23(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T386f13(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T383f25(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T359f24(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T258f11(T0* C);
/* ET_SYMBOL.line */
extern T6 T257f11(T0* C);
/* ET_CURRENT.line */
extern T6 T180f20(T0* C);
/* ET_RESULT.line */
extern T6 T171f19(T0* C);
/* ET_KEYWORD.line */
extern T6 T136f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T88f34(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1059f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T452f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T451f30(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T450f26(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T449f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T447f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T446f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T445f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T444f25(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T443f25(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T442f22(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T441f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T440f31(T0* C);
/* ET_VOID.column */
extern T6 T429f20(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T426f39(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T423f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T413f45(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T407f44(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T393f24(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T386f14(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T383f26(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T359f25(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T258f22(T0* C);
/* ET_SYMBOL.column */
extern T6 T257f12(T0* C);
/* ET_CURRENT.column */
extern T6 T180f21(T0* C);
/* ET_RESULT.column */
extern T6 T171f20(T0* C);
/* ET_KEYWORD.column */
extern T6 T136f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T88f35(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge511os9672;
extern T0* ge511ov9672;
extern T0* T464f13(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T464f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T593f48(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T592f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T588f49(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T587f50(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T585f50(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T464f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T225f44(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T220f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T191f45(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T190f47(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T188f47(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T133f53(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T464f12(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T464f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T593f46(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T588f47(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T464f18(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T225f42(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T191f43(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T190f45(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T188f45(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T133f51(T0* C);
/* ET_INVARIANTS.type */
extern T0* T464f16(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inline_agent */
extern T1 T593f42(T0* C);
/* ET_ONCE_PROCEDURE.is_inline_agent */
extern T1 T592f41(T0* C);
/* ET_DEFERRED_FUNCTION.is_inline_agent */
extern T1 T588f40(T0* C);
/* ET_ONCE_FUNCTION.is_inline_agent */
extern T1 T587f43(T0* C);
/* ET_DO_FUNCTION.is_inline_agent */
extern T1 T585f43(T0* C);
/* ET_INVARIANTS.is_inline_agent */
extern T1 T464f11(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inline_agent */
extern T1 T225f38(T0* C);
/* ET_DO_PROCEDURE.is_inline_agent */
extern T1 T220f41(T0* C);
/* ET_ATTRIBUTE.is_inline_agent */
extern T1 T191f36(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inline_agent */
extern T1 T190f38(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inline_agent */
extern T1 T188f38(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inline_agent */
extern T1 T133f44(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T464f9(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1068f6(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1063f8(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1062f6(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T733f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T726f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T724f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T723f5(T0* C);
/* ET_INLINE_AGENT.expression_item */
extern T0* T721f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T720f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T719f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T718f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T714f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T712f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T711f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T710f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T709f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T706f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T705f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T691f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T643f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T484f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T481f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T452f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T451f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T450f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T449f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T447f8(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T446f8(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T445f12(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T444f12(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T443f12(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T442f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T441f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T440f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T429f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T393f8(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T359f9(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T184f10(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T180f10(T0* C);
/* ET_RESULT.expression_item */
extern T0* T171f10(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T155f7(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T88f48(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1068f13(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1062f10(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T733f14(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T726f18(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T724f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T723f13(T0* C);
/* ET_INLINE_AGENT.is_open_operand */
extern T1 T721f16(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T720f13(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T719f14(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T718f13(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T714f13(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T712f13(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T711f13(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T710f13(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T709f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T705f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T691f21(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T643f14(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T484f16(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T481f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T452f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T451f22(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T450f23(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T449f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T447f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T446f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T445f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T444f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T443f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T442f28(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T441f32(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T440f23(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T429f17(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T393f21(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T359f27(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T184f19(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T155f15(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T799f2(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T706f7(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T180f11(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T171f11(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T88f47(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T799f4(T0* C);
/* ET_INLINE_AGENT.implicit_target_position */
extern T0* T721f17(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T184f21(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T740f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T452f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T451f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T447f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T446f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T445f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T444f16(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T443f16(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T442f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T441f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T440f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T393f11(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T359f12(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T450f14(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T449f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T447f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T446f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T445f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T444f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T443f17(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T442f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T441f18(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T393f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T359f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T452f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T451f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T450f15(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T449f15(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T447f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T446f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T442f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T441f19(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T440f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T393f13(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T359f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T452f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T451f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T450f16(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T449f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T445f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T444f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T443f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T442f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T441f20(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T440f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T393f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T359f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T452f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T451f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T450f17(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T449f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T447f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T446f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T445f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T444f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T443f20(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T440f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T393f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T452f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T451f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T450f18(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T449f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T447f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T446f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T445f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T444f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T443f21(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T442f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T441f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T440f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T359f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T717f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T716f11(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T426f19(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T413f21(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T407f20(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T258f21(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T717f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T716f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T605f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T601f7(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T599f30(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T598f33(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T597f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T426f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T413f22(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T407f21(T0* C);
/* ET_AGENT_KEYWORD.is_bracket */
extern T1 T383f28(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T360f29(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T88f75(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T717f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T716f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T605f16(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T601f39(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T599f21(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T598f21(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T597f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T426f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T413f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T407f14(T0* C);
/* ET_AGENT_KEYWORD.is_infix_and */
extern T1 T383f16(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T360f20(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T258f19(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T88f40(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T717f4(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T605f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T601f40(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T599f18(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T598f18(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T597f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T426f8(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T413f10(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T407f11(T0* C);
/* ET_AGENT_KEYWORD.is_infix_and_then */
extern T1 T383f13(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T360f17(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T258f16(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T88f37(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T717f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T716f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T605f18(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T601f41(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T599f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T598f41(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T597f38(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T426f21(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T413f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T407f22(T0* C);
/* ET_AGENT_KEYWORD.is_infix_div */
extern T1 T383f29(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T360f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T258f24(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T88f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T717f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T716f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T605f19(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T601f42(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T599f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T598f42(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T597f39(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T426f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T413f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T407f23(T0* C);
/* ET_AGENT_KEYWORD.is_infix_divide */
extern T1 T383f30(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T360f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T258f25(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T88f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T717f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T716f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T605f20(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T601f43(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T599f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T598f43(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T597f40(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T426f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T413f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T407f24(T0* C);
/* ET_AGENT_KEYWORD.is_infix_ge */
extern T1 T383f31(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T360f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T258f26(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T88f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T717f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T716f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T605f21(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T601f44(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T599f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T598f44(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T597f41(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T426f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T413f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T407f25(T0* C);
/* ET_AGENT_KEYWORD.is_infix_gt */
extern T1 T383f32(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T360f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T258f27(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T88f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T717f6(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T716f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T605f22(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T601f45(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T599f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T598f20(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T597f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T426f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T413f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T407f13(T0* C);
/* ET_AGENT_KEYWORD.is_infix_implies */
extern T1 T383f15(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T360f19(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T258f18(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T88f39(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T717f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T716f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T605f23(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T601f46(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T599f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T598f45(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T597f42(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T426f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T413f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T407f26(T0* C);
/* ET_AGENT_KEYWORD.is_infix_le */
extern T1 T383f33(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T360f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T258f28(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T88f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T717f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T716f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T605f24(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T601f47(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T599f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T598f46(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T597f43(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T426f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T413f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T407f27(T0* C);
/* ET_AGENT_KEYWORD.is_infix_lt */
extern T1 T383f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T360f46(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T258f29(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T88f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T717f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T716f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T605f25(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T601f35(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T599f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T598f47(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T597f44(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T426f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T413f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T407f28(T0* C);
/* ET_AGENT_KEYWORD.is_infix_minus */
extern T1 T383f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T360f47(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T258f30(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T88f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T717f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T716f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T605f26(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T601f48(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T599f58(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T598f48(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T597f45(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T426f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T413f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T407f29(T0* C);
/* ET_AGENT_KEYWORD.is_infix_mod */
extern T1 T383f36(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T360f48(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T258f31(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T88f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T717f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T716f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T605f27(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T601f49(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T599f22(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T598f22(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T597f19(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T426f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T413f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T407f15(T0* C);
/* ET_AGENT_KEYWORD.is_infix_or */
extern T1 T383f17(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T360f21(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T258f20(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T88f41(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T716f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T605f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T601f50(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T599f19(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T598f19(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T597f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T426f9(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T413f11(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T407f12(T0* C);
/* ET_AGENT_KEYWORD.is_infix_or_else */
extern T1 T383f14(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T360f18(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T258f17(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T88f38(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T717f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T716f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T605f29(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T601f34(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T599f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T598f49(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T597f46(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T426f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T413f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T407f30(T0* C);
/* ET_AGENT_KEYWORD.is_infix_plus */
extern T1 T383f37(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T360f49(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T258f32(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T88f71(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T717f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T716f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T605f30(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T601f51(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T599f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T598f50(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T597f47(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T426f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T413f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T407f31(T0* C);
/* ET_AGENT_KEYWORD.is_infix_power */
extern T1 T383f38(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T360f50(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T258f33(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T88f72(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T717f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T716f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T605f31(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T601f52(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T599f61(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T598f51(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T597f48(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T426f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T413f33(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T407f32(T0* C);
/* ET_AGENT_KEYWORD.is_infix_times */
extern T1 T383f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T360f51(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T258f34(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T88f73(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T717f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T716f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T605f32(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T601f53(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T599f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T598f52(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T597f49(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T426f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T413f34(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T407f33(T0* C);
/* ET_AGENT_KEYWORD.is_infix_xor */
extern T1 T383f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T360f52(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T258f35(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T88f74(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T717f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T716f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T605f33(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T601f54(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T599f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T598f53(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T597f50(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T426f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T413f35(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T407f34(T0* C);
/* ET_AGENT_KEYWORD.is_infix_dotdot */
extern T1 T383f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T360f53(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T258f36(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T88f76(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T717f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T716f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T605f34(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T601f37(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T599f14(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T598f29(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T597f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T426f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T413f36(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T407f35(T0* C);
/* ET_AGENT_KEYWORD.is_prefix_minus */
extern T1 T383f42(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T360f38(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T258f37(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T88f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T717f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T716f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T605f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T601f36(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T599f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T598f30(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T597f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T426f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T413f37(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T407f36(T0* C);
/* ET_AGENT_KEYWORD.is_prefix_plus */
extern T1 T383f43(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T360f39(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T258f38(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T88f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T717f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T716f28(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T605f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T601f55(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T599f16(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T598f31(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T597f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T426f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T413f38(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T407f37(T0* C);
/* ET_AGENT_KEYWORD.is_prefix_not */
extern T1 T383f44(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T360f40(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T258f39(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T88f62(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T599f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T598f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T597f51(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T426f17(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T413f19(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T407f18(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T386f10(T0* C);
/* ET_AGENT_KEYWORD.is_precursor */
extern T1 T383f49(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T360f54(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T258f14(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T88f80(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T599f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T598f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T597f52(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T426f18(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T413f20(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T407f19(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T386f11(T0* C);
/* ET_AGENT_KEYWORD.precursor_keyword */
extern T0* T383f50(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T360f55(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T258f15(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T88f81(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T717f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T716f10(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T426f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T413f16(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T407f17(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T258f13(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T717f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T716f30(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T426f15(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T413f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T407f42(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T386f12(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T258f8(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T717f29(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T716f29(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T426f41(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T413f39(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T407f39(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T258f40(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T641f9(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T152f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1068f7(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T184f7(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T155f6(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T152f2(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1068f8(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T719f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T641f8(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1074f3(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1068f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1063f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1062f7(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T737f9(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T733f12(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T728f7(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T726f16(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T724f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T723f11(T0* C);
/* ET_INLINE_AGENT.is_empty_actual_argument */
extern T1 T721f14(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T720f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T719f12(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T718f11(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T714f11(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T712f11(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T711f11(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T710f11(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T709f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T706f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T705f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T691f16(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T643f12(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T641f12(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T484f15(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T481f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T452f21(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T451f21(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T450f22(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T449f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T447f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T446f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T445f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T444f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T443f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T442f27(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T441f31(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T440f22(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T429f16(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T393f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T359f22(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T184f17(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T180f18(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T171f18(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T155f16(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T151f10(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T88f84(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T641f10(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1074f2(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1068f5(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1063f4(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1062f5(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T737f7(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T733f8(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T728f8(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T726f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T724f10(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T723f7(T0* C, T6 a1);
/* ET_INLINE_AGENT.actual_argument */
extern T0* T721f9(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T720f7(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T719f6(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T718f7(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T714f7(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T712f7(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T711f7(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T710f7(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T709f7(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T706f9(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T705f10(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T691f8(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T643f7(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T641f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T484f10(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T481f8(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T452f10(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T451f10(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T450f12(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T449f12(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T447f11(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T446f11(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T445f15(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T444f15(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T443f15(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T442f12(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T441f16(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T440f11(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T429f12(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T393f10(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T359f11(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T184f13(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T180f13(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T171f13(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T155f9(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T151f8(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T88f54(T0* C, T6 a1);
/* ET_INFIX_NAME.feature_name */
extern T0* T599f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T598f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T597f6(T0* C);
/* ET_AGENT_KEYWORD.feature_name */
extern T0* T383f9(T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T360f9(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T88f30(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1068f12(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1063f1(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1062f11(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T733f10(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T726f13(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T724f12(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T723f9(T0* C);
/* ET_INLINE_AGENT.is_current */
extern T1 T721f11(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T720f9(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T719f9(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T718f9(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T714f9(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T712f9(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T711f9(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T710f9(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T709f9(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T706f11(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T705f12(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T691f13(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T643f10(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T484f12(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T481f10(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T452f19(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T451f19(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T450f20(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T449f20(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T447f21(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T446f21(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T445f31(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T444f32(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T443f32(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T442f25(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T441f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T440f20(T0* C);
/* ET_VOID.is_current */
extern T1 T429f14(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T393f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T359f20(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T184f15(T0* C);
/* ET_RESULT.is_current */
extern T1 T171f16(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T155f13(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T88f82(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1068f9(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1063f6(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1062f8(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T733f13(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T726f17(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T726f20(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T724f16(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T724f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T723f12(T0* C);
/* ET_INLINE_AGENT.position */
extern T0* T721f15(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T720f12(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T719f13(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T718f12(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T714f12(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T712f12(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T711f12(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T710f12(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T709f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T706f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T705f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T691f17(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T643f13(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T484f18(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T484f19(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T481f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T452f25(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T451f25(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T450f24(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T449f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T447f26(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T446f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T445f7(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T444f7(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T443f7(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T442f19(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T441f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T440f26(T0* C);
/* ET_VOID.position */
extern T0* T429f18(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T393f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T359f18(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T184f18(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T184f20(T0* C);
/* ET_CURRENT.position */
extern T0* T180f14(T0* C);
/* ET_RESULT.position */
extern T0* T171f15(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T155f17(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1068f15(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1063f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1062f13(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T733f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T726f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T724f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T723f14(T0* C);
/* ET_INLINE_AGENT.last_leaf */
extern T0* T721f18(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T737f10(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T720f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T719f15(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T718f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T714f14(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T712f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T711f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T710f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T709f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T706f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T705f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T691f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T643f15(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T258f79(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T728f10(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T484f20(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T481f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T452f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T451f32(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T450f28(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T449f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T447f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T446f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T445f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T444f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T443f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T442f31(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T441f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T440f33(T0* C);
/* ET_VOID.last_leaf */
extern T0* T429f22(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T393f26(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T359f30(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T184f22(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T180f25(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T171f22(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T155f21(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T593f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T225f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T220f40(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T593f71(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T592f69(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T588f67(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T587f70(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T585f70(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T225f66(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T220f69(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T191f63(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T190f65(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T188f65(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T133f72(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T593f65(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T592f63(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T588f64(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T587f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T585f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T225f60(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T220f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T191f60(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T190f62(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T188f62(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T133f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T593f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T225f83(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T225f82(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T225f81(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T225f79(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T592f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T588f65(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T588f85(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T588f84(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T588f83(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T588f81(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T587f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T585f68(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T225f64(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T220f67(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T191f61(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T191f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T190f63(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T190f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T188f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T188f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T133f70(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T593f70(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T593f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T593f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T593f88(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T593f87(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T592f68(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T592f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T592f88(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T592f87(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T592f86(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T588f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T588f82(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T587f69(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T587f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T587f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T587f89(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T587f88(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T585f69(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T585f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T585f90(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T585f89(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T585f88(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T225f65(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T225f80(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T220f68(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T220f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T220f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T220f87(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T220f86(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T191f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T191f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T191f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T191f74(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T190f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T190f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T190f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T190f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T190f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T190f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T188f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T188f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T188f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T188f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T188f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T133f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T133f92(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T133f91(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T133f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T133f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T593f68(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T592f66(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T225f63(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T220f66(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T593f67(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T592f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T225f62(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T220f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T593f66(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T592f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T225f61(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T220f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T593f20(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T592f20(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T225f7(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T220f6(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T593f25(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T592f25(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T225f3(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T220f2(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T593f21(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T592f21(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T225f4(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T220f3(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T593f26(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T592f26(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T225f5(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T220f4(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T191f31(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T190f33(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T188f33(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T191f32(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T190f34(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T188f34(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T593f41(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T592f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T588f51(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T587f52(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T585f52(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T225f46(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T220f48(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T191f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T190f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T188f49(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T133f43(T0* C);
/* ET_EXTERNAL_PROCEDURE.position */
extern T0* T593f50(T0* C);
/* ET_ONCE_PROCEDURE.position */
extern T0* T592f49(T0* C);
/* ET_ONCE_FUNCTION.position */
extern T0* T587f53(T0* C);
/* ET_DO_FUNCTION.position */
extern T0* T585f53(T0* C);
/* ET_DO_PROCEDURE.position */
extern T0* T220f49(T0* C);
/* ET_EXTERNAL_FUNCTION.position */
extern T0* T133f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.first_leaf */
extern T0* T593f64(T0* C);
/* ET_ONCE_PROCEDURE.first_leaf */
extern T0* T592f62(T0* C);
/* ET_ONCE_FUNCTION.first_leaf */
extern T0* T587f66(T0* C);
/* ET_DO_FUNCTION.first_leaf */
extern T0* T585f66(T0* C);
/* ET_DO_PROCEDURE.first_leaf */
extern T0* T220f62(T0* C);
/* ET_EXTERNAL_FUNCTION.first_leaf */
extern T0* T133f68(T0* C);
/* ET_EXTERNAL_PROCEDURE.last_leaf */
extern T0* T593f72(T0* C);
/* ET_ONCE_PROCEDURE.last_leaf */
extern T0* T592f70(T0* C);
/* ET_ONCE_FUNCTION.last_leaf */
extern T0* T587f71(T0* C);
/* ET_DO_FUNCTION.last_leaf */
extern T0* T585f71(T0* C);
/* ET_DO_PROCEDURE.last_leaf */
extern T0* T220f70(T0* C);
/* ET_EXTERNAL_FUNCTION.last_leaf */
extern T0* T133f73(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T796f1(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T758f3(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T637f11(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T635f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T633f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T510f7(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T509f9(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T497f23(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T489f20(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T338f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T131f12(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T129f5(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T43f52(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T796f2(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T758f4(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T637f10(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T635f5(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T633f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T510f6(T0* C);
/* ET_BIT_N.type */
extern T0* T509f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T497f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T489f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T338f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T131f13(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T129f6(T0* C);
/* ET_CLASS.type */
extern T0* T43f53(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T796f50(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T758f6(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T637f52(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T635f56(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T633f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T510f90(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T509f89(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T497f59(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T489f57(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T338f83(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T131f87(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T129f88(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T43f156(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T796f51(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T758f7(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T637f53(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T635f57(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T633f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T510f91(T0* C);
/* ET_BIT_N.label */
extern T0* T509f90(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T497f60(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T489f58(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T338f84(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T131f88(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T129f89(T0* C);
/* ET_CLASS.label */
extern T0* T43f157(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_subset */
extern T1 T350f4(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_subset */
extern T1 T226f3(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_subset */
extern T1 T187f5(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_subset */
extern T1 T170f29(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_subset */
extern T1 T169f30(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.is_subset */
extern T1 T168f29(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.is_subset */
extern T1 T164f29(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.is_subset */
extern T1 T113f27(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T350f6(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T226f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T187f7(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T170f14(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T169f15(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T168f14(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T164f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T113f20(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T350f10(T0* C);
/* ET_DYNAMIC_TYPE_LIST.special_type */
extern T0* T143f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T226f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T187f10(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T170f31(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T169f32(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T168f31(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T164f31(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T113f29(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T350f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T226f9(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T187f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T350f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has_expanded */
extern T1 T143f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T226f4(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T187f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T170f13(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T169f14(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T168f13(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T164f13(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T113f19(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T350f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T226f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T187f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T170f15(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T169f16(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T168f15(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T164f15(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T113f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T131f15(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T136f11(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T129f18(T0* C);
/* ET_CLASS.is_separate */
extern T1 T43f57(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T43f58(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T598f27(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T597f25(T0* C);
/* ET_AGENT_KEYWORD.is_infix */
extern T1 T383f23(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T88f56(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T599f27(T0* C);
/* ET_AGENT_KEYWORD.is_prefix */
extern T1 T383f22(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T360f26(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T88f55(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T599f9(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T598f12(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T597f9(T0* C);
/* ET_AGENT_KEYWORD.argument_name */
extern T0* T383f46(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T360f12(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T88f51(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T599f11(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T598f14(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T597f11(T0* C);
/* ET_AGENT_KEYWORD.local_name */
extern T0* T383f48(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T360f14(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T88f52(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T599f8(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T598f11(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T597f8(T0* C);
/* ET_AGENT_KEYWORD.is_argument */
extern T1 T383f45(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T360f11(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T88f17(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T599f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T598f13(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T597f10(T0* C);
/* ET_AGENT_KEYWORD.is_local */
extern T1 T383f47(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T360f13(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T88f19(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T599f17(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T598f17(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T597f14(T0* C);
/* ET_AGENT_KEYWORD.is_tuple_label */
extern T1 T383f18(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T360f16(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T88f23(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T599f23(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T597f20(T0* C);
/* ET_AGENT_KEYWORD.hash_code */
extern T6 T383f11(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T599f68(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T598f57(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T597f54(T0* C);
/* ET_AGENT_KEYWORD.first_leaf */
extern T0* T383f53(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T360f57(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T88f90(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T599f24(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T598f23(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T597f21(T0* C);
/* ET_AGENT_KEYWORD.lower_name */
extern T0* T383f19(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T360f22(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T88f36(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T599f26(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T598f25(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T597f23(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T383f21(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T360f25(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T88f32(T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T599f13(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T598f16(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T597f13(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.same_feature_name */
extern T1 T383f20(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T360f24(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T88f49(T0* C, T0* a1);
/* ET_INFIX_NAME.last_leaf */
extern T0* T599f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T598f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T597f53(T0* C);
/* ET_AGENT_KEYWORD.last_leaf */
extern T0* T383f52(T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T360f56(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T88f86(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T599f25(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T598f24(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T597f22(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T360f23(T0* C);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T510f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T509f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T338f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T131f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T129f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T43f113(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T213f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T213f31(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T213f30(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T213f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T213f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T213f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T213f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T510f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T509f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T338f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T131f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T129f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T43f123(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T213f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T213f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T213f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T213f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T213f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T213f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T213f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T213f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T510f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T509f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T338f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T131f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T129f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T43f149(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T510f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T509f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T338f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T131f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T129f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T43f150(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T213f9(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T510f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T509f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T338f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T131f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T129f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T43f151(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T510f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T509f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T338f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T131f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T129f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T43f152(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T213f10(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T213f11(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T510f29(T0* C);
/* ET_BIT_N.root_context */
extern T0* T509f29(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T338f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T131f25(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T129f24(T0* C);
/* ET_CLASS.root_context */
extern T0* T43f91(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T213f8(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T213f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T796f5(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T637f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T635f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T510f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T509f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T497f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T489f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T338f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T130f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T131f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T129f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T43f82(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T796f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T637f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T635f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T510f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T509f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T497f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T489f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T338f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T131f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T129f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T43f86(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T796f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T637f8(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T635f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T510f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T509f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T497f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T489f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T338f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T131f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T129f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T43f92(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T796f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T637f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T635f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T510f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T509f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T497f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T489f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T338f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T131f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T129f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T43f112(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T796f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T43f132(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T637f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T635f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T497f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T489f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T796f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T637f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T635f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T510f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T509f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T497f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T489f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T338f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T131f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T129f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T43f122(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T796f4(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T637f5(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T635f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T510f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T509f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T497f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T489f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T338f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T131f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T337f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T129f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T43f78(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T796f23(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T637f24(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T635f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T510f34(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T509f33(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T497f35(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T489f28(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T338f26(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T130f15(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T131f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T337f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T129f28(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T43f104(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T796f24(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T637f25(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T43f121(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T635f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T510f35(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T509f34(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T497f36(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T489f29(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T338f27(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T130f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T131f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T337f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T129f29(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T43f105(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T796f3(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T637f4(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T635f12(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T497f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T489f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T796f21(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T637f22(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T635f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T510f31(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T509f31(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T497f44(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T489f42(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T338f23(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T131f26(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T129f25(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T43f102(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T796f16(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T637f23(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T635f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T510f16(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T509f19(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T497f28(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T489f21(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T338f13(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T131f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T129f14(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T43f56(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T796f33(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T637f42(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T635f44(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T510f46(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T509f45(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T497f33(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T489f35(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T338f42(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T131f47(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T129f46(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T43f109(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T796f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T637f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T635f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T497f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T489f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T796f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T637f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T635f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T510f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T509f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T497f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T489f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T338f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T131f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge258os1593;
extern T0* ge258ov1593;
extern T0* T131f39(T0* C);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T131f38(T0* C);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T337f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T130f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T129f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T129f35(T0* C);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T129f34(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T43f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T43f138(T0* C);
/* ET_CLASS.ise_5_6_latest */
extern T0* T43f137(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T796f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T637f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T635f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T510f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T509f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T497f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T489f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T338f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T130f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T131f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T129f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T43f107(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T796f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T637f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T635f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T510f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T509f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T497f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T489f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T338f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T131f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T129f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T43f110(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T796f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T796f37(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T637f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T635f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T510f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T510f51(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T509f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T509f50(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T497f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T497f38(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T489f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T489f34(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T338f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T338f72(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T131f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T129f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T43f108(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T796f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T637f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T635f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T510f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T509f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T497f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T489f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T338f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T130f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T131f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T129f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T43f83(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T796f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T637f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T635f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T510f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T509f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T497f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T489f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T338f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T131f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T337f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T129f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T43f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T796f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T637f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T635f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T510f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T509f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T497f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T489f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T338f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T131f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T129f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T43f87(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T796f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T637f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T635f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T510f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T509f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T497f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T489f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T338f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T131f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T129f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T43f93(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T796f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T637f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T635f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T510f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T509f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T497f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T489f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T338f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T131f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T129f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T43f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T796f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T637f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T635f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T510f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T509f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T497f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T489f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T338f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T131f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T129f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T43f84(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T796f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T637f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T635f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T510f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T509f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T497f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T489f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T338f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T131f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T129f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T43f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T796f9(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T637f17(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T635f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T510f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T509f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T497f13(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T489f10(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T338f8(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T130f8(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T130f27(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T131f2(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T337f12(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T129f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T43f25(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T796f40(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T637f41(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T635f43(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T510f75(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T509f74(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T497f49(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T489f47(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T338f66(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T131f71(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T129f71(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T43f136(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T796f48(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T637f49(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T635f51(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T510f81(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T509f80(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T338f75(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T130f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T131f79(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T337f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T129f79(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T796f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T637f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T635f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T510f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T509f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T497f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T489f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T338f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T131f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T129f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T43f133(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T796f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T637f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T635f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T510f76(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T509f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T497f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T489f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T338f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T131f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T129f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T43f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T796f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T637f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T635f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T510f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T510f83(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T497f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T489f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T796f44(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T637f45(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T635f47(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T510f48(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T509f46(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T497f53(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T489f51(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T338f33(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T131f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T129f30(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T43f94(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T796f45(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T637f46(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T635f48(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T510f49(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T497f54(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T489f52(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T796f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T637f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T635f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T510f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T509f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T497f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T489f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T338f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T131f77(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T129f77(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T43f147(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T796f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T637f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T635f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T510f82(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T509f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T497f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T489f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T338f76(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T131f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T129f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T43f148(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T796f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T637f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T635f8(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T510f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T497f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T489f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T796f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T637f16(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T635f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T510f9(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T509f13(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T497f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T489f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T338f7(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T131f1(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T129f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T43f24(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T796f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T637f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T635f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T510f8(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T509f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T497f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T489f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T338f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T796f42(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T637f39(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T635f41(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T510f68(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T509f67(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T497f51(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T489f49(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T338f67(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T130f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T796f52(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T637f54(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T635f58(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T510f92(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T509f91(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T497f61(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T489f59(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T338f81(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T131f85(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T129f72(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T796f47(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T637f48(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T635f50(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T497f56(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T489f54(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T796f22(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T637f12(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T635f7(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T510f32(T0* C);
/* ET_BIT_N.position */
extern T0* T509f10(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T497f48(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T489f46(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T338f24(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T796f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T637f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T635f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T510f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T509f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T497f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T489f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T338f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T131f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T129f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T43f100(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T593f18(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T593f91(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T592f18(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T592f90(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T225f23(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T225f84(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T220f25(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T220f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T593f43(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T592f42(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T220f42(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T593f44(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T592f43(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T225f40(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T220f43(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T593f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T43f101(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T458f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T552f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T378f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T43f145(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T348f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T377f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T592f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T225f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T220f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T593f22(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T592f22(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T225f20(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T220f22(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T593f27(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T592f27(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T225f25(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T220f27(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T593f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T592f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T225f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T220f47(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T593f3(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T592f3(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T225f2(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T220f1(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T593f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T593f63(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T592f59(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T592f61(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T225f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T225f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T220f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T220f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T593f28(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T592f28(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T225f26(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T220f28(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T593f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T592f60(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T225f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T220f60(T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T588f18(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T588f86(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T587f20(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T587f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T585f20(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T585f92(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T191f10(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T191f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T190f12(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T190f81(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T188f12(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T188f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T133f21(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T133f93(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T587f44(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T585f44(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T191f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T190f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T188f39(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T133f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T588f42(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T587f45(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T585f45(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T191f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T190f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T188f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T133f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T588f45(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T587f48(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T585f48(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T191f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T190f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T188f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T133f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T588f43(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T587f46(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T585f46(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T133f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T588f44(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T587f47(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T585f47(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T191f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T190f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T188f42(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T133f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T588f46(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T585f42(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T191f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T190f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T188f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T133f50(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T588f21(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T587f23(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T585f23(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T191f13(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T190f15(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T133f24(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T588f26(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T587f28(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T585f28(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T191f18(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T188f20(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T133f28(T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T588f20(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T587f22(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T585f22(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T190f14(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T188f14(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T133f23(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T588f27(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T587f29(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T585f29(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T191f20(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T190f22(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T188f22(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T133f29(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T588f50(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T587f51(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T585f51(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T191f46(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T190f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T188f48(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T133f54(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T191f19(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T190f21(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T188f21(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T588f25(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T587f27(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T585f27(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T191f17(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T190f19(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T188f15(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T133f5(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T588f61(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T588f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T587f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T587f65(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T585f63(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T585f65(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T191f57(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T191f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T190f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T190f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T188f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T188f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T133f65(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T133f67(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T588f28(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T587f30(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T585f30(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T191f21(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T190f23(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T188f23(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T133f30(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T588f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T587f64(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T585f64(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T191f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T190f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T188f60(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T133f66(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T588f5(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T587f3(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T585f3(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T191f3(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T190f3(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T188f3(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T133f3(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T588f22(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T587f24(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T585f24(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T191f14(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T190f16(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T188f17(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T133f25(T0* C, T6 a1);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T510f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T509f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T338f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T131f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T129f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T43f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T131f6(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T129f16(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T43f3(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T43f8(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T131f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T129f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T43f106(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T510f88(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T509f87(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T338f82(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T131f86(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T131f90(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T129f85(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T129f87(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T43f155(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T131f16(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T129f19(T0* C);
/* ET_CLASS.is_generic */
extern T1 T43f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T131f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T337f21(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T129f64(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T43f135(T0* C, T0* a1);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T510f19(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T509f21(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T129f4(T0* C);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T510f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T509f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T338f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T131f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T129f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T43f119(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T510f59(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T509f58(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T338f50(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T131f55(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T129f55(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T43f120(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T510f53(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T509f52(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T338f44(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T131f49(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T129f49(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T43f111(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T510f77(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T509f76(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T509f82(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T338f69(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T338f74(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T130f21(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T131f74(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T131f89(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T337f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T129f74(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T129f86(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T43f142(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T43f154(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T510f27(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T509f27(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T338f20(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T131f23(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T129f22(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T43f89(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T510f28(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T509f28(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T338f21(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T131f24(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T129f23(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T43f90(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T510f78(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T509f77(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T338f70(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T131f75(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T129f75(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T43f143(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T510f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T509f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T338f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T131f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T129f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T43f114(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T510f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T509f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T338f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T131f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T129f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T43f129(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T510f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T509f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T338f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T131f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T129f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T43f130(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T510f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T509f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T338f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T131f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T129f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T43f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T510f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T509f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T338f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T131f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T129f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T43f128(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T510f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T509f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T338f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T131f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T129f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T43f126(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T510f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T509f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T338f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T131f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T129f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T43f125(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T510f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T509f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T338f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T131f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T129f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T43f127(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T510f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T509f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T338f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T131f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T129f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T43f124(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T510f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T509f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T338f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T131f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T129f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T43f116(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T510f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T509f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T338f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T131f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T129f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T43f117(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T510f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T509f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T338f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T131f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T129f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T43f118(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T510f54(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T509f53(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T338f45(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T131f50(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T129f50(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T43f115(T0* C, T0* a1);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T510f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T509f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T338f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T131f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T129f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T43f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T131f27(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T129f26(T0* C);
/* ET_CLASS.position */
extern T0* T43f103(T0* C);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T131f78(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T129f78(T0* C);
/* ET_CLASS.upper_name */
extern T0* T43f20(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T509f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T338f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T131f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T129f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T43f144(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T510f52(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T509f51(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T338f36(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T131f40(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T129f33(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T43f96(T0* C);
/* ET_BIT_N.base_type_actual */
extern T0* T509f47(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T338f34(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T131f37(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T129f31(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T43f95(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T509f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T338f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T131f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T129f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T43f134(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T510f11(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T509f15(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T338f9(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T131f10(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T129f10(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T43f22(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T510f20(T0* C);
/* ET_BIT_N.to_text */
extern T0* T509f11(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T338f14(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T131f5(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T129f15(T0* C);
/* ET_CLASS.to_text */
extern T0* T43f1(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T170f7(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T169f7(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T168f7(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T164f7(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T113f4(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T170f5(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T169f5(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T168f5(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T164f5(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T113f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T170f28(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T169f29(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T164f28(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T113f26(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T170f3(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T169f3(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T168f3(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T164f3(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T113f5(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T170f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T165f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge889os13197;
extern T0* ge889ov13197;
extern T0* T165f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T165f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T165f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T170f21(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T111f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T49f208(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T350c11(T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T170f22(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T170f21p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T165c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T169f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T169f22(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T169f23(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T169f22p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T168f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T168f21(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T168f22(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T168f21p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T164f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T164f21(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T111f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T49f207(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge764os10647;
extern T0* ge764ov10647;
extern T0* T127f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T164f22(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T164f21p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T113f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T113f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T170f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T170f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T169f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T169f20(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.last_result_feature_name */
extern unsigned char ge764os10636;
extern T0* ge764ov10636;
extern T0* T127f38(T0* C);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T120f62(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T169f20p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T168f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T168f19(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge764os10611;
extern T0* ge764ov10611;
extern T0* T127f32(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T168f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T164f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T164f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T111f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T49f206(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge764os10649;
extern T0* ge764ov10649;
extern T0* T127f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T164f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T113f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T113f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T170f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T169f12(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T168f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T164f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T113f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T168f32(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T164f32(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T113f30(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T170f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T169f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T168f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T164f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T113f28(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T170f23(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T169f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T168f23(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T164f23(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T113f22(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T170f34(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T169f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T168f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T164f33(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T113f31(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1136f1(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1136f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1136f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1136f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T786f1(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T786f3(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T786f6(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T786f4(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T785f1(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T785f3(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T785f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T785f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T347f1(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T347f3(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T347f6(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T347f4(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T346f1(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T346f3(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T346f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T346f4(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T345f1(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T345f3(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T345f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T345f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T57f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T57f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T57f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T57f5(T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T56f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T56f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T56f6(T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T56f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T54f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T54f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T54f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T54f5(T0* C);
extern T0* gema60(T6 c, ...);
extern T0* gema219(T6 c, ...);
extern int gevoid(T0* C, ...);
extern T0* ge414ov6544;
extern T0* ge418ov8119;
extern T0* ge764ov10758;
extern T0* ge764ov10901;
extern T0* ge764ov10917;
extern T0* ge402ov1676;
extern T0* ge932ov5622;
extern T0* ge932ov5589;
extern T0* ge932ov5547;
extern T0* ge927ov15760;
extern T0* ge927ov15759;
extern T0* ge927ov15758;
extern T0* ge764ov10875;
extern T0* ge932ov5584;
extern T0* ge932ov5580;
extern T0* ge932ov5608;
extern T0* ge932ov5559;
extern T0* ge932ov5579;
extern T0* ge932ov5614;
extern T0* ge932ov5598;
extern T0* ge932ov5586;
extern T0* ge932ov5623;
extern T0* ge932ov5611;
extern T0* ge764ov10878;
extern T0* ge932ov5596;
extern T0* ge932ov5626;
extern T0* ge932ov5624;
extern T0* ge932ov5628;
extern T0* ge932ov5609;
extern T0* ge932ov5625;
extern T0* ge932ov5549;
extern T0* ge932ov5548;
extern T0* ge932ov5612;
extern T0* ge932ov5583;
extern T0* ge932ov5621;
extern T0* ge932ov5591;
extern T0* ge932ov5553;
extern T0* ge932ov5590;
extern T0* ge932ov5603;
extern T0* ge932ov5582;
extern T0* ge932ov5575;
extern T0* ge932ov5574;
extern T0* ge932ov5560;
extern T0* ge932ov5555;
extern T0* ge932ov5554;
extern T0* ge932ov5567;
extern T0* ge932ov5566;
extern T0* ge932ov5565;
extern T0* ge932ov5587;
extern T0* ge932ov5550;
extern T0* ge932ov5597;
extern T0* ge932ov5620;
extern T0* ge932ov5581;
extern T0* ge932ov5552;
extern T0* ge932ov5573;
extern T0* ge932ov5556;
extern T0* ge932ov5557;
extern T0* ge932ov5561;
extern T0* ge932ov5562;
extern T0* ge932ov5563;
extern T0* ge932ov5564;
extern T0* ge932ov5568;
extern T0* ge932ov5569;
extern T0* ge932ov5570;
extern T0* ge932ov5571;
extern T0* ge932ov5572;
extern T0* ge932ov5576;
extern T0* ge932ov5577;
extern T0* ge932ov5558;
extern T0* ge932ov5619;
extern T0* ge764ov10766;
extern T0* ge764ov10785;
extern T0* ge764ov10775;
extern T0* ge764ov10769;
extern T0* ge764ov10798;
extern T0* ge764ov10763;
extern T0* ge764ov10897;
extern T0* ge391ov1696;
extern T0* ge416ov6544;
extern T0* ge930ov15790;
extern T0* ge930ov15784;
extern T0* ge930ov15778;
extern T0* ge930ov15786;
extern T0* ge930ov15780;
extern T0* ge930ov15774;
extern T0* ge930ov15789;
extern T0* ge930ov15783;
extern T0* ge930ov15777;
extern T0* ge930ov15791;
extern T0* ge930ov15785;
extern T0* ge930ov15779;
extern T0* ge764ov10828;
extern T0* ge930ov15788;
extern T0* ge930ov15782;
extern T0* ge930ov15776;
extern T0* ge764ov10849;
extern T0* ge764ov10873;
extern T0* ge764ov10844;
extern T0* ge764ov10826;
extern T0* ge931ov17018;
extern T0* ge931ov16654;
extern T0* ge931ov16516;
extern T0* ge931ov17016;
extern T0* ge931ov16652;
extern T0* ge931ov16514;
extern T0* ge931ov17017;
extern T0* ge931ov16653;
extern T0* ge931ov16515;
extern T0* ge764ov10801;
extern T0* ge930ov15787;
extern T0* ge930ov15781;
extern T0* ge930ov15775;
extern T0* ge923ov21096;
extern T0* ge923ov21094;
extern T0* ge923ov21092;
extern T0* ge1046ov17736;
extern T0* ge922ov19997;
extern T0* ge922ov19993;
extern T0* ge922ov19989;
extern T0* ge392ov7892;
extern T0* ge563ov9275;
extern T0* ge563ov9276;
extern T0* ge922ov19998;
extern T0* ge922ov19994;
extern T0* ge922ov19990;
extern T0* ge929ov20006;
extern T0* ge929ov20005;
extern T0* ge931ov16863;
extern T0* ge931ov16615;
extern T0* ge931ov16361;
extern T0* ge931ov16865;
extern T0* ge931ov16363;
extern T0* ge931ov16858;
extern T0* ge931ov16356;
extern T0* ge931ov16861;
extern T0* ge931ov16359;
extern T0* ge931ov16857;
extern T0* ge931ov16355;
extern T0* ge931ov16856;
extern T0* ge931ov16354;
extern T0* ge764ov10891;
extern T0* ge764ov10799;
extern T0* ge764ov10984;
extern T0* ge764ov10985;
extern T0* ge764ov10986;
extern T0* ge764ov10987;
extern T0* ge764ov10988;
extern T0* ge764ov10989;
extern T0* ge764ov10990;
extern T0* ge764ov10991;
extern T0* ge764ov10992;
extern T0* ge764ov10993;
extern T0* ge764ov10994;
extern T0* ge764ov10995;
extern T0* ge764ov10996;
extern T0* ge764ov10997;
extern T0* ge764ov10998;
extern T0* ge764ov10999;
extern T0* ge764ov11000;
extern T0* ge764ov11001;
extern T0* ge764ov11002;
extern T0* ge764ov11003;
extern T0* ge764ov11004;
extern T0* ge764ov11005;
extern T0* ge764ov11006;
extern T0* ge764ov11007;
extern T0* ge764ov11049;
extern T0* ge764ov10759;
extern T0* ge764ov10760;
extern T0* ge764ov10761;
extern T0* ge764ov10762;
extern T0* ge764ov10764;
extern T0* ge764ov10765;
extern T0* ge764ov10767;
extern T0* ge764ov10768;
extern T0* ge764ov10770;
extern T0* ge764ov10771;
extern T0* ge764ov10772;
extern T0* ge764ov10773;
extern T0* ge764ov10774;
extern T0* ge764ov10776;
extern T0* ge764ov10777;
extern T0* ge764ov10778;
extern T0* ge764ov10779;
extern T0* ge764ov10780;
extern T0* ge764ov10781;
extern T0* ge764ov10782;
extern T0* ge764ov10783;
extern T0* ge764ov10784;
extern T0* ge764ov10786;
extern T0* ge764ov10787;
extern T0* ge764ov10788;
extern T0* ge764ov10789;
extern T0* ge764ov10790;
extern T0* ge764ov10791;
extern T0* ge764ov10792;
extern T0* ge764ov10793;
extern T0* ge764ov10794;
extern T0* ge764ov10795;
extern T0* ge764ov10796;
extern T0* ge764ov10797;
extern T0* ge764ov10800;
extern T0* ge764ov10802;
extern T0* ge764ov10803;
extern T0* ge764ov10804;
extern T0* ge764ov10805;
extern T0* ge764ov10806;
extern T0* ge764ov10807;
extern T0* ge764ov10808;
extern T0* ge764ov10809;
extern T0* ge764ov10810;
extern T0* ge764ov10811;
extern T0* ge764ov10812;
extern T0* ge764ov10813;
extern T0* ge764ov10814;
extern T0* ge764ov10815;
extern T0* ge764ov10816;
extern T0* ge764ov10817;
extern T0* ge764ov10818;
extern T0* ge764ov10819;
extern T0* ge764ov10820;
extern T0* ge764ov10821;
extern T0* ge764ov10822;
extern T0* ge764ov10823;
extern T0* ge764ov10824;
extern T0* ge764ov10825;
extern T0* ge764ov10827;
extern T0* ge764ov10829;
extern T0* ge764ov10830;
extern T0* ge764ov10831;
extern T0* ge764ov10832;
extern T0* ge764ov10833;
extern T0* ge764ov10834;
extern T0* ge764ov10835;
extern T0* ge764ov10836;
extern T0* ge764ov10837;
extern T0* ge764ov10838;
extern T0* ge764ov10839;
extern T0* ge764ov10840;
extern T0* ge764ov10841;
extern T0* ge764ov10842;
extern T0* ge764ov10843;
extern T0* ge764ov10845;
extern T0* ge764ov10846;
extern T0* ge764ov10847;
extern T0* ge764ov10848;
extern T0* ge764ov10850;
extern T0* ge764ov10851;
extern T0* ge764ov10852;
extern T0* ge764ov10853;
extern T0* ge764ov10854;
extern T0* ge764ov10855;
extern T0* ge764ov10856;
extern T0* ge764ov10857;
extern T0* ge764ov10858;
extern T0* ge764ov10859;
extern T0* ge764ov10860;
extern T0* ge764ov10861;
extern T0* ge764ov10862;
extern T0* ge764ov10863;
extern T0* ge764ov10864;
extern T0* ge764ov10865;
extern T0* ge764ov10866;
extern T0* ge764ov10867;
extern T0* ge764ov10868;
extern T0* ge764ov10869;
extern T0* ge764ov10870;
extern T0* ge764ov10871;
extern T0* ge764ov10872;
extern T0* ge764ov10874;
extern T0* ge764ov10876;
extern T0* ge764ov10877;
extern T0* ge764ov10879;
extern T0* ge764ov10880;
extern T0* ge764ov10881;
extern T0* ge764ov10882;
extern T0* ge764ov10883;
extern T0* ge764ov10884;
extern T0* ge764ov10885;
extern T0* ge764ov10887;
extern T0* ge764ov10888;
extern T0* ge764ov10889;
extern T0* ge764ov10890;
extern T0* ge764ov10892;
extern T0* ge764ov10893;
extern T0* ge764ov10894;
extern T0* ge764ov10895;
extern T0* ge764ov10896;
extern T0* ge764ov10898;
extern T0* ge764ov10899;
extern T0* ge764ov10900;
extern T0* ge764ov10902;
extern T0* ge764ov10903;
extern T0* ge764ov10904;
extern T0* ge764ov10905;
extern T0* ge764ov10906;
extern T0* ge764ov10907;
extern T0* ge764ov10908;
extern T0* ge764ov10909;
extern T0* ge764ov10910;
extern T0* ge764ov10911;
extern T0* ge764ov10912;
extern T0* ge764ov10913;
extern T0* ge764ov10914;
extern T0* ge764ov10915;
extern T0* ge764ov10916;
extern T0* ge764ov10918;
extern T0* ge764ov10919;
extern T0* ge764ov10920;
extern T0* ge764ov10921;
extern T0* ge764ov10922;
extern T0* ge764ov10923;
extern T0* ge764ov10924;
extern T0* ge764ov10925;
extern T0* ge764ov10927;
extern T0* ge764ov10928;
extern T0* ge764ov10929;
extern T0* ge764ov10930;
extern T0* ge764ov10931;
extern T0* ge764ov10932;
extern T0* ge764ov10933;
extern T0* ge764ov10934;
extern T0* ge764ov10935;
extern T0* ge764ov10936;
extern T0* ge764ov10937;
extern T0* ge764ov10938;
extern T0* ge764ov10939;
extern T0* ge764ov10940;
extern T0* ge764ov10941;
extern T0* ge764ov10942;
extern T0* ge764ov10943;
extern T0* ge764ov10944;
extern T0* ge764ov10945;
extern T0* ge764ov10946;
extern T0* ge764ov10947;
extern T0* ge764ov10948;
extern T0* ge764ov10949;
extern T0* ge764ov10950;
extern T0* ge764ov10951;
extern T0* ge764ov10952;
extern T0* ge764ov10953;
extern T0* ge764ov10954;
extern T0* ge764ov10955;
extern T0* ge764ov10956;
extern T0* ge764ov10957;
extern T0* ge764ov10958;
extern T0* ge764ov10959;
extern T0* ge764ov10960;
extern T0* ge764ov10961;
extern T0* ge764ov10962;
extern T0* ge764ov10963;
extern T0* ge764ov10964;
extern T0* ge764ov10965;
extern T0* ge764ov10966;
extern T0* ge764ov10967;
extern T0* ge764ov10968;
extern T0* ge764ov10969;
extern T0* ge764ov10970;
extern T0* ge764ov10971;
extern T0* ge764ov10972;
extern T0* ge764ov10973;
extern T0* ge764ov10974;
extern T0* ge764ov10975;
extern T0* ge764ov10976;
extern T0* ge764ov10977;
extern T0* ge764ov10978;
extern T0* ge764ov10979;
extern T0* ge764ov10980;
extern T0* ge764ov10981;
extern T0* ge764ov10982;
extern T0* ge292ov9002;
extern T0* ge415ov20024;
extern T0* ge389ov17724;
extern T0* ge389ov17721;
extern T0* ge943ov12533;
extern T0* ge387ov17588;
extern T0* ge931ov16874;
extern T0* ge931ov16618;
extern T0* ge931ov16372;
extern T0* ge931ov16873;
extern T0* ge931ov16371;
extern T0* ge931ov17015;
extern T0* ge931ov16651;
extern T0* ge931ov16513;
extern T0* ge931ov17001;
extern T0* ge931ov16647;
extern T0* ge931ov16499;
extern T0* ge931ov17000;
extern T0* ge931ov16498;
extern T0* ge931ov16999;
extern T0* ge931ov16497;
extern T0* ge931ov16998;
extern T0* ge931ov16496;
extern T0* ge931ov16997;
extern T0* ge931ov16495;
extern T0* ge931ov16996;
extern T0* ge931ov16494;
extern T0* ge931ov16995;
extern T0* ge931ov16493;
extern T0* ge931ov16994;
extern T0* ge931ov16492;
extern T0* ge931ov16993;
extern T0* ge931ov16491;
extern T0* ge931ov16992;
extern T0* ge931ov16490;
extern T0* ge931ov16991;
extern T0* ge931ov16489;
extern T0* ge931ov16990;
extern T0* ge931ov16488;
extern T0* ge931ov16989;
extern T0* ge931ov16487;
extern T0* ge931ov16988;
extern T0* ge931ov16486;
extern T0* ge931ov16987;
extern T0* ge931ov16485;
extern T0* ge931ov16986;
extern T0* ge931ov16484;
extern T0* ge931ov16985;
extern T0* ge931ov16483;
extern T0* ge931ov16983;
extern T0* ge931ov16481;
extern T0* ge931ov16984;
extern T0* ge931ov16482;
extern T0* ge931ov16947;
extern T0* ge931ov16643;
extern T0* ge931ov16445;
extern T0* ge931ov16946;
extern T0* ge931ov16444;
extern T0* ge931ov16945;
extern T0* ge931ov16443;
extern T0* ge931ov16944;
extern T0* ge931ov16442;
extern T0* ge931ov16948;
extern T0* ge931ov16446;
extern T0* ge931ov16943;
extern T0* ge931ov16441;
extern T0* ge931ov16962;
extern T0* ge931ov16460;
extern T0* ge931ov16961;
extern T0* ge931ov16459;
extern T0* ge931ov16960;
extern T0* ge931ov16458;
extern T0* ge931ov16959;
extern T0* ge931ov16457;
extern T0* ge931ov16958;
extern T0* ge931ov16456;
extern T0* ge931ov16957;
extern T0* ge931ov16455;
extern T0* ge931ov16956;
extern T0* ge931ov16454;
extern T0* ge931ov16955;
extern T0* ge931ov16453;
extern T0* ge931ov16954;
extern T0* ge931ov16452;
extern T0* ge931ov16964;
extern T0* ge931ov16462;
extern T0* ge931ov16963;
extern T0* ge931ov16461;
extern T0* ge931ov16953;
extern T0* ge931ov16451;
extern T0* ge931ov16965;
extern T0* ge931ov16463;
extern T0* ge931ov16942;
extern T0* ge931ov16440;
extern T0* ge931ov16941;
extern T0* ge931ov16439;
extern T0* ge931ov16951;
extern T0* ge931ov16449;
extern T0* ge931ov16940;
extern T0* ge931ov16438;
extern T0* ge931ov16952;
extern T0* ge931ov16450;
extern T0* ge931ov16939;
extern T0* ge931ov16437;
extern T0* ge931ov16938;
extern T0* ge931ov16436;
extern T0* ge931ov16937;
extern T0* ge931ov16435;
extern T0* ge931ov16936;
extern T0* ge931ov16434;
extern T0* ge931ov16935;
extern T0* ge931ov16433;
extern T0* ge931ov16934;
extern T0* ge931ov16432;
extern T0* ge931ov16949;
extern T0* ge931ov16447;
extern T0* ge931ov16950;
extern T0* ge931ov16448;
extern T0* ge931ov17014;
extern T0* ge931ov16650;
extern T0* ge931ov16512;
extern T0* ge931ov17013;
extern T0* ge931ov16649;
extern T0* ge931ov16511;
extern T0* ge931ov17012;
extern T0* ge931ov16648;
extern T0* ge931ov16510;
extern T0* ge931ov17011;
extern T0* ge931ov16509;
extern T0* ge931ov17010;
extern T0* ge931ov16508;
extern T0* ge931ov17009;
extern T0* ge931ov16507;
extern T0* ge931ov17008;
extern T0* ge931ov16506;
extern T0* ge931ov17007;
extern T0* ge931ov16505;
extern T0* ge931ov17006;
extern T0* ge931ov16504;
extern T0* ge931ov17005;
extern T0* ge931ov16503;
extern T0* ge931ov17004;
extern T0* ge931ov16502;
extern T0* ge931ov17003;
extern T0* ge931ov16501;
extern T0* ge931ov17002;
extern T0* ge931ov16500;
extern T0* ge931ov16982;
extern T0* ge931ov16646;
extern T0* ge931ov16480;
extern T0* ge931ov16981;
extern T0* ge931ov16479;
extern T0* ge931ov16980;
extern T0* ge931ov16645;
extern T0* ge931ov16478;
extern T0* ge931ov16979;
extern T0* ge931ov16477;
extern T0* ge931ov16978;
extern T0* ge931ov16476;
extern T0* ge931ov16977;
extern T0* ge931ov16475;
extern T0* ge931ov16975;
extern T0* ge931ov16473;
extern T0* ge931ov16976;
extern T0* ge931ov16474;
extern T0* ge931ov16971;
extern T0* ge931ov16644;
extern T0* ge931ov16469;
extern T0* ge931ov16972;
extern T0* ge931ov16470;
extern T0* ge931ov16968;
extern T0* ge931ov16466;
extern T0* ge931ov16967;
extern T0* ge931ov16465;
extern T0* ge764ov10926;
extern T0* ge931ov16970;
extern T0* ge931ov16468;
extern T0* ge931ov16966;
extern T0* ge931ov16464;
extern T0* ge764ov10886;
extern T0* ge931ov16969;
extern T0* ge931ov16467;
extern T0* ge931ov16973;
extern T0* ge931ov16471;
extern T0* ge931ov16974;
extern T0* ge931ov16472;
extern T0* ge931ov16933;
extern T0* ge931ov16642;
extern T0* ge931ov16431;
extern T0* ge931ov16932;
extern T0* ge931ov16430;
extern T0* ge931ov16931;
extern T0* ge931ov16429;
extern T0* ge931ov16928;
extern T0* ge931ov16426;
extern T0* ge931ov16929;
extern T0* ge931ov16427;
extern T0* ge931ov16930;
extern T0* ge931ov16428;
extern T0* ge931ov16927;
extern T0* ge931ov16641;
extern T0* ge931ov16425;
extern T0* ge931ov16926;
extern T0* ge931ov16424;
extern T0* ge931ov16925;
extern T0* ge931ov16423;
extern T0* ge931ov16922;
extern T0* ge931ov16420;
extern T0* ge931ov16923;
extern T0* ge931ov16421;
extern T0* ge931ov16924;
extern T0* ge931ov16422;
extern T0* ge931ov16921;
extern T0* ge931ov16640;
extern T0* ge931ov16419;
extern T0* ge931ov16920;
extern T0* ge931ov16418;
extern T0* ge931ov16919;
extern T0* ge931ov16417;
extern T0* ge931ov16918;
extern T0* ge931ov16416;
extern T0* ge931ov16917;
extern T0* ge931ov16415;
extern T0* ge931ov16916;
extern T0* ge931ov16414;
extern T0* ge931ov16915;
extern T0* ge931ov16413;
extern T0* ge931ov16914;
extern T0* ge931ov16412;
extern T0* ge931ov16912;
extern T0* ge931ov16410;
extern T0* ge931ov16911;
extern T0* ge931ov16409;
extern T0* ge931ov16913;
extern T0* ge931ov16411;
extern T0* ge931ov17020;
extern T0* ge931ov16656;
extern T0* ge931ov16518;
extern T0* ge931ov17019;
extern T0* ge931ov16655;
extern T0* ge931ov16517;
extern T0* ge237ov7953;
extern T0* ge71ov3846;
extern T0* ge326ov1573;
extern T0* ge70ov3368;
extern T0* ge73ov8738;
extern T0* ge73ov8744;
extern T0* ge71ov3847;
extern T0* ge71ov3848;
extern T0* ge71ov3849;
extern T0* ge73ov8739;
extern T0* ge73ov8745;
extern T0* ge73ov8740;
extern T0* ge73ov8746;
extern T0* ge73ov8741;
extern T0* ge73ov8747;
extern T0* ge70ov3363;
extern T0* ge70ov3362;
extern T0* ge70ov3370;
extern T0* ge70ov3369;
extern T0* ge931ov16892;
extern T0* ge931ov16626;
extern T0* ge931ov16390;
extern T0* ge931ov16891;
extern T0* ge931ov16389;
extern T0* ge931ov16890;
extern T0* ge931ov16388;
extern T0* ge931ov16889;
extern T0* ge931ov16387;
extern T0* ge931ov16704;
extern T0* ge931ov16542;
extern T0* ge931ov16202;
extern T0* ge931ov16703;
extern T0* ge931ov16201;
extern T0* ge931ov16887;
extern T0* ge931ov16625;
extern T0* ge931ov16385;
extern T0* ge931ov16886;
extern T0* ge931ov16384;
extern T0* ge931ov16702;
extern T0* ge931ov16541;
extern T0* ge931ov16200;
extern T0* ge931ov16669;
extern T0* ge931ov16527;
extern T0* ge931ov16167;
extern T0* ge931ov16668;
extern T0* ge931ov16166;
extern T0* ge931ov16665;
extern T0* ge931ov16163;
extern T0* ge931ov16664;
extern T0* ge931ov16162;
extern T0* ge931ov16894;
extern T0* ge931ov16628;
extern T0* ge931ov16392;
extern T0* ge931ov17024;
extern T0* ge931ov16659;
extern T0* ge931ov16522;
extern T0* ge931ov17023;
extern T0* ge931ov16658;
extern T0* ge931ov16521;
extern T0* ge931ov16805;
extern T0* ge931ov16587;
extern T0* ge931ov16303;
extern T0* ge931ov17026;
extern T0* ge931ov16661;
extern T0* ge931ov16524;
extern T0* ge931ov17025;
extern T0* ge931ov16660;
extern T0* ge931ov16523;
extern T0* ge931ov16803;
extern T0* ge931ov16586;
extern T0* ge931ov16301;
extern T0* ge931ov16734;
extern T0* ge931ov16558;
extern T0* ge931ov16232;
extern T0* ge931ov16671;
extern T0* ge931ov16169;
extern T0* ge931ov16670;
extern T0* ge931ov16168;
extern T0* ge931ov16667;
extern T0* ge931ov16165;
extern T0* ge931ov16666;
extern T0* ge931ov16164;
extern T0* ge931ov16897;
extern T0* ge931ov16629;
extern T0* ge931ov16395;
extern T0* ge931ov16896;
extern T0* ge931ov16394;
extern T0* ge931ov16888;
extern T0* ge931ov16386;
extern T0* ge931ov16895;
extern T0* ge931ov16393;
extern T0* ge931ov16804;
extern T0* ge931ov16302;
extern T0* ge931ov16732;
extern T0* ge931ov16230;
extern T0* ge931ov16735;
extern T0* ge931ov16233;
extern T0* ge931ov16733;
extern T0* ge931ov16231;
extern T0* ge931ov16784;
extern T0* ge931ov16569;
extern T0* ge931ov16282;
extern T0* ge931ov16689;
extern T0* ge931ov16535;
extern T0* ge931ov16187;
extern T0* ge931ov16687;
extern T0* ge931ov16185;
extern T0* ge931ov16681;
extern T0* ge931ov16534;
extern T0* ge931ov16179;
extern T0* ge931ov16680;
extern T0* ge931ov16533;
extern T0* ge931ov16178;
extern T0* ge931ov16906;
extern T0* ge931ov16635;
extern T0* ge931ov16404;
extern T0* ge931ov16910;
extern T0* ge931ov16639;
extern T0* ge931ov16408;
extern T0* ge931ov16880;
extern T0* ge931ov16621;
extern T0* ge931ov16378;
extern T0* ge931ov16909;
extern T0* ge931ov16638;
extern T0* ge931ov16407;
extern T0* ge931ov16783;
extern T0* ge931ov16577;
extern T0* ge931ov16281;
extern T0* ge931ov16785;
extern T0* ge931ov16283;
extern T0* ge931ov16899;
extern T0* ge931ov16630;
extern T0* ge931ov16397;
extern T0* ge931ov16898;
extern T0* ge931ov16396;
extern T0* ge931ov16882;
extern T0* ge931ov16622;
extern T0* ge931ov16380;
extern T0* ge931ov16883;
extern T0* ge931ov16381;
extern T0* ge931ov16782;
extern T0* ge931ov16576;
extern T0* ge931ov16280;
extern T0* ge931ov16778;
extern T0* ge931ov16575;
extern T0* ge931ov16276;
extern T0* ge931ov16779;
extern T0* ge931ov16277;
extern T0* ge931ov16766;
extern T0* ge931ov16572;
extern T0* ge931ov16264;
extern T0* ge931ov16781;
extern T0* ge931ov16279;
extern T0* ge931ov16780;
extern T0* ge931ov16278;
extern T0* ge931ov16777;
extern T0* ge931ov16574;
extern T0* ge931ov16275;
extern T0* ge931ov16742;
extern T0* ge931ov16562;
extern T0* ge931ov16240;
extern T0* ge931ov16740;
extern T0* ge931ov16561;
extern T0* ge931ov16238;
extern T0* ge931ov16741;
extern T0* ge931ov16239;
extern T0* ge931ov16739;
extern T0* ge931ov16237;
extern T0* ge931ov16738;
extern T0* ge931ov16560;
extern T0* ge931ov16236;
extern T0* ge931ov16737;
extern T0* ge931ov16559;
extern T0* ge931ov16235;
extern T0* ge931ov16736;
extern T0* ge931ov16234;
extern T0* ge931ov16679;
extern T0* ge931ov16532;
extern T0* ge931ov16177;
extern T0* ge931ov16677;
extern T0* ge931ov16531;
extern T0* ge931ov16175;
extern T0* ge931ov16707;
extern T0* ge931ov16543;
extern T0* ge931ov16205;
extern T0* ge931ov16708;
extern T0* ge931ov16206;
extern T0* ge931ov16691;
extern T0* ge931ov16536;
extern T0* ge931ov16189;
extern T0* ge931ov16690;
extern T0* ge931ov16188;
extern T0* ge931ov16692;
extern T0* ge931ov16190;
extern T0* ge931ov16716;
extern T0* ge931ov16547;
extern T0* ge931ov16214;
extern T0* ge931ov16705;
extern T0* ge931ov16203;
extern T0* ge931ov16706;
extern T0* ge931ov16204;
extern T0* ge931ov16748;
extern T0* ge931ov16563;
extern T0* ge931ov16246;
extern T0* ge931ov16745;
extern T0* ge931ov16243;
extern T0* ge931ov16752;
extern T0* ge931ov16564;
extern T0* ge931ov16250;
extern T0* ge931ov16749;
extern T0* ge931ov16247;
extern T0* ge931ov16746;
extern T0* ge931ov16244;
extern T0* ge931ov16753;
extern T0* ge931ov16251;
extern T0* ge931ov16750;
extern T0* ge931ov16248;
extern T0* ge931ov16747;
extern T0* ge931ov16245;
extern T0* ge931ov16754;
extern T0* ge931ov16252;
extern T0* ge931ov16870;
extern T0* ge931ov16617;
extern T0* ge931ov16368;
extern T0* ge931ov16759;
extern T0* ge931ov16568;
extern T0* ge931ov16257;
extern T0* ge931ov16758;
extern T0* ge931ov16256;
extern T0* ge931ov16744;
extern T0* ge931ov16242;
extern T0* ge931ov16743;
extern T0* ge931ov16241;
extern T0* ge931ov16751;
extern T0* ge931ov16249;
extern T0* ge931ov16757;
extern T0* ge931ov16567;
extern T0* ge931ov16255;
extern T0* ge931ov16756;
extern T0* ge931ov16566;
extern T0* ge931ov16254;
extern T0* ge931ov16755;
extern T0* ge931ov16565;
extern T0* ge931ov16253;
extern T0* ge931ov16853;
extern T0* ge931ov16612;
extern T0* ge931ov16351;
extern T0* ge931ov16851;
extern T0* ge931ov16611;
extern T0* ge931ov16349;
extern T0* ge931ov16694;
extern T0* ge931ov16537;
extern T0* ge931ov16192;
extern T0* ge931ov16813;
extern T0* ge931ov16592;
extern T0* ge931ov16311;
extern T0* ge931ov16693;
extern T0* ge931ov16191;
extern T0* ge931ov16812;
extern T0* ge931ov16310;
extern T0* ge931ov16811;
extern T0* ge931ov16591;
extern T0* ge931ov16309;
extern T0* ge931ov16724;
extern T0* ge931ov16552;
extern T0* ge931ov16222;
extern T0* ge931ov16722;
extern T0* ge931ov16550;
extern T0* ge931ov16220;
extern T0* ge931ov16721;
extern T0* ge931ov16219;
extern T0* ge931ov16728;
extern T0* ge931ov16554;
extern T0* ge931ov16226;
extern T0* ge931ov16727;
extern T0* ge931ov16225;
extern T0* ge931ov16729;
extern T0* ge931ov16555;
extern T0* ge931ov16227;
extern T0* ge931ov16794;
extern T0* ge931ov16581;
extern T0* ge931ov16292;
extern T0* ge931ov16793;
extern T0* ge931ov16291;
extern T0* ge931ov16792;
extern T0* ge931ov16290;
extern T0* ge931ov16791;
extern T0* ge931ov16289;
extern T0* ge931ov16795;
extern T0* ge931ov16582;
extern T0* ge931ov16293;
extern T0* ge931ov16710;
extern T0* ge931ov16544;
extern T0* ge931ov16208;
extern T0* ge931ov16709;
extern T0* ge931ov16207;
extern T0* ge931ov16715;
extern T0* ge931ov16213;
extern T0* ge931ov16712;
extern T0* ge931ov16545;
extern T0* ge931ov16210;
extern T0* ge931ov16713;
extern T0* ge931ov16211;
extern T0* ge931ov16810;
extern T0* ge931ov16308;
extern T0* ge931ov16711;
extern T0* ge931ov16209;
extern T0* ge931ov16725;
extern T0* ge931ov16223;
extern T0* ge931ov16714;
extern T0* ge931ov16546;
extern T0* ge931ov16212;
extern T0* ge931ov16719;
extern T0* ge931ov16548;
extern T0* ge931ov16217;
extern T0* ge931ov16717;
extern T0* ge931ov16215;
extern T0* ge931ov16718;
extern T0* ge931ov16216;
extern T0* ge931ov16818;
extern T0* ge931ov16596;
extern T0* ge931ov16316;
extern T0* ge931ov16814;
extern T0* ge931ov16593;
extern T0* ge931ov16312;
extern T0* ge931ov16816;
extern T0* ge931ov16594;
extern T0* ge931ov16314;
extern T0* ge931ov16720;
extern T0* ge931ov16549;
extern T0* ge931ov16218;
extern T0* ge931ov16726;
extern T0* ge931ov16553;
extern T0* ge931ov16224;
extern T0* ge931ov16807;
extern T0* ge931ov16589;
extern T0* ge931ov16305;
extern T0* ge931ov16789;
extern T0* ge931ov16579;
extern T0* ge931ov16287;
extern T0* ge931ov16817;
extern T0* ge931ov16595;
extern T0* ge931ov16315;
extern T0* ge931ov16723;
extern T0* ge931ov16551;
extern T0* ge931ov16221;
extern T0* ge931ov16730;
extern T0* ge931ov16556;
extern T0* ge931ov16228;
extern T0* ge931ov16808;
extern T0* ge931ov16590;
extern T0* ge931ov16306;
extern T0* ge931ov16806;
extern T0* ge931ov16588;
extern T0* ge931ov16304;
extern T0* ge931ov16790;
extern T0* ge931ov16580;
extern T0* ge931ov16288;
extern T0* ge931ov16809;
extern T0* ge931ov16307;
extern T0* ge931ov16877;
extern T0* ge931ov16620;
extern T0* ge931ov16375;
extern T0* ge931ov16876;
extern T0* ge931ov16374;
extern T0* ge931ov16879;
extern T0* ge931ov16377;
extern T0* ge931ov16878;
extern T0* ge931ov16376;
extern T0* ge932ov5539;
extern T0* ge932ov5538;
extern T0* ge932ov5541;
extern T0* ge932ov5542;
extern T0* ge932ov5544;
extern T0* ge932ov5537;
extern T0* ge932ov5540;
extern T0* ge932ov5545;
extern T0* ge932ov5546;
extern T0* ge932ov5543;
extern T0* ge932ov5588;
extern T0* ge932ov5551;
extern T0* ge932ov5613;
extern T0* ge931ov16824;
extern T0* ge931ov16599;
extern T0* ge931ov16322;
extern T0* ge931ov16836;
extern T0* ge931ov16603;
extern T0* ge931ov16334;
extern T0* ge931ov16835;
extern T0* ge931ov16333;
extern T0* ge931ov16834;
extern T0* ge931ov16332;
extern T0* ge931ov16833;
extern T0* ge931ov16331;
extern T0* ge931ov16832;
extern T0* ge931ov16602;
extern T0* ge931ov16330;
extern T0* ge931ov16831;
extern T0* ge931ov16329;
extern T0* ge931ov16830;
extern T0* ge931ov16328;
extern T0* ge931ov16829;
extern T0* ge931ov16327;
extern T0* ge931ov16828;
extern T0* ge931ov16601;
extern T0* ge931ov16326;
extern T0* ge931ov16827;
extern T0* ge931ov16325;
extern T0* ge931ov16826;
extern T0* ge931ov16600;
extern T0* ge931ov16324;
extern T0* ge931ov16825;
extern T0* ge931ov16323;
extern T0* ge931ov16823;
extern T0* ge931ov16321;
extern T0* ge931ov16848;
extern T0* ge931ov16609;
extern T0* ge931ov16346;
extern T0* ge931ov16847;
extern T0* ge931ov16345;
extern T0* ge931ov16846;
extern T0* ge931ov16608;
extern T0* ge931ov16344;
extern T0* ge931ov16845;
extern T0* ge931ov16343;
extern T0* ge931ov16844;
extern T0* ge931ov16607;
extern T0* ge931ov16342;
extern T0* ge931ov16843;
extern T0* ge931ov16341;
extern T0* ge931ov16842;
extern T0* ge931ov16606;
extern T0* ge931ov16340;
extern T0* ge931ov16841;
extern T0* ge931ov16339;
extern T0* ge931ov16840;
extern T0* ge931ov16605;
extern T0* ge931ov16338;
extern T0* ge931ov16839;
extern T0* ge931ov16337;
extern T0* ge931ov16838;
extern T0* ge931ov16604;
extern T0* ge931ov16336;
extern T0* ge931ov16837;
extern T0* ge931ov16335;
extern T0* ge931ov16850;
extern T0* ge931ov16610;
extern T0* ge931ov16348;
extern T0* ge931ov16849;
extern T0* ge931ov16347;
extern T0* ge931ov16854;
extern T0* ge931ov16613;
extern T0* ge931ov16352;
extern T0* ge931ov16855;
extern T0* ge931ov16614;
extern T0* ge931ov16353;
extern T0* ge931ov16852;
extern T0* ge931ov16350;
extern T0* ge932ov5627;
extern T0* ge932ov5605;
extern T0* ge932ov5607;
extern T0* ge932ov5604;
extern T0* ge932ov5606;
extern T0* ge931ov16701;
extern T0* ge931ov16540;
extern T0* ge931ov16199;
extern T0* ge931ov16696;
extern T0* ge931ov16538;
extern T0* ge931ov16194;
extern T0* ge931ov16699;
extern T0* ge931ov16197;
extern T0* ge931ov16698;
extern T0* ge931ov16196;
extern T0* ge931ov16697;
extern T0* ge931ov16539;
extern T0* ge931ov16195;
extern T0* ge931ov16893;
extern T0* ge931ov16627;
extern T0* ge931ov16391;
extern T0* ge931ov16900;
extern T0* ge931ov16631;
extern T0* ge931ov16398;
extern T0* ge764ov10983;
extern T0* ge931ov16663;
extern T0* ge931ov16526;
extern T0* ge931ov16161;
extern T0* ge931ov17021;
extern T0* ge931ov16657;
extern T0* ge931ov16519;
extern T0* ge931ov17022;
extern T0* ge931ov16520;
extern T0* ge931ov16885;
extern T0* ge931ov16624;
extern T0* ge931ov16383;
extern T0* ge931ov16884;
extern T0* ge931ov16623;
extern T0* ge931ov16382;
extern T0* ge931ov16875;
extern T0* ge931ov16619;
extern T0* ge931ov16373;
extern T0* ge931ov16908;
extern T0* ge931ov16637;
extern T0* ge931ov16406;
extern T0* ge932ov5592;
extern T0* ge932ov5593;
extern T0* ge932ov5594;
extern T0* ge932ov5595;
extern T0* ge932ov5599;
extern T0* ge932ov5600;
extern T0* ge932ov5601;
extern T0* ge932ov5602;
extern T0* ge931ov16769;
extern T0* ge931ov16267;
extern T0* ge931ov16768;
extern T0* ge931ov16266;
extern T0* ge931ov16774;
extern T0* ge931ov16573;
extern T0* ge931ov16272;
extern T0* ge931ov16773;
extern T0* ge931ov16271;
extern T0* ge931ov16763;
extern T0* ge931ov16571;
extern T0* ge931ov16261;
extern T0* ge931ov16762;
extern T0* ge931ov16260;
extern T0* ge931ov16767;
extern T0* ge931ov16265;
extern T0* ge931ov16683;
extern T0* ge931ov16181;
extern T0* ge931ov16787;
extern T0* ge931ov16578;
extern T0* ge931ov16285;
extern T0* ge931ov16907;
extern T0* ge931ov16636;
extern T0* ge931ov16405;
extern T0* ge931ov16682;
extern T0* ge931ov16180;
extern T0* ge931ov16786;
extern T0* ge931ov16284;
extern T0* ge931ov16872;
extern T0* ge931ov16370;
extern T0* ge931ov16871;
extern T0* ge931ov16369;
extern T0* ge931ov16684;
extern T0* ge931ov16182;
extern T0* ge931ov16788;
extern T0* ge931ov16286;
extern T0* ge931ov16868;
extern T0* ge931ov16616;
extern T0* ge931ov16366;
extern T0* ge931ov16869;
extern T0* ge931ov16367;
extern T0* ge931ov16676;
extern T0* ge931ov16530;
extern T0* ge931ov16174;
extern T0* ge931ov16675;
extern T0* ge931ov16529;
extern T0* ge931ov16173;
extern T0* ge931ov16674;
extern T0* ge931ov16172;
extern T0* ge931ov16797;
extern T0* ge931ov16583;
extern T0* ge931ov16295;
extern T0* ge931ov16796;
extern T0* ge931ov16294;
extern T0* ge931ov16731;
extern T0* ge931ov16557;
extern T0* ge931ov16229;
extern T0* ge931ov16799;
extern T0* ge931ov16584;
extern T0* ge931ov16297;
extern T0* ge931ov16798;
extern T0* ge931ov16296;
extern T0* ge931ov16801;
extern T0* ge931ov16585;
extern T0* ge931ov16299;
extern T0* ge931ov16800;
extern T0* ge931ov16298;
extern T0* ge931ov16822;
extern T0* ge931ov16598;
extern T0* ge931ov16320;
extern T0* ge931ov16821;
extern T0* ge931ov16319;
extern T0* ge931ov16820;
extern T0* ge931ov16597;
extern T0* ge931ov16318;
extern T0* ge931ov16819;
extern T0* ge931ov16317;
extern T0* ge931ov16673;
extern T0* ge931ov16528;
extern T0* ge931ov16171;
extern T0* ge931ov16672;
extern T0* ge931ov16170;
extern T0* ge932ov5629;
extern T0* ge931ov16772;
extern T0* ge931ov16270;
extern T0* ge931ov16771;
extern T0* ge931ov16269;
extern T0* ge931ov16776;
extern T0* ge931ov16274;
extern T0* ge931ov16775;
extern T0* ge931ov16273;
extern T0* ge931ov16765;
extern T0* ge931ov16263;
extern T0* ge931ov16764;
extern T0* ge931ov16262;
extern T0* ge931ov16761;
extern T0* ge931ov16570;
extern T0* ge931ov16259;
extern T0* ge931ov16760;
extern T0* ge931ov16258;
extern T0* ge931ov16770;
extern T0* ge931ov16268;
extern T0* ge931ov16695;
extern T0* ge931ov16193;
extern T0* ge931ov16802;
extern T0* ge931ov16300;
extern T0* ge931ov16904;
extern T0* ge931ov16633;
extern T0* ge931ov16402;
extern T0* ge931ov16902;
extern T0* ge931ov16632;
extern T0* ge931ov16400;
extern T0* ge931ov16881;
extern T0* ge931ov16379;
extern T0* ge931ov16688;
extern T0* ge931ov16186;
extern T0* ge931ov16686;
extern T0* ge931ov16184;
extern T0* ge931ov16685;
extern T0* ge931ov16183;
extern T0* ge931ov16905;
extern T0* ge931ov16634;
extern T0* ge931ov16403;
extern T0* ge932ov5610;
extern T0* ge843ov19376;
extern T0* ge846ov18897;
extern T0* ge822ov18928;
extern T0* ge850ov15622;
extern T0* ge317ov6544;
extern T0* ge308ov6544;
extern T0* ge421ov6544;
extern T0* ge768ov17217;
extern T0* ge764ov11048;
extern T0* ge764ov11029;
extern T0* ge764ov11045;
extern T0* ge764ov11033;
extern T0* ge764ov11034;
extern T0* ge764ov11035;
extern T0* ge764ov11036;
extern T0* ge764ov11030;
extern T0* ge764ov11037;
extern T0* ge764ov11038;
extern T0* ge764ov11039;
extern T0* ge764ov11040;
extern T0* ge764ov11031;
extern T0* ge764ov11046;
extern T0* ge764ov11041;
extern T0* ge764ov11042;
extern T0* ge764ov11043;
extern T0* ge764ov11032;
extern T0* ge764ov11044;
extern T0* ge764ov11047;
extern T0* ge764ov11025;
extern T0* ge764ov11024;
extern T0* ge764ov11012;
extern T0* ge764ov11013;
extern T0* ge764ov11014;
extern T0* ge764ov11015;
extern T0* ge764ov11016;
extern T0* ge764ov11017;
extern T0* ge764ov11018;
extern T0* ge764ov11019;
extern T0* ge764ov11020;
extern T0* ge764ov11021;
extern T0* ge764ov11022;
extern T0* ge764ov11023;
extern T0* ge764ov11027;
extern T0* ge764ov11028;
extern T0* ge764ov11008;
extern T0* ge764ov11009;
extern T0* ge764ov11010;
extern T0* ge764ov11011;
extern T0* ge764ov11026;
extern T0* ge790ov17891;
extern T0* ge790ov17890;
extern T0* ge805ov19211;
extern T0* ge795ov17128;
extern T0* ge234ov7953;
extern T0* ge243ov7953;
extern T0* ge233ov7953;
extern EIF_TYPE getypes[];

