/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#define WIN32 1
#define EIF_WINDOWS 1
#endif
#ifdef WIN32
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
#define EIF_REFERENCE EIF_ANY*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define geint8(x) x
#define genat8(x) x
#define geint16(x) x
#define genat16(x) x
#define geint32(x) x##L
#define genat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else /* ISO C 99 */
#define geint64(x) x##LL
#define genat64(x) x##ULL
#endif 
#endif 

/* Memory allocation, GC */
#define gealloc(x) calloc((x),1)

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Interoperability with ISE.
 */

#define RTI64C(x) geint64(x)
#define EIF_PROCEDURE EIF_POINTER
#define INTEGER EIF_INTEGER_32
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int geargc;
extern char** geargv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define gejmp_buf sigjmp_buf
#define gesetjmp(x) sigsetjmp((x),1)
#define gelongjmp(x,y) siglongjmp((x),(y))
#else
#define gejmp_buf jmp_buf
#define gesetjmp(x) setjmp((x))
#define gelongjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Context of features containing a rescue clause.
*/
struct gerescue {
	gejmp_buf jb;
	struct gerescue *previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern struct gerescue *gerescue;

extern void geraise(int code);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* geboxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* geboxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* geboxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* geboxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* geboxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* geboxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* geboxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* geboxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* geboxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* geboxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* geboxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* geboxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* geboxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* geboxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_FLAG */
typedef struct S32 T32;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S37 T37;

/* ET_XACE_UNIVERSE_PARSER */
typedef struct S38 T38;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S39 T39;

/* DS_HASH_TABLE [STRING, STRING] */
typedef struct S40 T40;

/* ST_SPLITTER */
typedef struct S41 T41;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S43 T43;

/* KL_EQUALITY_TESTER [STRING] */
typedef struct S44 T44;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S45 T45;

/* ET_XACE_UNIVERSE */
typedef struct S48 T48;

/* ET_LACE_PARSER */
typedef struct S49 T49;

/* ET_LACE_ERROR_HANDLER */
typedef struct S50 T50;

/* ET_LACE_UNIVERSE */
typedef struct S51 T51;

/* ET_NULL_ERROR_HANDLER */
typedef struct S52 T52;

/* ET_SYSTEM */
typedef struct S53 T53;

/* ET_CLASS */
typedef struct S55 T55;

/* ET_C_GENERATOR */
typedef struct S56 T56;

/* KL_SHELL_COMMAND */
typedef struct S57 T57;

/* UT_VERSION */
typedef struct S58 T58;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S59 T59;

/* KL_OPERATING_SYSTEM */
typedef struct S60 T60;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S62 T62;

/* UT_VERSION_NUMBER */
typedef struct S64 T64;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S65 T65;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S66 T66;

/* KL_LINKABLE [CHARACTER] */
typedef struct S67 T67;

/* TYPED_POINTER [ANY] */
typedef struct S69 T69;

/* KL_STANDARD_FILES */
typedef struct S71 T71;

/* KL_STDERR_FILE */
typedef struct S72 T72;

/* KL_STDOUT_FILE */
typedef struct S73 T73;

/* UC_STRING */
typedef struct S74 T74;

/* KL_ANY_ROUTINES */
typedef struct S75 T75;

/* DS_ARRAYED_LIST [STRING] */
typedef struct S76 T76;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S77 T77;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S78 T78;

/* AP_ERROR_HANDLER */
typedef struct S79 T79;

/* AP_ERROR */
typedef struct S80 T80;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S81 T81;

/* ST_WORD_WRAPPER */
typedef struct S82 T82;

/* ET_XACE_AST_FACTORY */
typedef struct S83 T83;

/* XM_DOCUMENT */
typedef struct S84 T84;

/* XM_ELEMENT */
typedef struct S85 T85;

/* XM_POSITION_TABLE */
typedef struct S86 T86;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S88 T88;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S89 T89;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S90 T90;

/* ET_XACE_VALIDATOR */
typedef struct S91 T91;

/* ET_XACE_PREPROCESSOR */
typedef struct S92 T92;

/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
typedef struct S93 T93;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S94 T94;

/* ET_XACE_LIBRARY_PARSER */
typedef struct S95 T95;

/* XM_EIFFEL_PARSER */
typedef struct S96 T96;

/* UT_MESSAGE */
typedef struct S99 T99;

/* DS_SPARSE_TABLE_KEYS [STRING, STRING] */
typedef struct S100 T100;

/* SPECIAL [STRING] */
typedef struct S102 T102;

/* SPECIAL [INTEGER] */
typedef struct S103 T103;

/* DS_HASH_TABLE_CURSOR [STRING, STRING] */
typedef struct S104 T104;

/* KL_SPECIAL_ROUTINES [INTEGER] */
typedef struct S105 T105;

/* KL_SPECIAL_ROUTINES [STRING] */
typedef struct S106 T106;

/* DS_LINKED_LIST [STRING] */
typedef struct S107 T107;

/* DS_LINKED_LIST_CURSOR [STRING] */
typedef struct S108 T108;

/* DS_HASH_SET [INTEGER] */
typedef struct S109 T109;

/* EXECUTION_ENVIRONMENT */
typedef struct S110 T110;

/* ET_LACE_AST_FACTORY */
typedef struct S111 T111;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S112 T112;

/* YY_FILE_BUFFER */
typedef struct S113 T113;

/* YY_BUFFER */
typedef struct S114 T114;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S115 T115;

/* SPECIAL [ANY] */
typedef struct S117 T117;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S118 T118;

/* ET_IDENTIFIER */
typedef struct S119 T119;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S120 T120;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S121 T121;

/* ET_LACE_CLUSTERS */
typedef struct S122 T122;

/* ET_LACE_CLUSTER */
typedef struct S123 T123;

/* ET_LACE_EXCLUDE */
typedef struct S124 T124;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S125 T125;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S126 T126;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S127 T127;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S128 T128;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S129 T129;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S130 T130;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S131 T131;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S132 T132;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S133 T133;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S134 T134;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S135 T135;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S136 T136;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S137 T137;

/* KL_PLATFORM */
typedef struct S138 T138;

/* KL_INTEGER_ROUTINES */
typedef struct S139 T139;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S140 T140;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S141 T141;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S142 T142;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S143 T143;

/* ET_DYNAMIC_TYPE */
typedef struct S144 T144;

/* ET_QUERY_LIST */
typedef struct S146 T146;

/* ET_PROCEDURE_LIST */
typedef struct S148 T148;

/* ET_DYNAMIC_FEATURE */
typedef struct S150 T150;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S151 T151;

/* DT_DATE_TIME */
typedef struct S152 T152;

/* DT_SYSTEM_CLOCK */
typedef struct S153 T153;

/* ET_TOKEN_CONSTANTS */
typedef struct S157 T157;

/* ET_EIFFEL_PARSER */
typedef struct S158 T158;

/* ET_CLASS_TYPE */
typedef struct S159 T159;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S160 T160;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S161 T161;

/* ET_EXTERNAL_FUNCTION */
typedef struct S163 T163;

/* ET_KEYWORD */
typedef struct S166 T166;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S168 T168;

/* ET_TYPE_CHECKER */
typedef struct S169 T169;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S170 T170;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S171 T171;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S172 T172;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S173 T173;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S174 T174;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S175 T175;

/* DS_ARRAYED_LIST [INTEGER] */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S177 T177;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S178 T178;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S180 T180;

/* ET_CURRENT */
typedef struct S182 T182;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S183 T183;

/* ET_CALL_INSTRUCTION */
typedef struct S184 T184;

/* ET_CALL_EXPRESSION */
typedef struct S186 T186;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S187 T187;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S188 T188;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S189 T189;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S191 T191;

/* DS_HASH_SET [STRING] */
typedef struct S192 T192;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S193 T193;

/* DS_HASH_TABLE [BOOLEAN, STRING] */
typedef struct S194 T194;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S195 T195;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S196 T196;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S197 T197;

/* UT_TEMPLATE_EXPANDER */
typedef struct S198 T198;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S199 T199;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S200 T200;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S201 T201;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S202 T202;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S203 T203;

/* ET_RESULT */
typedef struct S204 T204;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S205 T205;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S207 T207;

/* ET_FORMAL_ARGUMENT */
typedef struct S212 T212;

/* DS_QUICK_SORTER [INTEGER] */
typedef struct S213 T213;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S215 T215;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S217 T217;

/* ARRAY [STRING] */
typedef struct S220 T220;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S221 T221;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S222 T222;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S223 T223;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S224 T224;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S226 T226;

/* ET_ATTRIBUTE */
typedef struct S227 T227;

/* UT_INTEGER_FORMATTER */
typedef struct S235 T235;

/* DS_CELL [INTEGER] */
typedef struct S236 T236;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S238 T238;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S239 T239;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S240 T240;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S241 T241;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S242 T242;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S243 T243;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S244 T244;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S245 T245;

/* UNIX_FILE_INFO */
typedef struct S247 T247;

/* ET_AST_FACTORY */
typedef struct S249 T249;

/* ET_XACE_EXTERNALS */
typedef struct S250 T250;

/* ET_XACE_CLUSTERS */
typedef struct S251 T251;

/* ET_XACE_CLUSTER */
typedef struct S254 T254;

/* ET_XACE_OPTIONS */
typedef struct S255 T255;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S256 T256;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S257 T257;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S258 T258;

/* XM_ATTRIBUTE */
typedef struct S259 T259;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S260 T260;

/* ET_XACE_LIBRARY */
typedef struct S262 T262;

/* DS_HASH_TABLE [INTEGER, STRING] */
typedef struct S263 T263;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S266 T266;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S267 T267;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S268 T268;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S269 T269;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S270 T270;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S271 T271;

/* ET_CLASS_NAME_TESTER */
typedef struct S272 T272;

/* ET_AST_NULL_PROCESSOR */
typedef struct S274 T274;

/* ET_FEATURE_FLATTENER */
typedef struct S275 T275;

/* ET_INTERFACE_CHECKER */
typedef struct S276 T276;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S277 T277;

/* ET_PROVIDER_CHECKER */
typedef struct S278 T278;

/* ET_ANCESTOR_BUILDER */
typedef struct S279 T279;

/* DT_DATE_TIME_DURATION */
typedef struct S283 T283;

/* ET_EIFFEL_PREPARSER */
typedef struct S284 T284;

/* DS_HASH_SET_CURSOR [STRING] */
typedef struct S285 T285;

/* DS_ARRAYED_LIST_CURSOR [STRING] */
typedef struct S286 T286;

/* ET_NONE_GROUP */
typedef struct S287 T287;

/* ET_PARENT */
typedef struct S288 T288;

/* ET_TUPLE_TYPE */
typedef struct S289 T289;

/* ET_RENAME_LIST */
typedef struct S290 T290;

/* ET_EXPORT_LIST */
typedef struct S291 T291;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S292 T292;

/* ET_PARENT_LIST */
typedef struct S293 T293;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S295 T295;

/* ARRAY [INTEGER] */
typedef struct S296 T296;

/* ET_BASE_TYPE_LIST */
typedef struct S297 T297;

/* ET_DO_PROCEDURE */
typedef struct S298 T298;

/* KL_COMPARABLE_COMPARATOR [INTEGER] */
typedef struct S300 T300;

/* ET_DEFERRED_PROCEDURE */
typedef struct S303 T303;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S304 T304;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S305 T305;

/* SPECIAL [AP_OPTION] */
typedef struct S307 T307;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S308 T308;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S309 T309;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S310 T310;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S311 T311;

/* XM_NAMESPACE_RESOLVER */
typedef struct S312 T312;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S313 T313;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S314 T314;

/* XM_CALLBACKS_NULL */
typedef struct S315 T315;

/* ET_XACE_OPTION_NAMES */
typedef struct S316 T316;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
typedef struct S319 T319;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S321 T321;

/* SPECIAL [ET_XACE_LIBRARY] */
typedef struct S322 T322;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
typedef struct S323 T323;

/* XM_EIFFEL_SCANNER */
typedef struct S324 T324;

/* XM_DEFAULT_POSITION */
typedef struct S325 T325;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S327 T327;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S328 T328;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S329 T329;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S331 T331;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S332 T332;

/* XM_EIFFEL_DECLARATION */
typedef struct S333 T333;

/* XM_DTD_EXTERNAL_ID */
typedef struct S334 T334;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S335 T335;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S336 T336;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S337 T337;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S338 T338;

/* DS_BILINKED_LIST [STRING] */
typedef struct S339 T339;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S340 T340;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S341 T341;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S342 T342;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S343 T343;

/* SPECIAL [BOOLEAN] */
typedef struct S344 T344;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S345 T345;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S346 T346;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S347 T347;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S348 T348;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S349 T349;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S350 T350;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S352 T352;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S354 T354;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S355 T355;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S356 T356;

/* SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S357 T357;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
typedef struct S358 T358;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S359 T359;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S360 T360;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S362 T362;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S363 T363;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S365 T365;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
typedef struct S366 T366;

/* TO_SPECIAL [INTEGER] */
typedef struct S367 T367;

/* TO_SPECIAL [STRING] */
typedef struct S368 T368;

/* DS_LINKABLE [STRING] */
typedef struct S369 T369;

/* DS_HASH_SET_CURSOR [INTEGER] */
typedef struct S370 T370;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S372 T372;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S374 T374;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S376 T376;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S377 T377;

/* TO_SPECIAL [ANY] */
typedef struct S378 T378;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S379 T379;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S380 T380;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S381 T381;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S382 T382;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S383 T383;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S384 T384;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S385 T385;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S386 T386;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S388 T388;

/* SPECIAL [ET_CLASS] */
typedef struct S390 T390;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S391 T391;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S392 T392;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S393 T393;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S394 T394;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S395 T395;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S396 T396;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S397 T397;

/* MANAGED_POINTER */
typedef struct S398 T398;

/* DS_ARRAYED_STACK [INTEGER] */
typedef struct S399 T399;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S400 T400;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S401 T401;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S402 T402;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S403 T403;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S404 T404;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S405 T405;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S406 T406;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S408 T408;

/* KL_DIRECTORY */
typedef struct S410 T410;

/* KL_EIFFEL_COMPILER */
typedef struct S411 T411;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S412 T412;

/* ET_CLASS_NAME_LIST */
typedef struct S414 T414;

/* ET_CLIENTS */
typedef struct S415 T415;

/* ET_FEATURE_CLAUSE */
typedef struct S416 T416;

/* SPECIAL [ET_KEYWORD] */
typedef struct S418 T418;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S419 T419;

/* ET_AGENT_KEYWORD */
typedef struct S420 T420;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S421 T421;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S422 T422;

/* ET_PRECURSOR_KEYWORD */
typedef struct S423 T423;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S424 T424;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S425 T425;

/* ET_SYMBOL */
typedef struct S426 T426;

/* SPECIAL [ET_SYMBOL] */
typedef struct S427 T427;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S428 T428;

/* SPECIAL [ET_POSITION] */
typedef struct S429 T429;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S430 T430;

/* ET_BIT_CONSTANT */
typedef struct S431 T431;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S432 T432;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S433 T433;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S435 T435;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S436 T436;

/* SPECIAL [ET_BREAK] */
typedef struct S438 T438;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S439 T439;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S441 T441;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S442 T442;

/* SPECIAL [ET_CURRENT] */
typedef struct S443 T443;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S444 T444;

/* ET_FREE_OPERATOR */
typedef struct S445 T445;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S446 T446;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S447 T447;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S449 T449;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S450 T450;

/* ET_KEYWORD_OPERATOR */
typedef struct S451 T451;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S452 T452;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S453 T453;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S454 T454;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S455 T455;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S457 T457;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S458 T458;

/* SPECIAL [ET_RESULT] */
typedef struct S459 T459;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S460 T460;

/* ET_RETRY_INSTRUCTION */
typedef struct S461 T461;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S462 T462;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S463 T463;

/* ET_SYMBOL_OPERATOR */
typedef struct S464 T464;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S465 T465;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S466 T466;

/* ET_VOID */
typedef struct S467 T467;

/* SPECIAL [ET_VOID] */
typedef struct S468 T468;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S469 T469;

/* ET_SEMICOLON_SYMBOL */
typedef struct S470 T470;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S471 T471;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S472 T472;

/* ET_BRACKET_SYMBOL */
typedef struct S473 T473;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S474 T474;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S475 T475;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S476 T476;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S477 T477;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S478 T478;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S479 T479;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S480 T480;

/* ET_VERBATIM_STRING */
typedef struct S481 T481;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S482 T482;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S483 T483;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S484 T484;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S485 T485;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S486 T486;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S487 T487;

/* ET_TRUE_CONSTANT */
typedef struct S489 T489;

/* ET_FALSE_CONSTANT */
typedef struct S490 T490;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S491 T491;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S492 T492;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S494 T494;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S496 T496;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S497 T497;

/* ET_CREATOR_LIST */
typedef struct S498 T498;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S499 T499;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S500 T500;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S501 T501;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S502 T502;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S503 T503;

/* ET_INVARIANTS */
typedef struct S504 T504;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S505 T505;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S506 T506;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S508 T508;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S510 T510;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S512 T512;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S516 T516;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S517 T517;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S519 T519;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S520 T520;

/* ET_CREATE_EXPRESSION */
typedef struct S521 T521;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S522 T522;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S523 T523;

/* ET_MANIFEST_TUPLE */
typedef struct S524 T524;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S525 T525;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S526 T526;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S527 T527;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S528 T528;

/* ET_FORMAL_PARAMETER */
typedef struct S529 T529;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S530 T530;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S532 T532;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S533 T533;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S535 T535;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S536 T536;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S537 T537;

/* ET_CONSTRAINT_CREATOR */
typedef struct S538 T538;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S539 T539;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S540 T540;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S542 T542;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S543 T543;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S544 T544;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S545 T545;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S546 T546;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S548 T548;

/* ET_BIT_N */
typedef struct S549 T549;

/* ET_BIT_FEATURE */
typedef struct S550 T550;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S551 T551;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S553 T553;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S555 T555;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S556 T556;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S557 T557;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S558 T558;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S559 T559;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S560 T560;

/* SPECIAL [ET_PARENT] */
typedef struct S561 T561;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S562 T562;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S563 T563;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S564 T564;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S565 T565;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S567 T567;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S568 T568;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S570 T570;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S571 T571;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S572 T572;

/* ET_RENAME */
typedef struct S573 T573;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S574 T574;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S575 T575;

/* SPECIAL [ET_EXPORT] */
typedef struct S577 T577;

/* SPECIAL [ET_CLIENTS] */
typedef struct S578 T578;

/* ET_ALL_EXPORT */
typedef struct S579 T579;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S580 T580;

/* ET_FEATURE_EXPORT */
typedef struct S581 T581;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S582 T582;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S584 T584;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S585 T585;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S587 T587;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S588 T588;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S590 T590;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S591 T591;

/* ET_CREATOR */
typedef struct S592 T592;

/* SPECIAL [ET_CREATOR] */
typedef struct S593 T593;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S594 T594;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S595 T595;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S597 T597;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S599 T599;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S600 T600;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S602 T602;

/* ET_CONVERT_FUNCTION */
typedef struct S603 T603;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S604 T604;

/* ET_CONVERT_PROCEDURE */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S606 T606;

/* SPECIAL [ET_TYPE] */
typedef struct S607 T607;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S609 T609;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S610 T610;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S611 T611;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S612 T612;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S613 T613;

/* SPECIAL [ET_QUERY] */
typedef struct S614 T614;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S615 T615;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S618 T618;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S619 T619;

/* SPECIAL [ET_CONSTANT] */
typedef struct S620 T620;

/* ET_PRECONDITIONS */
typedef struct S622 T622;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S623 T623;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S624 T624;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S625 T625;

/* ET_COMPOUND */
typedef struct S626 T626;

/* SPECIAL [ET_COMPOUND] */
typedef struct S627 T627;

/* ET_POSTCONDITIONS */
typedef struct S628 T628;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S629 T629;

/* ET_DO_FUNCTION */
typedef struct S630 T630;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S631 T631;

/* ET_ONCE_FUNCTION */
typedef struct S632 T632;

/* ET_DEFERRED_FUNCTION */
typedef struct S633 T633;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S637 T637;

/* ET_ONCE_PROCEDURE */
typedef struct S638 T638;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S639 T639;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S640 T640;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S641 T641;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S642 T642;

/* ET_PREFIX_NAME */
typedef struct S643 T643;

/* ET_PREFIX_FREE_NAME */
typedef struct S644 T644;

/* ET_INFIX_NAME */
typedef struct S645 T645;

/* ET_INFIX_FREE_NAME */
typedef struct S646 T646;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S647 T647;

/* ET_ALIAS_NAME */
typedef struct S648 T648;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S649 T649;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S650 T650;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S651 T651;

/* ET_ALIAS_FREE_NAME */
typedef struct S652 T652;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S653 T653;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S655 T655;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S656 T656;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S658 T658;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S659 T659;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S660 T660;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S662 T662;

/* ET_LOCAL_VARIABLE */
typedef struct S663 T663;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S664 T664;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S666 T666;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S667 T667;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S670 T670;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S671 T671;

/* ET_LOOP_INVARIANTS */
typedef struct S672 T672;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S674 T674;

/* ET_VARIANT */
typedef struct S675 T675;

/* SPECIAL [ET_VARIANT] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S677 T677;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S678 T678;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S680 T680;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S681 T681;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S683 T683;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S684 T684;

/* ET_LIKE_FEATURE */
typedef struct S686 T686;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S687 T687;

/* ET_LIKE_CURRENT */
typedef struct S688 T688;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S690 T690;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S691 T691;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S692 T692;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S694 T694;

/* ET_BRACKET_EXPRESSION */
typedef struct S695 T695;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S696 T696;

/* SPECIAL [ET_WRITABLE] */
typedef struct S697 T697;

/* ET_ASSIGNMENT */
typedef struct S698 T698;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S699 T699;

/* ET_IF_INSTRUCTION */
typedef struct S700 T700;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S701 T701;

/* ET_INSPECT_INSTRUCTION */
typedef struct S702 T702;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S703 T703;

/* ET_LOOP_INSTRUCTION */
typedef struct S705 T705;

/* ET_DEBUG_INSTRUCTION */
typedef struct S706 T706;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S707 T707;

/* ET_CHECK_INSTRUCTION */
typedef struct S708 T708;

/* ET_BANG_INSTRUCTION */
typedef struct S710 T710;

/* ET_QUALIFIED_CALL */
typedef struct S711 T711;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S712 T712;

/* ET_CREATE_INSTRUCTION */
typedef struct S714 T714;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S715 T715;

/* ET_ELSEIF_PART_LIST */
typedef struct S716 T716;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S717 T717;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S718 T718;

/* ET_ELSEIF_PART */
typedef struct S719 T719;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S721 T721;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S722 T722;

/* ET_WHEN_PART_LIST */
typedef struct S723 T723;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S724 T724;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S725 T725;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S726 T726;

/* ET_WHEN_PART */
typedef struct S727 T727;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S728 T728;

/* ET_CHOICE_LIST */
typedef struct S729 T729;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S732 T732;

/* SPECIAL [ET_CHOICE] */
typedef struct S734 T734;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S737 T737;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S739 T739;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S740 T740;

/* ET_CHOICE_RANGE */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S742 T742;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S743 T743;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S744 T744;

/* ET_MANIFEST_STRING_LIST */
typedef struct S745 T745;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S746 T746;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S747 T747;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S748 T748;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S750 T750;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S751 T751;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S752 T752;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S755 T755;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S756 T756;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S757 T757;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S758 T758;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S759 T759;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S760 T760;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S761 T761;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S763 T763;

/* ET_FEATURE_ADDRESS */
typedef struct S764 T764;

/* ET_CURRENT_ADDRESS */
typedef struct S765 T765;

/* ET_RESULT_ADDRESS */
typedef struct S766 T766;

/* ET_EXPRESSION_ADDRESS */
typedef struct S767 T767;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S768 T768;

/* ET_INFIX_EXPRESSION */
typedef struct S769 T769;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S771 T771;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S772 T772;

/* ET_EQUALITY_EXPRESSION */
typedef struct S773 T773;

/* ET_PREFIX_EXPRESSION */
typedef struct S774 T774;

/* ET_OLD_EXPRESSION */
typedef struct S775 T775;

/* ET_CALL_AGENT */
typedef struct S776 T776;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S777 T777;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S779 T779;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S780 T780;

/* ET_MANIFEST_ARRAY */
typedef struct S781 T781;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S782 T782;

/* ET_STRIP_EXPRESSION */
typedef struct S783 T783;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S784 T784;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S785 T785;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S787 T787;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S788 T788;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S789 T789;

/* ET_MANIFEST_TYPE */
typedef struct S790 T790;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S791 T791;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S792 T792;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S793 T793;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S794 T794;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S795 T795;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S796 T796;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S797 T797;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S798 T798;

/* ET_AGENT_OPEN_TARGET */
typedef struct S799 T799;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S800 T800;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S801 T801;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S802 T802;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S803 T803;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S804 T804;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S805 T805;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S807 T807;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S808 T808;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S809 T809;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S811 T811;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S813 T813;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S814 T814;

/* ET_TAGGED_ASSERTION */
typedef struct S816 T816;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S819 T819;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S820 T820;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S823 T823;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S824 T824;

/* DS_ARRAYED_LIST_CURSOR [INTEGER] */
typedef struct S825 T825;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S827 T827;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S829 T829;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S831 T831;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S832 T832;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S833 T833;

/* SPECIAL [ET_AGENT] */
typedef struct S834 T834;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S835 T835;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S836 T836;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S838 T838;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S839 T839;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S840 T840;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S841 T841;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S842 T842;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S844 T844;

/* SPECIAL [ET_FEATURE] */
typedef struct S845 T845;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S846 T846;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S848 T848;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S850 T850;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S851 T851;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S852 T852;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
typedef struct S853 T853;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
typedef struct S855 T855;

/* RX_BYTE_CODE */
typedef struct S858 T858;

/* RX_CASE_MAPPING */
typedef struct S859 T859;

/* RX_CHARACTER_SET */
typedef struct S860 T860;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S862 T862;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S863 T863;

/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE] */
typedef struct S864 T864;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
typedef struct S865 T865;

/* DS_LINKABLE [INTEGER] */
typedef struct S866 T866;

/* ARRAY [BOOLEAN] */
typedef struct S867 T867;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S870 T870;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S871 T871;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S872 T872;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S873 T873;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S874 T874;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S875 T875;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S876 T876;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S877 T877;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S878 T878;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S879 T879;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S880 T880;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S881 T881;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S882 T882;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S883 T883;

/* C_STRING */
typedef struct S886 T886;

/* ET_SYSTEM_ERROR */
typedef struct S887 T887;

/* ET_INTERNAL_ERROR */
typedef struct S888 T888;

/* ET_VALIDITY_ERROR */
typedef struct S889 T889;

/* ET_CLUSTER_ERROR */
typedef struct S890 T890;

/* ET_SYNTAX_ERROR */
typedef struct S891 T891;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S892 T892;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S893 T893;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S894 T894;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S895 T895;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S896 T896;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S897 T897;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S898 T898;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S899 T899;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S900 T900;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S901 T901;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S902 T902;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S903 T903;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S905 T905;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S906 T906;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S907 T907;

/* UC_UTF8_ROUTINES */
typedef struct S908 T908;

/* UC_UTF8_STRING */
typedef struct S909 T909;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S910 T910;

/* KL_CHARACTER_BUFFER */
typedef struct S911 T911;

/* KL_CHARACTER_ROUTINES */
typedef struct S912 T912;

/* KL_STDIN_FILE */
typedef struct S913 T913;

/* ET_FILE_POSITION */
typedef struct S914 T914;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S916 T916;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S918 T918;

/* KL_ARRAY_ROUTINES [INTEGER] */
typedef struct S920 T920;

/* ARRAY [ET_TYPE] */
typedef struct S921 T921;

/* TYPED_POINTER [SPECIAL [CHARACTER]] */
typedef struct S924 T924;

/* ET_BRACED_TYPE_LIST */
typedef struct S925 T925;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S926 T926;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S927 T927;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S928 T928;

/* ET_KEYWORD_EXPRESSION */
typedef struct S929 T929;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S931 T931;

/* UT_TRISTATE */
typedef struct S932 T932;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S933 T933;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S934 T934;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S935 T935;

/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
typedef struct S936 T936;

/* DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
typedef struct S938 T938;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S940 T940;

/* ET_FEATURE_NAME_TESTER */
typedef struct S941 T941;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S943 T943;

/* ET_ALIAS_NAME_TESTER */
typedef struct S944 T944;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S946 T946;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S947 T947;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S948 T948;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S949 T949;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S950 T950;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S951 T951;

/* ET_SIGNATURE_CHECKER */
typedef struct S952 T952;

/* ET_PARENT_CHECKER2 */
typedef struct S953 T953;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S954 T954;

/* ET_PRECURSOR_CHECKER */
typedef struct S955 T955;

/* ET_PARENT_CHECKER3 */
typedef struct S956 T956;

/* ET_FEATURE_CHECKER */
typedef struct S957 T957;

/* ET_SUPPLIER_BUILDER */
typedef struct S958 T958;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S959 T959;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
typedef struct S960 T960;

/* ET_PARENT_CHECKER1 */
typedef struct S961 T961;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S962 T962;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S967 T967;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S968 T968;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S969 T969;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S970 T970;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S971 T971;

/* DS_LINKED_QUEUE [STRING] */
typedef struct S973 T973;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S974 T974;

/* TO_SPECIAL [ET_XACE_LIBRARY] */
typedef struct S975 T975;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S976 T976;

/* DS_LINKED_STACK [INTEGER] */
typedef struct S977 T977;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S978 T978;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S979 T979;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S980 T980;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S981 T981;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S982 T982;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S984 T984;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S986 T986;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S987 T987;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S988 T988;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S989 T989;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S990 T990;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S991 T991;

/* DS_BILINKED_LIST_CURSOR [STRING] */
typedef struct S992 T992;

/* DS_BILINKABLE [STRING] */
typedef struct S993 T993;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S994 T994;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S995 T995;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S996 T996;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S997 T997;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S998 T998;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S999 T999;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1000 T1000;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S1001 T1001;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S1002 T1002;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S1004 T1004;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1005 T1005;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S1006 T1006;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S1007 T1007;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S1008 T1008;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S1009 T1009;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1010 T1010;

/* EXCEPTIONS */
typedef struct S1011 T1011;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1012 T1012;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1013 T1013;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1014 T1014;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1015 T1015;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1016 T1016;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1017 T1017;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1018 T1018;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1019 T1019;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1021 T1021;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1022 T1022;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1023 T1023;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1024 T1024;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1026 T1026;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1027 T1027;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1028 T1028;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1029 T1029;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1030 T1030;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1031 T1031;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1032 T1032;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1033 T1033;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1034 T1034;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1035 T1035;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1036 T1036;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1037 T1037;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1038 T1038;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1039 T1039;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1040 T1040;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1041 T1041;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1042 T1042;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1044 T1044;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1045 T1045;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1046 T1046;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1047 T1047;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1048 T1048;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1049 T1049;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1050 T1050;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1051 T1051;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1052 T1052;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1054 T1054;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1055 T1055;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1056 T1056;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1057 T1057;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1058 T1058;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1059 T1059;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1060 T1060;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1061 T1061;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1062 T1062;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1063 T1063;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1064 T1064;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1065 T1065;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1066 T1066;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S1067 T1067;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1068 T1068;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1069 T1069;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1070 T1070;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1071 T1071;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1072 T1072;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1073 T1073;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1074 T1074;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1075 T1075;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1076 T1076;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1077 T1077;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1078 T1078;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1079 T1079;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1098 T1098;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1099 T1099;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1101 T1101;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1104 T1104;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1107 T1107;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1122 T1122;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1128 T1128;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1129 T1129;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1131 T1131;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1132 T1132;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1133 T1133;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1134 T1134;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1138 T1138;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1139 T1139;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1140 T1140;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1141 T1141;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1142 T1142;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1143 T1143;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1144 T1144;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S1145 T1145;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1146 T1146;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1147 T1147;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1148 T1148;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1149 T1149;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1150 T1150;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1151 T1151;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
typedef struct S1152 T1152;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_DYNAMIC_TYPE] */
typedef struct S1153 T1153;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_DYNAMIC_TYPE] */
typedef struct S1155 T1155;

/* SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1156 T1156;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
typedef struct S1157 T1157;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
typedef struct S1158 T1158;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1160 T1160;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1161 T1161;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1162 T1162;

/* UC_UNICODE_ROUTINES */
typedef struct S1163 T1163;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1164 T1164;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1170 T1170;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1171 T1171;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1172 T1172;

/* DS_LINKED_QUEUE [CHARACTER] */
typedef struct S1175 T1175;

/* UC_UTF16_ROUTINES */
typedef struct S1176 T1176;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1177 T1177;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1178 T1178;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1179 T1179;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
typedef struct S1180 T1180;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1182 T1182;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1184 T1184;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1185 T1185;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1187 T1187;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1188 T1188;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1190 T1190;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S1191 T1191;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1192 T1192;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1193 T1193;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1194 T1194;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1195 T1195;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1196 T1196;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1197 T1197;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1198 T1198;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1199 T1199;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1200 T1200;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1202 T1202;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1203 T1203;

/* ET_REDECLARED_FEATURE */
typedef struct S1204 T1204;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1205 T1205;

/* DS_HASH_TABLE [INTEGER, ET_CLASS] */
typedef struct S1206 T1206;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
typedef struct S1208 T1208;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1210 T1210;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1211 T1211;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1212 T1212;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1214 T1214;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1215 T1215;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S1217 T1217;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1218 T1218;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1219 T1219;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1220 T1220;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1223 T1223;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1224 T1224;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_DYNAMIC_TYPE] */
typedef struct S1230 T1230;

/* TO_SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1231 T1231;

/* SPECIAL [NATURAL_8] */
typedef struct S1232 T1232;

/* STRING_SEARCHER */
typedef struct S1233 T1233;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1235 T1235;

/* XM_COMMENT */
typedef struct S1236 T1236;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1237 T1237;

/* XM_CHARACTER_DATA */
typedef struct S1238 T1238;

/* XM_NAMESPACE */
typedef struct S1239 T1239;

/* ET_FEATURE_IDS */
typedef struct S1240 T1240;

/* ET_FEATURE_LIST */
typedef struct S1241 T1241;

/* ET_PARENT_FEATURE */
typedef struct S1242 T1242;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1243 T1243;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1244 T1244;

/* ET_INHERITED_FEATURE */
typedef struct S1245 T1245;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1251 T1251;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1252 T1252;

/* ET_CONVERT_EXPRESSION */
typedef struct S1255 T1255;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1256 T1256;

/* ET_COMPRESSED_POSITION */
typedef struct S1259 T1259;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1260 T1260;

/* ET_REPLICATED_FEATURE */
typedef struct S1262 T1262;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1263 T1263;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1264 T1264;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1266 T1266;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1267 T1267;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1268 T1268;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1269 T1269;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1270 T1270;

/* SPECIAL [ARRAY [INTEGER]] */
typedef struct S1271 T1271;

/* SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
typedef struct S1272 T1272;

/* SPECIAL [NATURAL_64] */
typedef struct S1273 T1273;

/* ARRAY [NATURAL_64] */
typedef struct S1274 T1274;

/* DS_LINKABLE [CHARACTER] */
typedef struct S1275 T1275;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1277 T1277;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1278 T1278;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1279 T1279;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1280 T1280;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1281 T1281;

/* SPECIAL [ET_RENAME] */
typedef struct S1282 T1282;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1284 T1284;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1286 T1286;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1287 T1287;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1288 T1288;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1289 T1289;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1291 T1291;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1292 T1292;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1294 T1294;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1296 T1296;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1297 T1297;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1298 T1298;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1299 T1299;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1300 T1300;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1302 T1302;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1304 T1304;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1305 T1305;

/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1307 T1307;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1308 T1308;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
typedef struct S1309 T1309;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1311 T1311;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1312 T1312;

/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1313 T1313;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1314 T1314;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1317 T1317;

/* AP_OPTION_COMPARATOR */
typedef struct S1318 T1318;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1319 T1319;

/* STD_FILES */
typedef struct S1327 T1327;

/* PLATFORM */
typedef struct S1328 T1328;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1330 T1330;

/* XM_NODE_TYPER */
typedef struct S1331 T1331;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1337 T1337;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1338 T1338;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1339 T1339;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1342 T1342;

/* KL_STRING_INPUT_STREAM */
typedef struct S1346 T1346;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1349 T1349;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1358 T1358;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1359 T1359;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1362 T1362;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1363 T1363;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1364 T1364;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1365 T1365;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1366 T1366;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1367 T1367;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1368 T1368;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1369 T1369;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1370 T1370;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1371 T1371;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1372 T1372;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1373 T1373;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1374 T1374;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1375 T1375;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1376 T1376;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1377 T1377;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1378 T1378;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1381 T1381;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1382 T1382;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1383 T1383;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1384 T1384;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1385 T1385;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1386 T1386;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1387 T1387;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1388 T1388;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1390 T1390;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1392 T1392;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1393 T1393;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1396 T1396;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1398 T1398;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S1399 T1399;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1405 T1405;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1406 T1406;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1407 T1407;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1408 T1408;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1409 T1409;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1410 T1410;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1411 T1411;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1416 T1416;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1418 T1418;

/* CONSOLE */
typedef struct S1419 T1419;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1420 T1420;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1423 T1423;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S69 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER]] */
struct S924 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1252 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a13; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a2; /* error_handler */
	T0* a3; /* ace_filename */
	T0* a4; /* last_universe */
	T0* a7; /* finalize_flag */
	T0* a8; /* cat_flag */
	T0* a9; /* no_c_compile_flag */
	T0* a10; /* silent_flag */
	T0* a11; /* verbose_flag */
	T0* a12; /* version_flag */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a3; /* mode */
	T0* a7; /* name */
	T0* a10; /* string_name */
	T0* a11; /* character_buffer */
	T1 a12; /* end_of_file */
	T14 a17; /* file_pointer */
	T1 a19; /* descriptor_available */
	T0* a24; /* last_string */
	T2 a26; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a6; /* warning_file */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a8; /* application_description */
	T0* a9; /* parameters_description */
	T0* a11; /* error_handler */
	T0* a14; /* argument_list */
	T0* a16; /* current_options */
	T1 a17; /* is_first_option */
	T0* a23; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a10; /* first_cell */
};

/* Struct for type AP_FLAG */
struct S32 {
	int id;
	T6 a2; /* occurrences */
	T0* a3; /* description */
	T0* a4; /* long_form */
	T2 a5; /* short_form */
	T1 a6; /* has_short_form */
	T1 a7; /* is_mandatory */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S37 {
	int id;
	T0* a13; /* description */
	T2 a14; /* short_form */
	T1 a15; /* has_short_form */
	T0* a16; /* long_form */
	T6 a17; /* occurrences */
	T1 a21; /* is_hidden */
	T1 a22; /* is_mandatory */
};

/* Struct for type ET_XACE_UNIVERSE_PARSER */
struct S38 {
	int id;
	T0* a1; /* last_universe */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_preprocessor */
	T0* a11; /* parsed_libraries */
	T0* a12; /* error_handler */
	T0* a14; /* library_parser */
	T0* a18; /* eiffel_error_handler */
	T0* a19; /* eiffel_ast_factory */
	T1 a139; /* is_shallow */
	T1 a140; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S39 {
	int id;
	T6 a2; /* error_count */
	T0* a3; /* error_file */
	T0* a5; /* warning_file */
	T0* a6; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING, STRING] */
struct S40 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a9; /* slots_position */
	T6 a11; /* count */
	T0* a12; /* equality_tester */
	T6 a13; /* found_position */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a18; /* item_storage */
	T0* a21; /* clashes */
	T0* a22; /* slots */
	T0* a23; /* key_storage */
	T6 a24; /* free_slot */
	T0* a25; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ST_SPLITTER */
struct S41 {
	int id;
	T1 a3; /* has_escape_character */
	T2 a4; /* escape_character */
	T0* a6; /* separator_codes */
	T0* a8; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S43 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING] */
struct S44 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S45 {
	int id;
};

/* Struct for type ET_XACE_UNIVERSE */
struct S48 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T6 a42; /* feature_count */
	T0* a43; /* system_name */
	T0* a44; /* internal_eiffel_parser */
	T0* a45; /* ast_factory */
	T1 a46; /* use_assign_keyword */
	T1 a47; /* use_attribute_keyword */
	T1 a48; /* use_convert_keyword */
	T1 a49; /* use_create_keyword */
	T1 a50; /* use_recast_keyword */
	T1 a51; /* use_reference_keyword */
	T1 a52; /* use_void_keyword */
	T1 a53; /* providers_enabled */
	T0* a54; /* clusters */
	T0* a56; /* basic_classes */
	T0* a58; /* null_processor */
	T0* a59; /* provider_checker */
	T0* a60; /* ancestor_builder */
	T0* a61; /* feature_flattener */
	T0* a62; /* implementation_checker */
	T0* a63; /* flat_implementation_checker */
	T0* a65; /* ecma_version */
	T0* a66; /* dotnet_assemblies */
	T1 a68; /* is_preparsed */
	T1 a69; /* flat_mode */
	T1 a70; /* flat_dbc_mode */
	T1 a71; /* suppliers_enabled */
	T0* a73; /* root_class_name */
	T0* a74; /* libraries */
	T0* a75; /* options */
	T0* a76; /* creation_procedure_name */
	T0* a79; /* general_class */
	T0* a80; /* tuple_class */
	T0* a81; /* bit_class */
	T0* a82; /* native_array_class */
	T0* a83; /* type_class */
	T0* a84; /* routine_class */
	T0* a85; /* procedure_class */
	T0* a86; /* predicate_class */
	T0* a87; /* function_class */
	T0* a88; /* arguments_class */
	T0* a89; /* platform_class */
	T0* a90; /* system_object_class */
	T0* a91; /* system_string_class */
	T0* a92; /* any_type */
	T0* a93; /* none_type */
	T0* a94; /* integer_type */
	T0* a95; /* natural_type */
	T0* a96; /* character_type */
	T0* a97; /* string_type */
	T0* a98; /* real_type */
	T0* a99; /* double_type */
	T0* a100; /* tuple_type */
	T0* a101; /* array_any_type */
	T0* a102; /* array_none_type */
	T0* a103; /* any_parent */
	T0* a104; /* any_parents */
	T0* a105; /* system_object_parents */
	T0* a106; /* integer_convert_feature */
	T0* a107; /* integer_8_convert_feature */
	T0* a108; /* integer_16_convert_feature */
	T0* a109; /* integer_32_convert_feature */
	T0* a110; /* integer_64_convert_feature */
	T0* a111; /* natural_convert_feature */
	T0* a112; /* natural_8_convert_feature */
	T0* a113; /* natural_16_convert_feature */
	T0* a114; /* natural_32_convert_feature */
	T0* a115; /* natural_64_convert_feature */
	T0* a116; /* real_convert_feature */
	T0* a117; /* double_convert_feature */
	T0* a118; /* real_32_convert_feature */
	T0* a119; /* real_64_convert_feature */
	T0* a120; /* boolean_ref_class */
	T0* a121; /* character_8_ref_class */
	T0* a122; /* character_32_ref_class */
	T0* a123; /* character_ref_class */
	T0* a124; /* wide_character_ref_class */
	T0* a125; /* integer_8_ref_class */
	T0* a126; /* integer_16_ref_class */
	T0* a127; /* integer_32_ref_class */
	T0* a128; /* integer_64_ref_class */
	T0* a129; /* integer_ref_class */
	T0* a130; /* natural_8_ref_class */
	T0* a131; /* natural_16_ref_class */
	T0* a132; /* natural_32_ref_class */
	T0* a133; /* natural_64_ref_class */
	T0* a134; /* natural_ref_class */
	T0* a135; /* real_32_ref_class */
	T0* a136; /* real_64_ref_class */
	T0* a137; /* real_ref_class */
	T0* a138; /* double_ref_class */
	T0* a139; /* pointer_ref_class */
	T0* a140; /* numeric_class */
	T0* a141; /* comparable_class */
	T0* a142; /* part_comparable_class */
	T0* a143; /* hashable_class */
	T0* a144; /* boolean_convert_feature */
	T0* a145; /* character_convert_feature */
	T0* a146; /* wide_character_convert_feature */
	T0* a147; /* pointer_convert_feature */
	T1 a148; /* cluster_dependence_enabled */
	T0* a149; /* internal_dotnet_assembly_consumer */
	T0* a150; /* internal_eiffel_preparser */
	T6 a151; /* copy_seed */
	T6 a152; /* void_seed */
	T0* a153; /* supplier_handler */
};

/* Struct for type ET_LACE_PARSER */
struct S49 {
	int id;
	T0* a2; /* last_universe */
	T6 a3; /* yy_parsing_status */
	T0* a5; /* named_clusters */
	T0* a7; /* override_cluster_names */
	T0* a8; /* external_include_pathnames */
	T0* a9; /* external_object_pathnames */
	T0* a10; /* ast_factory */
	T6 a11; /* eif_lineno */
	T0* a13; /* eif_buffer */
	T0* a14; /* input_buffer */
	T6 a15; /* yy_end */
	T6 a16; /* yy_position */
	T6 a17; /* yy_line */
	T6 a18; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T6 a28; /* error_count */
	T1 a29; /* yy_lookahead_needed */
	T6 a30; /* yyerrstatus */
	T6 a31; /* yyssp */
	T0* a32; /* yyss */
	T0* a41; /* yypact */
	T6 a43; /* last_token */
	T0* a46; /* yytranslate */
	T0* a49; /* yycheck */
	T0* a50; /* yytable */
	T0* a52; /* yydefact */
	T0* a54; /* yyr1 */
	T0* a56; /* yypgoto */
	T0* a57; /* yydefgoto */
	T0* a60; /* filename */
	T0* a61; /* error_handler */
	T6 a63; /* yy_start_state */
	T6 a64; /* line */
	T6 a65; /* column */
	T6 a66; /* position */
	T1 a67; /* yy_more_flag */
	T6 a68; /* yy_more_len */
	T6 a69; /* yy_last_accepting_state */
	T6 a70; /* yy_last_accepting_cpos */
	T1 a71; /* yy_rejected */
	T6 a72; /* yy_state_count */
	T6 a73; /* yy_full_match */
	T6 a74; /* yy_lp */
	T6 a75; /* yy_looking_for_trail_begin */
	T6 a76; /* yy_full_lp */
	T6 a77; /* yy_full_state */
	T6 a78; /* yy_start */
	T6 a79; /* yyvsp1 */
	T6 a80; /* yyvsp2 */
	T6 a81; /* yyvsp3 */
	T6 a82; /* yyvsp4 */
	T6 a83; /* yyvsp5 */
	T6 a84; /* yyvsp6 */
	T6 a85; /* yyvsp7 */
	T0* a93; /* yy_state_stack */
	T0* a94; /* yy_ec */
	T0* a95; /* yy_content_area */
	T0* a96; /* yy_content */
	T0* a97; /* yy_accept */
	T0* a98; /* yy_chk */
	T0* a99; /* yy_base */
	T0* a100; /* yy_def */
	T0* a101; /* yy_meta */
	T0* a103; /* yy_nxt */
	T0* a105; /* yy_acclist */
	T0* a115; /* yytypes2 */
	T6 a116; /* yyvsc1 */
	T0* a117; /* yyvs1 */
	T0* a118; /* yyspecial_routines1 */
	T0* a120; /* last_any_value */
	T6 a121; /* yyvsc2 */
	T0* a122; /* yyvs2 */
	T0* a123; /* yyspecial_routines2 */
	T0* a124; /* last_et_identifier_value */
	T0* a125; /* yyvs4 */
	T0* a127; /* yyvs7 */
	T6 a129; /* yyvsc4 */
	T0* a130; /* yyspecial_routines4 */
	T0* a131; /* yyvs3 */
	T0* a133; /* yyvs5 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyspecial_routines3 */
	T6 a138; /* yyvsc5 */
	T0* a139; /* yyspecial_routines5 */
	T6 a140; /* yyvsc7 */
	T0* a141; /* yyspecial_routines7 */
	T0* a142; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a148; /* yytypes1 */
	T6 a189; /* code_ */
	T0* a192; /* str_ */
	T0* a207; /* msil_clr_version_value */
	T0* a209; /* metadata_cache_path_value */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S50 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S51 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T6 a42; /* feature_count */
	T0* a43; /* tuple_class */
	T0* a44; /* procedure_class */
	T0* a45; /* function_class */
	T0* a46; /* predicate_class */
	T0* a47; /* system_name */
	T0* a48; /* internal_eiffel_parser */
	T0* a49; /* ast_factory */
	T1 a50; /* cluster_dependence_enabled */
	T0* a51; /* general_class */
	T1 a52; /* use_void_keyword */
	T1 a53; /* use_assign_keyword */
	T1 a54; /* use_attribute_keyword */
	T1 a55; /* use_convert_keyword */
	T1 a56; /* use_create_keyword */
	T1 a57; /* use_recast_keyword */
	T1 a58; /* use_reference_keyword */
	T1 a59; /* providers_enabled */
	T0* a60; /* clusters */
	T0* a62; /* basic_classes */
	T0* a64; /* null_processor */
	T0* a65; /* provider_checker */
	T0* a66; /* ancestor_builder */
	T0* a67; /* feature_flattener */
	T0* a68; /* implementation_checker */
	T0* a69; /* flat_implementation_checker */
	T0* a71; /* ecma_version */
	T0* a72; /* dotnet_assemblies */
	T1 a74; /* is_preparsed */
	T1 a75; /* flat_mode */
	T1 a76; /* flat_dbc_mode */
	T1 a77; /* suppliers_enabled */
	T6 a80; /* copy_seed */
	T6 a81; /* void_seed */
	T0* a83; /* bit_class */
	T0* a84; /* native_array_class */
	T0* a85; /* type_class */
	T0* a86; /* routine_class */
	T0* a87; /* arguments_class */
	T0* a88; /* platform_class */
	T0* a89; /* system_object_class */
	T0* a90; /* system_string_class */
	T0* a91; /* any_type */
	T0* a92; /* none_type */
	T0* a93; /* integer_type */
	T0* a94; /* natural_type */
	T0* a95; /* character_type */
	T0* a96; /* string_type */
	T0* a97; /* real_type */
	T0* a98; /* double_type */
	T0* a99; /* tuple_type */
	T0* a100; /* array_any_type */
	T0* a101; /* array_none_type */
	T0* a102; /* any_parent */
	T0* a103; /* any_parents */
	T0* a104; /* system_object_parents */
	T0* a105; /* integer_convert_feature */
	T0* a106; /* integer_8_convert_feature */
	T0* a107; /* integer_16_convert_feature */
	T0* a108; /* integer_32_convert_feature */
	T0* a109; /* integer_64_convert_feature */
	T0* a110; /* natural_convert_feature */
	T0* a111; /* natural_8_convert_feature */
	T0* a112; /* natural_16_convert_feature */
	T0* a113; /* natural_32_convert_feature */
	T0* a114; /* natural_64_convert_feature */
	T0* a115; /* real_convert_feature */
	T0* a116; /* double_convert_feature */
	T0* a117; /* real_32_convert_feature */
	T0* a118; /* real_64_convert_feature */
	T0* a119; /* boolean_ref_class */
	T0* a120; /* character_8_ref_class */
	T0* a121; /* character_32_ref_class */
	T0* a122; /* character_ref_class */
	T0* a123; /* wide_character_ref_class */
	T0* a124; /* integer_8_ref_class */
	T0* a125; /* integer_16_ref_class */
	T0* a126; /* integer_32_ref_class */
	T0* a127; /* integer_64_ref_class */
	T0* a128; /* integer_ref_class */
	T0* a129; /* natural_8_ref_class */
	T0* a130; /* natural_16_ref_class */
	T0* a131; /* natural_32_ref_class */
	T0* a132; /* natural_64_ref_class */
	T0* a133; /* natural_ref_class */
	T0* a134; /* real_32_ref_class */
	T0* a135; /* real_64_ref_class */
	T0* a136; /* real_ref_class */
	T0* a137; /* double_ref_class */
	T0* a138; /* pointer_ref_class */
	T0* a139; /* numeric_class */
	T0* a140; /* comparable_class */
	T0* a141; /* part_comparable_class */
	T0* a142; /* hashable_class */
	T0* a143; /* boolean_convert_feature */
	T0* a144; /* character_convert_feature */
	T0* a145; /* wide_character_convert_feature */
	T0* a146; /* pointer_convert_feature */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T0* a148; /* internal_eiffel_preparser */
	T0* a149; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S52 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* has_error */
	T1 a6; /* benchmark_shown */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S53 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* null_dynamic_type_set_builder */
	T0* a4; /* dynamic_types */
	T1 a5; /* catcall_mode */
	T0* a6; /* dynamic_type_set_builder */
	T0* a7; /* boolean_type */
	T0* a8; /* character_type */
	T0* a9; /* wide_character_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_type */
	T0* a23; /* double_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a38; /* root_type */
	T0* a39; /* root_creation_procedure */
	T0* a40; /* array_area_feature */
	T0* a41; /* array_lower_feature */
	T0* a42; /* array_upper_feature */
	T0* a43; /* typed_pointer_to_pointer_feature */
};

/* Struct for type ET_CLASS */
struct S55 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* class_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* eiffel_class */
	T0* a10; /* master_class */
	T6 a11; /* time_stamp */
	T0* a14; /* formal_parameters */
	T0* a19; /* class_mark */
	T1 a23; /* is_parsed */
	T0* a25; /* group */
	T0* a26; /* overridden_class */
	T6 a36; /* index */
	T1 a37; /* interface_checked */
	T1 a38; /* has_interface_error */
	T1 a41; /* has_syntax_error */
	T0* a45; /* filename */
	T0* a46; /* creators */
	T0* a47; /* frozen_keyword */
	T0* a48; /* external_keyword */
	T0* a49; /* providers */
	T1 a50; /* in_system */
	T0* a51; /* parents */
	T0* a52; /* invariants */
	T0* a53; /* convert_features */
	T1 a54; /* has_flat_implementation_error */
	T1 a55; /* flat_implementation_checked */
	T1 a56; /* has_implementation_error */
	T1 a57; /* implementation_checked */
	T0* a58; /* suppliers */
	T1 a59; /* has_flattening_error */
	T1 a60; /* features_flattened */
	T1 a61; /* has_deferred_features */
	T1 a62; /* has_ancestors_error */
	T1 a63; /* ancestors_built */
	T0* a64; /* feature_clauses */
	T0* a65; /* first_indexing */
	T0* a66; /* second_indexing */
	T0* a67; /* obsolete_message */
	T0* a68; /* leading_break */
	T1 a69; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S56 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* short_names */
	T0* a3; /* type_checker */
	T0* a4; /* universe */
	T0* a5; /* current_system */
	T0* a6; /* current_file */
	T0* a8; /* header_file */
	T0* a9; /* current_type */
	T0* a10; /* current_feature */
	T0* a12; /* current_function_header_buffer */
	T0* a13; /* current_function_body_buffer */
	T0* a14; /* temp_variables */
	T0* a15; /* used_temp_variables */
	T0* a16; /* free_temp_variables */
	T0* a17; /* conforming_types */
	T0* a18; /* non_conforming_types */
	T0* a19; /* operand_stack */
	T0* a20; /* call_operands */
	T0* a21; /* polymorphic_type_ids */
	T0* a22; /* polymorphic_types */
	T0* a23; /* standalone_type_sets */
	T0* a24; /* polymorphic_call_feature */
	T0* a25; /* current_agents */
	T0* a26; /* agent_open_operands */
	T0* a27; /* agent_closed_operands */
	T0* a28; /* agent_target */
	T0* a30; /* agent_arguments */
	T0* a31; /* agent_instruction */
	T0* a32; /* agent_expression */
	T0* a33; /* wrapper_expression */
	T0* a34; /* wrapper_dynamic_type_sets */
	T0* a35; /* manifest_array_types */
	T0* a36; /* manifest_tuple_types */
	T0* a37; /* once_features */
	T0* a38; /* constant_features */
	T0* a39; /* called_features */
	T0* a40; /* included_header_filenames */
	T0* a42; /* included_runtime_header_files */
	T0* a43; /* included_runtime_c_files */
	T0* a44; /* c_filenames */
	T0* a45; /* cpp_filenames */
	T1 a46; /* is_finalize */
	T0* a47; /* external_c_regexp */
	T0* a48; /* external_c_macro_regexp */
	T0* a49; /* external_c_struct_regexp */
	T0* a50; /* external_c_inline_regexp */
	T0* a51; /* old_external_c_regexp */
	T0* a52; /* old_external_c_macro_regexp */
	T0* a53; /* old_external_c_struct_regexp */
	T0* a54; /* external_cpp_regexp */
	T0* a55; /* external_cpp_inline_regexp */
	T6 a112; /* indentation */
	T0* a230; /* assignment_target */
	T1 a231; /* in_operand */
	T0* a234; /* call_target_type */
	T0* a250; /* current_agent */
};

/* Struct for type KL_SHELL_COMMAND */
struct S57 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a4; /* command */
	T6 a5; /* return_code */
	T1 a7; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S58 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S59 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* character_index */
	T0* a11; /* boolean_index */
	T0* a12; /* double_index */
	T0* a13; /* real_index */
	T0* a14; /* integer_index */
	T0* a15; /* integer_8_index */
	T0* a16; /* integer_16_index */
	T0* a17; /* integer_32_index */
	T0* a18; /* integer_64_index */
	T0* a19; /* natural_index */
	T0* a20; /* natural_8_index */
	T0* a21; /* natural_16_index */
	T0* a22; /* natural_32_index */
	T0* a23; /* natural_64_index */
	T0* a24; /* pointer_index */
	T0* a25; /* none_index */
	T0* a26; /* string_index */
	T1 a27; /* catcall_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a37; /* current_feature_impl */
	T0* a38; /* current_class_impl */
	T0* a39; /* enclosing_inline_agents */
	T0* a40; /* overloaded_procedures */
	T0* a41; /* unused_overloaded_procedures_list */
	T0* a42; /* overloaded_queries */
	T0* a43; /* unused_overloaded_queries_list */
	T0* a44; /* best_overloaded_features */
	T0* a45; /* unused_contexts */
	T0* a46; /* current_context */
	T1 a48; /* in_precursor */
	T0* a184; /* current_inline_agent */
	T1 a185; /* in_rescue */
	T1 a188; /* in_invariant */
	T1 a189; /* in_precondition */
	T1 a190; /* in_postcondition */
	T0* a194; /* current_target_type */
	T1 a196; /* in_assertion */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S60 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S62 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S64 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S65 {
	int id;
	T2 a16; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S66 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER] */
struct S67 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_STANDARD_FILES */
struct S71 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S72 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S73 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type UC_STRING */
struct S74 {
	int id;
	T6 a1; /* count */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T0* a7; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S75 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING] */
struct S76 {
	int id;
	T6 a2; /* count */
	T0* a7; /* internal_cursor */
	T0* a9; /* storage */
	T0* a14; /* special_routines */
	T6 a15; /* capacity */
	T0* a20; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S77 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T0* a9; /* storage */
	T0* a12; /* special_routines */
	T6 a13; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S78 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S79 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a4; /* warning_file */
	T0* a5; /* info_file */
};

/* Struct for type AP_ERROR */
struct S80 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a4; /* code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S81 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ST_WORD_WRAPPER */
struct S82 {
	int id;
	T6 a3; /* new_line_indentation */
	T6 a4; /* broken_words */
	T6 a5; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S83 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S84 {
	int id;
	T0* a1; /* root_element */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
	T0* a8; /* last_cell */
	T6 a9; /* count */
	T0* a13; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S85 {
	int id;
	T0* a1; /* parent */
	T0* a3; /* name */
	T0* a15; /* namespace */
	T0* a18; /* first_cell */
	T0* a19; /* last_cell */
	T6 a20; /* count */
	T0* a21; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S86 {
	int id;
	T0* a2; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S88 {
	int id;
	T0* a1; /* error */
	T0* a3; /* tree */
	T0* a5; /* start */
	T0* a8; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S89 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S90 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S91 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S92 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
struct S93 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* equality_tester */
	T0* a9; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a20; /* special_item_routines */
	T0* a21; /* special_key_routines */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S94 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_PARSER */
struct S95 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a5; /* library_parser */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_parser */
	T0* a9; /* tree_pipe */
	T0* a10; /* last_library */
	T1 a129; /* is_shallow */
	T1 a130; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S96 {
	int id;
	T0* a3; /* internal_last_error_description */
	T0* a8; /* scanner */
	T0* a14; /* error_positions */
	T0* a16; /* scanners */
	T1 a17; /* in_external_dtd */
	T0* a18; /* callbacks */
	T0* a19; /* entities */
	T0* a21; /* pe_entities */
	T0* a22; /* dtd_resolver */
	T0* a24; /* entity_resolver */
	T1 a25; /* use_namespaces */
	T6 a26; /* string_mode */
	T0* a28; /* yyss */
	T0* a31; /* yytranslate */
	T0* a33; /* yyr1 */
	T0* a35; /* yytypes1 */
	T0* a37; /* yytypes2 */
	T0* a39; /* yydefact */
	T0* a41; /* yydefgoto */
	T0* a43; /* yypact */
	T0* a45; /* yypgoto */
	T0* a47; /* yytable */
	T0* a49; /* yycheck */
	T6 a51; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a61; /* error_count */
	T1 a62; /* yy_lookahead_needed */
	T6 a63; /* yyerrstatus */
	T6 a64; /* yyssp */
	T6 a72; /* last_token */
	T6 a81; /* yyvsp1 */
	T6 a82; /* yyvsp2 */
	T6 a83; /* yyvsp3 */
	T6 a84; /* yyvsp4 */
	T6 a85; /* yyvsp5 */
	T6 a86; /* yyvsp6 */
	T6 a87; /* yyvsp7 */
	T6 a88; /* yyvsp8 */
	T6 a89; /* yyvsp9 */
	T6 a90; /* yyvsp10 */
	T6 a91; /* yyvsp11 */
	T0* a92; /* last_string_value */
	T6 a103; /* yyvsc1 */
	T0* a104; /* yyvs1 */
	T0* a105; /* yyspecial_routines1 */
	T0* a107; /* last_any_value */
	T6 a108; /* yyvsc4 */
	T0* a109; /* yyvs4 */
	T0* a110; /* yyspecial_routines4 */
	T6 a112; /* yyvsc2 */
	T0* a113; /* yyvs2 */
	T0* a114; /* yyspecial_routines2 */
	T0* a121; /* yyvs11 */
	T6 a122; /* yyvsc11 */
	T0* a123; /* yyspecial_routines11 */
	T0* a125; /* yyvs10 */
	T0* a126; /* yyvs5 */
	T6 a128; /* yyvsc10 */
	T0* a129; /* yyspecial_routines10 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyvs3 */
	T0* a137; /* yyspecial_routines3 */
	T0* a143; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a151; /* yyvs8 */
	T0* a154; /* yyvs7 */
	T6 a155; /* yyvsc8 */
	T0* a156; /* yyspecial_routines8 */
	T6 a158; /* yyvsc7 */
	T0* a159; /* yyspecial_routines7 */
	T0* a161; /* yyvs9 */
	T6 a163; /* yyvsc9 */
	T0* a164; /* yyspecial_routines9 */
	T6 a170; /* yyvsc5 */
	T0* a171; /* yyspecial_routines5 */
	T0* a177; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S99 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING, STRING] */
struct S100 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [STRING] */
struct S102 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [INTEGER] */
struct S103 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING, STRING] */
struct S104 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER] */
struct S105 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING] */
struct S106 {
	int id;
};

/* Struct for type DS_LINKED_LIST [STRING] */
struct S107 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING] */
struct S108 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER] */
struct S109 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a15; /* count */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* special_item_routines */
	T0* a21; /* item_storage */
	T0* a22; /* clashes */
	T0* a24; /* slots */
	T6 a25; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S110 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S111 {
	int id;
	T0* a9; /* error_handler */
	T0* a10; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S112 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T6 a15; /* slots_position */
	T0* a17; /* equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type YY_FILE_BUFFER */
struct S113 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a11; /* end_of_file */
	T6 a12; /* capacity */
	T1 a13; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S114 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a11; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S115 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type SPECIAL [ANY] */
struct S117 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S118 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S119 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a4; /* status_code */
	T6 a12; /* compressed_position */
	T6 a14; /* hash_code */
	T0* a15; /* name */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S120 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S121 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S122 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S123 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a12; /* parent */
	T1 a18; /* is_override */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a34; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S124 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S125 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S126 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S127 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S128 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S129 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S130 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S131 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S132 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S133 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S134 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S135 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S136 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S137 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S138 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S139 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S140 {
	int id;
	T6 a3; /* position */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S141 {
	int id;
	T6 a2; /* capacity */
	T6 a4; /* found_position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T0* a15; /* equality_tester */
	T6 a16; /* modulus */
	T6 a17; /* clashes_previous_position */
	T0* a20; /* item_storage */
	T0* a23; /* clashes */
	T0* a24; /* slots */
	T0* a25; /* key_storage */
	T6 a26; /* free_slot */
	T0* a28; /* internal_cursor */
	T0* a30; /* special_item_routines */
	T0* a31; /* special_key_routines */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S142 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a3; /* current_system */
	T1 a4; /* catcall_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S143 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S144 {
	int id;
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* id */
	T0* a5; /* queries */
	T0* a10; /* base_class */
	T0* a13; /* procedures */
	T0* a15; /* first_type */
	T0* a16; /* other_types */
	T0* a17; /* next_type */
	T1 a23; /* has_static */
	T0* a25; /* query_calls */
	T0* a26; /* procedure_calls */
};

/* Struct for type ET_QUERY_LIST */
struct S146 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S148 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S150 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T0* a6; /* result_type_set */
	T1 a7; /* is_generated */
	T6 a11; /* builtin_code */
	T1 a13; /* is_creation */
	T0* a14; /* first_precursor */
	T1 a15; /* is_regular */
	T0* a16; /* other_precursors */
	T1 a41; /* is_built */
	T1 a46; /* is_current_type_needed */
	T1 a47; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S151 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S152 {
	int id;
	T6 a12; /* time_storage */
	T6 a16; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S153 {
	int id;
	T6 a2; /* second */
	T6 a4; /* year */
	T6 a5; /* month */
	T6 a6; /* day */
	T6 a7; /* hour */
	T6 a8; /* minute */
	T6 a9; /* millisecond */
	T1 a10; /* is_utc */
	T0* a21; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S157 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S158 {
	int id;
	T0* a1; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a7; /* last_keywords */
	T0* a9; /* last_symbols */
	T0* a11; /* assertions */
	T0* a13; /* queries */
	T0* a15; /* procedures */
	T0* a17; /* constraints */
	T0* a19; /* providers */
	T0* a21; /* universe */
	T0* a22; /* ast_factory */
	T0* a23; /* error_handler */
	T1 a24; /* use_assign_keyword */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_convert_keyword */
	T1 a27; /* use_create_keyword */
	T1 a28; /* use_recast_keyword */
	T1 a29; /* use_reference_keyword */
	T1 a30; /* use_void_keyword */
	T1 a31; /* providers_enabled */
	T1 a32; /* overriding_class_added */
	T1 a33; /* is_null */
	T6 a35; /* last_text_count */
	T6 a36; /* last_literal_start */
	T0* a37; /* filename */
	T0* a38; /* current_class */
	T0* a40; /* yyss */
	T0* a48; /* input_buffer */
	T0* a49; /* yytranslate */
	T0* a51; /* yyr1 */
	T0* a53; /* yytypes1 */
	T0* a55; /* yytypes2 */
	T0* a57; /* yydefact */
	T0* a59; /* yydefgoto */
	T0* a61; /* yypact */
	T0* a63; /* yypgoto */
	T0* a65; /* yytable */
	T0* a67; /* yycheck */
	T6 a69; /* time_stamp */
	T0* a70; /* cluster */
	T6 a72; /* yy_start_state */
	T6 a73; /* yy_line */
	T6 a74; /* yy_column */
	T6 a75; /* yy_position */
	T6 a76; /* line */
	T6 a77; /* column */
	T6 a78; /* position */
	T0* a80; /* yy_state_stack */
	T6 a81; /* yy_end */
	T6 a82; /* yy_start */
	T6 a83; /* yy_parsing_status */
	T6 a85; /* yy_suspended_yystacksize */
	T6 a86; /* yy_suspended_yystate */
	T6 a87; /* yy_suspended_yyn */
	T6 a88; /* yy_suspended_yychar1 */
	T6 a89; /* yy_suspended_index */
	T6 a90; /* yy_suspended_yyss_top */
	T6 a91; /* yy_suspended_yy_goto */
	T6 a93; /* error_count */
	T1 a94; /* yy_lookahead_needed */
	T6 a95; /* yyerrstatus */
	T6 a96; /* yyssp */
	T6 a104; /* last_token */
	T0* a113; /* last_class */
	T0* a114; /* last_clients */
	T0* a115; /* last_export_clients */
	T0* a116; /* last_feature_clause */
	T6 a117; /* last_literal_end */
	T0* a118; /* verbatim_marker */
	T0* a119; /* verbatim_open_white_characters */
	T0* a120; /* verbatim_close_white_characters */
	T1 a121; /* yy_more_flag */
	T6 a122; /* yy_more_len */
	T6 a123; /* yy_last_accepting_state */
	T6 a124; /* yy_last_accepting_cpos */
	T1 a125; /* yy_rejected */
	T6 a126; /* yy_state_count */
	T6 a127; /* yy_full_match */
	T6 a128; /* yy_lp */
	T6 a129; /* yy_looking_for_trail_begin */
	T6 a130; /* yy_full_lp */
	T6 a131; /* yy_full_state */
	T0* a132; /* yy_nxt */
	T0* a134; /* yy_chk */
	T0* a136; /* yy_base */
	T0* a138; /* yy_def */
	T0* a140; /* yy_ec */
	T0* a142; /* yy_meta */
	T0* a144; /* yy_accept */
	T0* a146; /* yy_acclist */
	T0* a148; /* yy_content */
	T0* a149; /* yy_content_area */
	T6 a150; /* yyvsp1 */
	T6 a151; /* yyvsp2 */
	T6 a152; /* yyvsp3 */
	T6 a153; /* yyvsp4 */
	T6 a154; /* yyvsp5 */
	T6 a155; /* yyvsp6 */
	T6 a156; /* yyvsp7 */
	T6 a157; /* yyvsp8 */
	T6 a158; /* yyvsp9 */
	T6 a159; /* yyvsp10 */
	T6 a160; /* yyvsp11 */
	T6 a161; /* yyvsp12 */
	T6 a162; /* yyvsp13 */
	T6 a163; /* yyvsp14 */
	T6 a164; /* yyvsp15 */
	T6 a165; /* yyvsp16 */
	T6 a166; /* yyvsp17 */
	T6 a167; /* yyvsp18 */
	T6 a168; /* yyvsp19 */
	T6 a169; /* yyvsp20 */
	T6 a170; /* yyvsp21 */
	T6 a171; /* yyvsp22 */
	T6 a172; /* yyvsp23 */
	T6 a173; /* yyvsp24 */
	T6 a174; /* yyvsp25 */
	T6 a175; /* yyvsp26 */
	T6 a176; /* yyvsp27 */
	T6 a177; /* yyvsp28 */
	T6 a178; /* yyvsp29 */
	T6 a179; /* yyvsp30 */
	T6 a180; /* yyvsp31 */
	T6 a181; /* yyvsp32 */
	T6 a182; /* yyvsp33 */
	T6 a183; /* yyvsp34 */
	T6 a184; /* yyvsp35 */
	T6 a185; /* yyvsp36 */
	T6 a186; /* yyvsp37 */
	T6 a187; /* yyvsp38 */
	T6 a188; /* yyvsp39 */
	T6 a189; /* yyvsp40 */
	T6 a190; /* yyvsp41 */
	T6 a191; /* yyvsp42 */
	T6 a192; /* yyvsp43 */
	T6 a193; /* yyvsp44 */
	T6 a194; /* yyvsp45 */
	T6 a195; /* yyvsp46 */
	T6 a196; /* yyvsp47 */
	T6 a197; /* yyvsp48 */
	T6 a198; /* yyvsp49 */
	T6 a199; /* yyvsp50 */
	T6 a200; /* yyvsp51 */
	T6 a201; /* yyvsp52 */
	T6 a202; /* yyvsp53 */
	T6 a203; /* yyvsp54 */
	T6 a204; /* yyvsp55 */
	T6 a205; /* yyvsp56 */
	T6 a206; /* yyvsp57 */
	T6 a207; /* yyvsp58 */
	T6 a208; /* yyvsp59 */
	T6 a209; /* yyvsp60 */
	T6 a210; /* yyvsp61 */
	T6 a211; /* yyvsp62 */
	T6 a212; /* yyvsp63 */
	T6 a213; /* yyvsp64 */
	T6 a214; /* yyvsp65 */
	T6 a215; /* yyvsp66 */
	T6 a216; /* yyvsp67 */
	T6 a217; /* yyvsp68 */
	T6 a218; /* yyvsp69 */
	T6 a219; /* yyvsp70 */
	T6 a220; /* yyvsp71 */
	T6 a221; /* yyvsp72 */
	T6 a222; /* yyvsp73 */
	T6 a223; /* yyvsp74 */
	T6 a224; /* yyvsp75 */
	T6 a225; /* yyvsp76 */
	T6 a226; /* yyvsp77 */
	T6 a227; /* yyvsp78 */
	T6 a228; /* yyvsp79 */
	T6 a229; /* yyvsp80 */
	T6 a230; /* yyvsp81 */
	T6 a231; /* yyvsp82 */
	T6 a232; /* yyvsp83 */
	T6 a233; /* yyvsp84 */
	T6 a234; /* yyvsp85 */
	T6 a235; /* yyvsp86 */
	T6 a236; /* yyvsp87 */
	T6 a237; /* yyvsp88 */
	T6 a238; /* yyvsp89 */
	T6 a239; /* yyvsp90 */
	T6 a240; /* yyvsp91 */
	T6 a241; /* yyvsp92 */
	T6 a242; /* yyvsp93 */
	T6 a243; /* yyvsp94 */
	T6 a244; /* yyvsp95 */
	T6 a245; /* yyvsp96 */
	T6 a246; /* yyvsp97 */
	T6 a247; /* yyvsp98 */
	T6 a248; /* yyvsp99 */
	T6 a249; /* yyvsp100 */
	T6 a250; /* yyvsp101 */
	T6 a251; /* yyvsp102 */
	T6 a252; /* yyvsp103 */
	T6 a253; /* yyvsp104 */
	T6 a254; /* yyvsp105 */
	T6 a255; /* yyvsp106 */
	T6 a256; /* yyvsp107 */
	T6 a257; /* yyvsp108 */
	T6 a258; /* yyvsp109 */
	T6 a259; /* yyvsp110 */
	T6 a260; /* yyvsp111 */
	T6 a261; /* yyvsp112 */
	T6 a262; /* yyvsp113 */
	T6 a263; /* yyvsp114 */
	T6 a264; /* yyvsp115 */
	T6 a265; /* yyvsp116 */
	T6 a284; /* yyvsc1 */
	T0* a285; /* yyvs1 */
	T0* a286; /* yyspecial_routines1 */
	T0* a288; /* last_any_value */
	T6 a289; /* yyvsc2 */
	T0* a290; /* yyvs2 */
	T0* a291; /* yyspecial_routines2 */
	T0* a292; /* last_et_keyword_value */
	T6 a293; /* yyvsc3 */
	T0* a294; /* yyvs3 */
	T0* a295; /* yyspecial_routines3 */
	T0* a296; /* last_et_agent_keyword_value */
	T6 a297; /* yyvsc4 */
	T0* a298; /* yyvs4 */
	T0* a299; /* yyspecial_routines4 */
	T0* a300; /* last_et_precursor_keyword_value */
	T6 a301; /* yyvsc5 */
	T0* a302; /* yyvs5 */
	T0* a303; /* yyspecial_routines5 */
	T0* a304; /* last_et_symbol_value */
	T6 a305; /* yyvsc6 */
	T0* a306; /* yyvs6 */
	T0* a307; /* yyspecial_routines6 */
	T0* a308; /* last_et_position_value */
	T6 a309; /* yyvsc7 */
	T0* a310; /* yyvs7 */
	T0* a311; /* yyspecial_routines7 */
	T0* a312; /* last_et_bit_constant_value */
	T6 a313; /* yyvsc8 */
	T0* a314; /* yyvs8 */
	T0* a315; /* yyspecial_routines8 */
	T0* a316; /* last_et_boolean_constant_value */
	T6 a317; /* yyvsc9 */
	T0* a318; /* yyvs9 */
	T0* a319; /* yyspecial_routines9 */
	T0* a320; /* last_et_break_value */
	T6 a321; /* yyvsc10 */
	T0* a322; /* yyvs10 */
	T0* a323; /* yyspecial_routines10 */
	T0* a324; /* last_et_character_constant_value */
	T6 a325; /* yyvsc11 */
	T0* a326; /* yyvs11 */
	T0* a327; /* yyspecial_routines11 */
	T0* a328; /* last_et_current_value */
	T6 a329; /* yyvsc12 */
	T0* a330; /* yyvs12 */
	T0* a331; /* yyspecial_routines12 */
	T0* a332; /* last_et_free_operator_value */
	T6 a333; /* yyvsc13 */
	T0* a334; /* yyvs13 */
	T0* a335; /* yyspecial_routines13 */
	T0* a336; /* last_et_identifier_value */
	T6 a337; /* yyvsc14 */
	T0* a338; /* yyvs14 */
	T0* a339; /* yyspecial_routines14 */
	T0* a340; /* last_et_integer_constant_value */
	T6 a341; /* yyvsc15 */
	T0* a342; /* yyvs15 */
	T0* a343; /* yyspecial_routines15 */
	T0* a344; /* last_et_keyword_operator_value */
	T6 a345; /* yyvsc16 */
	T0* a346; /* yyvs16 */
	T0* a347; /* yyspecial_routines16 */
	T0* a348; /* last_et_manifest_string_value */
	T6 a349; /* yyvsc17 */
	T0* a350; /* yyvs17 */
	T0* a351; /* yyspecial_routines17 */
	T0* a352; /* last_et_real_constant_value */
	T6 a353; /* yyvsc18 */
	T0* a354; /* yyvs18 */
	T0* a355; /* yyspecial_routines18 */
	T0* a356; /* last_et_result_value */
	T6 a357; /* yyvsc19 */
	T0* a358; /* yyvs19 */
	T0* a359; /* yyspecial_routines19 */
	T0* a360; /* last_et_retry_instruction_value */
	T6 a361; /* yyvsc20 */
	T0* a362; /* yyvs20 */
	T0* a363; /* yyspecial_routines20 */
	T0* a364; /* last_et_symbol_operator_value */
	T6 a365; /* yyvsc21 */
	T0* a366; /* yyvs21 */
	T0* a367; /* yyspecial_routines21 */
	T0* a368; /* last_et_void_value */
	T6 a369; /* yyvsc22 */
	T0* a370; /* yyvs22 */
	T0* a371; /* yyspecial_routines22 */
	T0* a372; /* last_et_semicolon_symbol_value */
	T6 a373; /* yyvsc23 */
	T0* a374; /* yyvs23 */
	T0* a375; /* yyspecial_routines23 */
	T0* a376; /* last_et_bracket_symbol_value */
	T6 a377; /* yyvsc24 */
	T0* a378; /* yyvs24 */
	T0* a379; /* yyspecial_routines24 */
	T0* a380; /* last_et_question_mark_symbol_value */
	T6 a382; /* last_break_end */
	T6 a383; /* last_comment_end */
	T6 a385; /* ms_column */
	T6 a386; /* ms_line */
	T6 a391; /* break_kind */
	T0* a552; /* yyvs42 */
	T0* a553; /* yyvs78 */
	T0* a554; /* yyvs97 */
	T0* a555; /* yyvs101 */
	T0* a556; /* yyvs56 */
	T0* a557; /* yyvs53 */
	T0* a558; /* yyvs67 */
	T0* a559; /* yyvs86 */
	T6 a560; /* yyvsc78 */
	T0* a561; /* yyspecial_routines78 */
	T0* a562; /* yyvs79 */
	T0* a565; /* yyvs82 */
	T6 a566; /* yyvsc79 */
	T0* a567; /* yyspecial_routines79 */
	T0* a568; /* yyvs80 */
	T6 a569; /* yyvsc82 */
	T0* a570; /* yyspecial_routines82 */
	T0* a571; /* yyvs81 */
	T6 a572; /* yyvsc80 */
	T0* a573; /* yyspecial_routines80 */
	T0* a574; /* yyvs54 */
	T0* a575; /* yyvs96 */
	T6 a576; /* yyvsc81 */
	T0* a577; /* yyspecial_routines81 */
	T6 a579; /* yyvsc42 */
	T0* a580; /* yyspecial_routines42 */
	T6 a581; /* yyvsc76 */
	T0* a582; /* yyvs76 */
	T0* a583; /* yyspecial_routines76 */
	T0* a584; /* yyvs74 */
	T0* a586; /* yyvs75 */
	T6 a587; /* yyvsc75 */
	T0* a588; /* yyspecial_routines75 */
	T6 a589; /* yyvsc74 */
	T0* a590; /* yyspecial_routines74 */
	T0* a591; /* yyvs50 */
	T0* a593; /* yyvs49 */
	T6 a594; /* yyvsc49 */
	T0* a595; /* yyspecial_routines49 */
	T0* a596; /* yyvs70 */
	T0* a597; /* yyvs48 */
	T6 a599; /* yyvsc50 */
	T0* a600; /* yyspecial_routines50 */
	T0* a601; /* yyvs88 */
	T6 a603; /* yyvsc48 */
	T0* a604; /* yyspecial_routines48 */
	T0* a605; /* yyvs47 */
	T6 a606; /* yyvsc47 */
	T0* a607; /* yyspecial_routines47 */
	T6 a608; /* yyvsc97 */
	T0* a609; /* yyspecial_routines97 */
	T6 a610; /* yyvsc101 */
	T0* a611; /* yyspecial_routines101 */
	T0* a612; /* yyvs27 */
	T6 a614; /* yyvsc99 */
	T0* a615; /* yyvs99 */
	T0* a616; /* yyspecial_routines99 */
	T0* a617; /* yyvs107 */
	T0* a618; /* yyvs61 */
	T0* a619; /* yyvs87 */
	T0* a620; /* yyvs100 */
	T6 a621; /* yyvsc100 */
	T0* a622; /* yyspecial_routines100 */
	T6 a623; /* yyvsc107 */
	T0* a624; /* yyspecial_routines107 */
	T0* a625; /* yyvs106 */
	T0* a626; /* yyvs69 */
	T0* a627; /* yyvs64 */
	T6 a628; /* yyvsc106 */
	T0* a629; /* yyspecial_routines106 */
	T6 a630; /* yyvsc61 */
	T0* a631; /* yyspecial_routines61 */
	T0* a632; /* yyvs60 */
	T0* a633; /* yyvs44 */
	T6 a634; /* yyvsc60 */
	T0* a635; /* yyspecial_routines60 */
	T0* a636; /* yyvs68 */
	T6 a637; /* yyvsc68 */
	T0* a638; /* yyspecial_routines68 */
	T6 a639; /* yyvsc44 */
	T0* a640; /* yyspecial_routines44 */
	T0* a641; /* yyvs43 */
	T6 a642; /* yyvsc43 */
	T0* a643; /* yyspecial_routines43 */
	T6 a644; /* yyvsc87 */
	T0* a645; /* yyspecial_routines87 */
	T6 a646; /* yyvsc70 */
	T0* a647; /* yyspecial_routines70 */
	T6 a648; /* yyvsc56 */
	T0* a649; /* yyspecial_routines56 */
	T0* a650; /* yyvs55 */
	T6 a651; /* yyvsc55 */
	T0* a652; /* yyspecial_routines55 */
	T6 a653; /* yyvsc53 */
	T0* a654; /* yyspecial_routines53 */
	T0* a655; /* yyvs51 */
	T0* a656; /* yyvs52 */
	T6 a657; /* yyvsc52 */
	T0* a658; /* yyspecial_routines52 */
	T0* a659; /* yyvs112 */
	T6 a660; /* yyvsc51 */
	T0* a661; /* yyspecial_routines51 */
	T6 a662; /* yyvsc112 */
	T0* a663; /* yyspecial_routines112 */
	T0* a664; /* yyvs110 */
	T0* a665; /* yyvs111 */
	T6 a666; /* yyvsc111 */
	T0* a667; /* yyspecial_routines111 */
	T6 a668; /* yyvsc67 */
	T0* a669; /* yyspecial_routines67 */
	T0* a670; /* yyvs66 */
	T6 a671; /* yyvsc66 */
	T0* a672; /* yyspecial_routines66 */
	T0* a673; /* yyvs105 */
	T0* a675; /* yyvs104 */
	T0* a677; /* yyvs33 */
	T6 a678; /* yyvsc105 */
	T0* a679; /* yyspecial_routines105 */
	T0* a680; /* yyvs46 */
	T0* a682; /* yyvs103 */
	T0* a683; /* yyvs91 */
	T0* a684; /* yyvs45 */
	T0* a685; /* yyvs102 */
	T0* a686; /* yyvs73 */
	T0* a687; /* yyvs65 */
	T6 a689; /* yyvsc104 */
	T0* a690; /* yyspecial_routines104 */
	T6 a692; /* yyvsc65 */
	T0* a693; /* yyspecial_routines65 */
	T6 a694; /* yyvsc33 */
	T0* a695; /* yyspecial_routines33 */
	T6 a696; /* yyvsc69 */
	T0* a697; /* yyspecial_routines69 */
	T6 a700; /* yyvsc64 */
	T0* a701; /* yyspecial_routines64 */
	T0* a702; /* yyvs32 */
	T6 a703; /* yyvsc32 */
	T0* a704; /* yyspecial_routines32 */
	T6 a707; /* yyvsc73 */
	T0* a708; /* yyspecial_routines73 */
	T0* a709; /* yyvs72 */
	T0* a710; /* yyvs71 */
	T6 a712; /* yyvsc71 */
	T0* a713; /* yyspecial_routines71 */
	T6 a714; /* yyvsc72 */
	T0* a715; /* yyspecial_routines72 */
	T6 a716; /* yyvsc91 */
	T0* a717; /* yyspecial_routines91 */
	T0* a719; /* yyvs90 */
	T0* a720; /* yyvs89 */
	T6 a721; /* yyvsc89 */
	T0* a722; /* yyspecial_routines89 */
	T6 a723; /* yyvsc90 */
	T0* a724; /* yyspecial_routines90 */
	T0* a725; /* yyvs62 */
	T6 a726; /* yyvsc103 */
	T0* a727; /* yyspecial_routines103 */
	T6 a729; /* yyvsc102 */
	T0* a730; /* yyspecial_routines102 */
	T6 a732; /* yyvsc86 */
	T0* a733; /* yyspecial_routines86 */
	T6 a735; /* yyvsc92 */
	T0* a736; /* yyvs92 */
	T0* a737; /* yyspecial_routines92 */
	T6 a739; /* yyvsc113 */
	T0* a740; /* yyvs113 */
	T0* a741; /* yyspecial_routines113 */
	T6 a742; /* yyvsc45 */
	T0* a743; /* yyspecial_routines45 */
	T6 a745; /* yyvsc110 */
	T0* a746; /* yyspecial_routines110 */
	T6 a747; /* yyvsc27 */
	T0* a748; /* yyspecial_routines27 */
	T0* a749; /* yyvs26 */
	T6 a750; /* yyvsc26 */
	T0* a751; /* yyspecial_routines26 */
	T6 a752; /* yyvsc88 */
	T0* a753; /* yyspecial_routines88 */
	T0* a754; /* yyvs85 */
	T0* a755; /* yyvs37 */
	T6 a756; /* yyvsc85 */
	T0* a757; /* yyspecial_routines85 */
	T0* a758; /* yyvs35 */
	T0* a759; /* yyvs116 */
	T0* a760; /* yyvs77 */
	T0* a761; /* yyvs84 */
	T0* a762; /* yyvs57 */
	T0* a764; /* yyvs25 */
	T6 a765; /* yyvsc54 */
	T0* a766; /* yyspecial_routines54 */
	T6 a767; /* yyvsc77 */
	T0* a768; /* yyspecial_routines77 */
	T0* a769; /* yyvs59 */
	T0* a770; /* yyvs58 */
	T6 a771; /* yyvsc59 */
	T0* a772; /* yyspecial_routines59 */
	T6 a773; /* yyvsc58 */
	T0* a774; /* yyspecial_routines58 */
	T0* a775; /* yyvs115 */
	T6 a776; /* yyvsc84 */
	T0* a777; /* yyspecial_routines84 */
	T6 a778; /* yyvsc115 */
	T0* a779; /* yyspecial_routines115 */
	T0* a780; /* yyvs114 */
	T0* a781; /* yyvs41 */
	T6 a782; /* yyvsc114 */
	T0* a783; /* yyspecial_routines114 */
	T6 a784; /* yyvsc41 */
	T0* a785; /* yyspecial_routines41 */
	T0* a786; /* yyvs38 */
	T0* a787; /* yyvs40 */
	T6 a788; /* yyvsc40 */
	T0* a789; /* yyspecial_routines40 */
	T0* a790; /* yyvs39 */
	T6 a791; /* yyvsc38 */
	T0* a792; /* yyspecial_routines38 */
	T6 a793; /* yyvsc39 */
	T0* a794; /* yyspecial_routines39 */
	T0* a795; /* yyvs108 */
	T0* a796; /* yyvs95 */
	T6 a797; /* yyvsc57 */
	T0* a798; /* yyspecial_routines57 */
	T6 a799; /* yyvsc95 */
	T0* a800; /* yyspecial_routines95 */
	T0* a801; /* yyvs94 */
	T6 a802; /* yyvsc94 */
	T0* a803; /* yyspecial_routines94 */
	T6 a806; /* yyvsc62 */
	T0* a807; /* yyspecial_routines62 */
	T6 a808; /* yyvsc37 */
	T0* a809; /* yyspecial_routines37 */
	T6 a810; /* yyvsc108 */
	T0* a811; /* yyspecial_routines108 */
	T0* a812; /* yyvs98 */
	T6 a813; /* yyvsc25 */
	T0* a814; /* yyspecial_routines25 */
	T0* a815; /* yyvs63 */
	T6 a816; /* yyvsc63 */
	T0* a817; /* yyspecial_routines63 */
	T6 a819; /* yyvsc116 */
	T0* a820; /* yyspecial_routines116 */
	T0* a823; /* yyvs36 */
	T0* a824; /* yyvs83 */
	T0* a825; /* yyvs93 */
	T0* a826; /* yyvs109 */
	T0* a827; /* yyvs34 */
	T6 a828; /* yyvsc35 */
	T0* a829; /* yyspecial_routines35 */
	T6 a830; /* yyvsc34 */
	T0* a831; /* yyspecial_routines34 */
	T6 a832; /* yyvsc98 */
	T0* a833; /* yyspecial_routines98 */
	T6 a834; /* yyvsc93 */
	T0* a835; /* yyspecial_routines93 */
	T6 a836; /* yyvsc96 */
	T0* a837; /* yyspecial_routines96 */
	T6 a838; /* yyvsc109 */
	T0* a839; /* yyspecial_routines109 */
	T6 a840; /* yyvsc46 */
	T0* a841; /* yyspecial_routines46 */
	T0* a842; /* yyvs30 */
	T6 a843; /* yyvsc36 */
	T0* a844; /* yyspecial_routines36 */
	T0* a845; /* yyvs31 */
	T6 a847; /* yyvsc83 */
	T0* a848; /* yyspecial_routines83 */
	T6 a849; /* yyvsc31 */
	T0* a850; /* yyspecial_routines31 */
	T6 a851; /* yyvsc30 */
	T0* a852; /* yyspecial_routines30 */
	T0* a853; /* yyvs28 */
	T0* a854; /* yyvs29 */
	T6 a855; /* yyvsc29 */
	T0* a856; /* yyspecial_routines29 */
	T6 a857; /* yyvsc28 */
	T0* a858; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S159 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S160 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S161 {
	int id;
	T0* a3; /* eiffel_class */
	T0* a4; /* actual_parameters */
	T0* a7; /* type_mark */
	T0* a8; /* name */
	T0* a9; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S163 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* declared_type */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_feature */
	T6 a13; /* builtin_code */
	T0* a14; /* is_keyword */
	T0* a15; /* assigner */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* alias_clause */
	T0* a20; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a33; /* semicolon */
	T0* a34; /* feature_clause */
	T0* a35; /* other_seeds */
	T6 a36; /* id */
	T6 a37; /* version */
	T0* a38; /* frozen_keyword */
	T0* a39; /* first_precursor */
	T0* a40; /* other_precursors */
	T0* a41; /* synonym */
	T1 a42; /* assertions_checked */
	T1 a43; /* has_assertions_error */
};

/* Struct for type ET_KEYWORD */
struct S166 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S168 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S169 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a5; /* universe */
	T1 a7; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S170 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S171 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S172 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S173 {
	int id;
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S174 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S175 {
	int id;
	T6 a1; /* capacity */
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER] */
struct S176 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
struct S177 {
	int id;
	T6 a5; /* position */
	T0* a7; /* internal_cursor */
	T0* a12; /* item_storage */
	T6 a13; /* last_position */
	T6 a14; /* capacity */
	T6 a17; /* slots_position */
	T6 a19; /* count */
	T6 a20; /* free_slot */
	T6 a21; /* modulus */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a26; /* equality_tester */
	T0* a27; /* internal_keys */
	T6 a28; /* found_position */
	T0* a31; /* clashes */
	T0* a32; /* slots */
	T0* a33; /* key_storage */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S178 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S180 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S182 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a9; /* index */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S183 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a6; /* left_symbol */
	T0* a8; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S184 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S186 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S187 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S188 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S189 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a11; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a19; /* special_item_routines */
	T0* a20; /* item_storage */
	T0* a21; /* clashes */
	T0* a23; /* slots */
	T6 a24; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S190 {
	int id;
	T0* a4; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* item_storage */
	T6 a13; /* count */
	T6 a14; /* last_position */
	T6 a15; /* free_slot */
	T6 a17; /* position */
	T6 a18; /* capacity */
	T6 a21; /* slots_position */
	T0* a23; /* equality_tester */
	T0* a24; /* key_equality_tester */
	T0* a25; /* internal_keys */
	T6 a26; /* found_position */
	T0* a27; /* clashes */
	T6 a28; /* modulus */
	T0* a29; /* slots */
	T6 a35; /* clashes_previous_position */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S191 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING] */
struct S192 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T0* a17; /* equality_tester */
	T6 a18; /* count */
	T6 a21; /* slots_position */
	T0* a25; /* special_item_routines */
	T0* a26; /* clashes */
	T0* a28; /* slots */
	T6 a29; /* found_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S193 {
	int id;
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING] */
struct S194 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T6 a19; /* count */
	T6 a20; /* last_position */
	T6 a21; /* free_slot */
	T6 a22; /* capacity */
	T6 a25; /* slots_position */
	T6 a29; /* modulus */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* equality_tester */
	T6 a36; /* found_position */
	T0* a37; /* clashes */
	T0* a38; /* slots */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S195 {
	int id;
	T0* a3; /* subject */
	T6 a4; /* subject_end */
	T6 a5; /* subject_start */
	T0* a6; /* offset_vector */
	T6 a8; /* offset_vector_count */
	T6 a9; /* brastart_capacity */
	T0* a10; /* brastart_vector */
	T6 a11; /* brastart_lower */
	T6 a12; /* brastart_count */
	T6 a13; /* eptr_capacity */
	T0* a14; /* eptr_vector */
	T6 a15; /* eptr_lower */
	T6 a16; /* eptr_upper */
	T0* a17; /* byte_code */
	T0* a18; /* pattern */
	T6 a22; /* subexpression_count */
	T6 a23; /* pattern_count */
	T6 a24; /* pattern_position */
	T6 a25; /* code_index */
	T6 a26; /* maxbackrefs */
	T6 a27; /* optchanged */
	T6 a29; /* first_character */
	T6 a30; /* required_character */
	T6 a31; /* regexp_countlits */
	T0* a32; /* start_bits */
	T0* a35; /* error_message */
	T1 a41; /* is_anchored */
	T0* a48; /* character_case_mapping */
	T0* a49; /* word_set */
	T6 a50; /* subject_next_start */
	T6 a51; /* match_count */
	T6 a53; /* error_code */
	T6 a54; /* error_position */
	T1 a65; /* is_startline */
	T1 a68; /* is_caseless */
	T1 a69; /* is_multiline */
	T1 a70; /* is_dotall */
	T1 a71; /* is_extended */
	T1 a72; /* is_empty_allowed */
	T1 a73; /* is_dollar_endonly */
	T1 a74; /* is_bol */
	T1 a75; /* is_eol */
	T1 a76; /* is_greedy */
	T1 a77; /* is_strict */
	T1 a78; /* is_ichanged */
	T6 a144; /* first_matched_index */
	T6 a223; /* eptr */
	T6 a224; /* offset_top */
	T1 a225; /* is_matching_caseless */
	T1 a226; /* is_matching_multiline */
	T1 a227; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S196 {
	int id;
	T6 a3; /* mode */
	T0* a8; /* name */
	T0* a11; /* string_name */
	T14 a15; /* file_pointer */
	T1 a17; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S197 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* item_type_sets */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S198 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S199 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S200 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S201 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S202 {
	int id;
	T1 a1; /* is_generated */
	T0* a3; /* target_type */
	T0* a4; /* static_feature */
	T0* a6; /* current_feature */
	T6 a7; /* id */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T0* a12; /* result_type_set */
	T0* a14; /* dynamic_type_sets */
	T6 a18; /* builtin_code */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* is_built */
	T0* a23; /* parent_type */
	T1 a49; /* is_current_type_needed */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S203 {
	int id;
	T0* a2; /* sorted_items */
	T0* a3; /* cycle */
	T0* a6; /* items */
	T0* a7; /* indexes */
	T0* a8; /* counts */
	T0* a9; /* successors */
};

/* Struct for type ET_RESULT */
struct S204 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a5; /* index */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S205 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
	T0* a8; /* result_type_set */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S207 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S212 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type DS_QUICK_SORTER [INTEGER] */
struct S213 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S215 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S217 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* item_type_set */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type ARRAY [STRING] */
struct S220 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S221 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* result_type_set */
	T0* a23; /* open_operand_type_sets */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a28; /* query_calls */
	T0* a29; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S222 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* open_operand_type_sets */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S223 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* other_types */
	T0* a4; /* internal_other_types */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S224 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* constant */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_indexing */
	T0* a28; /* other_seeds */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S226 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* unique_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T6 a15; /* id */
	T1 a24; /* implementation_checked */
	T1 a25; /* has_implementation_error */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* first_indexing */
	T0* a29; /* other_seeds */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_ATTRIBUTE */
struct S227 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a11; /* first_seed */
	T1 a21; /* implementation_checked */
	T1 a22; /* has_implementation_error */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* other_seeds */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* frozen_keyword */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* synonym */
	T1 a33; /* assertions_checked */
	T1 a36; /* has_assertions_error */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S235 {
	int id;
};

/* Struct for type DS_CELL [INTEGER] */
struct S236 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S238 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S239 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S240 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S241 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S242 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S243 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
	T0* a9; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S244 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S245 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S247 {
	int id;
	T0* a2; /* buffered_file_info */
	T0* a5; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S249 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S250 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S251 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_CLUSTER */
struct S254 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a17; /* is_override */
	T0* a25; /* parent */
	T1 a36; /* is_implicit */
	T0* a38; /* provider_constraint */
	T0* a39; /* dependant_constraint */
	T1 a40; /* is_mounted */
};

/* Struct for type ET_XACE_OPTIONS */
struct S255 {
	int id;
	T0* a22; /* declared_c_compiler_options */
	T0* a25; /* declared_header */
	T0* a28; /* declared_link */
	T0* a30; /* declared_abstract */
	T0* a32; /* declared_recursive */
	T0* a34; /* declared_read_only */
	T6 a36; /* declared_fst_expansion_factor */
	T6 a37; /* declared_heap_size */
	T6 a38; /* declared_inlining_size */
	T6 a39; /* declared_stack_size */
	T0* a40; /* declared_address_expression */
	T0* a41; /* declared_arguments */
	T0* a42; /* declared_array_optimization */
	T0* a43; /* declared_assembly */
	T0* a44; /* declared_assertion */
	T0* a45; /* declared_callback */
	T0* a46; /* declared_case_insensitive */
	T0* a47; /* declared_check_vape */
	T0* a48; /* declared_clean */
	T0* a49; /* declared_cls_compliant */
	T0* a50; /* declared_component */
	T0* a51; /* declared_console_application */
	T0* a52; /* declared_create_keyword_extension */
	T0* a53; /* declared_culture */
	T0* a54; /* declared_dead_code_removal */
	T0* a55; /* declared_debug_option */
	T0* a56; /* declared_debug_tag */
	T0* a57; /* declared_debugger */
	T0* a58; /* declared_document */
	T0* a59; /* declared_dotnet_naming_convention */
	T0* a60; /* declared_dynamic_runtime */
	T0* a61; /* declared_exception_trace */
	T0* a62; /* declared_exclude */
	T0* a63; /* declared_export_option */
	T0* a64; /* declared_finalize_option */
	T0* a65; /* declared_flat_fst_optimization */
	T0* a66; /* declared_fst_optimization */
	T0* a67; /* declared_garbage_collector */
	T0* a68; /* declared_gc_info */
	T0* a69; /* declared_high_memory_compiler */
	T0* a70; /* declared_il_verifiable */
	T0* a71; /* declared_include */
	T0* a72; /* declared_inlining */
	T0* a73; /* declared_jumps_optimization */
	T0* a74; /* declared_layout */
	T0* a75; /* declared_layout_optimization */
	T0* a76; /* declared_leaves_optimization */
	T0* a77; /* declared_line_generation */
	T0* a78; /* declared_linker */
	T0* a79; /* declared_linux_fpu_double_precision */
	T0* a80; /* declared_manifest_string_trace */
	T0* a81; /* declared_map */
	T0* a82; /* declared_metadata_cache_path */
	T0* a83; /* declared_msil_assembly_compatibility */
	T0* a84; /* declared_msil_clr_version */
	T0* a85; /* declared_msil_generation */
	T0* a86; /* declared_msil_generation_version */
	T0* a87; /* declared_multithreaded */
	T0* a88; /* declared_namespace */
	T0* a89; /* declared_no_default_lib */
	T0* a90; /* declared_override_cluster */
	T0* a91; /* declared_portable_code_generation */
	T0* a92; /* declared_precompiled */
	T0* a93; /* declared_prefix_option */
	T0* a94; /* declared_profile */
	T0* a95; /* declared_public_key_token */
	T0* a96; /* declared_reloads_optimization */
	T0* a97; /* declared_shared_library_definition */
	T0* a98; /* declared_split */
	T0* a99; /* declared_storable_filename */
	T0* a100; /* declared_strip_option */
	T0* a101; /* declared_target */
	T0* a102; /* declared_trace */
	T0* a103; /* declared_use_cluster_name_as_namespace */
	T0* a104; /* declared_use_full_cluster_name_as_namespace */
	T0* a105; /* declared_verbose */
	T0* a106; /* declared_version */
	T0* a107; /* declared_visible_filename */
	T0* a108; /* declared_warning */
	T0* a109; /* declared_wedit */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S256 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library */
	T0* a3; /* position */
	T0* a4; /* library_prefix */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S257 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S258 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S259 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S260 {
	int id;
	T1 a1; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
	T0* a7; /* container */
	T1 a8; /* before */
};

/* Struct for type ET_XACE_LIBRARY */
struct S262 {
	int id;
	T0* a1; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* options */
	T0* a5; /* clusters */
	T0* a6; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER, STRING] */
struct S263 {
	int id;
	T6 a4; /* found_position */
	T0* a8; /* item_storage */
	T0* a9; /* key_storage */
	T6 a10; /* position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T6 a19; /* count */
	T6 a20; /* capacity */
	T0* a22; /* equality_tester */
	T6 a23; /* modulus */
	T6 a24; /* slots_position */
	T6 a25; /* clashes_previous_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a30; /* internal_cursor */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S266 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S267 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S268 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S269 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S270 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S271 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S272 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S274 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S275 {
	int id;
	T0* a1; /* named_features */
	T0* a3; /* queries */
	T0* a4; /* procedures */
	T0* a5; /* aliased_features */
	T0* a7; /* clients_list */
	T0* a8; /* client_names */
	T0* a10; /* feature_adaptation_resolver */
	T0* a11; /* dotnet_feature_adaptation_resolver */
	T0* a12; /* identifier_type_resolver */
	T0* a13; /* anchored_type_checker */
	T0* a14; /* signature_checker */
	T0* a15; /* parent_checker */
	T0* a16; /* formal_parameter_checker */
	T0* a17; /* precursor_checker */
	T0* a18; /* universe */
	T0* a19; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S276 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S277 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* supplier_builder */
	T0* a3; /* current_class */
	T0* a4; /* no_suppliers */
	T1 a5; /* flat_mode */
	T1 a6; /* flat_dbc_mode */
	T1 a7; /* suppliers_enabled */
	T0* a8; /* universe */
	T1 a12; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S278 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S279 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S283 {
	int id;
	T6 a3; /* year */
	T6 a4; /* month */
	T6 a5; /* day */
	T6 a6; /* hour */
	T6 a7; /* minute */
	T6 a8; /* second */
	T6 a9; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S284 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a10; /* last_text_count */
	T6 a11; /* last_literal_start */
	T0* a12; /* filename */
	T0* a13; /* universe */
	T0* a14; /* ast_factory */
	T0* a15; /* error_handler */
	T0* a21; /* input_buffer */
	T0* a23; /* last_classname */
	T6 a25; /* yy_start_state */
	T6 a26; /* yy_line */
	T6 a27; /* yy_column */
	T6 a28; /* yy_position */
	T6 a29; /* line */
	T6 a30; /* column */
	T6 a31; /* position */
	T0* a33; /* yy_state_stack */
	T6 a35; /* yy_end */
	T6 a36; /* yy_start */
	T6 a37; /* last_token */
	T1 a44; /* yy_more_flag */
	T6 a45; /* yy_more_len */
	T6 a46; /* yy_state_count */
	T0* a47; /* yy_ec */
	T0* a48; /* yy_content_area */
	T0* a49; /* yy_content */
	T0* a50; /* yy_accept */
	T6 a51; /* yy_last_accepting_state */
	T6 a52; /* yy_last_accepting_cpos */
	T0* a53; /* yy_chk */
	T0* a54; /* yy_base */
	T0* a55; /* yy_def */
	T0* a56; /* yy_meta */
	T0* a58; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a64; /* yy_looking_for_trail_begin */
	T6 a66; /* yy_full_match */
	T6 a67; /* yy_full_state */
	T6 a68; /* yy_full_lp */
	T1 a74; /* yy_rejected */
	T1 a75; /* class_keyword_found */
	T6 a76; /* last_literal_end */
	T0* a77; /* verbatim_marker */
	T0* a78; /* verbatim_open_white_characters */
	T0* a79; /* verbatim_close_white_characters */
	T6 a88; /* ms_column */
	T6 a89; /* ms_line */
	T6 a93; /* last_break_end */
	T6 a94; /* last_comment_end */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING] */
struct S285 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING] */
struct S286 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a6; /* container */
};

/* Struct for type ET_NONE_GROUP */
struct S287 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_PARENT */
struct S288 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a9; /* end_keyword */
};

/* Struct for type ET_TUPLE_TYPE */
struct S289 {
	int id;
	T0* a1; /* tuple_keyword */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_RENAME_LIST */
struct S290 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S291 {
	int id;
	T0* a1; /* export_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S292 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S293 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S295 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ARRAY [INTEGER] */
struct S296 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S297 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_PROCEDURE */
struct S298 {
	int id;
	T0* a5; /* arguments */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_class */
	T0* a13; /* implementation_feature */
	T0* a14; /* is_keyword */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* locals */
	T0* a18; /* compound */
	T0* a19; /* postconditions */
	T0* a20; /* rescue_clause */
	T0* a21; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER] */
struct S300 {
	int id;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S303 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a6; /* arguments */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a11; /* hash_code */
	T0* a12; /* end_keyword */
	T0* a13; /* clients */
	T0* a14; /* implementation_class */
	T0* a15; /* is_keyword */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a26; /* implementation_checked */
	T1 a27; /* has_implementation_error */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* semicolon */
	T0* a33; /* feature_clause */
	T0* a34; /* other_seeds */
	T0* a35; /* frozen_keyword */
	T6 a36; /* id */
	T6 a37; /* version */
	T1 a38; /* has_assertions_error */
	T1 a39; /* assertions_checked */
	T0* a40; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S304 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a7; /* other_types */
	T0* a8; /* targets */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S305 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S307 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S308 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S309 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S310 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S311 {
	int id;
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S312 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a5; /* element_local_part */
	T1 a9; /* forward_xmlns */
	T0* a11; /* attributes_prefix */
	T0* a13; /* attributes_local_part */
	T0* a14; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S313 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S314 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S315 {
	int id;
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S316 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
struct S319 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S321 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY] */
struct S322 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
struct S323 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S324 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a14; /* character_entity */
	T0* a16; /* input_stream */
	T0* a17; /* input_resolver */
	T1 a25; /* yy_more_flag */
	T6 a26; /* yy_more_len */
	T6 a27; /* yy_end */
	T6 a28; /* yy_start */
	T6 a29; /* yy_line */
	T6 a30; /* yy_column */
	T6 a31; /* yy_position */
	T0* a32; /* input_buffer */
	T0* a34; /* yy_state_stack */
	T6 a35; /* yy_state_count */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_content_area */
	T0* a38; /* yy_content */
	T0* a39; /* yy_accept */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T0* a42; /* yy_chk */
	T0* a43; /* yy_base */
	T0* a44; /* yy_def */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_nxt */
	T6 a49; /* yy_lp */
	T0* a50; /* yy_acclist */
	T6 a53; /* yy_looking_for_trail_begin */
	T6 a55; /* yy_full_match */
	T6 a56; /* yy_full_state */
	T6 a57; /* yy_full_lp */
	T1 a63; /* yy_rejected */
	T0* a65; /* last_error */
	T0* a66; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S325 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S327 {
	int id;
	T0* a2; /* first_cell */
	T0* a3; /* internal_cursor */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S328 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S329 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* capacity */
	T6 a14; /* slots_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* internal_keys */
	T6 a20; /* modulus */
	T6 a21; /* clashes_previous_position */
	T0* a23; /* internal_cursor */
	T6 a25; /* found_position */
	T0* a26; /* key_storage */
	T0* a27; /* clashes */
	T0* a28; /* slots */
	T0* a31; /* equality_tester */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S331 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S332 {
	int id;
	T1 a2; /* use_namespaces */
	T6 a3; /* count */
	T0* a4; /* first */
	T0* a5; /* second */
	T0* a6; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S333 {
	int id;
	T0* a1; /* version */
	T0* a3; /* encoding */
	T1 a5; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S334 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S335 {
	int id;
	T6 a2; /* position */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a14; /* modulus */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* internal_cursor */
	T6 a22; /* found_position */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a26; /* item_storage */
	T0* a27; /* special_item_routines */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S336 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S337 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S338 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING] */
struct S339 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S340 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S341 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S342 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S343 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S344 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S345 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S346 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S347 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S348 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S349 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S350 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S352 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S354 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S355 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S356 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S357 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
struct S358 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S359 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T0* a35; /* yy_nxt */
	T0* a37; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a41; /* yy_def */
	T0* a43; /* yy_ec */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_accept */
	T0* a49; /* yy_content */
	T0* a50; /* yy_content_area */
	T6 a57; /* last_token */
	T0* a58; /* last_value */
	T0* a64; /* input_filter */
	T0* a67; /* input_stream */
	T0* a68; /* input_resolver */
	T0* a88; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S360 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S362 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S363 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a15; /* character_entity */
	T0* a17; /* input_stream */
	T0* a18; /* input_resolver */
	T1 a20; /* decl_start_sent */
	T1 a22; /* decl_end_sent */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_end */
	T6 a33; /* yy_start */
	T6 a34; /* yy_line */
	T6 a35; /* yy_column */
	T6 a36; /* yy_position */
	T0* a37; /* input_buffer */
	T0* a39; /* yy_state_stack */
	T6 a40; /* yy_state_count */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_content_area */
	T0* a43; /* yy_content */
	T0* a44; /* yy_accept */
	T6 a45; /* yy_last_accepting_state */
	T6 a46; /* yy_last_accepting_cpos */
	T0* a47; /* yy_chk */
	T0* a48; /* yy_base */
	T0* a49; /* yy_def */
	T0* a50; /* yy_meta */
	T0* a52; /* yy_nxt */
	T6 a54; /* yy_lp */
	T0* a55; /* yy_acclist */
	T6 a58; /* yy_looking_for_trail_begin */
	T6 a60; /* yy_full_match */
	T6 a61; /* yy_full_state */
	T6 a62; /* yy_full_lp */
	T1 a68; /* yy_rejected */
	T0* a70; /* last_error */
	T0* a71; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S365 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a39; /* yy_chk */
	T0* a41; /* yy_base */
	T0* a43; /* yy_def */
	T0* a45; /* yy_ec */
	T0* a47; /* yy_meta */
	T0* a49; /* yy_accept */
	T0* a51; /* yy_content */
	T0* a52; /* yy_content_area */
	T6 a58; /* last_token */
	T0* a59; /* last_value */
	T0* a65; /* input_filter */
	T0* a69; /* input_stream */
	T0* a70; /* input_resolver */
	T0* a91; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
struct S366 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER] */
struct S367 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING] */
struct S368 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [STRING] */
struct S369 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER] */
struct S370 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S372 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S374 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S376 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S377 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S378 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S379 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S380 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S381 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S382 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S383 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S384 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S385 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S386 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S388 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S390 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S391 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S392 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S393 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S394 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S395 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S396 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S397 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* left_bracket */
	T0* a7; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S398 {
	int id;
	T14 a1; /* item */
	T6 a3; /* count */
	T1 a4; /* is_shared */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER] */
struct S399 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S400 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S401 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S402 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S403 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S404 {
	int id;
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S405 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S406 {
	int id;
	T6 a1; /* count */
	T0* a4; /* internal_cursor */
	T0* a9; /* item_storage */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a13; /* last_position */
	T6 a14; /* free_slot */
	T6 a16; /* position */
	T6 a18; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a31; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S408 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type KL_DIRECTORY */
struct S410 {
	int id;
	T1 a2; /* end_of_input */
	T0* a3; /* last_entry */
	T6 a5; /* mode */
	T0* a7; /* name */
	T0* a9; /* string_name */
	T0* a10; /* entry_buffer */
	T0* a13; /* lastentry */
	T14 a16; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S411 {
	int id;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S412 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S414 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S415 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S416 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a3; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S418 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S419 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S420 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S421 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S422 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S423 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a9; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S424 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S425 {
	int id;
};

/* Struct for type ET_SYMBOL */
struct S426 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S428 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S429 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S430 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S431 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S432 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S433 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S435 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S436 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S438 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S439 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S441 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S442 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S443 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S444 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S445 {
	int id;
	T2 a1; /* code */
	T6 a3; /* hash_code */
	T6 a9; /* compressed_position */
	T0* a10; /* free_operator_name */
	T6 a16; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S446 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S447 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S449 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S450 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S451 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S452 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S453 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S454 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S455 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S457 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S458 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S459 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S460 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S461 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S462 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S463 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S464 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a15; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S465 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S466 {
	int id;
};

/* Struct for type ET_VOID */
struct S467 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S468 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S469 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S470 {
	int id;
	T2 a1; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S471 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S472 {
	int id;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S473 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S474 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S475 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S476 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a10; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S477 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S478 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S479 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* type */
	T0* a22; /* cast_type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S480 {
	int id;
	T0* a1; /* value */
	T6 a6; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* cast_type */
	T0* a25; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S481 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a11; /* compressed_position */
	T6 a13; /* index */
	T0* a26; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S482 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a7; /* compressed_position */
	T6 a9; /* index */
	T0* a22; /* cast_type */
	T0* a26; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S483 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S484 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S485 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a31; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S486 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S487 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S489 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S490 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S491 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S492 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S494 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S497 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S498 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S499 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S500 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S501 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S502 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S503 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S504 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a4; /* storage */
	T6 a5; /* count */
	T1 a7; /* assertions_checked */
	T1 a8; /* implementation_checked */
	T1 a9; /* has_assertions_error */
	T1 a10; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S505 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S506 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S508 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S510 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S512 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S516 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S517 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S519 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S520 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S521 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S522 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S523 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S524 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S525 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S526 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S527 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S528 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S529 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S530 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S532 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S533 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S535 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S536 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S537 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a3; /* constraint */
	T0* a4; /* creation_procedures */
	T0* a5; /* type_mark */
	T0* a6; /* name */
	T6 a7; /* index */
	T0* a10; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S538 {
	int id;
	T0* a1; /* create_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S539 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S540 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S542 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S543 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S544 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S545 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S546 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S548 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S549 {
	int id;
	T0* a2; /* constant */
	T6 a3; /* size */
	T0* a5; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S550 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a3; /* name */
	T6 a4; /* size */
	T0* a28; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S551 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S553 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S555 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S556 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S557 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S558 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S559 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S560 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S561 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S562 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S563 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S564 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S565 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S566 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S567 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S568 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S570 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S571 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S572 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S573 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a4; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S574 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S575 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S577 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S578 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S579 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S580 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S581 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S582 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S584 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S585 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S587 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S588 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S589 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S590 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S591 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S592 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a3; /* clients */
	T0* a4; /* storage */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S593 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S594 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S595 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S597 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S599 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S600 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S602 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S603 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S604 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S605 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a5; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S606 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S607 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S609 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S610 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S611 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S612 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S613 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S614 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S618 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S619 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S620 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S622 {
	int id;
	T0* a1; /* require_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S623 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S624 {
	int id;
	T0* a1; /* local_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S625 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S626 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S627 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S628 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S629 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S630 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S631 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S632 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S633 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a6; /* arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* is_keyword */
	T0* a13; /* assigner */
	T0* a14; /* obsolete_message */
	T0* a15; /* preconditions */
	T0* a16; /* postconditions */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a36; /* first_precursor */
	T0* a37; /* other_precursors */
	T0* a38; /* semicolon */
	T0* a39; /* feature_clause */
	T0* a40; /* other_seeds */
	T0* a41; /* frozen_keyword */
	T6 a42; /* id */
	T6 a43; /* version */
	T1 a44; /* has_assertions_error */
	T1 a45; /* assertions_checked */
	T0* a46; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S636 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S637 {
	int id;
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S638 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* implementation_feature */
	T0* a10; /* is_keyword */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S639 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_feature */
	T6 a11; /* builtin_code */
	T0* a12; /* is_keyword */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a20; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a35; /* semicolon */
	T0* a36; /* feature_clause */
	T0* a37; /* other_seeds */
	T0* a38; /* frozen_keyword */
	T6 a39; /* id */
	T6 a40; /* version */
	T1 a41; /* has_assertions_error */
	T1 a42; /* assertions_checked */
	T0* a43; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S640 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S641 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S642 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S643 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a15; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S644 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a17; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S645 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a18; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S646 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a38; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S647 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S648 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a56; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S649 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S650 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S651 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S652 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a16; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S653 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S655 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S656 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S658 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S659 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S660 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S662 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S663 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S664 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S666 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S667 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S668 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S669 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S670 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S671 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S672 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S673 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S674 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S675 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a3; /* tag */
	T0* a4; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S676 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S677 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S678 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S679 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S680 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S681 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S683 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S684 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S686 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* name */
	T6 a26; /* seed */
	T1 a28; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S687 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S688 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S690 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S691 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S692 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S694 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S695 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S696 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S697 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S698 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S699 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S700 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a5; /* elseif_parts */
	T0* a6; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S701 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S702 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S703 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S705 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a6; /* invariant_part */
	T0* a7; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S706 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S707 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S708 {
	int id;
	T0* a1; /* check_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S710 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a6; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S711 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S712 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S714 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S715 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S716 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S717 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S718 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S719 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S720 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S721 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S722 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S723 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S724 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S725 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S726 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S727 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S728 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S729 {
	int id;
	T0* a1; /* when_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S730 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S731 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S732 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S734 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S736 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S737 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S739 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S740 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S741 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S742 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S743 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S744 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S745 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S746 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S747 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S748 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S750 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S751 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S752 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S754 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S755 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S756 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S757 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S758 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T6 a6; /* index */
	T0* a10; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S759 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S760 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S761 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S762 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S763 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S764 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S765 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* current_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S766 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* result_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S767 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S768 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S769 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S771 {
	int id;
	T0* a1; /* and_keyword */
	T0* a3; /* then_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S772 {
	int id;
	T0* a1; /* or_keyword */
	T0* a3; /* else_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S773 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S774 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S775 {
	int id;
	T0* a1; /* old_keyword */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type ET_CALL_AGENT */
struct S776 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
	T0* a9; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S777 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S779 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S780 {
	int id;
	T0* a1; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S781 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S782 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S783 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
	T6 a8; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S784 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S785 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S786 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S787 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S788 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S789 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S790 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S791 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S792 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S793 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S794 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S795 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S796 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S797 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S798 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S799 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S800 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S801 {
	int id;
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S802 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S803 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S804 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S805 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S806 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S807 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S808 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S809 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S811 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S812 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S813 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S814 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T0* a5; /* question_mark */
	T6 a8; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S816 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S819 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S820 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S823 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S824 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER] */
struct S825 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S827 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
struct S829 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S831 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S832 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S833 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S834 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S835 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S836 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S838 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S839 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S840 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S841 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S842 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S844 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S845 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S846 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S848 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S850 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S851 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S852 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
struct S853 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
struct S855 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S858 {
	int id;
	T6 a1; /* count */
	T0* a6; /* byte_code */
	T0* a7; /* character_sets */
	T6 a8; /* capacity */
	T6 a10; /* character_sets_count */
	T6 a11; /* character_sets_capacity */
};

/* Struct for type RX_CASE_MAPPING */
struct S859 {
	int id;
	T0* a3; /* lower_table */
	T0* a4; /* flip_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S860 {
	int id;
	T0* a2; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S862 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S863 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE] */
struct S864 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T6 a8; /* modulus */
	T6 a9; /* last_position */
	T6 a15; /* capacity */
	T6 a16; /* position */
	T6 a17; /* free_slot */
	T6 a19; /* slots_position */
	T6 a20; /* count */
	T0* a21; /* equality_tester */
	T0* a22; /* key_equality_tester */
	T0* a23; /* internal_keys */
	T0* a24; /* slots */
	T0* a26; /* clashes */
	T0* a27; /* special_item_routines */
	T0* a28; /* key_storage */
	T0* a29; /* special_key_routines */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
struct S865 {
	int id;
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
	T6 a9; /* count */
};

/* Struct for type DS_LINKABLE [INTEGER] */
struct S866 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S867 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S870 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S871 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S872 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S873 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S874 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S875 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S876 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S877 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S878 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S879 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S880 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S881 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S882 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S883 {
	int id;
	T11 a3; /* part1 */
	T6 a4; /* sign */
	T11 a5; /* part2 */
	T6 a6; /* last_state */
	T1 a7; /* internal_overflowed */
	T0* a9; /* leading_separators */
	T0* a10; /* trailing_separators */
	T1 a11; /* leading_separators_acceptable */
	T1 a12; /* trailing_separators_acceptable */
	T6 a13; /* conversion_type */
};

/* Struct for type C_STRING */
struct S886 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S887 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S888 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S889 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a6; /* default_template */
	T0* a9; /* parameters */
	T0* a11; /* current_class */
	T0* a12; /* class_impl */
	T0* a13; /* position */
	T0* a15; /* code */
	T0* a18; /* etl_code */
	T1 a59; /* ise_fatal */
	T1 a60; /* se_fatal */
	T1 a61; /* ve_fatal */
	T1 a62; /* ge_fatal */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S890 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S891 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a11; /* filename */
	T0* a12; /* position */
	T1 a13; /* ise_reported */
	T1 a14; /* ise_fatal */
	T1 a15; /* se_reported */
	T1 a16; /* se_fatal */
	T1 a17; /* ve_reported */
	T1 a18; /* ve_fatal */
	T1 a19; /* ge_reported */
	T1 a20; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S892 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S893 {
	int id;
	T6 a2; /* count */
	T0* a3; /* internal_cursor */
	T0* a5; /* first_cell */
	T0* a6; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S894 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S895 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S896 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S897 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S898 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S899 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S900 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S901 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S902 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S903 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* agent_type */
	T0* a8; /* other_types */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S905 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S906 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S907 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S908 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S909 {
	int id;
	T6 a2; /* count */
	T0* a6; /* area */
	T6 a22; /* byte_count */
	T6 a35; /* internal_hash_code */
	T6 a39; /* last_byte_index_input */
	T6 a40; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S910 {
	int id;
	T0* a1; /* last_string */
	T6 a12; /* encoding */
	T0* a19; /* utf_queue */
	T0* a20; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S911 {
	int id;
	T0* a3; /* as_special */
	T0* a6; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S912 {
	int id;
};

/* Struct for type KL_STDIN_FILE */
struct S913 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a5; /* character_buffer */
	T14 a10; /* file_pointer */
	T6 a15; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S914 {
	int id;
	T0* a2; /* filename */
	T6 a10; /* compressed_position */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S916 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S918 {
	int id;
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER] */
struct S920 {
	int id;
};

/* Struct for type ARRAY [ET_TYPE] */
struct S921 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S925 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S926 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S927 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S928 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S929 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S931 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type UT_TRISTATE */
struct S932 {
	int id;
	T2 a4; /* value */
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S933 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S934 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S935 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
struct S936 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
struct S938 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S940 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a36; /* slots_position */
	T6 a37; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S941 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S943 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a26; /* slots_position */
	T6 a28; /* count */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S944 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S946 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S947 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a18; /* count */
	T6 a29; /* slots_position */
	T6 a33; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S948 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* rename_table */
	T0* a5; /* export_table */
	T0* a6; /* undefine_table */
	T0* a7; /* redefine_table */
	T0* a8; /* select_table */
	T0* a9; /* replicable_features */
	T1 a10; /* has_fatal_error */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S949 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* dotnet_features */
	T0* a4; /* other_dotnet_features */
	T1 a5; /* has_fatal_error */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S950 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S951 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S952 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* parent_context */
	T1 a4; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S953 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S954 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S955 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* current_feature */
	T1 a5; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S956 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S957 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a7; /* current_feature_impl */
	T0* a8; /* current_class_impl */
	T0* a9; /* enclosing_inline_agents */
	T0* a10; /* overloaded_procedures */
	T0* a11; /* unused_overloaded_procedures_list */
	T0* a12; /* overloaded_queries */
	T0* a13; /* unused_overloaded_queries_list */
	T0* a14; /* best_overloaded_features */
	T0* a15; /* unused_contexts */
	T0* a16; /* current_context */
	T1 a18; /* has_fatal_error */
	T1 a19; /* in_assertion */
	T1 a20; /* in_invariant */
	T1 a22; /* in_precondition */
	T1 a23; /* in_postcondition */
	T0* a24; /* current_target_type */
	T1 a25; /* in_precursor */
	T0* a26; /* current_inline_agent */
	T1 a27; /* in_rescue */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S958 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a5; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S959 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* sorted_items */
	T0* a7; /* cycle */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
struct S960 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S961 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S962 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* universe */
	T1 a5; /* has_fatal_error */
	T0* a7; /* current_formal */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S967 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S968 {
	int id;
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S969 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S970 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S971 {
	int id;
	T0* a5; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING] */
struct S973 {
	int id;
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S974 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY] */
struct S975 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S976 {
	int id;
	T6 a5; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER] */
struct S977 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S978 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S979 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S980 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S981 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S982 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S984 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S986 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S987 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S988 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S989 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S990 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S991 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING] */
struct S992 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING] */
struct S993 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S994 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S995 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S996 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S997 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S998 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S999 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1000 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S1001 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1002 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S1004 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1005 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S1006 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S1007 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S1008 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S1009 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S1010 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S1011 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1012 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1013 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1014 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1015 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1016 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1017 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1018 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1019 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1021 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1022 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1023 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1024 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1025 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1026 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1027 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1028 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1029 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1030 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1031 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1032 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1033 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1034 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1035 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1036 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1037 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1038 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1039 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1040 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1041 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1042 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1044 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1045 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1047 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1052 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1054 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1055 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1056 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1057 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1058 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1059 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1060 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1061 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1062 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1063 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1064 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1065 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1066 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S1067 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1068 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1069 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1070 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1071 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1074 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1075 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1076 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1077 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1078 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1079 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1098 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1100 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1104 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1122 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1123 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1129 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* index */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1130 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1131 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1132 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1133 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1134 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1135 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1139 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1140 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1141 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1142 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1143 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1144 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S1145 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1146 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1147 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1148 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1149 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1150 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1151 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
struct S1152 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_DYNAMIC_TYPE] */
struct S1153 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_DYNAMIC_TYPE] */
struct S1155 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1156 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
struct S1157 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
struct S1158 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1160 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1161 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1162 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1163 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1164 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1170 {
	int id;
	T0* a7; /* integer_overflow_state1 */
	T0* a8; /* integer_overflow_state2 */
	T0* a10; /* natural_overflow_state1 */
	T0* a11; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1171 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1172 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER] */
struct S1175 {
	int id;
	T6 a1; /* count */
	T0* a3; /* first_cell */
	T0* a5; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1176 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1177 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1178 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
struct S1180 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1182 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1184 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1185 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1187 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1188 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1190 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S1191 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1192 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1193 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1194 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1195 {
	int id;
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a11; /* internal_cursor */
	T0* a14; /* item_storage */
	T0* a16; /* key_equality_tester */
	T0* a17; /* internal_keys */
	T6 a18; /* position */
	T6 a19; /* last_position */
	T6 a20; /* free_slot */
	T6 a22; /* modulus */
	T6 a29; /* slots_position */
	T0* a30; /* equality_tester */
	T6 a31; /* clashes_previous_position */
	T0* a34; /* key_storage */
	T0* a35; /* clashes */
	T0* a36; /* slots */
	T0* a38; /* special_item_routines */
	T0* a39; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1196 {
	int id;
	T6 a5; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a10; /* internal_cursor */
	T0* a15; /* item_storage */
	T6 a16; /* modulus */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T0* a22; /* equality_tester */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1197 {
	int id;
	T6 a1; /* count */
	T6 a8; /* capacity */
	T6 a9; /* found_position */
	T0* a13; /* internal_cursor */
	T0* a17; /* key_storage */
	T0* a18; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* position */
	T6 a23; /* last_position */
	T6 a24; /* free_slot */
	T6 a26; /* modulus */
	T0* a32; /* equality_tester */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
	T0* a38; /* clashes */
	T0* a39; /* slots */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1198 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T6 a17; /* count */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T6 a21; /* capacity */
	T0* a27; /* equality_tester */
	T0* a28; /* key_equality_tester */
	T0* a29; /* internal_keys */
	T0* a34; /* clashes */
	T6 a35; /* modulus */
	T0* a36; /* slots */
	T6 a37; /* slots_position */
	T6 a38; /* clashes_previous_position */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1199 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1200 {
	int id;
	T6 a1; /* capacity */
	T6 a4; /* found_position */
	T0* a7; /* item_storage */
	T6 a8; /* modulus */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* internal_cursor */
	T0* a15; /* equality_tester */
	T6 a16; /* count */
	T6 a23; /* slots_position */
	T0* a24; /* special_item_routines */
	T0* a25; /* clashes */
	T0* a27; /* slots */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1202 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T6 a13; /* capacity */
	T6 a16; /* slots_position */
	T0* a18; /* equality_tester */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1203 {
	int id;
	T0* a2; /* cycle */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* items */
	T0* a6; /* sorted_items */
	T0* a7; /* indexes */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1204 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* next */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1205 {
	int id;
	T6 a3; /* count */
	T0* a6; /* storage */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
	T0* a9; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_CLASS] */
struct S1206 {
	int id;
	T6 a2; /* position */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a8; /* modulus */
	T6 a14; /* capacity */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* equality_tester */
	T0* a20; /* internal_keys */
	T0* a21; /* internal_cursor */
	T6 a23; /* found_position */
	T0* a24; /* item_storage */
	T0* a25; /* key_storage */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a29; /* special_item_routines */
	T0* a30; /* special_key_routines */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
struct S1208 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1210 {
	int id;
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1211 {
	int id;
	T0* a3; /* cycle */
	T0* a4; /* sorted_items */
	T0* a5; /* items */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* indexes */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1212 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
struct S1214 {
	int id;
	T6 a2; /* count */
	T0* a4; /* last_cell */
	T0* a5; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
struct S1215 {
	int id;
	T1 a1; /* before */
	T0* a3; /* current_cell */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
	T1 a6; /* after */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S1217 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1218 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1219 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1220 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1223 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1224 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_DYNAMIC_TYPE] */
struct S1230 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1231 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1232 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1233 {
	int id;
	T0* a2; /* deltas */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1235 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T0* a7; /* equality_tester */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T6 a21; /* free_slot */
	T0* a22; /* internal_cursor */
	T6 a24; /* found_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a28; /* special_item_routines */
};

/* Struct for type XM_COMMENT */
struct S1236 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1237 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1238 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1239 {
	int id;
	T0* a2; /* uri */
	T0* a4; /* ns_prefix */
};

/* Struct for type ET_FEATURE_IDS */
struct S1240 {
	int id;
	T6 a1; /* count */
	T0* a4; /* feature_ids */
};

/* Struct for type ET_FEATURE_LIST */
struct S1241 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1242 {
	int id;
	T0* a3; /* next */
	T0* a4; /* precursor_feature */
	T0* a5; /* parent */
	T0* a6; /* new_name */
	T0* a7; /* undefine_name */
	T0* a8; /* redefine_name */
	T0* a9; /* select_name */
	T0* a10; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1243 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1244 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1245 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1251 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1255 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1256 {
	int id;
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1259 {
	int id;
	T6 a3; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1260 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1262 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1263 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1264 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1266 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1267 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1268 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1269 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1270 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type SPECIAL [ARRAY [INTEGER]] */
struct S1271 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
struct S1272 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1273 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_64] */
struct S1274 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKABLE [CHARACTER] */
struct S1275 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1277 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1278 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1279 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1280 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1281 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1282 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1284 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1286 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1287 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1288 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1289 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1291 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1292 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1294 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1296 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1297 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1298 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1299 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1300 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1302 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1304 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1305 {
	int id;
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1307 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1308 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
struct S1309 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
struct S1311 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1312 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
struct S1313 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
struct S1314 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1317 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1318 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1319 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1327 {
	int id;
	T0* a2; /* default_output */
};

/* Struct for type PLATFORM */
struct S1328 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1330 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1331 {
	int id;
	T0* a1; /* element */
	T0* a3; /* xml_attribute */
	T0* a5; /* composite */
	T0* a6; /* document */
	T0* a7; /* character_data */
	T0* a8; /* processing_instruction */
	T0* a9; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1337 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1338 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1339 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1342 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1346 {
	int id;
	T1 a1; /* end_of_input */
	T2 a3; /* last_character */
	T0* a6; /* string */
	T6 a7; /* location */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1349 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1358 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1359 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1362 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1363 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1364 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1365 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1366 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1367 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1368 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1369 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1370 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1371 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1372 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1373 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1374 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1375 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1376 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1377 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1378 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1381 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1382 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1383 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1384 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1385 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1386 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1387 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1388 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1390 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1392 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
struct S1393 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
struct S1396 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1398 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S1399 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1405 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1406 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1407 {
	int id;
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1408 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1409 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1410 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1411 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1416 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1418 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type CONSOLE */
struct S1419 {
	int id;
	T14 a1; /* file_pointer */
	T0* a3; /* name */
	T6 a4; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1420 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1423 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


extern T1 gedefault1;
extern T2 gedefault2;
extern T3 gedefault3;
extern T4 gedefault4;
extern T5 gedefault5;
extern T6 gedefault6;
extern T7 gedefault7;
extern T8 gedefault8;
extern T9 gedefault9;
extern T10 gedefault10;
extern T11 gedefault11;
extern T12 gedefault12;
extern T13 gedefault13;
extern T14 gedefault14;
extern T15 gedefault15;
extern T17 gedefault17;
extern T21 gedefault21;
extern T22 gedefault22;
extern T23 gedefault23;
extern T24 gedefault24;
extern T26 gedefault26;
extern T28 gedefault28;
extern T29 gedefault29;
extern T30 gedefault30;
extern T31 gedefault31;
extern T32 gedefault32;
extern T37 gedefault37;
extern T38 gedefault38;
extern T39 gedefault39;
extern T40 gedefault40;
extern T41 gedefault41;
extern T43 gedefault43;
extern T44 gedefault44;
extern T45 gedefault45;
extern T48 gedefault48;
extern T49 gedefault49;
extern T50 gedefault50;
extern T51 gedefault51;
extern T52 gedefault52;
extern T53 gedefault53;
extern T55 gedefault55;
extern T56 gedefault56;
extern T57 gedefault57;
extern T58 gedefault58;
extern T59 gedefault59;
extern T60 gedefault60;
extern T62 gedefault62;
extern T64 gedefault64;
extern T65 gedefault65;
extern T66 gedefault66;
extern T67 gedefault67;
extern T69 gedefault69;
extern T71 gedefault71;
extern T72 gedefault72;
extern T73 gedefault73;
extern T74 gedefault74;
extern T75 gedefault75;
extern T76 gedefault76;
extern T77 gedefault77;
extern T78 gedefault78;
extern T79 gedefault79;
extern T80 gedefault80;
extern T81 gedefault81;
extern T82 gedefault82;
extern T83 gedefault83;
extern T84 gedefault84;
extern T85 gedefault85;
extern T86 gedefault86;
extern T88 gedefault88;
extern T89 gedefault89;
extern T90 gedefault90;
extern T91 gedefault91;
extern T92 gedefault92;
extern T93 gedefault93;
extern T94 gedefault94;
extern T95 gedefault95;
extern T96 gedefault96;
extern T99 gedefault99;
extern T100 gedefault100;
extern T102 gedefault102;
extern T103 gedefault103;
extern T104 gedefault104;
extern T105 gedefault105;
extern T106 gedefault106;
extern T107 gedefault107;
extern T108 gedefault108;
extern T109 gedefault109;
extern T110 gedefault110;
extern T111 gedefault111;
extern T112 gedefault112;
extern T113 gedefault113;
extern T114 gedefault114;
extern T115 gedefault115;
extern T117 gedefault117;
extern T118 gedefault118;
extern T119 gedefault119;
extern T120 gedefault120;
extern T121 gedefault121;
extern T122 gedefault122;
extern T123 gedefault123;
extern T124 gedefault124;
extern T125 gedefault125;
extern T126 gedefault126;
extern T127 gedefault127;
extern T128 gedefault128;
extern T129 gedefault129;
extern T130 gedefault130;
extern T131 gedefault131;
extern T132 gedefault132;
extern T133 gedefault133;
extern T134 gedefault134;
extern T135 gedefault135;
extern T136 gedefault136;
extern T137 gedefault137;
extern T138 gedefault138;
extern T139 gedefault139;
extern T140 gedefault140;
extern T141 gedefault141;
extern T142 gedefault142;
extern T143 gedefault143;
extern T144 gedefault144;
extern T146 gedefault146;
extern T148 gedefault148;
extern T150 gedefault150;
extern T151 gedefault151;
extern T152 gedefault152;
extern T153 gedefault153;
extern T157 gedefault157;
extern T158 gedefault158;
extern T159 gedefault159;
extern T160 gedefault160;
extern T161 gedefault161;
extern T163 gedefault163;
extern T166 gedefault166;
extern T168 gedefault168;
extern T169 gedefault169;
extern T170 gedefault170;
extern T171 gedefault171;
extern T172 gedefault172;
extern T173 gedefault173;
extern T174 gedefault174;
extern T175 gedefault175;
extern T176 gedefault176;
extern T177 gedefault177;
extern T178 gedefault178;
extern T180 gedefault180;
extern T182 gedefault182;
extern T183 gedefault183;
extern T184 gedefault184;
extern T186 gedefault186;
extern T187 gedefault187;
extern T188 gedefault188;
extern T189 gedefault189;
extern T190 gedefault190;
extern T191 gedefault191;
extern T192 gedefault192;
extern T193 gedefault193;
extern T194 gedefault194;
extern T195 gedefault195;
extern T196 gedefault196;
extern T197 gedefault197;
extern T198 gedefault198;
extern T199 gedefault199;
extern T200 gedefault200;
extern T201 gedefault201;
extern T202 gedefault202;
extern T203 gedefault203;
extern T204 gedefault204;
extern T205 gedefault205;
extern T207 gedefault207;
extern T212 gedefault212;
extern T213 gedefault213;
extern T215 gedefault215;
extern T217 gedefault217;
extern T220 gedefault220;
extern T221 gedefault221;
extern T222 gedefault222;
extern T223 gedefault223;
extern T224 gedefault224;
extern T226 gedefault226;
extern T227 gedefault227;
extern T235 gedefault235;
extern T236 gedefault236;
extern T238 gedefault238;
extern T239 gedefault239;
extern T240 gedefault240;
extern T241 gedefault241;
extern T242 gedefault242;
extern T243 gedefault243;
extern T244 gedefault244;
extern T245 gedefault245;
extern T247 gedefault247;
extern T249 gedefault249;
extern T250 gedefault250;
extern T251 gedefault251;
extern T254 gedefault254;
extern T255 gedefault255;
extern T256 gedefault256;
extern T257 gedefault257;
extern T258 gedefault258;
extern T259 gedefault259;
extern T260 gedefault260;
extern T262 gedefault262;
extern T263 gedefault263;
extern T266 gedefault266;
extern T267 gedefault267;
extern T268 gedefault268;
extern T269 gedefault269;
extern T270 gedefault270;
extern T271 gedefault271;
extern T272 gedefault272;
extern T274 gedefault274;
extern T275 gedefault275;
extern T276 gedefault276;
extern T277 gedefault277;
extern T278 gedefault278;
extern T279 gedefault279;
extern T283 gedefault283;
extern T284 gedefault284;
extern T285 gedefault285;
extern T286 gedefault286;
extern T287 gedefault287;
extern T288 gedefault288;
extern T289 gedefault289;
extern T290 gedefault290;
extern T291 gedefault291;
extern T292 gedefault292;
extern T293 gedefault293;
extern T295 gedefault295;
extern T296 gedefault296;
extern T297 gedefault297;
extern T298 gedefault298;
extern T300 gedefault300;
extern T303 gedefault303;
extern T304 gedefault304;
extern T305 gedefault305;
extern T307 gedefault307;
extern T308 gedefault308;
extern T309 gedefault309;
extern T310 gedefault310;
extern T311 gedefault311;
extern T312 gedefault312;
extern T313 gedefault313;
extern T314 gedefault314;
extern T315 gedefault315;
extern T316 gedefault316;
extern T319 gedefault319;
extern T321 gedefault321;
extern T322 gedefault322;
extern T323 gedefault323;
extern T324 gedefault324;
extern T325 gedefault325;
extern T327 gedefault327;
extern T328 gedefault328;
extern T329 gedefault329;
extern T331 gedefault331;
extern T332 gedefault332;
extern T333 gedefault333;
extern T334 gedefault334;
extern T335 gedefault335;
extern T336 gedefault336;
extern T337 gedefault337;
extern T338 gedefault338;
extern T339 gedefault339;
extern T340 gedefault340;
extern T341 gedefault341;
extern T342 gedefault342;
extern T343 gedefault343;
extern T344 gedefault344;
extern T345 gedefault345;
extern T346 gedefault346;
extern T347 gedefault347;
extern T348 gedefault348;
extern T349 gedefault349;
extern T350 gedefault350;
extern T352 gedefault352;
extern T354 gedefault354;
extern T355 gedefault355;
extern T356 gedefault356;
extern T357 gedefault357;
extern T358 gedefault358;
extern T359 gedefault359;
extern T360 gedefault360;
extern T362 gedefault362;
extern T363 gedefault363;
extern T365 gedefault365;
extern T366 gedefault366;
extern T367 gedefault367;
extern T368 gedefault368;
extern T369 gedefault369;
extern T370 gedefault370;
extern T372 gedefault372;
extern T374 gedefault374;
extern T376 gedefault376;
extern T377 gedefault377;
extern T378 gedefault378;
extern T379 gedefault379;
extern T380 gedefault380;
extern T381 gedefault381;
extern T382 gedefault382;
extern T383 gedefault383;
extern T384 gedefault384;
extern T385 gedefault385;
extern T386 gedefault386;
extern T388 gedefault388;
extern T390 gedefault390;
extern T391 gedefault391;
extern T392 gedefault392;
extern T393 gedefault393;
extern T394 gedefault394;
extern T395 gedefault395;
extern T396 gedefault396;
extern T397 gedefault397;
extern T398 gedefault398;
extern T399 gedefault399;
extern T400 gedefault400;
extern T401 gedefault401;
extern T402 gedefault402;
extern T403 gedefault403;
extern T404 gedefault404;
extern T405 gedefault405;
extern T406 gedefault406;
extern T408 gedefault408;
extern T410 gedefault410;
extern T411 gedefault411;
extern T412 gedefault412;
extern T414 gedefault414;
extern T415 gedefault415;
extern T416 gedefault416;
extern T418 gedefault418;
extern T419 gedefault419;
extern T420 gedefault420;
extern T421 gedefault421;
extern T422 gedefault422;
extern T423 gedefault423;
extern T424 gedefault424;
extern T425 gedefault425;
extern T426 gedefault426;
extern T427 gedefault427;
extern T428 gedefault428;
extern T429 gedefault429;
extern T430 gedefault430;
extern T431 gedefault431;
extern T432 gedefault432;
extern T433 gedefault433;
extern T435 gedefault435;
extern T436 gedefault436;
extern T438 gedefault438;
extern T439 gedefault439;
extern T441 gedefault441;
extern T442 gedefault442;
extern T443 gedefault443;
extern T444 gedefault444;
extern T445 gedefault445;
extern T446 gedefault446;
extern T447 gedefault447;
extern T449 gedefault449;
extern T450 gedefault450;
extern T451 gedefault451;
extern T452 gedefault452;
extern T453 gedefault453;
extern T454 gedefault454;
extern T455 gedefault455;
extern T457 gedefault457;
extern T458 gedefault458;
extern T459 gedefault459;
extern T460 gedefault460;
extern T461 gedefault461;
extern T462 gedefault462;
extern T463 gedefault463;
extern T464 gedefault464;
extern T465 gedefault465;
extern T466 gedefault466;
extern T467 gedefault467;
extern T468 gedefault468;
extern T469 gedefault469;
extern T470 gedefault470;
extern T471 gedefault471;
extern T472 gedefault472;
extern T473 gedefault473;
extern T474 gedefault474;
extern T475 gedefault475;
extern T476 gedefault476;
extern T477 gedefault477;
extern T478 gedefault478;
extern T479 gedefault479;
extern T480 gedefault480;
extern T481 gedefault481;
extern T482 gedefault482;
extern T483 gedefault483;
extern T484 gedefault484;
extern T485 gedefault485;
extern T486 gedefault486;
extern T487 gedefault487;
extern T489 gedefault489;
extern T490 gedefault490;
extern T491 gedefault491;
extern T492 gedefault492;
extern T494 gedefault494;
extern T496 gedefault496;
extern T497 gedefault497;
extern T498 gedefault498;
extern T499 gedefault499;
extern T500 gedefault500;
extern T501 gedefault501;
extern T502 gedefault502;
extern T503 gedefault503;
extern T504 gedefault504;
extern T505 gedefault505;
extern T506 gedefault506;
extern T508 gedefault508;
extern T510 gedefault510;
extern T512 gedefault512;
extern T516 gedefault516;
extern T517 gedefault517;
extern T519 gedefault519;
extern T520 gedefault520;
extern T521 gedefault521;
extern T522 gedefault522;
extern T523 gedefault523;
extern T524 gedefault524;
extern T525 gedefault525;
extern T526 gedefault526;
extern T527 gedefault527;
extern T528 gedefault528;
extern T529 gedefault529;
extern T530 gedefault530;
extern T532 gedefault532;
extern T533 gedefault533;
extern T535 gedefault535;
extern T536 gedefault536;
extern T537 gedefault537;
extern T538 gedefault538;
extern T539 gedefault539;
extern T540 gedefault540;
extern T542 gedefault542;
extern T543 gedefault543;
extern T544 gedefault544;
extern T545 gedefault545;
extern T546 gedefault546;
extern T548 gedefault548;
extern T549 gedefault549;
extern T550 gedefault550;
extern T551 gedefault551;
extern T553 gedefault553;
extern T555 gedefault555;
extern T556 gedefault556;
extern T557 gedefault557;
extern T558 gedefault558;
extern T559 gedefault559;
extern T560 gedefault560;
extern T561 gedefault561;
extern T562 gedefault562;
extern T563 gedefault563;
extern T564 gedefault564;
extern T565 gedefault565;
extern T566 gedefault566;
extern T567 gedefault567;
extern T568 gedefault568;
extern T570 gedefault570;
extern T571 gedefault571;
extern T572 gedefault572;
extern T573 gedefault573;
extern T574 gedefault574;
extern T575 gedefault575;
extern T577 gedefault577;
extern T578 gedefault578;
extern T579 gedefault579;
extern T580 gedefault580;
extern T581 gedefault581;
extern T582 gedefault582;
extern T584 gedefault584;
extern T585 gedefault585;
extern T587 gedefault587;
extern T588 gedefault588;
extern T589 gedefault589;
extern T590 gedefault590;
extern T591 gedefault591;
extern T592 gedefault592;
extern T593 gedefault593;
extern T594 gedefault594;
extern T595 gedefault595;
extern T597 gedefault597;
extern T599 gedefault599;
extern T600 gedefault600;
extern T602 gedefault602;
extern T603 gedefault603;
extern T604 gedefault604;
extern T605 gedefault605;
extern T606 gedefault606;
extern T607 gedefault607;
extern T609 gedefault609;
extern T610 gedefault610;
extern T611 gedefault611;
extern T612 gedefault612;
extern T613 gedefault613;
extern T614 gedefault614;
extern T615 gedefault615;
extern T618 gedefault618;
extern T619 gedefault619;
extern T620 gedefault620;
extern T622 gedefault622;
extern T623 gedefault623;
extern T624 gedefault624;
extern T625 gedefault625;
extern T626 gedefault626;
extern T627 gedefault627;
extern T628 gedefault628;
extern T629 gedefault629;
extern T630 gedefault630;
extern T631 gedefault631;
extern T632 gedefault632;
extern T633 gedefault633;
extern T636 gedefault636;
extern T637 gedefault637;
extern T638 gedefault638;
extern T639 gedefault639;
extern T640 gedefault640;
extern T641 gedefault641;
extern T642 gedefault642;
extern T643 gedefault643;
extern T644 gedefault644;
extern T645 gedefault645;
extern T646 gedefault646;
extern T647 gedefault647;
extern T648 gedefault648;
extern T649 gedefault649;
extern T650 gedefault650;
extern T651 gedefault651;
extern T652 gedefault652;
extern T653 gedefault653;
extern T655 gedefault655;
extern T656 gedefault656;
extern T658 gedefault658;
extern T659 gedefault659;
extern T660 gedefault660;
extern T662 gedefault662;
extern T663 gedefault663;
extern T664 gedefault664;
extern T666 gedefault666;
extern T667 gedefault667;
extern T668 gedefault668;
extern T669 gedefault669;
extern T670 gedefault670;
extern T671 gedefault671;
extern T672 gedefault672;
extern T673 gedefault673;
extern T674 gedefault674;
extern T675 gedefault675;
extern T676 gedefault676;
extern T677 gedefault677;
extern T678 gedefault678;
extern T679 gedefault679;
extern T680 gedefault680;
extern T681 gedefault681;
extern T683 gedefault683;
extern T684 gedefault684;
extern T686 gedefault686;
extern T687 gedefault687;
extern T688 gedefault688;
extern T690 gedefault690;
extern T691 gedefault691;
extern T692 gedefault692;
extern T694 gedefault694;
extern T695 gedefault695;
extern T696 gedefault696;
extern T697 gedefault697;
extern T698 gedefault698;
extern T699 gedefault699;
extern T700 gedefault700;
extern T701 gedefault701;
extern T702 gedefault702;
extern T703 gedefault703;
extern T705 gedefault705;
extern T706 gedefault706;
extern T707 gedefault707;
extern T708 gedefault708;
extern T710 gedefault710;
extern T711 gedefault711;
extern T712 gedefault712;
extern T714 gedefault714;
extern T715 gedefault715;
extern T716 gedefault716;
extern T717 gedefault717;
extern T718 gedefault718;
extern T719 gedefault719;
extern T720 gedefault720;
extern T721 gedefault721;
extern T722 gedefault722;
extern T723 gedefault723;
extern T724 gedefault724;
extern T725 gedefault725;
extern T726 gedefault726;
extern T727 gedefault727;
extern T728 gedefault728;
extern T729 gedefault729;
extern T730 gedefault730;
extern T731 gedefault731;
extern T732 gedefault732;
extern T734 gedefault734;
extern T736 gedefault736;
extern T737 gedefault737;
extern T739 gedefault739;
extern T740 gedefault740;
extern T741 gedefault741;
extern T742 gedefault742;
extern T743 gedefault743;
extern T744 gedefault744;
extern T745 gedefault745;
extern T746 gedefault746;
extern T747 gedefault747;
extern T748 gedefault748;
extern T750 gedefault750;
extern T751 gedefault751;
extern T752 gedefault752;
extern T754 gedefault754;
extern T755 gedefault755;
extern T756 gedefault756;
extern T757 gedefault757;
extern T758 gedefault758;
extern T759 gedefault759;
extern T760 gedefault760;
extern T761 gedefault761;
extern T762 gedefault762;
extern T763 gedefault763;
extern T764 gedefault764;
extern T765 gedefault765;
extern T766 gedefault766;
extern T767 gedefault767;
extern T768 gedefault768;
extern T769 gedefault769;
extern T771 gedefault771;
extern T772 gedefault772;
extern T773 gedefault773;
extern T774 gedefault774;
extern T775 gedefault775;
extern T776 gedefault776;
extern T777 gedefault777;
extern T779 gedefault779;
extern T780 gedefault780;
extern T781 gedefault781;
extern T782 gedefault782;
extern T783 gedefault783;
extern T784 gedefault784;
extern T785 gedefault785;
extern T786 gedefault786;
extern T787 gedefault787;
extern T788 gedefault788;
extern T789 gedefault789;
extern T790 gedefault790;
extern T791 gedefault791;
extern T792 gedefault792;
extern T793 gedefault793;
extern T794 gedefault794;
extern T795 gedefault795;
extern T796 gedefault796;
extern T797 gedefault797;
extern T798 gedefault798;
extern T799 gedefault799;
extern T800 gedefault800;
extern T801 gedefault801;
extern T802 gedefault802;
extern T803 gedefault803;
extern T804 gedefault804;
extern T805 gedefault805;
extern T806 gedefault806;
extern T807 gedefault807;
extern T808 gedefault808;
extern T809 gedefault809;
extern T811 gedefault811;
extern T812 gedefault812;
extern T813 gedefault813;
extern T814 gedefault814;
extern T816 gedefault816;
extern T819 gedefault819;
extern T820 gedefault820;
extern T823 gedefault823;
extern T824 gedefault824;
extern T825 gedefault825;
extern T827 gedefault827;
extern T829 gedefault829;
extern T831 gedefault831;
extern T832 gedefault832;
extern T833 gedefault833;
extern T834 gedefault834;
extern T835 gedefault835;
extern T836 gedefault836;
extern T838 gedefault838;
extern T839 gedefault839;
extern T840 gedefault840;
extern T841 gedefault841;
extern T842 gedefault842;
extern T844 gedefault844;
extern T845 gedefault845;
extern T846 gedefault846;
extern T848 gedefault848;
extern T850 gedefault850;
extern T851 gedefault851;
extern T852 gedefault852;
extern T853 gedefault853;
extern T855 gedefault855;
extern T858 gedefault858;
extern T859 gedefault859;
extern T860 gedefault860;
extern T862 gedefault862;
extern T863 gedefault863;
extern T864 gedefault864;
extern T865 gedefault865;
extern T866 gedefault866;
extern T867 gedefault867;
extern T870 gedefault870;
extern T871 gedefault871;
extern T872 gedefault872;
extern T873 gedefault873;
extern T874 gedefault874;
extern T875 gedefault875;
extern T876 gedefault876;
extern T877 gedefault877;
extern T878 gedefault878;
extern T879 gedefault879;
extern T880 gedefault880;
extern T881 gedefault881;
extern T882 gedefault882;
extern T883 gedefault883;
extern T886 gedefault886;
extern T887 gedefault887;
extern T888 gedefault888;
extern T889 gedefault889;
extern T890 gedefault890;
extern T891 gedefault891;
extern T892 gedefault892;
extern T893 gedefault893;
extern T894 gedefault894;
extern T895 gedefault895;
extern T896 gedefault896;
extern T897 gedefault897;
extern T898 gedefault898;
extern T899 gedefault899;
extern T900 gedefault900;
extern T901 gedefault901;
extern T902 gedefault902;
extern T903 gedefault903;
extern T905 gedefault905;
extern T906 gedefault906;
extern T907 gedefault907;
extern T908 gedefault908;
extern T909 gedefault909;
extern T910 gedefault910;
extern T911 gedefault911;
extern T912 gedefault912;
extern T913 gedefault913;
extern T914 gedefault914;
extern T916 gedefault916;
extern T918 gedefault918;
extern T920 gedefault920;
extern T921 gedefault921;
extern T924 gedefault924;
extern T925 gedefault925;
extern T926 gedefault926;
extern T927 gedefault927;
extern T928 gedefault928;
extern T929 gedefault929;
extern T931 gedefault931;
extern T932 gedefault932;
extern T933 gedefault933;
extern T934 gedefault934;
extern T935 gedefault935;
extern T936 gedefault936;
extern T938 gedefault938;
extern T940 gedefault940;
extern T941 gedefault941;
extern T943 gedefault943;
extern T944 gedefault944;
extern T946 gedefault946;
extern T947 gedefault947;
extern T948 gedefault948;
extern T949 gedefault949;
extern T950 gedefault950;
extern T951 gedefault951;
extern T952 gedefault952;
extern T953 gedefault953;
extern T954 gedefault954;
extern T955 gedefault955;
extern T956 gedefault956;
extern T957 gedefault957;
extern T958 gedefault958;
extern T959 gedefault959;
extern T960 gedefault960;
extern T961 gedefault961;
extern T962 gedefault962;
extern T967 gedefault967;
extern T968 gedefault968;
extern T969 gedefault969;
extern T970 gedefault970;
extern T971 gedefault971;
extern T973 gedefault973;
extern T974 gedefault974;
extern T975 gedefault975;
extern T976 gedefault976;
extern T977 gedefault977;
extern T978 gedefault978;
extern T979 gedefault979;
extern T980 gedefault980;
extern T981 gedefault981;
extern T982 gedefault982;
extern T984 gedefault984;
extern T986 gedefault986;
extern T987 gedefault987;
extern T988 gedefault988;
extern T989 gedefault989;
extern T990 gedefault990;
extern T991 gedefault991;
extern T992 gedefault992;
extern T993 gedefault993;
extern T994 gedefault994;
extern T995 gedefault995;
extern T996 gedefault996;
extern T997 gedefault997;
extern T998 gedefault998;
extern T999 gedefault999;
extern T1000 gedefault1000;
extern T1001 gedefault1001;
extern T1002 gedefault1002;
extern T1004 gedefault1004;
extern T1005 gedefault1005;
extern T1006 gedefault1006;
extern T1007 gedefault1007;
extern T1008 gedefault1008;
extern T1009 gedefault1009;
extern T1010 gedefault1010;
extern T1011 gedefault1011;
extern T1012 gedefault1012;
extern T1013 gedefault1013;
extern T1014 gedefault1014;
extern T1015 gedefault1015;
extern T1016 gedefault1016;
extern T1017 gedefault1017;
extern T1018 gedefault1018;
extern T1019 gedefault1019;
extern T1021 gedefault1021;
extern T1022 gedefault1022;
extern T1023 gedefault1023;
extern T1024 gedefault1024;
extern T1025 gedefault1025;
extern T1026 gedefault1026;
extern T1027 gedefault1027;
extern T1028 gedefault1028;
extern T1029 gedefault1029;
extern T1030 gedefault1030;
extern T1031 gedefault1031;
extern T1032 gedefault1032;
extern T1033 gedefault1033;
extern T1034 gedefault1034;
extern T1035 gedefault1035;
extern T1036 gedefault1036;
extern T1037 gedefault1037;
extern T1038 gedefault1038;
extern T1039 gedefault1039;
extern T1040 gedefault1040;
extern T1041 gedefault1041;
extern T1042 gedefault1042;
extern T1044 gedefault1044;
extern T1045 gedefault1045;
extern T1046 gedefault1046;
extern T1047 gedefault1047;
extern T1048 gedefault1048;
extern T1049 gedefault1049;
extern T1050 gedefault1050;
extern T1051 gedefault1051;
extern T1052 gedefault1052;
extern T1054 gedefault1054;
extern T1055 gedefault1055;
extern T1056 gedefault1056;
extern T1057 gedefault1057;
extern T1058 gedefault1058;
extern T1059 gedefault1059;
extern T1060 gedefault1060;
extern T1061 gedefault1061;
extern T1062 gedefault1062;
extern T1063 gedefault1063;
extern T1064 gedefault1064;
extern T1065 gedefault1065;
extern T1066 gedefault1066;
extern T1067 gedefault1067;
extern T1068 gedefault1068;
extern T1069 gedefault1069;
extern T1070 gedefault1070;
extern T1071 gedefault1071;
extern T1072 gedefault1072;
extern T1073 gedefault1073;
extern T1074 gedefault1074;
extern T1075 gedefault1075;
extern T1076 gedefault1076;
extern T1077 gedefault1077;
extern T1078 gedefault1078;
extern T1079 gedefault1079;
extern T1084 gedefault1084;
extern T1085 gedefault1085;
extern T1086 gedefault1086;
extern T1087 gedefault1087;
extern T1088 gedefault1088;
extern T1089 gedefault1089;
extern T1090 gedefault1090;
extern T1091 gedefault1091;
extern T1092 gedefault1092;
extern T1093 gedefault1093;
extern T1094 gedefault1094;
extern T1095 gedefault1095;
extern T1096 gedefault1096;
extern T1097 gedefault1097;
extern T1098 gedefault1098;
extern T1099 gedefault1099;
extern T1100 gedefault1100;
extern T1101 gedefault1101;
extern T1102 gedefault1102;
extern T1103 gedefault1103;
extern T1104 gedefault1104;
extern T1105 gedefault1105;
extern T1106 gedefault1106;
extern T1107 gedefault1107;
extern T1108 gedefault1108;
extern T1109 gedefault1109;
extern T1110 gedefault1110;
extern T1111 gedefault1111;
extern T1112 gedefault1112;
extern T1114 gedefault1114;
extern T1115 gedefault1115;
extern T1116 gedefault1116;
extern T1117 gedefault1117;
extern T1118 gedefault1118;
extern T1120 gedefault1120;
extern T1121 gedefault1121;
extern T1122 gedefault1122;
extern T1123 gedefault1123;
extern T1124 gedefault1124;
extern T1125 gedefault1125;
extern T1126 gedefault1126;
extern T1127 gedefault1127;
extern T1128 gedefault1128;
extern T1129 gedefault1129;
extern T1130 gedefault1130;
extern T1131 gedefault1131;
extern T1132 gedefault1132;
extern T1133 gedefault1133;
extern T1134 gedefault1134;
extern T1135 gedefault1135;
extern T1136 gedefault1136;
extern T1138 gedefault1138;
extern T1139 gedefault1139;
extern T1140 gedefault1140;
extern T1141 gedefault1141;
extern T1142 gedefault1142;
extern T1143 gedefault1143;
extern T1144 gedefault1144;
extern T1145 gedefault1145;
extern T1146 gedefault1146;
extern T1147 gedefault1147;
extern T1148 gedefault1148;
extern T1149 gedefault1149;
extern T1150 gedefault1150;
extern T1151 gedefault1151;
extern T1152 gedefault1152;
extern T1153 gedefault1153;
extern T1155 gedefault1155;
extern T1156 gedefault1156;
extern T1157 gedefault1157;
extern T1158 gedefault1158;
extern T1160 gedefault1160;
extern T1161 gedefault1161;
extern T1162 gedefault1162;
extern T1163 gedefault1163;
extern T1164 gedefault1164;
extern T1170 gedefault1170;
extern T1171 gedefault1171;
extern T1172 gedefault1172;
extern T1175 gedefault1175;
extern T1176 gedefault1176;
extern T1177 gedefault1177;
extern T1178 gedefault1178;
extern T1179 gedefault1179;
extern T1180 gedefault1180;
extern T1182 gedefault1182;
extern T1184 gedefault1184;
extern T1185 gedefault1185;
extern T1187 gedefault1187;
extern T1188 gedefault1188;
extern T1190 gedefault1190;
extern T1191 gedefault1191;
extern T1192 gedefault1192;
extern T1193 gedefault1193;
extern T1194 gedefault1194;
extern T1195 gedefault1195;
extern T1196 gedefault1196;
extern T1197 gedefault1197;
extern T1198 gedefault1198;
extern T1199 gedefault1199;
extern T1200 gedefault1200;
extern T1202 gedefault1202;
extern T1203 gedefault1203;
extern T1204 gedefault1204;
extern T1205 gedefault1205;
extern T1206 gedefault1206;
extern T1208 gedefault1208;
extern T1210 gedefault1210;
extern T1211 gedefault1211;
extern T1212 gedefault1212;
extern T1214 gedefault1214;
extern T1215 gedefault1215;
extern T1217 gedefault1217;
extern T1218 gedefault1218;
extern T1219 gedefault1219;
extern T1220 gedefault1220;
extern T1223 gedefault1223;
extern T1224 gedefault1224;
extern T1230 gedefault1230;
extern T1231 gedefault1231;
extern T1232 gedefault1232;
extern T1233 gedefault1233;
extern T1235 gedefault1235;
extern T1236 gedefault1236;
extern T1237 gedefault1237;
extern T1238 gedefault1238;
extern T1239 gedefault1239;
extern T1240 gedefault1240;
extern T1241 gedefault1241;
extern T1242 gedefault1242;
extern T1243 gedefault1243;
extern T1244 gedefault1244;
extern T1245 gedefault1245;
extern T1251 gedefault1251;
extern T1252 gedefault1252;
extern T1255 gedefault1255;
extern T1256 gedefault1256;
extern T1259 gedefault1259;
extern T1260 gedefault1260;
extern T1262 gedefault1262;
extern T1263 gedefault1263;
extern T1264 gedefault1264;
extern T1266 gedefault1266;
extern T1267 gedefault1267;
extern T1268 gedefault1268;
extern T1269 gedefault1269;
extern T1270 gedefault1270;
extern T1271 gedefault1271;
extern T1272 gedefault1272;
extern T1273 gedefault1273;
extern T1274 gedefault1274;
extern T1275 gedefault1275;
extern T1277 gedefault1277;
extern T1278 gedefault1278;
extern T1279 gedefault1279;
extern T1280 gedefault1280;
extern T1281 gedefault1281;
extern T1282 gedefault1282;
extern T1284 gedefault1284;
extern T1286 gedefault1286;
extern T1287 gedefault1287;
extern T1288 gedefault1288;
extern T1289 gedefault1289;
extern T1291 gedefault1291;
extern T1292 gedefault1292;
extern T1294 gedefault1294;
extern T1296 gedefault1296;
extern T1297 gedefault1297;
extern T1298 gedefault1298;
extern T1299 gedefault1299;
extern T1300 gedefault1300;
extern T1302 gedefault1302;
extern T1304 gedefault1304;
extern T1305 gedefault1305;
extern T1307 gedefault1307;
extern T1308 gedefault1308;
extern T1309 gedefault1309;
extern T1311 gedefault1311;
extern T1312 gedefault1312;
extern T1313 gedefault1313;
extern T1314 gedefault1314;
extern T1317 gedefault1317;
extern T1318 gedefault1318;
extern T1319 gedefault1319;
extern T1327 gedefault1327;
extern T1328 gedefault1328;
extern T1330 gedefault1330;
extern T1331 gedefault1331;
extern T1337 gedefault1337;
extern T1338 gedefault1338;
extern T1339 gedefault1339;
extern T1342 gedefault1342;
extern T1346 gedefault1346;
extern T1349 gedefault1349;
extern T1358 gedefault1358;
extern T1359 gedefault1359;
extern T1362 gedefault1362;
extern T1363 gedefault1363;
extern T1364 gedefault1364;
extern T1365 gedefault1365;
extern T1366 gedefault1366;
extern T1367 gedefault1367;
extern T1368 gedefault1368;
extern T1369 gedefault1369;
extern T1370 gedefault1370;
extern T1371 gedefault1371;
extern T1372 gedefault1372;
extern T1373 gedefault1373;
extern T1374 gedefault1374;
extern T1375 gedefault1375;
extern T1376 gedefault1376;
extern T1377 gedefault1377;
extern T1378 gedefault1378;
extern T1381 gedefault1381;
extern T1382 gedefault1382;
extern T1383 gedefault1383;
extern T1384 gedefault1384;
extern T1385 gedefault1385;
extern T1386 gedefault1386;
extern T1387 gedefault1387;
extern T1388 gedefault1388;
extern T1390 gedefault1390;
extern T1392 gedefault1392;
extern T1393 gedefault1393;
extern T1396 gedefault1396;
extern T1398 gedefault1398;
extern T1399 gedefault1399;
extern T1405 gedefault1405;
extern T1406 gedefault1406;
extern T1407 gedefault1407;
extern T1408 gedefault1408;
extern T1409 gedefault1409;
extern T1410 gedefault1410;
extern T1411 gedefault1411;
extern T1416 gedefault1416;
extern T1418 gedefault1418;
extern T1419 gedefault1419;
extern T1420 gedefault1420;
extern T1423 gedefault1423;

extern T0* gems(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1654(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1643T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1652(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1655(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T63x8530(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T144x11460T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T144x11446(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T144x11442T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T144x11439(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T144x11459T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T144x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T144x11457T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T144x11458T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T144x11448(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T144x11447(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T144x11476(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T144x11455(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T144x11440(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T144x11438(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T144x11469(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T144x11462(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T144x11461(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T144x11449(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T144x11435(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T144x11479(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T144x11441(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T145x5939(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T145x5883T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T145x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T145x5879(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T145x5878(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T145x5943(T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T145x5825(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T145x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T145x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T145x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T145x6002T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T145x6005T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T145x5980T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T145x6003T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T145x6008T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T145x6011T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T145x6009T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T145x6010T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T145x6006T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T145x5990T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T145x5983T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T145x5818(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T145x5975T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T145x5826(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T145x6007T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T145x5998T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T145x6001T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T145x5999T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T145x5979T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T145x6000T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T145x5981T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T145x5985T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T145x5984T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T145x5995T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T145x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T145x5829(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T145x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.first_seed */
extern T6 T147x11584(T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T147x11503(T0* C);
/* Call to ET_QUERY.name */
extern T0* T147x11581(T0* C);
/* Call to ET_QUERY.type */
extern T0* T147x11582(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T147x11508(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T147x11504(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T147x11507(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T147x23(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T147x11583(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T147x11544T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T147x11543(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T147x11533(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T147x11662(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T147x11579T6(T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T147x11595(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T147x11535(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T147x11534(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T147x11594(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T147x11537(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T147x11538(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T147x11539(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T147x11540(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T147x11530(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T147x11531(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T147x11566T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T149x11544T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T149x11584(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T149x11543(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T149x11581(T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T149x11508(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T149x11504(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T149x11507(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T149x23(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T149x11583(T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T149x11546T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T149x11579T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T149x11530(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T149x11531(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T149x11566T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T154x5909T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T154x5943(T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T154x5884T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.to_text */
extern T0* T154x5939(T0* C);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T154x5934T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T154x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T154x5932T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.last_leaf */
extern T0* T154x5947(T0* C);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T154x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_named_type */
extern T1 T154x5897(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T154x5898(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T154x5921T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T154x5924T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type */
extern T0* T154x5885T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T154x5922T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T154x5926T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T154x5929T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T154x5927T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T154x5928T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T154x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T154x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T154x5975T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T154x5899T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.direct_base_class */
extern T0* T154x5883T0(T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T154x5890T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_like_current */
extern T1 T154x5896(T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T154x5891T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T154x5933T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T154x5931T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T154x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T154x5895T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_type */
extern T1 T154x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T154x5917T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T154x5920T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T154x5918T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T154x5919T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_formal_types */
extern T1 T154x5903T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T154x5901T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T154x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T154x5913T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T154x5914T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T154x5915T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T154x5911T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T154x5916T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T154x5912T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T155x5984T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T155x5977(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T155x5981T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T155x5985T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T155x6016T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T155x5983T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T155x6014T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T155x5979T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T155x6013T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T155x6008T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T155x6006T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T155x6012T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T155x6011T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T155x6009T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T155x6010T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T155x6015T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T155x5997T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T155x6002T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T155x5998T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T155x6000T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T155x6005T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T155x6001T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T155x5999T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T155x6003T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T155x5995T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T155x5980T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.name */
extern T0* T156x10994(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T156x5946(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T156x5947(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T156x10992T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T156x10996(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T156x10995(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T156x5943(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T156x11001(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T156x10999(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T156x11000(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T156x23(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T156x11032(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T156x11033(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T156x11022(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T156x11002(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T159x5818(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T159x5826(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T159x5883T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T159x5939(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T159x5878(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T159x5879(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T159x5829(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T159x5897(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T159x5797(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T159x5943(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T162x11479(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.other_types */
extern T0* T162x11481(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.first_type */
extern T0* T162x11480(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T162x11484(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T162x11477(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T162x11476(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T162x11483(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T162x11474T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_subset */
extern T1 T162x11478T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T164x5962(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T164x5961(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T164x5964T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T164x5960(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T167x6848(T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T179x11503(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T179x11581(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T179x11579T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T179x11505(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T179x11596(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T179x11515(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T179x11584(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T179x11531(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T179x11504(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T179x11594(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T179x11536(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T179x11583(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T179x11544T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.other_seeds */
extern T0* T179x11585(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T179x11535(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T179x11534(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T179x11582(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T179x11533(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T179x11514(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T179x11598(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T179x11597(T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T179x11595(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T179x11517(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T179x11593(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T179x11511(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T179x11510(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T179x11530(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T179x11538(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T179x11539(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T179x11540(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T179x11567T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T179x11568T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T179x11550T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T179x11578(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T179x11537(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T179x23(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T181x5947(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T181x5943(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T181x11055(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T181x11072(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T185x5947(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T185x5943(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T185x11039(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T206x11066T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T206x11067(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T206x11065(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T208x11124(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T208x11123(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T208x5943(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T209x10996(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T209x10995(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T209x5943(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T209x11001(T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T209x11031(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T209x11029(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T209x11010(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T209x11015(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T209x11016(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T209x11003(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T209x11004(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T209x11026(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T209x11024(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T209x11023(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T209x11021(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T209x11020(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T209x11019(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T209x11018(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T209x11017(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T209x11014(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T209x11013(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T209x11012(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T209x11011(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T209x11009(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T209x11008(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T209x11006(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T209x11005(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T209x11027(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T216x16706(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T216x16703(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T216x16698(T0* C);
/* Call to ET_AGENT.index */
extern T6 T216x11072(T0* C);
/* Call to ET_AGENT.target */
extern T0* T216x16697(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T216x16700(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T216x16699(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T218x16720(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T218x16719(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T218x16718(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T218x16717(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T218x16716(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T218x16715(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T219x11067(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T219x11066T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T219x11065(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T225x5943(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T225x11072(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T225x16762(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T228x11072(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T229x5943(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T229x11072(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T229x11071(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T231x11071(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T231x11072(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T232x5943(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T232x11057(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T237x11598(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T237x11595(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T237x11600(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T237x11594(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T237x11611(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T237x11610(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T237x11607(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T237x11591(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T237x11609(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T237x11593(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T237x11596(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T237x11599(T0* C);
/* Call to ET_POSITION.column */
extern T6 T246x11108(T0* C);
/* Call to ET_POSITION.line */
extern T6 T246x11107(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T246x11109(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T246x11113(T0* C);
/* Call to XM_NODE.parent */
extern T0* T261x9586(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T299x11037(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T299x11036(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T299x5943(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T299x11038T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T324x5087(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T324x18652T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T324x5092(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T324x18663(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T324x5083(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T324x18661(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T440x11072(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T440x19886(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T448x20190(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T448x11072(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T448x20182(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T448x20192(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T448x20181(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T448x5943(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T448x20183(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T534x5972T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T541x5943(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T541x11036(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T552x5970T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T552x5968(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T552x5969(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T596x18309(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T596x18307(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T596x18308(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T608x5942(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T616x5975T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T616x5974(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T617x11041(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T621x5945(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T621x5943(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T634x16773(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T635x16774(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T648x21278T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T648x11013(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T648x11017(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T648x11023(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T648x11024(T0* C);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T648x10995(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T648x5943(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T648x11030T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T648x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T648x11002(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T648x21264(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T648x21263(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T648x11027(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T648x11022(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T682x5956T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T682x5961(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T693x11123(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T693x11122(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T693x11121(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T693x11124(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T693x11072(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T704x11058(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T713x5943(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T713x5947(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T713x5976(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T733x11084(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T733x11082(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T733x11083(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T735x11086(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T738x5943(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T770x5943(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T778x16699(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T778x11610(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T778x16698(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T778x16697(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T778x11611(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T778x11609(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T810x11075(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T815x5943(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T815x11062(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T817x11060(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T821x11611(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T821x11610(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T821x11609(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T915x11214(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T915x11226(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T915x11222T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T915x11223(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T915x11225(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T915x11213(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T915x11211(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T915x11212(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T918x20805(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T918x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T922x5934T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T922x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T922x5932T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T922x5939(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T922x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T922x5933T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T922x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T922x5931T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T922x5926T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T922x5929T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T922x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T922x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T922x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T922x5927T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T922x5928T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T922x5899T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T922x5914T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T922x5915T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T922x5917T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T922x5911T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T922x5920T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T922x5916T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T922x5918T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T922x5903T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T922x5901T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T922x5912T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T922x5921T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T922x5884T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T922x5913T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T922x5919T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T922x5924T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T922x5922T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T922x5909T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T922x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1186x11590(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1186x11577(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1186x11586(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1186x11588(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1186x11575(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1186x11589(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1186x11576(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1186x11574(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1186x11587(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1250x11595(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1254x19913(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1254x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1254x11007(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1261x24621(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1261x24620(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1261x24619(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1261x24622(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.compound */
extern T0* T1325x22446(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.rescue_clause */
extern T0* T1325x22448(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.locals */
extern T0* T1325x11611(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1325x16699(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1326x18460(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1326x18462(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1326x11611(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1326x11583(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1326x11595(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1326x11537(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1355x11072(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1356x11609(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1356x11610(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1357x11610(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1404x5943(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1646(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T70x8660(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T70x8653T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T70x8645T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T70x8647T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T70x8659T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T97x9870T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T98x9926T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T98x9927T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T98x9932(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T98x9925(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T98x9931T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T98x9933T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T98x9930T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T98x9934T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T98x9928T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T98x9929T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T98x9924(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T144x11463T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T144x11464T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T144x11443(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T144x11445T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T144x11485T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T144x11470T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T144x11456T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T145x5882(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T145x5952T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T147x11606(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T147x11603(T0* C);
/* Call to ET_QUERY.reset */
extern void T147x11500(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T147x11561T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T149x11606(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T149x11603(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T149x11500(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T149x11561T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T154x5952T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T154x5882(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T154x5940T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T156x10997T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T156x10993(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T162x11485T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T167x6904T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T167x7018T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T167x6885T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T167x6961T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T167x6899T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T167x6948T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T167x7022T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T167x7003T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T167x6906T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T167x6870T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T167x6886T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T167x6912T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T167x6983T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T167x6967T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T167x6955T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T167x6868T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T167x6867T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T167x6866T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T167x6977T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T167x6978T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T167x6872T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T167x6873T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T167x6897T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T167x6945T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T167x7029T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T167x6950T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T167x6892T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T167x6934T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T167x6995T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T167x6918T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T167x6932T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T167x6992T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T167x6916T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T167x6989T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T167x7023T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T167x6985T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T167x6993T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T167x6883T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T167x6990T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T167x7005T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T167x6926T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T167x6963T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T167x6928T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T167x7017T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T167x6910T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T167x6936T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T167x6998T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T167x7002T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T167x7021T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T167x6878T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T167x6933T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T167x6994T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T167x6913T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T167x6991T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T167x6915T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T167x6988T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T167x6905T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T167x6881T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T167x6880T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T167x6935T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T167x7028T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T167x7032T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T167x7012T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T167x6951T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T167x7031T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T167x7010T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T167x7020T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T167x7035T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T167x7011T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T167x6882T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T167x7036T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T167x6871T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T167x6914T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T167x6917T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T167x6869T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T167x7033T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T167x6896T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T167x6884T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T167x6931T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T167x6890T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T167x7016T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T167x6909T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T167x6952T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T179x11602(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T179x11601(T0* C);
/* Call to ET_FEATURE.process */
extern void T179x5952T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T179x11605(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T179x11604(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T179x11558T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T179x11557T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T179x11549T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T179x11569T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T179x11554T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T179x11560T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T179x11559T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T179x11565(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T179x11564(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T179x11555T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T179x11556T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T179x11551T6(T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T181x5952T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T181x11059(T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T209x10997T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T216x16705T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T216x5952T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.process */
extern void T218x5952T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T225x11073T6(T0* C, T6 a1);
/* Call to ET_OPERAND.set_index */
extern void T228x11073T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T229x5952T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T229x11073T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T229x11070(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T231x5952T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T231x11070(T0* C);
/* Call to XM_NODE.node_set_parent */
extern void T261x9594T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T261x9596T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T299x11035(T0* C);
/* Call to KI_CHARACTER_OUTPUT_STREAM.put_character */
extern void T302x8653T2(T0* C, T2 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T324x18648(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T324x18647T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T324x18653T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T324x18644(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T324x5098(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T324x18646T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T440x11073T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T448x11073T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T448x20196(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T448x20195T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T448x20193T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T448x20194T0(T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T617x11040(T0* C);
/* Call to ET_ALIAS_NAME.reset */
extern void T648x10993(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T648x21276(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T648x21275(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T689x5952T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T689x11126(T0* C);
/* Call to ET_CHOICE.reset */
extern void T733x11081(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T738x11081(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T770x10993(T0* C);
/* Call to ET_ASSERTION.process */
extern void T817x5952T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T817x11059(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type */
extern void T1226x11488T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1355x11073T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c26(void);
/* GEC.report_cannot_read_error */
extern void T21f32(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T72f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T72f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T72f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T72f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T72f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T909f1(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T909f27(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T908f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge333os9289;
extern T0* ge333ov9289;
extern T0* T909f32(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T908c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T139f1(T0* C, T6 a1);
/* INTEGER_32.to_character */
extern T2 T6f15(T6* C);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge269os2769;
extern T0* ge269ov2769;
extern T0* T909f26(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T139c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f6(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge400os11319;
extern T6 ge400ov11319;
extern T6 T138f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T138f2(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge323os1659;
extern T0* ge323ov1659;
extern T0* T909f25(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T138c5(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T909f24(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T908f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T908f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f38(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f43(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f5(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f12(T0* C);
/* INTEGER_32.max */
extern T6 T6f16(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f11(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T909f23(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T909f38(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T909f68(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T909f78(T0* C);
/* STRING_8.make */
extern void T17f39(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c39(T6 a1);
/* STRING_8.make_area */
extern void T17f44(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c9(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f42(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T909f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T909f31(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T75f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge264os1658;
extern T0* ge264ov1658;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T75c4(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge272os1583;
extern T0* ge272ov1583;
extern T0* T72f1(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_VERSION_NUMBER.default_message */
extern T0* T64f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T64f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern unsigned char ge318os1575;
extern T0* ge318ov1575;
extern T0* T64f6(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f11(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f37(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f8(T0* C, T0* a1, T0* a2);
/* STRING_8.infix "+" */
extern T0* T17f7(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f10(T0* C, T6 a1);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T909f13(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T909f60(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T909c60(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T909f72(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T909f46(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T909f46p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T909f60p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T909f79(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T908f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T908f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T909f3(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f4(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T909f50(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T909f28(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge345os23717;
extern T0* ge345ov23717;
extern T0* T908f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T74c8(void);
/* UC_STRING.make */
extern void T74f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T74f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T74f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T74f2(T0* C);
/* UC_STRING.capacity */
extern T6 T74f2p1(T0* C);
/* UC_STRING.make */
extern void T74f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T74f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T74f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T908f23(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T909f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T909f30(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T908f25(T0* C);
/* UC_UTF8_STRING.infix "+" */
extern T0* T909f12(T0* C, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T909f57(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge414os9227;
extern T0* ge414ov9227;
extern T0* T909f47(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T909f59(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T909f77(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T909f85(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T909f76(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T909f86(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T909f75(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T909f74(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T909f87(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T909f37(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T909f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T909f66(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T909f66p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T909f57p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T909f73(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T909f49(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1174s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T909f44(T0* C);
/* ARRAY [STRING].item */
extern T0* T220f5(T0* C, T6 a1);
/* ARRAY [STRING].valid_index */
extern T1 T220f4(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T909f34(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T883f1(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T883f17(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T883f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T883f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1170f1(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* ARRAY [NATURAL_64].item */
extern T11 T1274f4(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2060os22568;
extern T0* ge2060ov22568;
extern T0* T883f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1170c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* ARRAY [NATURAL_64].put */
extern void T1274f6(T0* C, T11 a1, T6 a2);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* ARRAY [NATURAL_64].make */
extern T0* T1274c5(T6 a1, T6 a2);
/* ARRAY [NATURAL_64].make_area */
extern void T1274f7(T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make */
extern T0* T1273c2(T6 a1);
/* STRING_8.has */
extern T1 T17f31(T0* C, T2 a1);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge36os93;
extern T0* ge36ov93;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1232c2(T6 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(T6* C);
/* UC_UTF8_STRING.code */
extern T10 T909f43(T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f30(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f28(T6* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T883f22(T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern unsigned char ge2057os1256;
extern T0* ge2057ov1256;
extern T0* T909f42(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T883f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T883f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T883f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c58(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T883f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T883c16(void);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f20(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T909f33(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T909f41(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T883f2(T0* C);
/* STRING_8.is_integer */
extern T1 T17f24(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f27(T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f23(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T909f14(T0* C, T6 a1);
/* UC_UTF8_STRING.append_character */
extern void T909f58(T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f9(T0* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f9(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T909f61(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T909f80(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T909f61p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f51(T0* C);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f7(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f23(T0* C);
/* STRING_8.copy */
extern void T17f54(T0* C, T0* a1);
/* UT_VERSION_NUMBER.string_ */
extern T0* T64f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T62c7(T0* a1);
/* ARRAY [STRING].put */
extern void T220f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING].make */
extern T0* T220c7(T6 a1, T6 a2);
/* ARRAY [STRING].make_area */
extern void T220f9(T0* C, T6 a1);
/* SPECIAL [STRING].make */
extern T0* T102c5(T6 a1);
/* GEC.process_universe */
extern void T21f31(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T57f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge322os1578;
extern T0* ge322ov1578;
extern T0* T57f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T60c7(void);
/* KL_SHELL_COMMAND.system */
extern void T57f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T57f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T909f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f3(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2176os4648;
extern T0* ge2176ov4648;
extern T0* T57f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T57f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c46(T14 a1);
/* STRING_8.from_c */
extern void T17f49(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T886f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T886f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f59(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T398f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1252f2(T1252* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1252f3(T1252* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T886f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T886f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T398f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T398c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T886f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2057os1255;
extern T0* ge2057ov1255;
extern T0* T17f22(T0* C);
/* C_STRING.make_empty */
extern T0* T886c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T398c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T1011f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T1011f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T1011c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T398f2(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T57f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T909f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f6(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T57c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T57f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T66f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T66f7(T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T66f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T66f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T110f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge381os8471;
extern T0* ge381ov8471;
extern T0* T66f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T110c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T66f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T65f1(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T65f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T65f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T65f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T65f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T65f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T65f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T65f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T65f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge301os1579;
extern T0* ge301ov1579;
extern T0* T21f22(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge301os1582;
extern T0* ge301ov1582;
extern T0* T21f25(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T66c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge397os8439;
extern T1 ge397ov8439;
extern T1 T60f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T60f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge397os8443;
extern T0* ge397ov8443;
extern T0* T60f5(T0* C);
/* STRING_8.is_equal */
extern T1 T17f18(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f21(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T60f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T110f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T110f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge301os1580;
extern T0* ge301ov1580;
extern T0* T21f24(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T65c20(void);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge397os8438;
extern T1 ge397ov8438;
extern T1 T60f1(T0* C);
/* GEC.operating_system */
extern T0* T21f21(T0* C);
/* GEC.no_c_compile */
extern T1 T21f20(T0* C);
/* AP_FLAG.was_found */
extern T1 T32f1(T0* C);
/* ET_C_GENERATOR.generate */
extern void T56f293(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].wipe_out */
extern void T76f27(T0* C);
/* DS_ARRAYED_LIST [STRING].clear_items */
extern void T76f33(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_all_cursors_after */
extern void T76f32(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_next_cursor */
extern void T286f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_position */
extern void T286f8(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T56f297(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T56f299(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T52f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T52f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f163(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T56f62(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T199c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T56f298(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T196f26(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T196f33(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T196f36(T0* C, T14 a1);
/* DS_HASH_TABLE [STRING, STRING].replace */
extern void T40f58(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].item_storage_put */
extern void T40f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].search_position */
extern void T40f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_item */
extern T6 T40f17(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].hash_position */
extern T6 T40f8(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T909f17(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T909f17p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T193f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T43f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T43f2(T0* C);
/* DS_HASH_TABLE [STRING, STRING].key_storage_item */
extern T0* T40f16(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_item */
extern T6 T40f10(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].unset_found_item */
extern void T40f41(T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T198f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].value */
extern T0* T40f34(T0* C, T0* a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T198f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1038os7291;
extern T0* ge1038ov7291;
extern T0* T56f61(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T198c3(void);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T196f1(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T196f2(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T196f12(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T196f19(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T196f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T196f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f30p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T196f18(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T196c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T196f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T196f9(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T56f60(T0* C);
/* DS_HASH_TABLE [STRING, STRING].has */
extern T1 T40f32(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].item */
extern T0* T40f31(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].item_storage_item */
extern T0* T40f35(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].force */
extern void T40f57(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].key_storage_put */
extern void T40f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].slots_put */
extern void T40f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].clashes_put */
extern void T40f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].resize */
extern void T40f44(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_resize */
extern void T40f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER].resize */
extern T0* T105f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER].resized_area */
extern T0* T103f4(T0* C, T6 a1);
/* SPECIAL [INTEGER].copy_data */
extern void T103f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER].move_data */
extern void T103f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].overlapping_move */
extern void T103f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].non_overlapping_move */
extern void T103f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].make */
extern T0* T103c7(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].special_integer_ */
extern unsigned char ge270os4591;
extern T0* ge270ov4591;
extern T0* T40f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER].default_create */
extern T0* T105c4(void);
/* DS_HASH_TABLE [STRING, STRING].key_storage_resize */
extern void T40f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].resize */
extern T0* T106f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING].resized_area */
extern T0* T102f3(T0* C, T6 a1);
/* SPECIAL [STRING].copy_data */
extern void T102f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING].move_data */
extern void T102f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].overlapping_move */
extern void T102f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].non_overlapping_move */
extern void T102f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING, STRING].item_storage_resize */
extern void T40f50(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_resize */
extern void T40f49(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_modulus */
extern T6 T40f19(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_capacity */
extern T6 T40f7(T0* C, T6 a1);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T45f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T45f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge379os4644;
extern T0* ge379ov4644;
extern T0* T45f2(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T45f3(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T195f1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T195f301(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T195f312(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T195f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T195f146(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T195f228(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T195f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T195f291(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1143os15627;
extern T6 ge1143ov15627;
extern T6 T195f55(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge400os11321;
extern T6 ge400ov11321;
extern T6 T138f3(T0* C);
/* KL_PLATFORM.old_maximum_integer */
extern T6 T138f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T195f191(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T195f290(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T858f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T195f289(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T858f5(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T195f288(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T195f294(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1149os15794;
extern T0* ge1149ov15794;
extern T0* T195f147(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T860c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T860f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T860f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T860f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T860c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T346f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T996c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T344c4(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge270os4589;
extern T0* ge270ov4589;
extern T0* T860f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T346c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1149os15786;
extern T0* ge1149ov15786;
extern T0* T195f163(T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T860f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T195f325(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T195f81(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T195f80(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T195f79(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T195f334(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T195f333(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T195f287(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T858f2(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T195f285(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T195f266(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T858f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T195f7(T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T859f2(T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T859f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T195f47(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T195f313(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T195f328(T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T195f46(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T195f45(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T195f2(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge321os1576;
extern T0* ge321ov1576;
extern T0* T56f59(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T45c5(void);
/* ET_C_GENERATOR.string_ */
extern T0* T56f58(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T195f300(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].item */
extern T0* T76f6(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f299(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f299p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T195f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T195f44(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T195f186(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T195f43(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T195f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T195f42(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T195f40(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T195f127(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T195f125(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T195f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T195f309(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T858f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T195f60(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T858f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T195f326(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1149os15795;
extern T0* ge1149ov15795;
extern T0* T195f143(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1143os15628;
extern T6 ge1143ov15628;
extern T6 T195f142(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T858f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T858f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T858f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T858f9(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T195f137(T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T195f218(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1149os15788;
extern T0* ge1149ov15788;
extern T0* T195f240(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T195f217(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T195f213(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T195f130(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T195f324(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T195f128(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T195f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T195f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T195f105(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T195f331(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T858f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T858f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T858f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T195f332(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T195f330(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T858f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T858f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T346f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T344f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T344f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T344f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T344f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T344f9(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T858f12(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T860f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T860f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T863f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1149os15797;
extern T0* ge1149ov15797;
extern T0* T195f155(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1149os15782;
extern T0* ge1149ov15782;
extern T0* T195f21(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1149os15792;
extern T0* ge1149ov15792;
extern T0* T195f239(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1149os15791;
extern T0* ge1149ov15791;
extern T0* T195f238(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1149os15790;
extern T0* ge1149ov15790;
extern T0* T195f237(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1149os15789;
extern T0* ge1149ov15789;
extern T0* T195f236(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1149os15793;
extern T0* ge1149ov15793;
extern T0* T195f235(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1149os15787;
extern T0* ge1149ov15787;
extern T0* T195f234(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1149os15783;
extern T0* ge1149ov15783;
extern T0* T195f233(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1149os15784;
extern T0* ge1149ov15784;
extern T0* T195f232(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1149os15785;
extern T0* ge1149ov15785;
extern T0* T195f230(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T195f153(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING].count */
extern T6 T220f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1149os15796;
extern T0* ge1149ov15796;
extern T0* T195f231(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T195f151(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T860f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1143os15626;
extern T0* ge1143ov15626;
extern T0* T195f148(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T195f83(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T195f329(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T195f57(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T858f16(T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T858f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T195f308(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T195f307(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T858f14(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f20(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T909f65(T0* C);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f306(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f306p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T195c298(void);
/* KL_SPECIAL_ROUTINES [INTEGER].make */
extern T0* T105f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER].make_area */
extern T0* T367c2(T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T195f298p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T195f305(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T195f323(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T195f322(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T195f321(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T195f320(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T195f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T195f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T195f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T195f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T195f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T195f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T195f304(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T195f303(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1149os15781;
extern T0* ge1149ov15781;
extern T0* T195f20(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T859c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T859f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T859f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T859f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T859f5(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f302p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1143os15625;
extern T0* ge1143ov15625;
extern T0* T195f19(T0* C);
/* STRING_8.put */
extern void T17f53(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T858c13(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].set_key_equality_tester */
extern void T40f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].internal_set_equality_tester */
extern void T100f6(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge273os7292;
extern T0* ge273ov7292;
extern T0* T56f41(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T193c2(void);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern void T40f37(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern T0* T40c37(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_with_equality_testers */
extern void T40f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].make */
extern T0* T100c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].new_cursor */
extern T0* T100f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING].make */
extern T0* T366c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].new_cursor */
extern T0* T40f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING, STRING].make */
extern T0* T104c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].make_sparse_container */
extern void T40f48(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_slots */
extern void T40f56(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_clashes */
extern void T40f55(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_key_storage */
extern void T40f54(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].make */
extern T0* T106f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING].make_area */
extern T0* T368c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].default_create */
extern T0* T106c3(void);
/* DS_HASH_TABLE [STRING, STRING].make_item_storage */
extern void T40f53(T0* C, T6 a1);
/* ET_C_GENERATOR.c_config */
extern T0* T56f57(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T56f508(T0* C, T0* a1);
/* UC_UTF8_STRING.index_of */
extern T6 T909f18(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T909f36(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f26(T0* C, T2 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T66f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T65f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].put */
extern void T40f59(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T909f64(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f47(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T909f63(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T909f83(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T909f81(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f52(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f56(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f50(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER].put_right */
extern void T67f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER].make */
extern T0* T67c3(T2 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T66f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T65f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T56f90(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T56f254(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T56f253(T0* C);
/* ET_C_GENERATOR.generate_c_code */
extern void T56f296(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge945os6562;
extern T0* ge945ov6562;
extern T0* T56f11(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T150c58(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T926f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T119f45(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T212f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T168f10(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T926f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T212f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T207f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T926f3(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T212f3(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T207f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T168c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T820f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1144c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T819c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge933os15140;
extern T0* ge933ov15140;
extern T0* T168f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T820c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge901os11750;
extern T0* ge901ov11750;
extern T0* T150f10(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T168c12(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T142f2(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T59f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T304c11(T0* a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T53f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T55f183(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T53f56(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T143f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T143f18(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T395f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T394f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T394f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T394f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T394f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T394f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T394c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T143f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T143f8(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T221c35(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T221f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern unsigned char ge928os11473;
extern T0* ge928ov11473;
extern T0* T221f16(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T200c11(void);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T222c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T222f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T222f16(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T197c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T197f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T197f16(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge934os5595;
extern T0* ge934ov5595;
extern T0* T53f45(T0* C);
/* ET_DYNAMIC_TYPE.make */
extern T0* T144c32(T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T144f11(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T217c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T217f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T217f16(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T397f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T397f3(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T160f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T160f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T143f2(T0* C, T6 a1);
/* ET_DO_PROCEDURE.make */
extern T0* T298c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge769os12991;
extern T0* ge769ov12991;
extern T0* T157f614(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T414f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge769os12439;
extern T0* ge769ov12439;
extern T0* T157f45(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T414c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T588f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T1067c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T587c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge784os6094;
extern T0* ge784ov6094;
extern T0* T414f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T588c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge769os12649;
extern T0* ge769ov12649;
extern T0* T157f109(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T166c23(void);
/* ET_KEYWORD.make_token */
extern void T166f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T166f25(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge764os2690;
extern T0* ge764ov2690;
extern T0* T166f2(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T157c791(void);
/* ET_DO_PROCEDURE.tokens */
extern T0* T298f10(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T119c94(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T119f102(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T119c102(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T119f103(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T119f3(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T139f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T119f25(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T912f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge267os2768;
extern T0* ge267ov2768;
extern T0* T119f24(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T912c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T190f42(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T190f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T190f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T190f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T190f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T190f48(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T190f47(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T846f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T846f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T189f32(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T189f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T189f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T189f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T189f40(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T189f38(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T189f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T842f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T842f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].wipe_out */
extern void T194f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_wipe_out */
extern void T194f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_wipe_out */
extern void T194f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_wipe_out */
extern void T194f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_wipe_out */
extern void T194f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].unset_found_item */
extern void T194f56(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].move_all_cursors_after */
extern void T194f55(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_next_cursor */
extern void T853f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_position */
extern void T853f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING].wipe_out */
extern void T192f42(T0* C);
/* DS_HASH_SET [STRING].slots_wipe_out */
extern void T192f55(T0* C);
/* DS_HASH_SET [STRING].clashes_wipe_out */
extern void T192f54(T0* C);
/* DS_HASH_SET [STRING].key_storage_wipe_out */
extern void T192f53(T0* C);
/* DS_HASH_SET [STRING].item_storage_wipe_out */
extern void T192f52(T0* C);
/* DS_HASH_SET [STRING].unset_found_item */
extern void T192f48(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors_after */
extern void T192f51(T0* C);
/* DS_HASH_SET_CURSOR [STRING].set_next_cursor */
extern void T285f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].set_position */
extern void T285f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].forth */
extern void T194f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_forth */
extern void T194f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].add_traversing_cursor */
extern void T194f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].remove_traversing_cursor */
extern void T194f67(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_item */
extern T6 T194f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_for_iteration */
extern T0* T194f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_key */
extern T0* T194f9(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_item */
extern T0* T194f14(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_for_iteration */
extern T1 T194f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_item */
extern T1 T194f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_item */
extern T1 T194f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].after */
extern T1 T194f1(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_after */
extern T1 T194f7(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].start */
extern void T194f46(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_start */
extern void T194f53(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_off */
extern T1 T194f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].is_empty */
extern T1 T194f32(T0* C);
/* DS_HASH_SET [STRING].forth */
extern void T192f41(T0* C);
/* DS_HASH_SET [STRING].cursor_forth */
extern void T192f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING].add_traversing_cursor */
extern void T192f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING].remove_traversing_cursor */
extern void T192f61(T0* C, T0* a1);
/* DS_HASH_SET [STRING].clashes_item */
extern T6 T192f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T56f315(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T56f377(T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9p1(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f34(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f48(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f33(T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28p1(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_for_iteration */
extern T0* T192f2(T0* C);
/* DS_HASH_SET [STRING].cursor_item */
extern T0* T192f5(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_storage_item */
extern T0* T192f7(T0* C, T6 a1);
/* DS_HASH_SET [STRING].after */
extern T1 T192f1(T0* C);
/* DS_HASH_SET [STRING].cursor_after */
extern T1 T192f4(T0* C, T0* a1);
/* DS_HASH_SET [STRING].start */
extern void T192f40(T0* C);
/* DS_HASH_SET [STRING].cursor_start */
extern void T192f49(T0* C, T0* a1);
/* DS_HASH_SET [STRING].cursor_off */
extern T1 T192f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING].is_empty */
extern T1 T192f30(T0* C);
/* ET_C_GENERATOR.print_main_function */
extern void T56f314(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T56f361(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T56f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T175f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T175f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T175f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T824f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T824f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T56f479(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T56f503(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T56f382(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T56f388(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T56f500(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T56f380(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T56f360(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T56f355(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T56f391(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T52f158(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T52f190(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge304os8728;
extern T0* ge304ov8728;
extern T0* T71f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T72c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T72f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T72f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T72f3(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T72f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge302os1577;
extern T0* ge302ov1577;
extern T0* T52f2(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T71c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T888c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f158(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f190(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T28f5(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T202f13(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T168f2(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T150f8(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T202f5(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge769os12643;
extern T0* ge769ov12643;
extern T0* T157f10(T0* C);
/* ET_CURRENT.make */
extern T0* T182c26(void);
/* ET_CURRENT.make_token */
extern void T182f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T182f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T182f2(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T202f27(T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T150f3(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T150f9(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T175f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T56f499(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T56f232(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T172f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T172f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T121f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T120f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T120f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T120f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T120f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T120f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T120c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T172f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T172f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T119f101(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f11(T6* C);
/* STRING_8.append_integer */
extern void T17f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T172f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T143f14(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T56f255(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T56f498(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T56f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_name */
extern void T56f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.tokens */
extern T0* T56f29(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T56f506(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T56f507(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T56f252(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T56f505(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T119f18(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T56f504(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T56f366(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T174f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T174f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T755f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T668f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T668f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T668f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T668f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T668f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T668c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T174f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T174f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T56f497(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T174f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T174f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T174f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T175f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T175f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T56f496(T0* C, T0* a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T56f354(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge945os6558;
extern T0* ge945ov6558;
extern T0* T56f73(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T56f350(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T56f316(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T56f352(T0* C);
/* ET_C_GENERATOR.indent */
extern void T56f351(T0* C);
/* ET_C_GENERATOR.print_getypes_array */
extern void T56f313(T0* C);
/* ET_C_GENERATOR.print_geconst_function */
extern void T56f312(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T190f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T190f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T190f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T190f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T190f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T190f3(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T190f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T190f10(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T56f374(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T56f375(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T189f1(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T189f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T189f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T189f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T189f16(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T189f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T189f15(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T189f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T190f2(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T190f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T190f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T190f1(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T190f5(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T190f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T190f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T190f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T190f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T56f311(T0* C);
/* ET_C_GENERATOR.print_gevoid_function */
extern void T56f310(T0* C);
/* ET_C_GENERATOR.print_current_name */
extern void T56f364(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T188f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T188f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T188f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T188f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T188f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T188f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T188f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T839f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T839f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T188f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T188f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T188f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T188f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T188f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gemt_function */
extern void T56f309(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T56f373(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T56f387(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T56f356(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T56f348(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge769os12679;
extern T0* ge769ov12679;
extern T0* T157f11(T0* C);
/* ET_RESULT.make */
extern T0* T204c24(void);
/* ET_RESULT.make_token */
extern void T204f26(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T204f27(T0* C);
/* ET_RESULT.tokens */
extern T0* T204f2(T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T56f353(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T188f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T188f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T188f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T188f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T188f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T188f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T188f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T188f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T188f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T187f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T187f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T187f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T187f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T187f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T187f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T187f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T838f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T838f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T187f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T187f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T187f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T187f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T187f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gema_function */
extern void T56f308(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T200f3(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T56f358(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T56f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T56f357(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T56f385(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T200f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T187f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T187f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T187f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T187f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T187f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T187f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T187f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T187f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T187f23(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T56f307(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T180f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T180f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T180f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T836f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T836f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T56f372(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T56f495(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T56f494(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_routine_name */
extern void T56f477(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T143f13(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T143f17(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T143f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T396f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T396f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T56f493(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T183f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T183f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T763f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T762f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T762f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T762f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T762f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T762f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T762c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T763f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1127c2(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge633os6094;
extern T0* ge633ov6094;
extern T0* T183f9(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T763c3(void);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T183f1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T183f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_name */
extern void T56f492(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T56f491(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_type_name */
extern void T56f490(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_closed_operand_name */
extern void T56f489(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T202f15(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T202f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T150f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T150f18(T0* C);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f10(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T909f20(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f28(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1233f1(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1233f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1233f6(T0* C, T0* a1, T6 a2, T0* a3);
/* SPECIAL [INTEGER].fill_with */
extern void T103f9(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.string_searcher */
extern unsigned char ge2057os1254;
extern T0* ge2057ov1254;
extern T0* T17f32(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1233c5(void);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T119f98(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T119f95(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T180f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T202f2(T0* C);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T150f40(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T191f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T191f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T852f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T852f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T191f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T191f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T191f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T191f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T851f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T850f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T850f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T850f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T850f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T850f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T850c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T191f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T191f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T202f61(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T150f61(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_calls */
extern void T56f306(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].wipe_out */
extern void T177f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_wipe_out */
extern void T177f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_wipe_out */
extern void T177f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_wipe_out */
extern void T177f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_wipe_out */
extern void T177f57(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].unset_found_item */
extern void T177f48(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].move_all_cursors_after */
extern void T177f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_next_cursor */
extern void T827f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_position */
extern void T827f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].wipe_out */
extern void T176f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER].clear_items */
extern void T176f21(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].move_all_cursors_after */
extern void T176f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_next_cursor */
extern void T825f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_position */
extern void T825f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T56f369(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_query_call */
extern void T56f368(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_target_expression */
extern void T56f478(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T56f476(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T56f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T56f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T56f473(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T56f472(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T56f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T56f470(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T56f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T56f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T56f467(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T56f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T56f465(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T56f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T56f463(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T56f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T56f461(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T56f460(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T56f459(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T56f458(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T56f457(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T56f456(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T56f455(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T56f454(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T56f453(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T56f452(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T56f451(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T56f450(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T56f449(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T56f448(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T56f447(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T56f446(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T56f445(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T56f444(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T56f443(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T56f442(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T56f441(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T56f440(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T56f439(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T56f438(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T56f437(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T56f436(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T56f435(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T56f434(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T56f433(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T56f432(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T56f431(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T56f430(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T56f429(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T56f428(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T56f427(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T56f426(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T56f425(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T56f424(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T56f423(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T56f422(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T56f421(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T56f420(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T56f419(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T56f418(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T56f417(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T56f416(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T56f415(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T56f414(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T56f413(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T56f412(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T56f411(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T56f410(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T56f409(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T56f408(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T56f407(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T56f406(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T56f405(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T56f404(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T56f403(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T56f402(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T56f401(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T56f400(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T56f399(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T56f398(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T56f397(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T56f396(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T56f395(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T56f502(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T235f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge236os7294;
extern T0* ge236ov7294;
extern T0* T56f251(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T235c1(void);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T56f394(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T56f393(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T56f392(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T190f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T190f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T190f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T190f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T190f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T190f20(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T190f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T190f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T190f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T190f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T844f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T845f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T845f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T845f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T845f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T845f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T845c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T190f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T794f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T620f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T620f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T620f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T620f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T620f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T620c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T190f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T190f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T190f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T190f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T190f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T175f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item */
extern T0* T177f4(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_item */
extern T0* T177f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].search_position */
extern void T177f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_item */
extern T6 T177f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].hash_position */
extern T6 T177f16(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f18(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f22(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_item */
extern T6 T177f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_item */
extern T6 T177f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].item */
extern T6 T176f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].sort */
extern void T176f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort */
extern void T213f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort_with_comparator */
extern void T213f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER].subsort_with_comparator */
extern void T213f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER].force */
extern void T296f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].auto_resize */
extern void T296f14(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].capacity */
extern T6 T296f7(T0* C);
/* SPECIAL [INTEGER].aliased_resized_area */
extern T0* T103f3(T0* C, T6 a1);
/* ARRAY [INTEGER].make_area */
extern void T296f13(T0* C, T6 a1);
/* ARRAY [INTEGER].additional_space */
extern T6 T296f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f20(T6* C, T6 a1);
/* ARRAY [INTEGER].empty_area */
extern T1 T296f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].swap */
extern void T176f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].replace */
extern void T176f23(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER].less_than */
extern T1 T300f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].item */
extern T6 T296f4(T0* C, T6 a1);
/* ARRAY [INTEGER].put */
extern void T296f11(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].make */
extern T0* T296c10(T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].is_empty */
extern T1 T176f12(T0* C);
/* ET_C_GENERATOR.polymorphic_type_id_sorter */
extern unsigned char ge945os6249;
extern T0* ge945ov6249;
extern T0* T56f82(T0* C);
/* DS_QUICK_SORTER [INTEGER].make */
extern T0* T213c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER].make */
extern T0* T300c2(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].forth */
extern void T177f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_forth */
extern void T177f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].add_traversing_cursor */
extern void T177f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].remove_traversing_cursor */
extern void T177f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].go_before */
extern void T178f18(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_go_before */
extern void T178f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_traversing_cursor */
extern void T178f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T831f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_position */
extern void T831f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].off */
extern T1 T831f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_off */
extern T1 T178f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_before */
extern T1 T178f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_after */
extern T1 T178f4(T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_call */
extern void T56f371(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T56f488(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T56f248(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T56f487(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T56f486(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T56f485(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T56f484(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T56f247(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T56f483(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T56f246(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T56f482(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T56f481(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T56f480(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_dynamic_type_sets */
extern void T56f367(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_set */
extern void T223f13(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_standalone_type */
extern void T223f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T173f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T395f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T1010c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge930os15140;
extern T0* ge930ov15140;
extern T0* T173f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T395c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T173f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has */
extern T1 T173f1(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T173f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T173c10(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T173f13(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T223f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T173f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item_for_iteration */
extern T0* T178f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_item */
extern T0* T178f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item */
extern T0* T178f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].finish */
extern void T178f21(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_finish */
extern void T178f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].add_traversing_cursor */
extern void T178f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T178f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T178f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T833f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T832f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T832f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T832f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T832f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T832f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T832c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T178f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T178f12(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T223c11(T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].after */
extern T1 T178f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].forth */
extern void T178f19(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_forth */
extern void T178f23(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T168f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T168f3(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T168f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T820f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T819f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T819f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T819f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T819f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T819f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T168f6(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T168f11(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_for_iteration */
extern T0* T177f3(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_item */
extern T0* T177f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].after */
extern T1 T177f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_after */
extern T1 T177f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].start */
extern void T177f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_start */
extern void T177f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_off */
extern T1 T177f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].is_empty */
extern T1 T177f34(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T56f365(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T175f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T175f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T175f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T56f363(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T56f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.seeded_procedure */
extern T0* T55f21(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T148f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T215f10(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T56f79(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_LIST.item */
extern T0* T173f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].force_last */
extern void T177f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_put */
extern void T177f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_put */
extern void T177f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_put */
extern void T177f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].resize */
extern void T177f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_resize */
extern void T177f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].special_integer_ */
extern T0* T177f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_resize */
extern void T177f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_resize */
extern void T177f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_resize */
extern void T177f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_modulus */
extern T6 T177f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_capacity */
extern T6 T177f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_put */
extern void T177f49(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].force_last */
extern void T176f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].resize */
extern void T176f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].new_capacity */
extern T6 T176f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].extendible */
extern T1 T176f8(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].has */
extern T1 T177f1(T0* C, T6 a1);
/* ET_C_GENERATOR.print_polymorphic_query_calls */
extern void T56f305(T0* C);
/* ET_C_GENERATOR.print_gedefault_entity_value */
extern void T56f370(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_gedefault_name */
extern void T56f389(T0* C, T0* a1, T0* a2);
/* ET_CLASS.seeded_query */
extern T0* T55f17(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T146f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T205f11(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gems_function */
extern void T56f304(T0* C);
/* ET_C_GENERATOR.print_gedefault_declarations */
extern void T56f303(T0* C);
/* ET_C_GENERATOR.print_gedefault_declaration */
extern void T56f349(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gedefault_object_value */
extern void T56f390(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_gedefault_attribute_value */
extern void T56f501(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_types */
extern void T56f302(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T56f347(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T56f383(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T56f346(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T56f378(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T203f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T143f11(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T203f14(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T867f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T867f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T867c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T867f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T143f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].replace */
extern void T865f15(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].item */
extern T0* T865f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T143c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T143f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T396c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].cloned_object */
extern T0* T865f1(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].twin */
extern T0* T865f3(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].copy */
extern void T865f16(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].twin */
extern T0* T1156f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].new_cursor */
extern T0* T865f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].make */
extern T0* T1158c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].valid_cursor */
extern T1 T865f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].move_all_cursors_after */
extern void T865f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_next_cursor */
extern void T1158f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_position */
extern void T1158f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].cloned_object */
extern T0* T176f11(T0* C);
/* DS_ARRAYED_LIST [INTEGER].twin */
extern T0* T176f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER].copy */
extern void T176f25(T0* C, T0* a1);
/* SPECIAL [INTEGER].twin */
extern T0* T103f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].new_cursor */
extern T0* T176f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].make */
extern T0* T825c4(T0* a1);
/* DS_ARRAYED_LIST [INTEGER].valid_cursor */
extern T1 T176f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T203f18(T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T56f345(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_geboxed_function */
extern void T56f344(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T56f381(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T56f379(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T203f13(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T203f17(T0* C, T6 a1, T6 a2);
/* DS_LINKABLE [INTEGER].put_right */
extern void T866f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER].make */
extern T0* T866c3(T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T203f4(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T203f10(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].found_item */
extern T6 T864f2(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T864f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].found */
extern T1 T864f1(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].search */
extern void T864f37(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].search_position */
extern void T864f46(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T864f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].hash_position */
extern T6 T864f13(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T864f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].slots_item */
extern T6 T864f14(T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T56f343(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T56f342(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_double_type_definition */
extern void T56f341(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_type_definition */
extern void T56f340(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T56f339(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T56f338(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_type_definition */
extern void T56f337(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T56f336(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T56f335(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T56f334(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T56f333(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_type_definition */
extern void T56f332(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T56f331(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T56f330(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T56f329(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T56f328(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_wide_character_type_definition */
extern void T56f327(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_type_definition */
extern void T56f326(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T56f325(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T56f324(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T56f323(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T203f12(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T203f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].put_last */
extern void T865f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER].put_last */
extern void T176f22(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].put */
extern void T864f36(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].key_storage_put */
extern void T864f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].slots_put */
extern void T864f41(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].clashes_put */
extern void T864f42(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].item_storage_put */
extern void T864f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].unset_found_item */
extern void T864f39(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].resize */
extern void T865f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].resize */
extern T0* T1157f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER]].resized_area */
extern T0* T1156f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].copy_data */
extern void T1156f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER]].move_data */
extern void T1156f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].overlapping_move */
extern void T1156f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].non_overlapping_move */
extern void T1156f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].make */
extern T0* T1156c5(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].resize */
extern void T864f35(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].clashes_resize */
extern void T864f45(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T864f25(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T864f44(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T864f43(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].slots_resize */
extern void T864f40(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T864f7(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T203f5(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T203c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T203f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].make */
extern T0* T865c12(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].make */
extern T0* T1157f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER]].make_area */
extern T0* T1231c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].default_create */
extern T0* T1157c3(void);
/* DS_ARRAYED_LIST [INTEGER].make */
extern T0* T176c15(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_map */
extern T0* T864c34(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T864f38(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_DYNAMIC_TYPE].make */
extern T0* T1153c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T1153f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_DYNAMIC_TYPE].make */
extern T0* T1230c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T864f32(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_DYNAMIC_TYPE].make */
extern T0* T1155c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T864f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_slots */
extern void T864f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_clashes */
extern void T864f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_key_storage */
extern void T864f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_DYNAMIC_TYPE].make_item_storage */
extern void T864f50(T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T56f322(T0* C, T0* a1);
/* ET_IDENTIFIER.upper_name */
extern T0* T119f16(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T909f19(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T909f69(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T909f82(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1163f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge350os24424;
extern T0* ge350ov24424;
extern T0* T1163f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge350os24423;
extern T0* ge350ov24423;
extern T0* T1163f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge350os24412;
extern T0* ge350ov24412;
extern T0* T1163f37(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T139f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1163f46(T0* C);
/* SPECIAL [ARRAY [INTEGER]].make */
extern T0* T1271c2(T6 a1);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge350os24422;
extern T0* ge350ov24422;
extern T0* T1163f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge350os24421;
extern T0* ge350ov24421;
extern T0* T1163f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge350os24420;
extern T0* ge350ov24420;
extern T0* T1163f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge350os24419;
extern T0* ge350ov24419;
extern T0* T1163f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge350os24418;
extern T0* ge350ov24418;
extern T0* T1163f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge350os24417;
extern T0* ge350ov24417;
extern T0* T1163f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge350os24416;
extern T0* ge350ov24416;
extern T0* T1163f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge350os24415;
extern T0* ge350ov24415;
extern T0* T1163f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge350os24414;
extern T0* ge350ov24414;
extern T0* T1163f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge350os24413;
extern T0* ge350ov24413;
extern T0* T1163f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge350os24411;
extern T0* ge350ov24411;
extern T0* T1163f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge350os24410;
extern T0* ge350ov24410;
extern T0* T1163f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge350os24409;
extern T0* ge350ov24409;
extern T0* T1163f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge350os24408;
extern T0* ge350ov24408;
extern T0* T1163f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge350os24407;
extern T0* ge350ov24407;
extern T0* T1163f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge350os24406;
extern T0* ge350ov24406;
extern T0* T1163f31(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER]]].make */
extern T0* T1272c2(T6 a1);
/* UC_UTF8_STRING.unicode */
extern unsigned char ge330os2770;
extern T0* ge330ov2770;
extern T0* T909f48(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1163c47(void);
/* STRING_8.as_upper */
extern T0* T17f25(T0* C);
/* STRING_8.to_upper */
extern void T17f55(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge769os12447;
extern T0* ge769ov12447;
extern T0* T157f17(T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T56f321(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge769os12466;
extern T0* ge769ov12466;
extern T0* T157f16(T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T56f320(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge769os12456;
extern T0* ge769ov12456;
extern T0* T157f15(T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T56f319(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge769os12450;
extern T0* ge769ov12450;
extern T0* T157f14(T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T56f318(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge769os12479;
extern T0* ge769ov12479;
extern T0* T157f13(T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T56f317(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge769os12444;
extern T0* ge769ov12444;
extern T0* T157f12(T0* C);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T56f301(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING].replace */
extern void T194f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_put */
extern void T194f61(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].search_position */
extern void T194f51(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].hash_position */
extern T6 T194f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING].test */
extern T1 T44f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_item */
extern T6 T194f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item */
extern T1 T194f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].force */
extern void T194f49(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_put */
extern void T194f65(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_put */
extern void T194f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_put */
extern void T194f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].resize */
extern void T194f62(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_resize */
extern void T194f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].special_integer_ */
extern T0* T194f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_resize */
extern void T194f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_resize */
extern void T194f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_resize */
extern void T194f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_modulus */
extern T6 T194f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_capacity */
extern T6 T194f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING].force */
extern void T192f43(T0* C, T0* a1);
/* DS_HASH_SET [STRING].slots_put */
extern void T192f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].clashes_put */
extern void T192f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].slots_item */
extern T6 T192f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING].hash_position */
extern T6 T192f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING].resize */
extern void T192f58(T0* C, T6 a1);
/* DS_HASH_SET [STRING].clashes_resize */
extern void T192f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING].special_integer_ */
extern T0* T192f27(T0* C);
/* DS_HASH_SET [STRING].key_storage_resize */
extern void T192f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_resize */
extern void T192f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING].key_storage_item */
extern T0* T192f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING].slots_resize */
extern void T192f63(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_modulus */
extern T6 T192f11(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_capacity */
extern T6 T192f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_put */
extern void T192f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING].search_position */
extern void T192f56(T0* C, T0* a1);
/* DS_HASH_SET [STRING].key_equality_tester */
extern T0* T192f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].has */
extern T1 T194f4(T0* C, T0* a1);
/* ET_C_GENERATOR.generate_ids */
extern void T56f300(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T201f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T202f65(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T150f64(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].force_last */
extern void T76f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].resize */
extern void T76f28(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].new_capacity */
extern T6 T76f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].extendible */
extern T1 T76f17(T0* C, T6 a1);
/* ET_C_GENERATOR.set_finalize */
extern void T56f292(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f19(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T56c291(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T56f295(T0* C);
/* DS_ARRAYED_LIST [STRING].make */
extern void T76f22(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].make */
extern T0* T76c22(T6 a1);
/* DS_ARRAYED_LIST [STRING].new_cursor */
extern T0* T76f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].make */
extern T0* T286c7(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].set_key_equality_tester */
extern void T194f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].internal_set_equality_tester */
extern void T855f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make */
extern T0* T194c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_with_equality_testers */
extern void T194f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].make */
extern T0* T855c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].new_cursor */
extern T0* T855f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING].make */
extern T0* T1152c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_cursor */
extern T0* T194f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].make */
extern T0* T853c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_sparse_container */
extern void T194f66(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_slots */
extern void T194f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_clashes */
extern void T194f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_key_storage */
extern void T194f74(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_item_storage */
extern void T194f73(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING].default_create */
extern T0* T44c2(void);
/* DS_HASH_SET [STRING].set_equality_tester */
extern void T192f39(T0* C, T0* a1);
/* DS_HASH_SET [STRING].make */
extern T0* T192c38(T6 a1);
/* DS_HASH_SET [STRING].new_cursor */
extern T0* T192f16(T0* C);
/* DS_HASH_SET_CURSOR [STRING].make */
extern T0* T285c6(T0* a1);
/* DS_HASH_SET [STRING].make_slots */
extern void T192f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_clashes */
extern void T192f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_key_storage */
extern void T192f45(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_item_storage */
extern void T192f44(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T191c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T191f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T852c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T851f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1151c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T851c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T190c41(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T190f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T848c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T848f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1150c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T190f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T846c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T190f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T190f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T190f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T190f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T844f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1149c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T844c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T190f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T794f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1136c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T794c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T189c31(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T189f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T842c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T189f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T189f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T189f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T189f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T189f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T189f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T188c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T188f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T839c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T188f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T188f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T188f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T188f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T188f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T188f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T841f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1148c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T840c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T841c3(void);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T187c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T187f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T838c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T187f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T187f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T187f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T187f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T187f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T187f40(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.make */
extern T0* T186c22(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T186f23(T0* C, T0* a1, T0* a2);
/* ET_CALL_INSTRUCTION.make */
extern T0* T184c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T184f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T183c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T183f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge769os12626;
extern T0* ge769ov12626;
extern T0* T157f561(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T426c60(void);
/* ET_SYMBOL.make_leaf */
extern void T426f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T426f2(T0* C);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge769os12621;
extern T0* ge769ov12621;
extern T0* T157f560(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T426c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T183f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T180c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T180f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T836c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T835f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1147c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T834c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T835c3(void);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T150f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T178c17(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T178f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T831c5(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T833f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1146c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T833c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_map */
extern T0* T177c41(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_with_equality_testers */
extern void T177f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T829c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T829f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T1145c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T177f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T827c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_sparse_container */
extern void T177f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_slots */
extern void T177f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_clashes */
extern void T177f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_key_storage */
extern void T177f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_item_storage */
extern void T177f68(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T175c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T175f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T824c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T755f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1123c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T755c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T174c8(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T172c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T172f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T823c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T121f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T379c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T121c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T171c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge303os2440;
extern T0* ge303ov2440;
extern T0* T56f7(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T170c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T169c13(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge890os15216;
extern T0* ge890ov15216;
extern T0* T169f4(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T303c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge769os12645;
extern T0* ge769ov12645;
extern T0* T157f606(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T166c69(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T303f10(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T303f67p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T169f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T169f13p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T56f294(T0* C, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T55f43(T0* C);
/* ET_SYSTEM.compile */
extern void T53f49(T0* C);
/* ET_SYSTEM.compile_system */
extern void T53f52(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T53f55(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T142f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T59f201(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T59f204(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T59f209(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T59f210(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T59f211(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T52f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T52f193(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T73f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T73f14(T0* C);
/* KL_STDOUT_FILE.put_string */
extern void T73f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T73f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T73f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T73f1(T0* C);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f193(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T205f7(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T215f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T59f53(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge929os7651;
extern T0* ge929ov7651;
extern T0* T59f52(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T59f51(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T59f208(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T205f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T215f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_feature_name */
extern unsigned char ge929os7868;
extern T0* ge929ov7868;
extern T0* T59f50(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T119f30(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1163f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge348os24402;
extern T0* ge348ov24402;
extern T0* T1163f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge348os24401;
extern T0* ge348ov24401;
extern T0* T1163f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge348os24390;
extern T0* ge348ov24390;
extern T0* T1163f22(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge348os24400;
extern T0* ge348ov24400;
extern T0* T1163f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge348os24399;
extern T0* ge348ov24399;
extern T0* T1163f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge348os24398;
extern T0* ge348ov24398;
extern T0* T1163f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge348os24397;
extern T0* ge348ov24397;
extern T0* T1163f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge348os24396;
extern T0* ge348ov24396;
extern T0* T1163f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge348os24395;
extern T0* ge348ov24395;
extern T0* T1163f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge348os24394;
extern T0* ge348ov24394;
extern T0* T1163f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge348os24393;
extern T0* ge348ov24393;
extern T0* T1163f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge348os24392;
extern T0* ge348ov24392;
extern T0* T1163f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge348os24391;
extern T0* ge348ov24391;
extern T0* T1163f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge348os24389;
extern T0* ge348ov24389;
extern T0* T1163f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge348os24388;
extern T0* ge348ov24388;
extern T0* T1163f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge348os24387;
extern T0* ge348ov24387;
extern T0* T1163f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge348os24386;
extern T0* ge348ov24386;
extern T0* T1163f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge348os24385;
extern T0* ge348ov24385;
extern T0* T1163f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge348os24384;
extern T0* ge348ov24384;
extern T0* T1163f16(T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T26f15(T0* C);
/* ET_IDENTIFIER.string_ */
extern T0* T119f38(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_class_name */
extern unsigned char ge929os7867;
extern T0* ge929ov7867;
extern T0* T59f49(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T59f203(T0* C, T0* a1, T0* a2);
/* DS_CELL [INTEGER].put */
extern void T236f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T202f68(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T150f66(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T59f207(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T59f206(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T150f42(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T202f67(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T150f65(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T202f62(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T168f9(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_mode */
extern void T142f9(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_mode */
extern void T59f198(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T142f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T59f200(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T142f10(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T59f199(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T202f63(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T150f60(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T202f64(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T55f42(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T498f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T592f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T592f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T415f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T415f8(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T119f79(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T414f4(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T414f5(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T592f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T52f157(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T52f189(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge304os8727;
extern T0* ge304ov8727;
extern T0* T71f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T73c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T73f13(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T73f18(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T73f3(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T73f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T52f195(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T887c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T52f12(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f157(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f189(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f12(T0* C);
/* ET_CLASS.named_query */
extern T0* T55f39(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T146f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T55f40(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T148f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T52f156(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T887c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T52f11(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f11(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T51f8(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T158f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T158f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T158f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T158f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T158f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T158f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T158f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T158f899(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T158f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T158f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T158f896(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T158c895(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T158f910(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T158f914(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge951os13773;
extern T0* ge951ov13773;
extern T0* T158f68(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T158f867(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER].to_special */
extern T0* T105f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T158f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T158f1747(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER].subcopy */
extern void T920f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER].subcopy */
extern void T296f15(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge265os2685;
extern T0* ge265ov2685;
extern T0* T158f882(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER].default_create */
extern T0* T920c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T158f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge951os13770;
extern T0* ge951ov13770;
extern T0* T158f66(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T158f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T158f1739(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge951os13769;
extern T0* ge951ov13769;
extern T0* T158f64(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge951os13768;
extern T0* ge951ov13768;
extern T0* T158f62(T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge951os13767;
extern T0* ge951ov13767;
extern T0* T158f60(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge951os13766;
extern T0* ge951ov13766;
extern T0* T158f58(T0* C);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge951os13765;
extern T0* ge951ov13765;
extern T0* T158f56(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge951os13764;
extern T0* ge951ov13764;
extern T0* T158f54(T0* C);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge951os13763;
extern T0* ge951ov13763;
extern T0* T158f52(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge951os13762;
extern T0* ge951ov13762;
extern T0* T158f50(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T158f913(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T158f41(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T158f909(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T158f39(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T158f908(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T158f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T158f919(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T158f923(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T911f4(T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T158f918(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T158f922(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge955os14628;
extern T0* ge955ov14628;
extern T0* T158f147(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T158f870(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge955os14627;
extern T0* ge955ov14627;
extern T0* T158f145(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge955os14626;
extern T0* ge955ov14626;
extern T0* T158f143(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge955os14625;
extern T0* ge955ov14625;
extern T0* T158f141(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge955os14624;
extern T0* ge955ov14624;
extern T0* T158f139(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge955os14623;
extern T0* ge955ov14623;
extern T0* T158f137(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge955os14622;
extern T0* ge955ov14622;
extern T0* T158f135(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge955os14621;
extern T0* ge955ov14621;
extern T0* T158f133(T0* C);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge153os5113;
extern T0* ge153ov5113;
extern T0* T158f34(T0* C);
/* YY_BUFFER.make */
extern T0* T114c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T114f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.put */
extern void T911f11(T0* C, T2 a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T911f14(T0* C, T0* a1, T6 a2);
/* STRING_8.subcopy */
extern void T17f61(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T114f9(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T911c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge397os8440;
extern T1 ge397ov8440;
extern T1 T60f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1328c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T911f7(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T406c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T406f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1016c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T406f47(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T406f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T406f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T406f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T406f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T406f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T406f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T392f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T1008c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T390c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T392c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T405c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T405f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1015c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T546f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1054c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T536c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T546c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T239c18(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T239f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T871c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T637f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1084c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T615c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T637c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T241c18(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T241f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T875c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T619f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1079c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T614c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T619c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T404c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T404f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1014c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1013f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1223c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T1012c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1013c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T403c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T428f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1024c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T427c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T428c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T402c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T419f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1021c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T418c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T419c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T401c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T660f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1093c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T625c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T660c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T400c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T653f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1090c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T631c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T653c3(void);
/* DS_ARRAYED_STACK [INTEGER].make */
extern T0* T399c8(T6 a1);
/* ET_XACE_UNIVERSE.eiffel_parser */
extern T0* T48f8(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T52f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T887c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T52f10(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f10(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T55f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T52f154(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T887c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T52f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f154(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f9(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge769os12533;
extern T0* ge769ov12533;
extern T0* T157f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T53f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T52f153(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T887c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T52f8(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f153(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f8(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T53f54(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T157f9(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge769os12594;
extern T0* ge769ov12594;
extern T0* T157f7(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge769os12573;
extern T0* ge769ov12573;
extern T0* T157f6(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T58f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T58f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T58f12(T0* C);
/* UT_VERSION.revision */
extern T6 T58f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T58f10(T0* C);
/* UT_VERSION.minor */
extern T6 T58f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T58f8(T0* C);
/* UT_VERSION.major */
extern T6 T58f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T58f6(T0* C);
/* ET_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge247os1594;
extern T0* ge247ov1594;
extern T0* T53f44(T0* C);
/* UT_VERSION.make */
extern T0* T58c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T51f37(T0* C);
/* ET_XACE_UNIVERSE.is_ise */
extern T1 T48f37(T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge769os12601;
extern T0* ge769ov12601;
extern T0* T157f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge769os12568;
extern T0* ge769ov12568;
extern T0* T157f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge769os12531;
extern T0* ge769ov12531;
extern T0* T157f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T52f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T52f191(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T889c614(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T889f630(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T889f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T55f27(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T889f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T889f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge937os23570;
extern T0* ge937ov23570;
extern T0* T889f14(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1259c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T52f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f191(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T52f161(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T889c613(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T52f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T52f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T889c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T52f14(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge769os12506;
extern T0* ge769ov12506;
extern T0* T157f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T161c94(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T160f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T160c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T160f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T683f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1104c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T681c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge822os6094;
extern T0* ge822ov6094;
extern T0* T160f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T683c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge769os12625;
extern T0* ge769ov12625;
extern T0* T157f558(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T426c58(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge769os12620;
extern T0* ge769ov12620;
extern T0* T157f557(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T473c81(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T473f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T473f2(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T160f2(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T52f159(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T887c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T52f13(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f159(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f13(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T51f157(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T283f1(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T283f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T283f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T139f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T283f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T283f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T283f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T283f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T283f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T283c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T283f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T283f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T152f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T152f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T152f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T152f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T152f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T152f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T152f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T152f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T152f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T152f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T152f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T152f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge358os12123;
extern T6 ge358ov12123;
extern T6 T152f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T152f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge358os12122;
extern T6 ge358ov12122;
extern T6 T152f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T152f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge358os12121;
extern T6 ge358ov12121;
extern T6 T152f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T139f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T152f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T152f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T152f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T283f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T152f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T152f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1112os12317;
extern T0* ge1112ov12317;
extern T0* T283f2(T0* C);
/* DT_DATE_TIME.make */
extern T0* T152c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T152f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T152f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T152f1(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T152f2(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T152f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T152f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T152f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T152f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T152f3(T0* C);
/* ET_XACE_UNIVERSE.print_time */
extern void T48f161(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T51f160(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T902f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T137f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T902f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T52f211(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T52f212(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1317c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T137f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T137f8(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T909f21(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T909f70(T0* C);
/* STRING_8.as_lower */
extern T0* T17f29(T0* C);
/* STRING_8.to_lower */
extern void T17f62(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T137f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T126f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T126f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T126f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T52f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f211(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f212(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f35(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T902f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T126f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T902f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T125f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T381f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T125f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T51f73(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T902c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T284f130(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T284f139(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T284f143(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T254f54(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T251f13(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T123f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T122f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T412c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].make_from_linear */
extern T0* T76c39(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].forth */
extern void T108f9(T0* C);
/* DS_LINKED_LIST [STRING].cursor_forth */
extern void T107f12(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].add_traversing_cursor */
extern void T107f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T108f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].remove_traversing_cursor */
extern void T107f14(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set */
extern void T108f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING].item */
extern T0* T108f2(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].start */
extern void T108f8(T0* C);
/* DS_LINKED_LIST [STRING].cursor_start */
extern void T107f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].cursor_off */
extern T1 T107f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].new_cursor */
extern T0* T107f1(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].make */
extern T0* T108c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T41f1(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T41f2(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING].force_last */
extern void T107f10(T0* C, T0* a1);
/* DS_LINKABLE [STRING].put_right */
extern void T369f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING].make */
extern T0* T369c3(T0* a1);
/* DS_LINKED_LIST [STRING].is_empty */
extern T1 T107f3(T0* C);
/* DS_HASH_SET [INTEGER].has */
extern T1 T109f1(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].search_position */
extern void T109f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].clashes_item */
extern T6 T109f12(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].hash_position */
extern T6 T109f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_storage_item */
extern T6 T109f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].item_storage_item */
extern T6 T109f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_equality_tester */
extern T0* T109f17(T0* C);
/* DS_HASH_SET [INTEGER].slots_item */
extern T6 T109f14(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T41f5(T0* C);
/* DS_LINKED_LIST [STRING].make */
extern T0* T107c9(void);
/* ST_SPLITTER.set_separators */
extern void T41f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER].put */
extern void T109f30(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].slots_put */
extern void T109f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].clashes_put */
extern void T109f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].item_storage_put */
extern void T109f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].unset_found_item */
extern void T109f36(T0* C);
/* DS_HASH_SET [INTEGER].make */
extern T0* T109c29(T6 a1);
/* DS_HASH_SET [INTEGER].new_cursor */
extern T0* T109f10(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER].make */
extern T0* T370c3(T0* a1);
/* DS_HASH_SET [INTEGER].make_slots */
extern void T109f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].special_integer_ */
extern T0* T109f23(T0* C);
/* DS_HASH_SET [INTEGER].new_modulus */
extern T6 T109f6(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_clashes */
extern void T109f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_key_storage */
extern void T109f33(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_item_storage */
extern void T109f32(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T41c9(void);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T284f142(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T254f53(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T251f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T123f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T122f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T52f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T52f194(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T890c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T52f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f194(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f20(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T410f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T410f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T410f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T410f33(T0* C, T14 a1);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T254f52(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T254f60(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T254f57(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.put_last */
extern void T251f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T408f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T408f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1018f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1017f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1017f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1017f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1017f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1017f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1017c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T408f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T408f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T254f49(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T251f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T251c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T408c10(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T408f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1019c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1018f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1224c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1018c3(void);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T254f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T254f47(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_override */
extern void T254f62(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T254f61(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T254f46(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_options */
extern void T254f48(T0* C, T0* a1);
/* ET_XACE_CLUSTER.make */
extern T0* T254c41(T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T254f51(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T251f9(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T254f31(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T123f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T123f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T123f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T122f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T380f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T380f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T132f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T130f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T130f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T130f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T130f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T130f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T130c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T380f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T380f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T123f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T122f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T122c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T380c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T380f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1005c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T132f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T383c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T132c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T123f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T123f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T123f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T123f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T123f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T123f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T123c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T123f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T122f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T119f99(T0* C, T6 a1, T6 a2);
/* ET_LACE_CLUSTER.name */
extern T0* T123f13(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T123f30(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T66f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T410f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T410f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T410f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge381os8469;
extern T0* ge381ov8469;
extern T0* T66f14(T0* C);
/* KL_DIRECTORY.make */
extern void T410f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T410c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T410f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T410f8(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T65f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T65f18(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T254f24(T0* C, T0* a1);
/* DS_HASH_SET [STRING].has */
extern T1 T192f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T254f28(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING].forth */
extern void T285f10(T0* C);
/* DS_HASH_SET_CURSOR [STRING].go_after */
extern void T285f11(T0* C);
/* DS_HASH_SET [STRING].cursor_go_after */
extern void T192f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].item */
extern T0* T285f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING].after */
extern T1 T285f3(T0* C);
/* DS_HASH_SET_CURSOR [STRING].start */
extern void T285f9(T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T254f27(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T255f111(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1000os17788;
extern T0* ge1000ov17788;
extern T0* T255f112(T0* C);
/* ET_XACE_OPTIONS.string_equality_tester */
extern unsigned char ge335os1584;
extern T0* ge335ov1584;
extern T0* T255f19(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T43c3(void);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T255f110(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T254f24p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T124f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T124f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T124f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T123f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T52f165(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T890c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T52f19(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f165(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T284f141(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T52f183(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T891c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T891f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T284f24(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T914c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T914f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T914f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T55f180(T0* C, T0* a1);
/* ET_CLASS.reset_after_parsed */
extern void T55f184(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T500f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T605f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T925f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T603f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T605f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T603f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T498f11(T0* C);
/* ET_CREATOR.reset */
extern void T592f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T504f25(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T504f27(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T504f26(T0* C);
/* ET_INVARIANTS.reset */
extern void T504f25p1(T0* C);
/* ET_PARENT_LIST.reset */
extern void T293f12(T0* C);
/* ET_PARENT.reset */
extern void T288f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T292f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T291f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T581f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T579f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T290f10(T0* C);
/* ET_RENAME.reset */
extern void T573f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T573f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T160f28(T0* C);
/* ET_PARENT.parent */
extern T0* T288f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T397f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T148f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T146f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T55f191(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge769os12988;
extern T0* ge769ov12988;
extern T0* T157f105(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T297c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T968f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1212c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T967c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge824os15140;
extern T0* ge824ov15140;
extern T0* T297f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T968c3(void);
/* ET_CLASS.tokens */
extern T0* T55f4(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T55f190(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T55f189(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T55f188(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T55f187(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T52f196(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T889c617(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T52f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f196(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T52f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T889c622(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T52f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T889c621(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T52f197(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T889c618(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f197(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T55f44(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T52f199(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T889c620(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f199(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T55f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T52f198(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T889c619(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f198(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T55f173(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T55f186(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T55f176(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T55f178(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T55f175(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T55f174(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T55f193(T0* C);
/* ET_CLASS.reset_parsed */
extern void T55f192(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge769os12990;
extern T0* ge769ov12990;
extern T0* T157f107(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T148c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge708os6094;
extern T0* ge708ov6094;
extern T0* T148f3(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge769os12989;
extern T0* ge769ov12989;
extern T0* T157f106(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T146c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge710os6094;
extern T0* ge710ov6094;
extern T0* T146f3(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge769os12639;
extern T0* ge769ov12639;
extern T0* T157f108(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T166c22(void);
/* ET_CLASS.cloned_class */
extern T0* T55f22(T0* C);
/* ET_CLASS.copy */
extern void T55f185(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T55c161(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge769os12480;
extern T0* ge769ov12480;
extern T0* T157f80(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T51f79(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T141f42(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T141f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T141f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T141f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T141f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T141f11(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T141f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T141f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T141f29(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T141f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T393f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T391f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T391f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T391f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T391f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T391f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T391c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T141f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T392f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T390f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T390f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T390f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T390f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T390f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T141f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T141f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T141f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T141f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T141f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T141f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T141f48(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T272f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T141f47(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T249f313(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T55c181(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T141f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T141f37(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T141f3(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T141f43(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.eiffel_class */
extern T0* T48f78(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T284f146(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T284f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T52f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T52f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T52f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T52f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T52f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T284f159(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T284f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T284f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T284f154(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T284f157(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T284f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].force_new */
extern void T263f41(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_put */
extern void T263f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_put */
extern void T263f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_put */
extern void T263f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_put */
extern void T263f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_item */
extern T6 T263f18(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].hash_position */
extern T6 T263f17(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_item */
extern T6 T263f16(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].resize */
extern void T263f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_resize */
extern void T263f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].special_integer_ */
extern T0* T263f32(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_resize */
extern void T263f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_resize */
extern void T263f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_item */
extern T0* T263f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].slots_resize */
extern void T263f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_modulus */
extern T6 T263f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_capacity */
extern T6 T263f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].unset_found_item */
extern void T263f44(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found_key */
extern T0* T263f3(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found */
extern T1 T263f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].search */
extern void T263f38(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].search_position */
extern void T263f43(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge956os14440;
extern T0* ge956ov14440;
extern T0* T284f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T284f128(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].set_key_equality_tester */
extern void T263f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].internal_set_equality_tester */
extern void T936f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T284f127(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].make_map */
extern T0* T263c37(T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_with_equality_testers */
extern void T263f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].make */
extern T0* T936c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].new_cursor */
extern T0* T936f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING].make */
extern T0* T1180c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_cursor */
extern T0* T263f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, STRING].make */
extern T0* T938c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_sparse_container */
extern void T263f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_slots */
extern void T263f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_clashes */
extern void T263f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_key_storage */
extern void T263f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_item_storage */
extern void T263f55(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T284f160(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T911f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T911f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T284f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge956os14441;
extern T0* ge956ov14441;
extern T0* T284f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T52f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T52f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T52f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T52f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T284f156(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T284f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T249f55(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T284f95(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].replace_found_item */
extern void T263f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].found_item */
extern T6 T263f2(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_item */
extern T6 T263f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T158f887(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T158f874(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T158f859(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T158f881(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T158f1743(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T158f873(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T158f872(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T284f158(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T284f152(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T52f167(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f167(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T284f155(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T284f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T284f151(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T284f149(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T284f34(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T113f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T911f5(T0* C, T0* a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.compact_left */
extern void T113f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T911f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T113f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T911f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge148os10923;
extern T6 ge148ov10923;
extern T6 T113f10(T0* C);
/* YY_BUFFER.fill */
extern void T114f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T113f18(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T114f13(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T284f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T284f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T284f150(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T911f1(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T284f145(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T113f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T113f25(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge958os14616;
extern T0* ge958ov14616;
extern T0* T284f22(T0* C);
/* YY_FILE_BUFFER.make */
extern T0* T113c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T113f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T113f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge304os8726;
extern T0* ge304ov8726;
extern T0* T71f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T913c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T913f20(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T913f23(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T913f13(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T913f22(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T284f119(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T284f147(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T113f26(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T284f147p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T284f147p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T247f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T247f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2040os1906;
extern T0* ge2040ov1906;
extern T0* T22f22(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T247c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T247f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T247f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f46(T0* C);
/* UNIX_FILE_INFO.update */
extern void T247f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T247f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f13(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f21(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge378os19440;
extern T1 ge378ov19440;
extern T1 T411f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge378os19431;
extern T0* ge378ov19431;
extern T0* T411f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge319os14610;
extern T0* ge319ov14610;
extern T0* T284f20(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T411c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T284f19(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f15(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f23(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge956os14471;
extern T0* ge956ov14471;
extern T0* T284f118(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T284f18(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T284f117(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T284f116(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T284f115(T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T254f16(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T254f16p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T254f29(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T123f29(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T410f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T410f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T410f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T410f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T410f1(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T410f4(T0* C);
/* KL_DIRECTORY.open_read */
extern void T410f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T410f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T410f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T410f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T410f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T410f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T284f17(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge954os18199;
extern T0* ge954ov18199;
extern T0* T284f113(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T284f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T52f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f207(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T380f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T408f2(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T51f78(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T284f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T284f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T284f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T284f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T284f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T284f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T284f131(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T284c129(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T284f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T284f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T284f144(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T284f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge953os18155;
extern T0* ge953ov18155;
extern T0* T284f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T284f122(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge953os18154;
extern T0* ge953ov18154;
extern T0* T284f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge953os18153;
extern T0* ge953ov18153;
extern T0* T284f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge953os18152;
extern T0* ge953ov18152;
extern T0* T284f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge953os18151;
extern T0* ge953ov18151;
extern T0* T284f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge953os18150;
extern T0* ge953ov18150;
extern T0* T284f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge953os18149;
extern T0* ge953ov18149;
extern T0* T284f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge953os18148;
extern T0* ge953ov18148;
extern T0* T284f80(T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T284f9(T0* C);
/* ET_XACE_UNIVERSE.preparse_single */
extern void T48f164(T0* C);
/* ET_XACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T48f67(T0* C);
/* ET_XACE_UNIVERSE.eiffel_preparser */
extern T0* T48f72(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T153f1(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T153f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T152f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T153f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T153f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T153f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T153f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T153f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T153f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T153f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T153f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T153f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T153f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T153f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T153f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T153f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T153f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T153f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T398c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T153f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T153f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T153f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T153f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T153f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T153f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T153f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T152c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1104os12004;
extern T0* ge1104ov12004;
extern T0* T151f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T153c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T151c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T53f35(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T53f53(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T51f155(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T277f14(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T277c13(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T958f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T958c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge888os24237;
extern T0* ge888ov24237;
extern T0* T958f4(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T957c33(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T957f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T245f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T245f36(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T244f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T244f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T881f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T880f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T880f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T880f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T880f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T880f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T880c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T244f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T244f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T957f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T244f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T244f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T882f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T882f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T244f2(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T245c33(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T245f35(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T679f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1102c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T607c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge853os15140;
extern T0* ge853ov15140;
extern T0* T245f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T679c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T244f1(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T244c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T244f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T882c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T881f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1162c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T881c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T243c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T243f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T879c4(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T242c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T242f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T878c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T876f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1161c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T877c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T876c3(void);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T240c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T240f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T874c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T872f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1160c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T873c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T872c3(void);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T238c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T238f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T870c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T801f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1139c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T779c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T801c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge872os8163;
extern T0* ge872ov8163;
extern T0* T957f6(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T277f17(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T277f9(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T276c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T956c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1205c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1205f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1308c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T956f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T276f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T276f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T275c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T955c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge885os24150;
extern T0* ge885ov24150;
extern T0* T955f4(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1204c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1242f2(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1242f1(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1242c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T954c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T954f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T953c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T953f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T952c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T951c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1203c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1203f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1307c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1307f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1390c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1390f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1416c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1307f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1392c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1307f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1307f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_slots */
extern void T1307f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1307f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1307f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1307f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1307f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1376f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1411c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1375c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1376c3(void);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1307f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1267c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1267f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1377c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T951f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T950c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T950f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T949c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1202f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1302f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1202c35(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1202f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1302c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1302f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1387c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1202f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1304c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1202f53(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1202f42(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1202f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1202f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1202f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1202f60(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1202f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1299f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1386c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1297c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1299c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1202f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1305f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1388c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1300c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1305c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1200f33(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1199c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1200c32(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1200f14(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1298c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1200f42(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1200f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1200f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1200f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1200f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1200f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1200f38(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T948c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_map */
extern T0* T1198c44(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_with_equality_testers */
extern void T1198f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1294c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1294f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1384c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1198f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1291c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_sparse_container */
extern void T1198f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].unset_found_item */
extern void T1198f55(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_slots */
extern void T1198f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].special_integer_ */
extern T0* T1198f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_modulus */
extern T6 T1198f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_clashes */
extern void T1198f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_key_storage */
extern void T1198f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_item_storage */
extern void T1198f73(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1296f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1385c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1292c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1296c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1197f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1289f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1197c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1197f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1289c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1289f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1383c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1197f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1288c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1197f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1197f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1197f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1197f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1197f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1197f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1197f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T642f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T571c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T642c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1197f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1196f39(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1196c38(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1196f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1287c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1196f51(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1196f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1196f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1196f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1196f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1196f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1196f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1195f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1284f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge815os6017;
extern T0* ge815ov6017;
extern T0* T948f4(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T941c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1195c41(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1195f50(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1284c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1284f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1381c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1195f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1281c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1195f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1195f53(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1195f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1195f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1195f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1195f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1195f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1195f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1286f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1382c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1282c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1286c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T947f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge814os2689;
extern T0* ge814ov2689;
extern T0* T275f9(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T272c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T947c39(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T947f9(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1194c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T947f45(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T947f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T947f14(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T947f3(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T947f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T947f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T947f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T393f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T1009c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T393c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T946c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T946f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1193c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T1191f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1280c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1192c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T1191c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T943f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1188f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge813os18061;
extern T0* ge813ov18061;
extern T0* T275f6(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T944c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T943c35(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T943f37(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1188c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1188f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1279c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T943f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1190c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T943f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T943f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T943f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T943f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T943f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T943f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T943f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T651f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1089c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T649c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T651c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T943f39(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1185f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1278c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1187c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1185c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T940f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1182f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T275f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T940c45(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T940f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1182c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1182f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1277c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T940f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1184c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T940f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T940f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T940f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T940f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T940f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T940f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T940f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T940f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T275f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T275f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T279c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T962c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1211c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1211f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_map */
extern T0* T1313c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1313f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1396c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1396f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1418c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1313f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1398c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1313f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1313f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_slots */
extern void T1313f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1313f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1313f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_clashes */
extern void T1313f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1313f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T535f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1051c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T530c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T535c3(void);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1313f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1270c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1270f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1378c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T962f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T961c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T961f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_map */
extern T0* T960c40(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_with_equality_testers */
extern void T960f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].make */
extern T0* T1208c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T1208f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1312c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T960f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1210c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_sparse_container */
extern void T960f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].unset_found_item */
extern void T960f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_slots */
extern void T960f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].special_integer_ */
extern T0* T960f18(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_modulus */
extern T6 T960f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_clashes */
extern void T960f45(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_key_storage */
extern void T960f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_item_storage */
extern void T960f43(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T959c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T959f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_map */
extern T0* T1206c36(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_with_equality_testers */
extern void T1206f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].make */
extern T0* T1309c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].new_cursor */
extern T0* T1309f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1393c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_cursor */
extern T0* T1206f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1311c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_sparse_container */
extern void T1206f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].unset_found_item */
extern void T1206f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_slots */
extern void T1206f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].special_integer_ */
extern T0* T1206f28(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_modulus */
extern T6 T1206f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_clashes */
extern void T1206f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_key_storage */
extern void T1206f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_item_storage */
extern void T1206f57(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T279f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T279f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T278c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T278f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T278f3(T0* C);
/* ET_XACE_UNIVERSE.activate_processors */
extern void T48f159(T0* C);
/* ET_SYSTEM.compile_all */
extern void T53f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T140f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T141f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T141f71(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T140f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T141f70(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T140f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T148f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T146f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T55f72(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T55f77(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T166f13(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T140f2(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T141f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T140f1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T141f34(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T140f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T141f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T141f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T141f38(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T141f1(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T140c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T51f159(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T277f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T277f15(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.compile_degree_3 */
extern void T48f163(T0* C);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T51f158(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T73f12(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T73f16(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T73f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T73f21(T0* C, T14 a1, T2 a2);
/* ET_XACE_UNIVERSE.compile_degree_4 */
extern void T48f162(T0* C);
/* ET_LACE_UNIVERSE.parse_all */
extern void T51f156(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T158f907(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T158f911(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T158f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T158f916(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T158f915(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T158f920(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T158f932(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T158f931(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T118f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T117f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T117f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T117f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T117f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T117f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T117c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T118f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T378c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T118c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T158f930(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T158f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T158f1713(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T158f1722(T0* C);
/* DS_ARRAYED_STACK [INTEGER].force */
extern void T399f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].resize */
extern void T399f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].new_capacity */
extern T6 T399f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].extendible */
extern T1 T399f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T158f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T158f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T158f1710(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T158f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T487f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T486f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T249f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T158f1708(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T487f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T486f35(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T158f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T158f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T158f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T158f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T158f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T158f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T158f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T158f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T158f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T158f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T158f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T158f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T158f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T158f1694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T158f1693(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T442f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T441f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T441f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T441f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T441f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T441f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T441c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T442f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1029c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T442c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T158f1692(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T158f1691(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T455f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T454f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T454f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T454f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T454f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T454f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T454c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T455f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1034c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T455c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T158f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T158f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T158f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T158f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T158f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T158f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T158f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T158f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T158f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T158f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T158f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T158f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T158f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T158f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T158f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T158f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T158f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T158f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T158f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T158f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T158f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T158f1669(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T158f1668(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T813f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T809f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T809f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T809f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T809f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T809f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T809c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T813f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1143c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T813c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T249f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T814c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge769os12622;
extern T0* ge769ov12622;
extern T0* T157f742(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T476c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T476f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T476f2(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge769os12624;
extern T0* ge769ov12624;
extern T0* T157f569(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T426c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge769os12619;
extern T0* ge769ov12619;
extern T0* T157f568(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T426c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T814f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T158f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T158f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T158f1665(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T812f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T811f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T811f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T811f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T811f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T811f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T811c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T812f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1142c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T812c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T158f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER].replace */
extern void T399f12(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].item */
extern T6 T399f1(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T249f309(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T158f1664(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T795f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T158f1663(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T808f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T796f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T796f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T796f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T796f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T796f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T796c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T808f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1141c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T808c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T249f308(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T795c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T795f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge501os6094;
extern T0* ge501ov6094;
extern T0* T795f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T795f2(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T158f564(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T158f585(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T403f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T158f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T158f1661(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T158f1726(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T403f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T403f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T428f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T427f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T427f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T427f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T427f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T427f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T403f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T403f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T158f1660(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T158f1720(T0* C);
/* DS_ARRAYED_STACK [INTEGER].remove */
extern void T399f10(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T158f1725(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T403f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T158f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T158f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T158f1657(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T807f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T798f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T798f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T798f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T798f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T798f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T798c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T807f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1140c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T807c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T249f301(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T799c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T799f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T158f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T158f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T158f1654(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T158f1653(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T158f846(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T119f106(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T624f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T119f34(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T927f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T663f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T927f3(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T663f3(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T158f880(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T401f2(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T401f1(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T119f105(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T207f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T158f879(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T400f2(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T400f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T158f1652(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T801f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T779f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T779f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T779f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T779f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T779f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T400f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T158f1651(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T249f307(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T806f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T806f32(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T806f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T806f30(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T806c29(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T806f34(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T806f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T806f35(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1129c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge769os12630;
extern T0* ge769ov12630;
extern T0* T157f739(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T420c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T420f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T420f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T420f2(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T249f168(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T158f1650(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T158f1649(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T401f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T158f1648(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T249f306(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T805f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T805f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T805f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T805f32(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T805f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T805f30(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T805c29(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T805f3(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T805f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T158f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T158f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T158f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T158f1644(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T249f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T804f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T804f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T804f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T804f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T804f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T804f30(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T804c29(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T804f3(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T804f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T158f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T158f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T158f1641(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T158f1640(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T249f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T803f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T803f33(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T803f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T803f31(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T803c30(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T803f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T803f9(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T803f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T249f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T158f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T158f1638(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T158f1637(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T249f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T802f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T802f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T802f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T802f33(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T802f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T802f31(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T802c30(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T802f4(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T802f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T158f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T158f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T158f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T158f1633(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T249f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T800f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T800f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T800f34(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T800f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T800f32(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T800f31(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T800c30(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T800f4(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T800f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T158f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T158f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T158f1630(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T797f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T777f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T777f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T777f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T777f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T777f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T777c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T797f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1138c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T797c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T249f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T776f26(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T776c25(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T776f2(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T776c24(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T158f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T158f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T158f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T158f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T158f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T158f1624(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T249f251(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T158f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T158f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T158f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T158f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T158f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T158f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T158f1617(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T158f1616(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T783f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T158f1615(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T793f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T784f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T784f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T784f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T784f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T784f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T784c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T793f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1135c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T793c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T249f299(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T783f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T783c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T783f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T590f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1069c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T542c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge792os6094;
extern T0* ge792ov6094;
extern T0* T783f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T590c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge769os12682;
extern T0* ge769ov12682;
extern T0* T157f741(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T166c31(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T783f2(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T158f563(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T402f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T158f1614(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T158f1613(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T158f1721(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T402f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T402f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T419f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T418f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T418f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T418f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T418f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T418f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T402f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T402f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T158f1612(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T158f1719(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T402f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T158f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T158f1610(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T524f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T158f1609(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T792f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T525f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T525f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T525f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T525f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T525f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T525c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T792f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1134c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T792c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T249f298(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T524f23(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T524c21(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T524f21p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T524f6(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T524f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T158f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T158f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T158f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T158f1605(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T158f1604(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T781f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T158f1603(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T791f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T782f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T782f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T782f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T782f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T782f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T782c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T791f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1133c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T791c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T249f297(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T781f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T781c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T781f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T781f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge769os12623;
extern T0* ge769ov12623;
extern T0* T157f571(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T426c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge769os12618;
extern T0* ge769ov12618;
extern T0* T157f740(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T426c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T781f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T158f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T158f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T158f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T158f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T158f1598(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T249f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T790c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T790f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T158f1597(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T789f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T760f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T760f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T760f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T760f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T760f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T760c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T789f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1132c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T789c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T249f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T759f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T759c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T759f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T158f1596(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T785f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T158f1595(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T788f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T786f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T786f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T786f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T786f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T786f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T786c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T788f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1131c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T788c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T249f294(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T785c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T785f2(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T785f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T785f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T785f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T158f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T158f1593(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T787f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T696f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T696f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T696f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T696f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T696f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T696c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T787f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1130c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T787c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T158f1592(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T249f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T695c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T158f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T158f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T158f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T158f1588(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T158f1587(T0* C);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T249f292(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T780f16(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T780c15(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge769os12669;
extern T0* ge769ov12669;
extern T0* T157f615(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T166c26(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T780f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T158f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T158f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T158f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T158f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T158f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T158f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T158f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T158f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T158f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T158f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T158f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T158f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T158f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T158f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T158f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T158f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T158f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T158f1569(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T158f1568(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T249f291(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T775f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T775c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge769os12668;
extern T0* ge769ov12668;
extern T0* T157f738(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T166c29(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T775f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T158f1567(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T249f289(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T774c16(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T249f290(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T445f51(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T445f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T158f1566(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T158f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T158f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T158f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T249f331(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T464f73(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T464f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T158f1564(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T158f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T249f330(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T464f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T158f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T158f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T158f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T158f1560(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T158f1559(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T249f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T773c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T158f1558(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T158f1557(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T249f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T769c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T158f1556(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T249f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T772f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T772c31(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge769os12647;
extern T0* ge769ov12647;
extern T0* T157f580(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T166c43(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge769os12670;
extern T0* ge769ov12670;
extern T0* T157f737(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T451c46(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T451f52(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T451f53(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T451f2(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T772f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T158f1555(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T249f286(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T771f32(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T771c31(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge769os12683;
extern T0* ge769ov12683;
extern T0* T157f583(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T166c46(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge769os12631;
extern T0* ge769ov12631;
extern T0* T157f736(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T451c48(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T771f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T158f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T158f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T158f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T158f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T158f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T158f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T158f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T158f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T158f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T158f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T158f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T158f1543(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T158f1542(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T249f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T464f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T158f1541(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T249f284(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T464f70(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T158f1540(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T249f282(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T445f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T158f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T158f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T158f1537(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T768f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T697f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T697f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T697f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T697f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T697f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T697c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T768f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1128c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T768c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T158f1536(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T158f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T927f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T663f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T624f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T624f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T158f1535(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T249f281(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T767f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T767c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge769os12615;
extern T0* ge769ov12615;
extern T0* T157f735(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T426c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T767f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T158f1534(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T249f280(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T766f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T766c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T766f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T158f1533(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T249f279(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T765f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T765c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T765f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T158f1532(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T249f278(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T764f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T764c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T764f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T158f1531(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T249f277(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T158f1530(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T158f1529(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T761f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T712f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T712f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T712f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T712f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T712f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T712c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T761f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1126c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T761c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T249f276(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T158f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T158f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T158f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T158f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T158f1524(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T158f1523(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T249f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T158f1522(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T158f1521(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T158f1734(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge247os1589;
extern T0* ge247ov1589;
extern T0* T158f681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T158f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T158f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T158f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T158f1517(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T158f1516(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T158f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T926f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T212f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T158f1515(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T249f275(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T758f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T758f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T758c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge769os12671;
extern T0* ge769ov12671;
extern T0* T157f734(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T423c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T423f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T423f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T423f2(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T758f4(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T249f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T158f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T158f1513(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T757f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T744f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T744f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T744f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T744f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T744f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T744c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T757f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1125c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T757c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T249f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T743f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T743c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T743f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T158f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T158f1511(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T756f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T691f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T691f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T691f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T691f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T691f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T691c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T756f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1124c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T756c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T158f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T158f1509(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T158f1508(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T694f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T690f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T690f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T690f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T690f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T690f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T690c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T694f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1106c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T694c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T249f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T754f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T754c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T754f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T158f1507(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T158f1506(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T249f270(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T752f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T752f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T752c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T752f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T158f1505(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T158f1504(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T249f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T158f1503(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T158f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T119f104(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T158f1502(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T751f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T750f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T750f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T750f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T750f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T750f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T750c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T751f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1122c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T751c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T249f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T158f1501(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T745f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T158f1500(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T748f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T746f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T746f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T746f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T746f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T746f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T746c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T748f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1121c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T748c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T249f267(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T745c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T745f2(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T745f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge643os6094;
extern T0* ge643ov6094;
extern T0* T745f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T158f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T158f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T158f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T158f1496(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T158f1495(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T747f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T707f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T707f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T707f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T707f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T707f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T707c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T747f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1120c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T747c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T249f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T706c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T706f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T249f265(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge769os12644;
extern T0* ge769ov12644;
extern T0* T157f587(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T166c50(void);
/* ET_AST_FACTORY.tokens */
extern T0* T249f332(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T626f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T626c10(void);
/* ET_COMPOUND.make */
extern void T626f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge769os12646;
extern T0* ge769ov12646;
extern T0* T157f577(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T166c40(void);
/* ET_COMPOUND.tokens */
extern T0* T626f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T158f1494(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T249f236(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T626c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T626f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge731os6094;
extern T0* ge731ov6094;
extern T0* T626f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T158f1493(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T739f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T739f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T739f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T739f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T739f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T739c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1118c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T742c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T158f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T158f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T158f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T158f1489(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T158f1488(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T740f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T734f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T734f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T734f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T734f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T734f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T734c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T740f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1117c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T740c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T249f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T741c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge769os12617;
extern T0* ge769ov12617;
extern T0* T157f573(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T426c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T741f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T158f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T158f1486(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T737f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T736f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T736f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T736f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T736f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T736f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T736c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T737f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1116c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T737c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T249f263(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T158f1485(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T729f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T158f1484(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T732f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T730f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T730f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T730f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T730f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T730f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T730c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T732f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T732c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T249f262(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T729f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T729c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T729f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge729os6094;
extern T0* ge729ov6094;
extern T0* T729f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge769os12691;
extern T0* ge769ov12691;
extern T0* T157f584(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T166c47(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T729f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T158f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T158f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T158f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T158f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T158f1479(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T728f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T728f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T728f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T728f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T728f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T728c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1114c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T731c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T249f261(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T727c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T158f1478(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T723f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T158f1477(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T726f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T724f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T724f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T724f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T724f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T724f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T724c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T726f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1112c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T726c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T249f260(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T723c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge752os6094;
extern T0* ge752ov6094;
extern T0* T723f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T158f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T158f1475(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T158f1474(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T725f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T703f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T703f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T703f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T703f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T703f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T703c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T725f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1111c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T725c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T249f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T702f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T702c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T702f4(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T249f247(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T929c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T166f12(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T166f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T158f1473(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T158f1472(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T722f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T720f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T720f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T720f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T720f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T720f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T720c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T722f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1110c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T722c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T249f258(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T719c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T158f1471(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T716f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T158f1470(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T721f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T718f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T718f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T718f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T718f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T718f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T718c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T721f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T721c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T249f257(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T716c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge736os6094;
extern T0* ge736ov6094;
extern T0* T716f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T158f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T158f1468(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T717f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T701f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T701f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T701f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T701f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T701f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T701c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T717f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1108c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T717c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T249f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T700f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T700f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T700c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T700f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T158f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T158f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T158f1465(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T158f1464(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T715f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T522f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T522f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T522f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T522f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T522f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T522c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T715f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1107c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T715c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T249f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T521f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T521c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge769os12641;
extern T0* ge769ov12641;
extern T0* T157f592(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T166c55(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T521f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T249f252(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T711c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T158f1463(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T158f1462(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T249f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T714f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T714c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T714f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T158f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T158f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T158f1459(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T158f1458(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T249f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T710f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T710c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge769os12612;
extern T0* ge769ov12612;
extern T0* T157f567(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T426c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T710f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T158f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T158f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T158f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T158f1454(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T249f249(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T158f1453(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T158f1452(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T158f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T404f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T404f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T404f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1014f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T1014f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T708f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T404f4(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T249f329(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T708f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T708c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T708f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge525os6094;
extern T0* ge525ov6094;
extern T0* T708f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge769os12638;
extern T0* ge769ov12638;
extern T0* T157f586(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T166c49(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T708f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T158f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T158f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T158f1449(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T249f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T705f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T705f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T705c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T705f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T158f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T158f1447(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T158f1446(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T249f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T699c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge769os12611;
extern T0* ge769ov12611;
extern T0* T157f575(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T426c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T699f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T158f1445(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T249f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T698c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge769os12610;
extern T0* ge769ov12610;
extern T0* T157f574(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T426c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T698f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T158f1444(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T249f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T692c13(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge719os21884;
extern T0* ge719ov21884;
extern T0* T692f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T692f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T158f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T158f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T158f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T158f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T158f1439(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T678f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T627f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T627f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T627f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T627f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T627f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T627c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T678f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1101c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T678c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T158f1438(T0* C);
/* ET_COMPOUND.put_first */
extern void T626f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T158f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T158f1436(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T249f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge769os12666;
extern T0* ge769ov12666;
extern T0* T157f582(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T166c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T158f1435(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T158f1434(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T249f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge769os12655;
extern T0* ge769ov12655;
extern T0* T157f581(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T166c44(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T158f1433(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T158f1432(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T249f241(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge769os12678;
extern T0* ge769ov12678;
extern T0* T157f598(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T166c61(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T158f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T158f1430(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T249f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T158f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T158f1428(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T249f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T158f1427(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T158f1426(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T249f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T158f1425(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T158f1424(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T249f237(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T158f1423(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T158f1422(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T687f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T548f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T548f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T548f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T548f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T548f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T548c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T687f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1105c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T687c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T249f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T688f59(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T688c58(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge769os12664;
extern T0* ge769ov12664;
extern T0* T157f733(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T166c30(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T688f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T158f1421(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T249f234(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T686f63(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T686c62(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T686f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T158f1420(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T683f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T681f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T681f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T681f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T681f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T681f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T249f233(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T249f230(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T684c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T158f1419(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T158f1418(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T158f1737(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T249f232(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T928c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T160f12(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T249f231(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T160f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T158f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T158f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T158f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T158f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T158f1413(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T680f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T560f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T560f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T560f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T560f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T560f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T560c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T680f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1103c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T680c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T249f228(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T160f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T158f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T158f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T158f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T158f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T158f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T158f1407(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T249f229(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T158f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T158f1405(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T249f227(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T289f89(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T289c88(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge769os12685;
extern T0* ge769ov12685;
extern T0* T157f676(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T289f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T158f1404(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T158f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T249f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T159c93(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T249f317(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T55f179(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T406f42(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T406f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T406f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T406f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T406f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T55f71(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T406f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T406f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T406f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T406f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T406f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T406f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T406f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T406f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T406f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T406f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T406f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T406f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T249f328(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T918c55(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T55f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T397f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T537f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T529f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T158f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T158f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T158f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T158f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T158f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T158f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T158f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T158f1396(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T158f1395(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T679f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T607f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T607f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T607f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T607f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T607f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T158f1394(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T249f128(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T550f97(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T550c96(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge769os12637;
extern T0* ge769ov12637;
extern T0* T157f721(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T550f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T158f1393(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T158f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T52f204(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T889f627(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T889f626(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T889f624(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T889c625(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T52f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f204(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T52f203(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T889c623(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f203(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T158f1715(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T55f167(T0* C);
/* ET_CLASS.set_parsed */
extern void T55f166(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T549f1(T0* C);
/* ET_BIT_N.compute_size */
extern void T549f96(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T249f316(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T549f97(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T549c95(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T549f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T158f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T158f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T158f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T158f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T158f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T158f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T158f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T158f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T158f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T158f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T158f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T158f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T158f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T158f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T158f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T158f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T158f1376(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T158f1375(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T677f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T676f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T676f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T676f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T676f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T676f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T676c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T677f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1100c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T677c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T249f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T675f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T675c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge769os12689;
extern T0* ge769ov12689;
extern T0* T157f604(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T166c67(void);
/* ET_VARIANT.tokens */
extern T0* T675f2(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T249f117(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T158f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T158f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T158f1372(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T158f1371(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T673f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T673f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T673f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T673f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T673f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T673c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1099c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T674c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T158f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T672f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T249f327(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T672f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T672c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T672f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T672f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge769os12662;
extern T0* ge769ov12662;
extern T0* T157f613(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T166c76(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T672f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T158f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T158f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T158f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T158f1367(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T671f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T505f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T505f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T505f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T505f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T505f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T505c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T671f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1098c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T671c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T158f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T504f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T249f326(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T504f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T504c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T504f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T504f6(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T504f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T158f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T158f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T158f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T158f1364(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T158f1363(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T670f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T629f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T629f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T629f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T629f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T629f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T629c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T670f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1097c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T670c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T158f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T628f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T249f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T628f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T628f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T628c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T628f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T628f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge769os12650;
extern T0* ge769ov12650;
extern T0* T157f724(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T166c32(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T628f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T158f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T158f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T158f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T158f1359(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T158f1358(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T669f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T623f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T623f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T623f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T623f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T623f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T623c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T669f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1096c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T669c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T158f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T622f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T249f324(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T622f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T622f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T622c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T622f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T622f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge769os12677;
extern T0* ge769ov12677;
extern T0* T157f723(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T166c35(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T622f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T158f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T158f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T158f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T158f1354(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T158f1353(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T158f1736(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T404f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T404f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T1013f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T1012f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T1012f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T1012f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T1012f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T1012f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T404f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T404f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T249f311(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T249f312(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T816c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T158f1352(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T158f1351(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T158f1735(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T404f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T404f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T404f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T816f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T404f2(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T404f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T158f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T158f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T158f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T158f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T158f1346(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T158f1345(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T667f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T662f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T662f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T662f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T662f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T662f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T662c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T667f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1095c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T667c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T249f225(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T249f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T663c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T158f1344(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T158f1343(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T666f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T664f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T664f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T664f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T664f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T664f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T664c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T666f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1094c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T666c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T249f223(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T927c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge952os14393;
extern T0* ge952ov14393;
extern T0* T158f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T158f1342(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T249f222(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T158f1341(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T624f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T158f1340(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T158f1339(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T927f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T927f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T663f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T624f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T624f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T158f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T158f1337(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T660f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T625f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T625f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T625f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T625f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T625f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T158f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T401f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T401f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T401f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T401f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T249f323(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T624f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T624c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T624f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge701os6094;
extern T0* ge701ov6094;
extern T0* T624f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge769os12665;
extern T0* ge769ov12665;
extern T0* T157f589(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T166c52(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T624f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T158f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T158f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T158f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T158f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T158f1332(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T158f1331(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T659f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T655f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T655f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T655f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T655f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T655f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T655c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T659f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1092c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T659c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T249f221(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T249f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T212c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T158f1330(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T158f1329(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T658f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T656f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T656f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T656f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T656f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T656f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T656c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T658f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1091c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T658c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T249f219(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T926c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T158f1328(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T249f218(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T158f1327(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T207f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T158f1326(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T158f1325(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T926f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T207f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T207f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T158f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T158f1323(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T653f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T631f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T631f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T631f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T631f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T631f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T158f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T400f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T400f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T400f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T400f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T249f322(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T207c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T207f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge690os6094;
extern T0* ge690ov6094;
extern T0* T207f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T207f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T158f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T158f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T158f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T158f1319(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T158f1318(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T651f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T649f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T649f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T649f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T649f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T649f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T158f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T158f878(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T249f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T652f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T652c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T652f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T652f5(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge774os21280;
extern T0* ge774ov21280;
extern T0* T652f2(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge769os12632;
extern T0* ge769ov12632;
extern T0* T157f585(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T166c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T158f1317(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T249f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T648f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T648c81(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T648f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T648f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T158f1316(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T158f1315(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T249f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T648c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T158f1314(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T249f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T648c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T158f1313(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T249f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T648c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T158f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T249f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T648c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T158f1311(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T249f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T648c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T158f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T249f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T648c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T158f1309(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T249f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T648c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T158f1308(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T249f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T648c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T158f1307(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T249f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T648c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T158f1306(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T249f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T648c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T158f1305(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T249f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T648c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T158f1304(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T249f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T648c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T158f1303(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T249f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T648c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T158f1302(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T249f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T648c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T158f1301(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T249f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T648c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T158f1300(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T249f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T648c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T158f1299(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T249f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T648c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T158f1298(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T249f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T648c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T158f1297(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T249f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T648c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T158f1296(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T647f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T572f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T572f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T572f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T572f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T572f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T572c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T647f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T647c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T249f196(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T650c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T158f1295(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T158f1294(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T642f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T571f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T571f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T571f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T571f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T571f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T158f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T158f877(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T249f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T646f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T646c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T646f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T646f5(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge801os21280;
extern T0* ge801ov21280;
extern T0* T646f2(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge769os12659;
extern T0* ge769ov12659;
extern T0* T157f588(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T166c51(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T158f1293(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T158f1292(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T158f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T158f876(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T249f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T644f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T644c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T644f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T644f5(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge811os21280;
extern T0* ge811ov21280;
extern T0* T644f2(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge769os12672;
extern T0* ge769ov12672;
extern T0* T157f595(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T166c58(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T158f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T158f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T158f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T158f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T158f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T158f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T158f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T158f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T158f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T158f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T158f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T158f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T158f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T158f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T158f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T158f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T158f1275(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T249f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T645f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T645c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T645f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T645f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T158f1274(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T249f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T645c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T158f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T249f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T645c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T158f1272(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T249f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T645c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T158f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T249f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T645c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T158f1270(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T249f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T645c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T158f1269(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T249f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T645c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T158f1268(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T249f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T645c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T158f1267(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T249f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T645c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T158f1266(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T249f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T645c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T158f1265(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T249f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T645c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T158f1264(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T249f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T645c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T158f1263(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T249f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T645c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T158f1262(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T249f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T645c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T158f1261(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T249f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T645c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T158f1260(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T249f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T645c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T158f1259(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T249f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T645c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T158f1258(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T158f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T249f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T643f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T643c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T643f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T643f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T158f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T249f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T643c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T158f1255(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T249f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T643c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T158f1254(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T158f1253(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T641f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T618f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T618f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T618f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T618f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T618f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T618c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T641f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1086c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T641c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T249f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T158f1252(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T158f1251(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T640f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T636f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T636f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T636f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T636f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T636f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T636c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T640f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1085c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T640c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T249f172(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T158f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T158f1249(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T158f1248(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T472f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T471f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T471f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T471f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T471f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T471f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T471c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T472f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1040c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T472c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T158f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T158f1246(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T158f1245(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T637f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T615f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T615f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T158f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T158f1746(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T52f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T889c628(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T52f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f205(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T639f71(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T158f1781(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge769os12571;
extern T0* ge769ov12571;
extern T0* T157f438(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge769os12536;
extern T0* ge769ov12536;
extern T0* T157f554(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge769os12535;
extern T0* ge769ov12535;
extern T0* T157f552(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge769os12526;
extern T0* ge769ov12526;
extern T0* T157f550(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge769os12525;
extern T0* ge769ov12525;
extern T0* T157f548(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge769os12591;
extern T0* ge769ov12591;
extern T0* T157f499(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge769os12599;
extern T0* ge769ov12599;
extern T0* T157f545(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge769os12598;
extern T0* ge769ov12598;
extern T0* T157f543(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge769os12597;
extern T0* ge769ov12597;
extern T0* T157f541(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge769os12549;
extern T0* ge769ov12549;
extern T0* T157f489(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T480c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T480f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge769os12576;
extern T0* ge769ov12576;
extern T0* T157f529(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge769os12574;
extern T0* ge769ov12574;
extern T0* T157f487(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge769os12555;
extern T0* ge769ov12555;
extern T0* T157f485(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge769os12544;
extern T0* ge769ov12544;
extern T0* T157f479(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge769os12556;
extern T0* ge769ov12556;
extern T0* T157f477(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge769os12550;
extern T0* ge769ov12550;
extern T0* T157f475(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T52f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T889c629(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T921f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T52f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge769os12604;
extern T0* ge769ov12604;
extern T0* T157f368(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T157f405(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge769os12554;
extern T0* ge769ov12554;
extern T0* T157f434(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T158f1780(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge769os12566;
extern T0* ge769ov12566;
extern T0* T157f33(T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge769os12582;
extern T0* ge769ov12582;
extern T0* T157f406(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T158f1779(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge769os12518;
extern T0* ge769ov12518;
extern T0* T157f527(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge769os12522;
extern T0* ge769ov12522;
extern T0* T157f525(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge769os12521;
extern T0* ge769ov12521;
extern T0* T157f523(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge769os12520;
extern T0* ge769ov12520;
extern T0* T157f521(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge769os12517;
extern T0* ge769ov12517;
extern T0* T157f519(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge769os12519;
extern T0* ge769ov12519;
extern T0* T157f517(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge769os12516;
extern T0* ge769ov12516;
extern T0* T157f515(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge769os12515;
extern T0* ge769ov12515;
extern T0* T157f513(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge769os12514;
extern T0* ge769ov12514;
extern T0* T157f511(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge769os12513;
extern T0* ge769ov12513;
extern T0* T157f509(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge769os12512;
extern T0* ge769ov12512;
extern T0* T157f507(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge769os12511;
extern T0* ge769ov12511;
extern T0* T157f505(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge769os12510;
extern T0* ge769ov12510;
extern T0* T157f503(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge769os12509;
extern T0* ge769ov12509;
extern T0* T157f501(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge769os12596;
extern T0* ge769ov12596;
extern T0* T157f497(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge769os12595;
extern T0* ge769ov12595;
extern T0* T157f495(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge769os12593;
extern T0* ge769ov12593;
extern T0* T157f493(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge769os12590;
extern T0* ge769ov12590;
extern T0* T157f414(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge769os12589;
extern T0* ge769ov12589;
extern T0* T157f412(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge769os12551;
extern T0* ge769ov12551;
extern T0* T157f483(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge769os12543;
extern T0* ge769ov12543;
extern T0* T157f481(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T158f1778(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T158f1777(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T157f39(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T158f1776(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge769os12606;
extern T0* ge769ov12606;
extern T0* T157f470(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T157f44(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge769os12524;
extern T0* ge769ov12524;
extern T0* T157f41(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T158f1775(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge769os12603;
extern T0* ge769ov12603;
extern T0* T157f468(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge769os12562;
extern T0* ge769ov12562;
extern T0* T157f466(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge769os12579;
extern T0* ge769ov12579;
extern T0* T157f464(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge769os12572;
extern T0* ge769ov12572;
extern T0* T157f462(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge769os12558;
extern T0* ge769ov12558;
extern T0* T157f460(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge769os12527;
extern T0* ge769ov12527;
extern T0* T157f458(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge769os12523;
extern T0* ge769ov12523;
extern T0* T157f456(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge769os12565;
extern T0* ge769ov12565;
extern T0* T157f454(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge769os12564;
extern T0* ge769ov12564;
extern T0* T157f452(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge769os12563;
extern T0* ge769ov12563;
extern T0* T157f450(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T157f449(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge769os12561;
extern T0* ge769ov12561;
extern T0* T157f447(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T158f1774(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge769os12508;
extern T0* ge769ov12508;
extern T0* T157f445(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T157f444(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge769os12507;
extern T0* ge769ov12507;
extern T0* T157f442(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T158f1773(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge769os12539;
extern T0* ge769ov12539;
extern T0* T157f440(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge769os12592;
extern T0* ge769ov12592;
extern T0* T157f436(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T158f1772(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T158f1771(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge769os12557;
extern T0* ge769ov12557;
extern T0* T157f431(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge769os12575;
extern T0* ge769ov12575;
extern T0* T157f427(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge769os12547;
extern T0* ge769ov12547;
extern T0* T157f429(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge769os12553;
extern T0* ge769ov12553;
extern T0* T157f425(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge769os12552;
extern T0* ge769ov12552;
extern T0* T157f423(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge769os12541;
extern T0* ge769ov12541;
extern T0* T157f421(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T157f417(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge769os12540;
extern T0* ge769ov12540;
extern T0* T157f419(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T158f1770(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T158f1769(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge769os12570;
extern T0* ge769ov12570;
extern T0* T157f410(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge769os12528;
extern T0* ge769ov12528;
extern T0* T157f408(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T158f1768(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T158f1767(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge769os12505;
extern T0* ge769ov12505;
extern T0* T157f399(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge769os12534;
extern T0* ge769ov12534;
extern T0* T157f397(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge769os12605;
extern T0* ge769ov12605;
extern T0* T157f395(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge769os12577;
extern T0* ge769ov12577;
extern T0* T157f36(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T157f394(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge769os12569;
extern T0* ge769ov12569;
extern T0* T157f401(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T158f1766(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge769os12477;
extern T0* ge769ov12477;
extern T0* T157f71(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T157f392(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge769os12537;
extern T0* ge769ov12537;
extern T0* T157f377(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T158f1765(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge769os12532;
extern T0* ge769ov12532;
extern T0* T157f386(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge769os12560;
extern T0* ge769ov12560;
extern T0* T157f384(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge769os12586;
extern T0* ge769ov12586;
extern T0* T157f382(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge769os12587;
extern T0* ge769ov12587;
extern T0* T157f380(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge769os12538;
extern T0* ge769ov12538;
extern T0* T157f375(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge769os12529;
extern T0* ge769ov12529;
extern T0* T157f373(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge769os12581;
extern T0* ge769ov12581;
extern T0* T157f371(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge769os12585;
extern T0* ge769ov12585;
extern T0* T157f369(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge769os12600;
extern T0* ge769ov12600;
extern T0* T157f365(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge769os12530;
extern T0* ge769ov12530;
extern T0* T157f179(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T157f367(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge769os12584;
extern T0* ge769ov12584;
extern T0* T157f388(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T249f321(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T639f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T639f76(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T639f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T639f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T639f73(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T639f72(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge769os12663;
extern T0* ge769ov12663;
extern T0* T157f579(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T166c42(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T639c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T639f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T158f1244(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T158f1243(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T249f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T303f73(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T303f71(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T303f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T303f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T303f68(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T158f1242(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T158f1241(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T249f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T638f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T638f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T638f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T638f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T638f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T638f71(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T638f70(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T638f69(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T638c68(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T638f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T158f1240(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T158f1239(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T249f169(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T298f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T298f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T298f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T298f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T298f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T298f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T298f70(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T298f69(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T158f1238(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T158f1237(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T619f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T614f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T614f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T614f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T614f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T614f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T158f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T158f1745(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T163f72(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T158f1764(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T158f1763(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T158f1762(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T158f1761(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T158f1760(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge769os12607;
extern T0* ge769ov12607;
extern T0* T157f471(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T158f1759(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T158f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T158f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T158f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T158f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T158f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T158f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T158f1752(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T158f1751(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T158f1750(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T158f1749(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T158f1748(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T249f320(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T163f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T163f78(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T163f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T163f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T163f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T163f74(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T163f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T163c71(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T163f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T158f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T158f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T158f1234(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T158f1233(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T249f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T633f75(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T633f73(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T633f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T633f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T633f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T633f69(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T633c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T633f2(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T633f68p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T158f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T158f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T158f1230(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T158f1229(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T249f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T632f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T632f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T632f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T632f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T632f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T632f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T632f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T632f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T632f70(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T632c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T632f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T158f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T158f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T158f1226(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T158f1225(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T249f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T630f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T630f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T630f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T630f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T630f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T630f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T630f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T630f71(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T630f70(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T630c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T630f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T158f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T158f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T158f1222(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T158f1221(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T249f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T226f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T226c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge769os12687;
extern T0* ge769ov12687;
extern T0* T157f743(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T166c34(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T226f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T158f1220(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T158f1219(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T249f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T224f68(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T224c67(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T224f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T158f1218(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T158f1217(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T249f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T227f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T227c65(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T227f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T158f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T158f1215(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T158f1733(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T239f24(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T239f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T239f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T871f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T239f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T871f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T239f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T239f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T239f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T239f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T239f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T239f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T871f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T239f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T239f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T239f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T239f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T239f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T239f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T239f3(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T239f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T51f170(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.register_feature */
extern void T48f190(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T158f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T639f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T158f1214(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T249f160(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T158f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T158f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T158f1211(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T158f1732(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T401f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T401f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T400f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T400f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T239f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T239f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T871f2(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T239f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T239f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T239f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T158f1210(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T158f1209(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T158f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T241f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T241f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T241f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T875f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T241f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T875f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T241f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T241f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T241f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T241f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T241f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T241f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T875f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T241f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T241f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T241f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T241f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T241f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T241f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T241f3(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T241f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T158f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T163f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T158f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T158f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T158f1206(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T158f1205(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T158f1730(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T241f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T241f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T875f2(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T241f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T241f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T241f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T158f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T158f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T158f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T158f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T158f1200(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T158f1199(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T613f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T612f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T612f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T612f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T612f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T612f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T612c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T613f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1078c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T613c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T249f159(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T416c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge769os12654;
extern T0* ge769ov12654;
extern T0* T157f601(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T166c64(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T416f2(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T249f151(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T158f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T158f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T158f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T158f1195(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T502f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T158f1194(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T611f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T503f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T503f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T503f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T503f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T503f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T503c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T611f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1077c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T611c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T249f158(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T502c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge554os6094;
extern T0* ge554ov6094;
extern T0* T502f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T158f1193(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T158f1729(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T239f19(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T239f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T239f25(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T241f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T241f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T241f25(T0* C);
/* ET_CLASS.set_procedures */
extern void T55f171(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T148f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T148f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T239f2(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T55f170(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T146f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T146f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T241f2(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T158f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T158f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T158f1190(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T610f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T609f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T609f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T609f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T609f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T609f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T609c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T610f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1076c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T610c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T249f157(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T158f1189(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T925f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T158f1188(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T606f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T602f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T602f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T602f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T602f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T602f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T602c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T606f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1075c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T606c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T249f156(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T925f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T925c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T925f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge860os6094;
extern T0* ge860ov6094;
extern T0* T925f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T925f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T158f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T158f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T158f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T158f1184(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T604f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T597f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T597f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T597f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T597f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T597f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T597c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T604f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1074c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T604c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T249f155(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T605c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T605f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T158f1183(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T249f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T603c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge769os12613;
extern T0* ge769ov12613;
extern T0* T157f566(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T426c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T603f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T158f1182(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T600f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T599f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T599f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T599f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T599f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T599f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T599c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T600f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1073c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T600c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T249f153(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T158f1181(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T500f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T158f1180(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T595f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T501f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T501f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T501f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T501f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T501f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T501c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T595f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1072c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T595c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T249f152(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T500c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T500f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge545os6094;
extern T0* ge545ov6094;
extern T0* T500f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge769os12640;
extern T0* ge769ov12640;
extern T0* T157f600(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T166c63(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T500f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T158f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T158f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T158f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T158f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T158f1175(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T158f1174(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T590f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T542f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T542f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T542f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T542f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T542f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T249f148(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T158f1173(T0* C);
/* ET_CREATOR.put_first */
extern void T592f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T158f1172(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T594f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T593f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T593f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T593f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T593f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T593f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T593c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T594f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1071c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T594c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T249f150(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T592c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T592f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T592f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge769os12642;
extern T0* ge769ov12642;
extern T0* T157f605(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T166c68(void);
/* ET_CREATOR.tokens */
extern T0* T592f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T158f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T158f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T158f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T158f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T158f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T158f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T158f946(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T158f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T158f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T158f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T158f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T158f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T158f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T158f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T158f1158(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T591f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T499f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T499f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T499f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T499f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T499f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T499c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T591f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1070c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T591c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T158f1157(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T498f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T158f1156(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T249f149(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T498c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge549os6094;
extern T0* ge549ov6094;
extern T0* T498f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T158f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T158f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T158f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T158f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T158f1151(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T292f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T158f1150(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T589f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T565f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T565f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T565f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T565f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T565f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T565c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T589f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1068c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T589c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T249f147(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T292c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T292f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T292f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge769os12674;
extern T0* ge769ov12674;
extern T0* T157f610(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T166c73(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T292f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T158f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T158f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T158f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T158f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T158f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T158f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T158f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T158f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T158f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T158f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T158f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T158f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T158f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T158f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T158f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T158f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T158f1133(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T588f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T587f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T587f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T587f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T587f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T587f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T249f146(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T158f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T158f1131(T0* C);
/* ET_CLIENTS.put_first */
extern void T415f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T158f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T158f1129(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T585f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T578f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T578f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T578f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T578f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T578f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T578c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T585f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1066c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T585c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T249f145(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T415f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T415c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T415f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T415f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T415f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T158f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T158f1127(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T249f144(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T415c18(void);
/* ET_CLIENTS.make */
extern void T415f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T158f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T158f1125(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T158f1124(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T581f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T158f1123(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T584f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T582f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T582f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T582f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T582f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T582f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T582c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T584f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1065c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T584c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T249f142(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T581c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T581f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T581f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T158f1122(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T158f1121(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T580f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T577f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T577f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T577f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T577f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T577f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T577c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T580f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1064c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T580c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T249f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T158f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T158f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T158f1118(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T158f1117(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T249f141(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T579c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge769os12633;
extern T0* ge769ov12633;
extern T0* T157f722(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T166c28(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T579f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T158f1116(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T575f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T564f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T564f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T564f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T564f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T564f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T564c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T575f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1063c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T575c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T158f1115(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T291f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T158f1114(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T249f140(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T291c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T291f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge552os6094;
extern T0* ge552ov6094;
extern T0* T291f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge769os12652;
extern T0* ge769ov12652;
extern T0* T157f594(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T166c57(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T291f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T158f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T158f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T158f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T158f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T158f1109(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T158f1108(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T574f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T570f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T570f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T570f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T570f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T570f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T570c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T574f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1062c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T574c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T249f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T573c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge769os12634;
extern T0* ge769ov12634;
extern T0* T157f576(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T166c39(void);
/* ET_RENAME.tokens */
extern T0* T573f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T158f1107(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T249f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T158f1106(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T290f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T158f1105(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T568f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T563f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T563f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T563f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T563f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T563f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T563c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T568f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1061c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T568c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T249f137(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T290c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T290f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge577os6094;
extern T0* ge577ov6094;
extern T0* T290f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge769os12676;
extern T0* ge769ov12676;
extern T0* T157f597(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T166c60(void);
/* ET_RENAME_LIST.tokens */
extern T0* T290f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T158f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T158f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T158f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T158f1101(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T158f1100(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T567f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T566f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T566f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T566f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T566f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T566f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T566c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T567f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1060c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T567c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T249f136(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T158f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T158f1098(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T293f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T158f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T158f1096(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T158f1095(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T559f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T497f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T497f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T497f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T497f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T497f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T497c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T559f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1058c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T559c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T249f135(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T293c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T293f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge572os6094;
extern T0* ge572ov6094;
extern T0* T293f5(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge769os12660;
extern T0* ge769ov12660;
extern T0* T157f602(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T166c65(void);
/* ET_PARENT_LIST.tokens */
extern T0* T293f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T158f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T158f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T158f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T158f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T158f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T158f1089(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T562f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T561f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T561f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T561f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T561f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T561f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T561c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T562f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1059c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T562c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T158f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T249f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T288c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T288f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T288f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T397f12(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T160f11(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T55f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T397f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T158f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T158f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T158f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T158f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T158f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T158f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T158f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T158f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T158f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T158f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T158f1078(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T158f1077(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T558f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T496f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T496f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T496f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T558f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1057c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T558c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T249f134(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T158f1076(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T158f1075(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T555f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T553f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T553f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T553f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T553f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T553f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T553c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T555f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1056c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T555c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T249f133(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T249f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T556c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T158f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T158f1073(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T158f1728(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T543f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T249f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T557c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T543f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T543f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T158f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T158f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T158f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T158f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T158f1068(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T551f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T544f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T544f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T544f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T544f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T544f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T544c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T551f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1055c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T551c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T249f129(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T543f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T543c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T543f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge835os6094;
extern T0* ge835ov6094;
extern T0* T543f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T543f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T158f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T158f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T158f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T158f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T158f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T158f1062(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T249f130(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T158f1061(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T158f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T249f315(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T545c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T249f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T916c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T158f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T158f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T158f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T158f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T158f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T158f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T158f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T158f1053(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T546f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T536f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T536f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T536f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T536f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T536f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T158f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T158f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T158f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T158f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T158f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T158f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T158f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T158f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T158f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T158f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T158f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T158f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T158f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T158f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T158f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T158f1037(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T538f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T158f1036(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T540f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T539f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T539f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T539f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T539f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T539f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T539c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T540f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1052c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T540c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T249f127(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T538c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T538f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T538f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T538f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T158f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T158f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T158f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T158f1032(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T158f1031(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T535f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T530f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T530f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T530f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T530f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T530f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T158f1727(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T405f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T405f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T405f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T405f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T249f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T537f66(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T537c65(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T537f67(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge769os12609;
extern T0* ge769ov12609;
extern T0* T157f572(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T426c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T537f2(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T158f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T158f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T158f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T158f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T158f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T158f1026(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T158f1025(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T249f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T529f64(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T529c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T158f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T158f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T158f1022(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T533f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T532f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T532f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T532f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T532f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T532f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T532c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T533f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1050c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T533c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T249f124(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T158f1021(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T397f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T537f69(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T529f65(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T397f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T397f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T158f1020(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T528f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T527f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T527f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T527f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T527f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T527f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T527c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T528f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T528c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T249f123(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T397f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T397c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T397f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge559os6094;
extern T0* ge559ov6094;
extern T0* T397f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T397f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T158f1019(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T158f1018(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T158f1724(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T405f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T405f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T405f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1015f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1015f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T397f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T537f68(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T405f1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T397f2(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T55f169(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T158f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T158f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T158f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T158f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T158f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T158f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T158f1011(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T55f165(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T55f164(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T55f172(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T55f163(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T158f578(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T52f202(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T55f29(T0* C);
/* ET_CLASS.set_name */
extern void T55f177(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T158f875(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T158f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T158f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T158f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T158f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T526f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T519f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T519f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T519f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T519f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T519f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T519c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T526f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1048c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T526c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T249f122(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T158f1006(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T520f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T516f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T516f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T516f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T516f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T516f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T516c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T520f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1047c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T520c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T249f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T523c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T523f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T158f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T158f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T158f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T158f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T158f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T158f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T158f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T158f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T158f997(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T158f996(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T517f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T510f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T510f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T510f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T510f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T510f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T510c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T517f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1046c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T517c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T249f120(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T158f995(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T249f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T158f994(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T158f993(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T512f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T508f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T508f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T508f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T508f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T508f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T508c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T512f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1045c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T512c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T249f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T158f992(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T249f116(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T158f991(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T158f990(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T506f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T494f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T494f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T494f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T494f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T494f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T494c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T506f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1044c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T506c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T158f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T158f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T158f987(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T158f986(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T249f115(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T158f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T158f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T158f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T158f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T158f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T158f980(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T158f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T158f1718(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T406f38(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T406f52(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T406f51(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T406f50(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T406f49(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T406f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1016f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1016f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T406f41(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T406f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T406f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T406f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T406f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T406f56(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T406f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T406f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T406f3(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T406f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T406f2(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T406f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T406f39(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T406f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T406f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T406f27(T0* C);
/* ET_CLASS.set_providers */
extern void T55f168(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T158f978(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T158f1717(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T158f1716(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T52f188(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T889c616(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T52f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f22(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T51f169(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_void_seed */
extern void T48f189(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge769os12602;
extern T0* ge769ov12602;
extern T0* T157f180(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T51f168(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_copy_seed */
extern void T48f188(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T52f187(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T889c615(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T52f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T51f167(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_default_create_seed */
extern void T48f187(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T55f206(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T55f205(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T55f204(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T55f203(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T55f202(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T55f201(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T55f200(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T55f199(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T288f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T293f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T293f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T158f977(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T158f976(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T55f198(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T158f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T158f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T158f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T158f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T158f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T158f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T158f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T158f968(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T158f967(T0* C);
/* ET_CLASS.set_leading_break */
extern void T55f197(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T158f966(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T158f929(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T478f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T477f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T477f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T477f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T477f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T477f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T477c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T478f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1042c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T478c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T475f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T474f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T474f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T474f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T474f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T474f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T474c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T475f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1041c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T475c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T469f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T468f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T468f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T468f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T468f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T468f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T468c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T469f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1039c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T469c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T466f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T465f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T465f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T465f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T465f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T465f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T465c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T466f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1038c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T466c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T463f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T462f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T462f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T462f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T462f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T462f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T462c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T463f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1037c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T463c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T460f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T459f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T459f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T459f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T459f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T459f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T459c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T460f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1036c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T460c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T458f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T457f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T457f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T457f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T457f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T457f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T457c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T458f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1035c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T458c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T453f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T452f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T452f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T452f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T452f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T452f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T452c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T453f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1033c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T453c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T450f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T449f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T449f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T449f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T449f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T449f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T449c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T450f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1032c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T450c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T447f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T446f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T446f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T446f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T446f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T446f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T446c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T447f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1031c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T447c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T444f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T443f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T443f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T443f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T443f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T443f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T443c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T444f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1030c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T444c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T439f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T438f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T438f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T438f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T438f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T438f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T438c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T439f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1028c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T439c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T436f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T435f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T435f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T435f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T435f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T435f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T435c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T436f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1027c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T436c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T433f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T432f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T432f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T432f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T432f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T432f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T432c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T433f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1026c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T433c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T430f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T429f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T429f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T429f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T429f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T429f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T429c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T430f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1025c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T430c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T425f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T424f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T424f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T424f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T424f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T424f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T424c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T425f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1023c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T425c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T422f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T421f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T421f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T421f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T421f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T421f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T421c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T422f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1022c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T422c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T158f928(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T158f926(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T158f945(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T158f951(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T158f955(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T158f381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T158f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T158f965(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T158f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T158f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T158f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T158f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T158f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T158f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T158f925(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T158f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T158f964(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T158f953(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T249f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T249f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T249f12(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T487f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T487c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T487f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T158f883(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T249f11(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T486f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T486c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T486f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T249f10(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T485f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T485c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T485f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T249f9(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T484f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T484c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T484f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T249f8(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T483f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T483c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T483f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T249f7(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T431f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T431c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T431f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T52f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T52f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T52f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T52f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T52f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T249f6(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T482f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T158f886(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T482c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T482f34(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T158f889(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T249f5(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T481f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T158f885(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T481c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T481f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T158f406(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T158f404(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T158f1744(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T158f402(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T158f963(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T249f4(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T480f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T52f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f169(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T249f3(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T479f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T158f884(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T479c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T479f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T158f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T249f114(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T492f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T492c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T492f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T52f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T52f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T158f961(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T249f113(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T491f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T491c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T491f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T52f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T249f2(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T445f47(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T445c46(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T445f4(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T445f48(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T445f49(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T158f954(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T158f960(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T158f959(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T249f112(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T166f27(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T166c38(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T249f111(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T423f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T249f110(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T249f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge769os12636;
extern T0* ge769ov12636;
extern T0* T157f612(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T166c75(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T249f108(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge769os12686;
extern T0* ge769ov12686;
extern T0* T157f611(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T166c74(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T249f107(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T166c37(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T249f106(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T249f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge769os12667;
extern T0* ge769ov12667;
extern T0* T157f609(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T166c72(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T249f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge769os12658;
extern T0* ge769ov12658;
extern T0* T157f608(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T166c71(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T249f103(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge769os12653;
extern T0* ge769ov12653;
extern T0* T157f607(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T166c70(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T249f102(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T166c36(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T249f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T249f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T249f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T249f98(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T249f97(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge769os12661;
extern T0* ge769ov12661;
extern T0* T157f603(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T166c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T249f96(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T249f95(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T451f47(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T451c51(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T249f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T249f93(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T249f92(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T182f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T249f91(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T249f90(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge769os12681;
extern T0* ge769ov12681;
extern T0* T157f599(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T166c62(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T249f89(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T204f28(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T249f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T249f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T249f86(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge769os12673;
extern T0* ge769ov12673;
extern T0* T157f596(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T166c59(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T249f85(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T249f84(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T166c33(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T249f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T249f82(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T249f81(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge769os12648;
extern T0* ge769ov12648;
extern T0* T157f593(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T166c56(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T249f80(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T249f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge769os12635;
extern T0* ge769ov12635;
extern T0* T157f591(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T166c54(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T249f78(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge769os12688;
extern T0* ge769ov12688;
extern T0* T157f590(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T166c53(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T249f77(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T249f76(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T461f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T461c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T461f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T461f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T461f2(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T249f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T249f74(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T249f73(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T490f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T490c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T490f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T490f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T490f2(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T249f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T249f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T249f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T249f69(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T249f68(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T420f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T249f67(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T249f66(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T467f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T467c24(void);
/* ET_VOID.make_token */
extern void T467f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T467f27(T0* C);
/* ET_VOID.tokens */
extern T0* T467f2(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T249f65(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T489f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T489c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T489f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T489f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T489f2(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T249f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T249f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T249f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T249f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T249f60(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T249f59(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T451c50(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T249f58(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T249f57(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T451c49(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T249f56(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T249f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T249f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T249f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T249f51(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T249f50(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge769os12657;
extern T0* ge769ov12657;
extern T0* T157f578(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T166c41(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T249f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T249f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T249f1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T158f958(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T249f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T249f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T249f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T249f44(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T249f43(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T426f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T249f42(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T464f58(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T464c68(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T464f69(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T249f41(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T249f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T464c67(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T249f39(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T464c66(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T249f38(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T426c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T249f37(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T464c65(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T158f389(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T158f957(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T158f956(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T249f36(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge769os12628;
extern T0* ge769ov12628;
extern T0* T157f570(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T426c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T249f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T249f34(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T249f33(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T473f82(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T249f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T249f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T249f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T249f29(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T249f28(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T476f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T249f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T249f26(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T249f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge769os12614;
extern T0* ge769ov12614;
extern T0* T157f565(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T426c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T249f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T157f564(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T470c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T470f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T470f2(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T249f23(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge769os12616;
extern T0* ge769ov12616;
extern T0* T157f563(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T426c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T249f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T464c64(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T249f21(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T464c63(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T249f20(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T426c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T249f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T464c62(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T249f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T464c61(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T249f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T464c60(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T249f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T464c59(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T249f15(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T464c57(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T158f388(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T158f936(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T158f952(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T158f281(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T158f935(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T158f280(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T158f279(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T158f934(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T158f924(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T158f933(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T158f950(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T158f1714(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T158f1738(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T697f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T724f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T728f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T676f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T602f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T609f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T607f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T784f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T744f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T563f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T570f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T614f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T615f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T623f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T629f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T497f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T566f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T561f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T760f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T496f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T525f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T746f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T750f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T782f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T673f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T625f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T662f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T664f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T548f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T565f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T505f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T690f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T703f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T779f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T510f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T519f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T516f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T508f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T494f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T701f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T527f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T532f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T530f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T631f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T655f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T656f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T542f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T571f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T582f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T503f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T612f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T636f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T572f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T762f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T668f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T564f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T577f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T718f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T720f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T707f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T499f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T593f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T522f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T501f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T599f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T597f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T536f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T539f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T544f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T553f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T620f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T627f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T578f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T587f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T390f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T730f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T736f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T739f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T734f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T691f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T777f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T696f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T786f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T618f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T649f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T798f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T796f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T811f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T809f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T560f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T681f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T712f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T477f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T474f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T471f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T468f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T465f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T462f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T459f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T457f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T454f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T452f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T449f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T120f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T446f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T443f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T441f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T438f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T435f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T432f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T429f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T427f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T424f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T421f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T418f6(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T117f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T158f927(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T158f71(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T158f868(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T403f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T403f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T402f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T402f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER].wipe_out */
extern void T399f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER].clear_items */
extern void T399f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T158f47(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T158f46(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T158f865(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T158f45(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T158f864(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T158f863(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T158f862(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T158f44(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge952os14395;
extern T0* ge952ov14395;
extern T0* T158f860(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T158f43(T0* C);
/* ET_XACE_UNIVERSE.parse_all */
extern void T48f160(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T53f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T59c197(T0* a1);
/* DS_CELL [INTEGER].make */
extern T0* T236c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge929os7866;
extern T0* ge929ov7866;
extern T0* T59f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T59f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge929os7865;
extern T0* ge929ov7865;
extern T0* T59f4(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T59f202(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T59f205(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T59f47(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_mode */
extern void T53f47(T0* C, T1 a1);
/* GEC.is_cat */
extern T1 T21f18(T0* C);
/* ET_SYSTEM.make */
extern T0* T53c46(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T53f50(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T142c8(T0* a1);
/* GEC.is_verbose */
extern T1 T21f17(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T51f154(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T51f171(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T51f182(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T51f181(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge769os12486;
extern T0* ge769ov12486;
extern T0* T157f99(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge769os12501;
extern T0* ge769ov12501;
extern T0* T157f98(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge769os12493;
extern T0* ge769ov12493;
extern T0* T157f95(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge769os12488;
extern T0* ge769ov12488;
extern T0* T157f90(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T295c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T925c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T925f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge769os12504;
extern T0* ge769ov12504;
extern T0* T157f85(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge769os12482;
extern T0* ge769ov12482;
extern T0* T157f84(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove */
extern void T141f45(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_position */
extern void T141f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_forth */
extern void T141f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors */
extern void T141f67(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_after */
extern void T141f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].internal_set_key_equality_tester */
extern void T141f60(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T388f6(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge769os12471;
extern T0* ge769ov12471;
extern T0* T157f52(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T51f82(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T51f180(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_found_item */
extern void T141f44(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge247os1590;
extern T0* ge247ov1590;
extern T0* T51f70(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T51f179(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T51f178(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T51f177(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T51f176(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T51f175(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T51f174(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T51f173(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_ise_version */
extern void T48f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_keyword_usage */
extern void T48f173(T0* C);
/* ET_XACE_UNIVERSE.set_ecma_version */
extern void T48f184(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T48f183(T0* C);
/* ET_XACE_UNIVERSE.tokens */
extern T0* T48f77(T0* C);
/* ET_XACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T48f182(T0* C);
/* ET_XACE_UNIVERSE.ise_5_7_60362 */
extern T0* T48f64(T0* C);
/* ET_XACE_UNIVERSE.set_use_void_keyword */
extern void T48f181(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_reference_keyword */
extern void T48f180(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_recast_keyword */
extern void T48f179(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_create_keyword */
extern void T48f178(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_convert_keyword */
extern void T48f177(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_attribute_keyword */
extern void T48f176(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_assign_keyword */
extern void T48f175(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge247os1597;
extern T0* ge247ov1597;
extern T0* T21f16(T0* C);
/* UT_VERSION.make_latest */
extern T0* T58c16(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T52f152(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f152(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T51f153(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_error_handler */
extern void T48f157(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T52c151(void);
/* GEC.is_silent */
extern T1 T21f15(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f45(T0* C, T14 a1);
/* GEC.parse_ace_file */
extern void T21f30(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T49f1(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T49f215(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T49f219(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T49f232(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T49f231(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T49f230(T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T49f244(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge977os4880;
extern T0* ge977ov4880;
extern T0* T49f195(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T49f171(T0* C, T0* a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge977os4877;
extern T0* ge977ov4877;
extern T0* T49f194(T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T49f147(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T137f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T137f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T137f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T111f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T137c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T136f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T135f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T135f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T135f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T135f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T135f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T135c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T136f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T386c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T136c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T137f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T126f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T49f144(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T111f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T126c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T125f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T381f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T381f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T381f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T381f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T49f143(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T111f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T125c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T381f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T381c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T381f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T1006c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T134f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T128f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T128f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T128f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T128f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T128f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T128c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T134f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T385c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T134c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T124f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T124c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T133f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T131f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T131f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T131f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T131f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T131f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T131c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T133f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T384c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T133c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T49f137(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T112f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T112f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T112f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T112f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T112f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T112f14(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T112f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T112f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T112f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T112f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T112f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T112f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T112f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T112f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T112f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T112f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T112f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T112f46(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T372f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T119f32(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T119f39(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T112f41(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T111f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T49f134(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T49f243(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T50f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T50f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T50f5(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T99c7(T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T49f191(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T112f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T112f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T112f1(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T112f37(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T123f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T49f132(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T111f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T122c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T380f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T129f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T127f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T127f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T127f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T127f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T127f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T127c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T129f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T382c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T129c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T49f128(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge977os4878;
extern T0* ge977ov4878;
extern T0* T49f208(T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge977os4879;
extern T0* ge977ov4879;
extern T0* T49f206(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T115f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T115f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T115f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T115f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T115f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T115f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T115f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T115f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T115f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T115f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T115f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T115f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T115f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T115f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T115f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T115f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T115f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T115f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T115f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T115f45(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge977os4881;
extern T0* ge977ov4881;
extern T0* T49f205(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T51f164(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T51f163(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T51f162(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T51f161(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T49f126(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_object_pathnames */
extern void T51f166(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_include_pathnames */
extern void T51f165(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T111f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T51c152(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T274c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T51f172(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge769os12487;
extern T0* ge769ov12487;
extern T0* T157f104(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge769os12499;
extern T0* ge769ov12499;
extern T0* T157f103(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge769os12485;
extern T0* ge769ov12485;
extern T0* T157f102(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge769os12498;
extern T0* ge769ov12498;
extern T0* T157f101(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge769os12500;
extern T0* ge769ov12500;
extern T0* T157f100(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge769os12503;
extern T0* ge769ov12503;
extern T0* T157f97(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge769os12502;
extern T0* ge769ov12502;
extern T0* T157f96(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge769os12497;
extern T0* ge769ov12497;
extern T0* T157f94(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge769os12496;
extern T0* ge769ov12496;
extern T0* T157f93(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge769os12495;
extern T0* ge769ov12495;
extern T0* T157f92(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge769os12494;
extern T0* ge769ov12494;
extern T0* T157f91(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge769os12492;
extern T0* ge769ov12492;
extern T0* T157f89(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge769os12491;
extern T0* ge769ov12491;
extern T0* T157f88(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge769os12490;
extern T0* ge769ov12490;
extern T0* T157f87(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge769os12489;
extern T0* ge769ov12489;
extern T0* T157f86(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge769os12484;
extern T0* ge769ov12484;
extern T0* T157f83(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge769os12483;
extern T0* ge769ov12483;
extern T0* T157f82(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge769os12481;
extern T0* ge769ov12481;
extern T0* T157f81(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge769os12475;
extern T0* ge769ov12475;
extern T0* T157f79(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge769os12474;
extern T0* ge769ov12474;
extern T0* T157f78(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge769os12462;
extern T0* ge769ov12462;
extern T0* T157f77(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge769os12440;
extern T0* ge769ov12440;
extern T0* T157f76(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge769os12448;
extern T0* ge769ov12448;
extern T0* T157f75(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge769os12464;
extern T0* ge769ov12464;
extern T0* T157f74(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge769os12465;
extern T0* ge769ov12465;
extern T0* T157f73(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge769os12469;
extern T0* ge769ov12469;
extern T0* T157f72(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge769os12478;
extern T0* ge769ov12478;
extern T0* T157f70(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge769os12463;
extern T0* ge769ov12463;
extern T0* T157f69(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge769os12468;
extern T0* ge769ov12468;
extern T0* T157f68(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge769os12467;
extern T0* ge769ov12467;
extern T0* T157f67(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge769os12460;
extern T0* ge769ov12460;
extern T0* T157f66(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge769os12459;
extern T0* ge769ov12459;
extern T0* T157f65(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge769os12458;
extern T0* ge769ov12458;
extern T0* T157f64(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge769os12457;
extern T0* ge769ov12457;
extern T0* T157f63(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge769os12454;
extern T0* ge769ov12454;
extern T0* T157f62(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge769os12453;
extern T0* ge769ov12453;
extern T0* T157f61(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge769os12452;
extern T0* ge769ov12452;
extern T0* T157f60(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge769os12451;
extern T0* ge769ov12451;
extern T0* T157f59(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge769os12446;
extern T0* ge769ov12446;
extern T0* T157f58(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge769os12445;
extern T0* ge769ov12445;
extern T0* T157f57(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge769os12443;
extern T0* ge769ov12443;
extern T0* T157f56(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge769os12455;
extern T0* ge769ov12455;
extern T0* T157f55(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge769os12470;
extern T0* ge769ov12470;
extern T0* T157f54(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge769os12441;
extern T0* ge769ov12441;
extern T0* T157f53(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge769os12473;
extern T0* ge769ov12473;
extern T0* T157f51(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge769os12472;
extern T0* ge769ov12472;
extern T0* T157f50(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge769os12442;
extern T0* ge769ov12442;
extern T0* T157f49(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge769os12476;
extern T0* ge769ov12476;
extern T0* T157f48(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T287c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T287f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge769os12461;
extern T0* ge769ov12461;
extern T0* T157f47(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge769os12449;
extern T0* ge769ov12449;
extern T0* T157f46(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T141f41(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T51f61(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T141c40(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T141f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T388c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T388f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T1007c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T141f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T141f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T141f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T141f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T141f62(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T111f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T249c333(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T111f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c151(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T115f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T115f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T115f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T377f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T115f58(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T377f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T115f2(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T115f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T115f1(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T115f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T115f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T115f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T115f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T115f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T49f229(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T49f228(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T49f226(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T49f242(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T49f225(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T49f241(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T49f193(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T49f12(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T49f190(T0* C);
/* ET_LACE_PARSER.set_start_condition */
extern void T49f248(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T49f187(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T911f2(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T49f170(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T49f162(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T49f240(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T49f247(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T49f113(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T49f239(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T49f237(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T49f112(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T49f111(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T49f238(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T72f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T72f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T72f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T49f159(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T49f40(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T49f224(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T49f233(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T49f245(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T49f249(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T49f251(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T128f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T135f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T131f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T127f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T130f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T49f227(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T115f37(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T115f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T115f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T115f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T115f47(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T115f46(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T49f218(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T49f223(T0* C);
/* YY_BUFFER.set_position */
extern void T114f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T113f19(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T49f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T112f36(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T112f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T112f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T112f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T112f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T112f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T376f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T376f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T49f217(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T49f222(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T49c214(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T49f216(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T49f221(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T49f236(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge976os4819;
extern T0* ge976ov4819;
extern T0* T49f158(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T49f211(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge976os4818;
extern T0* ge976ov4818;
extern T0* T49f157(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge976os4817;
extern T0* ge976ov4817;
extern T0* T49f156(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge976os4816;
extern T0* ge976ov4816;
extern T0* T49f155(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge976os4815;
extern T0* ge976ov4815;
extern T0* T49f154(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge976os4814;
extern T0* ge976ov4814;
extern T0* T49f153(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge976os4813;
extern T0* ge976ov4813;
extern T0* T49f152(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge976os4812;
extern T0* ge976ov4812;
extern T0* T49f151(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge976os4811;
extern T0* ge976ov4811;
extern T0* T49f150(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge976os4810;
extern T0* ge976ov4810;
extern T0* T49f149(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T49f235(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T49f220(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T49f234(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T49f246(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T49f250(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge978os5256;
extern T0* ge978ov5256;
extern T0* T49f203(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T49f213(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge978os5255;
extern T0* ge978ov5255;
extern T0* T49f202(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge978os5254;
extern T0* ge978ov5254;
extern T0* T49f201(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge978os5253;
extern T0* ge978ov5253;
extern T0* T49f200(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge978os5252;
extern T0* ge978ov5252;
extern T0* T49f199(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge978os5251;
extern T0* ge978ov5251;
extern T0* T49f198(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge978os5250;
extern T0* ge978ov5250;
extern T0* T49f197(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T49f59(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T115c36(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T115f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T377c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T115f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T115f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T115f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T115f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T112c35(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T112f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T374c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T374f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T1004c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T112f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T376c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T112f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T112f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T112f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T112f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T112f57(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T372c2(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T111c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T50c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T50f2(T0* C);
/* GEC.parse_ecf_file */
extern void T21f29(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f28(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T39f1(T0* C);
/* ET_XACE_UNIVERSE_PARSER.parse_file */
extern void T38f231(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T96f2(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T96f7(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T96f6(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T96f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T96f12(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c36(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T96f4(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T327f1(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T96f9(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T96f15(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T328f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T328f2(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T328f1(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T327f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T978f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T978f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T978c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T327f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T327c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T327f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T979c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T328f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T980f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T980c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T328c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T39f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T39f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T39f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T88f4(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T91f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T39f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T894c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T325f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T325f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T86f1(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T905f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T906f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T906f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T905f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T906f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T905f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T905f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T906f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T905f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T906f3(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T905f2(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T905f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T906f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T906f1(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T905c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T91f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T260f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T84f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T84f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T260f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T84f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T260f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T85f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T85f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T85f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T39f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T896c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T91f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T91f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1031os3915;
extern T0* ge1031ov3915;
extern T0* T91f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1031os3890;
extern T0* ge1031ov3890;
extern T0* T91f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1031os3913;
extern T0* ge1031ov3913;
extern T0* T91f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1031os3916;
extern T0* ge1031ov3916;
extern T0* T91f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1031os3899;
extern T0* ge1031ov3899;
extern T0* T91f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1031os3912;
extern T0* ge1031ov3912;
extern T0* T91f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T39f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T39f17(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T39f18(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T271c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1031os3903;
extern T0* ge1031ov3903;
extern T0* T91f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T91f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1031os3911;
extern T0* ge1031ov3911;
extern T0* T91f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1031os3910;
extern T0* ge1031ov3910;
extern T0* T91f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1031os3909;
extern T0* ge1031ov3909;
extern T0* T91f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1031os3908;
extern T0* ge1031ov3908;
extern T0* T91f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1031os3907;
extern T0* ge1031ov3907;
extern T0* T91f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1031os3906;
extern T0* ge1031ov3906;
extern T0* T91f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1031os3905;
extern T0* ge1031ov3905;
extern T0* T91f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1031os3895;
extern T0* ge1031ov3895;
extern T0* T91f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T39f25(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T900c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1031os3894;
extern T0* ge1031ov3894;
extern T0* T900f7(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].has */
extern T1 T263f35(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1001os4082;
extern T0* ge1001ov4082;
extern T0* T316f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].put_new */
extern void T263f40(T0* C, T6 a1, T0* a2);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T316f29(T0* C);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge988os10005;
extern T0* ge988ov10005;
extern T0* T91f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T316c192(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T85f5(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T260f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T84f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T260f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T84f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T85f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T85f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T85f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T85f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T85f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1331f2(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1331c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1031os3902;
extern T0* ge1031ov3902;
extern T0* T91f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T91f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T91f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T39f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T899c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1031os3917;
extern T0* ge1031ov3917;
extern T0* T91f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1031os3898;
extern T0* ge1031ov3898;
extern T0* T91f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T91f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T91f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T91f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T39f23(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T898c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T91f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T39f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T268c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1031os3893;
extern T0* ge1031ov3893;
extern T0* T91f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1031os3901;
extern T0* ge1031ov3901;
extern T0* T91f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T260f2(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T260f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T84f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T85f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T85f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T260c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T91f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1031os3891;
extern T0* ge1031ov3891;
extern T0* T91f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T85f7(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T85f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T85f12(T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T1239f1(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1239f3(T0* C);
/* XM_ELEMENT.has_namespace */
extern T1 T85f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1331f4(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T39f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T897c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T85f6(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1031os3889;
extern T0* ge1031ov3889;
extern T0* T91f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T39f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T895c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T85f4(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T91f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1031os3888;
extern T0* ge1031ov3888;
extern T0* T91f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T91f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].wipe_out */
extern void T93f37(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_wipe_out */
extern void T93f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_wipe_out */
extern void T93f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_wipe_out */
extern void T93f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_wipe_out */
extern void T93f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].unset_found_item */
extern void T93f41(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].move_all_cursors_after */
extern void T93f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_next_cursor */
extern void T321f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_position */
extern void T321f5(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_root_class_name */
extern void T48f165(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_class */
extern void T48f185(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_universe */
extern T0* T38f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.replace_all_characters */
extern T0* T38f17(T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T909f62(T0* C, T2 a1, T6 a2);
/* ET_XACE_UNIVERSE.merge_externals */
extern void T48f167(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T257f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T258f3(T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T251f4(T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T254f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].forth */
extern void T286f11(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_forth */
extern void T76f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].add_traversing_cursor */
extern void T76f37(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].remove_traversing_cursor */
extern void T76f38(T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T250f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].item */
extern T0* T286f5(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_item */
extern T0* T76f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].after */
extern T1 T286f4(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_after */
extern T1 T76f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].start */
extern void T286f10(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_start */
extern void T76f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].is_empty */
extern T1 T76f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].off */
extern T1 T286f2(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_off */
extern T1 T76f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].cursor_before */
extern T1 T76f13(T0* C, T0* a1);
/* ET_XACE_OPTIONS.link */
extern T0* T255f12(T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1000os17808;
extern T0* ge1000ov17808;
extern T0* T255f29(T0* C);
/* DS_ARRAYED_LIST [STRING].set_equality_tester */
extern void T76f40(T0* C, T0* a1);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T255f27(T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T250f6(T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T255f11(T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1000os17797;
extern T0* ge1000ov17797;
extern T0* T255f26(T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T255f24(T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T250f5(T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T255f10(T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1000os17779;
extern T0* ge1000ov17779;
extern T0* T255f23(T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T255f21(T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T250c4(void);
/* ET_XACE_UNIVERSE.mount_libraries */
extern void T48f166(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T257f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T251f11(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T254f58(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T251f10(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T254f59(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T251f14(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.fill_system */
extern void T38f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.set_libraries */
extern void T48f172(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_options */
extern void T48f171(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_creation_procedure_name */
extern void T48f170(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_creation */
extern void T48f186(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_system_name */
extern void T48f169(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_clusters */
extern void T48f168(T0* C, T0* a1);
/* ET_XACE_LIBRARY.merge_libraries */
extern void T262f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T257f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T256f10(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T256f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T256f7(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T256f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T39f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T1399c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T257f4(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T257f3(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T257f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T258f1(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T251f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T254f56(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_externals */
extern void T38f235(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T254f44(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T931f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1178f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1178c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T931f3(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T931c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T931f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1177c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_export */
extern T0* T38f134(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T255f139(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T893f1(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T266f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T893f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1172f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1172c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T893c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T893f4(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1171c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_exported_feature */
extern T0* T38f227(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T83f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T892c3(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_alias */
extern unsigned char ge1031os3914;
extern T0* ge1031ov3914;
extern T0* T38f229(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_feature */
extern T0* T38f226(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T83f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T266c4(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_export */
extern T0* T38f133(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T255f147(T0* C, T0* a1);
/* DS_HASH_SET [STRING].force_last */
extern void T192f68(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_include_dir */
extern T0* T38f132(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T255f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_location */
extern T0* T38f131(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_link_library */
extern T0* T38f130(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T83f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T255c113(void);
/* ET_XACE_UNIVERSE_PARSER.uc_external */
extern T0* T38f31(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_options */
extern T0* T38f30(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_options */
extern void T38f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.uc_debug */
extern T0* T38f129(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_optimize */
extern T0* T38f128(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_check */
extern T0* T38f126(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_loop */
extern T0* T38f123(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_invariant */
extern T0* T38f121(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_ensure */
extern T0* T38f119(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_enable */
extern unsigned char ge1031os3904;
extern T0* ge1031ov3904;
extern T0* T38f117(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_require */
extern T0* T38f116(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T255f193(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T932f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T932f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T932c5(void);
/* UT_TRISTATE.set_undefined */
extern void T932f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T255f192(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1000os17682;
extern T0* ge1000ov17682;
extern T0* T255f9(T0* C);
/* DS_HASH_SET [STRING].put_last */
extern void T192f67(T0* C, T0* a1);
/* DS_HASH_SET [STRING].compress */
extern void T192f69(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors */
extern void T192f71(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].key_storage_put */
extern void T192f70(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.options */
extern T0* T255f20(T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T255f191(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T255f190(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T255f189(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T255f188(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T255f187(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T255f186(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T255f185(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1000os17680;
extern T0* ge1000ov17680;
extern T0* T255f8(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T255f184(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T255f183(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T255f182(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T255f181(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T255f180(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T255f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T255f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T255f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T255f176(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T255f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T255f174(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T255f173(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T255f172(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T255f171(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T255f170(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T255f169(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T255f168(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T255f167(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T255f166(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T255f165(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T255f164(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T255f163(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T255f162(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T255f161(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T255f160(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T255f159(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1000os17679;
extern T0* ge1000ov17679;
extern T0* T255f7(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T255f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T255f156(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T255f155(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T255f154(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1000os17678;
extern T0* ge1000ov17678;
extern T0* T255f6(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T255f153(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T255f152(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T255f151(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1000os17677;
extern T0* ge1000ov17677;
extern T0* T255f5(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T255f150(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T255f149(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T255f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T255f146(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T255f145(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T255f144(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1000os17676;
extern T0* ge1000ov17676;
extern T0* T255f4(T0* C);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T255f143(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T39f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T270c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T255f142(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T255f141(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T255f140(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T255f138(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T255f137(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T255f136(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T255f135(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T255f134(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T255f133(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T255f132(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T255f131(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T255f130(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1000os17675;
extern T0* ge1000ov17675;
extern T0* T255f3(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T255f129(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T255f128(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T255f127(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T255f126(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T255f125(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T255f124(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T255f123(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T255f122(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T255f121(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T255f120(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1000os17674;
extern T0* ge1000ov17674;
extern T0* T255f2(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T39f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T269c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T269f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T255f119(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1000os17673;
extern T0* ge1000ov17673;
extern T0* T255f1(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T255f118(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T255f117(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T255f116(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T255f115(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T39f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T267c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_UNIVERSE_PARSER.is_false */
extern T1 T38f115(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T255f114(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.is_true */
extern T1 T38f114(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.option_codes */
extern T0* T38f33(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_equality_tester */
extern T0* T38f13(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_value */
extern T0* T38f32(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_option */
extern T0* T38f29(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T257f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T258f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T258f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T934f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T933f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T933f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T933f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T933f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T933f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T933c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T258f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T258f9(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T83f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T257c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T258c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T258f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T935c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T934f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1179c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T934c3(void);
/* ET_XACE_UNIVERSE_PARSER.new_mount */
extern T0* T38f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T256f9(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T83f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T256c8(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T39f27(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.parse_library */
extern void T95f222(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_library */
extern void T95f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY.set_libraries */
extern void T262f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY.set_clusters */
extern void T262f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.fill_externals */
extern void T95f225(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.new_export */
extern T0* T95f124(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_exported_feature */
extern T0* T95f217(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_alias */
extern T0* T95f219(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_feature */
extern T0* T95f216(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_class */
extern T0* T95f127(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_export */
extern T0* T95f123(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_include_dir */
extern T0* T95f122(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_location */
extern T0* T95f121(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_link_library */
extern T0* T95f120(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_external */
extern T0* T95f21(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_options */
extern T0* T95f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_options */
extern void T95f224(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_PARSER.uc_debug */
extern T0* T95f119(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_optimize */
extern T0* T95f118(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_check */
extern T0* T95f116(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_loop */
extern T0* T95f113(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_invariant */
extern T0* T95f111(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_ensure */
extern T0* T95f109(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_enable */
extern T0* T95f107(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_require */
extern T0* T95f106(T0* C);
/* ET_XACE_LIBRARY_PARSER.is_false */
extern T1 T95f105(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.is_true */
extern T1 T95f104(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.option_codes */
extern T0* T95f23(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_equality_tester */
extern T0* T95f4(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_value */
extern T0* T95f22(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_option */
extern T0* T95f19(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_mount */
extern T0* T95f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.execution_environment */
extern T0* T95f131(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_mount */
extern T0* T95f17(T0* C);
/* ET_XACE_LIBRARY.set_library_prefix */
extern void T262f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_prefix */
extern unsigned char ge1031os3900;
extern T0* ge1031ov3900;
extern T0* T95f16(T0* C);
/* ET_XACE_LIBRARY.set_options */
extern void T262f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.new_cluster */
extern T0* T95f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_libraries */
extern void T254f50(T0* C, T0* a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T255f18(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T932f2(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T255f17(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T932f1(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T932f3(T0* C);
/* ET_XACE_OPTIONS.recursive */
extern T1 T255f16(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T255f15(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T254f45(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T255f14(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T255f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_class */
extern T0* T95f128(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_feature */
extern T0* T95f218(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T254f43(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T254f42(T0* C, T1 a1);
/* ET_XACE_LIBRARY_PARSER.uc_relative */
extern unsigned char ge1031os3897;
extern T0* ge1031ov3897;
extern T0* T95f126(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T39f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T901c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.uc_abstract */
extern unsigned char ge1031os3896;
extern T0* ge1031ov3896;
extern T0* T95f125(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T83f4(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_cluster */
extern T0* T95f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_ */
extern T0* T95f12(T0* C);
/* ET_XACE_LIBRARY.set_name */
extern void T262f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_name */
extern T0* T95f11(T0* C);
/* ET_XACE_UNIVERSE_PARSER.execution_environment */
extern T0* T38f141(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T909f52(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f34(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].force_new */
extern void T93f52(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_put */
extern void T93f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_put */
extern void T93f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_put */
extern void T93f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_put */
extern void T93f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_item */
extern T6 T93f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].hash_position */
extern T6 T93f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_item */
extern T6 T93f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].resize */
extern void T93f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_resize */
extern void T93f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].special_integer_ */
extern T0* T93f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_resize */
extern void T93f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_resize */
extern void T93f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].resize */
extern T0* T323f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY].resized_area */
extern T0* T322f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY].copy_data */
extern void T322f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY].move_data */
extern void T322f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].overlapping_move */
extern void T322f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].non_overlapping_move */
extern void T322f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].make */
extern T0* T322c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_item */
extern T0* T93f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_resize */
extern void T93f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_modulus */
extern T6 T93f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_capacity */
extern T6 T93f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T83f5(T0* C);
/* ET_XACE_LIBRARY.make */
extern T0* T262c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found_item */
extern T0* T93f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_item */
extern T0* T93f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found */
extern T1 T93f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search */
extern void T93f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search_position */
extern void T93f53(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_prefix */
extern T0* T38f137(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_mount */
extern T0* T38f27(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T83f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T251c5(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T408f11(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_cluster */
extern T0* T38f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.new_class */
extern T0* T38f138(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.new_feature */
extern T0* T38f228(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_relative */
extern T0* T38f136(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_abstract */
extern T0* T38f135(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_cluster */
extern T0* T38f24(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_creation */
extern T0* T38f23(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_class */
extern T0* T38f22(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_root */
extern T0* T38f21(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_name */
extern T0* T38f20(T0* C);
/* ET_XACE_UNIVERSE.make_with_factory */
extern T0* T48c156(T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.make_basic_classes */
extern void T48f174(T0* C);
/* ET_XACE_UNIVERSE.class_name_tester */
extern T0* T48f55(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_ast_factory */
extern T0* T38f16(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_error_handler */
extern T0* T38f15(T0* C);
/* XM_ELEMENT.set_name */
extern void T85f30(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_system */
extern T0* T38f9(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T92f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T85f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T85f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T260f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1330f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1330f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T85f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1330f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T85f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T85f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T85f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T85f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T260f4(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T84f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T85f24(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T85f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T85f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T260f3(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T84f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T85f23(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T92f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T39f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1164c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T92f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T92f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T92f9(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T909f53(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T909f54(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f35(T0* C, T2 a1);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T92f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1031os3919;
extern T0* ge1031ov3919;
extern T0* T92f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1031os3918;
extern T0* ge1031ov3918;
extern T0* T92f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T92f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T259f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T91f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T91f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1031os3892;
extern T0* ge1031ov3892;
extern T0* T91f4(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_library */
extern T0* T38f6(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_ */
extern T0* T38f5(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T88f2(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T96f1(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T96f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T96f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T96f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T96f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T96f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T96f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T96f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T96f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T362f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T334f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T360f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T345f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T345f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T345f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T345f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T345f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T345c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T360f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T1002c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T360c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T334f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T96f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T334c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T96f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].force */
extern void T329f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_put */
extern void T329f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_put */
extern void T329f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_put */
extern void T329f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_item */
extern T6 T329f17(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_item */
extern T6 T329f16(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].hash_position */
extern T6 T329f13(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].resize */
extern void T329f50(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_resize */
extern void T329f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].special_integer_ */
extern T0* T329f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_resize */
extern void T329f57(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_resize */
extern void T329f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T986f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T981f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T981f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T981f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T981f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T981f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T981c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_item */
extern T0* T329f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_resize */
extern void T329f55(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_modulus */
extern T6 T329f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_capacity */
extern T6 T329f12(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_put */
extern void T329f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].search_position */
extern void T329f41(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].unset_found_item */
extern void T329f44(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].has */
extern T1 T329f1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T365c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T365f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T331c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T365f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T365f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T365f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T365f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T365f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER].make */
extern T0* T977c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T365f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T365f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T365f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T365f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T365f32(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T365f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T365f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1269os18611;
extern T0* ge1269ov18611;
extern T0* T365f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T365f53(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1269os18610;
extern T0* ge1269ov18610;
extern T0* T365f48(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1269os18609;
extern T0* ge1269ov18609;
extern T0* T365f46(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1269os18608;
extern T0* ge1269ov18608;
extern T0* T365f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1269os18607;
extern T0* ge1269ov18607;
extern T0* T365f42(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1269os18604;
extern T0* ge1269ov18604;
extern T0* T365f40(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T365f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T365f223(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T365f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T365f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1269os18601;
extern T0* ge1269ov18601;
extern T0* T365f38(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T365f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T365f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T365f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T976c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T365f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T359f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T96f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T359c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T359f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T359f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T359f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T359f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T359f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T359f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T359f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T359f32(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T359f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T359f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T359f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T359f52(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T359f46(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T359f44(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T359f42(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T359f40(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T359f38(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T359f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T359f219(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T359f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T359f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T359f36(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T359f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T359f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T359f6(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T96f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T362f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T96f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T96f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T359c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T338f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T338f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T338f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T338f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].resize */
extern T0* T358f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING]].resized_area */
extern T0* T357f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING]].copy_data */
extern void T357f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING]].move_data */
extern void T357f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].overlapping_move */
extern void T357f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].non_overlapping_move */
extern void T357f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].make */
extern T0* T357c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].make */
extern T0* T358f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING]].make_area */
extern T0* T1001c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].default_create */
extern T0* T358c3(void);
/* DS_BILINKED_LIST [STRING].force_last */
extern void T339f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].put_right */
extern void T993f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].attach_left */
extern void T993f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].make */
extern T0* T993c4(T0* a1);
/* DS_BILINKED_LIST [STRING].is_empty */
extern T1 T339f3(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T96f162(T0* C);
/* DS_BILINKED_LIST [STRING].set_equality_tester */
extern void T339f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T96f180(T0* C);
/* DS_BILINKED_LIST [STRING].make */
extern T0* T339c11(void);
/* DS_BILINKED_LIST [STRING].new_cursor */
extern T0* T339f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].make */
extern T0* T992c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T338f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T338f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1181os19085;
extern T0* ge1181ov19085;
extern T0* T338f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T338f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T338f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T338f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T338f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T338f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T338f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T338f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T96f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T338c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T356f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T354f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T354f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T354f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T354f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T354f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T354c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T356f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T1000c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T356c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T338f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T338f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T338f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T338f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T338f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T338f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T355f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T352f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T352f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T352f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T352f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T352f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T352c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T355f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T999c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T355c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T337f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T991f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T991f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T991c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T337f3(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T96f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T337c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T337f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T990c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T96f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T990f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T337f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T337f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T990f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T337f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T990f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T96f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T362f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T990f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T990f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T337f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T337f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T336f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T336c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T336f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T336f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T336f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T336f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T336f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T336f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T989c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T989f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1219c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T336c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T989f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1220f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1220f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1220c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T989f3(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T336c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T989f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T96f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T336c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T96f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T336f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T336f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T336c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T336f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T350f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T349f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T349f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T349f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T349f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T349f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T349c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T350f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T998c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T350c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T336c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T336f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T96f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T362f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T96f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T335f1(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T335f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T335f11(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T335f12(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T332f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T332f13(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING].item */
extern T0* T339f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T987f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T335f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T335f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T335f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T335f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T348f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T347f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T347f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T347f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T347f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T347f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T347c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T348f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T997c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T348c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T335f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T335f39(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T335f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T335f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T335f36(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T335f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T335f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T335f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T335f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T335f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T335f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T335f7(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T335f35(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T96f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T335c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T987c2(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T335f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T335f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T988c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T335f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T335f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T335f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T335f40(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T96f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T96f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T332f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].forth */
extern void T992f9(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_forth */
extern void T339f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].add_traversing_cursor */
extern void T339f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T992f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].remove_traversing_cursor */
extern void T339f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set */
extern void T992f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING].item */
extern T0* T992f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].start */
extern void T992f8(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_start */
extern void T339f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].cursor_off */
extern T1 T339f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T332f17(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T332f16(T0* C);
/* DS_BILINKED_LIST [STRING].last */
extern T0* T339f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T332f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T332f15(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T96f242(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T332f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T332f14(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T332f8(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T96f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T331f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1267os10160;
extern T0* ge1267ov10160;
extern T0* T96f23(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T363c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T363f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T363f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T363f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T363f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T363f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T363f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T363f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T363f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T363f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T363f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T363f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T363f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T363f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T363f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T363f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T363f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T363f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T363f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T363f226(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T363f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T363f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T363f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T363f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T363f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T363f16(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T328f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T331f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T96f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T331f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T331f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T334f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T96f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T362f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T96f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T362f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T362c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T333f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T333f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T333f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T343f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T342f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T342f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T342f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T342f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T342f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T342c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T343f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T995c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T343c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T333c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T333f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T96f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T96f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T96f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T96f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T362f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T96f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T96f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T362f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T96f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T96f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T96f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T96f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f60(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T331f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T910f29(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T139f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T96f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T910c28(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].make */
extern T0* T1175c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T331f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T359f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T365f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T365f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item */
extern T0* T329f2(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_item */
extern T0* T329f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T96f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T96f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T96f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T96f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T96f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T96f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T96f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T96f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T909c55(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T909f71(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T908f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T908f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T908f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T908f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T96f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T96f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T96f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T96f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T96f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1267os10228;
extern T0* ge1267ov10228;
extern T0* T96f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1267os10229;
extern T0* ge1267ov10229;
extern T0* T96f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T96f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T909c56(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T341f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T340f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T340f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T340f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T340f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T340f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T340c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T341f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T994c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T341c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T96f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T332f19(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T332f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T332f1(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T96f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T332f20(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T332c20(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T332c18(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T96f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T96f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T96f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T96f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T96f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T96f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T96f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T359f221(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T365f225(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T359f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T365f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T359f220(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1346c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T908f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T908f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T908f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T359f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T359f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T365f224(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T365f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T365f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T96f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T96f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T96f29(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T96f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T96f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T96f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T96f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T96f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T342f6(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T344f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING]].clear_all */
extern void T357f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T352f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T354f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T349f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T345f6(T0* C);
/* SPECIAL [STRING].clear_all */
extern void T102f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T347f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T340f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T96f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T96f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T315c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T96f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T96f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].wipe_out */
extern void T329f38(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_wipe_out */
extern void T329f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_wipe_out */
extern void T329f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_wipe_out */
extern void T329f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_wipe_out */
extern void T329f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].move_all_cursors_after */
extern void T329f43(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_next_cursor */
extern void T984f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_position */
extern void T984f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T96f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T324c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T324f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T324f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T324f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T324f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T324f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T324f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T324f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T324f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T324f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T324f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T324f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T324f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T324f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T324f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T324f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T324f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T324f224(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T324f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T324f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T324f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T324f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T324f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T324f15(T0* C);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables */
extern T0* T38c230(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables_and_factory */
extern void T38f232(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T90f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T86c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T906c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T96f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T88c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T88f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T314f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T90c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T88f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T89c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T88f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T312c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T96f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T96c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T96f20(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].set_key_equality_tester */
extern void T329f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].internal_set_equality_tester */
extern void T982f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map_default */
extern T0* T329c37(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map */
extern void T329f42(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_with_equality_testers */
extern void T329f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T982c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T982f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T1217c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T329f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T984c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_sparse_container */
extern void T329f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_slots */
extern void T329f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_clashes */
extern void T329f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_key_storage */
extern void T329f61(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_item_storage */
extern void T329f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T986f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1218c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T986c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].default_capacity */
extern T6 T329f7(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T96f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T96f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1263os10107;
extern T0* ge1263ov10107;
extern T0* T96f50(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T96f182(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1263os10106;
extern T0* ge1263ov10106;
extern T0* T96f48(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1263os10105;
extern T0* ge1263ov10105;
extern T0* T96f46(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1263os10104;
extern T0* ge1263ov10104;
extern T0* T96f44(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1263os10103;
extern T0* ge1263ov10103;
extern T0* T96f42(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1263os10102;
extern T0* ge1263ov10102;
extern T0* T96f40(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1263os10101;
extern T0* ge1263ov10101;
extern T0* T96f38(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1263os10100;
extern T0* ge1263ov10100;
extern T0* T96f36(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1263os10099;
extern T0* ge1263ov10099;
extern T0* T96f34(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1263os10098;
extern T0* ge1263ov10098;
extern T0* T96f32(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T96f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T94f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T94f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T94c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T91c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T92c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.set_parsed_libraries */
extern void T95f221(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.make_with_variables_and_factory */
extern T0* T95c220(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].set_key_equality_tester */
extern void T93f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].internal_set_equality_tester */
extern void T319f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_map */
extern T0* T93c36(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_with_equality_testers */
extern void T93f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].make */
extern T0* T319c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T319f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T974c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T93f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T321c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_sparse_container */
extern void T93f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_slots */
extern void T93f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_clashes */
extern void T93f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_key_storage */
extern void T93f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_item_storage */
extern void T93f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].make */
extern T0* T323f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY].make_area */
extern T0* T975c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].default_create */
extern T0* T323c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T83c9(void);
/* DS_HASH_TABLE [STRING, STRING].force_last */
extern void T40f39(T0* C, T0* a1, T0* a2);
/* GEC.execution_environment */
extern T0* T21f14(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f13(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T39c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T39f4(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T909f5(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T909f4(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T909f29(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T909f16(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T909c67(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f17(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f5(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f1(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f2(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f18(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f20(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f14(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T247f1(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T247f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f39(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c39(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f8(T0* C);
/* GEC.parse_arguments */
extern void T21f27(T0* C);
/* DS_ARRAYED_LIST [STRING].first */
extern T0* T76f3(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T37f1(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T78f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T78f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T309f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T78f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T309f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T78f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T37f3(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T82f1(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T82f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T82f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T82f2(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T82f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge58os3835;
extern T0* ge58ov3835;
extern T0* T37f8(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T82f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T82c9(void);
/* STRING_8.make_filled */
extern T0* T17c40(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f10(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T66f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge307os8510;
extern T0* ge307ov8510;
extern T0* T66f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T66f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T65f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge309os8510;
extern T0* ge309ov8510;
extern T0* T65f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T65f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T37f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T37f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T37f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T37f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T37f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T81f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T81f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T37f20(T0* C);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T37f18(T0* C);
/* AP_FLAG.name */
extern T0* T32f8(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T32f9(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T78f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T78f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T78f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T78f1(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T78f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T78f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T78f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T78f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T309f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T78f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T78f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T37f2(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T77f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T77f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T305f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T77f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T305f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T77f28(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T37f24(T0* C);
/* AP_FLAG.example */
extern T0* T32f12(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T77f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T77f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T77f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T77f1(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T77f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T77f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T77f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T77f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T305f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T77f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T77f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f33(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T64c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f27(T0* C);
/* AP_PARSER.parse_list */
extern void T30f29(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f33(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge320os1573;
extern T0* ge320ov1573;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10p1(T0* C, T0* a1);
/* AP_PARSER.check_mandatory_options */
extern void T30f32(T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T79f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T79f6(T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T80f12(T0* C);
/* AP_ERROR.message */
extern T0* T80f13(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T80f15(T0* C);
/* AP_ERROR.string_ */
extern T0* T80f14(T0* C);
/* AP_ERROR.make_missing_option_error */
extern T0* T80c16(T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T37f23(T0* C);
/* AP_PARSER.parse_argument */
extern void T30f31(T0* C);
/* AP_PARSER.parse_short */
extern void T30f35(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T37f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T37f41(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T37f28(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T79f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T37f27(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T37f33(T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T37f32(T0* C);
/* AP_FLAG.names */
extern T0* T32f15(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1319f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1319f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1319f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T77f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T77f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1318f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1318f2(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T77f3(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T77c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T77f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T305c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T308f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T969c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T307c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T308c3(void);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1319c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1318c3(void);
/* AP_FLAG.record_occurrence */
extern void T32f23(T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T80c18(T0* a1);
/* DS_ARRAYED_LIST [STRING].off */
extern T1 T76f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T37f19(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T32f10(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T80c17(T0* a1);
/* AP_PARSER.parse_long */
extern void T30f34(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T80c19(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].forth */
extern void T76f25(T0* C);
/* DS_ARRAYED_LIST [STRING].item_for_iteration */
extern T0* T76f4(T0* C);
/* DS_ARRAYED_LIST [STRING].after */
extern T1 T76f1(T0* C);
/* DS_ARRAYED_LIST [STRING].start */
extern void T76f24(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f30(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T37f39(T0* C);
/* AP_FLAG.reset */
extern void T32f22(T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T79f8(T0* C);
/* DS_ARRAYED_LIST [STRING].force */
extern void T76f23(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put */
extern void T76f29(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_cursors_right */
extern void T76f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_right */
extern void T76f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put_last */
extern void T76f34(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f10(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T78f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T78f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T311f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T310f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T310f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T310f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T310f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T310f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T310c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T78f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T78f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f4(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T81c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T32c18(T2 a1, T0* a2);
/* AP_FLAG.initialize */
extern void T32f20(T0* C);
/* AP_FLAG.set_long_form */
extern void T32f19(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T32f21(T0* C, T2 a1);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T77f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T77f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T308f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T307f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T307f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T307f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T307f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T307f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T77f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T77f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T32f17(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T32c16(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f25(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c24(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T37f35(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T37c34(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T37f38(T0* C);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T37f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T37f36(T0* C, T2 a1);
/* AP_PARSER.make_empty */
extern void T30f28(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T79c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T79f3(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T78c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T78f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T309c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T311f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T970c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T311c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f1(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f6(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T903f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T142f7(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T142f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T304f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1251f3(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T223f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type */
extern void T222f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type */
extern void T221f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type */
extern void T217f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type */
extern void T215f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T215f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T524f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T524f14(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T202f52(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T202f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T150f50(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T150f52(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T202f51(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T202f56(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T150f49(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T150f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T150f67(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type */
extern void T205f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T205f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T205f12p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type */
extern void T197f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_type */
extern void T144f37(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.reset */
extern void T816f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T816f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T955f96(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T772f33(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T771f33(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T464f74(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T451f54(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T445f52(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T741f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T754f11(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T754f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T754f11p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T183f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T754f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T752f11(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T714f13(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T711f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T711f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T714f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T710f13(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T708f12(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T706f6(T0* C);
/* ET_COMPOUND.reset */
extern void T626f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T705f12(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T705f8(T0* C);
/* ET_VARIANT.reset */
extern void T675f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T672f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T702f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T723f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T727f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T729f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T702f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T700f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T716f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T719f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T719f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T700f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T699f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T698f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T692f14(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T461f16(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T754f12(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T752f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T714f14(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T710f14(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T708f13(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T706f7(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T705f13(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T702f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T700f12(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T699f7(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T698f7(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T692f15(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T461f17(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T184f14(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T652f46(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T648f82(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T646f64(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T645f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T644f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T643f65(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T652f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T648f83(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T646f65(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T645f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T644f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T643f66(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T652f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T648f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T485f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T484f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T483f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T485f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T484f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T483f45(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T485f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T484f50(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T483f50(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T485f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T484f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T483f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T365f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T365f233(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T113f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T365f233p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T365f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T363f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T363f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T363f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T363f19(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T359f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T359f229(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T359f229p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T359f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T324f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T324f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T324f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T324f18(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T365f227(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T365f227p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T365f227p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T365f237(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T976f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T976f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T976f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T976f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T976f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T976f1(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1163f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T976f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T976f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T365f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T365f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T365f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T365f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T365f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T365f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1271os18670;
extern T0* ge1271ov18670;
extern T0* T365f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T365f241(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T365f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T365f240(T0* C);
/* DS_LINKED_STACK [INTEGER].remove */
extern void T977f7(T0* C);
/* DS_LINKED_STACK [INTEGER].item */
extern T6 T977f2(T0* C);
/* DS_LINKED_STACK [INTEGER].is_empty */
extern T1 T977f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T365f238(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER].force */
extern void T977f6(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T365f239(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T365f236(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T365f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T365f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T365f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T365f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T365f234(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T363f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T363f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T363f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T363f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T363f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T363f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T363f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T363f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T363f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T363f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T363f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T363f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T363f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T363f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T363f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T363f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T363f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T363f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T363f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T363f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T363f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T359f223(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T359f223p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T359f232(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T359f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T359f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T359f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T359f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T359f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T359f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T359f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T359f237(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T359f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T359f236(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T359f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T359f235(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T359f231(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T359f234(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T359f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T359f230(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T359f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T359f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T324f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T324f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T324f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T324f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T324f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T324f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T324f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T324f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T324f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T324f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T324f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T324f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T324f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T324f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T324f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T324f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T324f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T324f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T324f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T324f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T324f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T365f229(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T363f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T359f225(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T324f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T365f230(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T910f30(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T910f7(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T363f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T359f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T324f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T365f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T363f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T359f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T324f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T365f228(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1346f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1346f5(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f32(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T363f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T359f224(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T324f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T650f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1238f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1331f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1331f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1237f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1331f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1236f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1331f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T259f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1331f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T85f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1331f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1238f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1237f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1236f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T259f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T85f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T814f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T476f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T814f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T955f95(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T476f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T955f91(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1129f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T799f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1129f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T955f90(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T799f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T955f94(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1359f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1349f18(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1255f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1129f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T814f11(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T806f39(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T805f40(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T804f40(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T803f40(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T802f41(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T800f41(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T799f10(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T790f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T783f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T781f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T780f19(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T776f31(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T775f19(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T774f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T773f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T769f20(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T767f19(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T766f19(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T765f19(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T764f19(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T759f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T758f23(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T743f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T695f19(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T524f26(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T521f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T492f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T491f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T490f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T489f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T487f40(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T486f40(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T485f50(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T484f51(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T483f51(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T479f40(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T476f15(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T467f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T431f33(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T204f30(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T186f29(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T182f33(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T119f97(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T482f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T481f41(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T480f36(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T806f38(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T805f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T804f39(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T803f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T802f40(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T800f40(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T776f30(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T772f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T771f34(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T473f85(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T464f76(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T451f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T445f53(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1349f19(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1256f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1255f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T806f37(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T628f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T622f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T207f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T926f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T212f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T795f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T805f38(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T624f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T927f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T663f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T805f38p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T804f38(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T804f38p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T803f38(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T802f39(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T802f39p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T800f39(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T800f39p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T790f18(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T783f26(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T781f25(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T780f18(T0* C);
/* ET_CALL_AGENT.reset */
extern void T776f28(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T775f18(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T774f18(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T773f17(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T769f17(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T767f18(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T766f18(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T765f18(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T764f18(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T759f19(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T758f22(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T743f27(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T743f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T743f27p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T743f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T695f18(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T785f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T473f84(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T524f25(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T521f21(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T521f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T492f38(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T491f38(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T490f35(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T489f35(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T487f38(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T486f38(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T485f48(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T484f49(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T483f49(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T482f36(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T481f40(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T480f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T479f39(T0* C);
/* ET_VOID.reset */
extern void T467f29(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T431f32(T0* C);
/* ET_RESULT.reset */
extern void T204f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25p1(T0* C);
/* ET_CURRENT.reset */
extern void T182f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1349f17(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1256f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1255f15(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T806f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T805f37(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T804f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T803f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T802f38(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T800f38(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T790f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T783f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T781f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T780f17(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T776f27(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T775f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T774f17(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T773f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T769f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T767f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T766f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T765f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T764f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T759f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T758f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T743f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T695f17(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T524f24(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T521f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T492f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T491f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T490f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T489f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T487f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T486f37(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T485f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T484f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T483f47(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T482f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T481f39(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T480f34(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T479f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T467f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T431f31(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T204f25(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T186f24(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T182f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T119f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T639f79(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T638f78(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T633f76(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T632f80(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T630f80(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T303f74(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T298f78(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T227f68(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T226f70(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T224f70(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T163f81(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T639f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T638f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T633f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T632f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T630f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T303f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T298f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T227f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T226f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T224f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T163f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T639f102(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T638f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T633f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T632f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T630f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T303f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T298f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T227f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T226f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T224f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T163f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T639f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T638f98(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T633f97(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T632f100(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T630f100(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T303f95(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T298f98(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T227f88(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T226f92(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T224f91(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T163f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T639f100(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T638f99(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T633f98(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T632f101(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T630f101(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T303f96(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T298f99(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T227f89(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T226f93(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T224f92(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T163f102(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T639f97(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T638f96(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T633f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T632f98(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T630f98(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T303f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T298f96(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T227f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T226f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T224f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T163f99(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T639f98(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T638f97(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T633f96(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T632f99(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T630f99(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T303f94(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T298f97(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T227f87(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T226f91(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T224f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T163f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T639f94(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T638f93(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T633f92(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T632f95(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T630f95(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T303f90(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T298f93(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T227f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T226f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T224f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T163f92(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T639f103(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T207f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T207f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T207f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T212f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T926f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T212f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T638f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T633f101(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T632f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T630f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T303f99(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T298f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T227f92(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T226f96(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T224f95(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T163f105(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T639f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T638f76(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T633f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T632f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T630f78(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T303f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T298f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T227f67(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T226f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T224f69(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T163f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T639f93(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T638f92(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T633f91(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T632f94(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T630f94(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T303f89(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T298f92(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T227f78(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T226f82(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T224f81(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T163f91(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T639f96(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T638f95(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T633f94(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T632f97(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T630f97(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T303f92(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T298f95(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T227f85(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T226f89(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T224f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T163f98(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T639f87(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T638f86(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T633f84(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T632f88(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T630f88(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T303f82(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T298f86(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T227f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T226f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T224f86(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T163f96(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T639f88(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T638f87(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T633f85(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T632f89(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T630f89(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T303f83(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T298f87(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T227f84(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T226f88(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T224f87(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T163f97(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T639f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T638f81(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T633f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T632f83(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T630f83(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T303f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T298f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T227f71(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T226f73(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T224f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T163f84(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T639f83(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T638f82(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T633f80(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T632f84(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T630f84(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T303f78(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T298f82(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T227f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T226f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T224f74(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T163f85(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T639f84(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T638f83(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T633f81(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T632f85(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T630f85(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T303f79(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T298f83(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T227f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T226f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T224f75(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T163f86(T0* C);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T957f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T957f132(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T957f193(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T245f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T245f16(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T686f27(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T957f191(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T245f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T52f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T889c787(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T52f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T52f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T889c776(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T52f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T889c786(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T52f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T785f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T183f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T785f8(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T183f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T957f220(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T957f219(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1255c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T957f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1349c16(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T169f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T529f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T529f19(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T51f151(T0* C);
/* ET_XACE_UNIVERSE.is_dotnet */
extern T1 T48f155(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T55f149(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T925f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T500f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T500f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T55f148(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T245f19(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T245f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T52f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T889c785(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T52f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T52f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T889c775(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T52f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T889c784(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T957f190(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T52f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T889c783(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T52f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_CLIENTS.has_any */
extern T1 T415f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T414f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T414f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T52f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T889c782(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T51f150(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.has_class */
extern T1 T48f154(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T415f9(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T415f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T414f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T414f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T52f330(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T889c752(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T52f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f330(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T52f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T889c749(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T52f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T52f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T889c748(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T957f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T51f186(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T958f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_expression_supplier */
extern void T48f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T52f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T889c745(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T52f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T52f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T889c744(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T957f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T52f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T889c753(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T52f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T957f21(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T957f30(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T957f39(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T119f80(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T957f64(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T957f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T957f192(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T52f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T889c751(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T52f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T52f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T889c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T52f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T889c747(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T52f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T52f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T889c746(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T52f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T889c743(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T52f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T119f22(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T957f130(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T957f189(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T957f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T169f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T169f9(T0* C);
/* ET_CLASS.ancestor */
extern T0* T55f120(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T297f5(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T169f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T52f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T889c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T52f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T52f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T889c741(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T957f129(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T957f188(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T955f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T59f357(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T59f373(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T59f392(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T59f356(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T59f411(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T59f195(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T59f410(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T59f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T59f397(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T59f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T59f395(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T205c9(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T59f388(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T59f391(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T59f186(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T59f191(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T59f338(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T59f372(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T59f390(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T59f371(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T59f387(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T59f187(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T59f370(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T59f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T56f509(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T56f515(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T202f16(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T150f19(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T175f20(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T175f12(T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T56f514(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T56f513(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T119f21(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T56f512(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T119f20(T0* C);
/* ET_FEATURE_CHECKER.process_current */
extern void T957f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T957f133(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T957f194(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T955f38(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T59f412(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T59f463(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T59f507(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T56f510(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T56f516(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T957f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T957f134(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T957f195(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T52f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T889c758(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T52f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T889c757(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T52f334(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T889c756(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f334(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T52f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T889c755(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T52f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T889c754(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T955f39(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T59f413(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T59f464(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T59f508(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T56f511(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T56f517(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T962f27(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T961f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T956f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T954f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T953f8(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T952f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T951f8(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T950f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T279f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T279f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T55f217(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T279f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T52f285(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T889c707(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1308f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1205f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1308f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1205f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1308f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1205f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1308f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1205f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1308f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1205f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1308f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1205f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1205f1(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1308f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1205f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1205f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T52f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f285(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1205f5(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T279f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T293f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T293f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T959f15(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].wipe_out */
extern void T865f19(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].clear_items */
extern void T865f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].wipe_out */
extern void T1206f37(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_wipe_out */
extern void T1206f47(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_wipe_out */
extern void T1206f46(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_wipe_out */
extern void T1206f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_wipe_out */
extern void T1206f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].move_all_cursors_after */
extern void T1206f42(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_next_cursor */
extern void T1311f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_position */
extern void T1311f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1205f22(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1205f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1205f25(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T959f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T959f6(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T279f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T961f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T279f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T962f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T962f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T52f413(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T889c835(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1378f3(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1270f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1378f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1270f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1378f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1270f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1378f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1270f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T537f20(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T529f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1378f2(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1270f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1378f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1270f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1270f3(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1378f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1270f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1270f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1270f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T52f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f413(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f148(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1211f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].wipe_out */
extern void T1313f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1313f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1313f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1313f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1313f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1313f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1398f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_position */
extern void T1398f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1270f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1270f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1270f19(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1211f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T537f73(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T529f69(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1270f2(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T52f412(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T889c834(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f412(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1211f2(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1211f12(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1270f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1211f1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T962f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T52f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T889c833(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T52f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T52f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T889c832(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T52f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T962f6(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T962f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T279f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T55f218(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].wipe_out */
extern void T960f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_wipe_out */
extern void T960f55(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_wipe_out */
extern void T960f54(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_wipe_out */
extern void T960f53(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_wipe_out */
extern void T960f52(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].move_all_cursors_after */
extern void T960f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_next_cursor */
extern void T1210f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_position */
extern void T1210f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].forth */
extern void T1210f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_forth */
extern void T960f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].add_traversing_cursor */
extern void T960f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].remove_traversing_cursor */
extern void T960f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_item */
extern T6 T960f27(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T297f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].item */
extern T0* T1210f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_item */
extern T0* T960f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_item */
extern T0* T960f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].after */
extern T1 T1210f1(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_after */
extern T1 T960f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].start */
extern void T1210f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_start */
extern void T960f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_off */
extern T1 T960f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].is_empty */
extern T1 T960f38(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T279f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T297f4(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T245f37(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].force_new */
extern void T960f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_put */
extern void T960f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_put */
extern void T960f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_put */
extern void T960f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_put */
extern void T960f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_item */
extern T6 T960f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].hash_position */
extern T6 T960f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].resize */
extern void T960f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_resize */
extern void T960f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_resize */
extern void T960f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_resize */
extern void T960f63(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T968f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T967f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T967f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T967f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T967f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T967f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_item */
extern T6 T960f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_resize */
extern void T960f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_capacity */
extern T6 T960f25(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T52f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T889f665(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T889c713(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T52f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f81(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found_item */
extern T0* T960f23(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found */
extern T1 T960f22(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search */
extern void T960f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search_position */
extern void T960f56(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T52f290(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T889c712(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T52f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f290(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f80(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T52f289(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T889c711(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T52f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f289(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T52f288(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T889c710(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T52f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f288(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T52f287(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T889c709(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T52f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f287(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T52f286(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T889c708(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f286(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T55f70(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1205f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T959f14(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1205f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T279f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T279f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T959f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T959f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T959f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T959f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found_item */
extern T6 T1206f33(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_item */
extern T6 T1206f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found */
extern T1 T1206f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search */
extern void T1206f61(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search_position */
extern void T1206f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_item */
extern T6 T1206f9(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].hash_position */
extern T6 T1206f12(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_item */
extern T0* T1206f11(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_item */
extern T6 T1206f13(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T959f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T959f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].put */
extern void T1206f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_put */
extern void T1206f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_put */
extern void T1206f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_put */
extern void T1206f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_put */
extern void T1206f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].resize */
extern void T1206f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_resize */
extern void T1206f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_resize */
extern void T1206f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_resize */
extern void T1206f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_resize */
extern void T1206f48(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1205f23(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T959f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T959f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].has */
extern T1 T1206f1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T279f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T55f216(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T279f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T277f18(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T55f213(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T277f23(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T55f215(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T277f22(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T55f214(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T277f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T406f70(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1016f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T406f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1016f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1016f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1016f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T406f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T406f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T406f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T406f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T406f73(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T277f25(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T957f36(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T504f29(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T504f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T52f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T889c740(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T52f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T504f11(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T504f12(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T51f185(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_supplier_handler */
extern void T48f193(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T277f24(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T277f26(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T1241f1(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T957f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T628f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T628f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T957f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T622f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T622f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T957f35(T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T277f20(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T277c19(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T277f11(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T55f212(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T55f211(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T277f10(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T276f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T276f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T55f196(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T276f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T276f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T956f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T956f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1205f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1205f24(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1205f2(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T276f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T276f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T52f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T889c633(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T52f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T52f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T889c632(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T52f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T889c631(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T52f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T538f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T538f8(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T529f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T276f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T55f195(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T276f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T275f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T275f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T55f209(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T275f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T275f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T940f59(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T940f71(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T940f70(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T940f69(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T940f68(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T940f67(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1184f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1184f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T275f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T940f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T940f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T940f27(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T940f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T940f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T940f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T940f39(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T941f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T940f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T940f35(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T275f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T52f256(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T889c678(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T52f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f256(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T52f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T889c677(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T52f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T889c676(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T52f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T52f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T889c675(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T52f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T889c674(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T592f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T592f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T498f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T52f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T889c673(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T592f13(T0* C);
/* ET_CREATOR.first */
extern T0* T592f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T415f14(T0* C);
/* ET_CLIENTS.first */
extern T0* T415f17(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T415f16(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T592f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T52f59(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f251(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T498f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T498f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T275f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T52f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T889c672(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T52f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T52f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T889c671(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T52f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T52f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T889c670(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T52f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T52f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T889c669(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T52f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T52f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T889c668(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T52f242(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T889c663(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T52f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f242(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T52f241(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T889c662(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T52f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f241(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T52f240(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T889c661(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1245f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1242f16(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1242f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f240(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T940f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T940f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T940f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T940f42(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T55f210(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T943f46(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T943f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T943f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T943f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T943f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T943f53(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1190f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1190f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T940f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T940f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T940f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T275f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T952f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1269f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1268f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1268f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1269f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1268f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1269f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T952f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T52f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T889c736(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T52f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T52f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T889c735(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T952f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T952f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1269f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1269f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1268f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1268f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1268f1(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1269c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1242f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T952f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T52f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T889c734(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T52f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T52f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T889c733(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T52f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T889c732(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T952f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T52f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T889c731(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T52f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T52f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T889c730(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T52f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T889c729(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T952f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T943f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T943f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T943f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T943f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T943f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T943f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T943f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T943f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T943f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T943f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1185f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1187f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1187f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1187f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1187f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1187f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T943f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T943f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T943f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T943f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T943f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T943f47(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T944f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T52f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T889c660(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T52f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T52f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T889c659(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T52f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T889c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T52f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T52f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T889c657(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1242f14(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T52f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T889c656(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T52f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T889c655(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T52f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T889c654(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T52f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T889c653(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T52f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T889c652(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f231(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T943f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T943f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T943f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T943f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T940f24(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T940f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T940f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T940f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T940f41(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T275f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T951f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1203f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1307f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1307f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1307f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1307f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1307f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1307f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1392f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_position */
extern void T1392f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1267f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1267f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1267f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1377f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1377f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1203f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T52f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T889c728(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1377f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1267f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1267f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1267f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1377f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1267f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1377f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1267f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1267f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1267f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1377f3(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1267f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1267f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1377f2(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1377f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1267f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1267f2(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T52f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f306(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T951f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T951f9(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1203f1(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1203f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1267f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T52f230(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T889c651(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T52f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f230(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T52f229(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T889c650(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f229(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T52f228(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T889c649(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f228(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T52f227(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T889c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f227(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T52f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T889c647(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f226(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T52f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T889c646(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T52f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T889c645(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T52f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f224(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T52f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T889c644(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T52f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f223(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T275f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T52f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T889c667(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T52f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T940f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T940f25(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T52f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T889c666(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T52f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T950f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1244f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1244f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T239f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T239f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1342f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge873os18060;
extern T0* ge873ov18060;
extern T0* T275f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1244c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1342c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1243f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1243f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T241f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T241f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1339f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge873os18059;
extern T0* ge873ov18059;
extern T0* T275f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1243c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1339c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T940f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T940f63(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T275f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T275f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T52f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T889c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T52f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T52f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T889c684(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T52f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T52f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T889c683(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T52f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T889c682(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1245f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1245f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T275f44(T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1245f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1204f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1245f33(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1204f31(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1240f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1240f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1240f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1240f2(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1240f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1240f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER].cloned_array */
extern T0* T920f1(T0* C, T0* a1);
/* ARRAY [INTEGER].twin */
extern T0* T296f9(T0* C);
/* ARRAY [INTEGER].copy */
extern void T296f17(T0* C, T0* a1);
/* ARRAY [INTEGER].set_area */
extern void T296f19(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1240f5(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1245f21(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1204f20(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1240c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1240f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER].resize */
extern void T920f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER].conservative_resize */
extern void T296f16(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1240f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1240f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1242f20(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T1241f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1241c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge686os6094;
extern T0* ge686ov6094;
extern T0* T1241f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T415f15(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T414f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1242f19(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1242f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T52f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T889c681(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T52f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1242f18(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T275f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T52f274(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T889c696(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T52f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f274(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1242f11(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T275f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T52f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T889c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T52f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T52f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T889c705(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T275f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T52f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T889c704(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T52f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T52f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T889c703(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T52f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T889c702(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T52f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T275f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T52f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T889c701(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T52f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T52f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T889c700(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T52f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T889c699(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T52f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T889c698(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T52f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T889c697(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T52f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1245f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T275f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T946f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T946f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T946f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1193f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1193f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T947f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T947f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T947f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T947f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T947f64(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T947f63(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1194f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1194f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T947f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T947f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T947f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T947f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T947f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T947f21(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T947f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T947f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T947f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T947f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T947f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T947f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T947f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T947f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T947f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T947f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T947f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T947f26(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T947f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T947f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T947f47(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T947f58(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T946f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T947f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T947f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T947f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T947f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T947f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T947f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T947f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T947f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T947f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T947f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T947f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T947f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T947f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T947f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T947f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T946f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T946f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T946f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T946f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T946f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T415f13(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T119f91(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T119f93(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T414f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T946f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T946f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T946f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T946f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T1191f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1192f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1192f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1192f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1192f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1192f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T946f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T946f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T581f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T579f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T581f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T579f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T581f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T291f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T275f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T275f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T955f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T52f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T889c680(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T628f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T628f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T628f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T52f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T628f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T52f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T889c679(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T622f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T622f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T622f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T622f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T275f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T52f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T889c695(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T52f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T889c694(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T52f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T52f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T889c693(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T52f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T889c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T52f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T889c691(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T52f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T889c690(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T52f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T889c689(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T52f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T52f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T889c688(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T52f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T52f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T889c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T52f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T889c686(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1204f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T52f243(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T889c664(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T52f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f243(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1245f19(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1242f17(T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1204f18(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1245f18(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1204f17(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T275f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T940f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T940f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T940f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T940f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T940f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T940f62(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T275f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T948f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T948f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].wipe_out */
extern void T1198f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_wipe_out */
extern void T1198f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_wipe_out */
extern void T1198f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_wipe_out */
extern void T1198f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_wipe_out */
extern void T1198f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].move_all_cursors_after */
extern void T1198f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_next_cursor */
extern void T1291f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_position */
extern void T1291f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].forth */
extern void T1198f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_forth */
extern void T1198f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].add_traversing_cursor */
extern void T1198f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].remove_traversing_cursor */
extern void T1198f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_item */
extern T6 T1198f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T948f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T52f305(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T889c727(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1372f2(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1264f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1372f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1264f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1372f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1264f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1372f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1264f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1372f1(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1264f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1264f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1372f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1264f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1264f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1372f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1264f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1264f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1264f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1372c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1264f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T52f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f305(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1245f39(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1268f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1423f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1423c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1268f3(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1268c8(void);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1204f35(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1242f21(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1245f38(T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1204f34(T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1245f37(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1204f33(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T52f304(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T889c726(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f304(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T948f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T948f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1263f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1263f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1263f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1368f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1263f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1368f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1264f16(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1245f28(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1204f26(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1263f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1263f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1263f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1263f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1263f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1263f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1263f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1264c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1370f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1410c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1371c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1370c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_for_iteration */
extern T6 T1198f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_key */
extern T6 T1198f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_item */
extern T6 T1198f14(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_for_iteration */
extern T0* T1198f2(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_item */
extern T0* T1198f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_item */
extern T0* T1198f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].after */
extern T1 T1198f1(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_after */
extern T1 T1198f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].start */
extern void T1198f45(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_start */
extern void T1198f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_off */
extern T1 T1198f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].is_empty */
extern T1 T1198f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T948f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].force_new */
extern void T1198f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_put */
extern void T1198f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_put */
extern void T1198f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_put */
extern void T1198f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_put */
extern void T1198f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_item */
extern T6 T1198f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].hash_position */
extern T6 T1198f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].resize */
extern void T1198f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_resize */
extern void T1198f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_resize */
extern void T1198f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_resize */
extern void T1198f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1296f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1292f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1292f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1292f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1292f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1292f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_resize */
extern void T1198f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_capacity */
extern T6 T1198f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].replace_found_item */
extern void T1198f49(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1262c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1263c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1263f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1368c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1262f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1263f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1369f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1369c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1263f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found_item */
extern T0* T1198f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found */
extern T1 T1198f4(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search */
extern void T1198f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search_position */
extern void T1198f60(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T948f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T52f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T889c719(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T52f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T52f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T889c718(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T52f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f85(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1197f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1197f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1197f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1197f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1197f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1197f58(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1288f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1288f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1197f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1197f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1197f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1197f72(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1197f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T52f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T889c717(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T52f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f84(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1197f7(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1197f16(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1197f11(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1197f6(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1197f15(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1197f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1197f5(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1197f14(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1197f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1197f56(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1197f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1197f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1196f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1196f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1196f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1196f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1196f57(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1196f56(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1287f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1287f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1196f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1196f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1196f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1196f71(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1196f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T52f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T889c716(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T52f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f83(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1196f4(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1196f12(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1196f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1196f3(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1196f11(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1196f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1196f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1196f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1195f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1195f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1195f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1195f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1195f57(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1195f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1281f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1281f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1195f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1195f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1195f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1195f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1195f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T52f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T889c715(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T52f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f82(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1195f5(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1195f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1195f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1195f4(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1195f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1195f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1195f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1195f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T940f75(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T940f86(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T940f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T940f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T940f85(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T940f87(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T940f84(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T948f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1245f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1245c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1245f30(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1245f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1245f23(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1242f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1204f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1204f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T940f76(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T948f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1204f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1204f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1242f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1242f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1197f47(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1197f55(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1197f4(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1242f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1197f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1197f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1197f46(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1197f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1197f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1197f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1196f41(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1196f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1196f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1196f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1196f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1196f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1196f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1196f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1196f73(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1196f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1196f68(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1196f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1196f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1196f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1196f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1196f2(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1196f40(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1242f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1195f44(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1195f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1195f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1195f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1195f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1195f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1195f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1195f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1195f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1195f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1195f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1195f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1195f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1195f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1195f3(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1195f2(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1195f43(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T948f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1242f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1242f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T940f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T940f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T940f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T940f81(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T940f78(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T948f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T52f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T889c725(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T52f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f92(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1197f52(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1197f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1197f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1197f66(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T292f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T292f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1197f51(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1197f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1197f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1197f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1197f64(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T948f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T52f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T889c724(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T52f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T948f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T52f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T889c723(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T52f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f90(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1196f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T948f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T52f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T889c722(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T52f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f89(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1196f6(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1196f46(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T581f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T581f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1196f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1196f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1196f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1196f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1196f61(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T52f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T889c721(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T52f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f88(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1195f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T948f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T52f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T889c720(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T52f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f87(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1195f49(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T290f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T290f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1195f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1195f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1195f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1195f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1286f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1282f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1282f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1282f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1282f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1282f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1195f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T948f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T52f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T889c714(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T949f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1202f37(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1202f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1202f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1202f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1202f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1202f41(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1304f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1304f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1200f34(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1200f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1200f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1200f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1200f44(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1200f43(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1298f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1298f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T949f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T949f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T949f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T949f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T949f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T949f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1266f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1266f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1266f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1373f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1266f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1373f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1266f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1266f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1266f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1266f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1266f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1266f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1266f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1202f2(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1202f5(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1202f1(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1202f38(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1202f47(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1202f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1202f15(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1199f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1202f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1202f17(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T949f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T949f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1200f3(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1200f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1200f2(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1200f36(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1200f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1200f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1200f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1200f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1200f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1200f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T949f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T949f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1200f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1200f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1200f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1200f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1200f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1202f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1202f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1202f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1202f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1202f49(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1202f57(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1202f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1299f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1297f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1297f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1297f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1297f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1297f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1202f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1305f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1300f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1300f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1300f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1300f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1300f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1202f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1202f14(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1202f48(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1266c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1266f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1373c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1266f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1374f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1374c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1266f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T940f77(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T940f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1200f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1200f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1200f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1200f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1200f48(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T275f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T953f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T275f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T954f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T954f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T275f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T55f208(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T275f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T274f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T169f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T158f1782(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T902f5(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.preparse */
extern void T51f183(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T51f184(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T284f161(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T284f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T284f163(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_XACE_UNIVERSE.preparse */
extern void T48f191(T0* C);
/* ET_XACE_UNIVERSE.preparse_multiple */
extern void T48f192(T0* C);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T957f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T957f58(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T51f187(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T958f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_result_supplier */
extern void T48f195(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T957f66(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T957f63(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T169f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T52f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T889c739(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T52f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge247os1595;
extern T0* ge247ov1595;
extern T0* T169f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T52f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T889c738(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T538f10(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T538f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T397f11(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T169f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T957f65(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T51f188(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T958f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_argument_supplier */
extern void T48f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T957f70(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T955f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T59f215(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f226(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T59f334(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T53f57(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T59f333(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_builtin_code */
extern void T202f66(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_builtin_code */
extern void T150f63(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T59f332(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T59f331(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T59f330(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T59f329(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T59f328(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T59f327(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T59f326(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T59f325(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T59f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T59f323(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T59f322(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T59f321(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T59f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T59f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T59f318(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T59f317(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T59f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T59f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T59f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T59f313(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T59f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T59f311(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T59f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T59f309(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T59f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T59f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T59f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T59f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T59f304(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T59f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T59f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T59f301(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T59f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T59f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T59f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T59f297(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T59f296(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T59f295(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T59f294(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T59f293(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T59f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T59f291(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T59f290(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T59f289(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T59f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T59f287(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T59f286(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T59f285(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T59f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T59f283(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T59f282(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T59f281(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T59f280(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T59f279(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generating_type */
extern void T59f278(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T59f277(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T59f276(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T59f275(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T59f274(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T59f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T59f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T59f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T59f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T59f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T59f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T59f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T59f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T59f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T59f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T59f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T59f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T59f261(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T59f260(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T59f259(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T59f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T59f257(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T59f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T59f255(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T59f254(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T59f253(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T59f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T59f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T59f250(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T59f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T59f248(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type2 */
extern void T59f247(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T59f246(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T59f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T59f244(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T59f243(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T59f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T59f241(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T59f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T59f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T59f238(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T59f237(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_argument_dynamic_types */
extern void T59f352(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f226p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T59f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T59f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T59f335(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T59f353(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T56f518(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T56f570(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T56f627(T0* C, T0* a1, T1 a2, T1 a3);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T196f37(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T196f38(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T196f38p1(T0* C);
/* DS_ARRAYED_LIST [STRING].last */
extern T0* T76f21(T0* C);
/* ET_C_GENERATOR.print */
extern void T56f632(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1327f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1419f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1419f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1327f1(T0* C);
/* STD_FILES.output */
extern unsigned char ge2054os24812;
extern T0* ge2054ov24812;
extern T0* T1327f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1419c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1419f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1419f2(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1419f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f33(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T56f265(T0* C);
/* STD_FILES.set_output_default */
extern void T1327f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1327c4(void);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T56f647(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING].item */
extern T0* T107f8(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T41c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T56f646(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T56f645(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T56f644(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T56f666(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T56f665(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T56f664(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T56f663(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T56f662(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_body */
extern void T56f661(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T56f660(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T56f659(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T56f658(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type2_body */
extern void T56f657(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T56f656(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T173f8(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T173f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T56f655(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T56f654(T0* C);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T56f653(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T56f643(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T912f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T56f270(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T56f642(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T56f652(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T195f297(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T195f296(T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T56f641(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T195f295(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T56f635(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T56f640(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T957f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T957f135(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T957f196(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T245f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T245f17(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T245f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T957f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T52f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T889c804(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T28f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T52f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T889c803(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T52f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T889c762(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T52f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T957f252(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T52f339(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T889c761(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f339(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T52f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T889c760(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T52f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T889c759(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_IDENTIFIER.set_tuple_label */
extern void T119f109(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T957f216(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T239f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T241f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T240f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T240f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern T0* T872f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].resized_area */
extern T0* T873f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].copy_data */
extern void T873f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].move_data */
extern void T873f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].overlapping_move */
extern void T873f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].non_overlapping_move */
extern void T873f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T240f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T240f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T242f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T242f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern T0* T876f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].resized_area */
extern T0* T877f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].copy_data */
extern void T877f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].move_data */
extern void T877f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].overlapping_move */
extern void T877f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].non_overlapping_move */
extern void T877f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T242f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T242f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T243f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T239f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T239f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T239f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T239f42(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T239f45(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T243f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T243f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T243f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T879f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T243f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T243f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T879f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T243f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T243f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T243f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T243f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T243f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T243f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T243f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T243f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T240f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T240f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T874f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_position */
extern void T874f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T240f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T240f6(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T239f17(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T242f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T242f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T878f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_position */
extern void T878f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T242f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T242f6(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T241f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T241f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T241f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T241f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T241f42(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T241f45(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T241f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T55f219(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T146f12(T0* C, T0* a1, T0* a2);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T186f9(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T955f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T955f83(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T59f414(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T59f465(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T59f509(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T59f408(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T59f550(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T168f7(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T59f393(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T56f519(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T56f571(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T56f629(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T56f628(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T56f649(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T56f648(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T957f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T957f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T52f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T889c639(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T52f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T52f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T889c638(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T52f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T52f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T889c637(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T52f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T487f39(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T486f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T52f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T889c636(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T52f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T52f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T889c635(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T52f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T52f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T889c634(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T52f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T955f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T59f216(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T59f227(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T56f520(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T56f572(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T56f630(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_name */
extern void T186f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T957f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T957f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T52f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T889c640(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T52f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T955f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T59f217(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T59f228(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T56f521(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T56f573(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T957f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T957f52(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T955f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T59f218(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T59f229(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T56f522(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T56f574(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T957f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T957f59(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T957f69(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T957f68(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T626f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T957f67(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T51f189(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T958f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_local_supplier */
extern void T48f197(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T957f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T957f71(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T52f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T889c643(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T52f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T52f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T889c642(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T52f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T52f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T889c641(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T955f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T955f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T59f219(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T59f230(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T59f341(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T59f340(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T59f339(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T59f355(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T59f354(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T56f523(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T56f575(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T56f631(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T56f650(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T56f651(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T56f667(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T189f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T189f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T189f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T189f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T189f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T189f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T189f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T189f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T189f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T189f45(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T957f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T957f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T955f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T59f220(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T59f231(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T56f524(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T56f576(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T957f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T957f150(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T957f213(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T955f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T59f440(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T59f491(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T59f536(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T56f525(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T56f577(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T957f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T957f143(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T957f210(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T955f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T59f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T59f483(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T59f533(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T56f526(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T56f578(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T957f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T957f146(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T957f211(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T955f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T59f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T59f486(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T59f534(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T56f527(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T56f579(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T56f633(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T957f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T957f147(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T957f212(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T955f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T59f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T59f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T59f535(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T200f7(T0* C);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T56f528(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T56f580(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T957f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T957f148(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T955f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T59f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T59f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T56f529(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T56f581(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T957f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T957f149(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T955f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T59f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T59f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T56f530(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T56f582(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T957f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T957f138(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T957f207(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T957f206(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T957f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T957f204(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T957f203(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T957f202(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T957f201(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T957f200(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T957f199(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T957f198(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T955f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T59f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T59f478(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T59f530(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T59f529(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T59f528(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T59f527(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T59f526(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T59f525(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T59f524(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T59f523(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T59f522(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T59f521(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T56f531(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T56f583(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T957f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T957f139(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T955f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T59f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T59f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T56f532(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T56f584(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T957f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T957f140(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T955f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T59f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T59f480(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T56f533(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T56f585(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T957f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T957f141(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T957f209(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T957f208(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T955f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T59f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T59f481(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T59f532(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T59f531(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T56f534(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T56f586(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T486f20(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T464f9(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T957f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T957f142(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T955f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T59f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T59f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T56f535(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T56f587(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T487f20(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T957f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T957f136(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T957f197(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T955f50(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T59f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T59f476(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T59f520(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T56f536(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T56f588(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T957f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T957f137(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T955f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T59f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T59f477(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T56f537(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T56f589(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T957f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T957f144(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T955f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T59f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T59f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T56f538(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T957f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T957f145(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T955f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T59f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T59f485(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T56f539(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T957f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T957f151(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T957f214(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T52f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T889c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T52f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T889c790(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T52f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1255f7(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T521f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T52f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T889c789(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T52f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T957f253(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T51f192(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T958f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_create_supplier */
extern void T48f200(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T957f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T52f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T889c788(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T239f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T55f220(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T148f12(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T957f229(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T955f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T59f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T59f473(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T59f519(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T59f461(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T59f193(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T59f407(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_expression */
extern void T56f540(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T56f590(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T957f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T957f152(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T957f215(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T955f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T59f446(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T59f497(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T59f540(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T56f541(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T56f591(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T188f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T188f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T188f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T188f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T188f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T188f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T188f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T188f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T188f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T841f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T840f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T840f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T840f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T840f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T840f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T188f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T188f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T188f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T188f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T188f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T188f33(T0* C);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T957f43(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T957f55(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T955f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T59f221(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T59f232(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T56f542(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T56f592(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T56f634(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T957f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T957f56(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T955f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T59f222(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T59f233(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T56f543(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T56f593(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T957f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T957f57(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T955f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T59f223(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T59f234(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T56f544(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T56f594(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T957f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T957f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T955f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T59f224(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T59f235(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T56f545(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T56f595(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T957f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T957f62(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T955f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T59f225(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f236(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T59f351(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T59f350(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T59f349(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T59f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T59f347(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T59f346(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T59f345(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T59f344(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T59f343(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T59f342(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f236p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T56f546(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T56f596(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T957f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T957f154(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T955f37(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T785f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T955f93(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T59f443(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T59f494(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T56f547(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T56f597(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T957f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T957f164(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T957f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T51f190(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T958f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_static_supplier */
extern void T48f198(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T743f15(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T955f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T59f442(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T59f493(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T59f538(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T202f69(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T150f68(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T56f548(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T56f598(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T56f264(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T957f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T957f167(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T957f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T52f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T889c771(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T752f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T52f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T52f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T889c770(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T52f351(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T889c773(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T52f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f351(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T955f40(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T955f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T52f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T889c851(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T52f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T889c850(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T758f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T752f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T423f22(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T52f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T889c849(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T52f427(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T889c848(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T52f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f427(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f150(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T955f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T955f88(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T59f415(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T59f466(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T59f510(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T202f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T150f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T201f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1338f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1337f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1337f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1337f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1337f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1337f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1337c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1338f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1405c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge911os15140;
extern T0* ge911ov15140;
extern T0* T201f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1338c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T201f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T201f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T201c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T202c60(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T202f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T202f50(T0* C);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T56f549(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T56f599(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T957f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T957f168(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T955f68(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T59f444(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T59f495(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T56f550(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T56f600(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T957f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T957f169(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T52f352(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T889c774(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T52f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f352(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T957f239(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T957f238(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T957f237(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T957f236(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T957f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T955f41(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T59f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T59f467(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T59f515(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T59f514(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T59f513(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T59f512(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T59f511(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T56f551(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T56f601(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T56f636(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T957f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T957f170(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T955f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T59f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T59f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T56f552(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T56f602(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T957f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T957f171(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T955f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T59f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T59f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T56f553(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T56f603(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T957f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T957f172(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T245f39(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T245f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T245f21(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T955f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T59f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T59f470(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T56f554(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T56f604(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T957f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T957f173(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T769f19(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1256f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1256c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T245f23(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T769f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T955f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T59f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T59f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T56f555(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T56f605(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T957f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T957f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T52f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T889c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T473f43(T0* C);
/* ET_SYMBOL.text */
extern T0* T426f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T52f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T957f240(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T955f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T59f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T59f472(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T59f518(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T56f556(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T56f606(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T473f11(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T426f11(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T957f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T957f175(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T955f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T59f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T59f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T56f557(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T56f607(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T957f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T957f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T52f356(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T889c778(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T52f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f356(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T955f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T59f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T59f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T56f558(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T56f608(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T957f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T957f177(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T957f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T776f17(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T52f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T889c806(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T52f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T957f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T957f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T957f264(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T957f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T957f269(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T52f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T889c822(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T52f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T52f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T889c821(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T52f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T889c820(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T52f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T52f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T889c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T795f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T795f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T52f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T889c818(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T52f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T52f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T889c817(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T160f29(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T160f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T957f268(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1358f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1359c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1358c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1407f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1420c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1406c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge504os15140;
extern T0* ge504ov15140;
extern T0* T1358f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1407c2(void);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T52f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T889c816(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T52f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T957f263(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T957f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T776f29(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T957f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T957f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T957f261(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T957f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T957f241(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T52f383(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T889c805(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f383(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T957f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T957f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T957f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T957f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T955f72(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T955f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T59f448(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T59f499(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T59f544(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T59f560(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T59f571(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T222f34(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T59f559(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T59f570(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T59f575(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T59f564(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T59f563(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T59f558(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T59f569(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_procedure_call */
extern void T59f574(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T215c8(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T59f543(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T59f557(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T59f556(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T59f555(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T59f542(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T59f554(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T59f568(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T59f573(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T59f577(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T59f553(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T59f567(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T56f559(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T56f610(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T56f638(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T180f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T180f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T835f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T834f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T834f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T834f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T834f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T834f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T180f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T180f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T56f609(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T56f637(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T692f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T184f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T184f12(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T184f11(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T186f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_target */
extern void T186f26(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T957f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T957f178(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T955f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T59f439(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T59f490(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T56f560(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T56f611(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T957f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T957f179(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T161f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T957f244(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T781f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T781f14(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T955f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T59f445(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T59f496(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T59f539(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T56f561(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T56f612(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T187f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T187f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T187f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T187f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T187f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T187f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T187f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T187f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T187f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T187f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T187f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T187f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T187f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T187f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T187f33(T0* C);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T957f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T957f180(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T957f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T52f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T889c781(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T52f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T52f358(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T889c780(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T52f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f358(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T52f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T889c779(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T783f16(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T783f19(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T955f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T59f447(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T59f498(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T59f541(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T56f562(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T56f613(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T957f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T957f181(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T957f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T955f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T59f441(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T59f492(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T59f537(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T56f563(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T56f614(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T957f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T957f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T957f250(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T957f270(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T238f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T238f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T870f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T870f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T238f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T238f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T957f249(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T51f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T958f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T48f202(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T957f267(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T52f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T889c815(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T52f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T52f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T889c814(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T238f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T52f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T889c813(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T52f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T52f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T889c812(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T52f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T52f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T889c811(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T51f191(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T958f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T48f199(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T957f248(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T957f247(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T51f193(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T958f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T48f201(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T957f266(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T52f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T889c810(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T52f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T889c809(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T52f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T889c808(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T52f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T889c807(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T238f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T238f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T238f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T238f10(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T955f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T59f449(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T59f500(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T59f548(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T59f565(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T59f572(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T59f576(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T59f547(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T59f562(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T59f546(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T59f545(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T59f561(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T56f564(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T56f616(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T56f615(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T56f639(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T957f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T957f183(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T955f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T59f450(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T59f501(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T56f565(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T56f618(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T56f617(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T957f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T957f184(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T955f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T59f451(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T59f502(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T56f566(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T56f620(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T56f619(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T957f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T957f185(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T957f251(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T957f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T955f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T59f452(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T59f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T59f549(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T59f566(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T56f567(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T56f622(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T56f621(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T957f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T957f186(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T955f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T59f453(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T59f504(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T56f568(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T56f624(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T56f623(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T957f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T957f187(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T955f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T59f454(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T59f505(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T56f569(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T56f626(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T56f625(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T962f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T962f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T52f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T889c826(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T52f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T537f26(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T166f20(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T529f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T52f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T889c825(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T537f24(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T166f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T529f22(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T52f402(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T889c824(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T52f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f402(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T52f401(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T889c823(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T52f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f401(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T961f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T961f10(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T961f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T961f11(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T956f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T956f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T956f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1205f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1205f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1205f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T954f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T954f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T52f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T889c737(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T52f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T954f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T58f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge247os1586;
extern T0* ge247ov1586;
extern T0* T954f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T58c18(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T954f19(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T953f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T953f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T953f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T953f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T953f11(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T952f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T952f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T951f10(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T951f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T950f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T950f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T950f11(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T169f17(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T169f28(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T169f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T962f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T961f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T956f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T954f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T953f12(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T952f17(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T951f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T950f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T169f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T962f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T962f22(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T961f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T961f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T52f405(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T889c827(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T52f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f405(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T956f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T954f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T954f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T953f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T953f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T952f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T952f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T951f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T950f13(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T169f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T169f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T962f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T961f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T956f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T954f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T953f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T952f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T951f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T950f14(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T169f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T962f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T961f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T956f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T954f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T953f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T952f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T951f15(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T950f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T169f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T962f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T962f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T52f414(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T889c836(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f414(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T961f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T961f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T52f407(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T889c829(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T52f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f407(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T52f406(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T889c828(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T52f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f406(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T956f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T954f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T953f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T952f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T952f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T951f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T950f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T169f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T169f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T962f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T962f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T52f415(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T889c837(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f415(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T961f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T961f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T52f408(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T889c830(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f408(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T956f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T954f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T953f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T952f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T952f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T951f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T950f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T950f21(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T52f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T889c844(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f423(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T52f422(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T889c843(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f422(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T950f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T950f23(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T550f36(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T550f100(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T550f102(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T169f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T169f32(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T169f34(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T962f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T962f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T962f30(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T52f421(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T889c842(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f421(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T961f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T961f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T961f25(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T52f409(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T889c831(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f409(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T956f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T954f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T953f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T952f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T951f18(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T951f21(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T686f29(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1203f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1203f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1203f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1203f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].put */
extern void T1307f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1307f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_put */
extern void T1307f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1307f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1307f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1307f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1307f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search_position */
extern void T1307f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1307f11(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T686f60(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1307f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].resize */
extern void T1307f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1307f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1307f50(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1376f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1375f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1375f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1375f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1375f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1375f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1307f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1307f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1267f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1203f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1203f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1203f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1307f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1307f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found */
extern T1 T1307f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search */
extern void T1307f60(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T950f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T950f22(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T52f425(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T889c846(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f425(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T52f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T889c845(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T686f68(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T686f67(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T169f25(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T169f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T962f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T961f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T956f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T954f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T953f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T952f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T951f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T950f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T169f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T169f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T957f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T957f153(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T957f222(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T692f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T52f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T889c764(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T52f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T957f221(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T52f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T889c763(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T52f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T692f16(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T957f217(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T955f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T59f358(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T59f374(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T59f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T59f398(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T59f455(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T59f394(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T56f668(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T56f680(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T957f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T957f155(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T52f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T889c765(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T52f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T957f224(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T698f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T957f223(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T52f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T889c796(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T52f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T52f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T889c795(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T52f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T889c794(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T52f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T52f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T889c793(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T957f256(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T52f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T889c792(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T957f255(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T957f254(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T955f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T59f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T59f375(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T59f401(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T59f459(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T59f400(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T59f458(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T59f457(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T59f456(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T56f669(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T56f681(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T957f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T957f156(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T957f225(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T52f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T889c766(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T52f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T245f20(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T58f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge247os1587;
extern T0* ge247ov1587;
extern T0* T957f31(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T955f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T59f360(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T59f376(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T59f402(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T59f460(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T59f192(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T56f670(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T56f682(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T957f98(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T957f157(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T716f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T955f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T955f85(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T719f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T955f92(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T59f361(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T59f377(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T56f671(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T56f683(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T957f99(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T957f158(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T52f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T889c768(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T52f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T729f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T729f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T723f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T52f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T889c767(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T52f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T955f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T955f86(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T955f89(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T59f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T59f378(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T56f672(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T56f684(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T56f288(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T957f100(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T957f159(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T957f227(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T52f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T889c797(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T52f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T957f226(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T672f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T672f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T955f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T955f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T59f363(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T59f379(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f404(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f404p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f403(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f403p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T56f673(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T56f685(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T957f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T957f160(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T955f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T59f364(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f380(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f380p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T56f674(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T56f686(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T957f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T957f161(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T708f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T708f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T955f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T59f365(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f381(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f381p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T56f675(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T56f687(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T957f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T957f162(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T957f228(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T957f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T52f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T889c802(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T52f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T889c801(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T714f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T714f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T711f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T183f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T710f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T710f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T52f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T889c800(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T714f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T710f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T52f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T889c799(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T52f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T52f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T889c798(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T711f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T955f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T59f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T59f382(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T59f405(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T59f462(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T59f506(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T714f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T710f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T56f676(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T56f688(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T56f692(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T957f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T957f163(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T955f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T59f367(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T59f383(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T56f677(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T56f689(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T957f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T957f165(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T957f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T52f347(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T889c769(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f347(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T955f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T59f368(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T59f384(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T59f406(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T56f678(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T56f690(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T957f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T957f166(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T957f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T52f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T889c772(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T754f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T955f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T59f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T59f385(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T59f409(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T56f679(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T56f691(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T962f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T962f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T52f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T889c838(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T918f5(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T52f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T889c841(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T52f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T52f417(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T889c840(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f417(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1211f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1211f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1211f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1211f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].put */
extern void T1313f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1313f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_put */
extern void T1313f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_put */
extern void T1313f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1313f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1313f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1313f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search_position */
extern void T1313f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1313f11(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T537f63(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T529f61(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1313f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].resize */
extern void T1313f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1313f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1313f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1313f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_resize */
extern void T1313f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1270f18(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1211f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1211f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found_item */
extern T6 T1313f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1313f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found */
extern T1 T1313f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search */
extern void T1313f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T52f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T889c839(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T961f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T956f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T954f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T953f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T952f16(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T951f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T950f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T169f20(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T957f277(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T957f281(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T955f80(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T59f516(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T59f551(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T56f696(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T56f701(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T56f702(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T957f278(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T957f282(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T955f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T59f517(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T59f552(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T56f695(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T56f700(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T957f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T957f283(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T957f285(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T184f6(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T184f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T955f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T59f578(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T59f581(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T59f584(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T56f693(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T56f698(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T56f703(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T957f280(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T957f284(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T52f426(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T889c847(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T461f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T52f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f426(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T955f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T59f579(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T59f582(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T56f694(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T56f699(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T957f286(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T957f287(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T955f79(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T59f580(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T59f583(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T56f697(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T903f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T304f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1251f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1367f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1366f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1366f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1366f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1366f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1366f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1366c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1367f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1409c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge925os15140;
extern T0* ge925ov15140;
extern T0* T1251f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1367c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1251f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1251f1(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1251f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1251c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T223f15(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.reset */
extern void T646f62(T0* C);
/* ET_INFIX_NAME.reset */
extern void T645f91(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T644f62(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T643f63(T0* C);
/* ET_IDENTIFIER.reset */
extern void T119f107(T0* C);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T646f63(T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T645f92(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T644f63(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T643f64(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T119f96(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T918f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T688f60(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T686f65(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T550f99(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T549f98(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T537f70(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T529f66(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T289f90(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T160f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T161f96(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T397f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T159f94(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T55f162(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T918f57(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T688f61(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T686f64(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T550f98(T0* C);
/* ET_BIT_N.reset */
extern void T549f99(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T537f71(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T538f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T529f67(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T289f91(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T918f58(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T688f62(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T686f66(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T550f101(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T549f100(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T537f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T529f68(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T289f92(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T639f80(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T638f79(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T303f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T298f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T639f81(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T639f95(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T638f80(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T638f94(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T638f94p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T303f76(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T303f91(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T298f80(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T298f94(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T298f94p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T639f85(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T638f84(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T303f80(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T298f84(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T639f86(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T638f85(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T303f81(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T298f85(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T633f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T632f81(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T630f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T227f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T226f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T224f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T163f82(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T633f78(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T633f78p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T633f93(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T632f82(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T632f82p1(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T632f96(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T632f96p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T630f82(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T630f82p1(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T630f96(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T630f96p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T227f70(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T227f70p1(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T227f80(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T226f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T226f72p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T226f84(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T224f72(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T224f72p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T224f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T163f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T163f83p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T163f93(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T633f82(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T632f86(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T630f86(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T227f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T226f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T224f85(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T163f95(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T633f83(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T632f87(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T630f87(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T227f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T226f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T224f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T163f94(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T161f98(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T159f96(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T55f182(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T161f97(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T159f95(T0* C);
/* ET_CLASS.reset_type */
extern void T55f207(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T222f39(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T221f39(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T217f38(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T197f38(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T144f35(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T222f37(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T221f37(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T217f36(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T197f36(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T144f34(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T222f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T221f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T217f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T197f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T144f36(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T222f42(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T221f42(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T217f41(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T197f41(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T144f38(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T222f36(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T221f36(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T217f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T197f35(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T144f33(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T222f43(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T221f43(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T217f42(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T197f42(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T144f39(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T222f44(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T221f44(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T217f43(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T197f43(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T144f40(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T315f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T312f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T312f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T312f12(T0* C);
/* DS_LINKED_QUEUE [STRING].make */
extern T0* T973c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T971c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1214c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].new_cursor */
extern T0* T1214f1(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1215c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T90f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1235c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1363c2(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1235f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1235f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1364c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1235f35(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1235f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1235f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1235f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1235f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1235f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1235f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1365f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1408c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1362c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1365c3(void);
/* XM_DOCUMENT.make */
extern T0* T84c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T84f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T84f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T84f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1330c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T84f6(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T84f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T85f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T260f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T84f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T84f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T84f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T84f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T84f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T84f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T84f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T84f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T84f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T84f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T84f5(T0* C);
/* XM_DOCUMENT.list_make */
extern void T84f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T85c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T85f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1223os9595;
extern T0* ge1223ov9595;
extern T0* T84f3(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1239c8(void);
/* XM_NAMESPACE.make */
extern void T1239f7(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1239c7(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T315f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T312f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T90f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T90f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T86f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T906f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1260f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1260c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T906f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T907c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T90f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1236c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T85f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T85f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T85f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T85f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1236c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T315f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T312f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T90f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1237c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1237c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T315f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T312f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T90f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1238c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T315f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T312f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T971f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].force_last */
extern void T1214f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].put_right */
extern void T1314f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].attach_left */
extern void T1314f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1314c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].is_empty */
extern T1 T1214f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T971f8(T0* C);
/* DS_HASH_TABLE [STRING, STRING].set_equality_tester */
extern void T40f61(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T971f9(T0* C);
/* DS_HASH_TABLE [STRING, STRING].make_map_default */
extern T0* T40c60(void);
/* DS_HASH_TABLE [STRING, STRING].default_capacity */
extern T6 T40f36(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T90f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T85c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T85c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T84f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T84f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T90f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1235f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1235f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1235f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1235f13(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1235f11(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1239f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1235f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1235f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1235f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1235f45(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1365f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1362f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1362f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1362f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1362f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1362f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1235f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1235f5(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1235f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1235f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1235f10(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1235f36(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1235f33(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1363f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1235f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1239f6(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1235f2(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1235f1(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T315f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T312f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T971f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_last */
extern void T1214f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].set_last_cell */
extern void T1214f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].forget_right */
extern void T1314f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_last_cursors_after */
extern void T1214f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_next_cursor */
extern void T1215f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_after */
extern void T1215f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].wipe_out */
extern void T1214f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_all_cursors_after */
extern void T1214f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T971f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1197os24304;
extern T0* ge1197ov24304;
extern T0* T971f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T312f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T971f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].back */
extern void T1215f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_back */
extern void T1214f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].add_traversing_cursor */
extern void T1214f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_traversing_cursor */
extern void T1214f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set */
extern void T1215f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].go_before */
extern void T1215f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_go_before */
extern void T1214f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_before */
extern void T1215f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_off */
extern T1 T1214f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].item */
extern T0* T1215f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].finish */
extern void T1215f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_finish */
extern void T1214f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1197os24305;
extern T0* ge1197ov24305;
extern T0* T971f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T312f4(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T90f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T85f2(T0* C);
/* XM_DOCUMENT.process */
extern void T84f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1331f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T85f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T84f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T315f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T312f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T971f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].force_new */
extern void T40f62(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].last */
extern T0* T1214f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T971f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T312f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING].force */
extern void T973f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING].is_empty */
extern T1 T973f2(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T971f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T312f8(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T312f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T312f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1164os17903;
extern T0* ge1164ov17903;
extern T0* T312f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T90f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T259c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T315f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T312f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T90f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T315f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T312f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T312f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T312f6(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T312f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T312f39(T0* C);
/* DS_LINKED_QUEUE [STRING].remove */
extern void T973f8(T0* C);
/* DS_LINKED_QUEUE [STRING].wipe_out */
extern void T973f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T312f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1164os17902;
extern T0* ge1164ov17902;
extern T0* T312f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1164os17910;
extern T0* ge1164ov17910;
extern T0* T312f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1164os17909;
extern T0* ge1164ov17909;
extern T0* T312f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T312f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1164os17904;
extern T0* ge1164ov17904;
extern T0* T312f22(T0* C);
/* DS_LINKED_QUEUE [STRING].item */
extern T0* T973f1(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T312f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T971f1(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T90f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T315f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T312f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T90f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T315f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T312f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T90f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T89f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T312f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T90f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T89f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T196f25(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T171f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T170f8(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T196f27(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T171f6(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T170f5(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T196f23(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T196f31(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T196f34(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T171f7(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T171f2(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T170f6(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T196f24(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T196f32(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T196f35(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T171f5(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T170f4(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T196f22(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T171f8(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T170f7(T0* C);
/* KL_STDIN_FILE.read_character */
extern void T913f19(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T913f21(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T913f14(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T913f6(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T913f11(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T910f31(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].remove */
extern void T1175f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].wipe_out */
extern void T1175f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T910f33(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T910f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T910f36(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER].force */
extern void T1175f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER].put_right */
extern void T1275f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].is_empty */
extern T1 T1175f4(T0* C);
/* DS_LINKABLE [CHARACTER].make */
extern T0* T1275c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T910f23(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1262os23753;
extern T0* ge1262ov23753;
extern T0* T910f26(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1176f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1176f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1176f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1176f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1176f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge331os2771;
extern T0* ge331ov2771;
extern T0* T910f21(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1176c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T910f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T910f24(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T910f34(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1346f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T910f32(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T908f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T908f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1176f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1176f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* ET_KEYWORD.position */
extern T0* T166f9(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1245f27(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1204f25(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1245f24(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1204f22(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1262f4(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1245f25(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1204f23(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1262f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1263f9(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1245f26(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1204f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T652f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T644f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T445f35(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T652f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T646f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T644f8(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1245f11(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1204f10(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T639f52(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T638f50(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T633f53(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T632f54(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T630f54(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T303f48(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T298f50(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T227f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T226f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T224f51(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T163f57(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1245f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T639f54(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T638f52(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T633f55(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T632f56(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T630f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T303f50(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T298f52(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T227f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T226f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T224f53(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T163f59(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1245f14(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1204f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T639f55(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T638f53(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T633f56(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T632f57(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T630f57(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T303f51(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T298f53(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T227f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T226f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T224f54(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T163f60(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1204f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T639f56(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T638f54(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T633f57(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T632f58(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T630f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T303f52(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T298f54(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T227f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T226f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T224f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T163f61(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1245f16(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1204f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T639f57(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T638f55(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T633f58(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T632f59(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T630f59(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T303f53(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T298f55(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T227f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T226f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T224f56(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T163f62(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T639f50(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T638f48(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T633f51(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T632f52(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T630f52(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T303f46(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T298f48(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T227f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T226f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T224f49(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T163f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T639f58(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T638f56(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T633f59(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T632f60(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T630f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T303f54(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T298f56(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T227f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T226f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T224f57(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T163f63(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1245f12(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1204f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T639f53(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T638f51(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T633f54(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T632f55(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T630f55(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T303f49(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T298f51(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T227f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T226f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T224f52(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T163f58(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T287f4(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T254f19(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T123f23(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T287f3(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T254f20(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T123f24(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T287f6(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T254f21(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T123f25(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T287f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T287f11(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T254f15(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T254f26(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T254f35(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T254f34(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T123f10(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T123f14(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T123f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T123f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T123f11(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T287f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T287f10(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T254f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T254f30(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T123f27(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T123f33(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T287f9(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T254f23(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T123f28(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T816f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T806f15(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T805f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T804f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T803f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T802f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T800f18(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T790f8(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T783f11(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T781f10(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T780f7(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T776f11(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T775f7(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T774f6(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T773f7(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T769f7(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T767f7(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T766f7(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T765f7(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T764f7(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T759f8(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T758f9(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T743f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T695f7(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T524f10(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T521f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T492f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T491f17(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T490f18(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T489f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T487f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T486f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T485f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T484f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T483f29(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T482f19(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T481f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T480f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T479f18(T0* C);
/* ET_VOID.assertion */
extern T0* T467f12(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T431f16(T0* C);
/* ET_RESULT.assertion */
extern T0* T204f12(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T186f8(T0* C);
/* ET_CURRENT.assertion */
extern T0* T182f13(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T119f73(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T816f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1349f12(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1255f11(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T814f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T806f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T805f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T804f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T803f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T802f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T800f16(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T790f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T783f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T781f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T780f6(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T776f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T775f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T774f5(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T773f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T769f6(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T767f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T766f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T765f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T764f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T759f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T758f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T743f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T695f6(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T524f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T521f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T492f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T491f10(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T490f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T489f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T487f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T486f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T485f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T484f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T483f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T482f12(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T481f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T480f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T479f11(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T476f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T467f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T431f9(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T204f11(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T186f7(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T182f12(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T119f72(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T806f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T805f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T804f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T803f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T802f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T800f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T806f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T803f23(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T743f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T741f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T492f9(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T491f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T485f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T484f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T483f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T479f10(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T186f6(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T119f71(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T743f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T492f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T491f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T485f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T484f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T483f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T479f27(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T186f18(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T119f87(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T743f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T492f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T491f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T485f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T484f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T483f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T479f28(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T186f19(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T119f88(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T743f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T492f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T491f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T485f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T484f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T483f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T479f29(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T186f20(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T119f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T537f62(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T538f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T529f60(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T55f155(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1349f15(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T774f12(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T695f11(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T186f14(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T928f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T918f29(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T688f30(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T686f25(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T684f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T550f27(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T549f27(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T537f45(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T529f41(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T289f17(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T161f21(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T159f19(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T55f82(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T652f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T648f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T652f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T648f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T652f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T648f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T652f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T648f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T648f38(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T652f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T648f6(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T646f39(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T645f19(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T644f21(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T643f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T652f38(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T648f57(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T652f39(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T652f41(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T648f58(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T648f60(T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T652f40(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T75f3(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T652f42(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T648f59(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T646f57(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T646f43(T0* C);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T645f68(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T644f57(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T644f25(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T643f54(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T482f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T481f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T480f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T426f8(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T420f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T492f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1259c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1259f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T491f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T490f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T489f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T487f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T486f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T485f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T484f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T483f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T482f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T481f35(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T480f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T479f34(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T473f80(T0* C);
/* ET_VOID.last_position */
extern T0* T467f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T431f27(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T426f16(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T423f17(T0* C);
/* ET_RESULT.last_position */
extern T0* T204f23(T0* C);
/* ET_CURRENT.last_position */
extern T0* T182f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T166f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T119f85(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T605f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T295f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T603f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T295f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T916f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T557f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T556f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T545f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T916f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T545f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T916f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T688f51(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T686f54(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T557f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T158f894(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T556f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T158f893(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T550f83(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T549f82(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T545f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T916f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T158f891(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T543f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T158f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T543f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T543f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T688f11(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T686f4(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T550f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T549f10(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T545f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T158f890(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T485f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T484f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T483f8(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T365f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T325c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T363f1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T359f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T324f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T365f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T363f4(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T359f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T324f4(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T365f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T910f3(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T910f2(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T363f5(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T359f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T324f5(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T365f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T363f6(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T359f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T324f6(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T650f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T75f2(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T650f5(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T646f58(T0* C, T0* a1);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T645f69(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T645f23(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T644f58(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T643f55(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T643f20(T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T119f90(T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T650f3(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T646f10(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T645f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T644f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T643f7(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T119f44(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T914f1(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T914f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T914f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T914f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T914f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T914f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T914f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T914f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T914f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T485f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T485f47(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T485f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T484f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T484f48(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T484f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T483f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T483f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T483f17(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T473f19(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T473f86(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T473f41(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T464f17(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T464f75(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T464f21(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T426f12(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T426f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T426f13(T0* C);
/* ET_CURRENT.to_text */
extern T0* T182f17(T0* C);
/* ET_CURRENT.append_to_string */
extern void T182f32(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T182f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T166f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T166f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T166f19(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T119f48(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T119f108(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T492f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T491f32(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T490f28(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T489f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T487f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T486f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T485f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T484f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T483f20(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T482f25(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T481f29(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T480f24(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T479f33(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T473f9(T0* C);
/* ET_VOID.is_null */
extern T1 T467f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T464f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T451f10(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T445f45(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T431f26(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T426f9(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T423f16(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T420f12(T0* C);
/* ET_RESULT.is_null */
extern T1 T204f22(T0* C);
/* ET_CURRENT.is_null */
extern T1 T182f20(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T166f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T119f40(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1259f1(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T492f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T491f30(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T490f26(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T489f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T487f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T486f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T485f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T484f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T483f18(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T482f23(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T481f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T480f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T479f31(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T473f10(T0* C);
/* ET_VOID.line */
extern T6 T467f20(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T464f18(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T461f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T451f11(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T445f43(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T431f24(T0* C);
/* ET_SYMBOL.line */
extern T6 T426f10(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T423f14(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T420f10(T0* C);
/* ET_RESULT.line */
extern T6 T204f19(T0* C);
/* ET_CURRENT.line */
extern T6 T182f18(T0* C);
/* ET_KEYWORD.line */
extern T6 T166f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T119f35(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1259f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T492f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T491f31(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T490f27(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T489f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T487f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T486f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T485f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T484f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T483f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T482f24(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T481f28(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T480f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T479f32(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T473f42(T0* C);
/* ET_VOID.column */
extern T6 T467f21(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T464f19(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T461f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T451f45(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T445f44(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T431f25(T0* C);
/* ET_SYMBOL.column */
extern T6 T426f14(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T423f15(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T420f11(T0* C);
/* ET_RESULT.column */
extern T6 T204f20(T0* C);
/* ET_CURRENT.column */
extern T6 T182f19(T0* C);
/* ET_KEYWORD.column */
extern T6 T166f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T119f36(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge528os11596;
extern T0* ge528ov11596;
extern T0* T504f20(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T504f18(T0* C);
/* ET_INVARIANTS.type */
extern T0* T504f19(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T504f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T639f47(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T638f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T633f48(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T632f50(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T630f50(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T504f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T303f43(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T298f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T227f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T226f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T224f46(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T163f52(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T504f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T639f48(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T633f49(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T504f16(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T303f44(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T227f45(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T226f47(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T224f47(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T163f53(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T504f13(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1349f7(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1256f9(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1255f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T806f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T805f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T804f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T803f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T802f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T800f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T790f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T783f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T781f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T780f5(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T776f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T775f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T774f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T773f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T769f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T767f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T766f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T765f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T764f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T759f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T758f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T743f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T695f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T524f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T521f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T492f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T491f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T490f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T489f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T487f9(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T486f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T485f13(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T484f13(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T483f13(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T482f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T481f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T480f9(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T479f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T467f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T431f8(T0* C);
/* ET_RESULT.expression_item */
extern T0* T204f10(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T186f5(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T182f10(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T119f43(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1349f14(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1255f13(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T806f20(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T805f21(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T804f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T803f21(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T802f22(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T800f22(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T790f11(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T783f14(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T781f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T780f10(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T776f15(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T775f10(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T774f10(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T773f10(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T769f10(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T767f10(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T766f10(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T765f10(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T764f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T758f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T743f14(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T695f10(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T524f15(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T521f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T492f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T491f22(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T490f21(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T489f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T487f23(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T486f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T485f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T484f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T483f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T482f27(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T481f31(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T480f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T479f23(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T467f15(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T431f19(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T186f13(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1129f3(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T759f11(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T204f15(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T182f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T119f78(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1129f4(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T799f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T492f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T491f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T487f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T486f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T485f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T484f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T483f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T482f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T481f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T480f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T479f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T431f10(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T490f13(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T489f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T487f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T486f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T485f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T484f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T483f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T482f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T481f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T480f13(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T431f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T492f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T491f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T490f14(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T489f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T487f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T486f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T482f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T481f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T480f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T479f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T431f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T492f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T491f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T490f15(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T489f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T485f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T484f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T483f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T482f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T481f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T480f15(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T479f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T431f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T492f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T491f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T490f16(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T489f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T487f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T486f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T485f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T484f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T483f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T479f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T431f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T492f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T491f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T490f17(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T489f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T487f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T486f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T485f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T484f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T483f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T482f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T481f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T480f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T479f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T806f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T805f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T804f20(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T776f14(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T776f18(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T806f26(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T806f28(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T805f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T805f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T804f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T804f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T803f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T803f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T802f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T802f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T800f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T800f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T776f22(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T772f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T771f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T652f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T648f7(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T646f40(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T645f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T644f22(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T643f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T464f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T451f19(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T445f18(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T119f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T772f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T771f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T652f19(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T648f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T646f17(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T645f43(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T644f33(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T643f30(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T473f21(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T464f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T451f20(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T445f19(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T119f54(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T772f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T771f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T652f20(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T648f42(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T646f18(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T645f44(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T644f34(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T643f31(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T473f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T464f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T451f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T445f20(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T119f55(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T772f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T771f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T652f21(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T648f43(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T646f19(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T645f45(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T644f35(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T643f32(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T473f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T464f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T451f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T445f21(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T119f56(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T772f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T771f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T652f22(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T648f44(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T646f20(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T645f46(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T644f36(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T643f33(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T473f24(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T464f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T451f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T445f22(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T119f57(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T772f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T771f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T652f24(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T648f46(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T646f22(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T645f48(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T644f38(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T643f35(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T473f25(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T464f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T451f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T445f23(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T119f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T772f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T771f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T652f25(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T648f47(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T646f23(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T645f49(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T644f39(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T643f36(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T473f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T464f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T451f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T445f24(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T119f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T772f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T771f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T652f26(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T648f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T646f24(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T645f50(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T644f40(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T643f37(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T473f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T464f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T451f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T445f25(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T119f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T772f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T771f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T652f27(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T648f48(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T646f25(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T645f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T644f41(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T643f38(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T473f28(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T464f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T451f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T445f26(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T119f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T772f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T771f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T652f30(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T648f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T646f28(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T645f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T644f44(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T643f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T473f29(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T464f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T451f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T445f27(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T119f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T772f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T771f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T652f31(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T648f51(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T646f29(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T645f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T644f45(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T643f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T473f30(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T464f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T451f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T445f28(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T119f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T772f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T771f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T652f32(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T648f52(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T646f30(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T645f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T644f46(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T643f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T473f31(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T464f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T451f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T445f29(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T119f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T772f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T771f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T652f33(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T648f53(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T646f31(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T645f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T644f47(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T643f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T473f32(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T464f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T451f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T445f30(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T119f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T772f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T771f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T652f34(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T648f54(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T646f48(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T645f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T644f48(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T643f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T473f33(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T464f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T451f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T445f31(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T119f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T772f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T771f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T652f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T648f37(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T646f11(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T645f8(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T644f18(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T643f24(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T473f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T464f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T451f33(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T445f32(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T119f49(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T772f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T771f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T652f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T648f36(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T646f12(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T645f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T644f19(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T643f25(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T473f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T464f37(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T451f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T445f33(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T119f50(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T772f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T771f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T652f37(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T648f55(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T646f13(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T645f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T644f20(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T643f26(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T473f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T464f38(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T451f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T445f34(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T119f51(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T772f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T652f18(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T648f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T646f16(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T645f42(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T644f32(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T643f29(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T473f12(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T464f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T451f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T445f11(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T119f53(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T772f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T771f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T652f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T648f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T646f15(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T645f41(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T644f31(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T643f28(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T473f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T464f13(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T451f15(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T445f14(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T119f52(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T771f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T652f29(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T648f50(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T646f27(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T645f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T644f43(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T643f40(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T473f13(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T464f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T451f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T445f12(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T119f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T772f9(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T771f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T652f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T648f49(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T646f26(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T645f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T644f42(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T643f39(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T473f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T464f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T451f16(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T445f15(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T119f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T772f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T771f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T652f23(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T648f45(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T646f21(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T645f47(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T644f37(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T643f34(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T473f14(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T464f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T451f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T445f13(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T119f58(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T646f54(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T645f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T644f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T643f51(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T473f37(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T464f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T451f36(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T445f36(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T423f10(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T119f82(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T646f55(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T645f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T644f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T643f52(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T473f38(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T464f40(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T451f37(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T445f37(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T423f11(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T119f83(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T772f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T771f10(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T473f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T464f16(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T451f18(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T445f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T772f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T771f30(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T473f8(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T464f8(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T451f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T445f42(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T423f12(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T772f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T772f29(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T771f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T771f29(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T473f39(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T473f40(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T464f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T464f42(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T451f38(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T451f39(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T445f38(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T445f39(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T423f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T692f9(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T184f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1349f8(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T776f8(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T186f10(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T184f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1349f9(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T774f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T692f8(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1358f3(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1349f6(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1256f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1255f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T806f24(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T805f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T804f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T803f25(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T802f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T800f25(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T795f9(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T790f13(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T785f9(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T783f17(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T781f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T780f12(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T776f19(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T775f12(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T774f13(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T773f12(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T769f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T767f12(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T766f12(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T765f12(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T764f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T759f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T758f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T743f17(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T695f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T692f12(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T524f17(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T521f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T492f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T491f24(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T490f23(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T489f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T487f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T486f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T485f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T484f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T483f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T482f29(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T481f33(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T480f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T479f25(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T467f17(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T431f21(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T204f18(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T186f16(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T183f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T182f23(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T119f84(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T692f10(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1358f2(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1349f5(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1256f6(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1255f5(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T806f17(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T805f18(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T804f18(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T803f19(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T802f20(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T800f20(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T795f7(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T790f10(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T785f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T783f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T781f13(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T780f9(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T776f13(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T775f9(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T774f9(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T773f9(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T769f9(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T767f9(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T766f9(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T765f9(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T764f9(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T759f10(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T758f12(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T743f13(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T695f9(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T692f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T524f13(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T521f10(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T492f19(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T491f19(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T490f20(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T489f20(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T487f22(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T486f22(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T485f30(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T484f32(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T483f32(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T482f21(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T481f25(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T480f20(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T479f20(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T467f14(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T431f18(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T204f14(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T186f12(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T183f3(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T182f15(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T119f77(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T646f9(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T645f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T644f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T643f6(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T119f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1349f11(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1256f1(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1255f10(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T806f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T805f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T804f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T803f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T802f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T800f23(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T790f12(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T783f15(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T781f16(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T780f11(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T776f16(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T775f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T774f11(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T773f11(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T769f11(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T767f11(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T766f11(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T765f11(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T764f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T759f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T758f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T743f16(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T695f12(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T524f16(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T521f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T492f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T491f23(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T490f22(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T489f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T487f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T486f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T485f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T484f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T483f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T482f28(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T481f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T480f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T479f24(T0* C);
/* ET_VOID.is_current */
extern T1 T467f16(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T431f20(T0* C);
/* ET_RESULT.is_current */
extern T1 T204f16(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T186f15(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T119f81(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1349f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1256f8(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1255f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T806f25(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T805f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T804f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T803f26(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T802f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T800f26(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T790f14(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T783f18(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T783f20(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T781f18(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T781f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T780f13(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T776f20(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T776f21(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T775f13(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T774f14(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T773f13(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T769f13(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T767f13(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T766f13(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T765f13(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T764f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T759f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T758f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T743f18(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T695f14(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T524f18(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T524f20(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T521f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T492f25(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T491f25(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T490f24(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T489f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T487f26(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T486f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T485f7(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T484f7(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T483f7(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T482f11(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T481f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T480f10(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T479f26(T0* C);
/* ET_VOID.position */
extern T0* T467f18(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T431f22(T0* C);
/* ET_RESULT.position */
extern T0* T204f17(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T186f17(T0* C);
/* ET_CURRENT.position */
extern T0* T182f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1349f13(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1256f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1255f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T806f27(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T795f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T805f27(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T804f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T803f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T802f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T800f28(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T790f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T783f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T781f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T780f14(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T776f23(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T775f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T774f15(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T773f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T769f14(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T767f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T766f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T765f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T764f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T759f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T758f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T743f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T695f15(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T473f79(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T785f10(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T524f19(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T521f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T492f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T491f29(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T490f25(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T489f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T487f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T486f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T485f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T484f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T483f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T482f30(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T481f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T480f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T479f30(T0* C);
/* ET_VOID.last_leaf */
extern T0* T467f19(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T431f23(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T204f21(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T186f21(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T182f25(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T639f59(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T303f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T298f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T639f63(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T638f61(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T633f64(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T632f65(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T630f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T303f60(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T298f61(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T227f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T226f62(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T224f62(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T163f67(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T639f64(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T638f62(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T633f65(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T632f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T630f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T303f61(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T298f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T227f61(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T226f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T224f63(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T163f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T639f68(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T303f87(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T303f86(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T303f85(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T638f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T633f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T633f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T633f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T633f87(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T632f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T630f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T303f65(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T298f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T227f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T227f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T226f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T226f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T224f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T224f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T163f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T639f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T639f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T639f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T639f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T638f67(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T638f90(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T638f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T638f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T633f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T633f86(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T632f68(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T632f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T632f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T632f90(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T630f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T630f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T630f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T630f90(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T303f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T303f84(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T298f67(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T298f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T298f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T298f88(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T227f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T227f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T227f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T227f74(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T226f65(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T226f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T226f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T226f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T226f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T226f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T224f65(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T224f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T224f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T224f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T224f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T163f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T163f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T163f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T163f87(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T639f67(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T638f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T303f64(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T298f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T639f66(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T638f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T303f63(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T298f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T639f65(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T638f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T303f62(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T298f63(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T227f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T226f36(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T224f36(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T227f35(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T226f37(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T224f37(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T639f21(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T638f20(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T303f7(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T298f6(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T639f23(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T638f22(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T303f3(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T298f2(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T639f22(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T638f21(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T303f4(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T298f3(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T639f24(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T638f23(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T303f5(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T298f4(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T639f45(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T638f57(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T633f60(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T632f61(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T630f61(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T303f55(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T298f57(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T227f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T226f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T224f58(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T163f50(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T639f18(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T638f26(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T303f24(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T298f26(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T928f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T918f10(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T688f10(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T686f7(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T684f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T550f9(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T549f12(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T537f36(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T529f34(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T289f6(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T161f13(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T159f11(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T55f76(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T928f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T918f49(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T688f52(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T686f55(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T684f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T550f84(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T549f83(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T537f58(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T529f56(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T289f76(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T161f81(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T159f80(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T55f147(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T928f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T918f1(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T688f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T686f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T684f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T550f8(T0* C);
/* ET_BIT_N.type */
extern T0* T549f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T537f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T529f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T289f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T161f12(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T159f4(T0* C);
/* ET_CLASS.type */
extern T0* T55f35(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T928f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T918f54(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T688f57(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T686f61(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T684f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T550f95(T0* C);
/* ET_BIT_N.label */
extern T0* T549f94(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T537f64(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T529f62(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T289f87(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T161f91(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T159f92(T0* C);
/* ET_CLASS.label */
extern T0* T55f160(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_subset */
extern T1 T903f4(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_subset */
extern T1 T304f3(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_subset */
extern T1 T223f5(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_subset */
extern T1 T222f30(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_subset */
extern T1 T221f31(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.is_subset */
extern T1 T217f30(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.is_subset */
extern T1 T197f30(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.is_subset */
extern T1 T144f28(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T903f6(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T304f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T223f7(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T222f13(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T221f13(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T217f13(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T197f13(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T144f20(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T903f10(T0* C);
/* ET_DYNAMIC_TYPE_LIST.special_type */
extern T0* T173f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T304f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T223f10(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T222f32(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T221f33(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T217f32(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T197f32(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T144f30(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T903f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T304f9(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T223f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T903f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has_expanded */
extern T1 T173f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T304f4(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T223f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T222f12(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T221f12(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T217f12(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T197f12(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T144f19(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T903f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T304f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T223f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T222f14(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T221f14(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T217f14(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T197f14(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T144f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T161f16(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T166f14(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T159f15(T0* C);
/* ET_CLASS.is_separate */
extern T1 T55f83(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T55f84(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T644f16(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T643f14(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T119f47(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T646f36(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T645f16(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T119f46(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T646f50(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T645f61(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T644f50(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T643f47(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T119f74(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T646f52(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T645f63(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T644f52(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T643f49(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T119f75(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T645f11(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T643f8(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T646f49(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T645f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T644f49(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T643f46(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T119f17(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T646f51(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T645f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T644f51(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T643f48(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T119f19(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T646f53(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T645f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T644f53(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T643f50(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T119f23(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T646f34(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T645f14(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T644f13(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T643f11(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T119f33(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T646f32(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T645f12(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T644f11(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T643f9(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T119f37(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T646f33(T0* C, T0* a1);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T645f13(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T644f12(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T643f10(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T119f42(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T646f56(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T645f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T644f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T643f53(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T119f86(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T646f59(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T645f72(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T644f59(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T643f58(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T119f92(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T646f35(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T645f15(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T644f14(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T643f12(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T245f29(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T245f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T245f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T245f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T245f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T245f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T245f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T245f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T245f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T245f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T550f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T549f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T289f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T161f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T159f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T55f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T550f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T549f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T289f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T161f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T159f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T55f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T245f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T245f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T245f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T550f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T549f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T289f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T161f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T159f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T55f137(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T245f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T245f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T550f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T549f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T289f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T161f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T159f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T55f140(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T245f12(T0* C, T0* a1);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T550f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T549f91(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T289f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T161f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T159f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T55f156(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T245f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T550f93(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T549f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T289f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T161f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T159f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T55f157(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T245f7(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T245f8(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T550f32(T0* C);
/* ET_BIT_N.root_context */
extern T0* T549f31(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T289f26(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T161f31(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T159f28(T0* C);
/* ET_CLASS.root_context */
extern T0* T55f93(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T245f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T918f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T688f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T686f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T550f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T549f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T537f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T529f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T289f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T161f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T397f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T160f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T159f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T55f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T918f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T688f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T686f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T550f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T549f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T537f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T529f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T289f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T161f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T159f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T55f87(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T918f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T688f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T686f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T550f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T549f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T537f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T529f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T289f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T161f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T159f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T55f96(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T918f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T688f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T686f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T550f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T549f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T537f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T529f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T289f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T161f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T159f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T55f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T918f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T688f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T686f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T550f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T549f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T537f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T529f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T289f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T161f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T159f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T55f101(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T918f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T688f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T686f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T550f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T549f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T537f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T529f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T289f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T161f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T159f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T55f95(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T918f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T688f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T686f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T550f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T549f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T537f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T529f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T289f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T918f14(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T688f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T686f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T550f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T549f20(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T537f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T529f27(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T289f13(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T160f15(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T161f22(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T397f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T159f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T55f85(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T918f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T688f16(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T55f105(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T686f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T550f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T549f21(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T537f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T529f28(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T289f14(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T160f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T161f23(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T397f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T159f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T55f86(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T918f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T688f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T686f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T550f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T549f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T537f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T529f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T289f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T161f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T159f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T55f94(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T918f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T688f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T686f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T550f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T549f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T537f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T529f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T289f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T161f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T397f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T160f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T159f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T55f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T918f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T688f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T686f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T550f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T549f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T537f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T529f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T289f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T161f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T159f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T55f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T918f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T688f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T686f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T550f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T549f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T537f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T529f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T289f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T161f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T159f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T55f97(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T918f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T55f141(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T688f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T686f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T537f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T529f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T918f35(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T688f37(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T686f41(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T550f37(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T549f35(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T537f55(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T529f53(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T289f53(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T161f55(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T159f49(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T55f116(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T918f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T688f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T686f42(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T550f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T537f52(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T529f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T918f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T688f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T686f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T550f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T549f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T537f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T529f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T289f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T161f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T159f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T55f131(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T918f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T688f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T686f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T550f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T549f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T537f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T529f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T289f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T161f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T159f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T55f130(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T918f31(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T688f34(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T688f47(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T686f33(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T550f50(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T550f70(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_named_type */
extern T0* T549f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_base_type */
extern T0* T549f67(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T537f40(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T529f38(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T289f38(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T289f55(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_named_type */
extern T0* T161f46(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_base_type */
extern T0* T161f57(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T159f41(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T159f51(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type */
extern T0* T55f114(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type */
extern T0* T55f118(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T918f34(T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T686f40(T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T550f62(T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T549f61(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T537f41(T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T529f39(T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T289f52(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_like_current */
extern T1 T161f61(T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T159f60(T0* C);
/* ET_CLASS.is_like_current */
extern T1 T55f123(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T918f26(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T688f27(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T686f24(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T550f26(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T549f26(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T537f37(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T529f35(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T289f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T161f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T159f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T55f81(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T918f11(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T688f12(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T686f12(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T537f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T529f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T918f30(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T688f33(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T686f32(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T550f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T549f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T537f25(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T529f23(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T289f37(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T161f45(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T159f40(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T55f113(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T918f33(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T688f32(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T686f31(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T550f48(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T549f47(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T537f50(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T529f48(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T289f45(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T160f17(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T160f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T918f42(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T688f49(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T686f52(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T550f67(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T549f66(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T537f27(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T529f25(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T289f61(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T161f66(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T159f65(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T55f128(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T918f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T688f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T686f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T537f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T529f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T918f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T918f46(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T688f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T686f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T550f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T550f72(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T549f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T549f70(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T537f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T537f46(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T529f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T529f44(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T289f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T289f80(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T161f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T161f58(T0* C);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T159f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T159f54(T0* C);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T55f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_6_latest */
extern T0* T55f144(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T918f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T688f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T686f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T550f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T549f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T537f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T529f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T289f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T161f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge247os1591;
extern T0* ge247ov1591;
extern T0* T161f59(T0* C);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T397f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T160f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T159f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T159f55(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T55f122(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T55f145(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T918f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T688f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T686f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T550f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T549f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T537f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T529f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T289f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T160f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T161f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T159f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T55f124(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T918f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T688f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T686f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T550f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T549f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T537f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T529f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T289f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T161f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T159f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T55f129(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T918f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T688f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T686f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T550f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T549f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T537f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T529f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T289f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T161f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T159f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T55f78(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T918f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T688f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T686f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T550f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T549f15(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T537f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T529f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T289f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T160f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T161f2(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T397f15(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T159f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T55f34(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T918f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T688f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T686f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T550f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T549f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T537f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T529f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T289f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T161f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T159f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T55f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T918f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T688f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T686f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T550f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T549f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T537f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T529f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T289f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T161f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T159f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T55f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T918f47(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T688f48(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T686f51(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T550f74(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T549f73(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T537f56(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T529f54(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T289f65(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T161f70(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T159f69(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T55f142(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T918f50(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T688f53(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T686f56(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T550f85(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T549f84(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T537f59(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T529f57(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T289f74(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T161f79(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T159f78(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T918f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T688f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T686f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T550f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T537f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T529f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T918f53(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T688f56(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T686f59(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T550f90(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T549f89(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T289f83(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T160f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T161f86(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T397f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T159f85(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T918f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T688f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T686f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T550f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T549f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T537f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T529f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T289f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T161f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T159f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T55f146(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T918f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T688f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T686f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T550f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T550f91(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T537f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T529f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T918f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T688f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T686f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T550f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T549f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T537f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T529f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T289f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T161f85(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T159f84(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T55f153(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T918f2(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T688f5(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T686f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T537f53(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T529f51(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T918f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T688f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T686f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T550f12(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T549f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T537f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T529f8(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T289f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T161f1(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T159f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T55f33(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T918f20(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T688f21(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T686f8(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T550f10(T0* C);
/* ET_BIT_N.position */
extern T0* T549f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T537f54(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T529f52(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T289f23(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T918f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T688f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T686f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T550f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T549f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T537f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T529f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T289f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T161f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T159f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T55f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T639f19(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T639f92(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T638f18(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T638f91(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T303f20(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T303f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T298f22(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T298f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T639f30(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T638f30(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T298f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T639f31(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T638f31(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T303f29(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T298f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T639f26(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T638f25(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T303f23(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T298f25(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T639f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T55f125(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T498f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T592f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T415f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T55f154(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T297f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T414f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T638f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T303f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T298f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T639f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T639f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T638f58(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T638f60(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T303f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T303f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T298f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T298f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T639f27(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T638f27(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T303f25(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T298f27(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T639f61(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T638f59(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T303f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T298f59(T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T639f3(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T638f3(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T303f2(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T298f1(T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T639f25(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T638f24(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T303f22(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T298f24(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T639f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T638f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T303f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T298f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T633f18(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T633f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T632f20(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T632f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T630f20(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T630f93(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T227f10(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T227f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T226f12(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T226f81(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T224f12(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T224f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T163f22(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T163f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T632f32(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T630f32(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T227f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T226f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T224f39(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T163f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T633f31(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T632f33(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T630f33(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T227f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T226f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T224f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T163f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T633f34(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T632f36(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T630f36(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T227f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T226f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T224f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T163f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T633f32(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T632f34(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T630f34(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T163f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T633f33(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T632f35(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T630f35(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T227f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T226f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T224f42(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T163f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T633f35(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T630f37(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T227f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T226f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T224f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T163f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T633f21(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T632f23(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T630f23(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T227f13(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T226f16(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T163f25(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T633f23(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T632f25(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T630f25(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T227f15(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T224f17(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T163f26(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T633f25(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T632f27(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T630f27(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T227f18(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T226f21(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T224f20(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T163f28(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T633f20(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T632f22(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T630f22(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T226f14(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T224f14(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T163f24(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T633f24(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T632f26(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T630f26(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T227f17(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T226f20(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T224f19(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T163f27(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T633f50(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T632f51(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T630f51(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T227f46(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T226f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T224f48(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T163f54(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T227f16(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T226f19(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T224f18(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T633f61(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T633f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T632f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T632f64(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T630f62(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T630f64(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T227f57(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T227f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T226f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T226f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T224f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T224f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T163f64(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T163f66(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T633f27(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T632f29(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T630f29(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T227f20(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T226f23(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T224f22(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T163f29(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T633f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T632f63(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T630f63(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T227f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T226f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T224f60(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T163f65(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T633f22(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T632f24(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T630f24(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T227f14(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T226f17(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T224f16(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T163f5(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T633f5(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T632f3(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T630f3(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T227f3(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T226f3(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T224f3(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T163f3(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T633f26(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T632f28(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T630f28(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T227f19(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T226f22(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T224f21(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T163f21(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T550f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T549f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T289f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T161f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T159f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T55f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T161f6(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T159f14(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T55f15(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T55f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T161f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T159f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T55f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T550f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T549f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T289f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T161f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T159f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T55f103(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T550f47(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T549f46(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T289f36(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T161f44(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T159f38(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T55f112(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T550f30(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T549f29(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T289f24(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T161f29(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T159f26(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T55f91(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T550f31(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T549f30(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T289f25(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T161f30(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T159f27(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T55f92(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T550f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T549f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T289f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T161f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T159f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T55f109(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T550f42(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T549f41(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T289f31(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T161f38(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T159f33(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T55f100(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T550f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T549f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T289f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T161f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T159f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T55f106(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T550f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T549f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T289f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T161f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T159f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T55f107(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T550f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T549f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T289f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T161f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T159f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T55f110(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T550f94(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T549f93(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T289f86(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T161f90(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T161f93(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T159f89(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T159f91(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T55f159(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T161f17(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T159f16(T0* C);
/* ET_CLASS.is_generic */
extern T1 T55f16(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T161f47(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T397f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T159f39(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T55f115(T0* C, T0* a1);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T550f29(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T549f28(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T159f5(T0* C);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T550f86(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T549f85(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T549f90(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T289f77(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T289f82(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T160f21(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T161f82(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T161f92(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T397f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T159f81(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T159f90(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T55f150(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T55f158(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T550f88(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T549f87(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T289f79(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T161f84(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T159f83(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T55f152(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T550f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T549f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T289f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T161f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T159f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T55f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T550f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T549f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T289f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T161f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T159f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T55f134(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T550f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T549f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T289f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T161f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T159f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T55f135(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T550f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T549f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T289f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T161f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T159f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T55f136(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T550f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T549f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T289f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T161f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T159f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T55f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T550f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T549f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T289f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T161f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T159f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T55f104(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T550f43(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T549f42(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T289f32(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T161f40(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T159f34(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T55f102(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T550f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T549f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T289f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T161f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T159f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T55f108(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T550f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T549f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T289f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T161f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T159f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T55f111(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T549f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T289f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T161f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T159f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T55f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T550f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T549f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T289f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T161f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T159f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T55f121(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.base_type_actual */
extern T0* T549f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T289f54(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T161f56(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T159f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T55f117(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T550f40(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T549f39(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T289f57(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T161f60(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T159f53(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T55f119(T0* C);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T161f28(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T159f25(T0* C);
/* ET_CLASS.position */
extern T0* T55f90(T0* C);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T161f89(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T159f88(T0* C);
/* ET_CLASS.upper_name */
extern T0* T55f20(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T549f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T289f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T161f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T159f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T55f151(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T550f14(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T549f16(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T289f10(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T161f10(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T159f12(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T55f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T550f7(T0* C);
/* ET_BIT_N.to_text */
extern T0* T549f9(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T289f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T161f5(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T159f6(T0* C);
/* ET_CLASS.to_text */
extern T0* T55f13(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T222f11(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T221f11(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T217f11(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T197f11(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T144f18(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T222f5(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T221f5(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T217f5(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T197f5(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T144f7(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T222f29(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T221f30(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T197f29(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T144f27(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T222f3(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T221f3(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T217f3(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T197f3(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T144f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T222f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T200f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge902os15140;
extern T0* ge902ov15140;
extern T0* T200f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T200f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T200f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T222f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T142f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T59f214(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T903c11(T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T222f21(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T222f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T200c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T221f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T221f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T221f21(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T221f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T217f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T217f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T217f21(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T217f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T197f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T142f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T59f213(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge769os12578;
extern T0* ge769ov12578;
extern T0* T157f37(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T197f21(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T144f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T144f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T222f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T222f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T221f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T221f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.last_result_feature_name */
extern unsigned char ge769os12567;
extern T0* ge769ov12567;
extern T0* T157f40(T0* C);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T150f62(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T221f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T217f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T217f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge769os12542;
extern T0* ge769ov12542;
extern T0* T157f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T217f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T197f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T142f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T59f212(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge769os12580;
extern T0* ge769ov12580;
extern T0* T157f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T144f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T144f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T222f26(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T221f27(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T217f26(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T197f26(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T144f24(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T222f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T221f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T217f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T197f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T144f8(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T217f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T197f33(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T144f31(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T222f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T221f32(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T217f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T197f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T144f29(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T222f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T221f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T217f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T197f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T144f22(T0* C, T6 a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T1399f1(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T1399f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T1399f6(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T1399f4(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1317f1(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1317f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1317f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1317f4(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1164f1(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1164f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1164f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1164f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T901f1(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T901f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T901f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T901f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T900f1(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T900f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T900f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T900f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T899f1(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T899f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T899f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T899f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T898f1(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T898f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T898f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T898f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T897f1(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T897f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T897f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T897f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T896f1(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T896f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T896f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T896f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T895f1(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T895f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T895f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T895f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T894f1(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T894f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T894f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T894f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T891f1(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T891f3(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T891f6(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T891f4(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T890f1(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T890f3(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T890f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T890f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T889f5(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T889f7(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T889f10(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T889f8(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T888f1(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T888f3(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T888f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T888f4(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T887f1(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T887f3(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T887f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T887f4(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T271f1(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T271f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T271f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T271f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T270f1(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T270f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T270f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T270f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T269f1(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T269f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T269f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T268f1(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T268f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T268f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T268f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T267f1(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T267f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T267f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T267f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T199f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T199f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T199f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T199f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T99f1(T0* C);
/* UT_MESSAGE.message */
extern T0* T99f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T99f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T99f4(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T62f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T62f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T62f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T62f5(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T910f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].item */
extern T2 T1175f2(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T910f4(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T913f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T913f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T913f12(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T913f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T910f27(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T910f27p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1346f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge391os1679;
extern T0* ge391ov1679;
extern T0* T22f37(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T910f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge305os1654;
extern T0* ge305ov1654;
extern T0* T1346f2(T0* C);
extern T0* gema863(T6 c, ...);
extern T0* gema220(T6 c, ...);
extern T0* gema296(T6 c, ...);
extern T0* gema921(T6 c, ...);
extern T0* gema314(T6 c, ...);
extern int gevoid(T0* C, ...);
extern T0* ge403ov8661;
extern T0* ge407ov2764;
extern T0* ge232ov8531;
extern T0* ge345ov23716;
extern T0* ge414ov9226;
extern T0* ge380ov1698;
extern T0* ge1144ov15740;
extern T0* ge1144ov15725;
extern T0* ge1144ov15718;
extern T0* ge1144ov15703;
extern T0* ge1144ov15728;
extern T0* ge1144ov15721;
extern T0* ge1144ov15729;
extern T0* ge1144ov15738;
extern T0* ge1144ov15731;
extern T0* ge1144ov15727;
extern T0* ge1144ov15715;
extern T0* ge1144ov15716;
extern T0* ge1144ov15730;
extern T0* ge1144ov15717;
extern T0* ge1144ov15704;
extern T0* ge1144ov15705;
extern T0* ge1144ov15706;
extern T0* ge1144ov15712;
extern T0* ge1144ov15714;
extern T0* ge1144ov15709;
extern T0* ge1144ov15734;
extern T0* ge1144ov15733;
extern T0* ge1144ov15710;
extern T0* ge1144ov15711;
extern T0* ge1144ov15708;
extern T0* ge1144ov15707;
extern T0* ge1140ov15498;
extern T0* ge945ov6641;
extern T0* ge769ov12692;
extern T0* ge769ov12836;
extern T0* ge945ov6650;
extern T0* ge945ov6616;
extern T0* ge945ov6573;
extern T0* ge940ov22670;
extern T0* ge940ov22669;
extern T0* ge940ov22668;
extern T0* ge769ov12810;
extern T0* ge945ov6611;
extern T0* ge945ov6607;
extern T0* ge945ov6636;
extern T0* ge945ov6586;
extern T0* ge945ov6606;
extern T0* ge945ov6642;
extern T0* ge945ov6626;
extern T0* ge945ov6613;
extern T0* ge945ov6651;
extern T0* ge945ov6639;
extern T0* ge769ov12813;
extern T0* ge945ov6624;
extern T0* ge945ov6654;
extern T0* ge945ov6652;
extern T0* ge945ov6656;
extern T0* ge945ov6653;
extern T0* ge945ov6575;
extern T0* ge945ov6574;
extern T0* ge945ov6640;
extern T0* ge945ov6610;
extern T0* ge945ov6619;
extern T0* ge945ov6579;
extern T0* ge945ov6617;
extern T0* ge945ov6631;
extern T0* ge945ov6637;
extern T0* ge945ov6609;
extern T0* ge945ov6602;
extern T0* ge945ov6601;
extern T0* ge945ov6587;
extern T0* ge945ov6582;
extern T0* ge945ov6581;
extern T0* ge945ov6594;
extern T0* ge945ov6593;
extern T0* ge945ov6592;
extern T0* ge945ov6614;
extern T0* ge945ov6576;
extern T0* ge945ov6625;
extern T0* ge945ov6648;
extern T0* ge945ov6649;
extern T0* ge945ov6618;
extern T0* ge945ov6608;
extern T0* ge945ov6578;
extern T0* ge945ov6580;
extern T0* ge945ov6647;
extern T0* ge945ov6604;
extern T0* ge945ov6603;
extern T0* ge945ov6595;
extern T0* ge945ov6599;
extern T0* ge945ov6598;
extern T0* ge945ov6597;
extern T0* ge945ov6596;
extern T0* ge945ov6591;
extern T0* ge945ov6590;
extern T0* ge945ov6589;
extern T0* ge945ov6588;
extern T0* ge945ov6584;
extern T0* ge945ov6583;
extern T0* ge945ov6585;
extern T0* ge769ov12700;
extern T0* ge769ov12719;
extern T0* ge769ov12709;
extern T0* ge769ov12703;
extern T0* ge769ov12732;
extern T0* ge769ov12697;
extern T0* ge769ov12832;
extern T0* ge405ov8661;
extern T0* ge943ov22658;
extern T0* ge943ov22652;
extern T0* ge943ov22646;
extern T0* ge943ov22654;
extern T0* ge943ov22648;
extern T0* ge943ov22642;
extern T0* ge943ov22657;
extern T0* ge943ov22651;
extern T0* ge943ov22645;
extern T0* ge943ov22659;
extern T0* ge943ov22653;
extern T0* ge943ov22647;
extern T0* ge769ov12762;
extern T0* ge943ov22656;
extern T0* ge943ov22650;
extern T0* ge943ov22644;
extern T0* ge769ov12800;
extern T0* ge769ov12783;
extern T0* ge769ov12808;
extern T0* ge769ov12778;
extern T0* ge769ov12760;
extern T0* ge944ov23532;
extern T0* ge944ov23290;
extern T0* ge944ov23154;
extern T0* ge944ov23530;
extern T0* ge944ov23288;
extern T0* ge944ov23152;
extern T0* ge944ov23531;
extern T0* ge944ov23289;
extern T0* ge944ov23153;
extern T0* ge769ov12735;
extern T0* ge943ov22655;
extern T0* ge943ov22649;
extern T0* ge943ov22643;
extern T0* ge936ov24804;
extern T0* ge936ov24802;
extern T0* ge936ov24800;
extern T0* ge1068ov4624;
extern T0* ge935ov23585;
extern T0* ge935ov23581;
extern T0* ge935ov23577;
extern T0* ge991ov17331;
extern T0* ge381ov8470;
extern T0* ge580ov11209;
extern T0* ge580ov11210;
extern T0* ge935ov23586;
extern T0* ge935ov23582;
extern T0* ge935ov23578;
extern T0* ge942ov23594;
extern T0* ge942ov23593;
extern T0* ge944ov23487;
extern T0* ge944ov23261;
extern T0* ge944ov23109;
extern T0* ge944ov23489;
extern T0* ge944ov23111;
extern T0* ge944ov23482;
extern T0* ge944ov23104;
extern T0* ge944ov23485;
extern T0* ge944ov23107;
extern T0* ge944ov23481;
extern T0* ge944ov23103;
extern T0* ge944ov23480;
extern T0* ge944ov23102;
extern T0* ge769ov12826;
extern T0* ge769ov12733;
extern T0* ge769ov12919;
extern T0* ge769ov12920;
extern T0* ge769ov12921;
extern T0* ge769ov12922;
extern T0* ge769ov12923;
extern T0* ge769ov12924;
extern T0* ge769ov12925;
extern T0* ge769ov12926;
extern T0* ge769ov12927;
extern T0* ge769ov12928;
extern T0* ge769ov12929;
extern T0* ge769ov12930;
extern T0* ge769ov12931;
extern T0* ge769ov12932;
extern T0* ge769ov12933;
extern T0* ge769ov12934;
extern T0* ge769ov12935;
extern T0* ge769ov12936;
extern T0* ge769ov12937;
extern T0* ge769ov12938;
extern T0* ge769ov12939;
extern T0* ge769ov12940;
extern T0* ge769ov12941;
extern T0* ge769ov12942;
extern T0* ge769ov12984;
extern T0* ge769ov12985;
extern T0* ge769ov12986;
extern T0* ge769ov12693;
extern T0* ge769ov12694;
extern T0* ge769ov12695;
extern T0* ge769ov12696;
extern T0* ge769ov12698;
extern T0* ge769ov12699;
extern T0* ge769ov12701;
extern T0* ge769ov12702;
extern T0* ge769ov12704;
extern T0* ge769ov12705;
extern T0* ge769ov12706;
extern T0* ge769ov12707;
extern T0* ge769ov12708;
extern T0* ge769ov12710;
extern T0* ge769ov12711;
extern T0* ge769ov12712;
extern T0* ge769ov12713;
extern T0* ge769ov12714;
extern T0* ge769ov12715;
extern T0* ge769ov12716;
extern T0* ge769ov12717;
extern T0* ge769ov12718;
extern T0* ge769ov12720;
extern T0* ge769ov12721;
extern T0* ge769ov12722;
extern T0* ge769ov12723;
extern T0* ge769ov12724;
extern T0* ge769ov12725;
extern T0* ge769ov12726;
extern T0* ge769ov12727;
extern T0* ge769ov12728;
extern T0* ge769ov12729;
extern T0* ge769ov12730;
extern T0* ge769ov12731;
extern T0* ge769ov12734;
extern T0* ge769ov12736;
extern T0* ge769ov12737;
extern T0* ge769ov12742;
extern T0* ge769ov12743;
extern T0* ge769ov12744;
extern T0* ge769ov12745;
extern T0* ge769ov12738;
extern T0* ge769ov12739;
extern T0* ge769ov12740;
extern T0* ge769ov12741;
extern T0* ge769ov12746;
extern T0* ge769ov12747;
extern T0* ge769ov12748;
extern T0* ge769ov12749;
extern T0* ge769ov12750;
extern T0* ge769ov12751;
extern T0* ge769ov12752;
extern T0* ge769ov12753;
extern T0* ge769ov12754;
extern T0* ge769ov12755;
extern T0* ge769ov12756;
extern T0* ge769ov12757;
extern T0* ge769ov12758;
extern T0* ge769ov12759;
extern T0* ge769ov12761;
extern T0* ge769ov12763;
extern T0* ge769ov12764;
extern T0* ge769ov12765;
extern T0* ge769ov12766;
extern T0* ge769ov12767;
extern T0* ge769ov12768;
extern T0* ge769ov12769;
extern T0* ge769ov12770;
extern T0* ge769ov12771;
extern T0* ge769ov12772;
extern T0* ge769ov12773;
extern T0* ge769ov12774;
extern T0* ge769ov12775;
extern T0* ge769ov12776;
extern T0* ge769ov12777;
extern T0* ge769ov12779;
extern T0* ge769ov12780;
extern T0* ge769ov12781;
extern T0* ge769ov12782;
extern T0* ge769ov12784;
extern T0* ge769ov12785;
extern T0* ge769ov12786;
extern T0* ge769ov12787;
extern T0* ge769ov12788;
extern T0* ge769ov12789;
extern T0* ge769ov12790;
extern T0* ge769ov12791;
extern T0* ge769ov12792;
extern T0* ge769ov12793;
extern T0* ge769ov12794;
extern T0* ge769ov12795;
extern T0* ge769ov12796;
extern T0* ge769ov12797;
extern T0* ge769ov12798;
extern T0* ge769ov12799;
extern T0* ge769ov12801;
extern T0* ge769ov12802;
extern T0* ge769ov12803;
extern T0* ge769ov12804;
extern T0* ge769ov12805;
extern T0* ge769ov12806;
extern T0* ge769ov12807;
extern T0* ge769ov12809;
extern T0* ge769ov12811;
extern T0* ge769ov12812;
extern T0* ge769ov12814;
extern T0* ge769ov12815;
extern T0* ge769ov12816;
extern T0* ge769ov12817;
extern T0* ge769ov12818;
extern T0* ge769ov12819;
extern T0* ge769ov12820;
extern T0* ge769ov12822;
extern T0* ge769ov12823;
extern T0* ge769ov12824;
extern T0* ge769ov12825;
extern T0* ge769ov12827;
extern T0* ge769ov12828;
extern T0* ge769ov12829;
extern T0* ge769ov12830;
extern T0* ge769ov12831;
extern T0* ge769ov12833;
extern T0* ge769ov12834;
extern T0* ge769ov12835;
extern T0* ge769ov12837;
extern T0* ge769ov12838;
extern T0* ge769ov12839;
extern T0* ge769ov12840;
extern T0* ge769ov12841;
extern T0* ge769ov12842;
extern T0* ge769ov12843;
extern T0* ge769ov12844;
extern T0* ge769ov12845;
extern T0* ge769ov12846;
extern T0* ge769ov12847;
extern T0* ge769ov12848;
extern T0* ge769ov12849;
extern T0* ge769ov12850;
extern T0* ge769ov12851;
extern T0* ge769ov12852;
extern T0* ge769ov12853;
extern T0* ge769ov12854;
extern T0* ge769ov12855;
extern T0* ge769ov12856;
extern T0* ge769ov12857;
extern T0* ge769ov12858;
extern T0* ge769ov12859;
extern T0* ge769ov12860;
extern T0* ge769ov12862;
extern T0* ge769ov12863;
extern T0* ge769ov12864;
extern T0* ge769ov12865;
extern T0* ge769ov12866;
extern T0* ge769ov12867;
extern T0* ge769ov12868;
extern T0* ge769ov12869;
extern T0* ge769ov12870;
extern T0* ge769ov12871;
extern T0* ge769ov12872;
extern T0* ge769ov12873;
extern T0* ge769ov12874;
extern T0* ge769ov12875;
extern T0* ge769ov12876;
extern T0* ge769ov12877;
extern T0* ge769ov12878;
extern T0* ge769ov12879;
extern T0* ge769ov12880;
extern T0* ge769ov12881;
extern T0* ge769ov12882;
extern T0* ge769ov12883;
extern T0* ge769ov12884;
extern T0* ge769ov12885;
extern T0* ge769ov12886;
extern T0* ge769ov12887;
extern T0* ge769ov12888;
extern T0* ge769ov12889;
extern T0* ge769ov12890;
extern T0* ge769ov12891;
extern T0* ge769ov12892;
extern T0* ge769ov12893;
extern T0* ge769ov12894;
extern T0* ge769ov12895;
extern T0* ge769ov12896;
extern T0* ge769ov12897;
extern T0* ge769ov12898;
extern T0* ge769ov12899;
extern T0* ge769ov12900;
extern T0* ge769ov12901;
extern T0* ge769ov12902;
extern T0* ge769ov12903;
extern T0* ge769ov12904;
extern T0* ge769ov12905;
extern T0* ge769ov12906;
extern T0* ge769ov12907;
extern T0* ge769ov12908;
extern T0* ge769ov12909;
extern T0* ge769ov12910;
extern T0* ge769ov12911;
extern T0* ge769ov12912;
extern T0* ge769ov12913;
extern T0* ge769ov12914;
extern T0* ge769ov12915;
extern T0* ge769ov12916;
extern T0* ge769ov12917;
extern T0* ge281ov10935;
extern T0* ge378ov19435;
extern T0* ge378ov19432;
extern T0* ge956ov14472;
extern T0* ge376ov19299;
extern T0* ge944ov23498;
extern T0* ge944ov23264;
extern T0* ge944ov23120;
extern T0* ge944ov23497;
extern T0* ge944ov23119;
extern T0* ge944ov23529;
extern T0* ge944ov23287;
extern T0* ge944ov23151;
extern T0* ge944ov23528;
extern T0* ge944ov23286;
extern T0* ge944ov23150;
extern T0* ge769ov12861;
extern T0* ge769ov12821;
extern T0* ge944ov23534;
extern T0* ge944ov23292;
extern T0* ge944ov23156;
extern T0* ge944ov23533;
extern T0* ge944ov23291;
extern T0* ge944ov23155;
extern T0* ge1257ov9851;
extern T0* ge1257ov9850;
extern T0* ge1001ov3920;
extern T0* ge1001ov3921;
extern T0* ge1001ov3922;
extern T0* ge1001ov3923;
extern T0* ge1001ov3924;
extern T0* ge1001ov3925;
extern T0* ge1001ov3926;
extern T0* ge1001ov3927;
extern T0* ge1001ov3928;
extern T0* ge1001ov3929;
extern T0* ge1001ov3930;
extern T0* ge1001ov3931;
extern T0* ge1001ov3932;
extern T0* ge1001ov3933;
extern T0* ge1001ov3934;
extern T0* ge1001ov3935;
extern T0* ge1001ov3936;
extern T0* ge1001ov3937;
extern T0* ge1001ov3938;
extern T0* ge1001ov3939;
extern T0* ge1001ov3940;
extern T0* ge1001ov3941;
extern T0* ge1001ov3942;
extern T0* ge1001ov3943;
extern T0* ge1001ov3944;
extern T0* ge1001ov3945;
extern T0* ge1001ov3946;
extern T0* ge1001ov3947;
extern T0* ge1001ov3948;
extern T0* ge1001ov3949;
extern T0* ge1001ov3950;
extern T0* ge1001ov3951;
extern T0* ge1001ov3952;
extern T0* ge1001ov3953;
extern T0* ge1001ov3954;
extern T0* ge1001ov3955;
extern T0* ge1001ov3956;
extern T0* ge1001ov3957;
extern T0* ge1001ov3958;
extern T0* ge1001ov3959;
extern T0* ge1001ov3960;
extern T0* ge1001ov3961;
extern T0* ge1001ov3962;
extern T0* ge1001ov3963;
extern T0* ge1001ov3964;
extern T0* ge1001ov3965;
extern T0* ge1001ov3966;
extern T0* ge1001ov3967;
extern T0* ge1001ov3968;
extern T0* ge1001ov3969;
extern T0* ge1001ov3970;
extern T0* ge1001ov3971;
extern T0* ge1001ov3972;
extern T0* ge1001ov3973;
extern T0* ge1001ov3974;
extern T0* ge1001ov3975;
extern T0* ge1001ov3976;
extern T0* ge1001ov3977;
extern T0* ge1001ov3978;
extern T0* ge1001ov3979;
extern T0* ge1001ov3980;
extern T0* ge1001ov3981;
extern T0* ge1001ov3982;
extern T0* ge1001ov3983;
extern T0* ge1001ov3984;
extern T0* ge1001ov3985;
extern T0* ge1001ov3986;
extern T0* ge1001ov3987;
extern T0* ge1001ov3988;
extern T0* ge1001ov3989;
extern T0* ge1001ov3990;
extern T0* ge1001ov3991;
extern T0* ge1001ov3992;
extern T0* ge1001ov3993;
extern T0* ge1001ov3994;
extern T0* ge1001ov3995;
extern T0* ge1001ov3996;
extern T0* ge1001ov3997;
extern T0* ge1001ov3998;
extern T0* ge1001ov3999;
extern T0* ge1001ov4000;
extern T0* ge1034ov3887;
extern T0* ge1001ov4106;
extern T0* ge1001ov4093;
extern T0* ge1001ov4098;
extern T0* ge1001ov4099;
extern T0* ge1001ov4100;
extern T0* ge1001ov4087;
extern T0* ge1001ov4104;
extern T0* ge1001ov4108;
extern T0* ge1001ov4091;
extern T0* ge1001ov4083;
extern T0* ge1001ov4094;
extern T0* ge1001ov4092;
extern T0* ge1001ov4089;
extern T0* ge1001ov4103;
extern T0* ge1001ov4102;
extern T0* ge1001ov4085;
extern T0* ge1001ov4107;
extern T0* ge1001ov4084;
extern T0* ge1001ov4090;
extern T0* ge1001ov4105;
extern T0* ge1001ov4097;
extern T0* ge1001ov4086;
extern T0* ge1001ov4101;
extern T0* ge1001ov4095;
extern T0* ge1001ov4088;
extern T0* ge1001ov4110;
extern T0* ge1001ov4096;
extern T0* ge1034ov3886;
extern T0* ge1034ov3885;
extern T0* ge997ov17347;
extern T0* ge1264ov10388;
extern T0* ge1264ov10350;
extern T0* ge1264ov10348;
extern T0* ge1264ov10389;
extern T0* ge1264ov10361;
extern T0* ge1264ov10360;
extern T0* ge1264ov10371;
extern T0* ge1264ov10365;
extern T0* ge1264ov10364;
extern T0* ge1264ov10363;
extern T0* ge1264ov10369;
extern T0* ge1264ov10368;
extern T0* ge1264ov10370;
extern T0* ge1264ov10347;
extern T0* ge1264ov10373;
extern T0* ge1264ov10382;
extern T0* ge1267ov10203;
extern T0* ge1267ov10201;
extern T0* ge1267ov10202;
extern T0* ge1264ov10383;
extern T0* ge1264ov10384;
extern T0* ge1264ov10387;
extern T0* ge1264ov10385;
extern T0* ge1264ov10386;
extern T0* ge1264ov10380;
extern T0* ge1260ov18965;
extern T0* ge1260ov18966;
extern T0* ge1264ov10353;
extern T0* ge1264ov10376;
extern T0* ge1264ov10396;
extern T0* ge1264ov10397;
extern T0* ge1264ov10398;
extern T0* ge1264ov10391;
extern T0* ge1264ov10374;
extern T0* ge1264ov10375;
extern T0* ge1264ov10377;
extern T0* ge1264ov10381;
extern T0* ge58ov3822;
extern T0* ge315ov1572;
extern T0* ge57ov3312;
extern T0* ge60ov9528;
extern T0* ge60ov9534;
extern T0* ge58ov3823;
extern T0* ge58ov3824;
extern T0* ge58ov3825;
extern T0* ge60ov9529;
extern T0* ge60ov9535;
extern T0* ge60ov9530;
extern T0* ge60ov9536;
extern T0* ge60ov9531;
extern T0* ge60ov9537;
extern T0* ge57ov3307;
extern T0* ge57ov3306;
extern T0* ge57ov3314;
extern T0* ge57ov3313;
extern T0* ge1271ov18672;
extern T0* ge1271ov18673;
extern T0* ge1262ov23724;
extern T0* ge1262ov23726;
extern T0* ge944ov23512;
extern T0* ge944ov23272;
extern T0* ge944ov23134;
extern T0* ge944ov23511;
extern T0* ge944ov23133;
extern T0* ge944ov23335;
extern T0* ge944ov23184;
extern T0* ge944ov22957;
extern T0* ge944ov23509;
extern T0* ge944ov23271;
extern T0* ge944ov23131;
extern T0* ge944ov23508;
extern T0* ge944ov23130;
extern T0* ge944ov23334;
extern T0* ge944ov23183;
extern T0* ge944ov22956;
extern T0* ge944ov23302;
extern T0* ge944ov23169;
extern T0* ge944ov22924;
extern T0* ge944ov23301;
extern T0* ge944ov22923;
extern T0* ge944ov23514;
extern T0* ge944ov23274;
extern T0* ge944ov23136;
extern T0* ge944ov23539;
extern T0* ge944ov23295;
extern T0* ge944ov23161;
extern T0* ge944ov23540;
extern T0* ge944ov23162;
extern T0* ge944ov23537;
extern T0* ge944ov23294;
extern T0* ge944ov23159;
extern T0* ge944ov23538;
extern T0* ge944ov23160;
extern T0* ge944ov23430;
extern T0* ge944ov23229;
extern T0* ge944ov23052;
extern T0* ge944ov23543;
extern T0* ge944ov23297;
extern T0* ge944ov23165;
extern T0* ge944ov23544;
extern T0* ge944ov23166;
extern T0* ge944ov23541;
extern T0* ge944ov23296;
extern T0* ge944ov23163;
extern T0* ge944ov23542;
extern T0* ge944ov23164;
extern T0* ge944ov23428;
extern T0* ge944ov23228;
extern T0* ge944ov23050;
extern T0* ge944ov23366;
extern T0* ge944ov23200;
extern T0* ge944ov22988;
extern T0* ge944ov23368;
extern T0* ge944ov22990;
extern T0* ge944ov23364;
extern T0* ge944ov22986;
extern T0* ge944ov23370;
extern T0* ge944ov22992;
extern T0* ge944ov23367;
extern T0* ge944ov22989;
extern T0* ge944ov23365;
extern T0* ge944ov22987;
extern T0* ge944ov23410;
extern T0* ge944ov23211;
extern T0* ge944ov23032;
extern T0* ge944ov23320;
extern T0* ge944ov23177;
extern T0* ge944ov22942;
extern T0* ge944ov23318;
extern T0* ge944ov22940;
extern T0* ge944ov23312;
extern T0* ge944ov23176;
extern T0* ge944ov22934;
extern T0* ge944ov23311;
extern T0* ge944ov23175;
extern T0* ge944ov22933;
extern T0* ge944ov23523;
extern T0* ge944ov23281;
extern T0* ge944ov23145;
extern T0* ge944ov23527;
extern T0* ge944ov23285;
extern T0* ge944ov23149;
extern T0* ge944ov23502;
extern T0* ge944ov23267;
extern T0* ge944ov23124;
extern T0* ge944ov23526;
extern T0* ge944ov23284;
extern T0* ge944ov23148;
extern T0* ge944ov23409;
extern T0* ge944ov23219;
extern T0* ge944ov23031;
extern T0* ge944ov23411;
extern T0* ge944ov23033;
extern T0* ge944ov23517;
extern T0* ge944ov23276;
extern T0* ge944ov23139;
extern T0* ge944ov23504;
extern T0* ge944ov23268;
extern T0* ge944ov23126;
extern T0* ge944ov23505;
extern T0* ge944ov23127;
extern T0* ge944ov23408;
extern T0* ge944ov23218;
extern T0* ge944ov23030;
extern T0* ge944ov23404;
extern T0* ge944ov23217;
extern T0* ge944ov23026;
extern T0* ge944ov23405;
extern T0* ge944ov23027;
extern T0* ge944ov23396;
extern T0* ge944ov23214;
extern T0* ge944ov23018;
extern T0* ge944ov23407;
extern T0* ge944ov23029;
extern T0* ge944ov23406;
extern T0* ge944ov23028;
extern T0* ge944ov23403;
extern T0* ge944ov23216;
extern T0* ge944ov23025;
extern T0* ge944ov23375;
extern T0* ge944ov23204;
extern T0* ge944ov22997;
extern T0* ge944ov23374;
extern T0* ge944ov23203;
extern T0* ge944ov22996;
extern T0* ge944ov23373;
extern T0* ge944ov23202;
extern T0* ge944ov22995;
extern T0* ge944ov23372;
extern T0* ge944ov23201;
extern T0* ge944ov22994;
extern T0* ge944ov23371;
extern T0* ge944ov22993;
extern T0* ge944ov23310;
extern T0* ge944ov23174;
extern T0* ge944ov22932;
extern T0* ge944ov23308;
extern T0* ge944ov23173;
extern T0* ge944ov22930;
extern T0* ge944ov23338;
extern T0* ge944ov23185;
extern T0* ge944ov22960;
extern T0* ge944ov23339;
extern T0* ge944ov22961;
extern T0* ge944ov23322;
extern T0* ge944ov23178;
extern T0* ge944ov22944;
extern T0* ge944ov23321;
extern T0* ge944ov22943;
extern T0* ge944ov23323;
extern T0* ge944ov22945;
extern T0* ge944ov23347;
extern T0* ge944ov23189;
extern T0* ge944ov22969;
extern T0* ge944ov23336;
extern T0* ge944ov22958;
extern T0* ge944ov23337;
extern T0* ge944ov22959;
extern T0* ge944ov23381;
extern T0* ge944ov23205;
extern T0* ge944ov23003;
extern T0* ge944ov23378;
extern T0* ge944ov23000;
extern T0* ge944ov23385;
extern T0* ge944ov23206;
extern T0* ge944ov23007;
extern T0* ge944ov23382;
extern T0* ge944ov23004;
extern T0* ge944ov23379;
extern T0* ge944ov23001;
extern T0* ge944ov23386;
extern T0* ge944ov23008;
extern T0* ge944ov23383;
extern T0* ge944ov23005;
extern T0* ge944ov23380;
extern T0* ge944ov23002;
extern T0* ge944ov23387;
extern T0* ge944ov23009;
extern T0* ge944ov23494;
extern T0* ge944ov23263;
extern T0* ge944ov23116;
extern T0* ge944ov23392;
extern T0* ge944ov23210;
extern T0* ge944ov23014;
extern T0* ge944ov23391;
extern T0* ge944ov23013;
extern T0* ge944ov23377;
extern T0* ge944ov22999;
extern T0* ge944ov23376;
extern T0* ge944ov22998;
extern T0* ge944ov23384;
extern T0* ge944ov23006;
extern T0* ge944ov23390;
extern T0* ge944ov23209;
extern T0* ge944ov23012;
extern T0* ge944ov23389;
extern T0* ge944ov23208;
extern T0* ge944ov23011;
extern T0* ge944ov23388;
extern T0* ge944ov23207;
extern T0* ge944ov23010;
extern T0* ge944ov23472;
extern T0* ge944ov23256;
extern T0* ge944ov23094;
extern T0* ge944ov23470;
extern T0* ge944ov23255;
extern T0* ge944ov23092;
extern T0* ge944ov23325;
extern T0* ge944ov23179;
extern T0* ge944ov22947;
extern T0* ge944ov23438;
extern T0* ge944ov23234;
extern T0* ge944ov23060;
extern T0* ge944ov23324;
extern T0* ge944ov22946;
extern T0* ge944ov23437;
extern T0* ge944ov23059;
extern T0* ge944ov23436;
extern T0* ge944ov23233;
extern T0* ge944ov23058;
extern T0* ge944ov23355;
extern T0* ge944ov23194;
extern T0* ge944ov22977;
extern T0* ge944ov23353;
extern T0* ge944ov23192;
extern T0* ge944ov22975;
extern T0* ge944ov23352;
extern T0* ge944ov22974;
extern T0* ge944ov23359;
extern T0* ge944ov23196;
extern T0* ge944ov22981;
extern T0* ge944ov23358;
extern T0* ge944ov22980;
extern T0* ge944ov23360;
extern T0* ge944ov23197;
extern T0* ge944ov22982;
extern T0* ge944ov23420;
extern T0* ge944ov23223;
extern T0* ge944ov23042;
extern T0* ge944ov23419;
extern T0* ge944ov23041;
extern T0* ge944ov23418;
extern T0* ge944ov23040;
extern T0* ge944ov23417;
extern T0* ge944ov23039;
extern T0* ge944ov23421;
extern T0* ge944ov23224;
extern T0* ge944ov23043;
extern T0* ge944ov23341;
extern T0* ge944ov23186;
extern T0* ge944ov22963;
extern T0* ge944ov23340;
extern T0* ge944ov22962;
extern T0* ge944ov23346;
extern T0* ge944ov22968;
extern T0* ge944ov23343;
extern T0* ge944ov23187;
extern T0* ge944ov22965;
extern T0* ge944ov23344;
extern T0* ge944ov22966;
extern T0* ge944ov23435;
extern T0* ge944ov23057;
extern T0* ge944ov23342;
extern T0* ge944ov22964;
extern T0* ge944ov23356;
extern T0* ge944ov22978;
extern T0* ge944ov23345;
extern T0* ge944ov23188;
extern T0* ge944ov22967;
extern T0* ge944ov23350;
extern T0* ge944ov23190;
extern T0* ge944ov22972;
extern T0* ge944ov23348;
extern T0* ge944ov22970;
extern T0* ge944ov23349;
extern T0* ge944ov22971;
extern T0* ge944ov23443;
extern T0* ge944ov23238;
extern T0* ge944ov23065;
extern T0* ge944ov23439;
extern T0* ge944ov23235;
extern T0* ge944ov23061;
extern T0* ge944ov23441;
extern T0* ge944ov23236;
extern T0* ge944ov23063;
extern T0* ge944ov23351;
extern T0* ge944ov23191;
extern T0* ge944ov22973;
extern T0* ge944ov23357;
extern T0* ge944ov23195;
extern T0* ge944ov22979;
extern T0* ge944ov23432;
extern T0* ge944ov23231;
extern T0* ge944ov23054;
extern T0* ge944ov23415;
extern T0* ge944ov23221;
extern T0* ge944ov23037;
extern T0* ge944ov23442;
extern T0* ge944ov23237;
extern T0* ge944ov23064;
extern T0* ge944ov23354;
extern T0* ge944ov23193;
extern T0* ge944ov22976;
extern T0* ge944ov23361;
extern T0* ge944ov23198;
extern T0* ge944ov22983;
extern T0* ge944ov23433;
extern T0* ge944ov23232;
extern T0* ge944ov23055;
extern T0* ge944ov23431;
extern T0* ge944ov23230;
extern T0* ge944ov23053;
extern T0* ge944ov23416;
extern T0* ge944ov23222;
extern T0* ge944ov23038;
extern T0* ge944ov23434;
extern T0* ge944ov23056;
extern T0* ge944ov23500;
extern T0* ge944ov23266;
extern T0* ge944ov23122;
extern T0* ge944ov23501;
extern T0* ge944ov23123;
extern T0* ge945ov6615;
extern T0* ge945ov6577;
extern T0* ge944ov23304;
extern T0* ge944ov22926;
extern T0* ge944ov23303;
extern T0* ge944ov22925;
extern T0* ge944ov23516;
extern T0* ge944ov23275;
extern T0* ge944ov23138;
extern T0* ge944ov23510;
extern T0* ge944ov23132;
extern T0* ge944ov23515;
extern T0* ge944ov23137;
extern T0* ge944ov23429;
extern T0* ge944ov23051;
extern T0* ge944ov23464;
extern T0* ge944ov23252;
extern T0* ge944ov23086;
extern T0* ge944ov23463;
extern T0* ge944ov23251;
extern T0* ge944ov23085;
extern T0* ge944ov23462;
extern T0* ge944ov23250;
extern T0* ge944ov23084;
extern T0* ge944ov23461;
extern T0* ge944ov23249;
extern T0* ge944ov23083;
extern T0* ge944ov23460;
extern T0* ge944ov23248;
extern T0* ge944ov23082;
extern T0* ge944ov23459;
extern T0* ge944ov23247;
extern T0* ge944ov23081;
extern T0* ge944ov23465;
extern T0* ge944ov23253;
extern T0* ge944ov23087;
extern T0* ge944ov23474;
extern T0* ge944ov23257;
extern T0* ge944ov23096;
extern T0* ge944ov23475;
extern T0* ge944ov23258;
extern T0* ge944ov23097;
extern T0* ge944ov23471;
extern T0* ge944ov23093;
extern T0* ge945ov6655;
extern T0* ge945ov6633;
extern T0* ge945ov6635;
extern T0* ge945ov6632;
extern T0* ge945ov6634;
extern T0* ge945ov6620;
extern T0* ge945ov6621;
extern T0* ge945ov6622;
extern T0* ge945ov6623;
extern T0* ge945ov6627;
extern T0* ge945ov6628;
extern T0* ge945ov6629;
extern T0* ge945ov6630;
extern T0* ge944ov23398;
extern T0* ge944ov23020;
extern T0* ge944ov23401;
extern T0* ge944ov23215;
extern T0* ge944ov23023;
extern T0* ge944ov23394;
extern T0* ge944ov23213;
extern T0* ge944ov23016;
extern T0* ge944ov23397;
extern T0* ge944ov23019;
extern T0* ge944ov23332;
extern T0* ge944ov23182;
extern T0* ge944ov22954;
extern T0* ge944ov23327;
extern T0* ge944ov23180;
extern T0* ge944ov22949;
extern T0* ge944ov23330;
extern T0* ge944ov22952;
extern T0* ge944ov23329;
extern T0* ge944ov22951;
extern T0* ge944ov23328;
extern T0* ge944ov23181;
extern T0* ge944ov22950;
extern T0* ge944ov23513;
extern T0* ge944ov23273;
extern T0* ge944ov23135;
extern T0* ge944ov23518;
extern T0* ge944ov23277;
extern T0* ge944ov23140;
extern T0* ge769ov12918;
extern T0* ge944ov23300;
extern T0* ge944ov23168;
extern T0* ge944ov22922;
extern T0* ge944ov23447;
extern T0* ge944ov23241;
extern T0* ge944ov23069;
extern T0* ge944ov23454;
extern T0* ge944ov23245;
extern T0* ge944ov23076;
extern T0* ge944ov23453;
extern T0* ge944ov23075;
extern T0* ge944ov23452;
extern T0* ge944ov23244;
extern T0* ge944ov23074;
extern T0* ge944ov23451;
extern T0* ge944ov23073;
extern T0* ge944ov23450;
extern T0* ge944ov23243;
extern T0* ge944ov23072;
extern T0* ge944ov23449;
extern T0* ge944ov23071;
extern T0* ge944ov23448;
extern T0* ge944ov23242;
extern T0* ge944ov23070;
extern T0* ge944ov23446;
extern T0* ge944ov23068;
extern T0* ge944ov23521;
extern T0* ge944ov23279;
extern T0* ge944ov23143;
extern T0* ge944ov23519;
extern T0* ge944ov23278;
extern T0* ge944ov23141;
extern T0* ge944ov23458;
extern T0* ge944ov23246;
extern T0* ge944ov23080;
extern T0* ge944ov23457;
extern T0* ge944ov23079;
extern T0* ge944ov23477;
extern T0* ge944ov23259;
extern T0* ge944ov23099;
extern T0* ge944ov23479;
extern T0* ge944ov23260;
extern T0* ge944ov23101;
extern T0* ge944ov23469;
extern T0* ge944ov23254;
extern T0* ge944ov23091;
extern T0* ge944ov23456;
extern T0* ge944ov23078;
extern T0* ge944ov23455;
extern T0* ge944ov23077;
extern T0* ge944ov23473;
extern T0* ge944ov23095;
extern T0* ge944ov23468;
extern T0* ge944ov23090;
extern T0* ge944ov23535;
extern T0* ge944ov23293;
extern T0* ge944ov23157;
extern T0* ge944ov23536;
extern T0* ge944ov23158;
extern T0* ge944ov23507;
extern T0* ge944ov23270;
extern T0* ge944ov23129;
extern T0* ge944ov23506;
extern T0* ge944ov23269;
extern T0* ge944ov23128;
extern T0* ge944ov23499;
extern T0* ge944ov23265;
extern T0* ge944ov23121;
extern T0* ge944ov23525;
extern T0* ge944ov23283;
extern T0* ge944ov23147;
extern T0* ge944ov23314;
extern T0* ge944ov22936;
extern T0* ge944ov23413;
extern T0* ge944ov23220;
extern T0* ge944ov23035;
extern T0* ge944ov23524;
extern T0* ge944ov23282;
extern T0* ge944ov23146;
extern T0* ge944ov23313;
extern T0* ge944ov22935;
extern T0* ge944ov23412;
extern T0* ge944ov23034;
extern T0* ge944ov23496;
extern T0* ge944ov23118;
extern T0* ge944ov23495;
extern T0* ge944ov23117;
extern T0* ge944ov23315;
extern T0* ge944ov22937;
extern T0* ge944ov23414;
extern T0* ge944ov23036;
extern T0* ge944ov23492;
extern T0* ge944ov23262;
extern T0* ge944ov23114;
extern T0* ge944ov23493;
extern T0* ge944ov23115;
extern T0* ge944ov23307;
extern T0* ge944ov23172;
extern T0* ge944ov22929;
extern T0* ge944ov23306;
extern T0* ge944ov23171;
extern T0* ge944ov22928;
extern T0* ge944ov23422;
extern T0* ge944ov23225;
extern T0* ge944ov23044;
extern T0* ge944ov23362;
extern T0* ge944ov23199;
extern T0* ge944ov22984;
extern T0* ge944ov23363;
extern T0* ge944ov22985;
extern T0* ge944ov23424;
extern T0* ge944ov23226;
extern T0* ge944ov23046;
extern T0* ge944ov23425;
extern T0* ge944ov23047;
extern T0* ge944ov23423;
extern T0* ge944ov23045;
extern T0* ge944ov23426;
extern T0* ge944ov23227;
extern T0* ge944ov23048;
extern T0* ge944ov23445;
extern T0* ge944ov23240;
extern T0* ge944ov23067;
extern T0* ge944ov23444;
extern T0* ge944ov23239;
extern T0* ge944ov23066;
extern T0* ge944ov23305;
extern T0* ge944ov23170;
extern T0* ge944ov22927;
extern T0* ge945ov6657;
extern T0* ge944ov23400;
extern T0* ge944ov23022;
extern T0* ge944ov23402;
extern T0* ge944ov23024;
extern T0* ge944ov23395;
extern T0* ge944ov23017;
extern T0* ge944ov23393;
extern T0* ge944ov23212;
extern T0* ge944ov23015;
extern T0* ge944ov23399;
extern T0* ge944ov23021;
extern T0* ge944ov23326;
extern T0* ge944ov22948;
extern T0* ge944ov23427;
extern T0* ge944ov23049;
extern T0* ge944ov23503;
extern T0* ge944ov23125;
extern T0* ge944ov23319;
extern T0* ge944ov22941;
extern T0* ge944ov23317;
extern T0* ge944ov22939;
extern T0* ge944ov23316;
extern T0* ge944ov22938;
extern T0* ge944ov23522;
extern T0* ge944ov23280;
extern T0* ge944ov23144;
extern T0* ge945ov6638;
extern T0* ge848ov21865;
extern T0* ge851ov20937;
extern T0* ge827ov20969;
extern T0* ge855ov18273;
extern T0* ge1215ov9561;
extern T0* ge1196ov18528;
extern T0* ge1196ov18527;
extern T0* ge410ov8661;
extern T0* ge306ov8661;
extern T0* ge297ov8661;
extern T0* ge773ov21587;
extern T0* ge769ov12983;
extern T0* ge769ov12964;
extern T0* ge769ov12980;
extern T0* ge769ov12968;
extern T0* ge769ov12969;
extern T0* ge769ov12970;
extern T0* ge769ov12971;
extern T0* ge769ov12965;
extern T0* ge769ov12972;
extern T0* ge769ov12973;
extern T0* ge769ov12974;
extern T0* ge769ov12975;
extern T0* ge769ov12966;
extern T0* ge769ov12981;
extern T0* ge769ov12976;
extern T0* ge769ov12977;
extern T0* ge769ov12978;
extern T0* ge769ov12967;
extern T0* ge769ov12979;
extern T0* ge769ov12982;
extern T0* ge1262ov23723;
extern T0* ge1262ov23725;
extern T0* ge769ov12960;
extern T0* ge769ov12959;
extern T0* ge769ov12947;
extern T0* ge769ov12948;
extern T0* ge769ov12949;
extern T0* ge769ov12950;
extern T0* ge769ov12951;
extern T0* ge769ov12952;
extern T0* ge769ov12953;
extern T0* ge769ov12954;
extern T0* ge769ov12955;
extern T0* ge769ov12956;
extern T0* ge769ov12957;
extern T0* ge769ov12958;
extern T0* ge769ov12962;
extern T0* ge769ov12963;
extern T0* ge769ov12943;
extern T0* ge769ov12944;
extern T0* ge769ov12945;
extern T0* ge769ov12946;
extern T0* ge769ov12961;
extern T0* ge795ov19910;
extern T0* ge795ov19909;
extern T0* ge800ov21680;
extern T0* ge810ov21572;
extern T0* ge1012ov8531;
extern T0* ge1009ov8531;
extern T0* ge1003ov8531;
extern T0* ge1019ov8531;
extern T0* ge1016ov8531;
extern T0* ge1015ov8531;
extern T0* ge1011ov8531;
extern T0* ge1018ov8531;
extern T0* ge1010ov8531;
extern T0* ge1022ov8531;
extern T0* ge1006ov8531;
extern T0* ge1017ov8531;
extern T0* ge1021ov8531;
extern T0* ge1013ov8531;
extern T0* ge1004ov8531;
extern T0* ge223ov8531;
extern T0* ge226ov8531;
extern T0* ge222ov8531;
extern T0* ge404ov23791;
extern T0* ge391ov1678;
extern EIF_TYPE getypes[];
#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void file_mkdir(char* dirname);
extern void file_rename(char* from, char* to);
extern void file_link(char *from, char *to);
extern void file_unlink(char *name);
extern EIF_POINTER file_open(char *name, int how);
extern EIF_POINTER file_dopen(int fd, int how);
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);
extern void file_close(FILE *fp);
extern void file_flush(FILE *fp);
extern EIF_INTEGER file_fd(FILE *f);
extern EIF_CHARACTER file_gc(FILE *f);
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_CHARACTER file_lh(FILE *f);
extern EIF_INTEGER eif_file_size(FILE *fp);
extern void file_tnil(FILE *f);
extern EIF_INTEGER file_tell(FILE *f);
extern void file_touch(char *name);
extern void file_utime(char *name, time_t stamp, int how);
extern void file_stat(char *path, struct stat *buf);
extern void file_perm(char *name, char *who, char *what, int flag);
extern void file_chmod(char *path, int mode);
extern void file_chown(char *name, int uid);
extern void file_chgrp(char *name, int gid);
extern void file_tnwl(FILE *f);
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);
extern void file_pc(FILE *f, char c);
extern void file_go(FILE *f, EIF_INTEGER pos);
extern void file_recede(FILE *f, EIF_INTEGER pos);
extern void file_move(FILE *f, EIF_INTEGER pos);
extern EIF_BOOLEAN file_feof(FILE *fp);
extern EIF_BOOLEAN file_exists(char *name);
extern EIF_BOOLEAN file_path_exists(char *name);
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);
extern EIF_INTEGER file_gi(FILE *f);
extern EIF_REAL_32 file_gr(FILE *f);
extern EIF_REAL_64 file_gd(FILE *f);
extern void file_pi(FILE *f, EIF_INTEGER number);
extern void file_pr(FILE *f, EIF_REAL_32 number);
extern void file_pd(FILE *f, EIF_REAL_64 val);
extern EIF_INTEGER stat_size(void);
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);
extern EIF_INTEGER file_info(struct stat *buf, int op);
extern EIF_REFERENCE file_owner(int uid);
extern EIF_REFERENCE file_group(int gid);
extern EIF_INTEGER file_gib(FILE* f);
extern EIF_REAL_32 file_grb(FILE* f);
extern EIF_REAL_64 file_gdb(FILE* f);
extern EIF_POINTER file_binary_open(char* name, int how);
extern EIF_POINTER file_binary_dopen(int fd, int how);
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);
extern void file_pib(FILE* f, EIF_INTEGER number);
extern void file_prb(FILE* f, EIF_REAL_32 number);
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/* OpenBSD does not support 'ftime' unless -lcompat is specified. */
/* Use the recommended XSI (X/Open System Interface) extension instead. */
#include <sys/time.h>
#include <sys/types.h>
#define geftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define getimebsz sizeof(struct timeval)
#define getimebmillitm(p) ((struct timeval*)(p))->tv_usec
#define getimebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
#define geftime(p) ftime((struct timeb*)(p))
#define getimebsz sizeof(struct timeb)
#define getimebmillitm(p) ((struct timeb*)(p))->millitm
#define getimebtime(p) ((struct timeb*)(p))->time
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
