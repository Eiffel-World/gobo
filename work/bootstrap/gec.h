/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#define WIN32 1
#define EIF_WINDOWS 1
#endif
#ifdef WIN32
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
#define EIF_REFERENCE EIF_ANY*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define geint8(x) x
#define genat8(x) x
#define geint16(x) x
#define genat16(x) x
#define geint32(x) x##L
#define genat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else /* ISO C 99 */
#define geint64(x) x##LL
#define genat64(x) x##ULL
#endif 
#endif 

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Interoperability with ISE.
 */

#define RTI64C(x) geint64(x)
#define EIF_PROCEDURE EIF_POINTER
#define INTEGER EIF_INTEGER_32
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int geargc;
extern char** geargv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define gejmp_buf sigjmp_buf
#define gesetjmp(x) sigsetjmp((x),1)
#define gelongjmp(x,y) siglongjmp((x),(y))
#else
#define gejmp_buf jmp_buf
#define gesetjmp(x) setjmp((x))
#define gelongjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Context of features containing a rescue clause.
*/
struct gerescue {
	gejmp_buf jb;
	struct gerescue *previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern struct gerescue *gerescue;

extern void geraise(int code);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used when there is no garbage collector"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NO_GC_H
#define GE_NO_GC_H

/* GC initialization */
#define geinit_gc() /* do nothing */

/* Memory allocation */
#define gealloc(x) calloc((x),1)
#define gealloc_atomic(x) calloc((x),1)

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* geboxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* geboxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* geboxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* geboxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* geboxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* geboxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* geboxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* geboxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* geboxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* geboxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* geboxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* geboxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* geboxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* geboxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_ERROR */
typedef struct S32 T32;

/* AP_FLAG */
typedef struct S33 T33;

/* AP_BOOLEAN_OPTION */
typedef struct S35 T35;

/* AP_INTEGER_OPTION */
typedef struct S36 T36;

/* AP_ENUMERATION_OPTION */
typedef struct S37 T37;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S41 T41;

/* ET_XACE_UNIVERSE_PARSER */
typedef struct S43 T43;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S44 T44;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S45 T45;

/* ST_SPLITTER */
typedef struct S46 T46;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S48 T48;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S49 T49;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S50 T50;

/* ET_XACE_UNIVERSE */
typedef struct S53 T53;

/* ET_LACE_PARSER */
typedef struct S54 T54;

/* ET_LACE_ERROR_HANDLER */
typedef struct S55 T55;

/* ET_LACE_UNIVERSE */
typedef struct S56 T56;

/* ET_NULL_ERROR_HANDLER */
typedef struct S57 T57;

/* ET_SYSTEM */
typedef struct S58 T58;

/* ET_CLASS */
typedef struct S60 T60;

/* ET_C_GENERATOR */
typedef struct S61 T61;

/* KL_SHELL_COMMAND */
typedef struct S62 T62;

/* UT_VERSION */
typedef struct S63 T63;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S64 T64;

/* KL_OPERATING_SYSTEM */
typedef struct S65 T65;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S67 T67;

/* UT_VERSION_NUMBER */
typedef struct S68 T68;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S69 T69;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S70 T70;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S71 T71;

/* TYPED_POINTER [ANY] */
typedef struct S73 T73;

/* KL_STANDARD_FILES */
typedef struct S75 T75;

/* KL_STDERR_FILE */
typedef struct S76 T76;

/* KL_STDOUT_FILE */
typedef struct S77 T77;

/* UC_STRING */
typedef struct S78 T78;

/* KL_ANY_ROUTINES */
typedef struct S79 T79;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S80 T80;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S81 T81;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S82 T82;

/* AP_ERROR_HANDLER */
typedef struct S83 T83;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S84 T84;

/* SPECIAL [STRING_8] */
typedef struct S85 T85;

/* ARRAY [STRING_8] */
typedef struct S86 T86;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S89 T89;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S92 T92;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S94 T94;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S95 T95;

/* ST_WORD_WRAPPER */
typedef struct S96 T96;

/* ET_XACE_AST_FACTORY */
typedef struct S97 T97;

/* XM_DOCUMENT */
typedef struct S98 T98;

/* XM_ELEMENT */
typedef struct S99 T99;

/* XM_POSITION_TABLE */
typedef struct S100 T100;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S102 T102;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S103 T103;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S104 T104;

/* ET_XACE_VALIDATOR */
typedef struct S105 T105;

/* ET_XACE_PREPROCESSOR */
typedef struct S106 T106;

/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8] */
typedef struct S107 T107;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S108 T108;

/* ET_XACE_LIBRARY_PARSER */
typedef struct S109 T109;

/* XM_EIFFEL_PARSER */
typedef struct S110 T110;

/* UT_MESSAGE */
typedef struct S113 T113;

/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
typedef struct S114 T114;

/* SPECIAL [INTEGER_32] */
typedef struct S116 T116;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S117 T117;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S118 T118;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S119 T119;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S120 T120;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S121 T121;

/* EXECUTION_ENVIRONMENT */
typedef struct S122 T122;

/* ET_LACE_AST_FACTORY */
typedef struct S123 T123;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S124 T124;

/* YY_FILE_BUFFER */
typedef struct S125 T125;

/* YY_BUFFER */
typedef struct S126 T126;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S127 T127;

/* SPECIAL [ANY] */
typedef struct S129 T129;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S130 T130;

/* ET_IDENTIFIER */
typedef struct S131 T131;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S132 T132;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S133 T133;

/* ET_LACE_CLUSTERS */
typedef struct S134 T134;

/* ET_LACE_CLUSTER */
typedef struct S135 T135;

/* ET_LACE_EXCLUDE */
typedef struct S136 T136;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S137 T137;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S138 T138;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S139 T139;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S140 T140;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S141 T141;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S142 T142;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S143 T143;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S144 T144;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S145 T145;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S146 T146;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S147 T147;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S148 T148;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S149 T149;

/* KL_PLATFORM */
typedef struct S150 T150;

/* KL_INTEGER_ROUTINES */
typedef struct S151 T151;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S152 T152;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S153 T153;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S154 T154;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S155 T155;

/* ET_DYNAMIC_TYPE */
typedef struct S156 T156;

/* ET_QUERY_LIST */
typedef struct S158 T158;

/* ET_PROCEDURE_LIST */
typedef struct S160 T160;

/* ET_DYNAMIC_FEATURE */
typedef struct S162 T162;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S163 T163;

/* DT_DATE_TIME */
typedef struct S164 T164;

/* DT_SYSTEM_CLOCK */
typedef struct S165 T165;

/* ET_TOKEN_CONSTANTS */
typedef struct S169 T169;

/* ET_EIFFEL_PARSER */
typedef struct S170 T170;

/* ET_CLASS_TYPE */
typedef struct S171 T171;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S172 T172;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S173 T173;

/* ET_EXTERNAL_FUNCTION */
typedef struct S175 T175;

/* ET_KEYWORD */
typedef struct S178 T178;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S180 T180;

/* ET_TYPE_CHECKER */
typedef struct S181 T181;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S182 T182;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S183 T183;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S184 T184;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S185 T185;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S186 T186;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S187 T187;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S188 T188;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S189 T189;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S192 T192;

/* ET_CURRENT */
typedef struct S194 T194;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S195 T195;

/* ET_CALL_INSTRUCTION */
typedef struct S196 T196;

/* ET_CALL_EXPRESSION */
typedef struct S198 T198;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S199 T199;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S200 T200;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S201 T201;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S202 T202;

/* DS_HASH_SET [ET_INLINE_CONSTANT] */
typedef struct S203 T203;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S204 T204;

/* DS_HASH_SET [STRING_8] */
typedef struct S205 T205;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S206 T206;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S207 T207;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S208 T208;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S209 T209;

/* UT_TEMPLATE_EXPANDER */
typedef struct S210 T210;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S211 T211;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S212 T212;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S213 T213;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S214 T214;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S215 T215;

/* ET_RESULT */
typedef struct S216 T216;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S217 T217;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S219 T219;

/* ET_FORMAL_ARGUMENT */
typedef struct S224 T224;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S225 T225;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S227 T227;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S229 T229;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S233 T233;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S234 T234;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S235 T235;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S236 T236;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S238 T238;

/* ET_ATTRIBUTE */
typedef struct S239 T239;

/* UT_INTEGER_FORMATTER */
typedef struct S247 T247;

/* DS_CELL [INTEGER_32] */
typedef struct S248 T248;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S250 T250;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S251 T251;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S252 T252;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S253 T253;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S254 T254;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S255 T255;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S256 T256;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S257 T257;

/* UNIX_FILE_INFO */
typedef struct S259 T259;

/* ET_AST_FACTORY */
typedef struct S261 T261;

/* ET_XACE_EXTERNALS */
typedef struct S262 T262;

/* ET_XACE_CLUSTERS */
typedef struct S263 T263;

/* ET_XACE_CLUSTER */
typedef struct S266 T266;

/* ET_XACE_OPTIONS */
typedef struct S267 T267;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S268 T268;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S269 T269;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S270 T270;

/* XM_ATTRIBUTE */
typedef struct S271 T271;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S272 T272;

/* ET_XACE_LIBRARY */
typedef struct S274 T274;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S275 T275;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S278 T278;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S279 T279;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S280 T280;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S281 T281;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S282 T282;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S283 T283;

/* ET_CLASS_NAME_TESTER */
typedef struct S284 T284;

/* ET_AST_NULL_PROCESSOR */
typedef struct S286 T286;

/* ET_FEATURE_FLATTENER */
typedef struct S287 T287;

/* ET_INTERFACE_CHECKER */
typedef struct S288 T288;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S289 T289;

/* ET_PROVIDER_CHECKER */
typedef struct S290 T290;

/* ET_ANCESTOR_BUILDER */
typedef struct S291 T291;

/* DT_DATE_TIME_DURATION */
typedef struct S295 T295;

/* ET_EIFFEL_PREPARSER */
typedef struct S296 T296;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S297 T297;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S298 T298;

/* ET_NONE_GROUP */
typedef struct S299 T299;

/* ET_PARENT */
typedef struct S300 T300;

/* ET_TUPLE_TYPE */
typedef struct S301 T301;

/* ET_RENAME_LIST */
typedef struct S302 T302;

/* ET_EXPORT_LIST */
typedef struct S303 T303;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S304 T304;

/* ET_PARENT_LIST */
typedef struct S305 T305;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S307 T307;

/* ARRAY [INTEGER_32] */
typedef struct S308 T308;

/* ET_BASE_TYPE_LIST */
typedef struct S309 T309;

/* ET_DO_PROCEDURE */
typedef struct S310 T310;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S312 T312;

/* ET_DEFERRED_PROCEDURE */
typedef struct S315 T315;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S316 T316;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S317 T317;

/* SPECIAL [AP_OPTION] */
typedef struct S319 T319;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S320 T320;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S321 T321;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S322 T322;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S323 T323;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S324 T324;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S325 T325;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S326 T326;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S327 T327;

/* DS_LINKABLE [STRING_8] */
typedef struct S328 T328;

/* XM_NAMESPACE_RESOLVER */
typedef struct S329 T329;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S330 T330;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S331 T331;

/* XM_CALLBACKS_NULL */
typedef struct S332 T332;

/* ET_XACE_OPTION_NAMES */
typedef struct S333 T333;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8] */
typedef struct S336 T336;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8] */
typedef struct S338 T338;

/* SPECIAL [ET_XACE_LIBRARY] */
typedef struct S339 T339;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
typedef struct S340 T340;

/* XM_EIFFEL_SCANNER */
typedef struct S341 T341;

/* XM_DEFAULT_POSITION */
typedef struct S342 T342;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S344 T344;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S345 T345;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S346 T346;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S348 T348;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S349 T349;

/* XM_EIFFEL_DECLARATION */
typedef struct S350 T350;

/* XM_DTD_EXTERNAL_ID */
typedef struct S351 T351;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S352 T352;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S353 T353;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S354 T354;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S355 T355;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S356 T356;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S357 T357;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S358 T358;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S359 T359;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S360 T360;

/* SPECIAL [BOOLEAN] */
typedef struct S361 T361;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S362 T362;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S363 T363;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S364 T364;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S365 T365;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S366 T366;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S367 T367;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S369 T369;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S371 T371;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S372 T372;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S373 T373;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S374 T374;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S375 T375;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S376 T376;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S377 T377;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S379 T379;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S380 T380;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S382 T382;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
typedef struct S383 T383;

/* TO_SPECIAL [INTEGER_32] */
typedef struct S384 T384;

/* TO_SPECIAL [STRING_8] */
typedef struct S385 T385;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S386 T386;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S388 T388;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S390 T390;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S392 T392;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S393 T393;

/* TO_SPECIAL [ANY] */
typedef struct S394 T394;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S395 T395;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S396 T396;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S397 T397;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S398 T398;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S399 T399;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S400 T400;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S401 T401;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S402 T402;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S404 T404;

/* SPECIAL [ET_CLASS] */
typedef struct S406 T406;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S407 T407;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S408 T408;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S409 T409;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S410 T410;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S411 T411;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S412 T412;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S413 T413;

/* MANAGED_POINTER */
typedef struct S414 T414;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S415 T415;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S416 T416;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S417 T417;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S418 T418;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S419 T419;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S420 T420;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S421 T421;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S422 T422;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S424 T424;

/* KL_DIRECTORY */
typedef struct S426 T426;

/* KL_EIFFEL_COMPILER */
typedef struct S427 T427;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S428 T428;

/* ET_CLASS_NAME_LIST */
typedef struct S430 T430;

/* ET_CLIENTS */
typedef struct S431 T431;

/* ET_FEATURE_CLAUSE */
typedef struct S432 T432;

/* SPECIAL [ET_KEYWORD] */
typedef struct S434 T434;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S435 T435;

/* ET_AGENT_KEYWORD */
typedef struct S436 T436;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S437 T437;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S438 T438;

/* ET_PRECURSOR_KEYWORD */
typedef struct S439 T439;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S440 T440;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S441 T441;

/* ET_SYMBOL */
typedef struct S442 T442;

/* SPECIAL [ET_SYMBOL] */
typedef struct S443 T443;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S444 T444;

/* SPECIAL [ET_POSITION] */
typedef struct S445 T445;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S446 T446;

/* ET_BIT_CONSTANT */
typedef struct S447 T447;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S448 T448;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S449 T449;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S451 T451;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S452 T452;

/* SPECIAL [ET_BREAK] */
typedef struct S454 T454;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S455 T455;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S457 T457;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S458 T458;

/* SPECIAL [ET_CURRENT] */
typedef struct S459 T459;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S460 T460;

/* ET_FREE_OPERATOR */
typedef struct S461 T461;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S462 T462;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S463 T463;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S465 T465;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S466 T466;

/* ET_KEYWORD_OPERATOR */
typedef struct S467 T467;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S468 T468;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S469 T469;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S470 T470;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S471 T471;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S473 T473;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S474 T474;

/* SPECIAL [ET_RESULT] */
typedef struct S475 T475;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S476 T476;

/* ET_RETRY_INSTRUCTION */
typedef struct S477 T477;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S478 T478;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S479 T479;

/* ET_SYMBOL_OPERATOR */
typedef struct S480 T480;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S481 T481;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S482 T482;

/* ET_VOID */
typedef struct S483 T483;

/* SPECIAL [ET_VOID] */
typedef struct S484 T484;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S485 T485;

/* ET_SEMICOLON_SYMBOL */
typedef struct S486 T486;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S487 T487;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S488 T488;

/* ET_BRACKET_SYMBOL */
typedef struct S489 T489;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S490 T490;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S491 T491;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S492 T492;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S493 T493;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S494 T494;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S495 T495;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S496 T496;

/* ET_VERBATIM_STRING */
typedef struct S497 T497;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S498 T498;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S499 T499;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S500 T500;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S501 T501;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S502 T502;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S503 T503;

/* ET_TRUE_CONSTANT */
typedef struct S505 T505;

/* ET_FALSE_CONSTANT */
typedef struct S506 T506;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S507 T507;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S508 T508;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S510 T510;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S512 T512;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S513 T513;

/* ET_CREATOR_LIST */
typedef struct S514 T514;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S515 T515;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S516 T516;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S517 T517;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S518 T518;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S519 T519;

/* ET_INVARIANTS */
typedef struct S520 T520;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S521 T521;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S522 T522;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S524 T524;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S526 T526;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S528 T528;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S532 T532;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S533 T533;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S535 T535;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S536 T536;

/* ET_CREATE_EXPRESSION */
typedef struct S537 T537;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S538 T538;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S539 T539;

/* ET_MANIFEST_TUPLE */
typedef struct S540 T540;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S541 T541;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S542 T542;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S543 T543;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S544 T544;

/* ET_FORMAL_PARAMETER */
typedef struct S545 T545;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S546 T546;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S549 T549;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S551 T551;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S552 T552;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S553 T553;

/* ET_CONSTRAINT_CREATOR */
typedef struct S554 T554;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S555 T555;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S556 T556;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S558 T558;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S559 T559;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S560 T560;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S561 T561;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S562 T562;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S564 T564;

/* ET_BIT_N */
typedef struct S565 T565;

/* ET_BIT_FEATURE */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S567 T567;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S569 T569;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S571 T571;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S572 T572;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S573 T573;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S574 T574;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S575 T575;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S576 T576;

/* SPECIAL [ET_PARENT] */
typedef struct S577 T577;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S578 T578;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S579 T579;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S580 T580;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S581 T581;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S582 T582;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S584 T584;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S586 T586;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S587 T587;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S588 T588;

/* ET_RENAME */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S590 T590;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S591 T591;

/* SPECIAL [ET_EXPORT] */
typedef struct S593 T593;

/* SPECIAL [ET_CLIENTS] */
typedef struct S594 T594;

/* ET_ALL_EXPORT */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S596 T596;

/* ET_FEATURE_EXPORT */
typedef struct S597 T597;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S600 T600;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S601 T601;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S603 T603;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S604 T604;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S605 T605;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S606 T606;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S607 T607;

/* ET_CREATOR */
typedef struct S608 T608;

/* SPECIAL [ET_CREATOR] */
typedef struct S609 T609;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S610 T610;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S611 T611;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S613 T613;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S615 T615;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S616 T616;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S618 T618;

/* ET_CONVERT_FUNCTION */
typedef struct S619 T619;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S620 T620;

/* ET_CONVERT_PROCEDURE */
typedef struct S621 T621;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S622 T622;

/* SPECIAL [ET_TYPE] */
typedef struct S623 T623;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S625 T625;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S626 T626;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S627 T627;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S628 T628;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S629 T629;

/* SPECIAL [ET_QUERY] */
typedef struct S630 T630;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S631 T631;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S634 T634;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S635 T635;

/* SPECIAL [ET_CONSTANT] */
typedef struct S636 T636;

/* ET_PRECONDITIONS */
typedef struct S638 T638;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S639 T639;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S640 T640;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S641 T641;

/* ET_COMPOUND */
typedef struct S642 T642;

/* SPECIAL [ET_COMPOUND] */
typedef struct S643 T643;

/* ET_POSTCONDITIONS */
typedef struct S644 T644;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S645 T645;

/* ET_DO_FUNCTION */
typedef struct S646 T646;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S647 T647;

/* ET_ONCE_FUNCTION */
typedef struct S648 T648;

/* ET_DEFERRED_FUNCTION */
typedef struct S649 T649;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S652 T652;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S653 T653;

/* ET_ONCE_PROCEDURE */
typedef struct S654 T654;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S655 T655;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S656 T656;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S658 T658;

/* ET_PREFIX_NAME */
typedef struct S659 T659;

/* ET_PREFIX_FREE_NAME */
typedef struct S660 T660;

/* ET_INFIX_NAME */
typedef struct S661 T661;

/* ET_INFIX_FREE_NAME */
typedef struct S662 T662;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S663 T663;

/* ET_ALIAS_NAME */
typedef struct S664 T664;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S665 T665;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S666 T666;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S667 T667;

/* ET_ALIAS_FREE_NAME */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S669 T669;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S671 T671;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S675 T675;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S676 T676;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S678 T678;

/* ET_LOCAL_VARIABLE */
typedef struct S679 T679;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S680 T680;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S683 T683;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S684 T684;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S686 T686;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S687 T687;

/* ET_LOOP_INVARIANTS */
typedef struct S688 T688;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S690 T690;

/* ET_VARIANT */
typedef struct S691 T691;

/* SPECIAL [ET_VARIANT] */
typedef struct S692 T692;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S693 T693;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S694 T694;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S695 T695;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S696 T696;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S697 T697;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S699 T699;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S700 T700;

/* ET_LIKE_FEATURE */
typedef struct S702 T702;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S703 T703;

/* ET_LIKE_CURRENT */
typedef struct S704 T704;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S706 T706;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S707 T707;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S708 T708;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S710 T710;

/* ET_BRACKET_EXPRESSION */
typedef struct S711 T711;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S712 T712;

/* SPECIAL [ET_WRITABLE] */
typedef struct S713 T713;

/* ET_ASSIGNMENT */
typedef struct S714 T714;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S715 T715;

/* ET_IF_INSTRUCTION */
typedef struct S716 T716;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S717 T717;

/* ET_INSPECT_INSTRUCTION */
typedef struct S718 T718;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S719 T719;

/* ET_LOOP_INSTRUCTION */
typedef struct S721 T721;

/* ET_DEBUG_INSTRUCTION */
typedef struct S722 T722;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S723 T723;

/* ET_CHECK_INSTRUCTION */
typedef struct S724 T724;

/* ET_BANG_INSTRUCTION */
typedef struct S726 T726;

/* ET_QUALIFIED_CALL */
typedef struct S727 T727;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S728 T728;

/* ET_CREATE_INSTRUCTION */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S731 T731;

/* ET_ELSEIF_PART_LIST */
typedef struct S732 T732;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S733 T733;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S734 T734;

/* ET_ELSEIF_PART */
typedef struct S735 T735;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S737 T737;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S738 T738;

/* ET_WHEN_PART_LIST */
typedef struct S739 T739;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S740 T740;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S742 T742;

/* ET_WHEN_PART */
typedef struct S743 T743;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S744 T744;

/* ET_CHOICE_LIST */
typedef struct S745 T745;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S746 T746;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S747 T747;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S748 T748;

/* SPECIAL [ET_CHOICE] */
typedef struct S750 T750;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S752 T752;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S753 T753;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S755 T755;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S756 T756;

/* ET_CHOICE_RANGE */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S758 T758;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S759 T759;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S760 T760;

/* ET_MANIFEST_STRING_LIST */
typedef struct S761 T761;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S763 T763;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S764 T764;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S766 T766;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S767 T767;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S768 T768;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S770 T770;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S771 T771;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S772 T772;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S773 T773;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S774 T774;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S775 T775;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S776 T776;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S777 T777;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S778 T778;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S779 T779;

/* ET_FEATURE_ADDRESS */
typedef struct S780 T780;

/* ET_CURRENT_ADDRESS */
typedef struct S781 T781;

/* ET_RESULT_ADDRESS */
typedef struct S782 T782;

/* ET_EXPRESSION_ADDRESS */
typedef struct S783 T783;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S784 T784;

/* ET_INFIX_EXPRESSION */
typedef struct S785 T785;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S787 T787;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S788 T788;

/* ET_EQUALITY_EXPRESSION */
typedef struct S789 T789;

/* ET_PREFIX_EXPRESSION */
typedef struct S790 T790;

/* ET_OLD_EXPRESSION */
typedef struct S791 T791;

/* ET_CALL_AGENT */
typedef struct S792 T792;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S793 T793;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S795 T795;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S796 T796;

/* ET_MANIFEST_ARRAY */
typedef struct S797 T797;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S798 T798;

/* ET_STRIP_EXPRESSION */
typedef struct S799 T799;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S800 T800;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S801 T801;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S802 T802;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S803 T803;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S804 T804;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S805 T805;

/* ET_MANIFEST_TYPE */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S807 T807;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S808 T808;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S809 T809;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S810 T810;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S811 T811;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S813 T813;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S814 T814;

/* ET_AGENT_OPEN_TARGET */
typedef struct S815 T815;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S816 T816;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S817 T817;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S818 T818;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S819 T819;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S820 T820;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S821 T821;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S822 T822;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S823 T823;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S824 T824;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S825 T825;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S827 T827;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S828 T828;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S829 T829;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S830 T830;

/* ET_TAGGED_ASSERTION */
typedef struct S832 T832;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S835 T835;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S836 T836;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S839 T839;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S840 T840;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S841 T841;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S843 T843;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S845 T845;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S847 T847;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S848 T848;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S849 T849;

/* SPECIAL [ET_AGENT] */
typedef struct S850 T850;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S851 T851;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S852 T852;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S854 T854;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S855 T855;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S856 T856;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S857 T857;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S858 T858;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S860 T860;

/* SPECIAL [ET_FEATURE] */
typedef struct S861 T861;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S862 T862;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S864 T864;

/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
typedef struct S866 T866;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S867 T867;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S868 T868;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S869 T869;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S870 T870;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S871 T871;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S872 T872;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
typedef struct S874 T874;

/* RX_BYTE_CODE */
typedef struct S877 T877;

/* RX_CASE_MAPPING */
typedef struct S878 T878;

/* RX_CHARACTER_SET */
typedef struct S879 T879;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S881 T881;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S882 T882;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S883 T883;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
typedef struct S884 T884;

/* ARRAY [BOOLEAN] */
typedef struct S885 T885;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S888 T888;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S889 T889;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S890 T890;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S891 T891;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S892 T892;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S893 T893;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S894 T894;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S895 T895;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S896 T896;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S897 T897;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S898 T898;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S899 T899;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S900 T900;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S901 T901;

/* C_STRING */
typedef struct S904 T904;

/* ET_SYSTEM_ERROR */
typedef struct S905 T905;

/* ET_INTERNAL_ERROR */
typedef struct S906 T906;

/* ET_VALIDITY_ERROR */
typedef struct S907 T907;

/* ET_CLUSTER_ERROR */
typedef struct S908 T908;

/* ET_SYNTAX_ERROR */
typedef struct S909 T909;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S910 T910;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S911 T911;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S912 T912;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S913 T913;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S914 T914;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S915 T915;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S916 T916;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S917 T917;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S918 T918;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S919 T919;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S920 T920;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S921 T921;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S923 T923;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S924 T924;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S925 T925;

/* UC_UTF8_ROUTINES */
typedef struct S926 T926;

/* UC_UTF8_STRING */
typedef struct S927 T927;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S928 T928;

/* KL_CHARACTER_BUFFER */
typedef struct S929 T929;

/* KL_CHARACTER_ROUTINES */
typedef struct S930 T930;

/* KL_STDIN_FILE */
typedef struct S931 T931;

/* ET_FILE_POSITION */
typedef struct S932 T932;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S934 T934;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S936 T936;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S938 T938;

/* ARRAY [ET_TYPE] */
typedef struct S939 T939;

/* TYPED_POINTER [SPECIAL [CHARACTER_8]] */
typedef struct S942 T942;

/* ET_BRACED_TYPE_LIST */
typedef struct S943 T943;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S944 T944;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S945 T945;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S946 T946;

/* ET_KEYWORD_EXPRESSION */
typedef struct S947 T947;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S949 T949;

/* UT_TRISTATE */
typedef struct S950 T950;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S951 T951;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S952 T952;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S953 T953;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
typedef struct S954 T954;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S956 T956;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S958 T958;

/* ET_FEATURE_NAME_TESTER */
typedef struct S959 T959;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S961 T961;

/* ET_ALIAS_NAME_TESTER */
typedef struct S962 T962;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S964 T964;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S965 T965;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S966 T966;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S967 T967;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S968 T968;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S969 T969;

/* ET_SIGNATURE_CHECKER */
typedef struct S970 T970;

/* ET_PARENT_CHECKER2 */
typedef struct S971 T971;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S972 T972;

/* ET_PRECURSOR_CHECKER */
typedef struct S973 T973;

/* ET_PARENT_CHECKER3 */
typedef struct S974 T974;

/* ET_FEATURE_CHECKER */
typedef struct S975 T975;

/* ET_SUPPLIER_BUILDER */
typedef struct S976 T976;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S977 T977;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
typedef struct S978 T978;

/* ET_PARENT_CHECKER1 */
typedef struct S979 T979;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S980 T980;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S985 T985;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S986 T986;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S987 T987;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S988 T988;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S989 T989;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S991 T991;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8] */
typedef struct S992 T992;

/* TO_SPECIAL [ET_XACE_LIBRARY] */
typedef struct S993 T993;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S994 T994;

/* DS_LINKED_STACK [INTEGER_32] */
typedef struct S995 T995;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S996 T996;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S997 T997;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S998 T998;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S999 T999;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1000 T1000;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1002 T1002;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1004 T1004;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1005 T1005;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1006 T1006;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1007 T1007;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1008 T1008;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1009 T1009;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1010 T1010;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1011 T1011;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S1012 T1012;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S1013 T1013;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S1014 T1014;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S1015 T1015;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1016 T1016;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S1017 T1017;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1018 T1018;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S1019 T1019;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S1020 T1020;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S1022 T1022;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1023 T1023;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S1024 T1024;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S1026 T1026;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S1027 T1027;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1028 T1028;

/* EXCEPTIONS */
typedef struct S1029 T1029;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1030 T1030;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1031 T1031;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1032 T1032;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1033 T1033;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1034 T1034;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1035 T1035;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1036 T1036;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1037 T1037;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1039 T1039;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1040 T1040;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1041 T1041;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1042 T1042;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1043 T1043;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1044 T1044;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1045 T1045;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1046 T1046;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1047 T1047;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1048 T1048;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1049 T1049;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1050 T1050;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1051 T1051;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1052 T1052;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1053 T1053;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1054 T1054;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1055 T1055;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1056 T1056;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1057 T1057;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1058 T1058;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1059 T1059;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1060 T1060;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1062 T1062;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1063 T1063;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1064 T1064;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1065 T1065;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1066 T1066;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1067 T1067;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1068 T1068;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1069 T1069;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1070 T1070;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1072 T1072;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1073 T1073;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1074 T1074;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1075 T1075;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1076 T1076;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1077 T1077;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1078 T1078;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1079 T1079;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1080 T1080;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1081 T1081;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1104 T1104;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1107 T1107;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1113 T1113;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1119 T1119;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1122 T1122;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1128 T1128;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1129 T1129;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1132 T1132;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1133 T1133;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1134 T1134;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1138 T1138;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1139 T1139;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1140 T1140;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1141 T1141;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1142 T1142;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1143 T1143;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1144 T1144;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1145 T1145;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1146 T1146;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1147 T1147;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1148 T1148;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1149 T1149;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1150 T1150;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1151 T1151;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1152 T1152;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1153 T1153;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1154 T1154;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1156 T1156;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1157 T1157;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1158 T1158;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1159 T1159;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1160 T1160;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1161 T1161;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1162 T1162;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S1163 T1163;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1164 T1164;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1165 T1165;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1166 T1166;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1167 T1167;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1168 T1168;

/* TO_SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S1169 T1169;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1170 T1170;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
typedef struct S1171 T1171;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1172 T1172;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1174 T1174;

/* SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
typedef struct S1176 T1176;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
typedef struct S1177 T1177;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1179 T1179;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1180 T1180;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1181 T1181;

/* UC_UNICODE_ROUTINES */
typedef struct S1182 T1182;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1183 T1183;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1189 T1189;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1190 T1190;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1191 T1191;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1194 T1194;

/* UC_UTF16_ROUTINES */
typedef struct S1195 T1195;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1196 T1196;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1197 T1197;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1198 T1198;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1199 T1199;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1201 T1201;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1203 T1203;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1204 T1204;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1206 T1206;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1207 T1207;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1209 T1209;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S1210 T1210;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1211 T1211;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1212 T1212;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1213 T1213;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1214 T1214;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1215 T1215;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1216 T1216;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1217 T1217;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1218 T1218;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1219 T1219;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1221 T1221;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1222 T1222;

/* ET_REDECLARED_FEATURE */
typedef struct S1223 T1223;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1224 T1224;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1225 T1225;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1227 T1227;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1229 T1229;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1230 T1230;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1231 T1231;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1233 T1233;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1234 T1234;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1236 T1236;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1237 T1237;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1238 T1238;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1239 T1239;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1242 T1242;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1243 T1243;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1249 T1249;

/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1250 T1250;

/* SPECIAL [NATURAL_8] */
typedef struct S1251 T1251;

/* STRING_SEARCHER */
typedef struct S1252 T1252;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1254 T1254;

/* XM_COMMENT */
typedef struct S1255 T1255;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1256 T1256;

/* XM_CHARACTER_DATA */
typedef struct S1257 T1257;

/* XM_NAMESPACE */
typedef struct S1258 T1258;

/* ET_FEATURE_IDS */
typedef struct S1259 T1259;

/* ET_FEATURE_LIST */
typedef struct S1260 T1260;

/* ET_PARENT_FEATURE */
typedef struct S1261 T1261;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1262 T1262;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1263 T1263;

/* ET_INHERITED_FEATURE */
typedef struct S1264 T1264;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1270 T1270;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1271 T1271;

/* ET_CONVERT_EXPRESSION */
typedef struct S1274 T1274;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1275 T1275;

/* ET_COMPRESSED_POSITION */
typedef struct S1278 T1278;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1279 T1279;

/* ET_REPLICATED_FEATURE */
typedef struct S1281 T1281;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1282 T1282;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1283 T1283;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1285 T1285;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1286 T1286;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1287 T1287;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1288 T1288;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1289 T1289;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1290 T1290;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1291 T1291;

/* SPECIAL [NATURAL_64] */
typedef struct S1292 T1292;

/* ARRAY [NATURAL_64] */
typedef struct S1293 T1293;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S1294 T1294;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1296 T1296;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1297 T1297;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1298 T1298;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1299 T1299;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1300 T1300;

/* SPECIAL [ET_RENAME] */
typedef struct S1301 T1301;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1303 T1303;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1305 T1305;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1306 T1306;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1307 T1307;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1308 T1308;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1310 T1310;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1311 T1311;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1313 T1313;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1315 T1315;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1316 T1316;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1317 T1317;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1318 T1318;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1319 T1319;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1321 T1321;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1323 T1323;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1324 T1324;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1326 T1326;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1327 T1327;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
typedef struct S1328 T1328;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1330 T1330;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1331 T1331;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1332 T1332;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1333 T1333;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1336 T1336;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S1337 T1337;

/* AP_OPTION_COMPARATOR */
typedef struct S1338 T1338;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1339 T1339;

/* STD_FILES */
typedef struct S1347 T1347;

/* PLATFORM */
typedef struct S1348 T1348;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1350 T1350;

/* XM_NODE_TYPER */
typedef struct S1351 T1351;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1358 T1358;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1359 T1359;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1360 T1360;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1363 T1363;

/* KL_STRING_INPUT_STREAM */
typedef struct S1367 T1367;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1370 T1370;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1379 T1379;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1380 T1380;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1383 T1383;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1384 T1384;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1385 T1385;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1386 T1386;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1387 T1387;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1388 T1388;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1389 T1389;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1390 T1390;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1391 T1391;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1392 T1392;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1393 T1393;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1394 T1394;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1395 T1395;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1396 T1396;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1397 T1397;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1398 T1398;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1399 T1399;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1402 T1402;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1403 T1403;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1404 T1404;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1405 T1405;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1406 T1406;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1407 T1407;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1408 T1408;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1409 T1409;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1411 T1411;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1413 T1413;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1414 T1414;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1417 T1417;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1419 T1419;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S1420 T1420;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1426 T1426;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1427 T1427;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1428 T1428;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1429 T1429;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1430 T1430;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1431 T1431;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1432 T1432;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1437 T1437;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1439 T1439;

/* CONSOLE */
typedef struct S1440 T1440;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1441 T1441;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1444 T1444;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S73 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER_8]] */
struct S942 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1271 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a2; /* error_handler */
	T0* a3; /* ace_filename */
	T0* a4; /* last_universe */
	T0* a7; /* finalize_flag */
	T0* a8; /* cat_flag */
	T0* a9; /* c_compile_option */
	T0* a10; /* split_option */
	T0* a11; /* split_size_option */
	T0* a12; /* gc_option */
	T0* a13; /* silent_flag */
	T0* a14; /* verbose_flag */
	T0* a15; /* version_flag */
	T6 a16; /* split_size */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a3; /* mode */
	T0* a7; /* name */
	T0* a10; /* string_name */
	T0* a11; /* character_buffer */
	T1 a12; /* end_of_file */
	T14 a17; /* file_pointer */
	T1 a19; /* descriptor_available */
	T0* a24; /* last_string */
	T2 a26; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a6; /* warning_file */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a8; /* application_description */
	T0* a9; /* parameters_description */
	T0* a11; /* error_handler */
	T0* a14; /* argument_list */
	T0* a16; /* current_options */
	T1 a17; /* is_first_option */
	T0* a24; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a10; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S32 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a4; /* code */
};

/* Struct for type AP_FLAG */
struct S33 {
	int id;
	T6 a2; /* occurrences */
	T0* a3; /* description */
	T0* a4; /* long_form */
	T2 a5; /* short_form */
	T1 a6; /* has_short_form */
	T1 a7; /* is_mandatory */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S35 {
	int id;
	T0* a4; /* parameters */
	T0* a5; /* description */
	T0* a6; /* parameter_description */
	T0* a7; /* long_form */
	T1 a8; /* is_mandatory */
	T1 a12; /* has_short_form */
	T2 a13; /* short_form */
	T1 a14; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S36 {
	int id;
	T0* a5; /* parameters */
	T0* a9; /* long_form */
	T2 a10; /* short_form */
	T0* a11; /* description */
	T0* a12; /* parameter_description */
	T1 a13; /* is_mandatory */
	T1 a15; /* has_short_form */
	T1 a16; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S37 {
	int id;
	T0* a4; /* parameters */
	T0* a5; /* description */
	T0* a6; /* possible_values */
	T0* a7; /* parameter_description */
	T0* a8; /* long_form */
	T1 a10; /* is_mandatory */
	T1 a14; /* has_short_form */
	T2 a15; /* short_form */
	T1 a16; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S41 {
	int id;
	T0* a13; /* description */
	T2 a14; /* short_form */
	T1 a15; /* has_short_form */
	T0* a16; /* long_form */
	T6 a17; /* occurrences */
	T1 a21; /* is_hidden */
	T1 a22; /* is_mandatory */
};

/* Struct for type ET_XACE_UNIVERSE_PARSER */
struct S43 {
	int id;
	T0* a1; /* last_universe */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_preprocessor */
	T0* a11; /* parsed_libraries */
	T0* a12; /* error_handler */
	T0* a14; /* library_parser */
	T0* a18; /* eiffel_error_handler */
	T0* a19; /* eiffel_ast_factory */
	T1 a139; /* is_shallow */
	T1 a140; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S44 {
	int id;
	T6 a2; /* error_count */
	T0* a3; /* error_file */
	T0* a5; /* warning_file */
	T0* a6; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S45 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a9; /* slots_position */
	T6 a11; /* count */
	T0* a12; /* equality_tester */
	T6 a13; /* found_position */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a18; /* item_storage */
	T0* a21; /* clashes */
	T0* a22; /* slots */
	T0* a23; /* key_storage */
	T6 a24; /* free_slot */
	T0* a25; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ST_SPLITTER */
struct S46 {
	int id;
	T1 a3; /* has_escape_character */
	T2 a4; /* escape_character */
	T0* a6; /* separator_codes */
	T0* a8; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S48 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S49 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S50 {
	int id;
};

/* Struct for type ET_XACE_UNIVERSE */
struct S53 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* type_class */
	T6 a43; /* feature_count */
	T0* a44; /* system_name */
	T0* a45; /* internal_eiffel_parser */
	T0* a46; /* ast_factory */
	T1 a47; /* use_assign_keyword */
	T1 a48; /* use_attribute_keyword */
	T1 a49; /* use_convert_keyword */
	T1 a50; /* use_create_keyword */
	T1 a51; /* use_recast_keyword */
	T1 a52; /* use_reference_keyword */
	T1 a53; /* use_void_keyword */
	T1 a54; /* providers_enabled */
	T0* a55; /* clusters */
	T0* a57; /* basic_classes */
	T0* a59; /* null_processor */
	T0* a60; /* provider_checker */
	T0* a61; /* ancestor_builder */
	T0* a62; /* feature_flattener */
	T0* a63; /* implementation_checker */
	T0* a64; /* flat_implementation_checker */
	T0* a66; /* ecma_version */
	T0* a67; /* dotnet_assemblies */
	T1 a69; /* is_preparsed */
	T1 a70; /* flat_mode */
	T1 a71; /* flat_dbc_mode */
	T1 a72; /* suppliers_enabled */
	T0* a74; /* root_class_name */
	T0* a75; /* libraries */
	T0* a76; /* options */
	T0* a77; /* creation_procedure_name */
	T0* a80; /* general_class */
	T0* a81; /* tuple_class */
	T0* a82; /* bit_class */
	T0* a83; /* native_array_class */
	T0* a84; /* routine_class */
	T0* a85; /* procedure_class */
	T0* a86; /* predicate_class */
	T0* a87; /* function_class */
	T0* a88; /* arguments_class */
	T0* a89; /* platform_class */
	T0* a90; /* system_object_class */
	T0* a91; /* system_string_class */
	T0* a92; /* any_type */
	T0* a93; /* none_type */
	T0* a94; /* integer_type */
	T0* a95; /* natural_type */
	T0* a96; /* character_type */
	T0* a97; /* string_type */
	T0* a98; /* real_type */
	T0* a99; /* double_type */
	T0* a100; /* tuple_type */
	T0* a101; /* array_any_type */
	T0* a102; /* array_none_type */
	T0* a103; /* any_parent */
	T0* a104; /* any_parents */
	T0* a105; /* system_object_parents */
	T0* a106; /* integer_convert_feature */
	T0* a107; /* integer_8_convert_feature */
	T0* a108; /* integer_16_convert_feature */
	T0* a109; /* integer_32_convert_feature */
	T0* a110; /* integer_64_convert_feature */
	T0* a111; /* natural_convert_feature */
	T0* a112; /* natural_8_convert_feature */
	T0* a113; /* natural_16_convert_feature */
	T0* a114; /* natural_32_convert_feature */
	T0* a115; /* natural_64_convert_feature */
	T0* a116; /* real_convert_feature */
	T0* a117; /* double_convert_feature */
	T0* a118; /* real_32_convert_feature */
	T0* a119; /* real_64_convert_feature */
	T0* a120; /* boolean_ref_class */
	T0* a121; /* character_8_ref_class */
	T0* a122; /* character_32_ref_class */
	T0* a123; /* character_ref_class */
	T0* a124; /* wide_character_ref_class */
	T0* a125; /* integer_8_ref_class */
	T0* a126; /* integer_16_ref_class */
	T0* a127; /* integer_32_ref_class */
	T0* a128; /* integer_64_ref_class */
	T0* a129; /* integer_ref_class */
	T0* a130; /* natural_8_ref_class */
	T0* a131; /* natural_16_ref_class */
	T0* a132; /* natural_32_ref_class */
	T0* a133; /* natural_64_ref_class */
	T0* a134; /* natural_ref_class */
	T0* a135; /* real_32_ref_class */
	T0* a136; /* real_64_ref_class */
	T0* a137; /* real_ref_class */
	T0* a138; /* double_ref_class */
	T0* a139; /* pointer_ref_class */
	T0* a140; /* numeric_class */
	T0* a141; /* comparable_class */
	T0* a142; /* part_comparable_class */
	T0* a143; /* hashable_class */
	T0* a144; /* boolean_convert_feature */
	T0* a145; /* character_convert_feature */
	T0* a146; /* wide_character_convert_feature */
	T0* a147; /* pointer_convert_feature */
	T1 a148; /* cluster_dependence_enabled */
	T0* a149; /* internal_dotnet_assembly_consumer */
	T0* a150; /* internal_eiffel_preparser */
	T6 a151; /* copy_seed */
	T6 a152; /* void_seed */
	T6 a153; /* inline_constant_count */
	T0* a154; /* supplier_handler */
};

/* Struct for type ET_LACE_PARSER */
struct S54 {
	int id;
	T0* a2; /* last_universe */
	T6 a3; /* yy_parsing_status */
	T0* a5; /* named_clusters */
	T0* a7; /* override_cluster_names */
	T0* a8; /* external_include_pathnames */
	T0* a9; /* external_object_pathnames */
	T0* a10; /* ast_factory */
	T6 a11; /* eif_lineno */
	T0* a13; /* eif_buffer */
	T0* a14; /* input_buffer */
	T6 a15; /* yy_end */
	T6 a16; /* yy_position */
	T6 a17; /* yy_line */
	T6 a18; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T6 a28; /* error_count */
	T1 a29; /* yy_lookahead_needed */
	T6 a30; /* yyerrstatus */
	T6 a31; /* yyssp */
	T0* a32; /* yyss */
	T0* a41; /* yypact */
	T6 a43; /* last_token */
	T0* a46; /* yytranslate */
	T0* a49; /* yycheck */
	T0* a50; /* yytable */
	T0* a52; /* yydefact */
	T0* a54; /* yyr1 */
	T0* a56; /* yypgoto */
	T0* a57; /* yydefgoto */
	T0* a60; /* filename */
	T0* a61; /* error_handler */
	T6 a63; /* yy_start_state */
	T6 a64; /* line */
	T6 a65; /* column */
	T6 a66; /* position */
	T1 a67; /* yy_more_flag */
	T6 a68; /* yy_more_len */
	T6 a69; /* yy_last_accepting_state */
	T6 a70; /* yy_last_accepting_cpos */
	T1 a71; /* yy_rejected */
	T6 a72; /* yy_state_count */
	T6 a73; /* yy_full_match */
	T6 a74; /* yy_lp */
	T6 a75; /* yy_looking_for_trail_begin */
	T6 a76; /* yy_full_lp */
	T6 a77; /* yy_full_state */
	T6 a78; /* yy_start */
	T6 a79; /* yyvsp1 */
	T6 a80; /* yyvsp2 */
	T6 a81; /* yyvsp3 */
	T6 a82; /* yyvsp4 */
	T6 a83; /* yyvsp5 */
	T6 a84; /* yyvsp6 */
	T6 a85; /* yyvsp7 */
	T0* a93; /* yy_state_stack */
	T0* a94; /* yy_ec */
	T0* a95; /* yy_content_area */
	T0* a96; /* yy_content */
	T0* a97; /* yy_accept */
	T0* a98; /* yy_chk */
	T0* a99; /* yy_base */
	T0* a100; /* yy_def */
	T0* a101; /* yy_meta */
	T0* a103; /* yy_nxt */
	T0* a105; /* yy_acclist */
	T0* a115; /* yytypes2 */
	T6 a116; /* yyvsc1 */
	T0* a117; /* yyvs1 */
	T0* a118; /* yyspecial_routines1 */
	T0* a120; /* last_any_value */
	T6 a121; /* yyvsc2 */
	T0* a122; /* yyvs2 */
	T0* a123; /* yyspecial_routines2 */
	T0* a124; /* last_et_identifier_value */
	T0* a125; /* yyvs4 */
	T0* a127; /* yyvs7 */
	T6 a129; /* yyvsc4 */
	T0* a130; /* yyspecial_routines4 */
	T0* a131; /* yyvs3 */
	T0* a133; /* yyvs5 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyspecial_routines3 */
	T6 a138; /* yyvsc5 */
	T0* a139; /* yyspecial_routines5 */
	T6 a140; /* yyvsc7 */
	T0* a141; /* yyspecial_routines7 */
	T0* a142; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a148; /* yytypes1 */
	T6 a189; /* code_ */
	T0* a192; /* str_ */
	T0* a207; /* msil_clr_version_value */
	T0* a209; /* metadata_cache_path_value */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S55 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S56 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* type_class */
	T6 a43; /* feature_count */
	T0* a44; /* tuple_class */
	T0* a45; /* procedure_class */
	T0* a46; /* function_class */
	T0* a47; /* predicate_class */
	T0* a48; /* system_name */
	T0* a49; /* internal_eiffel_parser */
	T0* a50; /* ast_factory */
	T1 a51; /* cluster_dependence_enabled */
	T0* a52; /* general_class */
	T1 a53; /* use_void_keyword */
	T1 a54; /* use_assign_keyword */
	T1 a55; /* use_attribute_keyword */
	T1 a56; /* use_convert_keyword */
	T1 a57; /* use_create_keyword */
	T1 a58; /* use_recast_keyword */
	T1 a59; /* use_reference_keyword */
	T1 a60; /* providers_enabled */
	T0* a61; /* clusters */
	T0* a63; /* basic_classes */
	T0* a65; /* null_processor */
	T0* a66; /* provider_checker */
	T0* a67; /* ancestor_builder */
	T0* a68; /* feature_flattener */
	T0* a69; /* implementation_checker */
	T0* a70; /* flat_implementation_checker */
	T0* a72; /* ecma_version */
	T0* a73; /* dotnet_assemblies */
	T1 a75; /* is_preparsed */
	T1 a76; /* flat_mode */
	T1 a77; /* flat_dbc_mode */
	T1 a78; /* suppliers_enabled */
	T6 a81; /* copy_seed */
	T6 a82; /* void_seed */
	T0* a84; /* bit_class */
	T0* a85; /* native_array_class */
	T0* a86; /* routine_class */
	T0* a87; /* arguments_class */
	T0* a88; /* platform_class */
	T0* a89; /* system_object_class */
	T0* a90; /* system_string_class */
	T0* a91; /* any_type */
	T0* a92; /* none_type */
	T0* a93; /* integer_type */
	T0* a94; /* natural_type */
	T0* a95; /* character_type */
	T0* a96; /* string_type */
	T0* a97; /* real_type */
	T0* a98; /* double_type */
	T0* a99; /* tuple_type */
	T0* a100; /* array_any_type */
	T0* a101; /* array_none_type */
	T0* a102; /* any_parent */
	T0* a103; /* any_parents */
	T0* a104; /* system_object_parents */
	T0* a105; /* integer_convert_feature */
	T0* a106; /* integer_8_convert_feature */
	T0* a107; /* integer_16_convert_feature */
	T0* a108; /* integer_32_convert_feature */
	T0* a109; /* integer_64_convert_feature */
	T0* a110; /* natural_convert_feature */
	T0* a111; /* natural_8_convert_feature */
	T0* a112; /* natural_16_convert_feature */
	T0* a113; /* natural_32_convert_feature */
	T0* a114; /* natural_64_convert_feature */
	T0* a115; /* real_convert_feature */
	T0* a116; /* double_convert_feature */
	T0* a117; /* real_32_convert_feature */
	T0* a118; /* real_64_convert_feature */
	T0* a119; /* boolean_ref_class */
	T0* a120; /* character_8_ref_class */
	T0* a121; /* character_32_ref_class */
	T0* a122; /* character_ref_class */
	T0* a123; /* wide_character_ref_class */
	T0* a124; /* integer_8_ref_class */
	T0* a125; /* integer_16_ref_class */
	T0* a126; /* integer_32_ref_class */
	T0* a127; /* integer_64_ref_class */
	T0* a128; /* integer_ref_class */
	T0* a129; /* natural_8_ref_class */
	T0* a130; /* natural_16_ref_class */
	T0* a131; /* natural_32_ref_class */
	T0* a132; /* natural_64_ref_class */
	T0* a133; /* natural_ref_class */
	T0* a134; /* real_32_ref_class */
	T0* a135; /* real_64_ref_class */
	T0* a136; /* real_ref_class */
	T0* a137; /* double_ref_class */
	T0* a138; /* pointer_ref_class */
	T0* a139; /* numeric_class */
	T0* a140; /* comparable_class */
	T0* a141; /* part_comparable_class */
	T0* a142; /* hashable_class */
	T0* a143; /* boolean_convert_feature */
	T0* a144; /* character_convert_feature */
	T0* a145; /* wide_character_convert_feature */
	T0* a146; /* pointer_convert_feature */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T0* a148; /* internal_eiffel_preparser */
	T6 a149; /* inline_constant_count */
	T0* a150; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S57 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* has_error */
	T1 a6; /* benchmark_shown */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S58 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* null_dynamic_type_set_builder */
	T0* a4; /* dynamic_types */
	T1 a5; /* catcall_mode */
	T0* a6; /* dynamic_type_set_builder */
	T0* a7; /* boolean_type */
	T0* a8; /* character_type */
	T0* a9; /* wide_character_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_type */
	T0* a23; /* double_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a38; /* root_type */
	T0* a39; /* root_creation_procedure */
	T0* a40; /* array_area_feature */
	T0* a41; /* array_lower_feature */
	T0* a42; /* array_upper_feature */
	T0* a43; /* typed_pointer_to_pointer_feature */
};

/* Struct for type ET_CLASS */
struct S60 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* class_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* eiffel_class */
	T0* a10; /* master_class */
	T6 a11; /* time_stamp */
	T0* a14; /* formal_parameters */
	T0* a19; /* class_mark */
	T1 a23; /* is_parsed */
	T0* a25; /* group */
	T0* a26; /* overridden_class */
	T6 a36; /* index */
	T1 a37; /* interface_checked */
	T1 a38; /* has_interface_error */
	T1 a41; /* has_syntax_error */
	T0* a45; /* filename */
	T0* a46; /* creators */
	T0* a47; /* frozen_keyword */
	T0* a48; /* external_keyword */
	T0* a49; /* providers */
	T1 a50; /* in_system */
	T0* a51; /* parents */
	T0* a52; /* invariants */
	T0* a53; /* convert_features */
	T1 a54; /* has_flat_implementation_error */
	T1 a55; /* flat_implementation_checked */
	T1 a56; /* has_implementation_error */
	T1 a57; /* implementation_checked */
	T0* a58; /* suppliers */
	T1 a59; /* has_flattening_error */
	T1 a60; /* features_flattened */
	T1 a61; /* has_deferred_features */
	T1 a62; /* has_ancestors_error */
	T1 a63; /* ancestors_built */
	T0* a64; /* feature_clauses */
	T0* a65; /* first_indexing */
	T0* a66; /* second_indexing */
	T0* a67; /* obsolete_message */
	T0* a68; /* leading_break */
	T1 a69; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S61 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* short_names */
	T1 a3; /* split_mode */
	T6 a4; /* split_threshold */
	T0* a6; /* system_name */
	T0* a7; /* type_checker */
	T0* a8; /* universe */
	T0* a9; /* current_system */
	T0* a10; /* current_file */
	T0* a12; /* header_file */
	T0* a13; /* current_type */
	T0* a14; /* current_feature */
	T0* a16; /* current_function_header_buffer */
	T0* a17; /* current_function_body_buffer */
	T0* a18; /* temp_variables */
	T0* a19; /* used_temp_variables */
	T0* a20; /* free_temp_variables */
	T0* a21; /* conforming_types */
	T0* a22; /* non_conforming_types */
	T0* a23; /* operand_stack */
	T0* a24; /* call_operands */
	T0* a25; /* polymorphic_type_ids */
	T0* a26; /* polymorphic_types */
	T0* a27; /* standalone_type_sets */
	T0* a28; /* polymorphic_call_feature */
	T0* a29; /* current_agents */
	T0* a30; /* agent_open_operands */
	T0* a31; /* agent_closed_operands */
	T0* a32; /* agent_target */
	T0* a34; /* agent_arguments */
	T0* a35; /* agent_instruction */
	T0* a36; /* agent_expression */
	T0* a37; /* wrapper_expression */
	T0* a38; /* wrapper_dynamic_type_sets */
	T0* a39; /* manifest_array_types */
	T0* a40; /* manifest_tuple_types */
	T0* a41; /* gevoid_result_types */
	T0* a42; /* once_features */
	T0* a43; /* constant_features */
	T0* a44; /* inline_constants */
	T0* a45; /* called_features */
	T0* a46; /* included_header_filenames */
	T0* a48; /* included_runtime_header_files */
	T0* a49; /* included_runtime_c_files */
	T0* a50; /* c_filenames */
	T0* a51; /* cpp_filenames */
	T1 a52; /* use_boehm_gc */
	T1 a53; /* is_finalize */
	T0* a54; /* external_c_regexp */
	T0* a55; /* external_c_macro_regexp */
	T0* a56; /* external_c_struct_regexp */
	T0* a57; /* external_c_inline_regexp */
	T0* a58; /* old_external_c_regexp */
	T0* a59; /* old_external_c_macro_regexp */
	T0* a60; /* old_external_c_struct_regexp */
	T0* a61; /* external_cpp_regexp */
	T0* a62; /* external_cpp_inline_regexp */
	T0* a72; /* c_file */
	T6 a73; /* c_file_size */
	T0* a97; /* cpp_file */
	T6 a98; /* cpp_file_size */
	T6 a124; /* indentation */
	T0* a246; /* assignment_target */
	T1 a247; /* in_operand */
	T0* a251; /* call_target_type */
	T0* a266; /* current_agent */
};

/* Struct for type KL_SHELL_COMMAND */
struct S62 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a4; /* command */
	T6 a5; /* return_code */
	T1 a7; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S63 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S64 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* character_index */
	T0* a11; /* boolean_index */
	T0* a12; /* double_index */
	T0* a13; /* real_index */
	T0* a14; /* integer_index */
	T0* a15; /* integer_8_index */
	T0* a16; /* integer_16_index */
	T0* a17; /* integer_32_index */
	T0* a18; /* integer_64_index */
	T0* a19; /* natural_index */
	T0* a20; /* natural_8_index */
	T0* a21; /* natural_16_index */
	T0* a22; /* natural_32_index */
	T0* a23; /* natural_64_index */
	T0* a24; /* pointer_index */
	T0* a25; /* none_index */
	T0* a26; /* string_index */
	T1 a27; /* catcall_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a37; /* current_feature_impl */
	T0* a38; /* current_class_impl */
	T0* a39; /* enclosing_inline_agents */
	T0* a40; /* overloaded_procedures */
	T0* a41; /* unused_overloaded_procedures_list */
	T0* a42; /* overloaded_queries */
	T0* a43; /* unused_overloaded_queries_list */
	T0* a44; /* best_overloaded_features */
	T0* a45; /* unused_contexts */
	T0* a46; /* current_context */
	T1 a48; /* in_precursor */
	T0* a186; /* current_inline_agent */
	T1 a187; /* in_rescue */
	T1 a190; /* in_invariant */
	T1 a191; /* in_precondition */
	T1 a192; /* in_postcondition */
	T0* a196; /* current_target_type */
	T1 a198; /* in_assertion */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S65 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S67 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S68 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S69 {
	int id;
	T2 a16; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S70 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S71 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_STANDARD_FILES */
struct S75 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S76 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S77 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type UC_STRING */
struct S78 {
	int id;
	T6 a1; /* count */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T0* a7; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S79 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S80 {
	int id;
	T6 a2; /* count */
	T0* a8; /* internal_cursor */
	T0* a10; /* storage */
	T0* a15; /* special_routines */
	T6 a16; /* capacity */
	T0* a21; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S81 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T0* a9; /* storage */
	T0* a12; /* special_routines */
	T6 a13; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S82 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S83 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a4; /* warning_file */
	T0* a5; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S84 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [STRING_8] */
struct S85 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S86 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S89 {
	int id;
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S92 {
	int id;
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S94 {
	int id;
	T0* a5; /* internal_cursor */
	T0* a9; /* last_cell */
	T0* a11; /* first_cell */
	T6 a12; /* count */
	T0* a13; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S95 {
	int id;
};

/* Struct for type ST_WORD_WRAPPER */
struct S96 {
	int id;
	T6 a3; /* new_line_indentation */
	T6 a4; /* broken_words */
	T6 a5; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S97 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S98 {
	int id;
	T0* a1; /* root_element */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
	T0* a8; /* last_cell */
	T6 a9; /* count */
	T0* a13; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S99 {
	int id;
	T0* a1; /* parent */
	T0* a3; /* name */
	T0* a15; /* namespace */
	T0* a18; /* first_cell */
	T0* a19; /* last_cell */
	T6 a20; /* count */
	T0* a21; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S100 {
	int id;
	T0* a2; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S102 {
	int id;
	T0* a1; /* error */
	T0* a3; /* tree */
	T0* a5; /* start */
	T0* a8; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S103 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S104 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S105 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S106 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8] */
struct S107 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* equality_tester */
	T0* a9; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a20; /* special_item_routines */
	T0* a21; /* special_key_routines */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S108 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_PARSER */
struct S109 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a5; /* library_parser */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_parser */
	T0* a9; /* tree_pipe */
	T0* a10; /* last_library */
	T1 a129; /* is_shallow */
	T1 a130; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S110 {
	int id;
	T0* a3; /* internal_last_error_description */
	T0* a8; /* scanner */
	T0* a14; /* error_positions */
	T0* a16; /* scanners */
	T1 a17; /* in_external_dtd */
	T0* a18; /* callbacks */
	T0* a19; /* entities */
	T0* a21; /* pe_entities */
	T0* a22; /* dtd_resolver */
	T0* a24; /* entity_resolver */
	T1 a25; /* use_namespaces */
	T6 a26; /* string_mode */
	T0* a28; /* yyss */
	T0* a31; /* yytranslate */
	T0* a33; /* yyr1 */
	T0* a35; /* yytypes1 */
	T0* a37; /* yytypes2 */
	T0* a39; /* yydefact */
	T0* a41; /* yydefgoto */
	T0* a43; /* yypact */
	T0* a45; /* yypgoto */
	T0* a47; /* yytable */
	T0* a49; /* yycheck */
	T6 a51; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a61; /* error_count */
	T1 a62; /* yy_lookahead_needed */
	T6 a63; /* yyerrstatus */
	T6 a64; /* yyssp */
	T6 a72; /* last_token */
	T6 a81; /* yyvsp1 */
	T6 a82; /* yyvsp2 */
	T6 a83; /* yyvsp3 */
	T6 a84; /* yyvsp4 */
	T6 a85; /* yyvsp5 */
	T6 a86; /* yyvsp6 */
	T6 a87; /* yyvsp7 */
	T6 a88; /* yyvsp8 */
	T6 a89; /* yyvsp9 */
	T6 a90; /* yyvsp10 */
	T6 a91; /* yyvsp11 */
	T0* a92; /* last_string_value */
	T6 a103; /* yyvsc1 */
	T0* a104; /* yyvs1 */
	T0* a105; /* yyspecial_routines1 */
	T0* a107; /* last_any_value */
	T6 a108; /* yyvsc4 */
	T0* a109; /* yyvs4 */
	T0* a110; /* yyspecial_routines4 */
	T6 a112; /* yyvsc2 */
	T0* a113; /* yyvs2 */
	T0* a114; /* yyspecial_routines2 */
	T0* a121; /* yyvs11 */
	T6 a122; /* yyvsc11 */
	T0* a123; /* yyspecial_routines11 */
	T0* a125; /* yyvs10 */
	T0* a126; /* yyvs5 */
	T6 a128; /* yyvsc10 */
	T0* a129; /* yyspecial_routines10 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyvs3 */
	T0* a137; /* yyspecial_routines3 */
	T0* a143; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a151; /* yyvs8 */
	T0* a154; /* yyvs7 */
	T6 a155; /* yyvsc8 */
	T0* a156; /* yyspecial_routines8 */
	T6 a158; /* yyvsc7 */
	T0* a159; /* yyspecial_routines7 */
	T0* a161; /* yyvs9 */
	T6 a163; /* yyvsc9 */
	T0* a164; /* yyspecial_routines9 */
	T6 a170; /* yyvsc5 */
	T0* a171; /* yyspecial_routines5 */
	T0* a177; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S113 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
struct S114 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S116 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S117 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S118 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S119 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S120 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
	T0* a6; /* container */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S121 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a15; /* count */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* special_item_routines */
	T0* a21; /* item_storage */
	T0* a22; /* clashes */
	T0* a24; /* slots */
	T6 a25; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S122 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S123 {
	int id;
	T0* a9; /* error_handler */
	T0* a10; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S124 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T6 a15; /* slots_position */
	T0* a17; /* equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type YY_FILE_BUFFER */
struct S125 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a11; /* end_of_file */
	T6 a12; /* capacity */
	T1 a13; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S126 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a11; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S127 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type SPECIAL [ANY] */
struct S129 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S130 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S131 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a4; /* status_code */
	T6 a12; /* compressed_position */
	T6 a14; /* hash_code */
	T0* a15; /* name */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S132 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S133 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S134 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S135 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a12; /* parent */
	T1 a18; /* is_override */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a34; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S136 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S137 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S138 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S139 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S140 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S141 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S142 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S143 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S144 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S145 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S146 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S147 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S148 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S149 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S150 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S151 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S152 {
	int id;
	T6 a3; /* position */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S153 {
	int id;
	T6 a2; /* capacity */
	T6 a4; /* found_position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T0* a15; /* equality_tester */
	T6 a16; /* modulus */
	T6 a17; /* clashes_previous_position */
	T0* a20; /* item_storage */
	T0* a23; /* clashes */
	T0* a24; /* slots */
	T0* a25; /* key_storage */
	T6 a26; /* free_slot */
	T0* a28; /* internal_cursor */
	T0* a30; /* special_item_routines */
	T0* a31; /* special_key_routines */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S154 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a3; /* current_system */
	T1 a4; /* catcall_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S155 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S156 {
	int id;
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* id */
	T0* a5; /* queries */
	T0* a10; /* base_class */
	T0* a13; /* procedures */
	T0* a15; /* first_type */
	T0* a16; /* other_types */
	T0* a17; /* meta_type */
	T0* a18; /* next_type */
	T1 a24; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_QUERY_LIST */
struct S158 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S160 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S162 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T0* a6; /* result_type_set */
	T1 a7; /* is_generated */
	T6 a11; /* builtin_code */
	T1 a13; /* is_creation */
	T0* a14; /* first_precursor */
	T1 a15; /* is_regular */
	T0* a16; /* other_precursors */
	T1 a41; /* is_built */
	T1 a46; /* is_current_type_needed */
	T1 a47; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S163 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S164 {
	int id;
	T6 a12; /* time_storage */
	T6 a16; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S165 {
	int id;
	T6 a2; /* second */
	T6 a4; /* year */
	T6 a5; /* month */
	T6 a6; /* day */
	T6 a7; /* hour */
	T6 a8; /* minute */
	T6 a9; /* millisecond */
	T1 a10; /* is_utc */
	T0* a21; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S169 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S170 {
	int id;
	T0* a1; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a7; /* last_keywords */
	T0* a9; /* last_symbols */
	T0* a11; /* assertions */
	T0* a13; /* queries */
	T0* a15; /* procedures */
	T0* a17; /* constraints */
	T0* a19; /* providers */
	T0* a21; /* universe */
	T0* a22; /* ast_factory */
	T0* a23; /* error_handler */
	T1 a24; /* use_assign_keyword */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_convert_keyword */
	T1 a27; /* use_create_keyword */
	T1 a28; /* use_recast_keyword */
	T1 a29; /* use_reference_keyword */
	T1 a30; /* use_void_keyword */
	T1 a31; /* providers_enabled */
	T1 a32; /* overriding_class_added */
	T1 a33; /* is_null */
	T6 a35; /* last_text_count */
	T6 a36; /* last_literal_start */
	T0* a37; /* filename */
	T0* a38; /* current_class */
	T0* a40; /* yyss */
	T0* a48; /* input_buffer */
	T0* a49; /* yytranslate */
	T0* a51; /* yyr1 */
	T0* a53; /* yytypes1 */
	T0* a55; /* yytypes2 */
	T0* a57; /* yydefact */
	T0* a59; /* yydefgoto */
	T0* a61; /* yypact */
	T0* a63; /* yypgoto */
	T0* a65; /* yytable */
	T0* a67; /* yycheck */
	T6 a69; /* time_stamp */
	T0* a70; /* cluster */
	T6 a72; /* yy_start_state */
	T6 a73; /* yy_line */
	T6 a74; /* yy_column */
	T6 a75; /* yy_position */
	T6 a76; /* line */
	T6 a77; /* column */
	T6 a78; /* position */
	T0* a80; /* yy_state_stack */
	T6 a81; /* yy_end */
	T6 a82; /* yy_start */
	T6 a83; /* yy_parsing_status */
	T6 a85; /* yy_suspended_yystacksize */
	T6 a86; /* yy_suspended_yystate */
	T6 a87; /* yy_suspended_yyn */
	T6 a88; /* yy_suspended_yychar1 */
	T6 a89; /* yy_suspended_index */
	T6 a90; /* yy_suspended_yyss_top */
	T6 a91; /* yy_suspended_yy_goto */
	T6 a93; /* error_count */
	T1 a94; /* yy_lookahead_needed */
	T6 a95; /* yyerrstatus */
	T6 a96; /* yyssp */
	T6 a104; /* last_token */
	T0* a113; /* last_class */
	T0* a114; /* last_clients */
	T0* a115; /* last_export_clients */
	T0* a116; /* last_feature_clause */
	T6 a117; /* last_literal_end */
	T0* a118; /* verbatim_marker */
	T0* a119; /* verbatim_open_white_characters */
	T0* a120; /* verbatim_close_white_characters */
	T1 a121; /* yy_more_flag */
	T6 a122; /* yy_more_len */
	T6 a123; /* yy_last_accepting_state */
	T6 a124; /* yy_last_accepting_cpos */
	T1 a125; /* yy_rejected */
	T6 a126; /* yy_state_count */
	T6 a127; /* yy_full_match */
	T6 a128; /* yy_lp */
	T6 a129; /* yy_looking_for_trail_begin */
	T6 a130; /* yy_full_lp */
	T6 a131; /* yy_full_state */
	T0* a132; /* yy_nxt */
	T0* a134; /* yy_chk */
	T0* a136; /* yy_base */
	T0* a138; /* yy_def */
	T0* a140; /* yy_ec */
	T0* a142; /* yy_meta */
	T0* a144; /* yy_accept */
	T0* a146; /* yy_acclist */
	T0* a148; /* yy_content */
	T0* a149; /* yy_content_area */
	T6 a150; /* yyvsp1 */
	T6 a151; /* yyvsp2 */
	T6 a152; /* yyvsp3 */
	T6 a153; /* yyvsp4 */
	T6 a154; /* yyvsp5 */
	T6 a155; /* yyvsp6 */
	T6 a156; /* yyvsp7 */
	T6 a157; /* yyvsp8 */
	T6 a158; /* yyvsp9 */
	T6 a159; /* yyvsp10 */
	T6 a160; /* yyvsp11 */
	T6 a161; /* yyvsp12 */
	T6 a162; /* yyvsp13 */
	T6 a163; /* yyvsp14 */
	T6 a164; /* yyvsp15 */
	T6 a165; /* yyvsp16 */
	T6 a166; /* yyvsp17 */
	T6 a167; /* yyvsp18 */
	T6 a168; /* yyvsp19 */
	T6 a169; /* yyvsp20 */
	T6 a170; /* yyvsp21 */
	T6 a171; /* yyvsp22 */
	T6 a172; /* yyvsp23 */
	T6 a173; /* yyvsp24 */
	T6 a174; /* yyvsp25 */
	T6 a175; /* yyvsp26 */
	T6 a176; /* yyvsp27 */
	T6 a177; /* yyvsp28 */
	T6 a178; /* yyvsp29 */
	T6 a179; /* yyvsp30 */
	T6 a180; /* yyvsp31 */
	T6 a181; /* yyvsp32 */
	T6 a182; /* yyvsp33 */
	T6 a183; /* yyvsp34 */
	T6 a184; /* yyvsp35 */
	T6 a185; /* yyvsp36 */
	T6 a186; /* yyvsp37 */
	T6 a187; /* yyvsp38 */
	T6 a188; /* yyvsp39 */
	T6 a189; /* yyvsp40 */
	T6 a190; /* yyvsp41 */
	T6 a191; /* yyvsp42 */
	T6 a192; /* yyvsp43 */
	T6 a193; /* yyvsp44 */
	T6 a194; /* yyvsp45 */
	T6 a195; /* yyvsp46 */
	T6 a196; /* yyvsp47 */
	T6 a197; /* yyvsp48 */
	T6 a198; /* yyvsp49 */
	T6 a199; /* yyvsp50 */
	T6 a200; /* yyvsp51 */
	T6 a201; /* yyvsp52 */
	T6 a202; /* yyvsp53 */
	T6 a203; /* yyvsp54 */
	T6 a204; /* yyvsp55 */
	T6 a205; /* yyvsp56 */
	T6 a206; /* yyvsp57 */
	T6 a207; /* yyvsp58 */
	T6 a208; /* yyvsp59 */
	T6 a209; /* yyvsp60 */
	T6 a210; /* yyvsp61 */
	T6 a211; /* yyvsp62 */
	T6 a212; /* yyvsp63 */
	T6 a213; /* yyvsp64 */
	T6 a214; /* yyvsp65 */
	T6 a215; /* yyvsp66 */
	T6 a216; /* yyvsp67 */
	T6 a217; /* yyvsp68 */
	T6 a218; /* yyvsp69 */
	T6 a219; /* yyvsp70 */
	T6 a220; /* yyvsp71 */
	T6 a221; /* yyvsp72 */
	T6 a222; /* yyvsp73 */
	T6 a223; /* yyvsp74 */
	T6 a224; /* yyvsp75 */
	T6 a225; /* yyvsp76 */
	T6 a226; /* yyvsp77 */
	T6 a227; /* yyvsp78 */
	T6 a228; /* yyvsp79 */
	T6 a229; /* yyvsp80 */
	T6 a230; /* yyvsp81 */
	T6 a231; /* yyvsp82 */
	T6 a232; /* yyvsp83 */
	T6 a233; /* yyvsp84 */
	T6 a234; /* yyvsp85 */
	T6 a235; /* yyvsp86 */
	T6 a236; /* yyvsp87 */
	T6 a237; /* yyvsp88 */
	T6 a238; /* yyvsp89 */
	T6 a239; /* yyvsp90 */
	T6 a240; /* yyvsp91 */
	T6 a241; /* yyvsp92 */
	T6 a242; /* yyvsp93 */
	T6 a243; /* yyvsp94 */
	T6 a244; /* yyvsp95 */
	T6 a245; /* yyvsp96 */
	T6 a246; /* yyvsp97 */
	T6 a247; /* yyvsp98 */
	T6 a248; /* yyvsp99 */
	T6 a249; /* yyvsp100 */
	T6 a250; /* yyvsp101 */
	T6 a251; /* yyvsp102 */
	T6 a252; /* yyvsp103 */
	T6 a253; /* yyvsp104 */
	T6 a254; /* yyvsp105 */
	T6 a255; /* yyvsp106 */
	T6 a256; /* yyvsp107 */
	T6 a257; /* yyvsp108 */
	T6 a258; /* yyvsp109 */
	T6 a259; /* yyvsp110 */
	T6 a260; /* yyvsp111 */
	T6 a261; /* yyvsp112 */
	T6 a262; /* yyvsp113 */
	T6 a263; /* yyvsp114 */
	T6 a264; /* yyvsp115 */
	T6 a265; /* yyvsp116 */
	T6 a284; /* yyvsc1 */
	T0* a285; /* yyvs1 */
	T0* a286; /* yyspecial_routines1 */
	T0* a288; /* last_any_value */
	T6 a289; /* yyvsc2 */
	T0* a290; /* yyvs2 */
	T0* a291; /* yyspecial_routines2 */
	T0* a292; /* last_et_keyword_value */
	T6 a293; /* yyvsc3 */
	T0* a294; /* yyvs3 */
	T0* a295; /* yyspecial_routines3 */
	T0* a296; /* last_et_agent_keyword_value */
	T6 a297; /* yyvsc4 */
	T0* a298; /* yyvs4 */
	T0* a299; /* yyspecial_routines4 */
	T0* a300; /* last_et_precursor_keyword_value */
	T6 a301; /* yyvsc5 */
	T0* a302; /* yyvs5 */
	T0* a303; /* yyspecial_routines5 */
	T0* a304; /* last_et_symbol_value */
	T6 a305; /* yyvsc6 */
	T0* a306; /* yyvs6 */
	T0* a307; /* yyspecial_routines6 */
	T0* a308; /* last_et_position_value */
	T6 a309; /* yyvsc7 */
	T0* a310; /* yyvs7 */
	T0* a311; /* yyspecial_routines7 */
	T0* a312; /* last_et_bit_constant_value */
	T6 a313; /* yyvsc8 */
	T0* a314; /* yyvs8 */
	T0* a315; /* yyspecial_routines8 */
	T0* a316; /* last_et_boolean_constant_value */
	T6 a317; /* yyvsc9 */
	T0* a318; /* yyvs9 */
	T0* a319; /* yyspecial_routines9 */
	T0* a320; /* last_et_break_value */
	T6 a321; /* yyvsc10 */
	T0* a322; /* yyvs10 */
	T0* a323; /* yyspecial_routines10 */
	T0* a324; /* last_et_character_constant_value */
	T6 a325; /* yyvsc11 */
	T0* a326; /* yyvs11 */
	T0* a327; /* yyspecial_routines11 */
	T0* a328; /* last_et_current_value */
	T6 a329; /* yyvsc12 */
	T0* a330; /* yyvs12 */
	T0* a331; /* yyspecial_routines12 */
	T0* a332; /* last_et_free_operator_value */
	T6 a333; /* yyvsc13 */
	T0* a334; /* yyvs13 */
	T0* a335; /* yyspecial_routines13 */
	T0* a336; /* last_et_identifier_value */
	T6 a337; /* yyvsc14 */
	T0* a338; /* yyvs14 */
	T0* a339; /* yyspecial_routines14 */
	T0* a340; /* last_et_integer_constant_value */
	T6 a341; /* yyvsc15 */
	T0* a342; /* yyvs15 */
	T0* a343; /* yyspecial_routines15 */
	T0* a344; /* last_et_keyword_operator_value */
	T6 a345; /* yyvsc16 */
	T0* a346; /* yyvs16 */
	T0* a347; /* yyspecial_routines16 */
	T0* a348; /* last_et_manifest_string_value */
	T6 a349; /* yyvsc17 */
	T0* a350; /* yyvs17 */
	T0* a351; /* yyspecial_routines17 */
	T0* a352; /* last_et_real_constant_value */
	T6 a353; /* yyvsc18 */
	T0* a354; /* yyvs18 */
	T0* a355; /* yyspecial_routines18 */
	T0* a356; /* last_et_result_value */
	T6 a357; /* yyvsc19 */
	T0* a358; /* yyvs19 */
	T0* a359; /* yyspecial_routines19 */
	T0* a360; /* last_et_retry_instruction_value */
	T6 a361; /* yyvsc20 */
	T0* a362; /* yyvs20 */
	T0* a363; /* yyspecial_routines20 */
	T0* a364; /* last_et_symbol_operator_value */
	T6 a365; /* yyvsc21 */
	T0* a366; /* yyvs21 */
	T0* a367; /* yyspecial_routines21 */
	T0* a368; /* last_et_void_value */
	T6 a369; /* yyvsc22 */
	T0* a370; /* yyvs22 */
	T0* a371; /* yyspecial_routines22 */
	T0* a372; /* last_et_semicolon_symbol_value */
	T6 a373; /* yyvsc23 */
	T0* a374; /* yyvs23 */
	T0* a375; /* yyspecial_routines23 */
	T0* a376; /* last_et_bracket_symbol_value */
	T6 a377; /* yyvsc24 */
	T0* a378; /* yyvs24 */
	T0* a379; /* yyspecial_routines24 */
	T0* a380; /* last_et_question_mark_symbol_value */
	T6 a382; /* last_break_end */
	T6 a383; /* last_comment_end */
	T6 a385; /* ms_column */
	T6 a386; /* ms_line */
	T6 a391; /* break_kind */
	T0* a552; /* yyvs42 */
	T0* a553; /* yyvs78 */
	T0* a554; /* yyvs97 */
	T0* a555; /* yyvs101 */
	T0* a556; /* yyvs56 */
	T0* a557; /* yyvs53 */
	T0* a558; /* yyvs67 */
	T0* a559; /* yyvs86 */
	T6 a560; /* yyvsc78 */
	T0* a561; /* yyspecial_routines78 */
	T0* a562; /* yyvs79 */
	T0* a565; /* yyvs82 */
	T6 a566; /* yyvsc79 */
	T0* a567; /* yyspecial_routines79 */
	T0* a568; /* yyvs80 */
	T6 a569; /* yyvsc82 */
	T0* a570; /* yyspecial_routines82 */
	T0* a571; /* yyvs81 */
	T6 a572; /* yyvsc80 */
	T0* a573; /* yyspecial_routines80 */
	T0* a574; /* yyvs54 */
	T0* a575; /* yyvs96 */
	T6 a576; /* yyvsc81 */
	T0* a577; /* yyspecial_routines81 */
	T6 a579; /* yyvsc42 */
	T0* a580; /* yyspecial_routines42 */
	T6 a581; /* yyvsc76 */
	T0* a582; /* yyvs76 */
	T0* a583; /* yyspecial_routines76 */
	T0* a584; /* yyvs74 */
	T0* a586; /* yyvs75 */
	T6 a587; /* yyvsc75 */
	T0* a588; /* yyspecial_routines75 */
	T6 a589; /* yyvsc74 */
	T0* a590; /* yyspecial_routines74 */
	T0* a591; /* yyvs50 */
	T0* a593; /* yyvs49 */
	T6 a594; /* yyvsc49 */
	T0* a595; /* yyspecial_routines49 */
	T0* a596; /* yyvs70 */
	T0* a597; /* yyvs48 */
	T6 a599; /* yyvsc50 */
	T0* a600; /* yyspecial_routines50 */
	T0* a601; /* yyvs88 */
	T6 a603; /* yyvsc48 */
	T0* a604; /* yyspecial_routines48 */
	T0* a605; /* yyvs47 */
	T6 a606; /* yyvsc47 */
	T0* a607; /* yyspecial_routines47 */
	T6 a608; /* yyvsc97 */
	T0* a609; /* yyspecial_routines97 */
	T6 a610; /* yyvsc101 */
	T0* a611; /* yyspecial_routines101 */
	T0* a612; /* yyvs27 */
	T6 a614; /* yyvsc99 */
	T0* a615; /* yyvs99 */
	T0* a616; /* yyspecial_routines99 */
	T0* a617; /* yyvs107 */
	T0* a618; /* yyvs61 */
	T0* a619; /* yyvs87 */
	T0* a620; /* yyvs100 */
	T6 a621; /* yyvsc100 */
	T0* a622; /* yyspecial_routines100 */
	T6 a623; /* yyvsc107 */
	T0* a624; /* yyspecial_routines107 */
	T0* a625; /* yyvs106 */
	T0* a626; /* yyvs69 */
	T0* a627; /* yyvs64 */
	T6 a628; /* yyvsc106 */
	T0* a629; /* yyspecial_routines106 */
	T6 a630; /* yyvsc61 */
	T0* a631; /* yyspecial_routines61 */
	T0* a632; /* yyvs60 */
	T0* a633; /* yyvs44 */
	T6 a634; /* yyvsc60 */
	T0* a635; /* yyspecial_routines60 */
	T0* a636; /* yyvs68 */
	T6 a637; /* yyvsc68 */
	T0* a638; /* yyspecial_routines68 */
	T6 a639; /* yyvsc44 */
	T0* a640; /* yyspecial_routines44 */
	T0* a641; /* yyvs43 */
	T6 a642; /* yyvsc43 */
	T0* a643; /* yyspecial_routines43 */
	T6 a644; /* yyvsc87 */
	T0* a645; /* yyspecial_routines87 */
	T6 a646; /* yyvsc70 */
	T0* a647; /* yyspecial_routines70 */
	T6 a648; /* yyvsc56 */
	T0* a649; /* yyspecial_routines56 */
	T0* a650; /* yyvs55 */
	T6 a651; /* yyvsc55 */
	T0* a652; /* yyspecial_routines55 */
	T6 a653; /* yyvsc53 */
	T0* a654; /* yyspecial_routines53 */
	T0* a655; /* yyvs51 */
	T0* a656; /* yyvs52 */
	T6 a657; /* yyvsc52 */
	T0* a658; /* yyspecial_routines52 */
	T0* a659; /* yyvs112 */
	T6 a660; /* yyvsc51 */
	T0* a661; /* yyspecial_routines51 */
	T6 a662; /* yyvsc112 */
	T0* a663; /* yyspecial_routines112 */
	T0* a664; /* yyvs110 */
	T0* a665; /* yyvs111 */
	T6 a666; /* yyvsc111 */
	T0* a667; /* yyspecial_routines111 */
	T6 a668; /* yyvsc67 */
	T0* a669; /* yyspecial_routines67 */
	T0* a670; /* yyvs66 */
	T6 a671; /* yyvsc66 */
	T0* a672; /* yyspecial_routines66 */
	T0* a673; /* yyvs105 */
	T0* a675; /* yyvs104 */
	T0* a677; /* yyvs33 */
	T6 a678; /* yyvsc105 */
	T0* a679; /* yyspecial_routines105 */
	T0* a680; /* yyvs46 */
	T0* a682; /* yyvs103 */
	T0* a683; /* yyvs91 */
	T0* a684; /* yyvs45 */
	T0* a685; /* yyvs102 */
	T0* a686; /* yyvs73 */
	T0* a687; /* yyvs65 */
	T6 a689; /* yyvsc104 */
	T0* a690; /* yyspecial_routines104 */
	T6 a692; /* yyvsc65 */
	T0* a693; /* yyspecial_routines65 */
	T6 a694; /* yyvsc33 */
	T0* a695; /* yyspecial_routines33 */
	T6 a696; /* yyvsc69 */
	T0* a697; /* yyspecial_routines69 */
	T6 a700; /* yyvsc64 */
	T0* a701; /* yyspecial_routines64 */
	T0* a702; /* yyvs32 */
	T6 a703; /* yyvsc32 */
	T0* a704; /* yyspecial_routines32 */
	T6 a707; /* yyvsc73 */
	T0* a708; /* yyspecial_routines73 */
	T0* a709; /* yyvs72 */
	T0* a710; /* yyvs71 */
	T6 a712; /* yyvsc71 */
	T0* a713; /* yyspecial_routines71 */
	T6 a714; /* yyvsc72 */
	T0* a715; /* yyspecial_routines72 */
	T6 a716; /* yyvsc91 */
	T0* a717; /* yyspecial_routines91 */
	T0* a719; /* yyvs90 */
	T0* a720; /* yyvs89 */
	T6 a721; /* yyvsc89 */
	T0* a722; /* yyspecial_routines89 */
	T6 a723; /* yyvsc90 */
	T0* a724; /* yyspecial_routines90 */
	T0* a725; /* yyvs62 */
	T6 a726; /* yyvsc103 */
	T0* a727; /* yyspecial_routines103 */
	T6 a729; /* yyvsc102 */
	T0* a730; /* yyspecial_routines102 */
	T6 a732; /* yyvsc86 */
	T0* a733; /* yyspecial_routines86 */
	T6 a735; /* yyvsc92 */
	T0* a736; /* yyvs92 */
	T0* a737; /* yyspecial_routines92 */
	T6 a739; /* yyvsc113 */
	T0* a740; /* yyvs113 */
	T0* a741; /* yyspecial_routines113 */
	T6 a742; /* yyvsc45 */
	T0* a743; /* yyspecial_routines45 */
	T6 a745; /* yyvsc110 */
	T0* a746; /* yyspecial_routines110 */
	T6 a747; /* yyvsc27 */
	T0* a748; /* yyspecial_routines27 */
	T0* a749; /* yyvs26 */
	T6 a750; /* yyvsc26 */
	T0* a751; /* yyspecial_routines26 */
	T6 a752; /* yyvsc88 */
	T0* a753; /* yyspecial_routines88 */
	T0* a754; /* yyvs85 */
	T0* a755; /* yyvs37 */
	T6 a756; /* yyvsc85 */
	T0* a757; /* yyspecial_routines85 */
	T0* a758; /* yyvs35 */
	T0* a759; /* yyvs116 */
	T0* a760; /* yyvs77 */
	T0* a761; /* yyvs84 */
	T0* a762; /* yyvs57 */
	T0* a764; /* yyvs25 */
	T6 a765; /* yyvsc54 */
	T0* a766; /* yyspecial_routines54 */
	T6 a767; /* yyvsc77 */
	T0* a768; /* yyspecial_routines77 */
	T0* a769; /* yyvs59 */
	T0* a770; /* yyvs58 */
	T6 a771; /* yyvsc59 */
	T0* a772; /* yyspecial_routines59 */
	T6 a773; /* yyvsc58 */
	T0* a774; /* yyspecial_routines58 */
	T0* a775; /* yyvs115 */
	T6 a776; /* yyvsc84 */
	T0* a777; /* yyspecial_routines84 */
	T6 a778; /* yyvsc115 */
	T0* a779; /* yyspecial_routines115 */
	T0* a780; /* yyvs114 */
	T0* a781; /* yyvs41 */
	T6 a782; /* yyvsc114 */
	T0* a783; /* yyspecial_routines114 */
	T6 a784; /* yyvsc41 */
	T0* a785; /* yyspecial_routines41 */
	T0* a786; /* yyvs38 */
	T0* a787; /* yyvs40 */
	T6 a788; /* yyvsc40 */
	T0* a789; /* yyspecial_routines40 */
	T0* a790; /* yyvs39 */
	T6 a791; /* yyvsc38 */
	T0* a792; /* yyspecial_routines38 */
	T6 a793; /* yyvsc39 */
	T0* a794; /* yyspecial_routines39 */
	T0* a795; /* yyvs108 */
	T0* a796; /* yyvs95 */
	T6 a797; /* yyvsc57 */
	T0* a798; /* yyspecial_routines57 */
	T6 a799; /* yyvsc95 */
	T0* a800; /* yyspecial_routines95 */
	T0* a801; /* yyvs94 */
	T6 a802; /* yyvsc94 */
	T0* a803; /* yyspecial_routines94 */
	T6 a806; /* yyvsc62 */
	T0* a807; /* yyspecial_routines62 */
	T6 a808; /* yyvsc37 */
	T0* a809; /* yyspecial_routines37 */
	T6 a810; /* yyvsc108 */
	T0* a811; /* yyspecial_routines108 */
	T0* a812; /* yyvs98 */
	T6 a813; /* yyvsc25 */
	T0* a814; /* yyspecial_routines25 */
	T0* a815; /* yyvs63 */
	T6 a816; /* yyvsc63 */
	T0* a817; /* yyspecial_routines63 */
	T6 a819; /* yyvsc116 */
	T0* a820; /* yyspecial_routines116 */
	T0* a823; /* yyvs36 */
	T0* a824; /* yyvs83 */
	T0* a826; /* yyvs93 */
	T0* a827; /* yyvs109 */
	T0* a828; /* yyvs34 */
	T6 a829; /* yyvsc35 */
	T0* a830; /* yyspecial_routines35 */
	T6 a831; /* yyvsc34 */
	T0* a832; /* yyspecial_routines34 */
	T6 a833; /* yyvsc98 */
	T0* a834; /* yyspecial_routines98 */
	T6 a835; /* yyvsc93 */
	T0* a836; /* yyspecial_routines93 */
	T6 a837; /* yyvsc96 */
	T0* a838; /* yyspecial_routines96 */
	T6 a839; /* yyvsc109 */
	T0* a840; /* yyspecial_routines109 */
	T6 a841; /* yyvsc46 */
	T0* a842; /* yyspecial_routines46 */
	T0* a843; /* yyvs30 */
	T6 a844; /* yyvsc36 */
	T0* a845; /* yyspecial_routines36 */
	T0* a846; /* yyvs31 */
	T6 a848; /* yyvsc83 */
	T0* a849; /* yyspecial_routines83 */
	T6 a850; /* yyvsc31 */
	T0* a851; /* yyspecial_routines31 */
	T6 a852; /* yyvsc30 */
	T0* a853; /* yyspecial_routines30 */
	T0* a854; /* yyvs28 */
	T0* a855; /* yyvs29 */
	T6 a856; /* yyvsc29 */
	T0* a857; /* yyspecial_routines29 */
	T6 a858; /* yyvsc28 */
	T0* a859; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S171 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S172 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S173 {
	int id;
	T0* a3; /* eiffel_class */
	T0* a4; /* actual_parameters */
	T0* a7; /* type_mark */
	T0* a8; /* name */
	T0* a9; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S175 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* declared_type */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_feature */
	T6 a13; /* builtin_code */
	T0* a14; /* is_keyword */
	T0* a15; /* assigner */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* alias_clause */
	T0* a20; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a33; /* semicolon */
	T0* a34; /* feature_clause */
	T0* a35; /* other_seeds */
	T6 a36; /* id */
	T6 a37; /* version */
	T0* a38; /* frozen_keyword */
	T0* a39; /* first_precursor */
	T0* a40; /* other_precursors */
	T0* a41; /* synonym */
	T1 a42; /* assertions_checked */
	T1 a43; /* has_assertions_error */
};

/* Struct for type ET_KEYWORD */
struct S178 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S180 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S181 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a5; /* universe */
	T1 a7; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S182 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S183 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S184 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S185 {
	int id;
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S186 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S187 {
	int id;
	T6 a1; /* capacity */
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S188 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S189 {
	int id;
	T6 a5; /* position */
	T0* a7; /* internal_cursor */
	T0* a12; /* item_storage */
	T6 a13; /* last_position */
	T6 a14; /* capacity */
	T6 a17; /* slots_position */
	T6 a19; /* count */
	T6 a20; /* free_slot */
	T6 a21; /* modulus */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a26; /* equality_tester */
	T0* a27; /* internal_keys */
	T6 a28; /* found_position */
	T0* a31; /* clashes */
	T0* a32; /* slots */
	T0* a33; /* key_storage */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S190 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S192 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S194 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a9; /* index */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S195 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a6; /* left_symbol */
	T0* a8; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S196 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S198 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S199 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S200 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S201 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a11; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a19; /* special_item_routines */
	T0* a20; /* item_storage */
	T0* a21; /* clashes */
	T0* a23; /* slots */
	T6 a24; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S202 {
	int id;
	T0* a4; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* item_storage */
	T6 a13; /* count */
	T6 a14; /* last_position */
	T6 a15; /* free_slot */
	T6 a17; /* position */
	T6 a18; /* capacity */
	T6 a21; /* slots_position */
	T0* a23; /* equality_tester */
	T0* a24; /* key_equality_tester */
	T0* a25; /* internal_keys */
	T6 a26; /* found_position */
	T0* a27; /* clashes */
	T6 a28; /* modulus */
	T0* a29; /* slots */
	T6 a35; /* clashes_previous_position */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_INLINE_CONSTANT] */
struct S203 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S204 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S205 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T0* a17; /* equality_tester */
	T6 a18; /* count */
	T6 a21; /* slots_position */
	T0* a25; /* special_item_routines */
	T0* a26; /* clashes */
	T0* a28; /* slots */
	T6 a29; /* found_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S206 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T6 a19; /* count */
	T6 a20; /* last_position */
	T6 a21; /* free_slot */
	T6 a22; /* capacity */
	T6 a25; /* slots_position */
	T6 a29; /* modulus */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* equality_tester */
	T6 a36; /* found_position */
	T0* a37; /* clashes */
	T0* a38; /* slots */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S207 {
	int id;
	T0* a3; /* subject */
	T6 a4; /* subject_end */
	T6 a5; /* subject_start */
	T0* a6; /* offset_vector */
	T6 a8; /* offset_vector_count */
	T6 a9; /* brastart_capacity */
	T0* a10; /* brastart_vector */
	T6 a11; /* brastart_lower */
	T6 a12; /* brastart_count */
	T6 a13; /* eptr_capacity */
	T0* a14; /* eptr_vector */
	T6 a15; /* eptr_lower */
	T6 a16; /* eptr_upper */
	T0* a17; /* byte_code */
	T0* a18; /* pattern */
	T6 a22; /* subexpression_count */
	T6 a23; /* pattern_count */
	T6 a24; /* pattern_position */
	T6 a25; /* code_index */
	T6 a26; /* maxbackrefs */
	T6 a27; /* optchanged */
	T6 a29; /* first_character */
	T6 a30; /* required_character */
	T6 a31; /* regexp_countlits */
	T0* a32; /* start_bits */
	T0* a35; /* error_message */
	T1 a41; /* is_anchored */
	T0* a48; /* character_case_mapping */
	T0* a49; /* word_set */
	T6 a50; /* subject_next_start */
	T6 a51; /* match_count */
	T6 a53; /* error_code */
	T6 a54; /* error_position */
	T1 a65; /* is_startline */
	T1 a68; /* is_caseless */
	T1 a69; /* is_multiline */
	T1 a70; /* is_dotall */
	T1 a71; /* is_extended */
	T1 a72; /* is_empty_allowed */
	T1 a73; /* is_dollar_endonly */
	T1 a74; /* is_bol */
	T1 a75; /* is_eol */
	T1 a76; /* is_greedy */
	T1 a77; /* is_strict */
	T1 a78; /* is_ichanged */
	T6 a144; /* first_matched_index */
	T6 a223; /* eptr */
	T6 a224; /* offset_top */
	T1 a225; /* is_matching_caseless */
	T1 a226; /* is_matching_multiline */
	T1 a227; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S208 {
	int id;
	T0* a2; /* name */
	T6 a6; /* mode */
	T0* a14; /* string_name */
	T14 a16; /* file_pointer */
	T1 a18; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S209 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* item_type_sets */
	T0* a23; /* meta_type */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a28; /* query_calls */
	T0* a29; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S210 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S211 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S212 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S213 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S214 {
	int id;
	T1 a1; /* is_generated */
	T0* a3; /* target_type */
	T0* a4; /* static_feature */
	T0* a6; /* current_feature */
	T6 a7; /* id */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T0* a12; /* result_type_set */
	T0* a14; /* dynamic_type_sets */
	T6 a18; /* builtin_code */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* is_built */
	T0* a23; /* parent_type */
	T1 a49; /* is_current_type_needed */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S215 {
	int id;
	T0* a2; /* sorted_items */
	T0* a3; /* cycle */
	T0* a6; /* items */
	T0* a7; /* indexes */
	T0* a8; /* counts */
	T0* a9; /* successors */
};

/* Struct for type ET_RESULT */
struct S216 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a5; /* index */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S217 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
	T0* a8; /* result_type_set */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S219 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S224 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S225 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S227 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S229 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* item_type_set */
	T0* a23; /* meta_type */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a28; /* query_calls */
	T0* a29; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S233 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* result_type_set */
	T0* a23; /* open_operand_type_sets */
	T0* a24; /* meta_type */
	T0* a25; /* next_type */
	T1 a27; /* has_static */
	T0* a29; /* query_calls */
	T0* a30; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S234 {
	int id;
	T6 a4; /* id */
	T0* a6; /* base_type */
	T1 a7; /* is_alive */
	T0* a8; /* queries */
	T0* a10; /* base_class */
	T0* a15; /* first_type */
	T0* a18; /* procedures */
	T0* a20; /* other_types */
	T0* a22; /* open_operand_type_sets */
	T0* a23; /* meta_type */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a28; /* query_calls */
	T0* a29; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S235 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* other_types */
	T0* a4; /* internal_other_types */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S236 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* constant */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_indexing */
	T0* a28; /* other_seeds */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S238 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* unique_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T6 a15; /* id */
	T1 a24; /* implementation_checked */
	T1 a25; /* has_implementation_error */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* first_indexing */
	T0* a29; /* other_seeds */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_ATTRIBUTE */
struct S239 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a11; /* first_seed */
	T1 a21; /* implementation_checked */
	T1 a22; /* has_implementation_error */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* other_seeds */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* frozen_keyword */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* synonym */
	T1 a33; /* assertions_checked */
	T1 a36; /* has_assertions_error */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S247 {
	int id;
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S248 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S250 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S251 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S252 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S253 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S254 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S255 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
	T0* a9; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S256 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S257 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S259 {
	int id;
	T0* a2; /* buffered_file_info */
	T0* a5; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S261 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S262 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S263 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_CLUSTER */
struct S266 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a17; /* is_override */
	T0* a25; /* parent */
	T1 a36; /* is_implicit */
	T0* a38; /* provider_constraint */
	T0* a39; /* dependant_constraint */
	T1 a40; /* is_mounted */
};

/* Struct for type ET_XACE_OPTIONS */
struct S267 {
	int id;
	T0* a22; /* declared_c_compiler_options */
	T0* a25; /* declared_header */
	T0* a28; /* declared_link */
	T0* a30; /* declared_abstract */
	T0* a32; /* declared_recursive */
	T0* a34; /* declared_read_only */
	T6 a36; /* declared_fst_expansion_factor */
	T6 a37; /* declared_heap_size */
	T6 a38; /* declared_inlining_size */
	T6 a39; /* declared_stack_size */
	T0* a40; /* declared_address_expression */
	T0* a41; /* declared_arguments */
	T0* a42; /* declared_array_optimization */
	T0* a43; /* declared_assembly */
	T0* a44; /* declared_assertion */
	T0* a45; /* declared_callback */
	T0* a46; /* declared_case_insensitive */
	T0* a47; /* declared_check_vape */
	T0* a48; /* declared_clean */
	T0* a49; /* declared_cls_compliant */
	T0* a50; /* declared_component */
	T0* a51; /* declared_console_application */
	T0* a52; /* declared_create_keyword_extension */
	T0* a53; /* declared_culture */
	T0* a54; /* declared_dead_code_removal */
	T0* a55; /* declared_debug_option */
	T0* a56; /* declared_debug_tag */
	T0* a57; /* declared_debugger */
	T0* a58; /* declared_document */
	T0* a59; /* declared_dotnet_naming_convention */
	T0* a60; /* declared_dynamic_runtime */
	T0* a61; /* declared_exception_trace */
	T0* a62; /* declared_exclude */
	T0* a63; /* declared_export_option */
	T0* a64; /* declared_finalize_option */
	T0* a65; /* declared_flat_fst_optimization */
	T0* a66; /* declared_fst_optimization */
	T0* a67; /* declared_garbage_collector */
	T0* a68; /* declared_gc_info */
	T0* a69; /* declared_high_memory_compiler */
	T0* a70; /* declared_il_verifiable */
	T0* a71; /* declared_include */
	T0* a72; /* declared_inlining */
	T0* a73; /* declared_jumps_optimization */
	T0* a74; /* declared_layout */
	T0* a75; /* declared_layout_optimization */
	T0* a76; /* declared_leaves_optimization */
	T0* a77; /* declared_line_generation */
	T0* a78; /* declared_linker */
	T0* a79; /* declared_linux_fpu_double_precision */
	T0* a80; /* declared_manifest_string_trace */
	T0* a81; /* declared_map */
	T0* a82; /* declared_metadata_cache_path */
	T0* a83; /* declared_msil_assembly_compatibility */
	T0* a84; /* declared_msil_clr_version */
	T0* a85; /* declared_msil_generation */
	T0* a86; /* declared_msil_generation_version */
	T0* a87; /* declared_multithreaded */
	T0* a88; /* declared_namespace */
	T0* a89; /* declared_no_default_lib */
	T0* a90; /* declared_override_cluster */
	T0* a91; /* declared_portable_code_generation */
	T0* a92; /* declared_precompiled */
	T0* a93; /* declared_prefix_option */
	T0* a94; /* declared_profile */
	T0* a95; /* declared_public_key_token */
	T0* a96; /* declared_reloads_optimization */
	T0* a97; /* declared_shared_library_definition */
	T0* a98; /* declared_split */
	T0* a99; /* declared_storable_filename */
	T0* a100; /* declared_strip_option */
	T0* a101; /* declared_target */
	T0* a102; /* declared_trace */
	T0* a103; /* declared_use_cluster_name_as_namespace */
	T0* a104; /* declared_use_full_cluster_name_as_namespace */
	T0* a105; /* declared_verbose */
	T0* a106; /* declared_version */
	T0* a107; /* declared_visible_filename */
	T0* a108; /* declared_warning */
	T0* a109; /* declared_wedit */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S268 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library */
	T0* a3; /* position */
	T0* a4; /* library_prefix */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S269 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S270 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S271 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S272 {
	int id;
	T1 a1; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
	T0* a7; /* container */
	T1 a8; /* before */
};

/* Struct for type ET_XACE_LIBRARY */
struct S274 {
	int id;
	T0* a1; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* options */
	T0* a5; /* clusters */
	T0* a6; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S275 {
	int id;
	T6 a4; /* found_position */
	T0* a8; /* item_storage */
	T0* a9; /* key_storage */
	T6 a10; /* position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T6 a19; /* count */
	T6 a20; /* capacity */
	T0* a22; /* equality_tester */
	T6 a23; /* modulus */
	T6 a24; /* slots_position */
	T6 a25; /* clashes_previous_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a30; /* internal_cursor */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S278 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S279 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S280 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S281 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S282 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S283 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S284 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S286 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S287 {
	int id;
	T0* a1; /* named_features */
	T0* a3; /* queries */
	T0* a4; /* procedures */
	T0* a5; /* aliased_features */
	T0* a7; /* clients_list */
	T0* a8; /* client_names */
	T0* a10; /* feature_adaptation_resolver */
	T0* a11; /* dotnet_feature_adaptation_resolver */
	T0* a12; /* identifier_type_resolver */
	T0* a13; /* anchored_type_checker */
	T0* a14; /* signature_checker */
	T0* a15; /* parent_checker */
	T0* a16; /* formal_parameter_checker */
	T0* a17; /* precursor_checker */
	T0* a18; /* universe */
	T0* a19; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S288 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S289 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* supplier_builder */
	T0* a3; /* current_class */
	T0* a4; /* no_suppliers */
	T1 a5; /* flat_mode */
	T1 a6; /* flat_dbc_mode */
	T1 a7; /* suppliers_enabled */
	T0* a8; /* universe */
	T1 a12; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S290 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S291 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S295 {
	int id;
	T6 a3; /* year */
	T6 a4; /* month */
	T6 a5; /* day */
	T6 a6; /* hour */
	T6 a7; /* minute */
	T6 a8; /* second */
	T6 a9; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S296 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a10; /* last_text_count */
	T6 a11; /* last_literal_start */
	T0* a12; /* filename */
	T0* a13; /* universe */
	T0* a14; /* ast_factory */
	T0* a15; /* error_handler */
	T0* a21; /* input_buffer */
	T0* a23; /* last_classname */
	T6 a25; /* yy_start_state */
	T6 a26; /* yy_line */
	T6 a27; /* yy_column */
	T6 a28; /* yy_position */
	T6 a29; /* line */
	T6 a30; /* column */
	T6 a31; /* position */
	T0* a33; /* yy_state_stack */
	T6 a35; /* yy_end */
	T6 a36; /* yy_start */
	T6 a37; /* last_token */
	T1 a44; /* yy_more_flag */
	T6 a45; /* yy_more_len */
	T6 a46; /* yy_state_count */
	T0* a47; /* yy_ec */
	T0* a48; /* yy_content_area */
	T0* a49; /* yy_content */
	T0* a50; /* yy_accept */
	T6 a51; /* yy_last_accepting_state */
	T6 a52; /* yy_last_accepting_cpos */
	T0* a53; /* yy_chk */
	T0* a54; /* yy_base */
	T0* a55; /* yy_def */
	T0* a56; /* yy_meta */
	T0* a58; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a64; /* yy_looking_for_trail_begin */
	T6 a66; /* yy_full_match */
	T6 a67; /* yy_full_state */
	T6 a68; /* yy_full_lp */
	T1 a74; /* yy_rejected */
	T1 a75; /* class_keyword_found */
	T6 a76; /* last_literal_end */
	T0* a77; /* verbatim_marker */
	T0* a78; /* verbatim_open_white_characters */
	T0* a79; /* verbatim_close_white_characters */
	T6 a88; /* ms_column */
	T6 a89; /* ms_line */
	T6 a93; /* last_break_end */
	T6 a94; /* last_comment_end */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S297 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S298 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a6; /* container */
};

/* Struct for type ET_NONE_GROUP */
struct S299 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_PARENT */
struct S300 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a9; /* end_keyword */
};

/* Struct for type ET_TUPLE_TYPE */
struct S301 {
	int id;
	T0* a1; /* tuple_keyword */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_RENAME_LIST */
struct S302 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S303 {
	int id;
	T0* a1; /* export_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S304 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S305 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S307 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S308 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S309 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_PROCEDURE */
struct S310 {
	int id;
	T0* a5; /* arguments */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_class */
	T0* a13; /* implementation_feature */
	T0* a14; /* is_keyword */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* locals */
	T0* a18; /* compound */
	T0* a19; /* postconditions */
	T0* a20; /* rescue_clause */
	T0* a21; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S312 {
	int id;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S315 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a6; /* arguments */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a11; /* hash_code */
	T0* a12; /* end_keyword */
	T0* a13; /* clients */
	T0* a14; /* implementation_class */
	T0* a15; /* is_keyword */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a26; /* implementation_checked */
	T1 a27; /* has_implementation_error */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* semicolon */
	T0* a33; /* feature_clause */
	T0* a34; /* other_seeds */
	T0* a35; /* frozen_keyword */
	T6 a36; /* id */
	T6 a37; /* version */
	T1 a38; /* has_assertions_error */
	T1 a39; /* assertions_checked */
	T0* a40; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S316 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a7; /* other_types */
	T0* a8; /* targets */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S317 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S319 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S320 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S321 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S322 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S323 {
	int id;
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S324 {
	int id;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S325 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S326 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S327 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S328 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S329 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a5; /* element_local_part */
	T1 a9; /* forward_xmlns */
	T0* a11; /* attributes_prefix */
	T0* a13; /* attributes_local_part */
	T0* a14; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S330 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S331 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S332 {
	int id;
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S333 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8] */
struct S336 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8] */
struct S338 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY] */
struct S339 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
struct S340 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S341 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a14; /* character_entity */
	T0* a16; /* input_stream */
	T0* a17; /* input_resolver */
	T1 a25; /* yy_more_flag */
	T6 a26; /* yy_more_len */
	T6 a27; /* yy_end */
	T6 a28; /* yy_start */
	T6 a29; /* yy_line */
	T6 a30; /* yy_column */
	T6 a31; /* yy_position */
	T0* a32; /* input_buffer */
	T0* a34; /* yy_state_stack */
	T6 a35; /* yy_state_count */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_content_area */
	T0* a38; /* yy_content */
	T0* a39; /* yy_accept */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T0* a42; /* yy_chk */
	T0* a43; /* yy_base */
	T0* a44; /* yy_def */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_nxt */
	T6 a49; /* yy_lp */
	T0* a50; /* yy_acclist */
	T6 a53; /* yy_looking_for_trail_begin */
	T6 a55; /* yy_full_match */
	T6 a56; /* yy_full_state */
	T6 a57; /* yy_full_lp */
	T1 a63; /* yy_rejected */
	T0* a65; /* last_error */
	T0* a66; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S342 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S344 {
	int id;
	T0* a2; /* first_cell */
	T0* a3; /* internal_cursor */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S345 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S346 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* capacity */
	T6 a14; /* slots_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* internal_keys */
	T6 a20; /* modulus */
	T6 a21; /* clashes_previous_position */
	T0* a23; /* internal_cursor */
	T6 a25; /* found_position */
	T0* a26; /* key_storage */
	T0* a27; /* clashes */
	T0* a28; /* slots */
	T0* a31; /* equality_tester */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S348 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S349 {
	int id;
	T1 a2; /* use_namespaces */
	T6 a3; /* count */
	T0* a4; /* first */
	T0* a5; /* second */
	T0* a6; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S350 {
	int id;
	T0* a1; /* version */
	T0* a3; /* encoding */
	T1 a5; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S351 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S352 {
	int id;
	T6 a2; /* position */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a14; /* modulus */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* internal_cursor */
	T6 a22; /* found_position */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a26; /* item_storage */
	T0* a27; /* special_item_routines */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S353 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S354 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S355 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S356 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S357 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S358 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S359 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S360 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S361 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S362 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S363 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S364 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S365 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S366 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S367 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S369 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S371 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S372 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S373 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S374 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S375 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S376 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T0* a35; /* yy_nxt */
	T0* a37; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a41; /* yy_def */
	T0* a43; /* yy_ec */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_accept */
	T0* a49; /* yy_content */
	T0* a50; /* yy_content_area */
	T6 a57; /* last_token */
	T0* a58; /* last_value */
	T0* a64; /* input_filter */
	T0* a67; /* input_stream */
	T0* a68; /* input_resolver */
	T0* a88; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S377 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S379 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S380 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a15; /* character_entity */
	T0* a17; /* input_stream */
	T0* a18; /* input_resolver */
	T1 a20; /* decl_start_sent */
	T1 a22; /* decl_end_sent */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_end */
	T6 a33; /* yy_start */
	T6 a34; /* yy_line */
	T6 a35; /* yy_column */
	T6 a36; /* yy_position */
	T0* a37; /* input_buffer */
	T0* a39; /* yy_state_stack */
	T6 a40; /* yy_state_count */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_content_area */
	T0* a43; /* yy_content */
	T0* a44; /* yy_accept */
	T6 a45; /* yy_last_accepting_state */
	T6 a46; /* yy_last_accepting_cpos */
	T0* a47; /* yy_chk */
	T0* a48; /* yy_base */
	T0* a49; /* yy_def */
	T0* a50; /* yy_meta */
	T0* a52; /* yy_nxt */
	T6 a54; /* yy_lp */
	T0* a55; /* yy_acclist */
	T6 a58; /* yy_looking_for_trail_begin */
	T6 a60; /* yy_full_match */
	T6 a61; /* yy_full_state */
	T6 a62; /* yy_full_lp */
	T1 a68; /* yy_rejected */
	T0* a70; /* last_error */
	T0* a71; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S382 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a39; /* yy_chk */
	T0* a41; /* yy_base */
	T0* a43; /* yy_def */
	T0* a45; /* yy_ec */
	T0* a47; /* yy_meta */
	T0* a49; /* yy_accept */
	T0* a51; /* yy_content */
	T0* a52; /* yy_content_area */
	T6 a58; /* last_token */
	T0* a59; /* last_value */
	T0* a65; /* input_filter */
	T0* a69; /* input_stream */
	T0* a70; /* input_resolver */
	T0* a91; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
struct S383 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER_32] */
struct S384 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING_8] */
struct S385 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S386 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S388 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S390 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S392 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S393 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S394 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S395 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S396 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S397 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S398 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S399 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S400 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S401 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S402 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S404 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S406 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S407 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S408 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S409 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S410 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S411 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S412 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S413 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* left_bracket */
	T0* a7; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S414 {
	int id;
	T14 a1; /* item */
	T6 a3; /* count */
	T1 a4; /* is_shared */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S415 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S416 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S417 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S418 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S419 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S420 {
	int id;
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S421 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S422 {
	int id;
	T6 a1; /* count */
	T0* a4; /* internal_cursor */
	T0* a9; /* item_storage */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a13; /* last_position */
	T6 a14; /* free_slot */
	T6 a16; /* position */
	T6 a18; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a31; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S424 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type KL_DIRECTORY */
struct S426 {
	int id;
	T1 a2; /* end_of_input */
	T0* a3; /* last_entry */
	T6 a5; /* mode */
	T0* a7; /* name */
	T0* a9; /* string_name */
	T0* a10; /* entry_buffer */
	T0* a13; /* lastentry */
	T14 a16; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S427 {
	int id;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S428 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S430 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S431 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S432 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a3; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S434 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S435 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S436 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S437 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S438 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S439 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a9; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S440 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S441 {
	int id;
};

/* Struct for type ET_SYMBOL */
struct S442 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S443 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S444 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S445 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S446 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S447 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S448 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S449 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S451 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S452 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S454 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S455 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S457 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S458 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S459 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S460 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S461 {
	int id;
	T2 a1; /* code */
	T6 a3; /* hash_code */
	T6 a9; /* compressed_position */
	T0* a10; /* free_operator_name */
	T6 a16; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S462 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S463 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S465 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S466 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S467 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S468 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S469 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S470 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S471 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S473 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S474 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S475 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S476 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S477 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S478 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S479 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S480 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a15; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S481 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S482 {
	int id;
};

/* Struct for type ET_VOID */
struct S483 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S484 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S485 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S486 {
	int id;
	T2 a1; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S487 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S488 {
	int id;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S489 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S490 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S491 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S492 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a10; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S493 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S494 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S495 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* type */
	T0* a22; /* cast_type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S496 {
	int id;
	T0* a1; /* value */
	T6 a6; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* cast_type */
	T0* a25; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S497 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a11; /* compressed_position */
	T6 a13; /* index */
	T0* a26; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S498 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a7; /* compressed_position */
	T6 a9; /* index */
	T0* a22; /* cast_type */
	T0* a26; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S499 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S500 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S501 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a31; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S502 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S503 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S505 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S506 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S507 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S508 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S510 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S512 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S513 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S514 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S515 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S516 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S517 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S518 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S519 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S520 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a4; /* storage */
	T6 a5; /* count */
	T1 a7; /* assertions_checked */
	T1 a8; /* implementation_checked */
	T1 a9; /* has_assertions_error */
	T1 a10; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S521 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S522 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S524 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S526 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S528 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S532 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S533 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S535 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S536 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S537 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S538 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S539 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S540 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S541 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S542 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S543 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S544 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S545 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S546 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S548 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S549 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S551 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S552 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S553 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a3; /* constraint */
	T0* a4; /* creation_procedures */
	T0* a5; /* type_mark */
	T0* a6; /* name */
	T6 a7; /* index */
	T0* a10; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S554 {
	int id;
	T0* a1; /* create_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S555 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S556 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S558 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S559 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S560 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S561 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S562 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S564 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S565 {
	int id;
	T0* a2; /* constant */
	T6 a3; /* size */
	T0* a5; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S566 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a3; /* name */
	T6 a4; /* size */
	T0* a29; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S567 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S569 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S571 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S572 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S573 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S574 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S575 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S576 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S577 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S578 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S579 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S580 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S581 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S582 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S583 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S584 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S586 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S587 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S588 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S589 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a4; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S590 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S591 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S593 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S594 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S595 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S596 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S597 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S598 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S600 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S601 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S603 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S604 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S605 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S606 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S607 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S608 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a3; /* clients */
	T0* a4; /* storage */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S609 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S610 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S611 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S613 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S616 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S618 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S619 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S620 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S621 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a5; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S622 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S623 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S625 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S626 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S627 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S628 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S629 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S630 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S631 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S634 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S635 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S636 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S638 {
	int id;
	T0* a1; /* require_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S639 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S640 {
	int id;
	T0* a1; /* local_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S641 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S642 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S643 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S644 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S645 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S646 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S647 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S648 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S649 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a6; /* arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* is_keyword */
	T0* a13; /* assigner */
	T0* a14; /* obsolete_message */
	T0* a15; /* preconditions */
	T0* a16; /* postconditions */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a36; /* first_precursor */
	T0* a37; /* other_precursors */
	T0* a38; /* semicolon */
	T0* a39; /* feature_clause */
	T0* a40; /* other_seeds */
	T0* a41; /* frozen_keyword */
	T6 a42; /* id */
	T6 a43; /* version */
	T1 a44; /* has_assertions_error */
	T1 a45; /* assertions_checked */
	T0* a46; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S652 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S653 {
	int id;
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S654 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* implementation_feature */
	T0* a10; /* is_keyword */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S655 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_feature */
	T6 a11; /* builtin_code */
	T0* a12; /* is_keyword */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a20; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a35; /* semicolon */
	T0* a36; /* feature_clause */
	T0* a37; /* other_seeds */
	T0* a38; /* frozen_keyword */
	T6 a39; /* id */
	T6 a40; /* version */
	T1 a41; /* has_assertions_error */
	T1 a42; /* assertions_checked */
	T0* a43; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S656 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S657 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S658 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S659 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a15; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S660 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a17; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S661 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a18; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S662 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a38; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S663 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S664 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a56; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S665 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S666 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S667 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S668 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a16; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S669 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S671 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S672 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S674 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S675 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S676 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S678 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S679 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S680 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S682 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S683 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S684 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S685 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S686 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S687 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S688 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S689 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S690 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S691 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a3; /* tag */
	T0* a4; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S692 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S693 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S694 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S695 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S696 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S697 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S699 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S700 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S702 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* name */
	T6 a27; /* seed */
	T1 a29; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S703 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S704 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S706 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S707 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S708 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S710 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S711 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S712 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S713 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S714 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S715 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S716 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a5; /* elseif_parts */
	T0* a6; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S717 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S718 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S719 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S721 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a6; /* invariant_part */
	T0* a7; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S722 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S723 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S724 {
	int id;
	T0* a1; /* check_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S726 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a6; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S727 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S728 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S730 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S731 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S732 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S733 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S734 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S735 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S736 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S737 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S738 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S739 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S740 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S741 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S742 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S743 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S744 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S745 {
	int id;
	T0* a1; /* when_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S746 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S747 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S748 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S750 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S752 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S753 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S755 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S756 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S757 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S758 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S759 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S760 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S761 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S762 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S763 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S764 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S766 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S767 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S768 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S770 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S771 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S772 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S773 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S774 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T6 a6; /* index */
	T0* a10; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S775 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S776 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S777 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S778 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S779 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S780 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S781 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* current_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S782 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* result_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S783 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S784 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S785 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S787 {
	int id;
	T0* a1; /* and_keyword */
	T0* a3; /* then_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S788 {
	int id;
	T0* a1; /* or_keyword */
	T0* a3; /* else_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S789 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S790 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S791 {
	int id;
	T0* a1; /* old_keyword */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type ET_CALL_AGENT */
struct S792 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
	T0* a9; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S793 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S795 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S796 {
	int id;
	T0* a1; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
	T6 a5; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S797 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S798 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S799 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
	T6 a8; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S800 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S801 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S802 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S803 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S804 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S805 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S806 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S807 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S808 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S809 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S810 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S811 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S812 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S813 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S814 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S815 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S816 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S817 {
	int id;
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S818 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S819 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S820 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S821 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S822 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S823 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S824 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S825 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S827 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S828 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S829 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S830 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T0* a5; /* question_mark */
	T6 a8; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S832 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S835 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S836 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S839 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S840 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S841 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S843 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S845 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S847 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S848 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S849 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S850 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S851 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S852 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S854 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S855 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S856 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S857 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S858 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S860 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S861 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S862 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S864 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
struct S866 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S867 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S868 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S869 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S870 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S871 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S872 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
struct S874 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S877 {
	int id;
	T6 a1; /* count */
	T0* a6; /* byte_code */
	T0* a7; /* character_sets */
	T6 a8; /* capacity */
	T6 a10; /* character_sets_count */
	T6 a11; /* character_sets_capacity */
};

/* Struct for type RX_CASE_MAPPING */
struct S878 {
	int id;
	T0* a3; /* lower_table */
	T0* a4; /* flip_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S879 {
	int id;
	T0* a2; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S881 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S882 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S883 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T6 a8; /* modulus */
	T6 a9; /* last_position */
	T6 a15; /* capacity */
	T6 a16; /* position */
	T6 a17; /* free_slot */
	T6 a19; /* slots_position */
	T6 a20; /* count */
	T0* a21; /* equality_tester */
	T0* a22; /* key_equality_tester */
	T0* a23; /* internal_keys */
	T0* a24; /* slots */
	T0* a26; /* clashes */
	T0* a27; /* special_item_routines */
	T0* a28; /* key_storage */
	T0* a29; /* special_key_routines */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
struct S884 {
	int id;
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
	T6 a9; /* count */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S885 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S888 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S889 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S890 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S891 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S892 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S893 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S894 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S895 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S896 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S897 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S898 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S899 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S900 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S901 {
	int id;
	T11 a3; /* part1 */
	T6 a4; /* sign */
	T11 a5; /* part2 */
	T6 a6; /* last_state */
	T1 a7; /* internal_overflowed */
	T0* a9; /* leading_separators */
	T0* a10; /* trailing_separators */
	T1 a11; /* leading_separators_acceptable */
	T1 a12; /* trailing_separators_acceptable */
	T6 a13; /* conversion_type */
};

/* Struct for type C_STRING */
struct S904 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S905 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S906 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S907 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a6; /* default_template */
	T0* a9; /* parameters */
	T0* a11; /* current_class */
	T0* a12; /* class_impl */
	T0* a13; /* position */
	T0* a15; /* code */
	T0* a18; /* etl_code */
	T1 a59; /* ise_fatal */
	T1 a60; /* se_fatal */
	T1 a61; /* ve_fatal */
	T1 a62; /* ge_fatal */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S908 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S909 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a11; /* filename */
	T0* a12; /* position */
	T1 a13; /* ise_reported */
	T1 a14; /* ise_fatal */
	T1 a15; /* se_reported */
	T1 a16; /* se_fatal */
	T1 a17; /* ve_reported */
	T1 a18; /* ve_fatal */
	T1 a19; /* ge_reported */
	T1 a20; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S910 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S911 {
	int id;
	T6 a2; /* count */
	T0* a3; /* internal_cursor */
	T0* a5; /* first_cell */
	T0* a6; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S912 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S913 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S914 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S915 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S916 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S917 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S918 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S919 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S920 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S921 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* agent_type */
	T0* a8; /* other_types */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S923 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S924 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S925 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S926 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S927 {
	int id;
	T6 a2; /* count */
	T0* a6; /* area */
	T6 a22; /* byte_count */
	T6 a33; /* internal_hash_code */
	T6 a39; /* last_byte_index_input */
	T6 a40; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S928 {
	int id;
	T0* a1; /* last_string */
	T6 a12; /* encoding */
	T0* a19; /* utf_queue */
	T0* a20; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S929 {
	int id;
	T0* a3; /* as_special */
	T0* a6; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S930 {
	int id;
};

/* Struct for type KL_STDIN_FILE */
struct S931 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a5; /* character_buffer */
	T14 a10; /* file_pointer */
	T6 a15; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S932 {
	int id;
	T0* a2; /* filename */
	T6 a10; /* compressed_position */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S934 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S936 {
	int id;
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S938 {
	int id;
};

/* Struct for type ARRAY [ET_TYPE] */
struct S939 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S943 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S944 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S945 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S946 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S947 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S949 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type UT_TRISTATE */
struct S950 {
	int id;
	T2 a4; /* value */
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S951 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S952 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S953 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
struct S954 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S956 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S958 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a36; /* slots_position */
	T6 a37; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S959 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S961 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a26; /* slots_position */
	T6 a28; /* count */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S962 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S964 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S965 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a18; /* count */
	T6 a29; /* slots_position */
	T6 a33; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S966 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* rename_table */
	T0* a5; /* export_table */
	T0* a6; /* undefine_table */
	T0* a7; /* redefine_table */
	T0* a8; /* select_table */
	T0* a9; /* replicable_features */
	T1 a10; /* has_fatal_error */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S967 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* dotnet_features */
	T0* a4; /* other_dotnet_features */
	T1 a5; /* has_fatal_error */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S968 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S969 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S970 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* parent_context */
	T1 a4; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S971 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S972 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S973 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* current_feature */
	T1 a5; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S974 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S975 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a7; /* current_feature_impl */
	T0* a8; /* current_class_impl */
	T0* a9; /* enclosing_inline_agents */
	T0* a10; /* overloaded_procedures */
	T0* a11; /* unused_overloaded_procedures_list */
	T0* a12; /* overloaded_queries */
	T0* a13; /* unused_overloaded_queries_list */
	T0* a14; /* best_overloaded_features */
	T0* a15; /* unused_contexts */
	T0* a16; /* current_context */
	T1 a18; /* has_fatal_error */
	T1 a19; /* in_assertion */
	T1 a20; /* in_invariant */
	T1 a22; /* in_precondition */
	T1 a23; /* in_postcondition */
	T0* a24; /* current_target_type */
	T1 a25; /* in_precursor */
	T0* a26; /* current_inline_agent */
	T1 a27; /* in_rescue */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S976 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a5; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S977 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* sorted_items */
	T0* a7; /* cycle */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
struct S978 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S979 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S980 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* universe */
	T1 a5; /* has_fatal_error */
	T0* a7; /* current_formal */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S985 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S986 {
	int id;
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S987 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S988 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S989 {
	int id;
	T0* a5; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S991 {
	int id;
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8] */
struct S992 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY] */
struct S993 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S994 {
	int id;
	T6 a5; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER_32] */
struct S995 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S996 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S997 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S998 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S999 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1000 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1002 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1004 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1005 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1006 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1007 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1008 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1009 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1010 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1011 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S1012 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S1013 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S1014 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1015 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S1016 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1017 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1018 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S1019 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1020 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S1022 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1023 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S1024 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S1025 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S1026 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S1027 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S1028 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S1029 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1030 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1031 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1032 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1033 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1034 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1035 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1036 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1037 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1039 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1040 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1041 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1042 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1043 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1044 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1045 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1047 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1052 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1053 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1054 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1055 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1056 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1057 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1058 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1059 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1060 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1062 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1063 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1064 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1065 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1066 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1067 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1068 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1069 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1070 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1074 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1075 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1076 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1077 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1078 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1079 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1080 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1081 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1082 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1104 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1113 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1119 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1122 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1123 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1129 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1130 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1132 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1133 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1134 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1135 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1139 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1140 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1141 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1142 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1143 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1144 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1145 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1146 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1147 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* index */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1148 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1149 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1150 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1151 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1152 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1153 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1154 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1156 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1157 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1158 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1159 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1160 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1161 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1162 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S1163 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1164 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1165 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1166 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1167 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1168 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_INLINE_CONSTANT] */
struct S1169 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1170 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
struct S1171 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1172 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1174 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1175 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
struct S1176 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
struct S1177 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1180 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1181 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1182 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1183 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1189 {
	int id;
	T0* a7; /* integer_overflow_state1 */
	T0* a8; /* integer_overflow_state2 */
	T0* a10; /* natural_overflow_state1 */
	T0* a11; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1190 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1191 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1194 {
	int id;
	T6 a1; /* count */
	T0* a3; /* first_cell */
	T0* a5; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1195 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1196 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1197 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1198 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
struct S1199 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1201 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1203 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1204 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1206 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1207 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1209 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S1210 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1211 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1212 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1213 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1214 {
	int id;
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a11; /* internal_cursor */
	T0* a14; /* item_storage */
	T0* a16; /* key_equality_tester */
	T0* a17; /* internal_keys */
	T6 a18; /* position */
	T6 a19; /* last_position */
	T6 a20; /* free_slot */
	T6 a22; /* modulus */
	T6 a29; /* slots_position */
	T0* a30; /* equality_tester */
	T6 a31; /* clashes_previous_position */
	T0* a34; /* key_storage */
	T0* a35; /* clashes */
	T0* a36; /* slots */
	T0* a38; /* special_item_routines */
	T0* a39; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1215 {
	int id;
	T6 a5; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a10; /* internal_cursor */
	T0* a15; /* item_storage */
	T6 a16; /* modulus */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T0* a22; /* equality_tester */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1216 {
	int id;
	T6 a1; /* count */
	T6 a8; /* capacity */
	T6 a9; /* found_position */
	T0* a13; /* internal_cursor */
	T0* a17; /* key_storage */
	T0* a18; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* position */
	T6 a23; /* last_position */
	T6 a24; /* free_slot */
	T6 a26; /* modulus */
	T0* a32; /* equality_tester */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
	T0* a38; /* clashes */
	T0* a39; /* slots */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1217 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T6 a17; /* count */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T6 a21; /* capacity */
	T0* a27; /* equality_tester */
	T0* a28; /* key_equality_tester */
	T0* a29; /* internal_keys */
	T0* a34; /* clashes */
	T6 a35; /* modulus */
	T0* a36; /* slots */
	T6 a37; /* slots_position */
	T6 a38; /* clashes_previous_position */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1218 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1219 {
	int id;
	T6 a1; /* capacity */
	T6 a4; /* found_position */
	T0* a7; /* item_storage */
	T6 a8; /* modulus */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* internal_cursor */
	T0* a15; /* equality_tester */
	T6 a16; /* count */
	T6 a23; /* slots_position */
	T0* a24; /* special_item_routines */
	T0* a25; /* clashes */
	T0* a27; /* slots */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1221 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T6 a13; /* capacity */
	T6 a16; /* slots_position */
	T0* a18; /* equality_tester */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1222 {
	int id;
	T0* a2; /* cycle */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* items */
	T0* a6; /* sorted_items */
	T0* a7; /* indexes */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1223 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* next */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1224 {
	int id;
	T6 a3; /* count */
	T0* a6; /* storage */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
	T0* a9; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1225 {
	int id;
	T6 a2; /* position */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a8; /* modulus */
	T6 a14; /* capacity */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* equality_tester */
	T0* a20; /* internal_keys */
	T0* a21; /* internal_cursor */
	T6 a23; /* found_position */
	T0* a24; /* item_storage */
	T0* a25; /* key_storage */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a29; /* special_item_routines */
	T0* a30; /* special_key_routines */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
struct S1227 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S1229 {
	int id;
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1230 {
	int id;
	T0* a3; /* cycle */
	T0* a4; /* sorted_items */
	T0* a5; /* items */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* indexes */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1231 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1233 {
	int id;
	T6 a2; /* count */
	T0* a4; /* last_cell */
	T0* a5; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1234 {
	int id;
	T1 a1; /* before */
	T0* a3; /* current_cell */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
	T1 a6; /* after */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1236 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1237 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1238 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1239 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1242 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1243 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1249 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1250 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1251 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1252 {
	int id;
	T0* a2; /* deltas */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1254 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T0* a7; /* equality_tester */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T6 a21; /* free_slot */
	T0* a22; /* internal_cursor */
	T6 a24; /* found_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a28; /* special_item_routines */
};

/* Struct for type XM_COMMENT */
struct S1255 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1256 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1257 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1258 {
	int id;
	T0* a2; /* uri */
	T0* a4; /* ns_prefix */
};

/* Struct for type ET_FEATURE_IDS */
struct S1259 {
	int id;
	T6 a1; /* count */
	T0* a4; /* feature_ids */
};

/* Struct for type ET_FEATURE_LIST */
struct S1260 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1261 {
	int id;
	T0* a3; /* next */
	T0* a4; /* precursor_feature */
	T0* a5; /* parent */
	T0* a6; /* new_name */
	T0* a7; /* undefine_name */
	T0* a8; /* redefine_name */
	T0* a9; /* select_name */
	T0* a10; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1262 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1263 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1264 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1270 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1274 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1275 {
	int id;
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1278 {
	int id;
	T6 a3; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1279 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1281 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1282 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1283 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1285 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1286 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1287 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1288 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1289 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1290 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1291 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1292 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_64] */
struct S1293 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S1294 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1296 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1297 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1298 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1299 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1300 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1301 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1303 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1305 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1306 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1307 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1308 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1310 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1311 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1313 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1315 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1316 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1317 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1318 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1319 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1321 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1323 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1324 {
	int id;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1326 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1327 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
struct S1328 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1330 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S1331 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1332 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1333 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1336 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* assembly */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S1337 {
	int id;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1338 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1339 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1347 {
	int id;
	T0* a2; /* default_output */
};

/* Struct for type PLATFORM */
struct S1348 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1350 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1351 {
	int id;
	T0* a1; /* element */
	T0* a3; /* xml_attribute */
	T0* a5; /* composite */
	T0* a6; /* document */
	T0* a7; /* character_data */
	T0* a8; /* processing_instruction */
	T0* a9; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1358 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1359 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1360 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1363 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1367 {
	int id;
	T1 a1; /* end_of_input */
	T2 a3; /* last_character */
	T0* a6; /* string */
	T6 a7; /* location */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1370 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1379 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1380 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1383 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1384 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1385 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1386 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1387 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1388 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1389 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1390 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1391 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1392 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1393 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1394 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1395 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1396 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1397 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1398 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1399 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1402 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1403 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1404 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1405 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1406 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1407 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1408 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1409 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1411 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1413 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
struct S1414 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1417 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1419 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S1420 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1426 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1428 {
	int id;
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1429 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1430 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1431 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1432 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1437 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1439 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type CONSOLE */
struct S1440 {
	int id;
	T14 a1; /* file_pointer */
	T0* a3; /* name */
	T6 a4; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1441 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1444 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


extern T1 gedefault1;
extern T2 gedefault2;
extern T3 gedefault3;
extern T4 gedefault4;
extern T5 gedefault5;
extern T6 gedefault6;
extern T7 gedefault7;
extern T8 gedefault8;
extern T9 gedefault9;
extern T10 gedefault10;
extern T11 gedefault11;
extern T12 gedefault12;
extern T13 gedefault13;
extern T14 gedefault14;
extern T15 gedefault15;
extern T17 gedefault17;
extern T21 gedefault21;
extern T22 gedefault22;
extern T23 gedefault23;
extern T24 gedefault24;
extern T26 gedefault26;
extern T28 gedefault28;
extern T29 gedefault29;
extern T30 gedefault30;
extern T31 gedefault31;
extern T32 gedefault32;
extern T33 gedefault33;
extern T35 gedefault35;
extern T36 gedefault36;
extern T37 gedefault37;
extern T41 gedefault41;
extern T43 gedefault43;
extern T44 gedefault44;
extern T45 gedefault45;
extern T46 gedefault46;
extern T48 gedefault48;
extern T49 gedefault49;
extern T50 gedefault50;
extern T53 gedefault53;
extern T54 gedefault54;
extern T55 gedefault55;
extern T56 gedefault56;
extern T57 gedefault57;
extern T58 gedefault58;
extern T60 gedefault60;
extern T61 gedefault61;
extern T62 gedefault62;
extern T63 gedefault63;
extern T64 gedefault64;
extern T65 gedefault65;
extern T67 gedefault67;
extern T68 gedefault68;
extern T69 gedefault69;
extern T70 gedefault70;
extern T71 gedefault71;
extern T73 gedefault73;
extern T75 gedefault75;
extern T76 gedefault76;
extern T77 gedefault77;
extern T78 gedefault78;
extern T79 gedefault79;
extern T80 gedefault80;
extern T81 gedefault81;
extern T82 gedefault82;
extern T83 gedefault83;
extern T84 gedefault84;
extern T85 gedefault85;
extern T86 gedefault86;
extern T89 gedefault89;
extern T92 gedefault92;
extern T94 gedefault94;
extern T95 gedefault95;
extern T96 gedefault96;
extern T97 gedefault97;
extern T98 gedefault98;
extern T99 gedefault99;
extern T100 gedefault100;
extern T102 gedefault102;
extern T103 gedefault103;
extern T104 gedefault104;
extern T105 gedefault105;
extern T106 gedefault106;
extern T107 gedefault107;
extern T108 gedefault108;
extern T109 gedefault109;
extern T110 gedefault110;
extern T113 gedefault113;
extern T114 gedefault114;
extern T116 gedefault116;
extern T117 gedefault117;
extern T118 gedefault118;
extern T119 gedefault119;
extern T120 gedefault120;
extern T121 gedefault121;
extern T122 gedefault122;
extern T123 gedefault123;
extern T124 gedefault124;
extern T125 gedefault125;
extern T126 gedefault126;
extern T127 gedefault127;
extern T129 gedefault129;
extern T130 gedefault130;
extern T131 gedefault131;
extern T132 gedefault132;
extern T133 gedefault133;
extern T134 gedefault134;
extern T135 gedefault135;
extern T136 gedefault136;
extern T137 gedefault137;
extern T138 gedefault138;
extern T139 gedefault139;
extern T140 gedefault140;
extern T141 gedefault141;
extern T142 gedefault142;
extern T143 gedefault143;
extern T144 gedefault144;
extern T145 gedefault145;
extern T146 gedefault146;
extern T147 gedefault147;
extern T148 gedefault148;
extern T149 gedefault149;
extern T150 gedefault150;
extern T151 gedefault151;
extern T152 gedefault152;
extern T153 gedefault153;
extern T154 gedefault154;
extern T155 gedefault155;
extern T156 gedefault156;
extern T158 gedefault158;
extern T160 gedefault160;
extern T162 gedefault162;
extern T163 gedefault163;
extern T164 gedefault164;
extern T165 gedefault165;
extern T169 gedefault169;
extern T170 gedefault170;
extern T171 gedefault171;
extern T172 gedefault172;
extern T173 gedefault173;
extern T175 gedefault175;
extern T178 gedefault178;
extern T180 gedefault180;
extern T181 gedefault181;
extern T182 gedefault182;
extern T183 gedefault183;
extern T184 gedefault184;
extern T185 gedefault185;
extern T186 gedefault186;
extern T187 gedefault187;
extern T188 gedefault188;
extern T189 gedefault189;
extern T190 gedefault190;
extern T192 gedefault192;
extern T194 gedefault194;
extern T195 gedefault195;
extern T196 gedefault196;
extern T198 gedefault198;
extern T199 gedefault199;
extern T200 gedefault200;
extern T201 gedefault201;
extern T202 gedefault202;
extern T203 gedefault203;
extern T204 gedefault204;
extern T205 gedefault205;
extern T206 gedefault206;
extern T207 gedefault207;
extern T208 gedefault208;
extern T209 gedefault209;
extern T210 gedefault210;
extern T211 gedefault211;
extern T212 gedefault212;
extern T213 gedefault213;
extern T214 gedefault214;
extern T215 gedefault215;
extern T216 gedefault216;
extern T217 gedefault217;
extern T219 gedefault219;
extern T224 gedefault224;
extern T225 gedefault225;
extern T227 gedefault227;
extern T229 gedefault229;
extern T233 gedefault233;
extern T234 gedefault234;
extern T235 gedefault235;
extern T236 gedefault236;
extern T238 gedefault238;
extern T239 gedefault239;
extern T247 gedefault247;
extern T248 gedefault248;
extern T250 gedefault250;
extern T251 gedefault251;
extern T252 gedefault252;
extern T253 gedefault253;
extern T254 gedefault254;
extern T255 gedefault255;
extern T256 gedefault256;
extern T257 gedefault257;
extern T259 gedefault259;
extern T261 gedefault261;
extern T262 gedefault262;
extern T263 gedefault263;
extern T266 gedefault266;
extern T267 gedefault267;
extern T268 gedefault268;
extern T269 gedefault269;
extern T270 gedefault270;
extern T271 gedefault271;
extern T272 gedefault272;
extern T274 gedefault274;
extern T275 gedefault275;
extern T278 gedefault278;
extern T279 gedefault279;
extern T280 gedefault280;
extern T281 gedefault281;
extern T282 gedefault282;
extern T283 gedefault283;
extern T284 gedefault284;
extern T286 gedefault286;
extern T287 gedefault287;
extern T288 gedefault288;
extern T289 gedefault289;
extern T290 gedefault290;
extern T291 gedefault291;
extern T295 gedefault295;
extern T296 gedefault296;
extern T297 gedefault297;
extern T298 gedefault298;
extern T299 gedefault299;
extern T300 gedefault300;
extern T301 gedefault301;
extern T302 gedefault302;
extern T303 gedefault303;
extern T304 gedefault304;
extern T305 gedefault305;
extern T307 gedefault307;
extern T308 gedefault308;
extern T309 gedefault309;
extern T310 gedefault310;
extern T312 gedefault312;
extern T315 gedefault315;
extern T316 gedefault316;
extern T317 gedefault317;
extern T319 gedefault319;
extern T320 gedefault320;
extern T321 gedefault321;
extern T322 gedefault322;
extern T323 gedefault323;
extern T324 gedefault324;
extern T325 gedefault325;
extern T326 gedefault326;
extern T327 gedefault327;
extern T328 gedefault328;
extern T329 gedefault329;
extern T330 gedefault330;
extern T331 gedefault331;
extern T332 gedefault332;
extern T333 gedefault333;
extern T336 gedefault336;
extern T338 gedefault338;
extern T339 gedefault339;
extern T340 gedefault340;
extern T341 gedefault341;
extern T342 gedefault342;
extern T344 gedefault344;
extern T345 gedefault345;
extern T346 gedefault346;
extern T348 gedefault348;
extern T349 gedefault349;
extern T350 gedefault350;
extern T351 gedefault351;
extern T352 gedefault352;
extern T353 gedefault353;
extern T354 gedefault354;
extern T355 gedefault355;
extern T356 gedefault356;
extern T357 gedefault357;
extern T358 gedefault358;
extern T359 gedefault359;
extern T360 gedefault360;
extern T361 gedefault361;
extern T362 gedefault362;
extern T363 gedefault363;
extern T364 gedefault364;
extern T365 gedefault365;
extern T366 gedefault366;
extern T367 gedefault367;
extern T369 gedefault369;
extern T371 gedefault371;
extern T372 gedefault372;
extern T373 gedefault373;
extern T374 gedefault374;
extern T375 gedefault375;
extern T376 gedefault376;
extern T377 gedefault377;
extern T379 gedefault379;
extern T380 gedefault380;
extern T382 gedefault382;
extern T383 gedefault383;
extern T384 gedefault384;
extern T385 gedefault385;
extern T386 gedefault386;
extern T388 gedefault388;
extern T390 gedefault390;
extern T392 gedefault392;
extern T393 gedefault393;
extern T394 gedefault394;
extern T395 gedefault395;
extern T396 gedefault396;
extern T397 gedefault397;
extern T398 gedefault398;
extern T399 gedefault399;
extern T400 gedefault400;
extern T401 gedefault401;
extern T402 gedefault402;
extern T404 gedefault404;
extern T406 gedefault406;
extern T407 gedefault407;
extern T408 gedefault408;
extern T409 gedefault409;
extern T410 gedefault410;
extern T411 gedefault411;
extern T412 gedefault412;
extern T413 gedefault413;
extern T414 gedefault414;
extern T415 gedefault415;
extern T416 gedefault416;
extern T417 gedefault417;
extern T418 gedefault418;
extern T419 gedefault419;
extern T420 gedefault420;
extern T421 gedefault421;
extern T422 gedefault422;
extern T424 gedefault424;
extern T426 gedefault426;
extern T427 gedefault427;
extern T428 gedefault428;
extern T430 gedefault430;
extern T431 gedefault431;
extern T432 gedefault432;
extern T434 gedefault434;
extern T435 gedefault435;
extern T436 gedefault436;
extern T437 gedefault437;
extern T438 gedefault438;
extern T439 gedefault439;
extern T440 gedefault440;
extern T441 gedefault441;
extern T442 gedefault442;
extern T443 gedefault443;
extern T444 gedefault444;
extern T445 gedefault445;
extern T446 gedefault446;
extern T447 gedefault447;
extern T448 gedefault448;
extern T449 gedefault449;
extern T451 gedefault451;
extern T452 gedefault452;
extern T454 gedefault454;
extern T455 gedefault455;
extern T457 gedefault457;
extern T458 gedefault458;
extern T459 gedefault459;
extern T460 gedefault460;
extern T461 gedefault461;
extern T462 gedefault462;
extern T463 gedefault463;
extern T465 gedefault465;
extern T466 gedefault466;
extern T467 gedefault467;
extern T468 gedefault468;
extern T469 gedefault469;
extern T470 gedefault470;
extern T471 gedefault471;
extern T473 gedefault473;
extern T474 gedefault474;
extern T475 gedefault475;
extern T476 gedefault476;
extern T477 gedefault477;
extern T478 gedefault478;
extern T479 gedefault479;
extern T480 gedefault480;
extern T481 gedefault481;
extern T482 gedefault482;
extern T483 gedefault483;
extern T484 gedefault484;
extern T485 gedefault485;
extern T486 gedefault486;
extern T487 gedefault487;
extern T488 gedefault488;
extern T489 gedefault489;
extern T490 gedefault490;
extern T491 gedefault491;
extern T492 gedefault492;
extern T493 gedefault493;
extern T494 gedefault494;
extern T495 gedefault495;
extern T496 gedefault496;
extern T497 gedefault497;
extern T498 gedefault498;
extern T499 gedefault499;
extern T500 gedefault500;
extern T501 gedefault501;
extern T502 gedefault502;
extern T503 gedefault503;
extern T505 gedefault505;
extern T506 gedefault506;
extern T507 gedefault507;
extern T508 gedefault508;
extern T510 gedefault510;
extern T512 gedefault512;
extern T513 gedefault513;
extern T514 gedefault514;
extern T515 gedefault515;
extern T516 gedefault516;
extern T517 gedefault517;
extern T518 gedefault518;
extern T519 gedefault519;
extern T520 gedefault520;
extern T521 gedefault521;
extern T522 gedefault522;
extern T524 gedefault524;
extern T526 gedefault526;
extern T528 gedefault528;
extern T532 gedefault532;
extern T533 gedefault533;
extern T535 gedefault535;
extern T536 gedefault536;
extern T537 gedefault537;
extern T538 gedefault538;
extern T539 gedefault539;
extern T540 gedefault540;
extern T541 gedefault541;
extern T542 gedefault542;
extern T543 gedefault543;
extern T544 gedefault544;
extern T545 gedefault545;
extern T546 gedefault546;
extern T548 gedefault548;
extern T549 gedefault549;
extern T551 gedefault551;
extern T552 gedefault552;
extern T553 gedefault553;
extern T554 gedefault554;
extern T555 gedefault555;
extern T556 gedefault556;
extern T558 gedefault558;
extern T559 gedefault559;
extern T560 gedefault560;
extern T561 gedefault561;
extern T562 gedefault562;
extern T564 gedefault564;
extern T565 gedefault565;
extern T566 gedefault566;
extern T567 gedefault567;
extern T569 gedefault569;
extern T571 gedefault571;
extern T572 gedefault572;
extern T573 gedefault573;
extern T574 gedefault574;
extern T575 gedefault575;
extern T576 gedefault576;
extern T577 gedefault577;
extern T578 gedefault578;
extern T579 gedefault579;
extern T580 gedefault580;
extern T581 gedefault581;
extern T582 gedefault582;
extern T583 gedefault583;
extern T584 gedefault584;
extern T586 gedefault586;
extern T587 gedefault587;
extern T588 gedefault588;
extern T589 gedefault589;
extern T590 gedefault590;
extern T591 gedefault591;
extern T593 gedefault593;
extern T594 gedefault594;
extern T595 gedefault595;
extern T596 gedefault596;
extern T597 gedefault597;
extern T598 gedefault598;
extern T600 gedefault600;
extern T601 gedefault601;
extern T603 gedefault603;
extern T604 gedefault604;
extern T605 gedefault605;
extern T606 gedefault606;
extern T607 gedefault607;
extern T608 gedefault608;
extern T609 gedefault609;
extern T610 gedefault610;
extern T611 gedefault611;
extern T613 gedefault613;
extern T615 gedefault615;
extern T616 gedefault616;
extern T618 gedefault618;
extern T619 gedefault619;
extern T620 gedefault620;
extern T621 gedefault621;
extern T622 gedefault622;
extern T623 gedefault623;
extern T625 gedefault625;
extern T626 gedefault626;
extern T627 gedefault627;
extern T628 gedefault628;
extern T629 gedefault629;
extern T630 gedefault630;
extern T631 gedefault631;
extern T634 gedefault634;
extern T635 gedefault635;
extern T636 gedefault636;
extern T638 gedefault638;
extern T639 gedefault639;
extern T640 gedefault640;
extern T641 gedefault641;
extern T642 gedefault642;
extern T643 gedefault643;
extern T644 gedefault644;
extern T645 gedefault645;
extern T646 gedefault646;
extern T647 gedefault647;
extern T648 gedefault648;
extern T649 gedefault649;
extern T652 gedefault652;
extern T653 gedefault653;
extern T654 gedefault654;
extern T655 gedefault655;
extern T656 gedefault656;
extern T657 gedefault657;
extern T658 gedefault658;
extern T659 gedefault659;
extern T660 gedefault660;
extern T661 gedefault661;
extern T662 gedefault662;
extern T663 gedefault663;
extern T664 gedefault664;
extern T665 gedefault665;
extern T666 gedefault666;
extern T667 gedefault667;
extern T668 gedefault668;
extern T669 gedefault669;
extern T671 gedefault671;
extern T672 gedefault672;
extern T674 gedefault674;
extern T675 gedefault675;
extern T676 gedefault676;
extern T678 gedefault678;
extern T679 gedefault679;
extern T680 gedefault680;
extern T682 gedefault682;
extern T683 gedefault683;
extern T684 gedefault684;
extern T685 gedefault685;
extern T686 gedefault686;
extern T687 gedefault687;
extern T688 gedefault688;
extern T689 gedefault689;
extern T690 gedefault690;
extern T691 gedefault691;
extern T692 gedefault692;
extern T693 gedefault693;
extern T694 gedefault694;
extern T695 gedefault695;
extern T696 gedefault696;
extern T697 gedefault697;
extern T699 gedefault699;
extern T700 gedefault700;
extern T702 gedefault702;
extern T703 gedefault703;
extern T704 gedefault704;
extern T706 gedefault706;
extern T707 gedefault707;
extern T708 gedefault708;
extern T710 gedefault710;
extern T711 gedefault711;
extern T712 gedefault712;
extern T713 gedefault713;
extern T714 gedefault714;
extern T715 gedefault715;
extern T716 gedefault716;
extern T717 gedefault717;
extern T718 gedefault718;
extern T719 gedefault719;
extern T721 gedefault721;
extern T722 gedefault722;
extern T723 gedefault723;
extern T724 gedefault724;
extern T726 gedefault726;
extern T727 gedefault727;
extern T728 gedefault728;
extern T730 gedefault730;
extern T731 gedefault731;
extern T732 gedefault732;
extern T733 gedefault733;
extern T734 gedefault734;
extern T735 gedefault735;
extern T736 gedefault736;
extern T737 gedefault737;
extern T738 gedefault738;
extern T739 gedefault739;
extern T740 gedefault740;
extern T741 gedefault741;
extern T742 gedefault742;
extern T743 gedefault743;
extern T744 gedefault744;
extern T745 gedefault745;
extern T746 gedefault746;
extern T747 gedefault747;
extern T748 gedefault748;
extern T750 gedefault750;
extern T752 gedefault752;
extern T753 gedefault753;
extern T755 gedefault755;
extern T756 gedefault756;
extern T757 gedefault757;
extern T758 gedefault758;
extern T759 gedefault759;
extern T760 gedefault760;
extern T761 gedefault761;
extern T762 gedefault762;
extern T763 gedefault763;
extern T764 gedefault764;
extern T766 gedefault766;
extern T767 gedefault767;
extern T768 gedefault768;
extern T770 gedefault770;
extern T771 gedefault771;
extern T772 gedefault772;
extern T773 gedefault773;
extern T774 gedefault774;
extern T775 gedefault775;
extern T776 gedefault776;
extern T777 gedefault777;
extern T778 gedefault778;
extern T779 gedefault779;
extern T780 gedefault780;
extern T781 gedefault781;
extern T782 gedefault782;
extern T783 gedefault783;
extern T784 gedefault784;
extern T785 gedefault785;
extern T787 gedefault787;
extern T788 gedefault788;
extern T789 gedefault789;
extern T790 gedefault790;
extern T791 gedefault791;
extern T792 gedefault792;
extern T793 gedefault793;
extern T795 gedefault795;
extern T796 gedefault796;
extern T797 gedefault797;
extern T798 gedefault798;
extern T799 gedefault799;
extern T800 gedefault800;
extern T801 gedefault801;
extern T802 gedefault802;
extern T803 gedefault803;
extern T804 gedefault804;
extern T805 gedefault805;
extern T806 gedefault806;
extern T807 gedefault807;
extern T808 gedefault808;
extern T809 gedefault809;
extern T810 gedefault810;
extern T811 gedefault811;
extern T812 gedefault812;
extern T813 gedefault813;
extern T814 gedefault814;
extern T815 gedefault815;
extern T816 gedefault816;
extern T817 gedefault817;
extern T818 gedefault818;
extern T819 gedefault819;
extern T820 gedefault820;
extern T821 gedefault821;
extern T822 gedefault822;
extern T823 gedefault823;
extern T824 gedefault824;
extern T825 gedefault825;
extern T827 gedefault827;
extern T828 gedefault828;
extern T829 gedefault829;
extern T830 gedefault830;
extern T832 gedefault832;
extern T835 gedefault835;
extern T836 gedefault836;
extern T839 gedefault839;
extern T840 gedefault840;
extern T841 gedefault841;
extern T843 gedefault843;
extern T845 gedefault845;
extern T847 gedefault847;
extern T848 gedefault848;
extern T849 gedefault849;
extern T850 gedefault850;
extern T851 gedefault851;
extern T852 gedefault852;
extern T854 gedefault854;
extern T855 gedefault855;
extern T856 gedefault856;
extern T857 gedefault857;
extern T858 gedefault858;
extern T860 gedefault860;
extern T861 gedefault861;
extern T862 gedefault862;
extern T864 gedefault864;
extern T866 gedefault866;
extern T867 gedefault867;
extern T868 gedefault868;
extern T869 gedefault869;
extern T870 gedefault870;
extern T871 gedefault871;
extern T872 gedefault872;
extern T874 gedefault874;
extern T877 gedefault877;
extern T878 gedefault878;
extern T879 gedefault879;
extern T881 gedefault881;
extern T882 gedefault882;
extern T883 gedefault883;
extern T884 gedefault884;
extern T885 gedefault885;
extern T888 gedefault888;
extern T889 gedefault889;
extern T890 gedefault890;
extern T891 gedefault891;
extern T892 gedefault892;
extern T893 gedefault893;
extern T894 gedefault894;
extern T895 gedefault895;
extern T896 gedefault896;
extern T897 gedefault897;
extern T898 gedefault898;
extern T899 gedefault899;
extern T900 gedefault900;
extern T901 gedefault901;
extern T904 gedefault904;
extern T905 gedefault905;
extern T906 gedefault906;
extern T907 gedefault907;
extern T908 gedefault908;
extern T909 gedefault909;
extern T910 gedefault910;
extern T911 gedefault911;
extern T912 gedefault912;
extern T913 gedefault913;
extern T914 gedefault914;
extern T915 gedefault915;
extern T916 gedefault916;
extern T917 gedefault917;
extern T918 gedefault918;
extern T919 gedefault919;
extern T920 gedefault920;
extern T921 gedefault921;
extern T923 gedefault923;
extern T924 gedefault924;
extern T925 gedefault925;
extern T926 gedefault926;
extern T927 gedefault927;
extern T928 gedefault928;
extern T929 gedefault929;
extern T930 gedefault930;
extern T931 gedefault931;
extern T932 gedefault932;
extern T934 gedefault934;
extern T936 gedefault936;
extern T938 gedefault938;
extern T939 gedefault939;
extern T942 gedefault942;
extern T943 gedefault943;
extern T944 gedefault944;
extern T945 gedefault945;
extern T946 gedefault946;
extern T947 gedefault947;
extern T949 gedefault949;
extern T950 gedefault950;
extern T951 gedefault951;
extern T952 gedefault952;
extern T953 gedefault953;
extern T954 gedefault954;
extern T956 gedefault956;
extern T958 gedefault958;
extern T959 gedefault959;
extern T961 gedefault961;
extern T962 gedefault962;
extern T964 gedefault964;
extern T965 gedefault965;
extern T966 gedefault966;
extern T967 gedefault967;
extern T968 gedefault968;
extern T969 gedefault969;
extern T970 gedefault970;
extern T971 gedefault971;
extern T972 gedefault972;
extern T973 gedefault973;
extern T974 gedefault974;
extern T975 gedefault975;
extern T976 gedefault976;
extern T977 gedefault977;
extern T978 gedefault978;
extern T979 gedefault979;
extern T980 gedefault980;
extern T985 gedefault985;
extern T986 gedefault986;
extern T987 gedefault987;
extern T988 gedefault988;
extern T989 gedefault989;
extern T991 gedefault991;
extern T992 gedefault992;
extern T993 gedefault993;
extern T994 gedefault994;
extern T995 gedefault995;
extern T996 gedefault996;
extern T997 gedefault997;
extern T998 gedefault998;
extern T999 gedefault999;
extern T1000 gedefault1000;
extern T1002 gedefault1002;
extern T1004 gedefault1004;
extern T1005 gedefault1005;
extern T1006 gedefault1006;
extern T1007 gedefault1007;
extern T1008 gedefault1008;
extern T1009 gedefault1009;
extern T1010 gedefault1010;
extern T1011 gedefault1011;
extern T1012 gedefault1012;
extern T1013 gedefault1013;
extern T1014 gedefault1014;
extern T1015 gedefault1015;
extern T1016 gedefault1016;
extern T1017 gedefault1017;
extern T1018 gedefault1018;
extern T1019 gedefault1019;
extern T1020 gedefault1020;
extern T1022 gedefault1022;
extern T1023 gedefault1023;
extern T1024 gedefault1024;
extern T1025 gedefault1025;
extern T1026 gedefault1026;
extern T1027 gedefault1027;
extern T1028 gedefault1028;
extern T1029 gedefault1029;
extern T1030 gedefault1030;
extern T1031 gedefault1031;
extern T1032 gedefault1032;
extern T1033 gedefault1033;
extern T1034 gedefault1034;
extern T1035 gedefault1035;
extern T1036 gedefault1036;
extern T1037 gedefault1037;
extern T1039 gedefault1039;
extern T1040 gedefault1040;
extern T1041 gedefault1041;
extern T1042 gedefault1042;
extern T1043 gedefault1043;
extern T1044 gedefault1044;
extern T1045 gedefault1045;
extern T1046 gedefault1046;
extern T1047 gedefault1047;
extern T1048 gedefault1048;
extern T1049 gedefault1049;
extern T1050 gedefault1050;
extern T1051 gedefault1051;
extern T1052 gedefault1052;
extern T1053 gedefault1053;
extern T1054 gedefault1054;
extern T1055 gedefault1055;
extern T1056 gedefault1056;
extern T1057 gedefault1057;
extern T1058 gedefault1058;
extern T1059 gedefault1059;
extern T1060 gedefault1060;
extern T1062 gedefault1062;
extern T1063 gedefault1063;
extern T1064 gedefault1064;
extern T1065 gedefault1065;
extern T1066 gedefault1066;
extern T1067 gedefault1067;
extern T1068 gedefault1068;
extern T1069 gedefault1069;
extern T1070 gedefault1070;
extern T1072 gedefault1072;
extern T1073 gedefault1073;
extern T1074 gedefault1074;
extern T1075 gedefault1075;
extern T1076 gedefault1076;
extern T1077 gedefault1077;
extern T1078 gedefault1078;
extern T1079 gedefault1079;
extern T1080 gedefault1080;
extern T1081 gedefault1081;
extern T1082 gedefault1082;
extern T1083 gedefault1083;
extern T1084 gedefault1084;
extern T1085 gedefault1085;
extern T1086 gedefault1086;
extern T1087 gedefault1087;
extern T1088 gedefault1088;
extern T1089 gedefault1089;
extern T1090 gedefault1090;
extern T1091 gedefault1091;
extern T1092 gedefault1092;
extern T1093 gedefault1093;
extern T1094 gedefault1094;
extern T1095 gedefault1095;
extern T1096 gedefault1096;
extern T1097 gedefault1097;
extern T1102 gedefault1102;
extern T1103 gedefault1103;
extern T1104 gedefault1104;
extern T1105 gedefault1105;
extern T1106 gedefault1106;
extern T1107 gedefault1107;
extern T1108 gedefault1108;
extern T1109 gedefault1109;
extern T1110 gedefault1110;
extern T1111 gedefault1111;
extern T1112 gedefault1112;
extern T1113 gedefault1113;
extern T1114 gedefault1114;
extern T1115 gedefault1115;
extern T1116 gedefault1116;
extern T1117 gedefault1117;
extern T1118 gedefault1118;
extern T1119 gedefault1119;
extern T1120 gedefault1120;
extern T1121 gedefault1121;
extern T1122 gedefault1122;
extern T1123 gedefault1123;
extern T1124 gedefault1124;
extern T1125 gedefault1125;
extern T1126 gedefault1126;
extern T1127 gedefault1127;
extern T1128 gedefault1128;
extern T1129 gedefault1129;
extern T1130 gedefault1130;
extern T1132 gedefault1132;
extern T1133 gedefault1133;
extern T1134 gedefault1134;
extern T1135 gedefault1135;
extern T1136 gedefault1136;
extern T1138 gedefault1138;
extern T1139 gedefault1139;
extern T1140 gedefault1140;
extern T1141 gedefault1141;
extern T1142 gedefault1142;
extern T1143 gedefault1143;
extern T1144 gedefault1144;
extern T1145 gedefault1145;
extern T1146 gedefault1146;
extern T1147 gedefault1147;
extern T1148 gedefault1148;
extern T1149 gedefault1149;
extern T1150 gedefault1150;
extern T1151 gedefault1151;
extern T1152 gedefault1152;
extern T1153 gedefault1153;
extern T1154 gedefault1154;
extern T1156 gedefault1156;
extern T1157 gedefault1157;
extern T1158 gedefault1158;
extern T1159 gedefault1159;
extern T1160 gedefault1160;
extern T1161 gedefault1161;
extern T1162 gedefault1162;
extern T1163 gedefault1163;
extern T1164 gedefault1164;
extern T1165 gedefault1165;
extern T1166 gedefault1166;
extern T1167 gedefault1167;
extern T1168 gedefault1168;
extern T1169 gedefault1169;
extern T1170 gedefault1170;
extern T1171 gedefault1171;
extern T1172 gedefault1172;
extern T1174 gedefault1174;
extern T1175 gedefault1175;
extern T1176 gedefault1176;
extern T1177 gedefault1177;
extern T1179 gedefault1179;
extern T1180 gedefault1180;
extern T1181 gedefault1181;
extern T1182 gedefault1182;
extern T1183 gedefault1183;
extern T1189 gedefault1189;
extern T1190 gedefault1190;
extern T1191 gedefault1191;
extern T1194 gedefault1194;
extern T1195 gedefault1195;
extern T1196 gedefault1196;
extern T1197 gedefault1197;
extern T1198 gedefault1198;
extern T1199 gedefault1199;
extern T1201 gedefault1201;
extern T1203 gedefault1203;
extern T1204 gedefault1204;
extern T1206 gedefault1206;
extern T1207 gedefault1207;
extern T1209 gedefault1209;
extern T1210 gedefault1210;
extern T1211 gedefault1211;
extern T1212 gedefault1212;
extern T1213 gedefault1213;
extern T1214 gedefault1214;
extern T1215 gedefault1215;
extern T1216 gedefault1216;
extern T1217 gedefault1217;
extern T1218 gedefault1218;
extern T1219 gedefault1219;
extern T1221 gedefault1221;
extern T1222 gedefault1222;
extern T1223 gedefault1223;
extern T1224 gedefault1224;
extern T1225 gedefault1225;
extern T1227 gedefault1227;
extern T1229 gedefault1229;
extern T1230 gedefault1230;
extern T1231 gedefault1231;
extern T1233 gedefault1233;
extern T1234 gedefault1234;
extern T1236 gedefault1236;
extern T1237 gedefault1237;
extern T1238 gedefault1238;
extern T1239 gedefault1239;
extern T1242 gedefault1242;
extern T1243 gedefault1243;
extern T1249 gedefault1249;
extern T1250 gedefault1250;
extern T1251 gedefault1251;
extern T1252 gedefault1252;
extern T1254 gedefault1254;
extern T1255 gedefault1255;
extern T1256 gedefault1256;
extern T1257 gedefault1257;
extern T1258 gedefault1258;
extern T1259 gedefault1259;
extern T1260 gedefault1260;
extern T1261 gedefault1261;
extern T1262 gedefault1262;
extern T1263 gedefault1263;
extern T1264 gedefault1264;
extern T1270 gedefault1270;
extern T1271 gedefault1271;
extern T1274 gedefault1274;
extern T1275 gedefault1275;
extern T1278 gedefault1278;
extern T1279 gedefault1279;
extern T1281 gedefault1281;
extern T1282 gedefault1282;
extern T1283 gedefault1283;
extern T1285 gedefault1285;
extern T1286 gedefault1286;
extern T1287 gedefault1287;
extern T1288 gedefault1288;
extern T1289 gedefault1289;
extern T1290 gedefault1290;
extern T1291 gedefault1291;
extern T1292 gedefault1292;
extern T1293 gedefault1293;
extern T1294 gedefault1294;
extern T1296 gedefault1296;
extern T1297 gedefault1297;
extern T1298 gedefault1298;
extern T1299 gedefault1299;
extern T1300 gedefault1300;
extern T1301 gedefault1301;
extern T1303 gedefault1303;
extern T1305 gedefault1305;
extern T1306 gedefault1306;
extern T1307 gedefault1307;
extern T1308 gedefault1308;
extern T1310 gedefault1310;
extern T1311 gedefault1311;
extern T1313 gedefault1313;
extern T1315 gedefault1315;
extern T1316 gedefault1316;
extern T1317 gedefault1317;
extern T1318 gedefault1318;
extern T1319 gedefault1319;
extern T1321 gedefault1321;
extern T1323 gedefault1323;
extern T1324 gedefault1324;
extern T1326 gedefault1326;
extern T1327 gedefault1327;
extern T1328 gedefault1328;
extern T1330 gedefault1330;
extern T1331 gedefault1331;
extern T1332 gedefault1332;
extern T1333 gedefault1333;
extern T1336 gedefault1336;
extern T1337 gedefault1337;
extern T1338 gedefault1338;
extern T1339 gedefault1339;
extern T1347 gedefault1347;
extern T1348 gedefault1348;
extern T1350 gedefault1350;
extern T1351 gedefault1351;
extern T1358 gedefault1358;
extern T1359 gedefault1359;
extern T1360 gedefault1360;
extern T1363 gedefault1363;
extern T1367 gedefault1367;
extern T1370 gedefault1370;
extern T1379 gedefault1379;
extern T1380 gedefault1380;
extern T1383 gedefault1383;
extern T1384 gedefault1384;
extern T1385 gedefault1385;
extern T1386 gedefault1386;
extern T1387 gedefault1387;
extern T1388 gedefault1388;
extern T1389 gedefault1389;
extern T1390 gedefault1390;
extern T1391 gedefault1391;
extern T1392 gedefault1392;
extern T1393 gedefault1393;
extern T1394 gedefault1394;
extern T1395 gedefault1395;
extern T1396 gedefault1396;
extern T1397 gedefault1397;
extern T1398 gedefault1398;
extern T1399 gedefault1399;
extern T1402 gedefault1402;
extern T1403 gedefault1403;
extern T1404 gedefault1404;
extern T1405 gedefault1405;
extern T1406 gedefault1406;
extern T1407 gedefault1407;
extern T1408 gedefault1408;
extern T1409 gedefault1409;
extern T1411 gedefault1411;
extern T1413 gedefault1413;
extern T1414 gedefault1414;
extern T1417 gedefault1417;
extern T1419 gedefault1419;
extern T1420 gedefault1420;
extern T1426 gedefault1426;
extern T1427 gedefault1427;
extern T1428 gedefault1428;
extern T1429 gedefault1429;
extern T1430 gedefault1430;
extern T1431 gedefault1431;
extern T1432 gedefault1432;
extern T1437 gedefault1437;
extern T1439 gedefault1439;
extern T1440 gedefault1440;
extern T1441 gedefault1441;
extern T1444 gedefault1444;

extern T0* gems(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1660(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1649T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1658(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1661(T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T38x3567(T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T38x3563(T0* C);
/* Call to AP_OPTION.has_long_form */
extern T1 T38x3568(T0* C);
/* Call to AP_OPTION.description */
extern T0* T38x3561(T0* C);
/* Call to AP_OPTION.names */
extern T0* T38x3565(T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T38x3570(T0* C);
/* Call to AP_OPTION.example */
extern T0* T38x3562(T0* C);
/* Call to AP_OPTION.name */
extern T0* T38x3564(T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T38x3572(T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T38x3569(T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T38x3573(T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T38x3571(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T42x3845(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T156x11761T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T156x11745(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T156x11741T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T156x11737(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T156x11760T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T156x11758T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T156x11759T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T156x11747(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T156x11746(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T156x11777(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T156x11755(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T156x11738(T0* C);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T156x11749(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T156x11736(T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T156x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T156x11770(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T156x11763(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T156x11762(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T156x11748(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T156x11733(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T156x11780(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T156x11739(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T157x6185(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T157x6129T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T157x6135T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T157x6125(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T157x6124(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T157x6191(T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T157x6071(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T157x6133T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T157x6171T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T157x6176T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T157x6250T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T157x6253T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T157x6228T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T157x6251T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T157x6256T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T157x6259T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T157x6257T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T157x6258T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T157x6254T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T157x6238T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T157x6231T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T157x6064(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T157x6223T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T157x6072(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T157x6255T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T157x6246T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T157x6249T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T157x6247T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T157x6227T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T157x6248T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T157x6229T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T157x6233T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T157x6232T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T157x6243T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T157x6187(T0* C);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T157x6154T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T157x6075(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T157x6156T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.first_seed */
extern T6 T159x11885(T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T159x11804(T0* C);
/* Call to ET_QUERY.name */
extern T0* T159x11882(T0* C);
/* Call to ET_QUERY.type */
extern T0* T159x11883(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T159x11809(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T159x11805(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T159x11808(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T159x23(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T159x11884(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T159x11845T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T159x11844(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T159x11834(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T159x11963(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T159x11880T6(T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T159x11896(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T159x11836(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T159x11835(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T159x11895(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T159x11838(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T159x11839(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T159x11840(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T159x11841(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T159x11831(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T159x11832(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T159x11867T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T161x11845T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T161x11885(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T161x11844(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T161x11882(T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T161x11809(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T161x11805(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T161x11808(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T161x23(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T161x11884(T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T161x11847T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T161x11880T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T161x11831(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T161x11832(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T161x11867T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T166x6155T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T166x6191(T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T166x6130T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.to_text */
extern T0* T166x6185(T0* C);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T166x6180T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T166x6135T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T166x6178T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.last_leaf */
extern T0* T166x6195(T0* C);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T166x6176T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_named_type */
extern T1 T166x6143(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T166x6144(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T166x6167T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T166x6170T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type */
extern T0* T166x6131T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T166x6168T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T166x6172T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T166x6175T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T166x6173T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T166x6174T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T166x6171T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T166x6146T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T166x6223T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T166x6145T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.direct_base_class */
extern T0* T166x6129T0(T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T166x6136T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_like_current */
extern T1 T166x6142(T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T166x6137T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T166x6179T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T166x6177T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T166x6133T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T166x6141T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_type */
extern T1 T166x6156T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T166x6163T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T166x6166T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T166x6164T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T166x6165T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_formal_types */
extern T1 T166x6149T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T166x6147T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T166x6154T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T166x6159T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T166x6160T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T166x6161T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T166x6157T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T166x6162T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T166x6158T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.unaliased_to_text */
extern T0* T166x6187(T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T167x6232T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T167x6225(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T167x6229T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T167x6233T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T167x6264T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T167x6231T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T167x6262T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T167x6227T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T167x6261T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T167x6256T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T167x6254T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T167x6260T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T167x6259T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T167x6257T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T167x6258T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T167x6263T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T167x6245T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T167x6250T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T167x6246T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T167x6248T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T167x6253T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T167x6249T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T167x6247T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T167x6251T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T167x6243T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T167x6228T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.name */
extern T0* T168x11292(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T168x6194(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T168x6195(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T168x11290T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T168x11294(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T168x11293(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T168x6191(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T168x11299(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T168x11297(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T168x11298(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T168x23(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T168x11330(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T168x11331(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T168x11320(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T168x11300(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T171x6064(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T171x6072(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T171x6129T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T171x6185(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T171x6124(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T171x6125(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T171x6075(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T171x6143(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T171x6042(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T171x6191(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T174x11780(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.other_types */
extern T0* T174x11782(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.first_type */
extern T0* T174x11781(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T174x11785(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T174x11778(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T174x11777(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T174x11784(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T174x11775T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_subset */
extern T1 T174x11779T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T176x6210(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T176x6209(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T176x6212T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T176x6208(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T179x7127(T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T191x11804(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T191x11882(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T191x11880T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T191x11806(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T191x11897(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T191x11816(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T191x11885(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T191x11832(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T191x11805(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T191x11895(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T191x11837(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T191x11884(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T191x11845T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.other_seeds */
extern T0* T191x11886(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T191x11836(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T191x11835(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T191x11883(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T191x11834(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T191x11815(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T191x11899(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T191x11898(T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T191x11896(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T191x11818(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T191x11894(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T191x11812(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T191x11811(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T191x11831(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T191x11839(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T191x11840(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T191x11841(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T191x11868T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T191x11869T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T191x11851T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T191x11879(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T191x11838(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T191x23(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T193x6195(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T193x6191(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T193x11353(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T193x11370(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T197x6195(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T197x6191(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T197x11337(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T218x11364T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T218x11365(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T218x11363(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T220x11422(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T220x11421(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T220x6191(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T221x11294(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T221x11293(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T221x6191(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T221x11299(T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T221x11329(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T221x11327(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T221x11308(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T221x11313(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T221x11314(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T221x11301(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T221x11302(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T221x11324(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T221x11322(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T221x11321(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T221x11319(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T221x11318(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T221x11317(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T221x11316(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T221x11315(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T221x11312(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T221x11311(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T221x11310(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T221x11309(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T221x11307(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T221x11306(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T221x11304(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T221x11303(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T221x11325(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T228x16983(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T228x16980(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T228x16975(T0* C);
/* Call to ET_AGENT.index */
extern T6 T228x11370(T0* C);
/* Call to ET_AGENT.target */
extern T0* T228x16974(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T228x16977(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T228x16976(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T231x17001(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T231x17000(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T231x16999(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T231x16998(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T231x16997(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T231x16996(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T232x11365(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T232x11364T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T232x11363(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T237x6191(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T237x11370(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T237x17043(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T240x11370(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T241x6191(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T241x11370(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T241x11369(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T243x11369(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T243x11370(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T244x6191(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T244x11355(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T249x11899(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T249x11896(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T249x11901(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T249x11895(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T249x11912(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T249x11911(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T249x11908(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T249x11892(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T249x11910(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T249x11894(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T249x11897(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T249x11900(T0* C);
/* Call to ET_POSITION.column */
extern T6 T258x11406(T0* C);
/* Call to ET_POSITION.line */
extern T6 T258x11405(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T258x11407(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T258x11411(T0* C);
/* Call to XM_NODE.parent */
extern T0* T273x9884(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T311x11335(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T311x11334(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T311x6191(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T311x11336T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T341x5331(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T341x18937T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T341x5336(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T341x18948(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T341x5327(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T341x18946(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T456x11370(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T456x20170(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T464x20476(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T464x11370(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T464x20468(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T464x20478(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T464x20467(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T464x6191(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T464x20469(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T550x6220T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T557x6191(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T557x11334(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T568x6218T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T568x6216(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T568x6217(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T612x18591(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T612x18589(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T612x18590(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T624x6190(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T632x6223T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T632x6222(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T633x11339(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T637x6193(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T637x6191(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T650x17054(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T651x17055(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T664x21564T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T664x11311(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T664x11315(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T664x11321(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T664x11322(T0* C);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T664x11293(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T664x6191(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T664x11328T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T664x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T664x11300(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T664x21550(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T664x21549(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T664x11325(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T664x11320(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T698x6204T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T698x6209(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T709x11421(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T709x11420(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T709x11419(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T709x11422(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T709x11370(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T720x11356(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T729x6191(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T729x6195(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T729x6224(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T749x11382(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T749x11380(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T749x11381(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T751x11384(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T754x6191(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T786x6191(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T794x16976(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T794x11911(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T794x16975(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T794x16974(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T794x11912(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T794x11910(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T826x11373(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T831x6191(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T831x11360(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T833x11358(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T837x11912(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T837x11911(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T837x11910(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T933x11512(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T933x11524(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T933x11520T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T933x11521(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T933x11523(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T933x11511(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T933x11509(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T933x11510(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T936x21091(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T936x6146T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T940x6180T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T940x6135T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T940x6178T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T940x6185(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T940x6133T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T940x6179T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T940x6156T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T940x6177T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T940x6172T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T940x6175T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T940x6146T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T940x6171T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T940x6176T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T940x6173T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T940x6174T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T940x6145T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T940x6160T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T940x6161T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T940x6163T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T940x6157T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T940x6166T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T940x6162T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T940x6164T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T940x6149T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T940x6147T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T940x6158T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T940x6167T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T940x6130T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T940x6159T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T940x6165T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T940x6170T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T940x6168T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T940x6155T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T940x6154T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1205x11891(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1205x11878(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1205x11887(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1205x11889(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1205x11876(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1205x11890(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1205x11877(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1205x11875(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1205x11888(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1269x11896(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1273x20197(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1273x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1273x11305(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1280x24912(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1280x24911(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1280x24910(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1280x24913(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.compound */
extern T0* T1345x22735(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.rescue_clause */
extern T0* T1345x22737(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.locals */
extern T0* T1345x11912(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1345x16976(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1346x18742(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1346x18744(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1346x11912(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1346x11884(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1346x11896(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1346x11838(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1376x11370(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1377x11910(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1377x11911(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1378x11911(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1425x6191(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1652(T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T38x3583T0(T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T38x3584(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T74x8940(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T74x8933T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T74x8925T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T74x8927T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T74x8934T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T74x8939T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T111x10168T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T112x10224T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T112x10225T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T112x10230(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T112x10223(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T112x10229T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T112x10231T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T112x10228T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T112x10232T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T112x10226T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T112x10227T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T112x10222(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T156x11764T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T156x11765T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T156x11742(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T156x11744T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T156x11786T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T156x11771T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T156x11756T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T156x11757T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T157x6128(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T157x6200T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T159x11907(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T159x11904(T0* C);
/* Call to ET_QUERY.reset */
extern void T159x11801(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T159x11862T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T161x11907(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T161x11904(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T161x11801(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T161x11862T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T166x6200T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T166x6128(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T166x6186T0(T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T166x6188T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T168x11295T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T168x11291(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T174x11786T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T179x7183T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T179x7297T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T179x7164T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T179x7240T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T179x7178T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T179x7227T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T179x7301T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T179x7282T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T179x7185T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T179x7149T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T179x7165T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T179x7191T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T179x7262T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T179x7246T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T179x7234T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T179x7147T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T179x7146T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T179x7145T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T179x7256T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T179x7257T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T179x7151T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T179x7152T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T179x7176T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T179x7224T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T179x7308T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T179x7229T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T179x7171T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T179x7213T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T179x7274T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T179x7197T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T179x7211T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T179x7271T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T179x7195T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T179x7268T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T179x7302T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T179x7264T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T179x7272T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T179x7162T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T179x7269T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T179x7284T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T179x7205T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T179x7242T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T179x7207T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T179x7296T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T179x7189T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T179x7215T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T179x7277T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T179x7281T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T179x7300T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T179x7157T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T179x7212T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T179x7273T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T179x7192T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T179x7270T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T179x7194T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T179x7267T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T179x7184T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T179x7160T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T179x7159T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T179x7214T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T179x7307T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T179x7311T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T179x7291T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T179x7230T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T179x7310T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T179x7289T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T179x7299T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T179x7314T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T179x7290T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T179x7161T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T179x7315T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T179x7150T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T179x7193T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T179x7196T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T179x7148T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T179x7312T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T179x7175T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T179x7163T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T179x7210T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T179x7169T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T179x7295T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T179x7188T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T179x7231T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T191x11903(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T191x11902(T0* C);
/* Call to ET_FEATURE.process */
extern void T191x6200T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T191x11906(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T191x11905(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T191x11859T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T191x11858T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T191x11850T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T191x11870T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T191x11855T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T191x11861T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T191x11860T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T191x11866(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T191x11865(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T191x11856T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T191x11857T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T191x11852T6(T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T193x6200T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T193x11357(T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T221x11295T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T228x16982T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T228x6200T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.process */
extern void T231x6200T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T237x11371T6(T0* C, T6 a1);
/* Call to ET_OPERAND.set_index */
extern void T240x11371T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T241x6200T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T241x11371T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T241x11368(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T243x6200T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T243x11368(T0* C);
/* Call to XM_NODE.node_set_parent */
extern void T273x9892T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T273x9894T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T311x11333(T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T341x18933(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T341x18932T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T341x18938T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T341x18929(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T341x5342(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T341x18931T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T456x11371T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T464x11371T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T464x20482(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T464x20481T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T464x20479T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T464x20480T0(T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T633x11338(T0* C);
/* Call to ET_ALIAS_NAME.reset */
extern void T664x11291(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T664x21562(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T664x21561(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T705x6200T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T705x11424(T0* C);
/* Call to ET_CHOICE.reset */
extern void T749x11379(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T754x11379(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T786x11291(T0* C);
/* Call to ET_ASSERTION.process */
extern void T833x6200T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T833x11357(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type */
extern void T1245x11789T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1376x11371T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c32(void);
/* GEC.report_cannot_read_error */
extern void T21f38(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T76f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T76f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T76f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T76f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T76f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T927f1(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T927f27(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T926f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge334os9573;
extern T0* ge334ov9573;
extern T0* T927f36(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T926c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T151f1(T0* C, T6 a1);
/* INTEGER_32.to_character */
extern T2 T6f16(T6* C);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge270os2777;
extern T0* ge270ov2777;
extern T0* T927f26(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T151c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f13(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge400os11617;
extern T6 ge400ov11617;
extern T6 T150f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T150f2(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge324os1665;
extern T0* ge324ov1665;
extern T0* T927f25(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T150c5(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T927f24(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T926f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T926f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f39(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f40(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f12(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f5(T0* C);
/* INTEGER_32.max */
extern T6 T6f15(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f4(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T927f23(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T927f38(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T927f68(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T927f78(T0* C);
/* STRING_8.make */
extern void T17f36(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c36(T6 a1);
/* STRING_8.make_area */
extern void T17f38(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c8(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f44(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f9(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T927f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T927f31(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T79f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge265os1664;
extern T0* ge265ov1664;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T79c4(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge273os1589;
extern T0* ge273ov1589;
extern T0* T76f1(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T67c7(T0* a1);
/* ARRAY [STRING_8].put */
extern void T86f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make */
extern T0* T86c7(T6 a1, T6 a2);
/* ARRAY [STRING_8].make_area */
extern void T86f9(T0* C, T6 a1);
/* SPECIAL [STRING_8].make */
extern T0* T85c5(T6 a1);
/* GEC.process_universe */
extern void T21f37(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T62f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge323os1584;
extern T0* ge323ov1584;
extern T0* T62f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T65c7(void);
/* KL_SHELL_COMMAND.system */
extern void T62f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T62f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T927f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f6(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2176os4892;
extern T0* ge2176ov4892;
extern T0* T62f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T62f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c46(T14 a1);
/* STRING_8.from_c */
extern void T17f49(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T904f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T904f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f59(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T414f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1271f2(T1271* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1271f3(T1271* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T904f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T904f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T414f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T414c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T904f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2057os1255;
extern T0* ge2057ov1255;
extern T0* T17f22(T0* C);
/* C_STRING.make_empty */
extern T0* T904c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T414c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T1029f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T1029f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T1029c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T414f2(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T62f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T927f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f17(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T62c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T62f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T70f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T70f7(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f8(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f41(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f10(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T927f17(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T927f60(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T927c60(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T927f72(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T927f46(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T927f46p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T927f60p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T927f79(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T926f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T926f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T927f3(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f7(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T927f50(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T927f28(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge346os24006;
extern T0* ge346ov24006;
extern T0* T926f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T78c8(void);
/* UC_STRING.make */
extern void T78f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T78f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T78f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T78f2(T0* C);
/* UC_STRING.capacity */
extern T6 T78f2p1(T0* C);
/* UC_STRING.make */
extern void T78f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T78f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T78f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T926f23(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T926f25(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T927f57(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge413os9511;
extern T0* ge413ov9511;
extern T0* T927f47(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T927f59(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T927f77(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T927f85(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T927f76(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T927f86(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T927f75(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T927f74(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T927f87(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T927f37(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T927f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T927f67(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T927f67p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T927f57p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T927f73(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T927f49(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1193s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T927f44(T0* C);
/* UC_UTF8_STRING.append_character */
extern void T927f58(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T927f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T927f30(T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f12(T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f9(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f24(T0* C);
/* STRING_8.copy */
extern void T17f54(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T70f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T70f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T122f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge381os8756;
extern T0* ge381ov8756;
extern T0* T70f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T122c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T70f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T69f1(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T69f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T69f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T69f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T69f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T69f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T69f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T69f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T69f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge302os1585;
extern T0* ge302ov1585;
extern T0* T21f28(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge302os1588;
extern T0* ge302ov1588;
extern T0* T21f31(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T70c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge397os8724;
extern T1 ge397ov8724;
extern T1 T65f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T65f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge397os8728;
extern T0* ge397ov8728;
extern T0* T65f5(T0* C);
/* STRING_8.is_equal */
extern T1 T17f19(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f21(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T65f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T122f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T122f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge302os1586;
extern T0* ge302ov1586;
extern T0* T21f30(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T69c20(void);
/* UC_UTF8_STRING.infix "+" */
extern T0* T927f16(T0* C, T0* a1);
/* STRING_8.infix "+" */
extern T0* T17f9(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f13(T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge397os8723;
extern T1 ge397ov8723;
extern T1 T65f1(T0* C);
/* GEC.operating_system */
extern T0* T21f27(T0* C);
/* GEC.no_c_compile */
extern T1 T21f26(T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T35f2(T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T89f1(T0* C);
/* ET_C_GENERATOR.generate */
extern void T61f311(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T80f28(T0* C);
/* DS_ARRAYED_LIST [STRING_8].clear_items */
extern void T80f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T80f33(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T298f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T298f8(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T61f315(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T61f317(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T57f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f192(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f192p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T57f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f163(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T61f69(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T211c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T61f316(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T208f25(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T208f34(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T208f38(T0* C, T14 a1);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T210f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T45f34(T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f20(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T927f18(T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T210f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1038os7572;
extern T0* ge1038ov7572;
extern T0* T61f68(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T210c3(void);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T208f1(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T208f4(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T208f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T208f3(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T208f5(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T208f31(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T208f17(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T208f31p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T208f19(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T208c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T208f30(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T208f12(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T61f67(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T45f32(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T45f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T45f17(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T45f8(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T927f13(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T927f13p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T95f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T48f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T48f2(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T45f16(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T45f10(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T45f31(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T45f35(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T45f57(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T45f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T45f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T45f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T45f44(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T45f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].resize */
extern T0* T118f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T116f4(T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T116f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].move_data */
extern void T116f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T116f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T116f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].make */
extern T0* T116c7(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge271os4835;
extern T0* ge271ov4835;
extern T0* T45f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T118c4(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T45f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].resize */
extern T0* T119f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].resized_area */
extern T0* T85f3(T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T85f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].move_data */
extern void T85f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T85f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T85f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T45f50(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T45f49(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T45f19(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T45f7(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T45f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T45f41(T0* C);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T50f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T50f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge379os4888;
extern T0* ge379ov4888;
extern T0* T50f2(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T50f3(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T207f1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T207f301(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T207f312(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T207f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T207f146(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T207f228(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T207f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T207f291(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1143os15904;
extern T6 ge1143ov15904;
extern T6 T207f55(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge400os11619;
extern T6 ge400ov11619;
extern T6 T150f3(T0* C);
/* KL_PLATFORM.old_maximum_integer */
extern T6 T150f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T207f191(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T207f290(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T877f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T207f289(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T877f5(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T207f288(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T207f294(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1149os16071;
extern T0* ge1149ov16071;
extern T0* T207f147(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T879c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T879f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T879f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T879f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T879c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T363f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T1014c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T361c4(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge271os4833;
extern T0* ge271ov4833;
extern T0* T879f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T363c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1149os16063;
extern T0* ge1149ov16063;
extern T0* T207f163(T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T879f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T207f325(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T207f81(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T207f80(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T207f79(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T207f334(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T207f333(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T207f287(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T877f2(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T207f285(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T207f266(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T877f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T207f7(T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T878f2(T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T878f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T207f47(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T207f313(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T207f328(T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T207f46(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T207f45(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T207f2(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge322os1582;
extern T0* ge322ov1582;
extern T0* T61f66(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T50c5(void);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f7(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T927f66(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T927f82(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T927f66p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f51(T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T61f65(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T207f300(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T80f7(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T207f299(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T207f299p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T207f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T207f44(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T207f186(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T207f43(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T207f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T207f42(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T207f40(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T207f127(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T207f125(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T207f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T207f309(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T877f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T207f60(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T877f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T207f326(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1149os16072;
extern T0* ge1149ov16072;
extern T0* T207f143(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1143os15905;
extern T6 ge1143ov15905;
extern T6 T207f142(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T877f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T877f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T877f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T877f9(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T207f137(T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T207f218(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1149os16065;
extern T0* ge1149ov16065;
extern T0* T207f240(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T207f217(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T207f213(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T207f130(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T207f324(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T207f128(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T207f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T207f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T207f105(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T207f331(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T877f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T877f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T877f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T207f332(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T207f330(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T877f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T877f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T363f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T361f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T361f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T361f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T361f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T361f9(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T877f12(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T879f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T879f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T882f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1149os16074;
extern T0* ge1149ov16074;
extern T0* T207f155(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1149os16059;
extern T0* ge1149ov16059;
extern T0* T207f21(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1149os16069;
extern T0* ge1149ov16069;
extern T0* T207f239(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1149os16068;
extern T0* ge1149ov16068;
extern T0* T207f238(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1149os16067;
extern T0* ge1149ov16067;
extern T0* T207f237(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1149os16066;
extern T0* ge1149ov16066;
extern T0* T207f236(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1149os16070;
extern T0* ge1149ov16070;
extern T0* T207f235(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1149os16064;
extern T0* ge1149ov16064;
extern T0* T207f234(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1149os16060;
extern T0* ge1149ov16060;
extern T0* T207f233(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1149os16061;
extern T0* ge1149ov16061;
extern T0* T207f232(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1149os16062;
extern T0* ge1149ov16062;
extern T0* T207f230(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T207f153(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T86f5(T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T86f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1149os16073;
extern T0* ge1149ov16073;
extern T0* T207f231(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T207f151(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T879f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1143os15903;
extern T0* ge1143ov15903;
extern T0* T207f148(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T207f83(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T207f329(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T207f57(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T877f16(T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T877f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T207f308(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T207f307(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T877f14(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T927f65(T0* C);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T207f306(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T207f306p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T207c298(void);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T118f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER_32].make_area */
extern T0* T384c2(T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T207f298p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T207f305(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T207f323(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T207f322(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T207f321(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T207f320(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T207f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T207f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T207f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T207f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T207f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T207f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T207f304(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T207f303(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1149os16058;
extern T0* ge1149ov16058;
extern T0* T207f20(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T878c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T878f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T878f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T878f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T878f5(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T207f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T207f302p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1143os15902;
extern T0* ge1143ov15902;
extern T0* T207f19(T0* C);
/* STRING_8.put */
extern void T17f53(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T877c13(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T45f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].internal_set_equality_tester */
extern void T114f6(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge274os3869;
extern T0* ge274ov3869;
extern T0* T61f47(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T95c2(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T45f37(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T45c37(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T45f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].make */
extern T0* T114c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].new_cursor */
extern T0* T114f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8].make */
extern T0* T383c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T45f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T117c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T45f48(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T45f56(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T45f55(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T45f54(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T119f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING_8].make_area */
extern T0* T385c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T119c3(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T45f53(T0* C, T6 a1);
/* ET_C_GENERATOR.c_config */
extern T0* T61f64(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T61f539(T0* C, T0* a1);
/* UC_UTF8_STRING.index_of */
extern T6 T927f12(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T927f32(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f26(T0* C, T2 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T70f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T69f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T45f58(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f23(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T927f64(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f47(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T927f63(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T927f83(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T927f80(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f52(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f56(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f50(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T71f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T71c3(T2 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T70f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T69f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T61f96(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T61f270(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T61f269(T0* C);
/* ET_C_GENERATOR.generate_c_code */
extern void T61f314(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge945os6838;
extern T0* ge945ov6838;
extern T0* T61f15(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T162c58(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T944f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T131f45(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T224f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T180f10(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T944f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T224f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T219f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T944f3(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T224f3(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T219f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T180c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T836f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1162c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T835c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge933os15448;
extern T0* ge933ov15448;
extern T0* T180f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T836c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge901os12051;
extern T0* ge901ov12051;
extern T0* T162f10(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T180c12(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T154f2(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T64f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T316c11(T0* a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T58f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T60f184(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T58f56(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T155f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T155f18(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T411f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T410f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T410f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T410f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T410f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T410f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T410c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T155f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T155f8(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T233c36(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T233f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern unsigned char ge928os11774;
extern T0* ge928ov11774;
extern T0* T233f16(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T212c11(void);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T234c36(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T234f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T234f16(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T209c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T209f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T209f16(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge934os5839;
extern T0* ge934ov5839;
extern T0* T58f45(T0* C);
/* ET_DYNAMIC_TYPE.make */
extern T0* T156c33(T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T156f11(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T229c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T229f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T229f16(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T413f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T413f3(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T172f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T172f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T155f2(T0* C, T6 a1);
/* ET_DO_PROCEDURE.make */
extern T0* T310c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge769os13298;
extern T0* ge769ov13298;
extern T0* T169f620(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T430f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge769os12742;
extern T0* ge769ov12742;
extern T0* T169f45(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T430c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T604f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T1085c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T603c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge784os6343;
extern T0* ge784ov6343;
extern T0* T430f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T604c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge769os12954;
extern T0* ge769ov12954;
extern T0* T169f109(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T178c23(void);
/* ET_KEYWORD.make_token */
extern void T178f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T178f25(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge764os2698;
extern T0* ge764ov2698;
extern T0* T178f2(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T169c797(void);
/* ET_DO_PROCEDURE.tokens */
extern T0* T310f10(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T131c94(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T131f102(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T131c102(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T131f103(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T131f3(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T151f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T131f25(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T930f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge36os93;
extern T0* ge36ov93;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1251c2(T6 a1);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge268os2776;
extern T0* ge268ov2776;
extern T0* T131f24(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T930c3(void);
/* ET_C_GENERATOR.close_cpp_file */
extern void T61f340(T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T61f339(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].wipe_out */
extern void T203f37(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_wipe_out */
extern void T203f49(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T203f48(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T203f47(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T203f46(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].unset_found_item */
extern void T203f44(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T203f45(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_next_cursor */
extern void T866f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_position */
extern void T866f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T202f42(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T202f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T202f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T202f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T202f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T202f48(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T202f47(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T862f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T862f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T201f32(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T201f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T201f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T201f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T201f40(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T201f38(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T201f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T858f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T858f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T206f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T206f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T206f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T206f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T206f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T206f56(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T206f55(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T872f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T872f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T205f42(T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T205f55(T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T205f54(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T205f53(T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T205f52(T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T205f48(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T205f51(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T297f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T297f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T206f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T206f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T206f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T206f67(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T206f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T206f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T206f9(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T206f14(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T206f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T206f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T206f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T206f1(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T206f7(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T206f46(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T206f53(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T206f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T206f32(T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T205f41(T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T205f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T205f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T205f61(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T205f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T61f338(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T61f405(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T205f2(T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T205f5(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T205f7(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T205f1(T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T205f4(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].start */
extern void T205f40(T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T205f49(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T205f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T205f30(T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T61f337(T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T61f336(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T61f387(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T61f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T187f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T187f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T187f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T840f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T840f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T61f510(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T61f534(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T61f410(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T61f417(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T61f531(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T61f408(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T61f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T61f381(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T61f420(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T57f158(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T57f190(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge305os9008;
extern T0* ge305ov9008;
extern T0* T75f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T76c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T76f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T76f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T76f3(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T76f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge303os1583;
extern T0* ge303ov1583;
extern T0* T57f2(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T75c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T906c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f158(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f190(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T28f5(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T214f13(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T180f2(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T162f8(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T214f5(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge769os12948;
extern T0* ge769ov12948;
extern T0* T169f10(T0* C);
/* ET_CURRENT.make */
extern T0* T194c26(void);
/* ET_CURRENT.make_token */
extern void T194f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T194f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T194f2(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T214f27(T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T162f3(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T162f9(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T187f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T61f530(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T61f248(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T184f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T184f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T133f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T132f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T132f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T132f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T132f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T132f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T132c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T184f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T184f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T131f101(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f3(T6* C);
/* STRING_8.append_integer */
extern void T17f37(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T184f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T155f14(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T61f271(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T61f529(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T61f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_name */
extern void T61f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.tokens */
extern T0* T61f33(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T61f537(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T61f538(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T61f268(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T61f536(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T131f18(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T61f535(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T61f392(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T186f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T186f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T771f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T684f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T684f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T684f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T684f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T684f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T684c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T186f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T186f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T61f528(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T186f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T186f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T186f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T187f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T187f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T61f527(T0* C, T0* a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T61f380(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge945os6834;
extern T0* ge945ov6834;
extern T0* T61f76(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T61f376(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T61f341(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T61f378(T0* C);
/* ET_C_GENERATOR.indent */
extern void T61f377(T0* C);
/* ET_C_GENERATOR.print_getypes_array */
extern void T61f335(T0* C);
/* ET_C_GENERATOR.print_geconst_function */
extern void T61f334(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].forth */
extern void T203f39(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_forth */
extern void T203f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T203f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T203f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_item */
extern T6 T203f25(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T796f11(T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T61f402(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T203f2(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_item */
extern T0* T203f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_item */
extern T0* T203f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].after */
extern T1 T203f1(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_after */
extern T1 T203f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].start */
extern void T203f38(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_start */
extern void T203f50(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_off */
extern T1 T203f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].is_empty */
extern T1 T203f23(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T202f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T202f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T202f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T202f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T202f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T202f3(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T202f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T202f10(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T61f401(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T61f403(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T201f1(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T201f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T201f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T201f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T201f16(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T201f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T201f15(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T201f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T202f2(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T202f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T202f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T202f1(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T202f5(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T202f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T202f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T202f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T202f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T61f333(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].go_after */
extern void T199f40(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_go_after */
extern void T199f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T199f60(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T854f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T854f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T199f28(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gevoid_function */
extern void T61f332(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gedefault_entity_value */
extern void T61f396(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_gedefault_name */
extern void T61f418(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_current_name */
extern void T61f390(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gevoid_name */
extern void T61f400(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T200f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T200f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T200f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T200f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T200f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T200f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T200f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T855f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T855f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T200f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T200f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T200f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T200f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T200f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gemt_function */
extern void T61f331(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T61f399(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T61f416(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T61f382(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T61f412(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge769os12984;
extern T0* ge769ov12984;
extern T0* T169f11(T0* C);
/* ET_RESULT.make */
extern T0* T216c24(void);
/* ET_RESULT.make_token */
extern void T216f26(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T216f27(T0* C);
/* ET_RESULT.tokens */
extern T0* T216f2(T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T61f379(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T200f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T200f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T200f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T200f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T200f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T200f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T200f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T200f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T200f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T199f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T199f53(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T199f52(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T199f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T199f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T199f46(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T199f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T199f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T199f48(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T199f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T199f29(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gema_function */
extern void T61f330(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T212f3(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T61f384(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T61f415(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T61f383(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T61f414(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T212f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T199f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T199f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T199f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T199f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T199f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T199f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T199f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T199f27(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T61f329(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T192f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T192f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T192f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T852f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T852f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T61f398(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T61f526(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T61f525(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_routine_name */
extern void T61f508(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T155f13(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T155f17(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T155f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T412f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T412f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T61f524(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T195f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T195f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T779f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T778f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T778f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T778f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T778f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T778f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T778c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T779f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1145c2(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge634os6343;
extern T0* ge634ov6343;
extern T0* T195f9(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T779c3(void);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T195f1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T195f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_name */
extern void T61f523(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T61f522(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_type_name */
extern void T61f521(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_closed_operand_name */
extern void T61f520(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T214f15(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T214f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T162f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T162f18(T0* C);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f11(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T927f20(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f28(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1252f1(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1252f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_8.code */
extern T10 T17f30(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f28(T6* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1252f6(T0* C, T0* a1, T6 a2, T0* a3);
/* SPECIAL [INTEGER_32].fill_with */
extern void T116f9(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.string_searcher */
extern unsigned char ge2057os1254;
extern T0* ge2057ov1254;
extern T0* T17f32(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1252c5(void);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T131f98(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T131f95(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T192f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T214f2(T0* C);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T162f40(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T204f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T204f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T871f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T871f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T204f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T204f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T204f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T204f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T870f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T869f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T869f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T869f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T869f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T869f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T869c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T204f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T204f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T214f61(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T162f61(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_calls */
extern void T61f328(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T189f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T189f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T189f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T189f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T189f57(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T189f48(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T189f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T843f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_position */
extern void T843f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T188f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].clear_items */
extern void T188f21(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T188f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T841f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_position */
extern void T841f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T61f395(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_query_call */
extern void T61f394(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_target_expression */
extern void T61f509(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T61f507(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T61f506(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T61f505(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T61f504(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T61f503(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T61f502(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T61f501(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T61f500(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T61f499(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T61f498(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T61f497(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T61f496(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T61f495(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T61f494(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T61f493(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T61f492(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T61f491(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T61f490(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T61f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T61f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T61f487(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T61f486(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T61f485(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T61f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T61f483(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T61f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T61f481(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T61f480(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T61f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T61f478(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T61f477(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T61f476(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T61f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T61f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T61f473(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T61f472(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T61f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T61f470(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T61f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T61f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T61f467(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T61f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T61f465(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T61f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T61f463(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T61f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T61f461(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T61f460(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T61f459(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T61f458(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T61f457(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T61f456(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T61f455(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T61f454(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T199f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T199f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T199f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T199f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T199f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T199f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T199f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T199f24(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T199f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T199f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T199f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T199f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T199f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T199f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T199f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T199f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T199f33(T0* C);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T61f453(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T61f452(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T61f451(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T61f450(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T61f449(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T61f448(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T61f447(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T61f446(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T61f445(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T61f444(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T61f443(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T61f442(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T61f441(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T61f440(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T61f439(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T61f438(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T61f437(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T61f436(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T61f435(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T61f434(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T61f433(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T61f432(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T61f431(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T61f430(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T61f429(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T61f428(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T61f427(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T61f426(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_name_call */
extern void T61f425(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T61f533(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T247f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge237os7573;
extern T0* ge237ov7573;
extern T0* T61f267(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T247c1(void);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T61f424(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T61f423(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T61f422(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T61f421(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T202f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T202f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T202f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T202f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T202f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T202f20(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T202f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T202f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T202f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T202f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T860f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T861f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T861f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T861f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T861f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T861f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T861c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T202f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T810f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T636f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T636f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T636f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T636f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T636f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T636c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T202f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T202f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T202f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T202f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T202f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T187f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T189f4(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T189f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T189f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T189f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T189f16(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f18(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f22(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T189f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T189f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T188f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T188f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T225f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T225f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T225f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T308f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].auto_resize */
extern void T308f14(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T308f7(T0* C);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T116f3(T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_area */
extern void T308f13(T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T308f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f20(T6* C, T6 a1);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T308f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T188f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T188f23(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T312f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T308f4(T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T308f11(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make */
extern T0* T308c10(T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T188f12(T0* C);
/* ET_C_GENERATOR.polymorphic_type_id_sorter */
extern unsigned char ge945os6504;
extern T0* ge945ov6504;
extern T0* T61f85(T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T225c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T312c2(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].forth */
extern void T189f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_forth */
extern void T189f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].add_traversing_cursor */
extern void T189f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T189f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].go_before */
extern void T190f18(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_go_before */
extern void T190f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_traversing_cursor */
extern void T190f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T847f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_position */
extern void T847f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].off */
extern T1 T847f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_off */
extern T1 T190f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_before */
extern T1 T190f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_after */
extern T1 T190f4(T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_call */
extern void T61f397(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T61f519(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T61f264(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T61f518(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T61f517(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T61f516(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T61f515(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T61f263(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T61f514(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T61f262(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T61f513(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T61f512(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T61f511(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_dynamic_type_sets */
extern void T61f393(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_set */
extern void T235f13(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_standalone_type */
extern void T235f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T185f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T411f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T1028c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge930os15448;
extern T0* ge930ov15448;
extern T0* T185f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T411c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T185f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has */
extern T1 T185f1(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T185f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T185c10(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T185f13(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T235f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T185f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item_for_iteration */
extern T0* T190f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_item */
extern T0* T190f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item */
extern T0* T190f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].finish */
extern void T190f21(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_finish */
extern void T190f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].add_traversing_cursor */
extern void T190f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T190f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T190f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T849f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T848f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T848f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T848f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T848f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T848f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T848c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T190f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T190f12(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T235c11(T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].after */
extern T1 T190f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].forth */
extern void T190f19(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_forth */
extern void T190f23(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T180f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T180f3(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T180f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T836f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T835f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T835f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T835f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T835f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T835f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T180f6(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T180f11(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_for_iteration */
extern T0* T189f3(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_item */
extern T0* T189f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].after */
extern T1 T189f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_after */
extern T1 T189f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].start */
extern void T189f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_start */
extern void T189f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_off */
extern T1 T189f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].is_empty */
extern T1 T189f34(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T61f391(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T187f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T187f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T187f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T61f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T61f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.seeded_procedure */
extern T0* T60f21(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T160f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T227f10(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T61f82(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_LIST.item */
extern T0* T185f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T189f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T189f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T189f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T189f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T189f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T189f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T189f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T189f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T189f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T189f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T189f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T189f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T189f49(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T188f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T188f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T188f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T188f8(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T189f1(T0* C, T6 a1);
/* ET_C_GENERATOR.print_polymorphic_query_calls */
extern void T61f327(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T60f17(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T158f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T217f11(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gems_function */
extern void T61f326(T0* C);
/* ET_C_GENERATOR.print_gedefault_declarations */
extern void T61f325(T0* C);
/* ET_C_GENERATOR.print_gedefault_declaration */
extern void T61f375(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gedefault_object_value */
extern void T61f419(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_gedefault_attribute_value */
extern void T61f532(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T61f324(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T208f27(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T208f35(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T208f35p1(T0* C);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T80f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T80f29(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T80f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T80f18(T0* C, T6 a1);
/* ET_C_GENERATOR.print_types */
extern void T61f323(T0* C, T0* a1);
/* ET_C_GENERATOR.print_eif_type_struct */
extern void T61f374(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T61f373(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T61f411(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T61f372(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T61f406(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T215f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T155f11(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T215f14(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T885f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T885f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T885c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T885f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T155f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].replace */
extern void T884f15(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].item */
extern T0* T884f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T155c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T155f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T412c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T884f1(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T884f3(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].copy */
extern void T884f16(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1175f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T884f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1177c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T884f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T884f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1177f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_position */
extern void T1177f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T188f11(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T188f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T188f25(T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T116f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T188f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T841c4(T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T188f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T215f18(T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T61f371(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T61f370(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_geboxed_function */
extern void T61f369(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T61f409(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T61f407(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T215f13(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T215f17(T0* C, T6 a1, T6 a2);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T326f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T326c3(T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T215f4(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T215f10(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T883f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T883f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T883f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T883f37(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T883f46(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T883f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T883f13(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T883f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T883f14(T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T61f368(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T61f367(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_double_type_definition */
extern void T61f366(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_type_definition */
extern void T61f365(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T61f364(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T61f363(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_type_definition */
extern void T61f362(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T61f361(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T61f360(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T61f359(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T61f358(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_type_definition */
extern void T61f357(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T61f356(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T61f355(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T61f354(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T61f353(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_wide_character_type_definition */
extern void T61f352(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_type_definition */
extern void T61f351(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T61f350(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T61f349(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T61f348(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T215f12(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T215f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].put_last */
extern void T884f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T188f22(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put */
extern void T883f36(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T883f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T883f41(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T883f42(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T883f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T883f39(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].resize */
extern void T884f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].resize */
extern T0* T1176f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1175f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1175f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].move_data */
extern void T1175f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1175f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1175f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1175c5(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T883f35(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T883f45(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T883f25(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T883f44(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T883f43(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T883f40(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T883f7(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T215f5(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T215c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T215f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].make */
extern T0* T884c12(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1176f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]].make_area */
extern T0* T1250c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1176c3(void);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T188c15(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T883c34(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T883f38(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1172c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T1172f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1249c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T883f32(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1174c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T883f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T883f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T883f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T883f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T883f50(T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T61f347(T0* C, T0* a1);
/* ET_IDENTIFIER.upper_name */
extern T0* T131f16(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T927f19(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T927f69(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T927f81(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1182f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge351os24713;
extern T0* ge351ov24713;
extern T0* T1182f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge351os24712;
extern T0* ge351ov24712;
extern T0* T1182f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge351os24701;
extern T0* ge351ov24701;
extern T0* T1182f37(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T151f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1182f46(T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make */
extern T0* T1290c2(T6 a1);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge351os24711;
extern T0* ge351ov24711;
extern T0* T1182f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge351os24710;
extern T0* ge351ov24710;
extern T0* T1182f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge351os24709;
extern T0* ge351ov24709;
extern T0* T1182f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge351os24708;
extern T0* ge351ov24708;
extern T0* T1182f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge351os24707;
extern T0* ge351ov24707;
extern T0* T1182f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge351os24706;
extern T0* ge351ov24706;
extern T0* T1182f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge351os24705;
extern T0* ge351ov24705;
extern T0* T1182f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge351os24704;
extern T0* ge351ov24704;
extern T0* T1182f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge351os24703;
extern T0* ge351ov24703;
extern T0* T1182f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge351os24702;
extern T0* ge351ov24702;
extern T0* T1182f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge351os24700;
extern T0* ge351ov24700;
extern T0* T1182f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge351os24699;
extern T0* ge351ov24699;
extern T0* T1182f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge351os24698;
extern T0* ge351ov24698;
extern T0* T1182f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge351os24697;
extern T0* ge351ov24697;
extern T0* T1182f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge351os24696;
extern T0* ge351ov24696;
extern T0* T1182f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge351os24695;
extern T0* ge351ov24695;
extern T0* T1182f31(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make */
extern T0* T1291c2(T6 a1);
/* UC_UTF8_STRING.unicode */
extern unsigned char ge331os2778;
extern T0* ge331ov2778;
extern T0* T927f48(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1182c47(void);
/* STRING_8.as_upper */
extern T0* T17f25(T0* C);
/* STRING_8.to_upper */
extern void T17f55(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge769os12750;
extern T0* ge769ov12750;
extern T0* T169f17(T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T61f346(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge769os12769;
extern T0* ge769ov12769;
extern T0* T169f16(T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T61f345(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge769os12759;
extern T0* ge769ov12759;
extern T0* T169f15(T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T61f344(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge769os12753;
extern T0* ge769ov12753;
extern T0* T169f14(T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T61f343(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge769os12782;
extern T0* ge769ov12782;
extern T0* T169f13(T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T61f342(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge769os12747;
extern T0* ge769ov12747;
extern T0* T169f12(T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T61f322(T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T61f321(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T206f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T206f61(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T206f51(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T206f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T49f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T206f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T206f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T206f49(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T206f65(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T206f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T206f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T206f62(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T206f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T206f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T206f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T206f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T206f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T206f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T206f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].force */
extern void T205f43(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T205f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T205f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T205f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T205f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T205f58(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T205f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T205f27(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T205f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T205f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T205f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T205f63(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T205f11(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T205f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T205f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T205f56(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T205f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T206f4(T0* C, T0* a1);
/* ET_C_GENERATOR.generate_ids */
extern void T61f320(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T213f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T214f65(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T162f64(T0* C, T6 a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T61f319(T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T61f318(T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T61f310(T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T61f309(T0* C, T1 a1);
/* GEC.no_split */
extern T1 T21f25(T0* C);
/* ET_C_GENERATOR.set_finalize */
extern void T61f308(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f24(T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T61f307(T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T21f23(T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T37f2(T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T80f6(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T61c306(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T61f313(T0* C);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T80f23(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T80c23(T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T80f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T298c7(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T206f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].internal_set_equality_tester */
extern void T874f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T206c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T206f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].make */
extern T0* T874c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].new_cursor */
extern T0* T874f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1171c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T206f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T872c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T206f66(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T206f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T206f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T206f74(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T206f73(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T49c2(void);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T205f39(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T205c38(T6 a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T205f16(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T297c6(T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T205f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T205f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T205f45(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T205f44(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T204c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T204f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T871c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T870f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1170c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T870c3(void);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make */
extern T0* T203c36(T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_cursor */
extern T0* T203f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].make */
extern T0* T866c4(T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_slots */
extern void T203f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].special_integer_ */
extern T0* T203f20(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_modulus */
extern T6 T203f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_clashes */
extern void T203f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_key_storage */
extern void T203f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_item_storage */
extern void T203f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T868f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_CONSTANT].make_area */
extern T0* T1169c2(T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make */
extern T0* T867c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T868c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T202c41(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T202f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T864c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T864f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1168c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T202f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T862c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T202f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T202f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T202f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T202f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T860f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1167c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T860c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T202f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T810f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1154c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T810c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T201c31(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T201f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T858c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T201f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T201f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T201f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T201f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T201f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T201f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T200c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T200f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T855c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T200f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T200f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T200f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T200f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T200f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T200f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T857f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1166c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T856c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T857c3(void);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T199c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T199f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T854c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T199f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T199f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T199f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T199f42(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.make */
extern T0* T198c22(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T198f23(T0* C, T0* a1, T0* a2);
/* ET_CALL_INSTRUCTION.make */
extern T0* T196c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T196f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T195c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T195f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge769os12931;
extern T0* ge769ov12931;
extern T0* T169f567(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T442c60(void);
/* ET_SYMBOL.make_leaf */
extern void T442f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T442f2(T0* C);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge769os12926;
extern T0* ge769ov12926;
extern T0* T169f566(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T442c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T195f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T192c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T192f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T852c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T851f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1165c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T850c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T851c3(void);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T162f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T190c17(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T190f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T847c5(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T849f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1164c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T849c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T189c41(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T189f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T845c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T845f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T1163c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T189f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T843c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T189f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T189f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T189f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T189f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T189f68(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T187c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T187f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T840c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T771f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1141c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T771c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T186c8(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T184c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T184f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T839c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T133f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T395c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T133c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T183c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge304os2446;
extern T0* ge304ov2446;
extern T0* T61f11(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T182c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T181c13(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge890os15524;
extern T0* ge890ov15524;
extern T0* T181f4(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T315c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge769os12950;
extern T0* ge769ov12950;
extern T0* T169f612(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T178c69(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T315f10(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T315f67p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T181f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T181f13p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T61f312(T0* C, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T60f43(T0* C);
/* ET_SYSTEM.compile */
extern void T58f49(T0* C);
/* ET_SYSTEM.compile_system */
extern void T58f52(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T58f55(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T154f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T64f203(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T64f206(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T64f211(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T64f212(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T64f213(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T57f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T57f193(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T77f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T77f14(T0* C);
/* KL_STDOUT_FILE.put_string */
extern void T77f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T77f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T77f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T77f1(T0* C);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f193(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T217f7(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T227f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T64f53(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge929os7932;
extern T0* ge929ov7932;
extern T0* T64f52(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T64f51(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T64f210(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T217f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T227f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_feature_name */
extern unsigned char ge929os8151;
extern T0* ge929ov8151;
extern T0* T64f50(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T131f30(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1182f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge349os24691;
extern T0* ge349ov24691;
extern T0* T1182f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge349os24690;
extern T0* ge349ov24690;
extern T0* T1182f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge349os24679;
extern T0* ge349ov24679;
extern T0* T1182f22(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge349os24689;
extern T0* ge349ov24689;
extern T0* T1182f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge349os24688;
extern T0* ge349ov24688;
extern T0* T1182f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge349os24687;
extern T0* ge349ov24687;
extern T0* T1182f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge349os24686;
extern T0* ge349ov24686;
extern T0* T1182f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge349os24685;
extern T0* ge349ov24685;
extern T0* T1182f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge349os24684;
extern T0* ge349ov24684;
extern T0* T1182f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge349os24683;
extern T0* ge349ov24683;
extern T0* T1182f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge349os24682;
extern T0* ge349ov24682;
extern T0* T1182f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge349os24681;
extern T0* ge349ov24681;
extern T0* T1182f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge349os24680;
extern T0* ge349ov24680;
extern T0* T1182f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge349os24678;
extern T0* ge349ov24678;
extern T0* T1182f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge349os24677;
extern T0* ge349ov24677;
extern T0* T1182f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge349os24676;
extern T0* ge349ov24676;
extern T0* T1182f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge349os24675;
extern T0* ge349ov24675;
extern T0* T1182f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge349os24674;
extern T0* ge349ov24674;
extern T0* T1182f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge349os24673;
extern T0* ge349ov24673;
extern T0* T1182f16(T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T26f15(T0* C);
/* ET_IDENTIFIER.string_ */
extern T0* T131f38(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_class_name */
extern unsigned char ge929os8150;
extern T0* ge929ov8150;
extern T0* T64f49(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T64f205(T0* C, T0* a1, T0* a2);
/* DS_CELL [INTEGER_32].put */
extern void T248f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T214f68(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T162f66(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T64f209(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T64f208(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T162f42(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T214f67(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T162f65(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T214f62(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T180f9(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_mode */
extern void T154f9(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_mode */
extern void T64f200(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T154f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T64f202(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T154f10(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T64f201(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T214f63(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T162f60(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T214f64(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T60f42(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T514f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T608f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T608f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T431f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T431f8(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T131f79(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T430f4(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T430f5(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T608f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T57f157(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T57f189(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge305os9007;
extern T0* ge305ov9007;
extern T0* T75f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T77c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T77f13(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T77f18(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T77f3(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T77f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T57f195(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T905c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T57f12(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f157(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f189(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f12(T0* C);
/* ET_CLASS.named_query */
extern T0* T60f39(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T158f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T60f40(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T160f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T57f156(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T905c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T57f11(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f11(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T56f8(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T170f907(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T170f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T170f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T170f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T170f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T170f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T170f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T170f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T170f899(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T170f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T170f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T170c896(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T170f911(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T170f915(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge951os14080;
extern T0* ge951ov14080;
extern T0* T170f68(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T170f868(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T118f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T170f1743(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T170f1748(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T938f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T308f15(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge266os2693;
extern T0* ge266ov2693;
extern T0* T170f883(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T938c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T170f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge951os14077;
extern T0* ge951ov14077;
extern T0* T170f66(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T170f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T170f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge951os14076;
extern T0* ge951ov14076;
extern T0* T170f64(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge951os14075;
extern T0* ge951ov14075;
extern T0* T170f62(T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge951os14074;
extern T0* ge951ov14074;
extern T0* T170f60(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge951os14073;
extern T0* ge951ov14073;
extern T0* T170f58(T0* C);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge951os14072;
extern T0* ge951ov14072;
extern T0* T170f56(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge951os14071;
extern T0* ge951ov14071;
extern T0* T170f54(T0* C);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge951os14070;
extern T0* ge951ov14070;
extern T0* T170f52(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge951os14069;
extern T0* ge951ov14069;
extern T0* T170f50(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T170f914(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T170f41(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T170f910(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T170f39(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T170f909(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T170f913(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T170f920(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T170f924(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T929f4(T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T170f919(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T170f923(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge955os14936;
extern T0* ge955ov14936;
extern T0* T170f147(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T170f871(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge955os14935;
extern T0* ge955ov14935;
extern T0* T170f145(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge955os14934;
extern T0* ge955ov14934;
extern T0* T170f143(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge955os14933;
extern T0* ge955ov14933;
extern T0* T170f141(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge955os14932;
extern T0* ge955ov14932;
extern T0* T170f139(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge955os14931;
extern T0* ge955ov14931;
extern T0* T170f137(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge955os14930;
extern T0* ge955ov14930;
extern T0* T170f135(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge955os14929;
extern T0* ge955ov14929;
extern T0* T170f133(T0* C);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge154os5357;
extern T0* ge154ov5357;
extern T0* T170f34(T0* C);
/* YY_BUFFER.make */
extern T0* T126c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T126f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.put */
extern void T929f11(T0* C, T2 a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T929f14(T0* C, T0* a1, T6 a2);
/* STRING_8.subcopy */
extern void T17f61(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T126f9(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T929c10(T6 a1);
/* STRING_8.set_count */
extern void T17f48(T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge397os8725;
extern T1 ge397ov8725;
extern T1 T65f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1348c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T929f7(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T422c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T422f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1034c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T422f47(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T422f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T422f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T422f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T422f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T422f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T422f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T408f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T1026c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T406c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T408c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T421c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T421f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1033c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T562f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1072c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T552c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T562c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T251c18(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T251f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T889c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T653f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1102c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T631c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T653c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T253c18(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T253f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T893c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T635f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1097c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T630c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T635c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T420c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T420f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1032c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1031f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1242c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T1030c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1031c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T419c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T444f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1042c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T443c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T444c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T418c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T435f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1039c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T434c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T435c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T417c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T676f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1111c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T641c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T676c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T416c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T669f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1108c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T647c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T669c3(void);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T415c8(T6 a1);
/* ET_XACE_UNIVERSE.eiffel_parser */
extern T0* T53f8(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T57f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T905c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T57f10(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f10(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T60f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T57f154(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T905c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T57f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f154(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f9(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge769os12836;
extern T0* ge769ov12836;
extern T0* T169f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T58f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T57f153(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T905c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T57f8(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f153(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f8(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T58f54(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T169f9(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge769os12898;
extern T0* ge769ov12898;
extern T0* T169f7(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge769os12877;
extern T0* ge769ov12877;
extern T0* T169f6(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T63f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T63f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T63f12(T0* C);
/* UT_VERSION.revision */
extern T6 T63f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T63f10(T0* C);
/* UT_VERSION.minor */
extern T6 T63f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T63f8(T0* C);
/* UT_VERSION.major */
extern T6 T63f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T63f6(T0* C);
/* ET_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge248os1600;
extern T0* ge248ov1600;
extern T0* T58f44(T0* C);
/* UT_VERSION.make */
extern T0* T63c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T56f37(T0* C);
/* ET_XACE_UNIVERSE.is_ise */
extern T1 T53f37(T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge769os12906;
extern T0* ge769ov12906;
extern T0* T169f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge769os12871;
extern T0* ge769ov12871;
extern T0* T169f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge769os12834;
extern T0* ge769ov12834;
extern T0* T169f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T57f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T57f191(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T907c614(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T907f630(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T907f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T60f27(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T907f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T907f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge937os23859;
extern T0* ge937ov23859;
extern T0* T907f14(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1278c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T57f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f191(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T57f161(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T907c613(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T57f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T57f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T907c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T57f14(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge769os12809;
extern T0* ge769ov12809;
extern T0* T169f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T173c95(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T172f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T172c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T172f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T699f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1122c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T697c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge822os6343;
extern T0* ge822ov6343;
extern T0* T172f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T699c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge769os12930;
extern T0* ge769ov12930;
extern T0* T169f564(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T442c58(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge769os12925;
extern T0* ge769ov12925;
extern T0* T169f563(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T489c81(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T489f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T489f2(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T172f2(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T57f159(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T905c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T57f13(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f159(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f13(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T56f158(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T295f1(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T295f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T295f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T151f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T295f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T295f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T295f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T295f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T295f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T295c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T295f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T295f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T164f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T164f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T164f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T164f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T164f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T164f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T164f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T164f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T164f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T164f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T164f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T164f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge359os12426;
extern T6 ge359ov12426;
extern T6 T164f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T164f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge359os12425;
extern T6 ge359ov12425;
extern T6 T164f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T164f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge359os12424;
extern T6 ge359ov12424;
extern T6 T164f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T151f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T164f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T164f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T164f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T295f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T164f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T164f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1112os12620;
extern T0* ge1112ov12620;
extern T0* T295f2(T0* C);
/* DT_DATE_TIME.make */
extern T0* T164c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T164f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T164f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T164f1(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T164f2(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T164f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T164f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T164f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T164f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T164f3(T0* C);
/* ET_XACE_UNIVERSE.print_time */
extern void T53f162(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T56f161(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T920f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T149f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T920f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T57f211(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T57f212(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1336c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T149f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T149f8(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T927f21(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T927f70(T0* C);
/* STRING_8.as_lower */
extern T0* T17f29(T0* C);
/* STRING_8.to_lower */
extern void T17f62(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T149f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T138f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T138f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T138f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T57f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f211(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f212(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f35(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T920f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T138f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T920f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T137f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T397f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T137f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T56f74(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T920c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T296f130(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T296f139(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T296f143(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T266f54(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T263f13(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T135f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T134f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T428c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T80c40(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T120f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T94f23(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T94f24(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T120f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T94f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T120f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T120f2(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T120f8(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T94f22(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T94f14(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T94f4(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T120c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T46f1(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T46f2(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T94f18(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T328f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T328c3(T0* a1);
/* DS_LINKED_LIST [STRING_8].is_empty */
extern T1 T94f10(T0* C);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T121f1(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T121f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T121f12(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T121f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T121f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T121f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T121f17(T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T121f14(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T46f5(T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T94c17(void);
/* ST_SPLITTER.set_separators */
extern void T46f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T121f30(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T121f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T121f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T121f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T121f36(T0* C);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T121c29(T6 a1);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T121f10(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T386c3(T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T121f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T121f23(T0* C);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T121f6(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T121f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T121f33(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T121f32(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T46c9(void);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f34(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f33(T0* C, T14 a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T296f142(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T266f53(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T263f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T135f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T134f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T57f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T57f194(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T908c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T57f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f194(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f20(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T426f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T426f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T426f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T426f33(T0* C, T14 a1);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T266f52(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T266f60(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T266f57(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.put_last */
extern void T263f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T424f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T424f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1036f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1035f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1035f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1035f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1035f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1035f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1035c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T424f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T424f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T266f49(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T263f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T263c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T424c10(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T424f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1037c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1036f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1243c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1036c3(void);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T266f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T266f47(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_override */
extern void T266f62(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T266f61(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T266f46(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_options */
extern void T266f48(T0* C, T0* a1);
/* ET_XACE_CLUSTER.make */
extern T0* T266c41(T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T266f51(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T263f9(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T266f31(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T135f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T135f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T135f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T134f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T396f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T396f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T144f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T142f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T142f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T142f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T142f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T142f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T142c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T396f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T396f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T135f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T134f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T134c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T396c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T396f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1023c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T144f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T399c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T144c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T135f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T135f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T135f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T135f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T135f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T135f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T135c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T135f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T134f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T131f99(T0* C, T6 a1, T6 a2);
/* ET_LACE_CLUSTER.name */
extern T0* T135f13(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T135f30(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T70f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T426f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T426f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T426f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge381os8754;
extern T0* ge381ov8754;
extern T0* T70f14(T0* C);
/* KL_DIRECTORY.make */
extern void T426f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T426c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T426f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T426f8(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T69f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T69f18(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T266f24(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T205f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T266f28(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T297f10(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T297f11(T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T205f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T297f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T297f3(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T297f9(T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T266f27(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T267f111(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1000os18069;
extern T0* ge1000ov18069;
extern T0* T267f112(T0* C);
/* ET_XACE_OPTIONS.string_equality_tester */
extern unsigned char ge336os1590;
extern T0* ge336ov1590;
extern T0* T267f19(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T48c3(void);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T267f110(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T266f24p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T135f26(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T136f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T136f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T136f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T135f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T135f26p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T57f165(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T908c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T57f19(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f165(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T296f141(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T57f183(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T909c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T909f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T296f24(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T932c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T932f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T932f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T60f181(T0* C, T0* a1);
/* ET_CLASS.reset_after_parsed */
extern void T60f185(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T516f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T621f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T943f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T619f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T621f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T619f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T514f11(T0* C);
/* ET_CREATOR.reset */
extern void T608f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T520f25(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T520f27(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T520f26(T0* C);
/* ET_INVARIANTS.reset */
extern void T520f25p1(T0* C);
/* ET_PARENT_LIST.reset */
extern void T305f12(T0* C);
/* ET_PARENT.reset */
extern void T300f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T304f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T303f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T597f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T595f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T302f10(T0* C);
/* ET_RENAME.reset */
extern void T589f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T589f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T172f29(T0* C);
/* ET_PARENT.parent */
extern T0* T300f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T413f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T160f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T158f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T60f192(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge769os13295;
extern T0* ge769ov13295;
extern T0* T169f105(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T309c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T986f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1231c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T985c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge824os15448;
extern T0* ge824ov15448;
extern T0* T309f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T986c3(void);
/* ET_CLASS.tokens */
extern T0* T60f4(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T60f191(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T60f190(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T60f189(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T60f188(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T57f196(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T907c617(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T57f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f196(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T57f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T907c622(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T57f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T907c621(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T57f197(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T907c618(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f197(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T60f44(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T57f199(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T907c620(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f199(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T60f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T57f198(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T907c619(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f198(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T60f174(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T60f187(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T60f177(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T60f179(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T60f176(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T60f175(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T60f194(T0* C);
/* ET_CLASS.reset_parsed */
extern void T60f193(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge769os13297;
extern T0* ge769ov13297;
extern T0* T169f107(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T160c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge708os6343;
extern T0* ge708ov6343;
extern T0* T160f3(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge769os13296;
extern T0* ge769ov13296;
extern T0* T169f106(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T158c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge710os6343;
extern T0* ge710ov6343;
extern T0* T158f3(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge769os12944;
extern T0* ge769ov12944;
extern T0* T169f108(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T178c22(void);
/* ET_CLASS.cloned_class */
extern T0* T60f22(T0* C);
/* ET_CLASS.copy */
extern void T60f186(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T60c162(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge769os12783;
extern T0* ge769ov12783;
extern T0* T169f80(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T56f80(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T153f42(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T153f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T153f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T153f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T153f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T153f11(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T153f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T153f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T153f29(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T153f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T409f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T407f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T407f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T407f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T407f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T407f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T407c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T153f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T408f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T406f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T406f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T406f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T406f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T406f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T153f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T153f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T153f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T153f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T153f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T153f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T153f48(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T284f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T153f47(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T261f312(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T60c182(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T153f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T153f37(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T153f3(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T153f43(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.eiffel_class */
extern T0* T53f79(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T296f146(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T296f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T57f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T57f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T57f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T57f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T57f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T296f159(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T296f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T296f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T296f154(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T296f157(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T296f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T275f41(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T275f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T275f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T275f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T275f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T275f18(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T275f17(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T275f16(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T275f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T275f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T275f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T275f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T275f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T275f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T275f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T275f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T275f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T275f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T275f3(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T275f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T275f38(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T275f43(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge956os14748;
extern T0* ge956ov14748;
extern T0* T296f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T296f128(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T275f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].internal_set_equality_tester */
extern void T954f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T296f127(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T275c37(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T275f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].make */
extern T0* T954c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].new_cursor */
extern T0* T954f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1199c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T275f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T956c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T275f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T275f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T275f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T275f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T275f55(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T296f160(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T929f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T929f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T296f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge956os14749;
extern T0* ge956ov14749;
extern T0* T296f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T57f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T57f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T57f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T57f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T296f156(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T296f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T261f55(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T296f95(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T275f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T275f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T275f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T170f888(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T170f875(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T170f860(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T170f882(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T170f1744(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T170f874(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T170f873(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T296f158(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T296f152(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T57f167(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f167(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T296f155(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T296f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T296f151(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T296f149(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T296f34(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T125f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T929f5(T0* C, T0* a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.compact_left */
extern void T125f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T929f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T125f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T929f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge149os11221;
extern T6 ge149ov11221;
extern T6 T125f10(T0* C);
/* YY_BUFFER.fill */
extern void T126f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T125f18(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T126f13(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T296f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T296f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T296f150(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T929f1(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T296f145(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T125f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T125f25(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge958os14924;
extern T0* ge958ov14924;
extern T0* T296f22(T0* C);
/* YY_FILE_BUFFER.make */
extern T0* T125c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T125f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T125f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge305os9006;
extern T0* ge305ov9006;
extern T0* T75f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T931c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T931f20(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T931f23(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T931f13(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T931f22(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T296f119(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T296f147(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T125f26(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T296f147p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T296f147p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T259f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T259f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2040os1912;
extern T0* ge2040ov1912;
extern T0* T22f22(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T259c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T259f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T259f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f46(T0* C);
/* UNIX_FILE_INFO.update */
extern void T259f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T259f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f13(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f21(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge378os19722;
extern T1 ge378ov19722;
extern T1 T427f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge378os19713;
extern T0* ge378ov19713;
extern T0* T427f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge320os14918;
extern T0* ge320ov14918;
extern T0* T296f20(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T427c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T296f19(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f15(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f23(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge956os14779;
extern T0* ge956ov14779;
extern T0* T296f118(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T296f18(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T296f117(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T296f116(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T296f115(T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T266f16(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T266f16p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T266f29(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T135f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T135f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T135f29(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T426f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T426f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T426f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T426f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T426f1(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T426f4(T0* C);
/* KL_DIRECTORY.open_read */
extern void T426f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T426f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T426f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T426f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T426f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T426f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T296f17(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge954os18480;
extern T0* ge954ov18480;
extern T0* T296f113(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T296f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T57f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f207(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T396f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T424f2(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T56f79(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T296f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T296f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T296f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T296f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T296f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T296f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T296f131(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T296c129(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T296f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T296f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T296f144(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T296f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge953os18436;
extern T0* ge953ov18436;
extern T0* T296f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T296f122(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge953os18435;
extern T0* ge953ov18435;
extern T0* T296f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge953os18434;
extern T0* ge953ov18434;
extern T0* T296f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge953os18433;
extern T0* ge953ov18433;
extern T0* T296f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge953os18432;
extern T0* ge953ov18432;
extern T0* T296f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge953os18431;
extern T0* ge953ov18431;
extern T0* T296f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge953os18430;
extern T0* ge953ov18430;
extern T0* T296f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge953os18429;
extern T0* ge953ov18429;
extern T0* T296f80(T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T296f9(T0* C);
/* ET_XACE_UNIVERSE.preparse_single */
extern void T53f165(T0* C);
/* ET_XACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T53f68(T0* C);
/* ET_XACE_UNIVERSE.eiffel_preparser */
extern T0* T53f73(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T165f1(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T165f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T164f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T165f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T165f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T165f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T165f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T165f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T165f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T165f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T165f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T165f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T165f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T165f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T165f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T165f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T165f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T165f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T414c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T165f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T165f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T165f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T165f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T165f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T165f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T165f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T164c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1104os12307;
extern T0* ge1104ov12307;
extern T0* T163f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T165c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T163c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T58f35(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T58f53(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T56f156(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T289f14(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T289c13(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T976f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T976c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge888os24526;
extern T0* ge888ov24526;
extern T0* T976f4(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T975c33(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T975f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T257f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T257f36(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T256f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T256f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T899f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T898f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T898f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T898f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T898f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T898f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T898c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T256f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T256f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T975f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T256f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T256f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T900f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T900f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T256f2(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T257c33(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T257f35(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T695f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1120c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T623c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge853os15448;
extern T0* ge853ov15448;
extern T0* T257f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T695c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T256f1(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T256c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T256f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T900c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T899f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1181c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T899c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T255c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T255f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T897c4(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T254c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T254f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T896c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T894f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1180c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T895c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T894c3(void);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T252c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T252f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T892c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T890f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1179c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T891c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T890c3(void);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T250c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T250f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T888c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T817f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1157c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T795c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T817c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge872os8446;
extern T0* ge872ov8446;
extern T0* T975f6(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T289f17(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T289f9(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T288c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T974c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1224c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1224f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1327c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T974f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T288f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T288f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T287c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T973c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge885os24439;
extern T0* ge885ov24439;
extern T0* T973f4(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1223c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1261f2(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1261f1(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1261c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T972c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T972f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T971c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T971f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T970c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T969c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1222c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1222f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1326c35(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1326f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1411c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1411f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1437c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1326f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1413c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1326f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1326f41(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_slots */
extern void T1326f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1326f26(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1326f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1326f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1326f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1397f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1432c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1396c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1397c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1326f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1286c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1286f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1398c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T969f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T968c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T968f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T967c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1221f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1321f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1221c35(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1221f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1321c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1321f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1408c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1221f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1323c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1221f53(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1221f42(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1221f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1221f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1221f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1221f60(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1221f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1318f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1407c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1316c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1318c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1221f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1324f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1409c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1319c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1324c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1219f33(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1218c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1219c32(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1219f14(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1317c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1219f42(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1219f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1219f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1219f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1219f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1219f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1219f38(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T966c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1217c44(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1217f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1313c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1313f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1405c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1217f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1310c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1217f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1217f55(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1217f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1217f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1217f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1217f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1217f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1217f73(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1315f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1406c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1311c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1315c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1216f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1308f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1216c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1216f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1308c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1308f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1404c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1216f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1307c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1216f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1216f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1216f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1216f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1216f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1216f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1216f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T658f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1105c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T587c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T658c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1216f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1215f39(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1215c38(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1215f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1306c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1215f51(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1215f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1215f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1215f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1215f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1215f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1215f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1214f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1303f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge815os6265;
extern T0* ge815ov6265;
extern T0* T966f4(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T959c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1214c41(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1214f50(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1303c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1303f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1402c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1214f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1300c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1214f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1214f53(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1214f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1214f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1214f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1214f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1214f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1214f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1305f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1403c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1301c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1305c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T965f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge814os2697;
extern T0* ge814ov2697;
extern T0* T287f9(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T284c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T965c39(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T965f9(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1213c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T965f45(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T965f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T965f14(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T965f3(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T965f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T965f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T965f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T409f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T1027c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T409c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T964c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T964f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1212c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T1210f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1299c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1211c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T1210c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T961f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1207f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge813os18342;
extern T0* ge813ov18342;
extern T0* T287f6(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T962c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T961c35(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T961f37(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1207c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1207f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1298c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T961f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1209c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T961f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T961f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T961f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T961f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T961f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T961f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T961f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T667f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1107c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T665c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T667c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T961f39(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1204f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1297c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1206c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1204c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T958f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1201f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T287f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T958c45(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T958f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1201c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1201f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1296c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T958f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1203c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T958f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T958f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T958f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T958f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T958f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T958f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T958f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T958f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T287f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T287f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T291c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T980c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1230c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1230f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1332c35(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1332f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1417c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1417f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1439c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1332f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1419c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1332f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1332f41(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1332f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1332f26(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1332f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1332f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1332f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T551f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1069c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T546c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T551c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1332f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1289c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1289f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1399c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T980f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T979c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T979f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_map */
extern T0* T978c40(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_with_equality_testers */
extern void T978f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1227c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T1227f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1331c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T978f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1229c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_sparse_container */
extern void T978f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].unset_found_item */
extern void T978f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_slots */
extern void T978f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].special_integer_ */
extern T0* T978f18(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_modulus */
extern T6 T978f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_clashes */
extern void T978f45(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_key_storage */
extern void T978f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_item_storage */
extern void T978f43(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T977c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T977f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1225c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1225f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].make */
extern T0* T1328c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1328f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1414c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1225f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1330c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1225f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1225f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1225f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1225f28(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1225f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1225f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1225f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1225f57(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T291f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T291f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T290c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T290f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T290f3(T0* C);
/* ET_XACE_UNIVERSE.activate_processors */
extern void T53f160(T0* C);
/* ET_SYSTEM.compile_all */
extern void T58f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T152f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T153f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T153f71(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T152f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T153f70(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T152f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T160f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T158f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T60f73(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T60f78(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T178f13(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T152f2(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T153f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T152f1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T153f34(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T152f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T153f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T153f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T153f38(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T153f1(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T152c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T56f160(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T289f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T289f15(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.compile_degree_3 */
extern void T53f164(T0* C);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T56f159(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T77f12(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T77f16(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T77f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T77f21(T0* C, T14 a1, T2 a2);
/* ET_XACE_UNIVERSE.compile_degree_4 */
extern void T53f163(T0* C);
/* ET_LACE_UNIVERSE.parse_all */
extern void T56f157(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T170f908(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T170f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T170f918(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T170f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T170f916(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T170f921(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T170f933(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T170f932(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T130f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T129f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T129f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T129f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T129f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T129f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T129c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T130f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T394c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T130c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T170f931(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T170f950(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T170f1714(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T170f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T415f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T415f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T415f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T415f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T170f1713(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T170f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T170f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T170f1710(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T503f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T502f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T261f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T170f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T503f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T502f35(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T170f1708(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T170f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T170f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T170f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T170f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T170f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T170f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T170f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T170f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T170f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T170f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T170f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T170f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T170f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T170f1694(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T458f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T457f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T457f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T457f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T457f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T457f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T457c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T458f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1047c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T458c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T170f1693(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T170f1692(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T471f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T470f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T470f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T470f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T470f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T470f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T470c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T471f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1052c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T471c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T170f1691(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T170f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T170f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T170f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T170f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T170f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T170f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T170f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T170f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T170f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T170f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T170f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T170f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T170f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T170f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T170f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T170f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T170f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T170f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T170f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T170f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T170f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T170f1669(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T829f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T825f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T825f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T825f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T825f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T825f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T825c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T829f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1161c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T829c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T261f309(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T830c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge769os12927;
extern T0* ge769ov12927;
extern T0* T169f748(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T492c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T492f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T492f2(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge769os12929;
extern T0* ge769ov12929;
extern T0* T169f575(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T442c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge769os12924;
extern T0* ge769ov12924;
extern T0* T169f574(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T442c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T830f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T170f1668(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T170f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T170f1666(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T828f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T827f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T827f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T827f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T827f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T827f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T827c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T828f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1160c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T828c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T170f1724(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T415f12(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T415f1(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T261f308(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T170f1665(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T811f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T170f1664(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T824f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T812f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T812f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T812f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T812f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T812f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T812c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T824f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1159c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T824c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T261f307(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T811c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T811f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge500os6343;
extern T0* ge500ov6343;
extern T0* T811f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T811f2(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T170f564(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T170f585(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T419f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T170f1663(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T170f1662(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T170f1727(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T419f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T419f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T444f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T443f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T443f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T443f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T443f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T443f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T419f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T419f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T170f1661(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T170f1721(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T415f10(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T170f1726(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T419f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T170f1660(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T170f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T170f1658(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T823f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T814f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T814f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T814f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T814f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T814f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T814c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T823f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1158c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T823c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T261f300(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T815c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T815f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T170f1657(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T170f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T170f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T170f1654(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T170f847(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T131f106(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T640f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T131f34(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T945f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T679f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T945f3(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T679f3(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T170f881(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T417f2(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T417f1(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T131f105(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T219f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T170f880(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T416f2(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T416f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T170f1653(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T817f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T795f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T795f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T795f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T795f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T795f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T416f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T170f1652(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T261f306(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T822f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T822f32(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T822f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T822f30(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T822c29(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T822f34(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T822f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T822f35(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1147c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge769os12935;
extern T0* ge769ov12935;
extern T0* T169f745(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T436c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T436f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T436f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T436f2(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T261f168(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T170f1651(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T170f1650(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T417f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T170f1649(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T261f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T821f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T821f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T821f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T821f32(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T821f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T821f30(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T821c29(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T821f3(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T821f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T170f1648(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T170f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T170f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T170f1645(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T261f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T820f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T820f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T820f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T820f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T820f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T820f30(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T820c29(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T820f3(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T820f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T170f1644(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T170f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T170f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T170f1641(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T261f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T819f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T819f33(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T819f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T819f31(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T819c30(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T819f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T819f9(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T819f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T261f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T170f1640(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T170f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T170f1638(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T261f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T818f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T818f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T818f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T818f33(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T818f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T818f31(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T818c30(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T818f4(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T818f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T170f1637(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T170f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T170f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T170f1634(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T261f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T816f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T816f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T816f34(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T816f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T816f32(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T816f31(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T816c30(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T816f4(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T816f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T170f1633(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T170f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T170f1631(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T813f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T793f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T793f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T793f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T793f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T793f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T793c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T813f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1156c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T813c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T261f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T792f26(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T792c25(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T792f2(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T792c24(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T170f1630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T170f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T170f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T170f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T170f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T170f1625(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T261f251(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T170f1624(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T170f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T170f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T170f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T170f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T170f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T170f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T170f1617(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T799f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T170f1616(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T809f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T800f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T800f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T800f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T800f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T800f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T800c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T809f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1153c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T809c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T261f298(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T799f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T799c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T799f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T606f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T558c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge792os6343;
extern T0* ge792ov6343;
extern T0* T799f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T606c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge769os12987;
extern T0* ge769ov12987;
extern T0* T169f747(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T178c31(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T799f2(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T170f563(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T418f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T170f1615(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T170f1614(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T170f1722(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T418f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T418f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T435f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T434f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T434f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T434f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T434f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T434f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T418f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T418f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T170f1613(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T170f1720(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T418f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T170f1612(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T170f1611(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T540f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T170f1610(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T808f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T541f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T541f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T541f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T541f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T541f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T541c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T808f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1152c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T808c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T261f297(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T540f23(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T540c21(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T540f21p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T540f6(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T540f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T170f1609(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T170f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T170f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T170f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T170f1605(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T797f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T170f1604(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T807f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T798f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T798f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T798f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T798f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T798f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T798c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T807f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1151c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T807c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T261f296(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T797f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T797c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T797f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T797f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge769os12928;
extern T0* ge769ov12928;
extern T0* T169f577(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T442c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge769os12923;
extern T0* ge769ov12923;
extern T0* T169f746(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T442c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T797f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T170f1603(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T170f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T170f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T170f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T170f1599(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T261f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T806c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T806f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T170f1598(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T805f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T776f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T776f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T776f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T776f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T776f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T776c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T805f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1150c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T805c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T261f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T775f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T775c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T775f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T170f1597(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T801f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T170f1596(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T804f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T802f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T802f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T802f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T802f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T802f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T802c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T804f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1149c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T804c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T261f293(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T801c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T801f2(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T801f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T801f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T801f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T170f1595(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T170f1594(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T803f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T712f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T712f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T712f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T712f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T712f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T712c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T803f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1148c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T803c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T170f1593(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T261f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T711c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T170f1592(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T170f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T170f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T170f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T170f1588(T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T170f825(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.register_inline_constant */
extern void T56f184(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T796f20(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.register_inline_constant */
extern void T53f192(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T261f331(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T796f19(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T796c18(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge769os12974;
extern T0* ge769ov12974;
extern T0* T169f621(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T178c26(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T796f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T170f1587(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T170f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T170f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T170f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T170f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T170f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T170f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T170f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T170f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T170f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T170f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T170f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T170f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T170f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T170f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T170f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T170f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T170f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T170f1569(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T261f291(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T791f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T791c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge769os12973;
extern T0* ge769ov12973;
extern T0* T169f744(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T178c29(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T791f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T170f1568(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T261f289(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T790c16(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T261f290(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T461f51(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T461f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T170f1567(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T170f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T170f1566(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T170f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T261f330(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T480f73(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T480f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T170f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T170f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T261f329(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T480f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T170f1564(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T170f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T170f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T170f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T170f1560(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T261f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T789c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T170f1559(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T170f1558(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T261f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T785c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T170f1557(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T261f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T788f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T788c31(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge769os12952;
extern T0* ge769ov12952;
extern T0* T169f586(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T178c43(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge769os12975;
extern T0* ge769ov12975;
extern T0* T169f743(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T467c46(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T467f52(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T467f53(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T467f2(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T788f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T170f1556(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T261f286(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T787f32(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T787c31(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge769os12988;
extern T0* ge769ov12988;
extern T0* T169f589(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T178c46(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge769os12936;
extern T0* ge769ov12936;
extern T0* T169f742(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T467c48(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T787f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T170f1555(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T170f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T170f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T170f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T170f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T170f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T170f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T170f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T170f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T170f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T170f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T170f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T170f1543(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T261f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T480f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T170f1542(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T261f284(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T480f70(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T170f1541(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T261f282(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T461f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T170f1540(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T170f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T170f1538(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T784f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T713f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T713f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T713f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T713f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T713f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T713c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T784f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1146c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T784c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T170f1537(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T170f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T945f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T679f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T640f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T640f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T170f1536(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T261f281(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T783f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T783c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge769os12920;
extern T0* ge769ov12920;
extern T0* T169f741(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T442c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T783f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T170f1535(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T261f280(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T782f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T782c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T782f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T170f1534(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T261f279(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T781f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T781c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T781f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T170f1533(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T261f278(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T780f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T780c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T780f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T170f1532(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T261f277(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T170f1531(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T170f1530(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T777f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T728f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T728f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T728f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T728f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T728f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T728c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T777f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1144c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T777c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T261f276(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T170f1529(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T170f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T170f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T170f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T170f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T170f1524(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T261f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T170f1523(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T170f1522(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T170f1735(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge248os1595;
extern T0* ge248ov1595;
extern T0* T170f681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T170f1521(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T170f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T170f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T170f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T170f1517(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T170f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T944f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T224f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T170f1516(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T261f275(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T774f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T774f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T774c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge769os12976;
extern T0* ge769ov12976;
extern T0* T169f740(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T439c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T439f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T439f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T439f2(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T774f4(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T261f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T170f1515(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T170f1514(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T773f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T760f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T760f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T760f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T760f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T760f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T760c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T773f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1143c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T773c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T261f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T759f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T759c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T759f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T170f1513(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T170f1512(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T772f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T707f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T707f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T707f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T707f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T707f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T707c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T772f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1142c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T772c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T170f1511(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T170f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T170f1509(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T710f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T706f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T706f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T706f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T706f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T706f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T706c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T710f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1124c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T710c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T261f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T770f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T770c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T770f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T170f1508(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T170f1507(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T261f270(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T768f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T768f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T768c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T768f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T170f1506(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T170f1505(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T261f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T170f1504(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T170f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T131f104(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T170f1503(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T767f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T766f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T766f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T766f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T766f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T766f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T766c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T767f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1140c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T767c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T261f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T170f1502(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T761f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T170f1501(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T764f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T762f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T762f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T762f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T762f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T762f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T762c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T764f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1139c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T764c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T261f267(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T761c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T761f2(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T761f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge644os6343;
extern T0* ge644ov6343;
extern T0* T761f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T170f1500(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T170f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T170f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T170f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T170f1496(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T763f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T723f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T723f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T723f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T723f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T723f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T723c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T763f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1138c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T763c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T261f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T722c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T722f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T261f265(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge769os12949;
extern T0* ge769ov12949;
extern T0* T169f593(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T178c50(void);
/* ET_AST_FACTORY.tokens */
extern T0* T261f332(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T642f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T642c10(void);
/* ET_COMPOUND.make */
extern void T642f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge769os12951;
extern T0* ge769ov12951;
extern T0* T169f583(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T178c40(void);
/* ET_COMPOUND.tokens */
extern T0* T642f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T170f1495(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T261f236(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T642c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T642f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge731os6343;
extern T0* ge731ov6343;
extern T0* T642f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T170f1494(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T758f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T755f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T755f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T755f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T755f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T755f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T755c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T758f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1136c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T758c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T170f1493(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T170f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T170f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T170f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T170f1489(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T756f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T750f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T750f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T750f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T750f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T750f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T750c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T756f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1135c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T756c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T261f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T757c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge769os12922;
extern T0* ge769ov12922;
extern T0* T169f579(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T442c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T757f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T170f1488(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T170f1487(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T753f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T752f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T752f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T752f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T752f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T752f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T752c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T753f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1134c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T753c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T261f263(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T170f1486(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T745f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T170f1485(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T748f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T746f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T746f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T746f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T746f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T746f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T746c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T748f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1133c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T748c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T261f262(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T745f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T745c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T745f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge729os6343;
extern T0* ge729ov6343;
extern T0* T745f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge769os12996;
extern T0* ge769ov12996;
extern T0* T169f590(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T178c47(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T745f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T170f1484(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T170f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T170f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T170f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T170f1480(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T747f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T744f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T744f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T744f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T744f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T744f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T744c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T747f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1132c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T747c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T261f261(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T743c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T170f1479(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T739f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T170f1478(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T740f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T740f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T740f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T740f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T740f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T740c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1130c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T742c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T261f260(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T739c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge752os6343;
extern T0* ge752ov6343;
extern T0* T739f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T170f1477(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T170f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T170f1475(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T741f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T719f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T719f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T719f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T719f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T719f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T719c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T741f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1129c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T741c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T261f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T718f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T718c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T718f4(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T261f247(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T947c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T178f12(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T178f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T170f1474(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T170f1473(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T738f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T736f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T736f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T736f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T736f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T736f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T736c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T738f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1128c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T738c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T261f258(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T735c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T170f1472(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T732f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T170f1471(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T737f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T734f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T734f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T734f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T734f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T734f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T734c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T737f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1127c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T737c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T261f257(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T732c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge736os6343;
extern T0* ge736ov6343;
extern T0* T732f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T170f1470(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T170f1469(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T733f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T717f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T717f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T717f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T717f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T717f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T717c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T733f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1126c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T733c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T261f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T716f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T716f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T716c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T716f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T170f1468(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T170f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T170f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T170f1465(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T538f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T538f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T538f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T538f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T538f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T538c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1125c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T731c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T261f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T537f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T537c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge769os12946;
extern T0* ge769ov12946;
extern T0* T169f598(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T178c55(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T537f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T261f252(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T727c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T170f1464(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T170f1463(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T261f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T730f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T730c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T730f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T170f1462(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T170f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T170f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T170f1459(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T261f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T726f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T726c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge769os12917;
extern T0* ge769ov12917;
extern T0* T169f573(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T442c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T726f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T170f1458(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T170f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T170f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T170f1455(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T261f249(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T170f1454(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T170f1453(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T170f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T420f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T420f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T420f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1032f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T1032f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T724f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T420f4(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T261f328(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T724f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T724c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T724f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge524os6343;
extern T0* ge524ov6343;
extern T0* T724f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge769os12943;
extern T0* ge769ov12943;
extern T0* T169f592(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T178c49(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T724f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T170f1452(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T170f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T170f1450(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T261f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T721f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T721f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T721c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T721f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T170f1449(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T170f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T170f1447(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T261f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T715c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge769os12916;
extern T0* ge769ov12916;
extern T0* T169f581(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T442c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T715f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T170f1446(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T261f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T714c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge769os12915;
extern T0* ge769ov12915;
extern T0* T169f580(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T442c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T714f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T170f1445(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T261f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T708c13(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge719os22172;
extern T0* ge719ov22172;
extern T0* T708f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T708f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T170f1444(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T170f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T170f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T170f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T170f1440(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T694f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T643f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T643f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T643f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T643f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T643f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T643c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T694f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1119c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T694c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T170f1439(T0* C);
/* ET_COMPOUND.put_first */
extern void T642f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T170f1438(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T170f1437(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T261f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge769os12971;
extern T0* ge769ov12971;
extern T0* T169f588(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T178c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T170f1436(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T170f1435(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T261f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge769os12960;
extern T0* ge769ov12960;
extern T0* T169f587(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T178c44(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T170f1434(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T170f1433(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T261f241(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge769os12983;
extern T0* ge769ov12983;
extern T0* T169f604(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T178c61(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T170f1432(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T170f1431(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T261f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T170f1430(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T170f1429(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T261f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T170f1428(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T170f1427(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T261f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T170f1426(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T170f1425(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T261f237(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T170f1424(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T170f1423(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T703f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T564f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T564f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T564f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T564f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T564f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T564c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T703f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1123c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T703c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T261f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T704f60(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T704c59(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge769os12969;
extern T0* ge769ov12969;
extern T0* T169f739(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T178c30(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T704f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T170f1422(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T261f234(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T702f64(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T702c63(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T702f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T170f1421(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T699f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T697f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T697f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T697f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T697f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T697f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T261f233(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T261f230(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T700c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T170f1420(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T170f1419(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T170f1738(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T261f232(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T946c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T172f12(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T261f231(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T172f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T170f1418(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T170f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T170f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T170f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T170f1414(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T696f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T576f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T576f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T576f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T576f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T576f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T576c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T696f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1121c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T696c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T261f228(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T172f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T170f1413(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T170f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T170f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T170f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T170f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T170f1408(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T261f229(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T170f1407(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T170f1406(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T261f227(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T301f90(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T301c89(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge769os12990;
extern T0* ge769ov12990;
extern T0* T169f682(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T301f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T170f1405(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T170f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T261f317(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T171c94(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T261f316(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T60f180(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T422f42(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T422f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T422f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T422f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T422f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T60f71(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T422f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T422f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T422f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T422f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T422f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T422f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T422f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T422f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T422f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T422f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T422f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T422f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T261f327(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T936c56(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T60f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T413f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T553f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T545f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T170f1404(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T170f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T170f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T170f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T170f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T170f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T170f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T170f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T170f1396(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T695f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T623f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T623f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T623f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T623f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T623f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T170f1395(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T261f128(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T566f98(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T566c97(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge769os12942;
extern T0* ge769ov12942;
extern T0* T169f727(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T566f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T170f1394(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T170f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T57f204(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T907f627(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T907f626(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T907f624(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T907c625(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T57f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f204(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T57f203(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T907c623(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f203(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T170f1716(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T60f168(T0* C);
/* ET_CLASS.set_parsed */
extern void T60f167(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T565f1(T0* C);
/* ET_BIT_N.compute_size */
extern void T565f97(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T261f315(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T565f98(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T565c96(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T565f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T170f1393(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T170f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T170f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T170f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T170f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T170f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T170f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T170f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T170f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T170f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T170f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T170f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T170f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T170f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T170f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T170f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T170f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T170f1376(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T693f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T692f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T692f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T692f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T692f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T692f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T692c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T693f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1118c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T693c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T261f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T691f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T691c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge769os12994;
extern T0* ge769ov12994;
extern T0* T169f610(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T178c67(void);
/* ET_VARIANT.tokens */
extern T0* T691f2(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T261f117(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T170f1375(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T170f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T170f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T170f1372(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T690f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T689f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T689f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T689f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T689f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T689f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T689c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T690f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1117c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T690c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T170f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T688f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T261f326(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T688f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T688c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T688f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T688f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge769os12967;
extern T0* ge769ov12967;
extern T0* T169f619(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T178c76(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T688f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T170f1371(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T170f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T170f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T170f1368(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T687f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T521f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T521f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T521f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T521f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T521f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T521c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T687f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1116c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T687c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T170f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T520f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T261f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T520f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T520c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T520f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T520f6(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T520f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T170f1367(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T170f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T170f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T170f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T170f1364(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T686f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T645f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T645f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T645f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T645f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T645f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T645c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T686f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T686c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T170f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T644f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T261f324(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T644f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T644f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T644c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T644f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T644f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge769os12955;
extern T0* ge769ov12955;
extern T0* T169f730(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T178c32(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T644f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T170f1363(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T170f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T170f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T170f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T170f1359(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T685f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T639f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T639f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T639f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T639f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T639f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T639c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T685f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1114c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T685c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T170f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T638f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T261f323(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T638f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T638f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T638c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T638f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T638f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge769os12982;
extern T0* ge769ov12982;
extern T0* T169f729(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T178c35(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T638f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T170f1358(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T170f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T170f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T170f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T170f1354(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T170f1737(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T420f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T420f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T1031f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T1030f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T1030f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T1030f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T1030f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T1030f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T420f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T420f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T261f310(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T261f311(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T832c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T170f1353(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T170f1352(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T170f1736(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T420f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T420f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T420f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T832f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T420f2(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T420f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T170f1351(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T170f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T170f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T170f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T170f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T170f1346(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T683f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T678f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T678f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T678f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T678f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T678f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T678c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T683f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1113c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T683c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T261f225(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T261f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T679c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T170f1345(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T170f1344(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T682f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T680f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T680f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T680f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T680f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T680f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T680c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T682f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1112c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T682c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T261f223(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T945c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge952os14701;
extern T0* ge952ov14701;
extern T0* T170f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T170f1343(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T261f222(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T170f1342(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T640f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T170f1341(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T170f1340(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T945f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T945f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T679f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T640f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T640f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T170f1339(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T170f1338(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T676f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T641f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T641f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T641f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T641f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T641f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T170f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T417f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T417f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T417f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T417f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T261f322(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T640f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T640c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T640f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge701os6343;
extern T0* ge701ov6343;
extern T0* T640f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge769os12970;
extern T0* ge769ov12970;
extern T0* T169f595(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T178c52(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T640f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T170f1337(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T170f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T170f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T170f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T170f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T170f1332(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T675f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T671f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T671f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T671f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T671f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T671f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T671c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T675f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1110c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T675c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T261f221(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T261f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T224c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T170f1331(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T170f1330(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T672f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T672f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T672f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T672f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T672f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T672c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T674c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T261f219(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T944c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T170f1329(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T261f218(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T170f1328(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T219f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T170f1327(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T170f1326(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T944f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T219f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T219f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T170f1325(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T170f1324(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T669f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T647f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T647f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T647f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T647f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T647f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T170f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T416f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T416f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T416f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T416f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T261f321(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T219c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T219f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge690os6343;
extern T0* ge690ov6343;
extern T0* T219f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T219f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T170f1323(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T170f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T170f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T170f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T170f1319(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T667f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T665f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T665f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T665f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T665f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T665f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T170f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T170f879(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T261f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T668f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T668c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T668f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T668f5(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge774os21566;
extern T0* ge774ov21566;
extern T0* T668f2(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge769os12937;
extern T0* ge769ov12937;
extern T0* T169f591(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T178c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T170f1318(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T261f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T664f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T664c81(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T664f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T664f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T170f1317(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T170f1316(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T261f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T664c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T170f1315(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T261f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T664c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T170f1314(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T261f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T664c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T170f1313(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T261f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T664c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T170f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T261f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T664c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T170f1311(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T261f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T664c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T170f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T261f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T664c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T170f1309(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T261f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T664c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T170f1308(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T261f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T664c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T170f1307(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T261f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T664c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T170f1306(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T261f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T664c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T170f1305(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T261f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T664c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T170f1304(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T261f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T664c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T170f1303(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T261f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T664c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T170f1302(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T261f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T664c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T170f1301(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T261f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T664c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T170f1300(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T261f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T664c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T170f1299(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T261f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T664c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T170f1298(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T261f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T664c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T170f1297(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T663f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T588f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T588f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T588f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T588f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T588f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T588c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T663f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1106c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T663c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T261f196(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T666c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T170f1296(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T170f1295(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T658f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T587f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T587f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T587f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T587f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T587f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T170f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T170f878(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T261f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T662f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T662c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T662f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T662f5(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge801os21566;
extern T0* ge801ov21566;
extern T0* T662f2(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge769os12964;
extern T0* ge769ov12964;
extern T0* T169f594(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T178c51(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T170f1294(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T170f1293(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T170f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T170f877(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T261f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T660f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T660c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T660f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T660f5(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge811os21566;
extern T0* ge811ov21566;
extern T0* T660f2(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge769os12977;
extern T0* ge769ov12977;
extern T0* T169f601(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T178c58(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T170f1292(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T170f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T170f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T170f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T170f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T170f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T170f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T170f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T170f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T170f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T170f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T170f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T170f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T170f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T170f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T170f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T170f1276(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T261f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T661f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T661c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T661f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T661f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T170f1275(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T261f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T661c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T170f1274(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T261f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T661c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T170f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T261f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T661c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T170f1272(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T261f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T661c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T170f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T261f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T661c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T170f1270(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T261f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T661c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T170f1269(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T261f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T661c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T170f1268(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T261f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T661c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T170f1267(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T261f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T661c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T170f1266(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T261f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T661c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T170f1265(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T261f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T661c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T170f1264(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T261f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T661c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T170f1263(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T261f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T661c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T170f1262(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T261f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T661c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T170f1261(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T261f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T661c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T170f1260(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T261f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T661c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T170f1259(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T170f1258(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T261f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T659f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T659c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T659f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T659f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T170f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T261f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T659c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T170f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T261f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T659c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T170f1255(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T170f1254(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T657f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T634f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T634f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T634f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T634f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T634f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T634c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T657f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1104c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T657c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T261f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T170f1253(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T170f1252(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T656f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T652f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T652f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T652f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T652f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T652f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T652c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T656f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1103c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T656c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T261f172(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T170f1251(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T170f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T170f1249(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T488f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T487f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T487f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T487f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T487f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T487f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T487c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T488f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1058c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T488c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T170f1248(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T170f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T170f1246(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T653f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T631f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T631f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T631f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T631f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T631f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T170f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T170f1747(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T57f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T907c628(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T57f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f205(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T655f71(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T170f1782(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge769os12875;
extern T0* ge769ov12875;
extern T0* T169f444(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge769os12839;
extern T0* ge769ov12839;
extern T0* T169f560(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge769os12838;
extern T0* ge769ov12838;
extern T0* T169f558(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge769os12829;
extern T0* ge769ov12829;
extern T0* T169f556(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge769os12828;
extern T0* ge769ov12828;
extern T0* T169f554(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge769os12895;
extern T0* ge769ov12895;
extern T0* T169f505(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge769os12903;
extern T0* ge769ov12903;
extern T0* T169f551(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge769os12902;
extern T0* ge769ov12902;
extern T0* T169f549(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge769os12901;
extern T0* ge769ov12901;
extern T0* T169f547(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge769os12852;
extern T0* ge769ov12852;
extern T0* T169f495(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T496c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T496f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge769os12880;
extern T0* ge769ov12880;
extern T0* T169f535(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge769os12878;
extern T0* ge769ov12878;
extern T0* T169f493(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge769os12858;
extern T0* ge769ov12858;
extern T0* T169f491(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge769os12847;
extern T0* ge769ov12847;
extern T0* T169f485(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge769os12859;
extern T0* ge769ov12859;
extern T0* T169f483(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge769os12853;
extern T0* ge769ov12853;
extern T0* T169f481(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T57f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T907c629(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T939f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T57f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge769os12909;
extern T0* ge769ov12909;
extern T0* T169f370(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T169f411(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge769os12857;
extern T0* ge769ov12857;
extern T0* T169f440(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T170f1781(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge769os12869;
extern T0* ge769ov12869;
extern T0* T169f33(T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge769os12886;
extern T0* ge769ov12886;
extern T0* T169f412(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T170f1780(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge769os12821;
extern T0* ge769ov12821;
extern T0* T169f533(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge769os12825;
extern T0* ge769ov12825;
extern T0* T169f531(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge769os12824;
extern T0* ge769ov12824;
extern T0* T169f529(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge769os12823;
extern T0* ge769ov12823;
extern T0* T169f527(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge769os12820;
extern T0* ge769ov12820;
extern T0* T169f525(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge769os12822;
extern T0* ge769ov12822;
extern T0* T169f523(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge769os12819;
extern T0* ge769ov12819;
extern T0* T169f521(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge769os12818;
extern T0* ge769ov12818;
extern T0* T169f519(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge769os12817;
extern T0* ge769ov12817;
extern T0* T169f517(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge769os12816;
extern T0* ge769ov12816;
extern T0* T169f515(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge769os12815;
extern T0* ge769ov12815;
extern T0* T169f513(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge769os12814;
extern T0* ge769ov12814;
extern T0* T169f511(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge769os12813;
extern T0* ge769ov12813;
extern T0* T169f509(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge769os12812;
extern T0* ge769ov12812;
extern T0* T169f507(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge769os12900;
extern T0* ge769ov12900;
extern T0* T169f503(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge769os12899;
extern T0* ge769ov12899;
extern T0* T169f501(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge769os12897;
extern T0* ge769ov12897;
extern T0* T169f499(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge769os12894;
extern T0* ge769ov12894;
extern T0* T169f420(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge769os12893;
extern T0* ge769ov12893;
extern T0* T169f418(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge769os12854;
extern T0* ge769ov12854;
extern T0* T169f489(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge769os12846;
extern T0* ge769ov12846;
extern T0* T169f487(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T170f1779(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T170f1778(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T169f39(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T170f1777(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge769os12911;
extern T0* ge769ov12911;
extern T0* T169f476(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T169f44(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge769os12827;
extern T0* ge769ov12827;
extern T0* T169f41(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T170f1776(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge769os12908;
extern T0* ge769ov12908;
extern T0* T169f474(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge769os12865;
extern T0* ge769ov12865;
extern T0* T169f472(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge769os12883;
extern T0* ge769ov12883;
extern T0* T169f470(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge769os12876;
extern T0* ge769ov12876;
extern T0* T169f468(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge769os12861;
extern T0* ge769ov12861;
extern T0* T169f466(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge769os12830;
extern T0* ge769ov12830;
extern T0* T169f464(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge769os12826;
extern T0* ge769ov12826;
extern T0* T169f462(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge769os12868;
extern T0* ge769ov12868;
extern T0* T169f460(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge769os12867;
extern T0* ge769ov12867;
extern T0* T169f458(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge769os12866;
extern T0* ge769ov12866;
extern T0* T169f456(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T169f455(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge769os12864;
extern T0* ge769ov12864;
extern T0* T169f453(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T170f1775(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge769os12811;
extern T0* ge769ov12811;
extern T0* T169f451(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T169f450(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge769os12810;
extern T0* ge769ov12810;
extern T0* T169f448(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T170f1774(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge769os12842;
extern T0* ge769ov12842;
extern T0* T169f446(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge769os12896;
extern T0* ge769ov12896;
extern T0* T169f442(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T170f1773(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T170f1772(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge769os12860;
extern T0* ge769ov12860;
extern T0* T169f437(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge769os12879;
extern T0* ge769ov12879;
extern T0* T169f433(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge769os12850;
extern T0* ge769ov12850;
extern T0* T169f435(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge769os12856;
extern T0* ge769ov12856;
extern T0* T169f431(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge769os12855;
extern T0* ge769ov12855;
extern T0* T169f429(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge769os12844;
extern T0* ge769ov12844;
extern T0* T169f427(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T169f423(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge769os12843;
extern T0* ge769ov12843;
extern T0* T169f425(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T170f1771(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T170f1770(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge769os12874;
extern T0* ge769ov12874;
extern T0* T169f416(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge769os12831;
extern T0* ge769ov12831;
extern T0* T169f414(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T170f1769(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T170f1768(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge769os12808;
extern T0* ge769ov12808;
extern T0* T169f405(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge769os12837;
extern T0* ge769ov12837;
extern T0* T169f403(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge769os12910;
extern T0* ge769ov12910;
extern T0* T169f401(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge769os12881;
extern T0* ge769ov12881;
extern T0* T169f36(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T169f400(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge769os12872;
extern T0* ge769ov12872;
extern T0* T169f407(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T170f1767(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge769os12905;
extern T0* ge769ov12905;
extern T0* T169f397(T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge769os12873;
extern T0* ge769ov12873;
extern T0* T169f395(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge769os12780;
extern T0* ge769ov12780;
extern T0* T169f71(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T169f394(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge769os12840;
extern T0* ge769ov12840;
extern T0* T169f379(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T170f1766(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge769os12835;
extern T0* ge769ov12835;
extern T0* T169f388(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge769os12863;
extern T0* ge769ov12863;
extern T0* T169f386(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge769os12890;
extern T0* ge769ov12890;
extern T0* T169f384(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge769os12891;
extern T0* ge769ov12891;
extern T0* T169f382(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge769os12841;
extern T0* ge769ov12841;
extern T0* T169f377(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge769os12832;
extern T0* ge769ov12832;
extern T0* T169f375(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge769os12885;
extern T0* ge769ov12885;
extern T0* T169f373(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge769os12889;
extern T0* ge769ov12889;
extern T0* T169f371(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge769os12904;
extern T0* ge769ov12904;
extern T0* T169f367(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge769os12833;
extern T0* ge769ov12833;
extern T0* T169f179(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T169f369(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge769os12888;
extern T0* ge769ov12888;
extern T0* T169f390(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T261f320(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T655f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T655f76(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T655f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T655f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T655f73(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T655f72(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge769os12968;
extern T0* ge769ov12968;
extern T0* T169f585(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T178c42(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T655c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T655f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T170f1245(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T170f1244(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T261f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T315f73(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T315f71(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T315f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T315f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T315f68(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T170f1243(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T170f1242(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T261f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T654f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T654f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T654f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T654f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T654f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T654f71(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T654f70(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T654f69(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T654c68(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T654f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T170f1241(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T170f1240(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T261f169(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T310f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T310f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T310f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T310f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T310f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T310f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T310f70(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T310f69(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T170f1239(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T170f1238(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T635f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T630f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T630f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T630f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T630f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T630f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T170f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T170f1746(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T175f72(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T170f1765(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T170f1764(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T170f1763(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T170f1762(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T170f1761(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge769os12912;
extern T0* ge769ov12912;
extern T0* T169f477(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T170f1760(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T170f1759(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T170f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T170f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T170f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T170f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T170f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T170f1753(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T170f1752(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T170f1751(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T170f1750(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T170f1749(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T261f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T175f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T175f78(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T175f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T175f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T175f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T175f74(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T175f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T175c71(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T175f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T170f1237(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T170f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T170f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T170f1234(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T261f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T649f75(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T649f73(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T649f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T649f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T649f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T649f69(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T649c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T649f2(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T649f68p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T170f1233(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T170f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T170f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T170f1230(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T261f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T648f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T648f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T648f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T648f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T648f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T648f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T648f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T648f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T648f70(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T648c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T648f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T170f1229(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T170f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T170f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T170f1226(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T261f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T646f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T646f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T646f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T646f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T646f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T646f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T646f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T646f71(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T646f70(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T646c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T646f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T170f1225(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T170f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T170f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T170f1222(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T261f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T238f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T238c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge769os12992;
extern T0* ge769ov12992;
extern T0* T169f749(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T178c34(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T238f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T170f1221(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T170f1220(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T261f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T236f68(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T236c67(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T236f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T170f1219(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T170f1218(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T261f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T239f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T239c65(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T239f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T170f1217(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T170f1216(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T170f1734(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T251f24(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T251f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T251f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T889f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T251f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T889f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T251f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T251f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T251f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T251f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T251f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T251f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T889f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T251f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T251f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T251f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T251f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T251f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T251f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T251f3(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T251f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T56f171(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.register_feature */
extern void T53f191(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T170f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T655f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T170f1215(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T261f160(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T170f1214(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T170f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T170f1212(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T170f1733(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T417f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T417f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T416f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T416f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T251f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T251f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T889f2(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T251f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T251f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T251f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T170f1211(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T170f1210(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T170f1732(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T253f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T253f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T253f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T893f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T253f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T893f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T253f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T253f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T253f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T253f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T253f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T253f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T893f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T253f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T253f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T253f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T253f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T253f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T253f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T253f3(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T253f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T170f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T175f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T170f1209(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T170f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T170f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T170f1206(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T170f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T253f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T253f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T893f2(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T253f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T253f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T253f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T170f1205(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T170f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T170f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T170f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T170f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T170f1200(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T629f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T628f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T628f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T628f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T628f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T628f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T628c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T629f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1096c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T629c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T261f159(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T432c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge769os12959;
extern T0* ge769ov12959;
extern T0* T169f607(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T178c64(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T432f2(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T261f151(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T170f1199(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T170f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T170f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T170f1196(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T518f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T170f1195(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T627f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T519f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T519f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T519f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T519f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T519f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T519c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T627f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1095c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T627c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T261f158(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T518c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge553os6343;
extern T0* ge553ov6343;
extern T0* T518f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T170f1194(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T170f1730(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T251f19(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T251f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T251f25(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T253f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T253f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T253f25(T0* C);
/* ET_CLASS.set_procedures */
extern void T60f172(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T160f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T160f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T251f2(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T60f171(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T158f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T158f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T253f2(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T170f1193(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T170f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T170f1191(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T626f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T625f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T625f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T625f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T625f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T625f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T625c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T626f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1094c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T626c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T261f157(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T170f1190(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T943f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T170f1189(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T622f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T618f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T618f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T618f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T618f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T618f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T618c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T622f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1093c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T622c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T261f156(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T943f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T943c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T943f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge860os6343;
extern T0* ge860ov6343;
extern T0* T943f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T943f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T170f1188(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T170f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T170f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T170f1185(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T620f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T613f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T613f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T613f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T613f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T613f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T613c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T620f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1092c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T620c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T261f155(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T621c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T621f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T170f1184(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T261f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T619c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge769os12918;
extern T0* ge769ov12918;
extern T0* T169f572(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T442c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T619f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T170f1183(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T616f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T615f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T615f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T615c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T616f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1091c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T616c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T261f153(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T170f1182(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T516f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T170f1181(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T611f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T517f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T517f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T517f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T517f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T517f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T517c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T611f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1090c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T611c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T261f152(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T516c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T516f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge544os6343;
extern T0* ge544ov6343;
extern T0* T516f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge769os12945;
extern T0* ge769ov12945;
extern T0* T169f606(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T178c63(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T516f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T170f1180(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T170f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T170f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T170f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T170f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T170f1175(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T606f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T558f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T558f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T558f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T558f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T558f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T261f148(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T170f1174(T0* C);
/* ET_CREATOR.put_first */
extern void T608f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T170f1173(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T610f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T609f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T609f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T609f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T609f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T609f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T609c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T610f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1089c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T610c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T261f150(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T608c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T608f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T608f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge769os12947;
extern T0* ge769ov12947;
extern T0* T169f611(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T178c68(void);
/* ET_CREATOR.tokens */
extern T0* T608f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T170f1172(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T170f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T170f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T170f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T170f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T170f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T170f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T170f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T170f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T170f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T170f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T170f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T170f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T170f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T170f1159(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T607f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T515f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T515f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T515f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T515f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T515f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T515c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T607f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T607c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T170f1158(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T514f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T170f1157(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T261f149(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T514c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge548os6343;
extern T0* ge548ov6343;
extern T0* T514f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T170f1156(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T170f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T170f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T170f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T170f1152(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T304f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T170f1151(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T605f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T581f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T581f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T581f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T581f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T581f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T581c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T605f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1086c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T605c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T261f147(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T304c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T304f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T304f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge769os12979;
extern T0* ge769ov12979;
extern T0* T169f616(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T178c73(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T304f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T170f1150(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T170f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T170f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T170f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T170f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T170f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T170f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T170f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T170f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T170f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T170f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T170f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T170f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T170f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T170f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T170f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T170f1134(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T604f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T603f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T603f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T603f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T603f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T603f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T261f146(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T170f1133(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T170f1132(T0* C);
/* ET_CLIENTS.put_first */
extern void T431f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T170f1131(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T170f1130(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T601f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T594f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T594f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T594f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T594f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T594f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T594c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T601f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1084c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T601c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T261f145(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T431f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T431c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T431f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T431f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T431f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T170f1129(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T170f1128(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T261f144(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T431c18(void);
/* ET_CLIENTS.make */
extern void T431f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T170f1127(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T170f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T170f1125(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T597f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T170f1124(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T600f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T598f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T598f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T598f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T598f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T598f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T598c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T600f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1083c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T600c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T261f142(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T597c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T597f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T597f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T170f1123(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T170f1122(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T596f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T593f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T593f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T593f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T593f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T593f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T593c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T596f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1082c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T596c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T261f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T170f1121(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T170f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T170f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T170f1118(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T261f141(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T595c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge769os12938;
extern T0* ge769ov12938;
extern T0* T169f728(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T178c28(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T595f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T170f1117(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T591f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T580f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T580f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T580f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T580f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T580f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T580c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T591f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1081c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T591c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T170f1116(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T303f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T170f1115(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T261f140(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T303c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T303f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge551os6343;
extern T0* ge551ov6343;
extern T0* T303f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge769os12957;
extern T0* ge769ov12957;
extern T0* T169f600(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T178c57(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T303f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T170f1114(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T170f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T170f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T170f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T170f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T170f1109(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T590f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T586f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T586f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T586f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T586f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T586f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T586c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T590f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1080c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T590c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T261f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T589c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge769os12939;
extern T0* ge769ov12939;
extern T0* T169f582(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T178c39(void);
/* ET_RENAME.tokens */
extern T0* T589f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T170f1108(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T261f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T170f1107(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T302f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T170f1106(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T584f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T579f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T579f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T579f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T579f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T579f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T579c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T584f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1079c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T584c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T261f137(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T302c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T302f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge576os6343;
extern T0* ge576ov6343;
extern T0* T302f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge769os12981;
extern T0* ge769ov12981;
extern T0* T169f603(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T178c60(void);
/* ET_RENAME_LIST.tokens */
extern T0* T302f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T170f1105(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T170f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T170f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T170f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T170f1101(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T583f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T582f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T582f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T582f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T582f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T582f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T582c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T583f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1078c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T583c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T261f136(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T170f1100(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T170f1099(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T305f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T170f1098(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T170f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T170f1096(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T575f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T513f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T513f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T513f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T513f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T513f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T513c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T575f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1076c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T575c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T261f135(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T305c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T305f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge571os6343;
extern T0* ge571ov6343;
extern T0* T305f5(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge769os12965;
extern T0* ge769ov12965;
extern T0* T169f608(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T178c65(void);
/* ET_PARENT_LIST.tokens */
extern T0* T305f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T170f1095(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T170f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T170f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T170f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T170f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T170f1090(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T578f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T577f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T577f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T577f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T577f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T577f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T577c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T578f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1077c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T578c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T170f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T261f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T300c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T300f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T300f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T413f12(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T172f11(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T60f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T413f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T170f1089(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T170f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T170f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T170f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T170f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T170f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T170f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T170f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T170f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T170f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T170f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T170f1078(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T574f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T512f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T512f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T512f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T512f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T512f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T512c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T574f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1075c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T574c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T261f134(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T170f1077(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T170f1076(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T571f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T569f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T569f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T569f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T569f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T569f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T569c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T571f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1074c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T571c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T261f133(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T261f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T572c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T170f1075(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T170f1074(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T170f1729(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T559f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T261f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T573c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T559f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T559f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T170f1073(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T170f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T170f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T170f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T170f1069(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T567f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T560f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T560f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T560f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T560f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T560f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T560c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T567f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1073c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T567c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T261f129(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T559f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T559c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T559f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge835os6343;
extern T0* ge835ov6343;
extern T0* T559f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T559f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T170f1068(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T170f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T170f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T170f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T170f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T170f1063(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T261f130(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T170f1062(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T170f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T261f314(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T561c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T261f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T934c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T170f1061(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T170f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T170f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T170f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T170f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T170f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T170f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T170f1054(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T562f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T552f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T552f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T552f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T552f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T552f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T170f1053(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T170f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T170f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T170f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T170f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T170f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T170f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T170f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T170f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T170f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T170f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T170f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T170f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T170f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T170f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T170f1038(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T554f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T170f1037(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T556f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T555f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T555f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T555f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T555f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T555f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T555c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T556f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1070c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T556c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T261f127(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T554c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T554f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T554f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T554f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T170f1036(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T170f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T170f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T170f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T170f1032(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T551f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T546f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T546f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T546f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T546f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T546f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T170f1728(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T421f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T421f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T421f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T421f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T261f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T553f67(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T553c66(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T553f68(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge769os12914;
extern T0* ge769ov12914;
extern T0* T169f578(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T442c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T553f2(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T170f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T170f1031(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T170f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T170f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T170f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T170f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T170f1026(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T261f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T545f65(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T545c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T170f1025(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T170f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T170f1023(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T549f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T548f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T548f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T548f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T548f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T548f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T548c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T549f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1068c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T549c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T261f124(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T170f1022(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T413f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T553f70(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T545f66(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T413f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T413f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T170f1021(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T544f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T543f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T543f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T543f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T543f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T543f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T543c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T544f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1067c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T544c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T261f123(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T413f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T413c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T413f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge558os6343;
extern T0* ge558ov6343;
extern T0* T413f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T413f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T170f1020(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T170f1019(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T170f1725(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T421f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T421f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T421f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1033f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1033f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T413f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T553f69(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T421f1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T413f2(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T60f170(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T170f1018(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T170f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T170f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T170f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T170f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T170f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T170f1012(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T60f166(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T60f165(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T60f173(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T60f164(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T170f578(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T57f202(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T60f29(T0* C);
/* ET_CLASS.set_name */
extern void T60f178(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T170f876(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T170f1011(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T170f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T170f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T170f1008(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T542f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T535f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T535f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T535f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T535f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T535f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T535c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T542f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1066c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T542c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T261f122(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T170f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T536f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T532f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T532f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T532f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T532f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T532f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T532c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T536f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1065c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T536c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T261f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T539c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T539f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T170f1006(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T170f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T170f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T170f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T170f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T170f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T170f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T170f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T170f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T170f997(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T533f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T526f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T526f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T526f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T526f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T526f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T526c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T533f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1064c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T533c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T261f120(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T170f996(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T261f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T170f995(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T170f994(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T528f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T524f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T524f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T524f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T524f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T524f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T524c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T528f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1063c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T528c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T261f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T170f993(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T261f116(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T170f992(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T170f991(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T522f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T510f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T510f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T510f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T510f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T510f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T510c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T522f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1062c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T522c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T170f990(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T170f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T170f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T170f987(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T261f115(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T170f986(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T170f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T170f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T170f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T170f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T170f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T170f980(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T170f1719(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T422f38(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T422f52(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T422f51(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T422f50(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T422f49(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T422f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1034f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1034f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T422f41(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T422f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T422f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T422f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T422f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T422f56(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T422f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T422f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T422f3(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T422f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T422f2(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T422f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T422f39(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T422f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T422f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T422f27(T0* C);
/* ET_CLASS.set_providers */
extern void T60f169(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T170f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T170f1718(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T170f1717(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T57f188(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T907c616(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T57f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f22(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T56f170(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_void_seed */
extern void T53f190(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge769os12907;
extern T0* ge769ov12907;
extern T0* T169f180(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T56f169(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_copy_seed */
extern void T53f189(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T57f187(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T907c615(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T57f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T56f168(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_default_create_seed */
extern void T53f188(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T60f207(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T60f206(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T60f205(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T60f204(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T60f203(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T60f202(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T60f201(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T60f200(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T300f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T305f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T305f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T170f978(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T170f977(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T60f199(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T170f976(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T170f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T170f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T170f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T170f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T170f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T170f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T170f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T170f968(T0* C);
/* ET_CLASS.set_leading_break */
extern void T60f198(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T170f967(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T170f930(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T494f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T493f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T493f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T493f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T493f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T493f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T493c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T494f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1060c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T494c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T491f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T490f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T490f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T490f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T490f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T490f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T490c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T491f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1059c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T491c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T485f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T484f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T484f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T484f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T484f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T484f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T484c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T485f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1057c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T485c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T482f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T481f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T481f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T481f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T481f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T481f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T481c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T482f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1056c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T482c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T479f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T478f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T478f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T478f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T478f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T478f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T478c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T479f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1055c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T479c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T476f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T475f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T475f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T475f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T475f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T475f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T475c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T476f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1054c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T476c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T474f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T473f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T473f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T473f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T473f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T473f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T473c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T474f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1053c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T474c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T469f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T468f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T468f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T468f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T468f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T468f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T468c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T469f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1051c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T469c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T466f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T465f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T465f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T465f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T465f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T465f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T465c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T466f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1050c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T466c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T463f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T462f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T462f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T462f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T462f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T462f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T462c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T463f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T463c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T460f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T459f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T459f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T459f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T459f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T459f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T459c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T460f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1048c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T460c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T455f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T454f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T454f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T454f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T454f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T454f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T454c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T455f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1046c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T455c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T452f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T451f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T451f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T451f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T451f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T451f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T451c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T452f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1045c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T452c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T449f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T448f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T448f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T448f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T448f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T448f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T448c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T449f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1044c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T449c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T446f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T445f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T445f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T445f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T445f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T445f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T445c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T446f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1043c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T446c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T441f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T440f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T440f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T440f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T440f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T440f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T440c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T441f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1041c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T441c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T438f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T437f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T437f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T437f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T437f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T437f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T437c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T438f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1040c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T438c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T170f929(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T170f927(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T170f946(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T170f952(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T170f956(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T170f381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T170f945(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T170f966(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T170f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T170f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T170f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T170f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T170f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T170f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T170f926(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T170f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T170f965(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T170f954(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T261f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T261f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T261f12(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T503f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T503c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T503f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T170f884(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T261f11(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T502f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T502c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T502f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T261f10(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T501f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T501c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T501f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T261f9(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T500f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T500c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T500f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T261f8(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T499f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T499c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T499f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T261f7(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T447f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T447c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T447f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T57f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T57f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T57f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T57f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T57f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T261f6(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T498f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T170f887(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T498c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T498f34(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T170f890(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T261f5(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T497f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T170f886(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T497c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T497f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T170f406(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T170f404(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T170f1745(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T170f402(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T170f964(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T261f4(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T496f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T57f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f169(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T261f3(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T495f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T170f885(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T495c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T495f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T170f963(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T261f114(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T508f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T508c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T508f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T57f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T57f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T170f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T261f113(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T507f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T507c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T507f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T57f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T261f2(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T461f47(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T461c46(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T461f4(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T461f48(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T461f49(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T170f955(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T170f961(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T170f960(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T261f112(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T178f27(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T178c38(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T261f111(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T439f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T261f110(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T261f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge769os12941;
extern T0* ge769ov12941;
extern T0* T169f618(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T178c75(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T261f108(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge769os12991;
extern T0* ge769ov12991;
extern T0* T169f617(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T178c74(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T261f107(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T178c37(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T261f106(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T261f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge769os12972;
extern T0* ge769ov12972;
extern T0* T169f615(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T178c72(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T261f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge769os12963;
extern T0* ge769ov12963;
extern T0* T169f614(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T178c71(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T261f103(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge769os12958;
extern T0* ge769ov12958;
extern T0* T169f613(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T178c70(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T261f102(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T178c36(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T261f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T261f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T261f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T261f98(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T261f97(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge769os12966;
extern T0* ge769ov12966;
extern T0* T169f609(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T178c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T261f96(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T261f95(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T467f47(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T467c51(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T261f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T261f93(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T261f92(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T194f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T261f91(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T261f90(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge769os12986;
extern T0* ge769ov12986;
extern T0* T169f605(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T178c62(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T261f89(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T216f28(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T261f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T261f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T261f86(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge769os12978;
extern T0* ge769ov12978;
extern T0* T169f602(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T178c59(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T261f85(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T261f84(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T178c33(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T261f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T261f82(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T261f81(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge769os12953;
extern T0* ge769ov12953;
extern T0* T169f599(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T178c56(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T261f80(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T261f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge769os12940;
extern T0* ge769ov12940;
extern T0* T169f597(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T178c54(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T261f78(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge769os12993;
extern T0* ge769ov12993;
extern T0* T169f596(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T178c53(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T261f77(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T261f76(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T477f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T477c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T477f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T477f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T477f2(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T261f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T261f74(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T261f73(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T506f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T506c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T506f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T506f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T506f2(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T261f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T261f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T261f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T261f69(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T261f68(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T436f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T261f67(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T261f66(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T483f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T483c24(void);
/* ET_VOID.make_token */
extern void T483f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T483f27(T0* C);
/* ET_VOID.tokens */
extern T0* T483f2(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T261f65(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T505f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T505c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T505f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T505f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T505f2(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T261f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T261f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T261f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T261f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T261f60(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T261f59(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T467c50(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T261f58(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T261f57(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T467c49(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T261f56(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T261f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T261f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T261f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T261f51(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T261f50(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge769os12962;
extern T0* ge769ov12962;
extern T0* T169f584(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T178c41(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T261f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T261f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T261f1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T170f959(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T261f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T261f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T261f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T261f44(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T261f43(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T442f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T261f42(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T480f58(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T480c68(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T480f69(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T261f41(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T261f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T480c67(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T261f39(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T480c66(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T261f38(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T442c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T261f37(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T480c65(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T170f389(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T170f958(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T170f957(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T261f36(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge769os12933;
extern T0* ge769ov12933;
extern T0* T169f576(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T442c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T261f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T261f34(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T261f33(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T489f82(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T261f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T261f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T261f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T261f29(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T261f28(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T492f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T261f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T261f26(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T261f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge769os12919;
extern T0* ge769ov12919;
extern T0* T169f571(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T442c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T261f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T169f570(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T486c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T486f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T486f2(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T261f23(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge769os12921;
extern T0* ge769ov12921;
extern T0* T169f569(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T442c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T261f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T480c64(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T261f21(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T480c63(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T261f20(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T442c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T261f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T480c62(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T261f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T480c61(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T261f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T480c60(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T261f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T480c59(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T261f15(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T480c57(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T170f388(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T170f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T170f953(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T170f281(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T170f936(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T170f280(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T170f279(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T170f935(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T170f925(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T170f934(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T170f951(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T170f1715(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T170f1739(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T713f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T740f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T744f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T692f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T618f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T625f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T623f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T800f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T760f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T579f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T586f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T630f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T631f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T639f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T645f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T513f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T582f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T577f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T776f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T512f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T541f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T762f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T766f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T798f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T689f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T641f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T678f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T680f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T564f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T581f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T521f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T706f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T719f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T795f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T526f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T535f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T532f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T524f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T510f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T717f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T543f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T548f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T546f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T647f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T671f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T672f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T558f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T587f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T598f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T519f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T628f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T652f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T588f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T778f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T684f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T580f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T593f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T734f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T736f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T723f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T515f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T609f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T538f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T517f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T615f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T613f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T552f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T555f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T560f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T569f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T636f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T643f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T594f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T603f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T406f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T746f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T752f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T755f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T750f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T707f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T793f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T712f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T802f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T634f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T665f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T814f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T812f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T827f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T825f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T576f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T697f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T728f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T493f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T490f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T487f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T484f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T481f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T478f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T475f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T473f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T470f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T468f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T465f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T132f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T462f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T459f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T457f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T454f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T451f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T448f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T445f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T443f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T440f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T437f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T434f6(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T129f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T170f928(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T170f71(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T170f869(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T170f922(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T419f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T419f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T418f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T418f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T415f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].clear_items */
extern void T415f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T170f922p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T170f922p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T170f47(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T170f46(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T170f866(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T170f45(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T170f865(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T170f864(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T170f863(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T170f44(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge952os14703;
extern T0* ge952ov14703;
extern T0* T170f861(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T170f43(T0* C);
/* ET_XACE_UNIVERSE.parse_all */
extern void T53f161(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T58f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T64c199(T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T248c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge929os8149;
extern T0* ge929ov8149;
extern T0* T64f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T64f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge929os8148;
extern T0* ge929ov8148;
extern T0* T64f4(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T64f204(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T64f207(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T64f47(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_mode */
extern void T58f47(T0* C, T1 a1);
/* GEC.is_cat */
extern T1 T21f22(T0* C);
/* ET_SYSTEM.make */
extern T0* T58c46(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T58f50(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T154c8(T0* a1);
/* GEC.is_verbose */
extern T1 T21f21(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T56f155(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T56f172(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T56f183(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T56f182(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge769os12789;
extern T0* ge769ov12789;
extern T0* T169f99(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge769os12804;
extern T0* ge769ov12804;
extern T0* T169f98(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge769os12796;
extern T0* ge769ov12796;
extern T0* T169f95(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge769os12791;
extern T0* ge769ov12791;
extern T0* T169f90(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T307c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T943c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T943f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge769os12807;
extern T0* ge769ov12807;
extern T0* T169f85(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge769os12785;
extern T0* ge769ov12785;
extern T0* T169f84(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove */
extern void T153f45(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_position */
extern void T153f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_forth */
extern void T153f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors */
extern void T153f67(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_after */
extern void T153f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].internal_set_key_equality_tester */
extern void T153f60(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T404f6(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge769os12774;
extern T0* ge769ov12774;
extern T0* T169f52(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T56f83(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T56f181(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_found_item */
extern void T153f44(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge248os1596;
extern T0* ge248ov1596;
extern T0* T56f71(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T56f180(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T56f179(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T56f178(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T56f177(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T56f176(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T56f175(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T56f174(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_ise_version */
extern void T53f159(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_keyword_usage */
extern void T53f174(T0* C);
/* ET_XACE_UNIVERSE.set_ecma_version */
extern void T53f185(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T53f184(T0* C);
/* ET_XACE_UNIVERSE.tokens */
extern T0* T53f78(T0* C);
/* ET_XACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T53f183(T0* C);
/* ET_XACE_UNIVERSE.ise_5_7_60362 */
extern T0* T53f65(T0* C);
/* ET_XACE_UNIVERSE.set_use_void_keyword */
extern void T53f182(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_reference_keyword */
extern void T53f181(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_recast_keyword */
extern void T53f180(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_create_keyword */
extern void T53f179(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_convert_keyword */
extern void T53f178(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_attribute_keyword */
extern void T53f177(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_assign_keyword */
extern void T53f176(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge248os1603;
extern T0* ge248ov1603;
extern T0* T21f20(T0* C);
/* UT_VERSION.make_latest */
extern T0* T63c16(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T57f152(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f152(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T56f154(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_error_handler */
extern void T53f158(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T57c151(void);
/* GEC.is_silent */
extern T1 T21f19(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f45(T0* C, T14 a1);
/* GEC.parse_ace_file */
extern void T21f36(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T54f1(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T54f215(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T54f219(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T54f232(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T54f231(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T54f230(T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T54f244(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge977os5124;
extern T0* ge977ov5124;
extern T0* T54f195(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T54f171(T0* C, T0* a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge977os5121;
extern T0* ge977ov5121;
extern T0* T54f194(T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T54f147(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T149f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T149f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T149f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T123f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T149c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T148f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T147f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T147f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T147f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T147f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T147f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T147c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T148f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T402c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T148c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T149f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T138f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T54f144(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T123f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T138c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T137f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T397f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T397f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T397f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T397f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T54f143(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T123f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T137c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T397f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T397c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T397f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T1024c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T146f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T140f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T140f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T140f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T140f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T140f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T140c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T146f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T401c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T146c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T136f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T136c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T145f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T143f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T143f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T143f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T143f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T143f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T143c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T145f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T400c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T145c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T54f137(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T124f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T124f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T124f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T124f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T124f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T124f14(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T124f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T124f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T124f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T124f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T124f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T124f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T124f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T124f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T124f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T124f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T124f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T124f46(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T388f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T131f32(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T131f39(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T124f41(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T123f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T54f134(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T54f243(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T55f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T55f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T55f5(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T113c7(T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T54f191(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T124f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T124f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T124f1(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T124f37(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T135f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T54f132(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T123f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T134c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T396f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T141f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T139f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T139f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T139f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T139f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T139f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T139c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T141f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T398c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T141c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T54f128(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge977os5122;
extern T0* ge977ov5122;
extern T0* T54f208(T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge977os5123;
extern T0* ge977ov5123;
extern T0* T54f206(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T127f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T127f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T127f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T127f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T127f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T127f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T127f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T127f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T127f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T127f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T127f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T127f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T127f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T127f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T127f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T127f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T127f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T127f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T127f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T127f45(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge977os5125;
extern T0* ge977ov5125;
extern T0* T54f205(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T56f165(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T56f164(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T56f163(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T56f162(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T54f126(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_object_pathnames */
extern void T56f167(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_include_pathnames */
extern void T56f166(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T123f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T56c153(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T286c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T56f173(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge769os12790;
extern T0* ge769ov12790;
extern T0* T169f104(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge769os12802;
extern T0* ge769ov12802;
extern T0* T169f103(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge769os12788;
extern T0* ge769ov12788;
extern T0* T169f102(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge769os12801;
extern T0* ge769ov12801;
extern T0* T169f101(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge769os12803;
extern T0* ge769ov12803;
extern T0* T169f100(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge769os12806;
extern T0* ge769ov12806;
extern T0* T169f97(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge769os12805;
extern T0* ge769ov12805;
extern T0* T169f96(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge769os12800;
extern T0* ge769ov12800;
extern T0* T169f94(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge769os12799;
extern T0* ge769ov12799;
extern T0* T169f93(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge769os12798;
extern T0* ge769ov12798;
extern T0* T169f92(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge769os12797;
extern T0* ge769ov12797;
extern T0* T169f91(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge769os12795;
extern T0* ge769ov12795;
extern T0* T169f89(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge769os12794;
extern T0* ge769ov12794;
extern T0* T169f88(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge769os12793;
extern T0* ge769ov12793;
extern T0* T169f87(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge769os12792;
extern T0* ge769ov12792;
extern T0* T169f86(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge769os12787;
extern T0* ge769ov12787;
extern T0* T169f83(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge769os12786;
extern T0* ge769ov12786;
extern T0* T169f82(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge769os12784;
extern T0* ge769ov12784;
extern T0* T169f81(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge769os12778;
extern T0* ge769ov12778;
extern T0* T169f79(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge769os12777;
extern T0* ge769ov12777;
extern T0* T169f78(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge769os12765;
extern T0* ge769ov12765;
extern T0* T169f77(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge769os12743;
extern T0* ge769ov12743;
extern T0* T169f76(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge769os12751;
extern T0* ge769ov12751;
extern T0* T169f75(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge769os12767;
extern T0* ge769ov12767;
extern T0* T169f74(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge769os12768;
extern T0* ge769ov12768;
extern T0* T169f73(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge769os12772;
extern T0* ge769ov12772;
extern T0* T169f72(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge769os12781;
extern T0* ge769ov12781;
extern T0* T169f70(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge769os12766;
extern T0* ge769ov12766;
extern T0* T169f69(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge769os12771;
extern T0* ge769ov12771;
extern T0* T169f68(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge769os12770;
extern T0* ge769ov12770;
extern T0* T169f67(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge769os12763;
extern T0* ge769ov12763;
extern T0* T169f66(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge769os12762;
extern T0* ge769ov12762;
extern T0* T169f65(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge769os12761;
extern T0* ge769ov12761;
extern T0* T169f64(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge769os12760;
extern T0* ge769ov12760;
extern T0* T169f63(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge769os12757;
extern T0* ge769ov12757;
extern T0* T169f62(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge769os12756;
extern T0* ge769ov12756;
extern T0* T169f61(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge769os12755;
extern T0* ge769ov12755;
extern T0* T169f60(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge769os12754;
extern T0* ge769ov12754;
extern T0* T169f59(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge769os12749;
extern T0* ge769ov12749;
extern T0* T169f58(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge769os12748;
extern T0* ge769ov12748;
extern T0* T169f57(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge769os12746;
extern T0* ge769ov12746;
extern T0* T169f56(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge769os12758;
extern T0* ge769ov12758;
extern T0* T169f55(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge769os12773;
extern T0* ge769ov12773;
extern T0* T169f54(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge769os12744;
extern T0* ge769ov12744;
extern T0* T169f53(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge769os12776;
extern T0* ge769ov12776;
extern T0* T169f51(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge769os12775;
extern T0* ge769ov12775;
extern T0* T169f50(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge769os12745;
extern T0* ge769ov12745;
extern T0* T169f49(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge769os12779;
extern T0* ge769ov12779;
extern T0* T169f48(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T299c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T299f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge769os12764;
extern T0* ge769ov12764;
extern T0* T169f47(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge769os12752;
extern T0* ge769ov12752;
extern T0* T169f46(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T153f41(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T56f62(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T153c40(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T153f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T404c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T404f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T1025c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T153f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T153f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T153f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T153f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T153f62(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T123f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T261c333(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T123f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c151(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T127f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T127f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T127f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T393f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T127f58(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T393f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T127f2(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T127f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T127f1(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T127f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T127f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T127f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T127f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T127f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T54f229(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T54f228(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T54f226(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T54f242(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T54f225(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T54f241(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T54f193(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T54f12(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T54f190(T0* C);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T901f1(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T901f17(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T901f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T901f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1189f1(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* ARRAY [NATURAL_64].item */
extern T11 T1293f4(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2060os22857;
extern T0* ge2060ov22857;
extern T0* T901f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1189c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* ARRAY [NATURAL_64].put */
extern void T1293f6(T0* C, T11 a1, T6 a2);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* ARRAY [NATURAL_64].make */
extern T0* T1293c5(T6 a1, T6 a2);
/* ARRAY [NATURAL_64].make_area */
extern void T1293f7(T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make */
extern T0* T1292c2(T6 a1);
/* STRING_8.has */
extern T1 T17f31(T0* C, T2 a1);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(T6* C);
/* UC_UTF8_STRING.code */
extern T10 T927f43(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T901f22(T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge2057os1256;
extern T0* ge2057ov1256;
extern T0* T17f20(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T901f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T901f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T901f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c58(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T901f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T901c16(void);
/* ET_LACE_PARSER.set_start_condition */
extern void T54f248(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T54f187(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T929f2(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T54f170(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T54f162(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T54f240(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T54f247(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T54f113(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T54f239(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T54f237(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T54f112(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T54f111(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T54f238(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T76f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T76f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T76f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T54f159(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T54f40(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T54f224(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T54f233(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T54f245(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T54f249(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T54f251(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T140f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T147f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T143f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T139f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T142f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T54f227(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T127f37(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T127f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T127f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T127f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T127f47(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T127f46(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T54f218(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T54f223(T0* C);
/* YY_BUFFER.set_position */
extern void T126f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T125f19(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T54f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T124f36(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T124f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T124f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T124f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T124f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T124f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T392f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T392f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T54f217(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T54f222(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T54c214(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T54f216(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T54f221(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T54f236(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge976os5063;
extern T0* ge976ov5063;
extern T0* T54f158(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T54f211(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge976os5062;
extern T0* ge976ov5062;
extern T0* T54f157(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge976os5061;
extern T0* ge976ov5061;
extern T0* T54f156(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge976os5060;
extern T0* ge976ov5060;
extern T0* T54f155(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge976os5059;
extern T0* ge976ov5059;
extern T0* T54f154(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge976os5058;
extern T0* ge976ov5058;
extern T0* T54f153(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge976os5057;
extern T0* ge976ov5057;
extern T0* T54f152(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge976os5056;
extern T0* ge976ov5056;
extern T0* T54f151(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge976os5055;
extern T0* ge976ov5055;
extern T0* T54f150(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge976os5054;
extern T0* ge976ov5054;
extern T0* T54f149(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T54f235(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T54f220(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T54f234(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T54f246(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T54f250(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge978os5500;
extern T0* ge978ov5500;
extern T0* T54f203(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T54f213(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge978os5499;
extern T0* ge978ov5499;
extern T0* T54f202(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge978os5498;
extern T0* ge978ov5498;
extern T0* T54f201(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge978os5497;
extern T0* ge978ov5497;
extern T0* T54f200(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge978os5496;
extern T0* ge978ov5496;
extern T0* T54f199(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge978os5495;
extern T0* ge978ov5495;
extern T0* T54f198(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge978os5494;
extern T0* ge978ov5494;
extern T0* T54f197(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T54f59(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T127c36(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T127f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T393c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T127f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T127f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T127f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T127f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T124c35(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T124f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T390c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T390f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T1022c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T124f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T392c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T124f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T124f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T124f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T124f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T124f57(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T388c2(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T123c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T55c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T55f2(T0* C);
/* GEC.parse_ecf_file */
extern void T21f35(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f34(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T44f1(T0* C);
/* ET_XACE_UNIVERSE_PARSER.parse_file */
extern void T43f231(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T110f2(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T110f7(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T110f6(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T110f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T110f12(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c42(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T110f4(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T344f1(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T110f9(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T110f15(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T345f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T345f2(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T345f1(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T344f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T996f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T996f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T996c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T344f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T344c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T344f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T997c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T345f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T998f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T998c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T345c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T44f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T44f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T44f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T102f4(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T105f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T44f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T912c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T342f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T342f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T100f1(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T923f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T924f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T924f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T923f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T924f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T923f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T923f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T924f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T923f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T924f3(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T923f2(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T923f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T924f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T924f1(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T923c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T105f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T272f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T98f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T98f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T272f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T98f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T272f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T99f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T99f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T99f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T44f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T914c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T105f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T105f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1031os4159;
extern T0* ge1031ov4159;
extern T0* T105f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1031os4134;
extern T0* ge1031ov4134;
extern T0* T105f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1031os4157;
extern T0* ge1031ov4157;
extern T0* T105f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1031os4160;
extern T0* ge1031ov4160;
extern T0* T105f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1031os4143;
extern T0* ge1031ov4143;
extern T0* T105f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1031os4156;
extern T0* ge1031ov4156;
extern T0* T105f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T44f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T44f17(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T44f18(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T283c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1031os4147;
extern T0* ge1031ov4147;
extern T0* T105f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T105f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1031os4155;
extern T0* ge1031ov4155;
extern T0* T105f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1031os4154;
extern T0* ge1031ov4154;
extern T0* T105f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1031os4153;
extern T0* ge1031ov4153;
extern T0* T105f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1031os4152;
extern T0* ge1031ov4152;
extern T0* T105f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1031os4151;
extern T0* ge1031ov4151;
extern T0* T105f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1031os4150;
extern T0* ge1031ov4150;
extern T0* T105f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1031os4149;
extern T0* ge1031ov4149;
extern T0* T105f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1031os4139;
extern T0* ge1031ov4139;
extern T0* T105f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T44f25(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T918c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1031os4138;
extern T0* ge1031ov4138;
extern T0* T918f7(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T275f35(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1001os4326;
extern T0* ge1001ov4326;
extern T0* T333f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T275f40(T0* C, T6 a1, T0* a2);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T333f29(T0* C);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge988os10303;
extern T0* ge988ov10303;
extern T0* T105f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T333c192(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T99f5(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T272f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T98f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T272f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T98f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T99f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T99f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T99f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T99f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T99f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1351f2(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1351c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1031os4146;
extern T0* ge1031ov4146;
extern T0* T105f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T105f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T105f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T44f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T917c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1031os4161;
extern T0* ge1031ov4161;
extern T0* T105f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1031os4142;
extern T0* ge1031ov4142;
extern T0* T105f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T105f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T105f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T105f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T44f23(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T916c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T105f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T44f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T280c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1031os4137;
extern T0* ge1031ov4137;
extern T0* T105f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1031os4145;
extern T0* ge1031ov4145;
extern T0* T105f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T272f2(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T272f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T98f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T99f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T99f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T272c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T105f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1031os4135;
extern T0* ge1031ov4135;
extern T0* T105f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T99f7(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T99f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T99f12(T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T1258f1(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1258f3(T0* C);
/* XM_ELEMENT.has_namespace */
extern T1 T99f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1351f4(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T44f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T915c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T99f6(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1031os4133;
extern T0* ge1031ov4133;
extern T0* T105f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T44f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T913c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T99f4(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T105f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1031os4132;
extern T0* ge1031ov4132;
extern T0* T105f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T105f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].wipe_out */
extern void T107f37(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_wipe_out */
extern void T107f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_wipe_out */
extern void T107f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T107f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T107f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].unset_found_item */
extern void T107f41(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].move_all_cursors_after */
extern void T107f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].set_next_cursor */
extern void T338f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].set_position */
extern void T338f5(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_root_class_name */
extern void T53f166(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_class */
extern void T53f186(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_universe */
extern T0* T43f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.replace_all_characters */
extern T0* T43f17(T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T927f62(T0* C, T2 a1, T6 a2);
/* ET_XACE_UNIVERSE.merge_externals */
extern void T53f168(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T269f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T270f3(T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T263f4(T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T266f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T298f11(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T80f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T80f38(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T80f39(T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T262f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T298f5(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T80f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T298f4(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T80f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T298f10(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T80f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T80f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T298f2(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T80f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].cursor_before */
extern T1 T80f14(T0* C, T0* a1);
/* ET_XACE_OPTIONS.link */
extern T0* T267f12(T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1000os18089;
extern T0* ge1000ov18089;
extern T0* T267f29(T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T80f41(T0* C, T0* a1);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T267f27(T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T262f6(T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T267f11(T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1000os18078;
extern T0* ge1000ov18078;
extern T0* T267f26(T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T267f24(T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T262f5(T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T267f10(T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1000os18060;
extern T0* ge1000ov18060;
extern T0* T267f23(T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T267f21(T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T262c4(void);
/* ET_XACE_UNIVERSE.mount_libraries */
extern void T53f167(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T269f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T263f11(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T266f58(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T263f10(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T266f59(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T263f14(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.fill_system */
extern void T43f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.set_libraries */
extern void T53f173(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_options */
extern void T53f172(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_creation_procedure_name */
extern void T53f171(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_creation */
extern void T53f187(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_system_name */
extern void T53f170(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_clusters */
extern void T53f169(T0* C, T0* a1);
/* ET_XACE_LIBRARY.merge_libraries */
extern void T274f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T269f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T268f10(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T268f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T268f7(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T268f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T44f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T1420c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T269f4(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T269f3(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T269f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T270f1(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T263f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T266f56(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_externals */
extern void T43f235(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T266f44(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T949f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1197f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1197c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T949f3(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T949c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T949f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1196c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_export */
extern T0* T43f134(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T267f139(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T911f1(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T278f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T911f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1191f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1191c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T911c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T911f4(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1190c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_exported_feature */
extern T0* T43f227(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T97f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T910c3(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_alias */
extern unsigned char ge1031os4158;
extern T0* ge1031ov4158;
extern T0* T43f229(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_feature */
extern T0* T43f226(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T97f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T278c4(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_export */
extern T0* T43f133(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T267f147(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force_last */
extern void T205f68(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_include_dir */
extern T0* T43f132(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T267f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_location */
extern T0* T43f131(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_link_library */
extern T0* T43f130(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T97f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T267c113(void);
/* ET_XACE_UNIVERSE_PARSER.uc_external */
extern T0* T43f31(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_options */
extern T0* T43f30(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_options */
extern void T43f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.uc_debug */
extern T0* T43f129(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_optimize */
extern T0* T43f128(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_check */
extern T0* T43f126(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_loop */
extern T0* T43f123(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_invariant */
extern T0* T43f121(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_ensure */
extern T0* T43f119(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_enable */
extern unsigned char ge1031os4148;
extern T0* ge1031ov4148;
extern T0* T43f117(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_require */
extern T0* T43f116(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T267f193(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T950f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T950f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T950c5(void);
/* UT_TRISTATE.set_undefined */
extern void T950f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T267f192(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1000os17963;
extern T0* ge1000ov17963;
extern T0* T267f9(T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T205f67(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T205f69(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T205f71(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T205f70(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.options */
extern T0* T267f20(T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T267f191(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T267f190(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T267f189(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T267f188(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T267f187(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T267f186(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T267f185(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1000os17961;
extern T0* ge1000ov17961;
extern T0* T267f8(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T267f184(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T267f183(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T267f182(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T267f181(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T267f180(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T267f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T267f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T267f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T267f176(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T267f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T267f174(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T267f173(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T267f172(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T267f171(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T267f170(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T267f169(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T267f168(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T267f167(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T267f166(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T267f165(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T267f164(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T267f163(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T267f162(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T267f161(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T267f160(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T267f159(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1000os17960;
extern T0* ge1000ov17960;
extern T0* T267f7(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T267f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T267f156(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T267f155(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T267f154(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1000os17959;
extern T0* ge1000ov17959;
extern T0* T267f6(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T267f153(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T267f152(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T267f151(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1000os17958;
extern T0* ge1000ov17958;
extern T0* T267f5(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T267f150(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T267f149(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T267f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T267f146(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T267f145(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T267f144(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1000os17957;
extern T0* ge1000ov17957;
extern T0* T267f4(T0* C);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T267f143(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T44f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T282c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T267f142(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T927f35(T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T927f42(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T927f34(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T927f41(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T901f2(T0* C);
/* STRING_8.is_integer */
extern T1 T17f23(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f27(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T267f141(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T267f140(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T267f138(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T267f137(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T267f136(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T267f135(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T267f134(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T267f133(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T267f132(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T267f131(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T267f130(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1000os17956;
extern T0* ge1000ov17956;
extern T0* T267f3(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T267f129(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T267f128(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T267f127(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T267f126(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T267f125(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T267f124(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T267f123(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T267f122(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T267f121(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T267f120(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1000os17955;
extern T0* ge1000ov17955;
extern T0* T267f2(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T44f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T281c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T281f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T267f119(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1000os17954;
extern T0* ge1000ov17954;
extern T0* T267f1(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T267f118(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T267f117(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T267f116(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T267f115(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T44f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T279c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_UNIVERSE_PARSER.is_false */
extern T1 T43f115(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T267f114(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.is_true */
extern T1 T43f114(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.option_codes */
extern T0* T43f33(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_equality_tester */
extern T0* T43f13(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_value */
extern T0* T43f32(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_option */
extern T0* T43f29(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T269f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T270f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T270f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T952f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T951f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T951f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T951f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T951f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T951f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T951c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T270f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T270f9(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T97f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T269c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T270c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T270f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T953c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T952f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1198c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T952c3(void);
/* ET_XACE_UNIVERSE_PARSER.new_mount */
extern T0* T43f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T268f9(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T97f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T268c8(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T44f27(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.parse_library */
extern void T109f222(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_library */
extern void T109f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY.set_libraries */
extern void T274f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY.set_clusters */
extern void T274f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.fill_externals */
extern void T109f225(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.new_export */
extern T0* T109f124(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_exported_feature */
extern T0* T109f217(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_alias */
extern T0* T109f219(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_feature */
extern T0* T109f216(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_class */
extern T0* T109f127(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_export */
extern T0* T109f123(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_include_dir */
extern T0* T109f122(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_location */
extern T0* T109f121(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_link_library */
extern T0* T109f120(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_external */
extern T0* T109f21(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_options */
extern T0* T109f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_options */
extern void T109f224(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_PARSER.uc_debug */
extern T0* T109f119(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_optimize */
extern T0* T109f118(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_check */
extern T0* T109f116(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_loop */
extern T0* T109f113(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_invariant */
extern T0* T109f111(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_ensure */
extern T0* T109f109(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_enable */
extern T0* T109f107(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_require */
extern T0* T109f106(T0* C);
/* ET_XACE_LIBRARY_PARSER.is_false */
extern T1 T109f105(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.is_true */
extern T1 T109f104(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.option_codes */
extern T0* T109f23(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_equality_tester */
extern T0* T109f4(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_value */
extern T0* T109f22(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_option */
extern T0* T109f19(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_mount */
extern T0* T109f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.execution_environment */
extern T0* T109f131(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_mount */
extern T0* T109f17(T0* C);
/* ET_XACE_LIBRARY.set_library_prefix */
extern void T274f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_prefix */
extern unsigned char ge1031os4144;
extern T0* ge1031ov4144;
extern T0* T109f16(T0* C);
/* ET_XACE_LIBRARY.set_options */
extern void T274f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.new_cluster */
extern T0* T109f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_libraries */
extern void T266f50(T0* C, T0* a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T267f18(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T950f2(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T267f17(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T950f1(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T950f3(T0* C);
/* ET_XACE_OPTIONS.recursive */
extern T1 T267f16(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T267f15(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T266f45(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T267f14(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T267f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_class */
extern T0* T109f128(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_feature */
extern T0* T109f218(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T266f43(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T266f42(T0* C, T1 a1);
/* ET_XACE_LIBRARY_PARSER.uc_relative */
extern unsigned char ge1031os4141;
extern T0* ge1031ov4141;
extern T0* T109f126(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T44f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T919c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.uc_abstract */
extern unsigned char ge1031os4140;
extern T0* ge1031ov4140;
extern T0* T109f125(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T97f4(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_cluster */
extern T0* T109f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_ */
extern T0* T109f12(T0* C);
/* ET_XACE_LIBRARY.set_name */
extern void T274f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_name */
extern T0* T109f11(T0* C);
/* ET_XACE_UNIVERSE_PARSER.execution_environment */
extern T0* T43f141(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T927f52(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f34(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].force_new */
extern void T107f52(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_put */
extern void T107f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_put */
extern void T107f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_put */
extern void T107f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_put */
extern void T107f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_item */
extern T6 T107f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].hash_position */
extern T6 T107f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_item */
extern T6 T107f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].resize */
extern void T107f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_resize */
extern void T107f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].special_integer_ */
extern T0* T107f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_resize */
extern void T107f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_resize */
extern void T107f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].resize */
extern T0* T340f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY].resized_area */
extern T0* T339f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY].copy_data */
extern void T339f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY].move_data */
extern void T339f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].overlapping_move */
extern void T339f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].non_overlapping_move */
extern void T339f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].make */
extern T0* T339c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_item */
extern T0* T107f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_resize */
extern void T107f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_modulus */
extern T6 T107f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_capacity */
extern T6 T107f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T97f5(T0* C);
/* ET_XACE_LIBRARY.make */
extern T0* T274c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].found_item */
extern T0* T107f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_item */
extern T0* T107f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].found */
extern T1 T107f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].search */
extern void T107f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].search_position */
extern void T107f53(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_prefix */
extern T0* T43f137(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_mount */
extern T0* T43f27(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T97f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T263c5(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T424f11(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_cluster */
extern T0* T43f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.new_class */
extern T0* T43f138(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.new_feature */
extern T0* T43f228(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_relative */
extern T0* T43f136(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_abstract */
extern T0* T43f135(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_cluster */
extern T0* T43f24(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_creation */
extern T0* T43f23(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_class */
extern T0* T43f22(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_root */
extern T0* T43f21(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_name */
extern T0* T43f20(T0* C);
/* ET_XACE_UNIVERSE.make_with_factory */
extern T0* T53c157(T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.make_basic_classes */
extern void T53f175(T0* C);
/* ET_XACE_UNIVERSE.class_name_tester */
extern T0* T53f56(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_ast_factory */
extern T0* T43f16(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_error_handler */
extern T0* T43f15(T0* C);
/* XM_ELEMENT.set_name */
extern void T99f30(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_system */
extern T0* T43f9(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T106f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T99f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T99f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T272f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1350f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1350f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T99f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1350f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T99f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T99f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T99f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T99f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T272f4(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T98f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T99f24(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T99f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T99f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T272f3(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T98f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T99f23(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T106f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T44f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1183c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T106f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T106f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T106f9(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T927f53(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T927f54(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f35(T0* C, T2 a1);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T106f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1031os4163;
extern T0* ge1031ov4163;
extern T0* T106f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1031os4162;
extern T0* ge1031ov4162;
extern T0* T106f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T106f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T271f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T105f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T105f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1031os4136;
extern T0* ge1031ov4136;
extern T0* T105f4(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_library */
extern T0* T43f6(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_ */
extern T0* T43f5(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T102f2(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T110f1(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T110f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T110f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T110f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T110f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T110f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T110f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T110f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T110f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T379f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T351f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T377f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T362f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T362f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T362f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T362f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T362f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T362c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T377f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T1020c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T377c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T351f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T110f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T351c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T110f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force */
extern void T346f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T346f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T346f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T346f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T346f17(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T346f16(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T346f13(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T346f50(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T346f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T346f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T346f57(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T346f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T1004f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T999f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T999f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T999f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T999f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T999f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T999c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T346f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T346f55(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T346f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T346f12(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T346f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T346f41(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T346f44(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T346f1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T382c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T382f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T348c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T382f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T382f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T382f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T382f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T382f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER_32].make */
extern T0* T995c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T382f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T382f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T382f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T382f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T382f32(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T382f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T382f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1269os18896;
extern T0* ge1269ov18896;
extern T0* T382f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T382f53(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1269os18895;
extern T0* ge1269ov18895;
extern T0* T382f48(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1269os18894;
extern T0* ge1269ov18894;
extern T0* T382f46(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1269os18893;
extern T0* ge1269ov18893;
extern T0* T382f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1269os18892;
extern T0* ge1269ov18892;
extern T0* T382f42(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1269os18889;
extern T0* ge1269ov18889;
extern T0* T382f40(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T382f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T382f223(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T382f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T382f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1269os18886;
extern T0* ge1269ov18886;
extern T0* T382f38(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T382f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T382f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T382f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T994c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T382f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T376f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T110f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T376c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T376f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T376f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T376f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T376f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T376f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T376f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T376f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T376f32(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T376f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T376f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T376f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T376f52(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T376f46(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T376f44(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T376f42(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T376f40(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T376f38(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T376f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T376f219(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T376f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T376f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T376f36(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T376f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T376f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T376f6(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T110f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T379f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T110f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T110f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T376c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T355f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T355f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T355f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T355f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].resize */
extern T0* T375f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].resized_area */
extern T0* T374f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].copy_data */
extern void T374f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].move_data */
extern void T374f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].overlapping_move */
extern void T374f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].non_overlapping_move */
extern void T374f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T374c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T375f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]].make_area */
extern T0* T1019c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T375c3(void);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T356f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1011f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1011f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1011c4(T0* a1);
/* DS_BILINKED_LIST [STRING_8].is_empty */
extern T1 T356f3(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T110f162(T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T356f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T110f180(T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T356c11(void);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T356f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1010c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T355f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T355f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1181os19367;
extern T0* ge1181ov19367;
extern T0* T355f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T355f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T355f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T355f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T355f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T355f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T355f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T355f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T110f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T355c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T373f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T371f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T371f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T371f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T371f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T371f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T371c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T373f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T1018c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T373c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T355f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T355f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T355f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T355f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T355f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T355f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T372f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T369f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T369f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T369f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T369f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T369f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T369c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T372f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T1017c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T372c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T354f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1009f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1009f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1009c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T354f3(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T110f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T354c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T354f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1008c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T110f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1008f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T354f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T354f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1008f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T354f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1008f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T110f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T379f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1008f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1008f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T354f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T354f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T353f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T353c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T353f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T353f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T353f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T353f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T353f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T353f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1007c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1007f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1238c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T353c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1007f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1239f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1239f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1239c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T1007f3(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T353c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1007f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T110f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T353c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T110f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T353f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T353f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T353c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T353f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T367f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T366f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T366f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T366f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T366f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T366f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T366c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T367f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T1016c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T367c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T353c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T353f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T110f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T379f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T110f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T352f1(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T352f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T352f11(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T352f12(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T349f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T349f13(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T356f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1005f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T352f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T352f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T352f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T352f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T365f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T364f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T364f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T364f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T364f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T364f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T364c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T365f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T1015c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T365c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T352f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T352f39(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T352f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T352f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T352f36(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T352f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T352f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T352f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T352f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T352f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T352f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T352f7(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T352f35(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T110f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T352c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1005c2(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T352f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T352f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1006c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T352f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T352f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T352f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T352f40(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T110f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T110f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T349f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1010f9(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T356f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T356f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1010f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T356f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1010f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1010f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1010f8(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T356f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T356f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T349f17(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T349f16(T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T356f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T349f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T349f15(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T110f242(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T349f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T349f14(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T349f8(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T110f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T348f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1267os10458;
extern T0* ge1267ov10458;
extern T0* T110f23(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T380c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T380f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T380f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T380f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T380f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T380f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T380f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T380f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T380f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T380f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T380f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T380f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T380f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T380f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T380f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T380f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T380f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T380f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T380f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T380f226(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T380f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T380f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T380f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T380f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T380f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T380f16(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T345f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T348f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T110f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T348f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T348f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T351f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T110f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T379f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T110f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T379f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T379c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T350f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T350f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T350f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T360f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T359f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T359f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T359f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T359f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T359f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T359c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T360f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T1013c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T360c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T350c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T350f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T110f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T110f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T110f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T110f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T379f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T110f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T110f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T379f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T110f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T110f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T110f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T110f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f60(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T348f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T928f29(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T151f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T110f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T928c28(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1194c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T348f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T376f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T382f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T382f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T346f2(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T346f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T110f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T110f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T110f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T110f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T110f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T110f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T110f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T110f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T927c55(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T927f71(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T926f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T926f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T926f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T926f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T110f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T110f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T110f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T110f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T110f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1267os10526;
extern T0* ge1267ov10526;
extern T0* T110f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1267os10527;
extern T0* ge1267ov10527;
extern T0* T110f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T110f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T927c56(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T358f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T357f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T357f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T357f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T357f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T357f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T357c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T358f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T1012c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T358c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T110f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T349f19(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T349f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T349f1(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T110f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T349f20(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T349c20(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T349c18(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T110f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T110f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T110f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T110f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T110f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T110f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T110f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T376f221(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T382f225(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T376f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T382f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T376f220(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1367c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T926f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T926f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T926f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T376f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T376f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T382f224(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T382f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T382f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T110f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T110f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T110f29(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T110f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T110f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T110f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T110f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T110f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T359f6(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T361f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].clear_all */
extern void T374f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T369f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T371f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T366f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T362f6(T0* C);
/* SPECIAL [STRING_8].clear_all */
extern void T85f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T364f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T357f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T110f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T110f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T332c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T110f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T110f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T346f38(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T346f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T346f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T346f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T346f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T346f43(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1002f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_position */
extern void T1002f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T110f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T341c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T341f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T341f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T341f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T341f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T341f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T341f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T341f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T341f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T341f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T341f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T341f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T341f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T341f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T341f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T341f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T341f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T341f224(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T341f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T341f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T341f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T341f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T341f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T341f15(T0* C);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables */
extern T0* T43c230(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables_and_factory */
extern void T43f232(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T104f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T100c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T924c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T110f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T102c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T102f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T331f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T104c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T102f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T103c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T102f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T329c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T110f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T110c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T110f20(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T346f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].internal_set_equality_tester */
extern void T1000f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T346c37(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T346f42(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T346f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1000c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T1000f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1236c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T346f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1002c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T346f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T346f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T346f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T346f61(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T346f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1004f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1237c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1004c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T346f7(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T110f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T110f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1263os10405;
extern T0* ge1263ov10405;
extern T0* T110f50(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T110f182(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1263os10404;
extern T0* ge1263ov10404;
extern T0* T110f48(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1263os10403;
extern T0* ge1263ov10403;
extern T0* T110f46(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1263os10402;
extern T0* ge1263ov10402;
extern T0* T110f44(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1263os10401;
extern T0* ge1263ov10401;
extern T0* T110f42(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1263os10400;
extern T0* ge1263ov10400;
extern T0* T110f40(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1263os10399;
extern T0* ge1263ov10399;
extern T0* T110f38(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1263os10398;
extern T0* ge1263ov10398;
extern T0* T110f36(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1263os10397;
extern T0* ge1263ov10397;
extern T0* T110f34(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1263os10396;
extern T0* ge1263ov10396;
extern T0* T110f32(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T110f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T108f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T108f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T108c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T105c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T106c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.set_parsed_libraries */
extern void T109f221(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.make_with_variables_and_factory */
extern T0* T109c220(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].set_key_equality_tester */
extern void T107f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].internal_set_equality_tester */
extern void T336f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_map */
extern T0* T107c36(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_with_equality_testers */
extern void T107f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T336c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].new_cursor */
extern T0* T336f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T992c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_cursor */
extern T0* T107f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T338c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_sparse_container */
extern void T107f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_slots */
extern void T107f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_clashes */
extern void T107f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_key_storage */
extern void T107f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_item_storage */
extern void T107f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].make */
extern T0* T340f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY].make_area */
extern T0* T993c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].default_create */
extern T0* T340c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T97c9(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T45f39(T0* C, T0* a1, T0* a2);
/* GEC.execution_environment */
extern T0* T21f18(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f17(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T44c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T44f4(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T927f5(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T927f4(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T927f29(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T927f14(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T927c61(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f18(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f5(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f1(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f2(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f18(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f20(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f14(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T259f1(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T259f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f39(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c39(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f8(T0* C);
/* GEC.parse_arguments */
extern void T21f33(T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T32c18(T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T36f2(T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T92f1(T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T80f3(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T41f1(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T82f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T82f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T321f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T82f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T321f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T82f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T41f3(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T96f1(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T96f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T96f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T96f2(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T96f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge59os4079;
extern T0* ge59ov4079;
extern T0* T41f8(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T96f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T96c9(void);
/* STRING_8.make_filled */
extern T0* T17c43(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f10(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T70f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge308os8795;
extern T0* ge308ov8795;
extern T0* T70f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T70f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T69f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge310os8795;
extern T0* ge310ov8795;
extern T0* T69f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T69f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern unsigned char ge319os1581;
extern T0* ge319ov1581;
extern T0* T41f5(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T41f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T41f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T41f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T41f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T84f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T84f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T82f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T82f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T82f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T82f1(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T82f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T82f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T82f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T82f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T321f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T82f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T82f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T41f2(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T81f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T81f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T317f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T81f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T317f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T81f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T81f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T81f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T81f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T81f1(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T81f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T81f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T81f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T81f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T317f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T81f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T81f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f39(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T68c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f28(T0* C);
/* AP_PARSER.parse_list */
extern void T30f30(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f34(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge321os1579;
extern T0* ge321ov1579;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10p1(T0* C, T0* a1);
/* AP_PARSER.check_mandatory_options */
extern void T30f33(T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T83f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T83f6(T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T32c19(T0* a1);
/* AP_PARSER.parse_argument */
extern void T30f32(T0* C);
/* AP_PARSER.parse_short */
extern void T30f36(T0* C);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T32c21(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T80f5(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T32c20(T0* a1);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_PARSER.parse_long */
extern void T30f35(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T32c22(T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T30f23(T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T80f26(T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T80f4(T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T80f1(T0* C);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T80f25(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f31(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T81f3(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T81c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T81f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T317c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T320f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T987c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T319c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T320c3(void);
/* AP_ERROR_HANDLER.reset */
extern void T83f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T80f24(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T80f30(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T80f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T80f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T80f35(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f10(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T82f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T82f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T323f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T322f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T322f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T322f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T322f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T322f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T322c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T82f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T82f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f4(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T84c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T33c18(T2 a1, T0* a2);
/* AP_FLAG.initialize */
extern void T33f20(T0* C);
/* AP_FLAG.set_long_form */
extern void T33f19(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T33f21(T0* C, T2 a1);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T37f25(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T37f24(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T37f28(T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T94f21(T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T94f3(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T94f8(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T94f2(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T94f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T94f1(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T94f6(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T94f20(T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T37f23(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T37c22(T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T37f27(T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T94f19(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T37f9(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T37f27p1(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T37f27p0(T0* C);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T37f26(T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T36f22(T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T36f21(T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T36c20(T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T36f24(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T36f24p1(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T36f24p0(T0* C);
/* AP_INTEGER_OPTION.set_long_form */
extern void T36f23(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T35f25(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T35f24(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T35c23(T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T35f27(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T35f27p1(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T35f27p0(T0* C);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T35f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T81f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T81f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T320f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T319f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T319f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T319f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T319f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T319f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T81f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T81f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T33f17(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T33c16(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f27(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c25(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T41f35(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T41c34(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T41f38(T0* C);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T41f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T41f36(T0* C, T2 a1);
/* AP_PARSER.make_empty */
extern void T30f29(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T83c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T83f3(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T82c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T82f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T321c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T323f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T988c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T323c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f1(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f6(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T921f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T154f7(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T154f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T316f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1270f3(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T235f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type */
extern void T234f43(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type */
extern void T233f43(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type */
extern void T229f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type */
extern void T227f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T227f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T540f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T540f14(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T214f52(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T214f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T162f50(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T162f52(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T214f51(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T214f56(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T162f49(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T162f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T162f67(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type */
extern void T217f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T217f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T217f12p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type */
extern void T209f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_type */
extern void T156f39(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.reset */
extern void T832f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T832f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T973f96(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T788f33(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T787f33(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T480f74(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T467f54(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T461f52(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T757f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T770f11(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T770f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T770f11p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T195f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T770f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T768f11(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T730f13(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T727f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T727f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T730f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T726f13(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T724f12(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T722f6(T0* C);
/* ET_COMPOUND.reset */
extern void T642f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T721f12(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T721f8(T0* C);
/* ET_VARIANT.reset */
extern void T691f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T688f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T718f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T739f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T743f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T745f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T718f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T716f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T732f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T735f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T735f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T716f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T715f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T714f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T708f14(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T477f16(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T196f10(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T196f10p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T770f12(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T768f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T730f14(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T726f14(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T724f13(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T722f7(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T721f13(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T718f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T716f12(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T715f7(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T714f7(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T708f15(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T477f17(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T196f14(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T668f46(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T664f82(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T662f64(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T661f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T660f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T659f65(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T668f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T664f83(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T662f65(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T661f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T660f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T659f66(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T668f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T664f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T501f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T500f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T499f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T501f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T500f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T499f45(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T501f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T500f50(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T499f50(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T501f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T500f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T499f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T382f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T382f233(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T125f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T382f233p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T382f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T380f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T380f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T380f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T380f19(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T376f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T376f229(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T376f229p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T376f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T341f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T341f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T341f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T341f18(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T382f227(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T382f227p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T382f227p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T382f237(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T994f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T994f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T994f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T994f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T994f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T994f1(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1182f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T994f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T994f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T382f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T382f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T382f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T382f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T382f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T382f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1271os18955;
extern T0* ge1271ov18955;
extern T0* T382f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T382f241(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T382f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T382f240(T0* C);
/* DS_LINKED_STACK [INTEGER_32].remove */
extern void T995f7(T0* C);
/* DS_LINKED_STACK [INTEGER_32].item */
extern T6 T995f2(T0* C);
/* DS_LINKED_STACK [INTEGER_32].is_empty */
extern T1 T995f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T382f238(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER_32].force */
extern void T995f6(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T382f239(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T382f236(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T382f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T382f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T382f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T382f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T382f234(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T380f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T380f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T380f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T380f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T380f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T380f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T380f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T380f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T380f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T380f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T380f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T380f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T380f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T380f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T380f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T380f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T380f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T380f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T380f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T380f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T380f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T376f223(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T376f223p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T376f232(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T376f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T376f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T376f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T376f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T376f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T376f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T376f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T376f237(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T376f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T376f236(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T376f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T376f235(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T376f231(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T376f234(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T376f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T376f230(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T376f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T376f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T341f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T341f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T341f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T341f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T341f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T341f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T341f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T341f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T341f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T341f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T341f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T341f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T341f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T341f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T341f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T341f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T341f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T341f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T341f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T341f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T341f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T382f229(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T380f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T376f225(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T341f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T382f230(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T928f30(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T928f7(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T380f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T376f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T341f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T382f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T380f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T376f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T341f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T382f228(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1367f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1367f5(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f32(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T380f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T376f224(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T341f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T666f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1257f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1351f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1351f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1256f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1351f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1255f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1351f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T271f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1351f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T99f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1351f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1257f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1256f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1255f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T271f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T99f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T830f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T492f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T830f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T973f95(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T492f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T973f91(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1147f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T815f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1147f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T973f90(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T815f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T973f94(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1380f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1370f18(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1274f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1147f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T830f11(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T822f39(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T821f40(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T820f40(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T819f40(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T818f41(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T816f41(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T815f10(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T806f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T799f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T797f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T796f23(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T792f31(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T791f19(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T790f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T789f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T785f20(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T783f19(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T782f19(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T781f19(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T780f19(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T775f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T774f23(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T759f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T711f19(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T540f26(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T537f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T508f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T507f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T506f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T505f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T503f40(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T502f40(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T501f50(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T500f51(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T499f51(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T495f40(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T492f15(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T483f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T447f33(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T216f30(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T198f29(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T194f33(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T131f97(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T498f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T497f41(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T496f36(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T822f38(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T821f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T820f39(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T819f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T818f40(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T816f40(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T792f30(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T788f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T787f34(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T489f85(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T480f76(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T467f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T461f53(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1370f19(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1275f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1274f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T822f37(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T644f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T638f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T219f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T944f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T224f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T811f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T821f38(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T640f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T945f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T679f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T821f38p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T820f38(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T820f38p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T819f38(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T818f39(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T818f39p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T816f39(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T816f39p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T806f18(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T799f26(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T797f25(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T796f22(T0* C);
/* ET_CALL_AGENT.reset */
extern void T792f28(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T791f18(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T790f18(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T789f17(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T785f17(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T783f18(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T782f18(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T781f18(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T780f18(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T775f19(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T774f22(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T759f27(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T759f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T759f27p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T759f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T711f18(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T801f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T489f84(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T540f25(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T537f21(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T537f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T508f38(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T507f38(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T506f35(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T505f35(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T503f38(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T502f38(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T501f48(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T500f49(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T499f49(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T498f36(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T497f40(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T496f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T495f39(T0* C);
/* ET_VOID.reset */
extern void T483f29(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T447f32(T0* C);
/* ET_RESULT.reset */
extern void T216f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T198f25(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T198f25p1(T0* C);
/* ET_CURRENT.reset */
extern void T194f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1370f17(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1275f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1274f15(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T822f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T821f37(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T820f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T819f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T818f38(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T816f38(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T806f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T799f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T797f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T796f21(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T792f27(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T791f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T790f17(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T789f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T785f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T783f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T782f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T781f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T780f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T775f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T774f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T759f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T711f17(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T540f24(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T537f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T508f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T507f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T506f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T505f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T503f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T502f37(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T501f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T500f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T499f47(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T498f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T497f39(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T496f34(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T495f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T483f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T447f31(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T216f25(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T198f24(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T194f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T131f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T655f79(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T654f78(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T649f76(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T648f80(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T646f80(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T315f74(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T310f78(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T239f68(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T238f70(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T236f70(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T175f81(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T655f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T654f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T649f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T648f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T646f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T315f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T310f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T239f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T238f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T236f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T175f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T655f102(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T654f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T649f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T648f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T646f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T315f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T310f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T239f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T238f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T236f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T175f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T655f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T654f98(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T649f97(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T648f100(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T646f100(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T315f95(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T310f98(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T239f88(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T238f92(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T236f91(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T175f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T655f100(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T654f99(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T649f98(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T648f101(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T646f101(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T315f96(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T310f99(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T239f89(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T238f93(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T236f92(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T175f102(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T655f97(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T654f96(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T649f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T648f98(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T646f98(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T315f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T310f96(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T239f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T238f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T236f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T175f99(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T655f98(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T654f97(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T649f96(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T648f99(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T646f99(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T315f94(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T310f97(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T239f87(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T238f91(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T236f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T175f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T655f94(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T654f93(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T649f92(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T648f95(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T646f95(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T315f90(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T310f93(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T239f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T238f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T236f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T175f92(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T655f103(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T219f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T219f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T219f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T224f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T944f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T224f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T654f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T649f101(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T648f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T646f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T315f99(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T310f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T239f92(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T238f96(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T236f95(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T175f105(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T655f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T654f76(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T649f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T648f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T646f78(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T315f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T310f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T239f67(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T238f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T236f69(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T175f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T655f93(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T654f92(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T649f91(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T648f94(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T646f94(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T315f89(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T310f92(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T239f78(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T238f82(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T236f81(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T175f91(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T655f96(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T654f95(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T649f94(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T648f97(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T646f97(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T315f92(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T310f95(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T239f85(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T238f89(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T236f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T175f98(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T655f87(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T654f86(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T649f84(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T648f88(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T646f88(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T315f82(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T310f86(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T239f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T238f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T236f86(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T175f96(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T655f88(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T654f87(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T649f85(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T648f89(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T646f89(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T315f83(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T310f87(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T239f84(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T238f88(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T236f87(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T175f97(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T655f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T654f81(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T649f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T648f83(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T646f83(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T315f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T310f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T239f71(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T238f73(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T236f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T175f84(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T655f83(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T654f82(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T649f80(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T648f84(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T646f84(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T315f78(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T310f82(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T239f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T238f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T236f74(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T175f85(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T655f84(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T654f83(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T649f81(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T648f85(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T646f85(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T315f79(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T310f83(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T239f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T238f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T236f75(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T175f86(T0* C);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T975f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T975f132(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T975f193(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T257f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T257f16(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T702f28(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T975f191(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T257f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T57f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T907c787(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T57f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T57f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T907c776(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T57f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T907c786(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T57f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T801f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T195f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T801f8(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T195f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T975f220(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T975f219(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1274c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T975f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1370c16(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T181f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T545f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T545f20(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T56f152(T0* C);
/* ET_XACE_UNIVERSE.is_dotnet */
extern T1 T53f156(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T60f150(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T943f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T516f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T516f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T60f149(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T257f19(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T257f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T57f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T907c785(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T57f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T57f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T907c775(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T57f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T907c784(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T975f190(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T57f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T907c783(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T57f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_CLIENTS.has_any */
extern T1 T431f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T430f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T430f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T57f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T907c782(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T56f151(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.has_class */
extern T1 T53f155(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T431f9(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T431f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T430f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T430f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T57f330(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T907c752(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T57f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f330(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T57f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T907c749(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T57f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T57f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T907c748(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T975f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T56f188(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T976f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_expression_supplier */
extern void T53f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T57f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T907c745(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T57f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T57f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T907c744(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T975f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T57f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T907c753(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T57f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T975f21(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T975f30(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T975f39(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T131f80(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T975f64(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T975f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T975f192(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T57f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T907c751(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T57f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T57f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T907c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T57f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T907c747(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T57f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T57f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T907c746(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T57f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T907c743(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T57f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T131f22(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T975f130(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T975f189(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T975f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T181f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T181f9(T0* C);
/* ET_CLASS.ancestor */
extern T0* T60f121(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T309f5(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T181f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T57f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T907c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T57f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T57f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T907c741(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T975f129(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T975f188(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T973f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T64f361(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T64f377(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T64f396(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T64f360(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T64f415(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T64f197(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T64f414(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T64f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T64f401(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T64f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T64f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T217c9(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T64f392(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T64f395(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T64f188(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T64f193(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T64f342(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T64f376(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T64f394(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T64f375(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T64f391(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T64f189(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T64f374(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T64f390(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T61f540(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T61f546(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T214f16(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T162f19(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T187f20(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T187f12(T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T61f545(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T61f544(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T131f21(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T61f543(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T131f20(T0* C);
/* ET_FEATURE_CHECKER.process_current */
extern void T975f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T975f133(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T975f194(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T973f38(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T64f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T64f467(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T64f511(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T61f541(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T61f547(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T975f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T975f134(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T975f195(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T57f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T907c758(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T57f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T907c757(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T57f334(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T907c756(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f334(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T57f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T907c755(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T57f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T907c754(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T973f39(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T64f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T64f468(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T64f512(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T61f542(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T61f548(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T980f27(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T979f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T974f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T972f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T971f8(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T970f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T969f8(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T968f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T291f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T291f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T60f219(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T291f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T57f285(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T907c707(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1327f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1224f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1327f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1224f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1327f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1224f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1327f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1224f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1327f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1224f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1327f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1224f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1224f1(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1327f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1224f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1224f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T57f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f285(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1224f5(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T291f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T305f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T305f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T977f15(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T884f19(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].clear_items */
extern void T884f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1225f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1225f47(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1225f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1225f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1225f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1225f42(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1330f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_position */
extern void T1330f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1224f22(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1224f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1224f25(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T977f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T977f6(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T291f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T979f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T291f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T980f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T980f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T57f413(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T907c835(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1399f3(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1289f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1399f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1289f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1399f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1289f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1399f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1289f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T553f21(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T545f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1399f2(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1289f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1399f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1289f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1289f3(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1399f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1289f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1289f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1289f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T57f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f413(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f148(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1230f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1332f36(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1332f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1332f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1332f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1332f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1332f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1419f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_position */
extern void T1419f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1289f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1289f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1289f19(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1230f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T553f75(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T545f71(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1289f2(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T57f412(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T907c834(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f412(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1230f2(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1230f12(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1289f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1230f1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T980f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T57f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T907c833(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T57f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T57f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T907c832(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T57f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T980f6(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T980f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T291f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T60f220(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].wipe_out */
extern void T978f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_wipe_out */
extern void T978f55(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_wipe_out */
extern void T978f54(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T978f53(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T978f52(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].move_all_cursors_after */
extern void T978f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_next_cursor */
extern void T1229f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_position */
extern void T1229f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].forth */
extern void T1229f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_forth */
extern void T978f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].add_traversing_cursor */
extern void T978f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T978f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_item */
extern T6 T978f27(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T309f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].item */
extern T0* T1229f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_item */
extern T0* T978f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_item */
extern T0* T978f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].after */
extern T1 T1229f1(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_after */
extern T1 T978f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].start */
extern void T1229f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_start */
extern void T978f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_off */
extern T1 T978f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].is_empty */
extern T1 T978f38(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T291f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T309f4(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T257f37(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].force_new */
extern void T978f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_put */
extern void T978f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_put */
extern void T978f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_put */
extern void T978f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_put */
extern void T978f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_item */
extern T6 T978f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].hash_position */
extern T6 T978f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].resize */
extern void T978f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_resize */
extern void T978f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_resize */
extern void T978f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_resize */
extern void T978f63(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T986f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T985f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T985f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T985f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T985f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T985f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_item */
extern T6 T978f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_resize */
extern void T978f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_capacity */
extern T6 T978f25(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T57f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T907f665(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T907c713(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T57f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f81(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found_item */
extern T0* T978f23(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found */
extern T1 T978f22(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search */
extern void T978f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search_position */
extern void T978f56(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T57f290(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T907c712(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T57f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f290(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f80(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T57f289(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T907c711(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T57f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f289(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T57f288(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T907c710(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T57f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f288(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T57f287(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T907c709(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T57f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f287(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T57f286(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T907c708(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f286(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T60f70(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1224f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T977f14(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1224f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T291f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T291f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T977f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T977f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T977f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T977f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1225f33(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1225f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1225f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1225f61(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1225f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1225f9(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1225f12(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1225f11(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1225f13(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T977f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T977f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put */
extern void T1225f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1225f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1225f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1225f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1225f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1225f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1225f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1225f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1225f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1225f48(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1224f23(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T977f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T977f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1225f1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T291f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T60f218(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T291f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T289f18(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T60f215(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T289f23(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T60f217(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T289f22(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T60f216(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T289f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T422f70(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1034f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T422f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1034f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1034f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1034f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T422f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T422f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T422f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T422f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T422f73(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T289f25(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T975f36(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T520f29(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T520f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T57f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T907c740(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T57f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T520f11(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T520f12(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T56f187(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_supplier_handler */
extern void T53f195(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T289f24(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T289f26(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T1260f1(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T975f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T644f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T644f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T975f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T638f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T638f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T975f35(T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T289f20(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T289c19(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T289f11(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T60f214(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T60f213(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T289f10(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T288f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T288f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T60f197(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T288f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T288f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T974f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T974f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1224f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1224f24(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1224f2(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T288f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T288f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T57f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T907c633(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T57f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T57f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T907c632(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T57f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T907c631(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T57f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T554f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T554f8(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T545f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T288f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T60f196(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T288f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T287f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T287f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T60f211(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T287f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T287f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T958f59(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T958f71(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T958f70(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T958f69(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T958f68(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T958f67(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1203f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1203f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T287f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T958f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T958f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T958f27(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T958f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T958f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T958f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T958f39(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T959f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T958f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T958f35(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T287f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T57f256(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T907c678(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T57f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f256(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T57f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T907c677(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T57f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T907c676(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T57f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T57f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T907c675(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T57f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T907c674(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T608f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T608f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T514f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T57f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T907c673(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T608f13(T0* C);
/* ET_CREATOR.first */
extern T0* T608f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T431f14(T0* C);
/* ET_CLIENTS.first */
extern T0* T431f17(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T431f16(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T608f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T57f59(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f251(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T514f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T514f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T287f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T57f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T907c672(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T57f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T57f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T907c671(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T57f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T57f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T907c670(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T57f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T57f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T907c669(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T57f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T57f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T907c668(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T57f242(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T907c663(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T57f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f242(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T57f241(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T907c662(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T57f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f241(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T57f240(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T907c661(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1264f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1261f16(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1261f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f240(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T958f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T958f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T958f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T958f42(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T60f212(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T961f46(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T961f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T961f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T961f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T961f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T961f53(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1209f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1209f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T958f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T958f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T958f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T287f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T970f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1288f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1287f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1287f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1288f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1287f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1288f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T970f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T57f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T907c736(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T57f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T57f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T907c735(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T970f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T970f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1288f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1288f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1287f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1287f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1287f1(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1288c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1261f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T970f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T57f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T907c734(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T57f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T57f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T907c733(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T57f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T907c732(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T970f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T57f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T907c731(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T57f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T57f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T907c730(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T57f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T907c729(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T970f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T961f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T961f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T961f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T961f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T961f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T961f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T961f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T961f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T961f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T961f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1204f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1206f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1206f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1206f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1206f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1206f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T961f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T961f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T961f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T961f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T961f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T961f47(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T962f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T57f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T907c660(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T57f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T57f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T907c659(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T57f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T907c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T57f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T57f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T907c657(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1261f14(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T57f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T907c656(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T57f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T907c655(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T57f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T907c654(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T57f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T907c653(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T57f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T907c652(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f231(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T961f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T961f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T961f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T961f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T958f24(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T958f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T958f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T958f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T958f41(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T287f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T969f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1222f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1326f36(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1326f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1326f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1326f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1326f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1326f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1413f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_position */
extern void T1413f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1286f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1286f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1286f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1398f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1398f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1222f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T57f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T907c728(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1398f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1286f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1286f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1286f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1398f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1286f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1398f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1286f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1286f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1286f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1398f3(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1286f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1286f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1398f2(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1398f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1286f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1286f2(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T57f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f306(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T969f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T969f9(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1222f1(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1222f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1286f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T57f230(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T907c651(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T57f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f230(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T57f229(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T907c650(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f229(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T57f228(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T907c649(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f228(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T57f227(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T907c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f227(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T57f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T907c647(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f226(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T57f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T907c646(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T57f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T907c645(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T57f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f224(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T57f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T907c644(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T57f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f223(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T287f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T57f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T907c667(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T57f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T958f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T958f25(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T57f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T907c666(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T57f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T968f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1263f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1263f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T251f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T251f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1363f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge873os18341;
extern T0* ge873ov18341;
extern T0* T287f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1263c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1363c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1262f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1262f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T253f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T253f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1360f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge873os18340;
extern T0* ge873ov18340;
extern T0* T287f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1262c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1360c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T958f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T958f63(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T287f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T287f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T57f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T907c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T57f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T57f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T907c684(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T57f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T57f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T907c683(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T57f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T907c682(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1264f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1264f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T287f44(T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1264f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1223f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1264f33(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1223f31(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1259f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1259f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1259f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1259f2(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1259f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1259f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T938f1(T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T308f9(T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T308f17(T0* C, T0* a1);
/* ARRAY [INTEGER_32].set_area */
extern void T308f19(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1259f5(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1264f21(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1223f20(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1259c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1259f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T938f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T308f16(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1259f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1259f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1261f20(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T1260f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1260c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge686os6343;
extern T0* ge686ov6343;
extern T0* T1260f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T431f15(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T430f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1261f19(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1261f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T57f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T907c681(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T57f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1261f18(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T287f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T57f274(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T907c696(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T57f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f274(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1261f11(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T287f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T57f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T907c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T57f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T57f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T907c705(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T287f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T57f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T907c704(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T57f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T57f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T907c703(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T57f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T907c702(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T57f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T287f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T57f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T907c701(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T57f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T57f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T907c700(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T57f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T907c699(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T57f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T907c698(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T57f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T907c697(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T57f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1264f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T287f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T964f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T964f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T964f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1212f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1212f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T965f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T965f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T965f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T965f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T965f64(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T965f63(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1213f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1213f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T965f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T965f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T965f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T965f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T965f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T965f21(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T965f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T965f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T965f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T965f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T965f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T965f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T965f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T965f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T965f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T965f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T965f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T965f26(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T965f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T965f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T965f47(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T965f58(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T964f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T965f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T965f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T965f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T965f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T965f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T965f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T965f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T965f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T965f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T965f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T965f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T965f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T965f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T965f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T965f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T964f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T964f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T964f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T964f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T964f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T431f13(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T131f91(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T131f93(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T430f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T964f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T964f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T964f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T964f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T1210f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1211f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1211f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1211f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1211f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1211f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T964f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T964f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T597f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T595f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T597f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T595f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T597f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T303f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T287f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T287f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T973f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T57f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T907c680(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T644f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T644f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T644f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T57f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T644f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T57f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T907c679(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T638f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T638f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T638f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T638f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T287f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T57f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T907c695(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T57f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T907c694(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T57f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T57f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T907c693(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T57f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T907c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T57f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T907c691(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T57f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T907c690(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T57f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T907c689(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T57f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T57f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T907c688(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T57f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T57f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T907c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T57f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T907c686(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1223f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T57f243(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T907c664(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T57f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f243(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1264f19(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1261f17(T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1223f18(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1264f18(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1223f17(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T287f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T958f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T958f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T958f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T958f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T958f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T958f62(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T287f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T966f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T966f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1217f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1217f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1217f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1217f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1217f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1217f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1310f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1310f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1217f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1217f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1217f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1217f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1217f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T966f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T57f305(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T907c727(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1393f2(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1283f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1393f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1283f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1393f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1283f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1393f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1283f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1393f1(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1283f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1283f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1393f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1283f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1283f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1393f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1283f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1283f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1283f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1393c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1283f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T57f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f305(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1264f39(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1287f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1444f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1444c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1287f3(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1287c8(void);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1223f35(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1261f21(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1264f38(T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1223f34(T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1264f37(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1223f33(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T57f304(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T907c726(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f304(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T966f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T966f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1282f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1282f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1282f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1389f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1282f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1389f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1283f16(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1264f28(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1223f26(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1282f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1282f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1282f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1282f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1282f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1282f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1282f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1283c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1391f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1431c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1392c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1391c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1217f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1217f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1217f14(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1217f2(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1217f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1217f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1217f1(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1217f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1217f45(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1217f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1217f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1217f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T966f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1217f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1217f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1217f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1217f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1217f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1217f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1217f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1217f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1217f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1217f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1217f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1315f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1311f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1311f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1311f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1311f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1311f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1217f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1217f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1217f49(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1281c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1282c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1282f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1389c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1281f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1282f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1390f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1390c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1282f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1217f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1217f4(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1217f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1217f60(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T966f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T57f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T907c719(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T57f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T57f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T907c718(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T57f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f85(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1216f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1216f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1216f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1216f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1216f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1216f58(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1307f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1307f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1216f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1216f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1216f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1216f72(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1216f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T57f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T907c717(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T57f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f84(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1216f7(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1216f16(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1216f11(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1216f6(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1216f15(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1216f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1216f5(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1216f14(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1216f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1216f56(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1216f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1216f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1215f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1215f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1215f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1215f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1215f57(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1215f56(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1306f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1306f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1215f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1215f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1215f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1215f71(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1215f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T57f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T907c716(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T57f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f83(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1215f4(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1215f12(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1215f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1215f3(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1215f11(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1215f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1215f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1215f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1214f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1214f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1214f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1214f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1214f57(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1214f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1300f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1300f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1214f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1214f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1214f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1214f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1214f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T57f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T907c715(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T57f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f82(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1214f5(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1214f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1214f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1214f4(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1214f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1214f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1214f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1214f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T958f75(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T958f86(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T958f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T958f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T958f85(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T958f87(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T958f84(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T966f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1264f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1264c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1264f30(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1264f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1264f23(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1261f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1223f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1223f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T958f76(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T966f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1223f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1223f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1261f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1261f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1216f47(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1216f55(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1216f4(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1261f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1216f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1216f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1216f46(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1216f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1216f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1216f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1215f41(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1215f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1215f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1215f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1215f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1215f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1215f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1215f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1215f73(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1215f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1215f68(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1215f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1215f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1215f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1215f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1215f2(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1215f40(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1261f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1214f44(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1214f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1214f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1214f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1214f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1214f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1214f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1214f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1214f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1214f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1214f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1214f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1214f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1214f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1214f3(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1214f2(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1214f43(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T966f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1261f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1261f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T958f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T958f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T958f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T958f81(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T958f78(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T966f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T57f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T907c725(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T57f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f92(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1216f52(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1216f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1216f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1216f66(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T304f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T304f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1216f51(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1216f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1216f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1216f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1216f64(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T966f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T57f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T907c724(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T57f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T966f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T57f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T907c723(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T57f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f90(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1215f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T966f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T57f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T907c722(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T57f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f89(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1215f6(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1215f46(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T597f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T597f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1215f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1215f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1215f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1215f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1215f61(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T57f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T907c721(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T57f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f88(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1214f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T966f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T57f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T907c720(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T57f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f87(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1214f49(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T302f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T302f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1214f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1214f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1214f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1214f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1305f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1301f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1301f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1301f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1301f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1301f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1214f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T966f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T57f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T907c714(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T967f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1221f37(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1221f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1221f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1221f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1221f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1221f41(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1323f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1323f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1219f34(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1219f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1219f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1219f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1219f44(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1219f43(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1317f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1317f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T967f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T967f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T967f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T967f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T967f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T967f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1285f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1285f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1285f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1394f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1285f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1394f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1285f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1285f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1285f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1285f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1285f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1285f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1285f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1221f2(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1221f5(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1221f1(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1221f38(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1221f47(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1221f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1221f15(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1218f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1221f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1221f17(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T967f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T967f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1219f3(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1219f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1219f2(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1219f36(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1219f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1219f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1219f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1219f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1219f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1219f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T967f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T967f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1219f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1219f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1219f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1219f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1219f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1221f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1221f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1221f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1221f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1221f49(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1221f57(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1221f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1318f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1316f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1316f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1316f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1316f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1316f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1221f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1324f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1319f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1319f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1319f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1319f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1319f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1221f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1221f14(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1221f48(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1285c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1285f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1394c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1285f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1395f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1395c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1285f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T958f77(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T958f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1219f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1219f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1219f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1219f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1219f48(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T287f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T971f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T287f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T972f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T972f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T287f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T60f210(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T287f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T286f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T181f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T170f1783(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T920f5(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.preparse */
extern void T56f185(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T56f186(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T296f161(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T296f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T296f163(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_XACE_UNIVERSE.preparse */
extern void T53f193(T0* C);
/* ET_XACE_UNIVERSE.preparse_multiple */
extern void T53f194(T0* C);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T975f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T975f58(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T56f189(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T976f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_result_supplier */
extern void T53f197(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T975f66(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T975f63(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T181f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T57f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T907c739(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T57f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge248os1601;
extern T0* ge248ov1601;
extern T0* T181f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T57f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T907c738(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T554f10(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T554f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T413f11(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T181f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T975f65(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T56f190(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T976f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_argument_supplier */
extern void T53f198(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T975f70(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T973f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T64f217(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f228(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T64f338(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T58f57(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T64f337(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_builtin_code */
extern void T214f66(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_builtin_code */
extern void T162f63(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T64f336(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T64f335(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T64f334(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T64f333(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T64f332(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T64f331(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T64f330(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T64f329(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T64f328(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T64f327(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T64f326(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T64f325(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T64f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T64f323(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T64f322(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T64f321(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T64f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T64f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T64f318(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T64f317(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T64f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T64f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T64f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T64f313(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T64f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T64f311(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T64f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T64f309(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T64f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T64f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T64f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T64f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T64f304(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T64f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T64f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T64f301(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T64f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T64f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T64f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T64f297(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T64f296(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T64f295(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T64f294(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T64f293(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T64f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T64f291(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T64f290(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T64f289(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T64f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T64f287(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T64f286(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T64f285(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T64f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T64f283(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_type_id */
extern void T64f282(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_name */
extern void T64f281(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generating_type */
extern void T64f280(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T64f279(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T64f278(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T64f277(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T64f276(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T64f275(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T64f274(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T64f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T64f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T64f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T64f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T64f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T64f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T64f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T64f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T64f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T64f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T64f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T64f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T64f261(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T64f260(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T64f259(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T64f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T64f257(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T64f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T64f255(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T64f254(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T64f253(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T64f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T64f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T64f250(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type2 */
extern void T64f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T64f248(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T64f247(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T64f246(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T64f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T64f244(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T64f243(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T64f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T64f241(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T64f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T64f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_argument_dynamic_types */
extern void T64f356(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f228p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T64f341(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T64f340(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T64f339(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T64f357(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T61f549(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T61f601(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T61f658(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T61f679(T0* C);
/* ET_C_GENERATOR.print */
extern void T61f663(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1347f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1440f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1440f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1347f1(T0* C);
/* STD_FILES.output */
extern unsigned char ge2054os25104;
extern T0* ge2054ov25104;
extern T0* T1347f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1440c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1440f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1440f2(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1440f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f33(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T61f281(T0* C);
/* STD_FILES.set_output_default */
extern void T1347f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1347c4(void);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T61f678(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T94f16(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T46c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T61f677(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T61f676(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T61f675(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T61f698(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T61f697(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T61f696(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T61f695(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T61f694(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_body */
extern void T61f693(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T61f692(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T61f691(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T61f690(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type2_body */
extern void T61f689(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T61f688(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T185f8(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T185f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T61f687(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T61f686(T0* C);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T61f685(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T61f674(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T930f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T61f286(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T61f673(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T61f684(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T207f297(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T207f296(T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T61f672(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T207f295(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T61f666(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T61f671(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T975f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T975f135(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T975f196(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T257f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T257f17(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T257f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T975f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T57f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T907c804(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T28f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T57f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T907c803(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T57f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T907c762(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T57f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T975f252(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T57f339(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T907c761(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f339(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T57f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T907c760(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T57f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T907c759(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_IDENTIFIER.set_tuple_label */
extern void T131f109(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T975f216(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T251f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T253f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T252f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T252f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern T0* T890f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].resized_area */
extern T0* T891f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].copy_data */
extern void T891f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].move_data */
extern void T891f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].overlapping_move */
extern void T891f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].non_overlapping_move */
extern void T891f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T252f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T252f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T254f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T254f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern T0* T894f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].resized_area */
extern T0* T895f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].copy_data */
extern void T895f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].move_data */
extern void T895f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].overlapping_move */
extern void T895f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].non_overlapping_move */
extern void T895f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T254f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T254f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T255f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T251f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T251f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T251f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T251f42(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T251f45(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T255f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T255f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T255f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T897f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T255f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T255f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T897f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T255f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T255f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T255f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T255f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T255f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T255f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T255f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T255f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T252f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T252f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T892f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_position */
extern void T892f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T252f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T252f6(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T251f17(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T254f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T254f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T896f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_position */
extern void T896f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T254f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T254f6(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T253f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T253f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T253f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T253f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T253f42(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T253f45(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T253f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T60f221(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T158f12(T0* C, T0* a1, T0* a2);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T198f9(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T973f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T973f83(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T64f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T64f469(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T64f513(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T64f412(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T64f554(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T180f7(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T64f397(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T61f550(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T61f602(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T61f660(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T61f659(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T61f681(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T61f680(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T975f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T975f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T57f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T907c639(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T57f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T57f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T907c638(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T57f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T57f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T907c637(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T57f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T503f39(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T502f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T57f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T907c636(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T57f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T57f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T907c635(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T57f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T57f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T907c634(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T57f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T973f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T64f218(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T64f229(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T61f551(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T61f603(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T61f661(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_name */
extern void T198f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T975f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T975f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T57f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T907c640(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T57f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T973f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T64f219(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T64f230(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T61f552(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T61f604(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T975f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T975f52(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T973f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T64f220(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T64f231(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T61f553(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T61f605(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T975f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T975f59(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T975f69(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T975f68(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T642f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T975f67(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T56f191(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T976f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_local_supplier */
extern void T53f199(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T975f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T975f71(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T57f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T907c643(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T57f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T57f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T907c642(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T57f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T57f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T907c641(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T973f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T973f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T64f221(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T64f232(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T64f345(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T64f344(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T64f343(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T64f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T64f358(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T61f554(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T61f606(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T61f662(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T61f682(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T61f683(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T61f699(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T201f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T201f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T201f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T201f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T201f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T201f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T201f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T201f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T201f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T201f45(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T975f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T975f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T973f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T64f222(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T64f233(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T61f555(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T61f607(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T975f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T975f150(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T975f213(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T973f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T64f444(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T64f495(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T64f540(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T61f556(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T61f608(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T975f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T975f143(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T975f210(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T973f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T64f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T64f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T64f537(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T61f557(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T61f609(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T975f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T975f146(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T975f211(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T973f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T64f439(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T64f490(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T64f538(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T61f558(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T61f610(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T61f664(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T975f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T975f147(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T975f212(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T973f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T64f440(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T64f491(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T64f539(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T212f7(T0* C);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T61f559(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T61f611(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T975f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T975f148(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T973f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T64f441(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T64f492(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T61f560(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T61f612(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T975f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T975f149(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T973f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T64f442(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T64f493(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T61f561(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T61f613(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T975f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T975f138(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T975f207(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T975f206(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T975f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T975f204(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T975f203(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T975f202(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T975f201(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T975f200(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T975f199(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T975f198(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T973f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T64f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T64f482(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T64f534(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T64f533(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T64f532(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T64f531(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T64f530(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T64f529(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T64f528(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T64f527(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T64f526(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T64f525(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T61f562(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T61f614(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T975f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T975f139(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T973f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T64f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T64f483(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T61f563(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T61f615(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T975f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T975f140(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T973f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T64f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T64f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T61f564(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T61f616(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T975f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T975f141(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T975f209(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T975f208(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T973f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T64f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T64f485(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T64f536(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T64f535(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T61f565(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T61f617(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T502f20(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T480f9(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T975f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T975f142(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T973f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T64f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T64f486(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T61f566(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T61f618(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T503f20(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T975f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T975f136(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T975f197(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T973f50(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T64f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T64f480(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T64f524(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T61f567(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T61f619(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T975f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T975f137(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T973f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T64f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T64f481(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T61f568(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T61f620(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T975f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T975f144(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T973f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T64f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T64f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T61f569(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T975f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T975f145(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T973f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T64f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T64f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T61f570(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T975f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T975f151(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T975f214(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T57f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T907c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T57f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T907c790(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T57f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1274f7(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T537f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T57f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T907c789(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T57f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T975f253(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T56f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T976f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_create_supplier */
extern void T53f202(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T975f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T57f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T907c788(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T251f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T60f222(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T160f12(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T975f229(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T973f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T64f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T64f477(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T64f523(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T64f465(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T64f195(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T64f411(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_expression */
extern void T61f571(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T61f621(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T975f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T975f152(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T975f215(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T973f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T64f450(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T64f501(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T64f544(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T61f572(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T61f622(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T200f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T200f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T200f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T200f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T200f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T200f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T200f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T200f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T200f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T857f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T856f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T856f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T856f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T856f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T856f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T200f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T200f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T200f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T200f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T200f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T200f33(T0* C);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T975f43(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T975f55(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T973f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T64f223(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T64f234(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T61f573(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T61f623(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T61f665(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T975f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T975f56(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T973f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T64f224(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T64f235(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T61f574(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T61f624(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T975f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T975f57(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T973f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T64f225(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T64f236(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T61f575(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T61f625(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T975f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T975f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T973f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T64f226(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T64f237(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T61f576(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T61f626(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T975f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T975f62(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T973f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T64f227(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f238(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T64f355(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T64f354(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T64f353(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T64f352(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T64f351(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T64f350(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T64f349(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T64f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T64f347(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T64f346(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f238p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T61f577(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T61f627(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T975f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T975f154(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T973f37(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T801f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T973f93(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T64f447(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T64f498(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T61f578(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T61f628(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T975f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T975f164(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T975f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T56f192(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T976f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_static_supplier */
extern void T53f200(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T759f15(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T973f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T64f446(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T64f497(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T64f542(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T214f69(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T162f68(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T61f579(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T61f629(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T61f280(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T975f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T975f167(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T975f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T57f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T907c771(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T768f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T57f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T57f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T907c770(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T57f351(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T907c773(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T57f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f351(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T973f40(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T973f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T57f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T907c851(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T57f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T907c850(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T774f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T768f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T439f22(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T57f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T907c849(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T57f427(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T907c848(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T57f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f427(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f150(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T973f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T973f88(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T64f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T64f470(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T64f514(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T214f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T162f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T213f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1359f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1358f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1358f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1358f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1358f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1358f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1358c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1359f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1426c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge911os15448;
extern T0* ge911ov15448;
extern T0* T213f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1359c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T213f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T213f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T213c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T214c60(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T214f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T214f50(T0* C);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T61f580(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T61f630(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T975f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T975f168(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T973f68(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T64f448(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T64f499(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T61f581(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T61f631(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T975f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T975f169(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T57f352(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T907c774(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T57f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f352(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T975f239(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T975f238(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T975f237(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T975f236(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T975f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T973f41(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T64f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T64f471(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T64f519(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T64f518(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T64f517(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T64f516(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T64f515(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T61f582(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T61f632(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T61f667(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T975f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T975f170(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T973f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T64f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T64f472(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T61f583(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T61f633(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T975f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T975f171(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T973f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T64f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T64f473(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T61f584(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T61f634(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T975f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T975f172(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T257f39(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T257f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T257f21(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T973f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T64f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T64f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T61f585(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T61f635(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T975f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T975f173(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T785f19(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1275f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1275c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T257f23(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T785f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T973f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T64f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T64f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T61f586(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T61f636(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T975f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T975f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T57f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T907c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T489f43(T0* C);
/* ET_SYMBOL.text */
extern T0* T442f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T57f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T975f240(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T973f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T64f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T64f476(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T64f522(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T61f587(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T61f637(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T489f11(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T442f11(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T975f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T975f175(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T973f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T64f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T64f478(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T61f588(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T61f638(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T975f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T975f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T57f356(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T907c778(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T57f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f356(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T973f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T64f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T64f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T61f589(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T61f639(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T975f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T975f177(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T975f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T792f17(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T57f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T907c806(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T57f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T975f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T975f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T975f264(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T975f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T975f269(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T57f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T907c822(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T57f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T57f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T907c821(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T57f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T907c820(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T57f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T57f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T907c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T811f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T811f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T57f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T907c818(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T57f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T57f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T907c817(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T172f30(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T172f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T975f268(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1379f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1380c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1379c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1428f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1441c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1427c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge503os15448;
extern T0* ge503ov15448;
extern T0* T1379f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1428c2(void);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T57f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T907c816(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T57f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T975f263(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T975f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T792f29(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T975f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T975f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T975f261(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T975f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T975f241(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T57f383(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T907c805(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f383(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T975f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T975f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T975f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T975f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T973f72(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T973f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T64f452(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T64f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T64f548(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T64f564(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T64f575(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T234f35(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T64f563(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T64f574(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T64f579(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T64f568(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T64f567(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T64f562(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T64f573(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_procedure_call */
extern void T64f578(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T227c8(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T64f547(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T64f561(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T64f560(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T64f559(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T64f546(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T64f558(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T64f572(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T64f577(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T64f581(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T64f557(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T64f571(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T61f590(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T61f641(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T61f669(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T192f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T192f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T851f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T850f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T850f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T850f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T850f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T850f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T192f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T192f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T61f640(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T61f668(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T708f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T196f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T196f12(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T196f11(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T198f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_target */
extern void T198f26(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T975f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T975f178(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T973f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T64f443(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T64f494(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T61f591(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T61f642(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].force_last */
extern void T203f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_put */
extern void T203f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_put */
extern void T203f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_item */
extern T6 T203f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].hash_position */
extern T6 T203f29(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T796f15(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].resize */
extern void T203f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_resize */
extern void T203f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_resize */
extern void T203f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_resize */
extern void T203f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].resize */
extern T0* T868f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].resized_area */
extern T0* T867f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].copy_data */
extern void T867f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_CONSTANT].move_data */
extern void T867f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].overlapping_move */
extern void T867f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].non_overlapping_move */
extern void T867f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_item */
extern T0* T203f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_resize */
extern void T203f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_capacity */
extern T6 T203f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_put */
extern void T203f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].search_position */
extern void T203f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_equality_tester */
extern T0* T203f33(T0* C);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T975f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T975f179(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T173f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T975f244(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T797f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T797f14(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T973f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T64f449(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T64f500(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T64f543(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T61f592(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T61f643(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T975f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T975f180(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T975f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T57f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T907c781(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T57f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T57f358(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T907c780(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T57f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f358(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T57f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T907c779(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T799f16(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T799f19(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T973f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T64f451(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T64f502(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T64f545(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T61f593(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T61f644(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T975f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T975f181(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T975f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T973f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T64f445(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T64f496(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T64f541(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T61f594(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T61f645(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T975f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T975f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T975f250(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T975f270(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T250f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T250f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T888f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T888f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T250f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T250f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T975f249(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T56f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T976f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T53f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T975f267(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T57f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T907c815(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T57f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T57f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T907c814(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T250f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T57f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T907c813(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T57f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T57f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T907c812(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T57f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T57f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T907c811(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T56f193(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T976f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T53f201(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T975f248(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T975f247(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T56f195(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T976f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T53f203(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T975f266(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T57f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T907c810(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T57f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T907c809(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T57f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T907c808(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T57f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T907c807(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T250f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T250f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T250f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T250f10(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T973f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T64f453(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T64f504(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T64f552(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T64f569(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T64f576(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T64f580(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T64f551(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T64f566(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T64f550(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T64f549(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T64f565(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T61f595(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T61f647(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T61f646(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T61f670(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T975f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T975f183(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T973f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T64f454(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T64f505(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T61f596(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T61f649(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T61f648(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T975f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T975f184(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T973f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T64f455(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T64f506(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T61f597(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T61f651(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T61f650(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T975f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T975f185(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T975f251(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T975f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T973f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T64f456(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T64f507(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T64f553(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T64f570(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T61f598(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T61f653(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T61f652(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T975f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T975f186(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T973f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T64f457(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T64f508(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T61f599(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T61f655(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T61f654(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T975f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T975f187(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T973f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T64f458(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T64f509(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T61f600(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T61f657(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T61f656(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T980f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T980f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T57f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T907c826(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T57f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T553f27(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T178f20(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T545f25(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T57f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T907c825(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T553f25(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T178f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T545f23(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T57f402(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T907c824(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T57f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f402(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T57f401(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T907c823(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T57f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f401(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T979f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T979f10(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T979f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T979f11(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T974f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T974f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T974f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1224f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1224f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1224f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T972f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T972f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T57f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T907c737(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T57f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T972f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T63f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge248os1592;
extern T0* ge248ov1592;
extern T0* T972f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T63c18(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T972f19(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T971f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T971f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T971f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T971f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T971f11(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T970f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T970f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T969f10(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T969f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T968f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T968f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T968f11(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T181f17(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T181f28(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T181f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T980f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T979f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T974f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T972f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T971f12(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T970f17(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T969f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T968f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T181f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T980f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T980f22(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T979f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T979f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T57f405(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T907c827(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T57f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f405(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T974f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T972f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T972f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T971f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T971f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T970f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T970f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T969f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T968f13(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T181f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T181f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T980f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T979f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T974f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T972f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T971f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T970f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T969f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T968f14(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T181f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T980f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T979f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T974f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T972f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T971f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T970f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T969f15(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T968f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T181f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T980f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T980f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T57f414(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T907c836(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f414(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T979f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T979f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T57f407(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T907c829(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T57f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f407(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T57f406(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T907c828(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T57f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f406(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T974f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T972f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T971f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T970f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T970f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T969f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T968f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T181f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T181f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T980f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T980f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T57f415(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T907c837(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f415(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T979f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T979f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T57f408(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T907c830(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f408(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T974f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T972f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T971f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T970f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T970f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T969f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T968f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T968f21(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T57f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T907c844(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f423(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T57f422(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T907c843(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f422(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T968f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T968f23(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T566f37(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T566f102(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T566f104(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T181f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T181f32(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T181f34(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T980f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T980f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T980f30(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T57f421(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T907c842(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f421(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T979f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T979f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T979f25(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T57f409(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T907c831(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f409(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T974f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T972f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T971f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T970f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T969f18(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T969f21(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T702f30(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1222f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1222f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1222f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1222f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].put */
extern void T1326f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1326f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_put */
extern void T1326f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1326f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1326f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1326f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1326f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search_position */
extern void T1326f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1326f11(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T702f61(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1326f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].resize */
extern void T1326f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1326f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1326f50(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1397f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1396f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1396f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1396f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1396f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1396f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1326f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1326f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1286f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1222f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1222f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1222f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1326f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1326f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found */
extern T1 T1326f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search */
extern void T1326f60(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T968f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T968f22(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T57f425(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T907c846(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f425(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T57f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T907c845(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T702f70(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T702f69(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T181f25(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T181f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T980f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T979f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T974f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T972f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T971f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T970f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T969f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T968f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T181f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T181f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T975f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T975f153(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T975f222(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T708f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T57f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T907c764(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T57f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T975f221(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T57f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T907c763(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T57f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T708f16(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T975f217(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T973f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T64f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T64f378(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T64f403(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T64f402(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T64f459(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T64f398(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T61f700(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T61f712(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T975f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T975f155(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T57f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T907c765(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T57f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T975f224(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T714f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T975f223(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T57f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T907c796(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T57f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T57f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T907c795(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T57f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T907c794(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T57f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T57f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T907c793(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T975f256(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T57f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T907c792(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T975f255(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T975f254(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T973f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T64f363(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T64f379(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T64f405(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T64f463(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T64f404(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T64f462(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T64f461(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T64f460(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T61f701(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T61f713(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T975f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T975f156(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T975f225(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T57f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T907c766(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T57f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T257f20(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T63f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge248os1593;
extern T0* ge248ov1593;
extern T0* T975f31(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T973f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T64f364(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T64f380(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T64f406(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T64f464(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T64f194(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T61f702(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T61f714(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T975f98(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T975f157(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T732f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T973f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T973f85(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T735f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T973f92(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T64f365(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T64f381(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T61f703(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T61f715(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T975f99(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T975f158(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T57f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T907c768(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T57f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T745f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T745f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T739f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T57f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T907c767(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T57f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T973f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T973f86(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T973f89(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T64f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T64f382(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T61f704(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T61f716(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T61f303(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T975f100(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T975f159(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T975f227(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T57f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T907c797(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T57f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T975f226(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T688f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T688f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T973f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T973f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T64f367(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T64f383(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f408(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f408p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f407(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f407p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T61f705(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T61f717(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T975f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T975f160(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T973f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T64f368(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f384(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f384p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T61f706(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T61f718(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T975f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T975f161(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T724f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T724f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T973f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T64f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f385(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f385p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T61f707(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T61f719(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T975f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T975f162(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T975f228(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T975f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T57f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T907c802(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T57f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T907c801(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T730f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T730f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T727f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T195f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T726f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T726f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T57f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T907c800(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T730f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T726f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T57f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T907c799(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T57f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T57f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T907c798(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T727f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T973f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T64f370(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T64f386(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T64f409(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T64f466(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T64f510(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T730f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T726f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T61f708(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T61f720(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T61f724(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T975f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T975f163(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T973f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T64f371(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T64f387(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T61f709(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T61f721(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T975f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T975f165(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T975f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T57f347(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T907c769(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f347(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T973f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T64f372(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T64f388(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T64f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T61f710(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T61f722(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T975f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T975f166(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T975f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T57f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T907c772(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T770f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T973f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T64f373(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T64f389(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T64f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T61f711(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T61f723(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T980f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T980f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T57f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T907c838(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T936f5(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T57f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T907c841(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T57f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T57f417(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T907c840(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f417(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1230f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1230f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1230f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1230f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put */
extern void T1332f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1332f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1332f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1332f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1332f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1332f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1332f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1332f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1332f11(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T553f64(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T545f62(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1332f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1332f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1332f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1332f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1332f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1332f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1289f18(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1230f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1230f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1332f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1332f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1332f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1332f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T57f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T907c839(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T979f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T974f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T972f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T971f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T970f16(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T969f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T968f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T181f20(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T975f277(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T975f281(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T973f80(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T64f520(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T64f555(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T61f728(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T61f733(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T61f734(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T975f278(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T975f282(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T973f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T64f521(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T64f556(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T61f727(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T61f732(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T975f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T975f283(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T975f285(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T196f6(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T196f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T973f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T64f582(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T64f585(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T64f588(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T61f725(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T61f730(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T61f735(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T975f280(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T975f284(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T57f426(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T907c847(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T477f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T57f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f426(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T973f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T64f583(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T64f586(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T61f726(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T61f731(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T975f286(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T975f287(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T973f79(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T64f584(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T64f587(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T61f729(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T921f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T316f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1270f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1388f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1387f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1387f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1387f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1387f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1387f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1387c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1388f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1430c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge925os15448;
extern T0* ge925ov15448;
extern T0* T1270f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1388c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1270f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1270f1(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1270f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1270c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T235f15(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.reset */
extern void T662f62(T0* C);
/* ET_INFIX_NAME.reset */
extern void T661f91(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T660f62(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T659f63(T0* C);
/* ET_IDENTIFIER.reset */
extern void T131f107(T0* C);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T662f63(T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T661f92(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T660f63(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T659f64(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T131f96(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T936f58(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T704f61(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T702f67(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_unaliased_to_string */
extern void T566f101(T0* C, T0* a1);
/* ET_BIT_N.append_unaliased_to_string */
extern void T565f101(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T553f71(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T545f67(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T301f93(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T172f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_unaliased_to_string */
extern void T173f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T413f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T171f95(T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T60f163(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T936f57(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T704f63(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T702f66(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T566f100(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T565f99(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T553f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T545f68(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T301f91(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T172f28(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T173f98(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T413f30(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T171f96(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T60f208(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T936f59(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T704f62(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T702f65(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T566f99(T0* C);
/* ET_BIT_N.reset */
extern void T565f100(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T553f73(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T554f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T545f69(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T301f92(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T936f60(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T704f64(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T702f68(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T566f103(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T565f102(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T553f74(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T545f70(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T301f94(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T655f80(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T654f79(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T315f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T310f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T655f81(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T655f95(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T654f80(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T654f94(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T654f94p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T315f76(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T315f91(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T310f80(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T310f94(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T310f94p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T655f85(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T654f84(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T315f80(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T310f84(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T655f86(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T654f85(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T315f81(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T310f85(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T649f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T648f81(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T646f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T239f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T238f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T236f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T175f82(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T649f78(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T649f78p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T649f93(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T648f82(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T648f82p1(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T648f96(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T648f96p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T646f82(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T646f82p1(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T646f96(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T646f96p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T239f70(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T239f70p1(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T239f80(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T238f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T238f72p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T238f84(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T236f72(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T236f72p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T236f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T175f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T175f83p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T175f93(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T649f82(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T648f86(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T646f86(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T239f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T238f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T236f85(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T175f95(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T649f83(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T648f87(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T646f87(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T239f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T238f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T236f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T175f94(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T173f100(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T171f98(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T60f183(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T173f99(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T171f97(T0* C);
/* ET_CLASS.reset_type */
extern void T60f209(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T234f41(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T233f41(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T229f40(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T209f40(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T156f37(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T234f38(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T233f38(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T229f37(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T209f37(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T156f35(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T234f39(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T233f39(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T229f38(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T209f38(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T156f36(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T234f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T233f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T229f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T209f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T156f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T234f44(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T233f44(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T229f43(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T209f43(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T156f40(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T234f37(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T233f37(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T229f36(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T209f36(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T156f34(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T234f45(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T233f45(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T229f44(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T209f44(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T156f41(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T234f46(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T233f46(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T229f45(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T209f45(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T156f42(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T332f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T329f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T329f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T329f12(T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T991c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T989c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1233c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1233f1(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1234c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T104f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1254c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1384c2(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1254f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1254f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1385c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1254f35(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1254f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1254f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1254f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1254f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1254f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1254f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1386f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1429c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1383c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1386c3(void);
/* XM_DOCUMENT.make */
extern T0* T98c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T98f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T98f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T98f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1350c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T98f6(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T98f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T99f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T272f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T98f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T98f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T98f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T98f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T98f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T98f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T98f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T98f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T98f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T98f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T98f5(T0* C);
/* XM_DOCUMENT.list_make */
extern void T98f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T99c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T99f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1223os9893;
extern T0* ge1223ov9893;
extern T0* T98f3(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1258c8(void);
/* XM_NAMESPACE.make */
extern void T1258f7(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1258c7(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T103f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T103f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T332f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T329f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T104f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T104f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T100f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T924f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1279f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1279c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T924f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T925c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T104f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1255c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T99f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T99f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T99f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T99f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T99f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T99f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1255c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T103f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T103f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T332f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T329f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T104f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1256c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1256c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T103f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T103f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T332f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T329f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T104f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1257c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T103f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T103f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T332f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T329f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T989f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1233f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1333f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1333f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1333c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].is_empty */
extern T1 T1233f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T989f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T45f60(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T989f9(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T45c59(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T45f36(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T104f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T99c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T99c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T98f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T98f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T104f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1254f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1254f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1254f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1254f13(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1254f11(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1258f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1254f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1254f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1254f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1254f45(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1386f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1383f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1383f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1383f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1383f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1383f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1254f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1254f5(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1254f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1254f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1254f10(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1254f36(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1254f33(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1384f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1254f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1258f6(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1254f2(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1254f1(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T103f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T103f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T332f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T329f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T989f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1233f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1233f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1333f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1233f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1234f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1234f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1233f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1233f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T989f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1197os24593;
extern T0* ge1197ov24593;
extern T0* T989f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T329f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T989f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1234f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1233f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1233f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1233f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1234f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1234f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1233f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1234f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1233f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1234f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1234f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1233f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1197os24594;
extern T0* ge1197ov24594;
extern T0* T989f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T329f4(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T104f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T99f2(T0* C);
/* XM_DOCUMENT.process */
extern void T98f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1351f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T99f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T98f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T103f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T103f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T332f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T329f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T989f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T45f61(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1233f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T989f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T329f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T991f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T991f2(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T989f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T329f8(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T329f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T329f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1164os18184;
extern T0* ge1164ov18184;
extern T0* T329f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T104f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T271c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T103f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T103f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T332f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T329f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T104f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T103f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T103f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T332f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T329f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T329f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T329f6(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T329f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T329f39(T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T991f8(T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T991f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T329f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1164os18183;
extern T0* ge1164ov18183;
extern T0* T329f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1164os18191;
extern T0* ge1164ov18191;
extern T0* T329f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1164os18190;
extern T0* ge1164ov18190;
extern T0* T329f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T329f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1164os18185;
extern T0* ge1164ov18185;
extern T0* T329f22(T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T991f1(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T329f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T989f1(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T104f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T103f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T103f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T332f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T329f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T104f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T103f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T103f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T332f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T329f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T104f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T103f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T329f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T104f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T103f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T208f26(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T183f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T182f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T208f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T208f29p1(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T183f10(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T183f10p1(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T182f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T182f6p1(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T208f28(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T183f9(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T182f8(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T208f23(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T208f32(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T208f36(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T183f8(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T183f3(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T182f9(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T208f24(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T208f33(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T208f37(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T183f7(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T182f7(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T208f22(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T183f5(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T182f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T41f39(T0* C);
/* AP_ENUMERATION_OPTION.reset */
extern void T37f29(T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T36f25(T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T92c8(void);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T92f5(T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T327c3(T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T35f28(T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T89c8(void);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T89f5(T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T325c3(T0* a1);
/* AP_FLAG.reset */
extern void T33f22(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T41f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T41f41(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T41f28(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T83f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T41f27(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T41f33(T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1339f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1339f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1339f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T81f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T81f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1338f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1338f2(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1339c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1338c3(void);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T37f30(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T94f15(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T37f30p1(T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T36f26(T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T92f9(T0* C, T6 a1);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T92f6(T0* C);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T35f29(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge57os3853;
extern T0* ge57ov3853;
extern T0* T35f20(T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern unsigned char ge274os3870;
extern T0* ge274ov3870;
extern T0* T35f21(T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T1337c3(void);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T89f9(T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T324f4(T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T324c3(T1 a1);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T89f6(T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T80f22(T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T1337f1(T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T1337f2(T0* C);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge57os3854;
extern T0* ge57ov3854;
extern T0* T35f19(T0* C);
/* AP_FLAG.record_occurrence */
extern void T33f23(T0* C, T0* a1);
/* KL_STDIN_FILE.read_character */
extern void T931f19(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T931f21(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T931f14(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T931f6(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T931f11(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T928f31(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1194f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1194f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T928f33(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T928f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T928f36(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1194f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T1294f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].is_empty */
extern T1 T1194f4(T0* C);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T1294c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T928f23(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1262os24042;
extern T0* ge1262ov24042;
extern T0* T928f26(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1195f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1195f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1195f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1195f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1195f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge332os2779;
extern T0* ge332ov2779;
extern T0* T928f21(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1195c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T928f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T928f24(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T928f34(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1367f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T928f32(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T926f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T926f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1195f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1195f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* ET_KEYWORD.position */
extern T0* T178f9(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1264f27(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1223f25(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1264f24(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1223f22(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1281f4(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1264f25(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1223f23(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1281f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1282f9(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1264f26(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1223f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T668f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T660f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T461f35(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T668f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T662f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T660f8(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1264f11(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1223f10(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T655f52(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T654f50(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T649f53(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T648f54(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T646f54(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T315f48(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T310f50(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T239f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T238f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T236f51(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T175f57(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1264f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T655f54(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T654f52(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T649f55(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T648f56(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T646f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T315f50(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T310f52(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T239f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T238f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T236f53(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T175f59(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1264f14(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1223f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T655f55(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T654f53(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T649f56(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T648f57(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T646f57(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T315f51(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T310f53(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T239f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T238f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T236f54(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T175f60(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1223f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T655f56(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T654f54(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T649f57(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T648f58(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T646f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T315f52(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T310f54(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T239f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T238f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T236f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T175f61(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1264f16(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1223f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T655f57(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T654f55(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T649f58(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T648f59(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T646f59(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T315f53(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T310f55(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T239f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T238f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T236f56(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T175f62(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T655f50(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T654f48(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T649f51(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T648f52(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T646f52(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T315f46(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T310f48(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T239f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T238f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T236f49(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T175f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T655f58(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T654f56(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T649f59(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T648f60(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T646f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T315f54(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T310f56(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T239f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T238f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T236f57(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T175f63(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1264f12(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1223f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T655f53(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T654f51(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T649f54(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T648f55(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T646f55(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T315f49(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T310f51(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T239f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T238f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T236f52(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T175f58(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T299f4(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T266f19(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T135f23(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T299f3(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T266f20(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T135f24(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T299f6(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T266f21(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T135f25(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T299f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T299f11(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T266f15(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T266f26(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T266f35(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T266f34(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T135f10(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T135f14(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T135f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T135f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T135f11(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T299f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T299f10(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T266f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T266f30(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T135f27(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T135f33(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T299f9(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T266f23(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T135f28(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T832f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T822f15(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T821f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T820f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T819f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T818f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T816f18(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T806f8(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T799f11(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T797f10(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T796f8(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T792f11(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T791f7(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T790f6(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T789f7(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T785f7(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T783f7(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T782f7(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T781f7(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T780f7(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T775f8(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T774f9(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T759f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T711f7(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T540f10(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T537f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T508f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T507f17(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T506f18(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T505f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T503f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T502f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T501f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T500f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T499f29(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T498f19(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T497f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T496f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T495f18(T0* C);
/* ET_VOID.assertion */
extern T0* T483f12(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T447f16(T0* C);
/* ET_RESULT.assertion */
extern T0* T216f12(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T198f8(T0* C);
/* ET_CURRENT.assertion */
extern T0* T194f13(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T131f73(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T832f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1370f12(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1274f11(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T830f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T822f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T821f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T820f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T819f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T818f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T816f16(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T806f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T799f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T797f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T796f7(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T792f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T791f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T790f5(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T789f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T785f6(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T783f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T782f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T781f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T780f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T775f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T774f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T759f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T711f6(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T540f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T537f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T508f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T507f10(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T506f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T505f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T503f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T502f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T501f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T500f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T499f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T498f12(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T497f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T496f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T495f11(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T492f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T483f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T447f9(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T216f11(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T198f7(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T194f12(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T131f72(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T822f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T821f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T820f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T819f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T818f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T816f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T822f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T819f23(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T759f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T757f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T508f9(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T507f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T501f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T500f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T499f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T495f10(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T198f6(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T131f71(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T759f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T508f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T507f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T501f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T500f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T499f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T495f27(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T198f18(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T131f87(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T759f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T508f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T507f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T501f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T500f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T499f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T495f28(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T198f19(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T131f88(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T759f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T508f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T507f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T501f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T500f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T499f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T495f29(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T198f20(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T131f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T553f63(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T554f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T545f61(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T60f156(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1370f15(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T790f12(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T711f11(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T198f14(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T946f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T936f30(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T704f31(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T702f26(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T700f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T566f28(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T565f28(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T553f46(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T545f42(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T301f18(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T173f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T171f20(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T60f83(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T668f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T664f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T668f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T664f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T668f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T664f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T668f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T664f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T664f38(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T668f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T664f6(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T662f39(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T661f19(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T660f21(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T659f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T668f38(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T664f57(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T668f39(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T668f41(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T664f58(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T664f60(T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T668f40(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T79f3(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T668f42(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T664f59(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T662f57(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T662f43(T0* C);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T661f68(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T660f57(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T660f25(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T659f54(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T498f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T497f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T496f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T442f8(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T436f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T508f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1278c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1278f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T507f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T506f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T505f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T503f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T502f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T501f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T500f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T499f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T498f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T497f35(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T496f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T495f34(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T489f80(T0* C);
/* ET_VOID.last_position */
extern T0* T483f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T447f27(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T442f16(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T439f17(T0* C);
/* ET_RESULT.last_position */
extern T0* T216f23(T0* C);
/* ET_CURRENT.last_position */
extern T0* T194f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T178f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T131f85(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T621f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T307f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T619f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T307f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T934f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T573f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T572f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T561f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T934f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T561f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T934f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T704f52(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T702f55(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T573f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T170f895(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T572f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T170f894(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T566f84(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T565f83(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T561f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T934f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T170f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T559f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T170f893(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T559f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T559f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T704f12(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T702f4(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T566f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T565f10(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T561f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T170f891(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T501f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T500f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T499f8(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T382f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T342c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T380f1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T376f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T341f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T382f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T380f4(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T376f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T341f4(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T382f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T928f3(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T928f2(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T380f5(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T376f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T341f5(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T382f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T380f6(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T376f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T341f6(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T666f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T79f2(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T666f5(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T662f58(T0* C, T0* a1);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T661f69(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T661f23(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T660f58(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T659f55(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T659f20(T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T131f90(T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T666f3(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T662f10(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T661f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T660f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T659f7(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T131f44(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T932f1(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T932f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T932f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T932f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T932f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T932f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T932f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T932f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T932f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T501f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T501f47(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T501f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T500f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T500f48(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T500f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T499f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T499f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T499f17(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T489f19(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T489f86(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T489f41(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T480f17(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T480f75(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T480f21(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T442f12(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T442f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T442f13(T0* C);
/* ET_CURRENT.to_text */
extern T0* T194f17(T0* C);
/* ET_CURRENT.append_to_string */
extern void T194f32(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T194f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T178f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T178f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T178f19(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T131f48(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T131f108(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T508f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T507f32(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T506f28(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T505f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T503f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T502f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T501f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T500f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T499f20(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T498f25(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T497f29(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T496f24(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T495f33(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T489f9(T0* C);
/* ET_VOID.is_null */
extern T1 T483f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T480f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T467f10(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T461f45(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T447f26(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T442f9(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T439f16(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T436f12(T0* C);
/* ET_RESULT.is_null */
extern T1 T216f22(T0* C);
/* ET_CURRENT.is_null */
extern T1 T194f20(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T178f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T131f40(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1278f1(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T508f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T507f30(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T506f26(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T505f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T503f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T502f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T501f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T500f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T499f18(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T498f23(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T497f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T496f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T495f31(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T489f10(T0* C);
/* ET_VOID.line */
extern T6 T483f20(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T480f18(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T477f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T467f11(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T461f43(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T447f24(T0* C);
/* ET_SYMBOL.line */
extern T6 T442f10(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T439f14(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T436f10(T0* C);
/* ET_RESULT.line */
extern T6 T216f19(T0* C);
/* ET_CURRENT.line */
extern T6 T194f18(T0* C);
/* ET_KEYWORD.line */
extern T6 T178f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T131f35(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1278f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T508f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T507f31(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T506f27(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T505f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T503f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T502f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T501f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T500f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T499f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T498f24(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T497f28(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T496f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T495f32(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T489f42(T0* C);
/* ET_VOID.column */
extern T6 T483f21(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T480f19(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T477f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T467f45(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T461f44(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T447f25(T0* C);
/* ET_SYMBOL.column */
extern T6 T442f14(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T439f15(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T436f11(T0* C);
/* ET_RESULT.column */
extern T6 T216f20(T0* C);
/* ET_CURRENT.column */
extern T6 T194f19(T0* C);
/* ET_KEYWORD.column */
extern T6 T178f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T131f36(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge527os11897;
extern T0* ge527ov11897;
extern T0* T520f20(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T520f18(T0* C);
/* ET_INVARIANTS.type */
extern T0* T520f19(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T520f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T655f47(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T654f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T649f48(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T648f50(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T646f50(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T520f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T315f43(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T310f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T239f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T238f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T236f46(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T175f52(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T520f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T655f48(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T649f49(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T520f16(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T315f44(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T239f45(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T238f47(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T236f47(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T175f53(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T520f13(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1370f7(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1275f9(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1274f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T822f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T821f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T820f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T819f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T818f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T816f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T806f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T799f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T797f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T796f6(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T792f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T791f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T790f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T789f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T785f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T783f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T782f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T781f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T780f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T775f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T774f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T759f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T711f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T540f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T537f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T508f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T507f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T506f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T505f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T503f9(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T502f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T501f13(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T500f13(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T499f13(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T498f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T497f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T496f9(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T495f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T483f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T447f8(T0* C);
/* ET_RESULT.expression_item */
extern T0* T216f10(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T198f5(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T194f10(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T131f43(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1370f14(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1274f13(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T822f20(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T821f21(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T820f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T819f21(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T818f22(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T816f22(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T806f11(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T799f14(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T797f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T796f12(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T792f15(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T791f10(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T790f10(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T789f10(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T785f10(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T783f10(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T782f10(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T781f10(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T780f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T774f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T759f14(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T711f10(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T540f15(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T537f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T508f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T507f22(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T506f21(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T505f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T503f23(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T502f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T501f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T500f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T499f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T498f27(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T497f31(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T496f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T495f23(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T483f15(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T447f19(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T198f13(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1147f3(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T775f11(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T216f15(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T194f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T131f78(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1147f4(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T815f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T508f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T507f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T503f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T502f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T501f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T500f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T499f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T498f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T497f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T496f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T495f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T447f10(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T506f13(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T505f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T503f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T502f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T501f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T500f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T499f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T498f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T497f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T496f13(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T447f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T508f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T507f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T506f14(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T505f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T503f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T502f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T498f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T497f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T496f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T495f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T447f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T508f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T507f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T506f15(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T505f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T501f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T500f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T499f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T498f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T497f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T496f15(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T495f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T447f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T508f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T507f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T506f16(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T505f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T503f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T502f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T501f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T500f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T499f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T495f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T447f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T508f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T507f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T506f17(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T505f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T503f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T502f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T501f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T500f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T499f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T498f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T497f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T496f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T495f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T822f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T821f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T820f20(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T792f14(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T792f18(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T822f26(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T822f28(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T821f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T821f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T820f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T820f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T819f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T819f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T818f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T818f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T816f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T816f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T792f22(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T788f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T787f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T668f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T664f7(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T662f40(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T661f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T660f22(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T659f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T480f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T467f19(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T461f18(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T131f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T788f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T787f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T668f19(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T664f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T662f17(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T661f43(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T660f33(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T659f30(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T489f21(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T480f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T467f20(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T461f19(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T131f54(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T788f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T787f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T668f20(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T664f42(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T662f18(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T661f44(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T660f34(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T659f31(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T489f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T480f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T467f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T461f20(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T131f55(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T788f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T787f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T668f21(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T664f43(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T662f19(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T661f45(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T660f35(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T659f32(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T489f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T480f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T467f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T461f21(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T131f56(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T788f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T787f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T668f22(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T664f44(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T662f20(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T661f46(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T660f36(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T659f33(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T489f24(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T480f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T467f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T461f22(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T131f57(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T788f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T787f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T668f24(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T664f46(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T662f22(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T661f48(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T660f38(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T659f35(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T489f25(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T480f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T467f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T461f23(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T131f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T788f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T787f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T668f25(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T664f47(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T662f23(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T661f49(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T660f39(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T659f36(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T489f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T480f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T467f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T461f24(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T131f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T788f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T787f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T668f26(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T664f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T662f24(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T661f50(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T660f40(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T659f37(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T489f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T480f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T467f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T461f25(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T131f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T788f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T787f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T668f27(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T664f48(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T662f25(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T661f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T660f41(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T659f38(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T489f28(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T480f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T467f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T461f26(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T131f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T788f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T787f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T668f30(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T664f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T662f28(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T661f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T660f44(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T659f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T489f29(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T480f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T467f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T461f27(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T131f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T788f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T787f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T668f31(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T664f51(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T662f29(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T661f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T660f45(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T659f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T489f30(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T480f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T467f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T461f28(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T131f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T788f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T787f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T668f32(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T664f52(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T662f30(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T661f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T660f46(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T659f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T489f31(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T480f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T467f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T461f29(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T131f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T788f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T787f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T668f33(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T664f53(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T662f31(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T661f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T660f47(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T659f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T489f32(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T480f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T467f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T461f30(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T131f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T788f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T787f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T668f34(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T664f54(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T662f48(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T661f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T660f48(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T659f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T489f33(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T480f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T467f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T461f31(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T131f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T788f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T787f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T668f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T664f37(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T662f11(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T661f8(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T660f18(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T659f24(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T489f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T480f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T467f33(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T461f32(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T131f49(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T788f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T787f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T668f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T664f36(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T662f12(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T661f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T660f19(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T659f25(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T489f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T480f37(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T467f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T461f33(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T131f50(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T788f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T787f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T668f37(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T664f55(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T662f13(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T661f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T660f20(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T659f26(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T489f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T480f38(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T467f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T461f34(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T131f51(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T788f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T668f18(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T664f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T662f16(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T661f42(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T660f32(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T659f29(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T489f12(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T480f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T467f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T461f11(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T131f53(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T788f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T787f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T668f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T664f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T662f15(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T661f41(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T660f31(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T659f28(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T489f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T480f13(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T467f15(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T461f14(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T131f52(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T787f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T668f29(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T664f50(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T662f27(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T661f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T660f43(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T659f40(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T489f13(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T480f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T467f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T461f12(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T131f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T788f9(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T787f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T668f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T664f49(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T662f26(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T661f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T660f42(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T659f39(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T489f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T480f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T467f16(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T461f15(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T131f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T788f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T787f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T668f23(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T664f45(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T662f21(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T661f47(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T660f37(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T659f34(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T489f14(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T480f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T467f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T461f13(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T131f58(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T662f54(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T661f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T660f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T659f51(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T489f37(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T480f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T467f36(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T461f36(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T439f10(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T131f82(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T662f55(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T661f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T660f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T659f52(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T489f38(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T480f40(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T467f37(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T461f37(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T439f11(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T131f83(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T788f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T787f10(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T489f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T480f16(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T467f18(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T461f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T788f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T787f30(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T489f8(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T480f8(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T467f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T461f42(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T439f12(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T788f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T788f29(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T787f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T787f29(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T489f39(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T489f40(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T480f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T480f42(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T467f38(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T467f39(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T461f38(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T461f39(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T439f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T708f9(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T196f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1370f8(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T792f8(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T198f10(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T196f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1370f9(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T790f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T708f8(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1379f3(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1370f6(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1275f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1274f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T822f24(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T821f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T820f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T819f25(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T818f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T816f25(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T811f9(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T806f13(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T801f9(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T799f17(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T797f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T796f14(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T792f19(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T791f12(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T790f13(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T789f12(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T785f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T783f12(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T782f12(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T781f12(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T780f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T775f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T774f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T759f17(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T711f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T708f12(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T540f17(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T537f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T508f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T507f24(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T506f23(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T505f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T503f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T502f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T501f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T500f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T499f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T498f29(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T497f33(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T496f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T495f25(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T483f17(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T447f21(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T216f18(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T198f16(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T195f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T194f23(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T131f84(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T708f10(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1379f2(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1370f5(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1275f6(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1274f5(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T822f17(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T821f18(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T820f18(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T819f19(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T818f20(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T816f20(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T811f7(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T806f10(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T801f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T799f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T797f13(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T796f10(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T792f13(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T791f9(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T790f9(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T789f9(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T785f9(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T783f9(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T782f9(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T781f9(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T780f9(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T775f10(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T774f12(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T759f13(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T711f9(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T708f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T540f13(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T537f10(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T508f19(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T507f19(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T506f20(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T505f20(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T503f22(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T502f22(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T501f30(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T500f32(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T499f32(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T498f21(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T497f25(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T496f20(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T495f20(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T483f14(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T447f18(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T216f14(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T198f12(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T195f3(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T194f15(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T131f77(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T662f9(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T661f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T660f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T659f6(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T131f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1370f11(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1275f1(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1274f10(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T822f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T821f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T820f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T819f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T818f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T816f23(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T806f12(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T799f15(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T797f16(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T796f13(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T792f16(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T791f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T790f11(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T789f11(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T785f11(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T783f11(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T782f11(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T781f11(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T780f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T775f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T774f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T759f16(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T711f12(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T540f16(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T537f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T508f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T507f23(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T506f22(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T505f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T503f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T502f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T501f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T500f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T499f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T498f28(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T497f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T496f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T495f24(T0* C);
/* ET_VOID.is_current */
extern T1 T483f16(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T447f20(T0* C);
/* ET_RESULT.is_current */
extern T1 T216f16(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T198f15(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T131f81(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1370f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1275f8(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1274f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T822f25(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T821f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T820f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T819f26(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T818f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T816f26(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T806f14(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T799f18(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T799f20(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T797f18(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T797f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T796f16(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T792f20(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T792f21(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T791f13(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T790f14(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T789f13(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T785f13(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T783f13(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T782f13(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T781f13(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T780f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T775f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T774f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T759f18(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T711f14(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T540f18(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T540f20(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T537f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T508f25(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T507f25(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T506f24(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T505f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T503f26(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T502f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T501f7(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T500f7(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T499f7(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T498f11(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T497f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T496f10(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T495f26(T0* C);
/* ET_VOID.position */
extern T0* T483f18(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T447f22(T0* C);
/* ET_RESULT.position */
extern T0* T216f17(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T198f17(T0* C);
/* ET_CURRENT.position */
extern T0* T194f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1370f13(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1275f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1274f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T822f27(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T811f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T821f27(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T820f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T819f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T818f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T816f28(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T806f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T799f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T797f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T796f17(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T792f23(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T791f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T790f15(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T789f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T785f14(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T783f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T782f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T781f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T780f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T775f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T774f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T759f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T711f15(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T489f79(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T801f10(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T540f19(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T537f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T508f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T507f29(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T506f25(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T505f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T503f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T502f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T501f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T500f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T499f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T498f30(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T497f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T496f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T495f30(T0* C);
/* ET_VOID.last_leaf */
extern T0* T483f19(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T447f23(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T216f21(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T198f21(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T194f25(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T655f59(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T315f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T310f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T655f63(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T654f61(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T649f64(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T648f65(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T646f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T315f60(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T310f61(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T239f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T238f62(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T236f62(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T175f67(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T655f64(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T654f62(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T649f65(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T648f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T646f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T315f61(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T310f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T239f61(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T238f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T236f63(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T175f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T655f68(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T315f87(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T315f86(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T315f85(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T654f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T649f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T649f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T649f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T649f87(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T648f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T646f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T315f65(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T310f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T239f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T239f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T238f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T238f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T236f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T236f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T175f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T655f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T655f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T655f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T655f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T654f67(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T654f90(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T654f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T654f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T649f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T649f86(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T648f68(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T648f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T648f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T648f90(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T646f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T646f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T646f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T646f90(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T315f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T315f84(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T310f67(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T310f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T310f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T310f88(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T239f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T239f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T239f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T239f74(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T238f65(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T238f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T238f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T238f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T238f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T238f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T236f65(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T236f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T236f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T236f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T236f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T175f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T175f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T175f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T175f87(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T655f67(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T654f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T315f64(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T310f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T655f66(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T654f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T315f63(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T310f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T655f65(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T654f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T315f62(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T310f63(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T239f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T238f36(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T236f36(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T239f35(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T238f37(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T236f37(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T655f21(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T654f20(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T315f7(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T310f6(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T655f23(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T654f22(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T315f3(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T310f2(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T655f22(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T654f21(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T315f4(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T310f3(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T655f24(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T654f23(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T315f5(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T310f4(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T655f45(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T654f57(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T649f60(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T648f61(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T646f61(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T315f55(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T310f57(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T239f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T238f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T236f58(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T175f50(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T655f18(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T654f26(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T315f24(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T310f26(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T946f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T936f10(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T704f10(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T702f7(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T700f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T566f9(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T565f12(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T553f37(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T545f35(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T301f6(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T173f14(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T171f11(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T60f77(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T946f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T936f50(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T704f53(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T702f56(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T700f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T566f85(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T565f84(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T553f59(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T545f57(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T301f77(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T173f82(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T171f81(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T60f148(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T946f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T936f1(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T704f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T702f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T700f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T566f8(T0* C);
/* ET_BIT_N.type */
extern T0* T565f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T553f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T545f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T301f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T173f13(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T171f4(T0* C);
/* ET_CLASS.type */
extern T0* T60f35(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T946f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T936f55(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T704f58(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T702f62(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T700f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T566f96(T0* C);
/* ET_BIT_N.label */
extern T0* T565f95(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T553f65(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T545f63(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T301f88(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T173f92(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T171f93(T0* C);
/* ET_CLASS.label */
extern T0* T60f161(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_subset */
extern T1 T921f4(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_subset */
extern T1 T316f3(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_subset */
extern T1 T235f5(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_subset */
extern T1 T234f31(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_subset */
extern T1 T233f32(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.is_subset */
extern T1 T229f31(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.is_subset */
extern T1 T209f31(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.is_subset */
extern T1 T156f29(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T921f6(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T316f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T235f7(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T234f13(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T233f13(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T229f13(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T209f13(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T156f21(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T921f10(T0* C);
/* ET_DYNAMIC_TYPE_LIST.special_type */
extern T0* T185f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T316f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T235f10(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T234f33(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T233f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T229f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T209f33(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T156f31(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T921f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T316f9(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T235f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T921f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has_expanded */
extern T1 T185f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T316f4(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T235f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T234f12(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T233f12(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T229f12(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T209f12(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T156f20(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T921f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T316f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T235f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T234f14(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T233f14(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T229f14(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T209f14(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T156f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T173f17(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T178f14(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T171f16(T0* C);
/* ET_CLASS.is_separate */
extern T1 T60f84(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T60f85(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T660f16(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T659f14(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T131f47(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T662f36(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T661f16(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T131f46(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T662f50(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T661f61(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T660f50(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T659f47(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T131f74(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T662f52(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T661f63(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T660f52(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T659f49(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T131f75(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T661f11(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T659f8(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T662f49(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T661f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T660f49(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T659f46(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T131f17(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T662f51(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T661f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T660f51(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T659f48(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T131f19(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T662f53(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T661f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T660f53(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T659f50(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T131f23(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T662f34(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T661f14(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T660f13(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T659f11(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T131f33(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T662f32(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T661f12(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T660f11(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T659f9(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T131f37(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T662f33(T0* C, T0* a1);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T661f13(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T660f12(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T659f10(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T131f42(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T662f56(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T661f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T660f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T659f53(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T131f86(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T662f59(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T661f72(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T660f59(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T659f58(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T131f92(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T662f35(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T661f15(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T660f14(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T659f12(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T257f29(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T257f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T257f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T257f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T257f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T257f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T257f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T257f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T257f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T257f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T566f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T565f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T301f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T173f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T171f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T60f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T566f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T565f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T301f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T173f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T171f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T60f134(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T257f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T257f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T257f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T566f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T565f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T301f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T173f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T171f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T60f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T257f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T257f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T566f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T565f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T301f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T173f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T171f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T60f141(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T257f12(T0* C, T0* a1);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T566f93(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T565f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T301f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T173f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T171f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T60f157(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T257f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T566f94(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T565f93(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T301f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T173f89(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T171f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T60f158(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T257f7(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T257f8(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T566f33(T0* C);
/* ET_BIT_N.root_context */
extern T0* T565f32(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T301f27(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T173f32(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T171f29(T0* C);
/* ET_CLASS.root_context */
extern T0* T60f94(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T257f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.unaliased_to_text */
extern T0* T936f11(T0* C);
/* ET_LIKE_CURRENT.unaliased_to_text */
extern T0* T704f11(T0* C);
/* ET_LIKE_FEATURE.unaliased_to_text */
extern T0* T702f19(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T553f16(T0* C);
/* ET_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T545f13(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T936f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T704f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T702f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T566f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T565f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T553f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T545f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T301f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T173f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T413f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T172f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T171f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T60f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T936f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T704f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T702f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T566f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T565f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T553f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T545f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T301f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T173f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T171f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T60f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T936f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T704f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T702f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T566f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T565f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T553f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T545f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T301f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T173f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T171f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T60f97(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T936f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T704f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T702f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T566f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T565f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T553f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T545f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T301f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T173f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T171f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T60f100(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T936f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T704f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T702f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T566f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T565f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T553f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T545f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T301f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T173f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T171f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T60f102(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T936f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T704f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T702f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T566f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T565f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T553f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T545f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T301f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T173f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T171f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T60f96(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T936f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T704f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T702f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T566f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T565f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T553f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T545f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T301f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T936f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T704f16(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T702f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T566f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T565f20(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T553f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T545f28(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T301f13(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T172f15(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T173f23(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T413f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T171f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T60f86(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T936f16(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T704f17(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T60f106(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T702f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T566f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T565f21(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T553f31(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T545f29(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T301f14(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T172f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T173f24(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T413f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T171f22(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T60f87(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T936f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T704f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T702f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T566f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T565f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T553f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T545f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T301f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T173f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T171f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T60f95(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T936f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T704f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T702f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T566f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T565f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T553f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T545f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T301f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T173f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T413f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T172f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T171f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T60f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T936f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T704f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T702f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T566f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T565f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T553f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T545f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T301f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T173f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T171f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T60f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T936f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T704f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T702f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T566f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T565f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T553f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T545f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T301f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T173f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T171f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T60f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T936f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T60f142(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T704f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T702f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T553f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T545f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T936f36(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T704f38(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T702f42(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T566f38(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T565f36(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T553f56(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T545f54(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T301f54(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T173f56(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T171f50(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T60f117(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T936f37(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T704f39(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T702f43(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T566f39(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T553f53(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T545f51(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T936f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T704f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T702f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T566f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T565f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T553f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T545f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T301f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T173f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T171f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T60f132(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T936f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T704f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T702f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T566f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T565f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T553f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T545f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T301f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T173f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T171f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T60f131(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T936f32(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T704f35(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T704f48(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T702f34(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T566f51(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T566f71(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_named_type */
extern T0* T565f50(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_base_type */
extern T0* T565f68(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T553f41(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T545f39(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T301f39(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T301f56(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_named_type */
extern T0* T173f47(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_base_type */
extern T0* T173f58(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T171f42(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T171f52(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type */
extern T0* T60f115(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type */
extern T0* T60f119(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T936f35(T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T702f41(T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T566f63(T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T565f62(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T553f42(T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T545f40(T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T301f53(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_like_current */
extern T1 T173f62(T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T171f61(T0* C);
/* ET_CLASS.is_like_current */
extern T1 T60f124(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T936f27(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T704f28(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T702f25(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T566f27(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T565f27(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T553f38(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T545f36(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T301f17(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T173f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T171f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T60f82(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T936f12(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T704f13(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T702f12(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T553f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T545f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T936f31(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T704f34(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T702f33(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T566f50(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T565f49(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T553f26(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T545f24(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T301f38(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T173f46(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T171f41(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T60f114(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T936f34(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T704f33(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T702f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T566f49(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T565f48(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T553f51(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T545f49(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T301f46(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T172f17(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T172f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T936f43(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T704f50(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T702f53(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T566f68(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T565f67(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T553f28(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T545f26(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T301f62(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T173f67(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T171f66(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T60f129(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T936f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T704f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T702f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T553f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T545f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T936f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T936f47(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T704f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T702f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T566f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T566f73(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T565f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T565f71(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T553f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T553f47(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T545f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T545f45(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T301f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T301f81(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T173f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T173f59(T0* C);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T171f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T171f55(T0* C);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T60f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_6_latest */
extern T0* T60f145(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T936f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T704f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T702f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T566f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T565f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T553f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T545f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T301f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T173f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge248os1597;
extern T0* ge248ov1597;
extern T0* T173f60(T0* C);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T413f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T172f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T171f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T171f56(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T60f123(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T60f146(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T936f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T704f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T702f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T566f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T565f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T553f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T545f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T301f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T172f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T173f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T171f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T60f125(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T936f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T704f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T702f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T566f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T565f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T553f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T545f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T301f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T173f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T171f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T60f130(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T936f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T704f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T702f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T566f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T565f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T553f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T545f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T301f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T173f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T171f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T60f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T936f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T704f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T702f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T566f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T565f15(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T553f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T545f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T301f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T172f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T173f2(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T413f15(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T171f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T60f34(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T936f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T704f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T702f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T566f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T565f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T553f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T545f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T301f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T173f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T171f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T60f90(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T936f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T704f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T702f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T566f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T565f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T553f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T545f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T301f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T173f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T171f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T60f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T936f48(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T704f49(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T702f52(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T566f75(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T565f74(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T553f57(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T545f55(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T301f66(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T173f71(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T171f70(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T60f143(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T936f51(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T704f54(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T702f57(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T566f86(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T565f85(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T553f60(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T545f58(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T301f75(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T173f80(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T171f79(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T936f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T704f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T702f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T566f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T553f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T545f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T936f54(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T704f57(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T702f60(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T566f91(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T565f90(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T301f84(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T172f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T173f87(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T413f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T171f86(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T936f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T704f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T702f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T566f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T565f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T553f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T545f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T301f76(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T173f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T171f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T60f147(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T936f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T704f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T702f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T566f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T566f92(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T553f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T545f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T936f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T704f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T702f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T566f90(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T565f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T553f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T545f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T301f82(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T173f86(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T171f85(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T60f154(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T936f2(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T704f5(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T702f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T553f54(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T545f52(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T936f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T704f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T702f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T566f12(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T565f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T553f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T545f8(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T301f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T173f1(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T171f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T60f33(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T936f21(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T704f22(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T702f8(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T566f10(T0* C);
/* ET_BIT_N.position */
extern T0* T565f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T553f55(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T545f53(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T301f24(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T936f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T704f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T702f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T566f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T565f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T553f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T545f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T301f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T173f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T171f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T60f76(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T655f19(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T655f92(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T654f18(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T654f91(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T315f20(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T315f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T310f22(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T310f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T655f30(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T654f30(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T310f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T655f31(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T654f31(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T315f29(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T310f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T655f26(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T654f25(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T315f23(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T310f25(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T655f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T60f126(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T514f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T608f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T431f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T60f155(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T309f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T430f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T654f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T315f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T310f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T655f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T655f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T654f58(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T654f60(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T315f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T315f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T310f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T310f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T655f27(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T654f27(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T315f25(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T310f27(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T655f61(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T654f59(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T315f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T310f59(T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T655f3(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T654f3(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T315f2(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T310f1(T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T655f25(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T654f24(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T315f22(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T310f24(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T655f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T654f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T315f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T310f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T649f18(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T649f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T648f20(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T648f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T646f20(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T646f93(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T239f10(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T239f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T238f12(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T238f81(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T236f12(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T236f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T175f22(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T175f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T648f32(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T646f32(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T239f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T238f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T236f39(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T175f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T649f31(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T648f33(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T646f33(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T239f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T238f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T236f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T175f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T649f34(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T648f36(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T646f36(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T239f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T238f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T236f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T175f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T649f32(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T648f34(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T646f34(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T175f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T649f33(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T648f35(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T646f35(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T239f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T238f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T236f42(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T175f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T649f35(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T646f37(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T239f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T238f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T236f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T175f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T649f21(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T648f23(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T646f23(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T239f13(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T238f16(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T175f25(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T649f23(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T648f25(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T646f25(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T239f15(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T236f17(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T175f26(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T649f25(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T648f27(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T646f27(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T239f18(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T238f21(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T236f20(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T175f28(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T649f20(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T648f22(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T646f22(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T238f14(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T236f14(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T175f24(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T649f24(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T648f26(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T646f26(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T239f17(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T238f20(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T236f19(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T175f27(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T649f50(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T648f51(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T646f51(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T239f46(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T238f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T236f48(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T175f54(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T239f16(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T238f19(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T236f18(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T649f61(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T649f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T648f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T648f64(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T646f62(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T646f64(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T239f57(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T239f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T238f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T238f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T236f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T236f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T175f64(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T175f66(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T649f27(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T648f29(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T646f29(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T239f20(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T238f23(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T236f22(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T175f29(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T649f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T648f63(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T646f63(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T239f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T238f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T236f60(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T175f65(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T649f22(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T648f24(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T646f24(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T239f14(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T238f17(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T236f16(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T175f5(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T649f5(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T648f3(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T646f3(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T239f3(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T238f3(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T236f3(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T175f3(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T649f26(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T648f28(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T646f28(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T239f19(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T238f22(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T236f21(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T175f21(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T566f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T565f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T301f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T173f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T171f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T60f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T173f6(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T171f15(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T60f15(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T60f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T173f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T171f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T60f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.unaliased_to_text */
extern T0* T566f21(T0* C);
/* ET_BIT_N.unaliased_to_text */
extern T0* T565f22(T0* C);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T301f15(T0* C);
/* ET_GENERIC_CLASS_TYPE.unaliased_to_text */
extern T0* T173f5(T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T171f12(T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T60f13(T0* C);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T566f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T565f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T301f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T173f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T171f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T60f104(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T566f48(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T565f47(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T301f37(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T173f45(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T171f39(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T60f113(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T566f31(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T565f30(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T301f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T173f30(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T171f27(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T60f92(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T566f32(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T565f31(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T301f26(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T173f31(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T171f28(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T60f93(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T566f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T565f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T301f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T173f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T171f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T60f110(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T566f43(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T565f42(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T301f32(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T173f39(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T171f34(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T60f101(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T566f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T565f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T301f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T173f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T171f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T60f107(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T566f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T565f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T301f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T173f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T171f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T60f108(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T566f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T565f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T301f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T173f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T171f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T60f111(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T566f95(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T565f94(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T301f87(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T173f91(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T173f94(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T171f90(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T171f92(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T60f160(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T173f18(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T171f17(T0* C);
/* ET_CLASS.is_generic */
extern T1 T60f16(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T173f48(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T413f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T171f40(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T60f116(T0* C, T0* a1);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T566f30(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T565f29(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T171f5(T0* C);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T566f87(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T565f86(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T565f91(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T301f78(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T301f83(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T172f21(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T173f83(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T173f93(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T413f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T171f82(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T171f91(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T60f151(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T60f159(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T566f89(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T565f88(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T301f80(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T173f85(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T171f84(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T60f153(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T566f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T565f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T301f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T173f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T171f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T60f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T566f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T565f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T301f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T173f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T171f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T60f135(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T566f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T565f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T301f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T173f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T171f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T60f136(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T566f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T565f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T301f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T173f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T171f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T60f137(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T566f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T565f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T301f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T173f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T171f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T60f140(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T566f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T565f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T301f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T173f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T171f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T60f105(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T566f44(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T565f43(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T301f33(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T173f41(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T171f35(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T60f103(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T566f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T565f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T301f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T173f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T171f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T60f109(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T566f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T565f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T301f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T173f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T171f38(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T60f112(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T565f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T301f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T173f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T171f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T60f128(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T566f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T565f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T301f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T173f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T171f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T60f122(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.base_type_actual */
extern T0* T565f37(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T301f55(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T173f57(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T171f51(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T60f118(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T566f41(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T565f40(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T301f58(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T173f61(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T171f54(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T60f120(T0* C);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T173f29(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T171f26(T0* C);
/* ET_CLASS.position */
extern T0* T60f91(T0* C);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T173f90(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T171f89(T0* C);
/* ET_CLASS.upper_name */
extern T0* T60f20(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T565f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T301f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T173f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T171f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T60f152(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T566f14(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T565f16(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T301f10(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T173f11(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T171f13(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T60f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T566f7(T0* C);
/* ET_BIT_N.to_text */
extern T0* T565f9(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T301f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T173f10(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T171f6(T0* C);
/* ET_CLASS.to_text */
extern T0* T60f72(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T234f11(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T233f11(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T229f11(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T209f11(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T156f19(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T234f27(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T233f28(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T229f27(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T209f27(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T156f25(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T234f5(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T233f5(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T229f5(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T209f5(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T156f7(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T234f30(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T233f31(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T209f30(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T156f28(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T234f3(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T233f3(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T229f3(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T209f3(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T156f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T234f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T212f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge902os15448;
extern T0* ge902ov15448;
extern T0* T212f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T212f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T212f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T234f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T154f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T64f216(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T921c11(T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T234f21(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T234f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T212c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T233f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T233f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T233f21(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T233f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T229f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T229f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T229f21(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T229f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T209f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T209f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T154f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T64f215(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge769os12882;
extern T0* ge769ov12882;
extern T0* T169f37(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T209f21(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T209f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T156f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T156f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T234f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T234f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T233f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T233f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.last_result_feature_name */
extern unsigned char ge769os12870;
extern T0* ge769ov12870;
extern T0* T169f40(T0* C);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T162f62(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T233f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T229f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T229f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge769os12845;
extern T0* ge769ov12845;
extern T0* T169f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T229f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T209f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T209f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T154f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T64f214(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge769os12884;
extern T0* ge769ov12884;
extern T0* T169f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T209f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T156f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T156f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T234f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T233f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T229f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T209f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T156f8(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T229f34(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T209f34(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T156f32(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T234f32(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T233f33(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T229f32(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T209f32(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T156f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T234f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T233f26(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T229f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T209f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T156f23(T0* C, T6 a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T1420f1(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T1420f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T1420f6(T0* C);
/* ARRAY [STRING_8].valid_index */
extern T1 T86f4(T0* C, T6 a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T1420f4(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1336f1(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1336f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1336f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1336f4(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1183f1(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1183f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1183f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1183f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T919f1(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T919f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T919f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T919f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T918f1(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T918f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T918f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T918f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T917f1(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T917f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T917f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T917f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T916f1(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T916f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T916f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T916f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T915f1(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T915f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T915f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T915f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T914f1(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T914f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T914f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T914f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T913f1(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T913f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T913f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T913f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T912f1(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T912f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T912f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T912f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T909f1(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T909f3(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T909f6(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T909f4(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T908f1(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T908f3(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T908f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T908f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T907f5(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T907f7(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T907f10(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T907f8(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T906f1(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T906f3(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T906f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T906f4(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T905f1(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T905f3(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T905f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T905f4(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T283f1(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T283f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T283f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T283f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T282f1(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T282f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T282f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T282f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T281f1(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T281f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T281f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T280f1(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T280f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T280f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T280f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T279f1(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T279f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T279f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T279f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T211f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T211f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T211f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T211f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T113f1(T0* C);
/* UT_MESSAGE.message */
extern T0* T113f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T113f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T113f4(T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T68f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T68f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T68f6(T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T68f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T67f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T67f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T67f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T67f5(T0* C);
/* AP_ERROR.default_message */
extern T0* T32f14(T0* C);
/* AP_ERROR.message */
extern T0* T32f15(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T32f17(T0* C);
/* AP_ERROR.string_ */
extern T0* T32f16(T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T41f23(T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T37f1(T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T37f3(T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T36f1(T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T36f4(T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T35f1(T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T35f3(T0* C);
/* AP_FLAG.was_found */
extern T1 T33f1(T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T41f19(T0* C);
/* AP_ENUMERATION_OPTION.needs_parameter */
extern T1 T37f13(T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T36f14(T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T35f11(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T33f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T41f20(T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T37f11(T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T36f3(T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T35f9(T0* C);
/* AP_FLAG.name */
extern T0* T33f8(T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T41f24(T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T37f17(T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T36f17(T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T35f15(T0* C);
/* AP_FLAG.example */
extern T0* T33f12(T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T41f32(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T37f21(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T37f21p1(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T36f19(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T36f19p1(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T35f22(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T35f22p1(T0* C);
/* AP_FLAG.names */
extern T0* T33f15(T0* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T41f18(T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T37f12(T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T36f6(T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T35f10(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T33f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T928f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1194f2(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T928f4(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T931f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T931f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T931f12(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T931f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T928f27(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T928f27p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1367f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge391os1685;
extern T0* ge391ov1685;
extern T0* T22f37(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T928f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge306os1660;
extern T0* ge306ov1660;
extern T0* T1367f2(T0* C);
extern T0* gema882(T6 c, ...);
extern T0* gema86(T6 c, ...);
extern T0* gema308(T6 c, ...);
extern T0* gema939(T6 c, ...);
extern T0* gema331(T6 c, ...);
extern void gevoid(T0* C, ...);
extern T0* gevoid0(T0* C, ...);
extern T1 gevoid1(T0* C, ...);
extern T6 gevoid6(T0* C, ...);
extern T2 gevoid2(T0* C, ...);
extern T0* ge403ov8941;
extern T0* ge407ov2772;
extern T0* ge346ov24005;
extern T0* ge413ov9510;
extern T0* ge380ov1704;
extern T0* ge1144ov16017;
extern T0* ge1144ov16002;
extern T0* ge1144ov15995;
extern T0* ge1144ov15980;
extern T0* ge1144ov16005;
extern T0* ge1144ov15998;
extern T0* ge1144ov16006;
extern T0* ge1144ov16015;
extern T0* ge1144ov16008;
extern T0* ge1144ov16004;
extern T0* ge1144ov15992;
extern T0* ge1144ov15993;
extern T0* ge1144ov16007;
extern T0* ge1144ov15994;
extern T0* ge1144ov15981;
extern T0* ge1144ov15982;
extern T0* ge1144ov15983;
extern T0* ge1144ov15989;
extern T0* ge1144ov15991;
extern T0* ge1144ov15986;
extern T0* ge1144ov16011;
extern T0* ge1144ov16010;
extern T0* ge1144ov15987;
extern T0* ge1144ov15988;
extern T0* ge1144ov15985;
extern T0* ge1144ov15984;
extern T0* ge1140ov15775;
extern T0* ge945ov6918;
extern T0* ge769ov12997;
extern T0* ge769ov13143;
extern T0* ge945ov6927;
extern T0* ge945ov6892;
extern T0* ge945ov6849;
extern T0* ge940ov22959;
extern T0* ge940ov22958;
extern T0* ge940ov22957;
extern T0* ge769ov13117;
extern T0* ge945ov6887;
extern T0* ge945ov6883;
extern T0* ge945ov6913;
extern T0* ge945ov6862;
extern T0* ge945ov6882;
extern T0* ge945ov6934;
extern T0* ge945ov6894;
extern T0* ge945ov6895;
extern T0* ge945ov6914;
extern T0* ge945ov6903;
extern T0* ge945ov6889;
extern T0* ge945ov6928;
extern T0* ge945ov6916;
extern T0* ge769ov13120;
extern T0* ge945ov6901;
extern T0* ge945ov6932;
extern T0* ge945ov6929;
extern T0* ge945ov6919;
extern T0* ge945ov6930;
extern T0* ge945ov6851;
extern T0* ge945ov6850;
extern T0* ge945ov6917;
extern T0* ge945ov6886;
extern T0* ge945ov6896;
extern T0* ge945ov6855;
extern T0* ge945ov6893;
extern T0* ge945ov6908;
extern T0* ge945ov6885;
extern T0* ge945ov6878;
extern T0* ge945ov6877;
extern T0* ge945ov6863;
extern T0* ge945ov6858;
extern T0* ge945ov6857;
extern T0* ge945ov6870;
extern T0* ge945ov6869;
extern T0* ge945ov6868;
extern T0* ge945ov6890;
extern T0* ge945ov6852;
extern T0* ge945ov6931;
extern T0* ge945ov6902;
extern T0* ge945ov6925;
extern T0* ge945ov6926;
extern T0* ge945ov6884;
extern T0* ge945ov6854;
extern T0* ge945ov6856;
extern T0* ge945ov6924;
extern T0* ge945ov6880;
extern T0* ge945ov6879;
extern T0* ge945ov6871;
extern T0* ge945ov6875;
extern T0* ge945ov6874;
extern T0* ge945ov6873;
extern T0* ge945ov6872;
extern T0* ge945ov6867;
extern T0* ge945ov6866;
extern T0* ge945ov6865;
extern T0* ge945ov6864;
extern T0* ge945ov6860;
extern T0* ge945ov6859;
extern T0* ge945ov6861;
extern T0* ge769ov13005;
extern T0* ge769ov13024;
extern T0* ge769ov13014;
extern T0* ge769ov13008;
extern T0* ge769ov13037;
extern T0* ge769ov13002;
extern T0* ge769ov13139;
extern T0* ge405ov8941;
extern T0* ge943ov22947;
extern T0* ge943ov22941;
extern T0* ge943ov22935;
extern T0* ge943ov22943;
extern T0* ge943ov22937;
extern T0* ge943ov22931;
extern T0* ge943ov22946;
extern T0* ge943ov22940;
extern T0* ge943ov22934;
extern T0* ge943ov22948;
extern T0* ge943ov22942;
extern T0* ge943ov22936;
extern T0* ge769ov13067;
extern T0* ge943ov22945;
extern T0* ge943ov22939;
extern T0* ge943ov22933;
extern T0* ge769ov13106;
extern T0* ge769ov13089;
extern T0* ge769ov13115;
extern T0* ge769ov13083;
extern T0* ge769ov13065;
extern T0* ge944ov23821;
extern T0* ge944ov23579;
extern T0* ge944ov23443;
extern T0* ge944ov23819;
extern T0* ge944ov23577;
extern T0* ge944ov23441;
extern T0* ge944ov23820;
extern T0* ge944ov23578;
extern T0* ge944ov23442;
extern T0* ge769ov13040;
extern T0* ge943ov22944;
extern T0* ge943ov22938;
extern T0* ge943ov22932;
extern T0* ge936ov25095;
extern T0* ge936ov25093;
extern T0* ge936ov25091;
extern T0* ge1068ov4868;
extern T0* ge935ov23874;
extern T0* ge935ov23870;
extern T0* ge935ov23866;
extern T0* ge991ov17612;
extern T0* ge381ov8755;
extern T0* ge579ov11507;
extern T0* ge579ov11508;
extern T0* ge935ov23875;
extern T0* ge935ov23871;
extern T0* ge935ov23867;
extern T0* ge942ov23883;
extern T0* ge942ov23882;
extern T0* ge944ov23776;
extern T0* ge944ov23550;
extern T0* ge944ov23398;
extern T0* ge944ov23778;
extern T0* ge944ov23400;
extern T0* ge944ov23771;
extern T0* ge944ov23393;
extern T0* ge944ov23774;
extern T0* ge944ov23396;
extern T0* ge944ov23770;
extern T0* ge944ov23392;
extern T0* ge944ov23769;
extern T0* ge944ov23391;
extern T0* ge769ov13133;
extern T0* ge769ov13038;
extern T0* ge769ov13226;
extern T0* ge769ov13227;
extern T0* ge769ov13228;
extern T0* ge769ov13229;
extern T0* ge769ov13230;
extern T0* ge769ov13231;
extern T0* ge769ov13232;
extern T0* ge769ov13233;
extern T0* ge769ov13234;
extern T0* ge769ov13235;
extern T0* ge769ov13236;
extern T0* ge769ov13237;
extern T0* ge769ov13238;
extern T0* ge769ov13239;
extern T0* ge769ov13240;
extern T0* ge769ov13241;
extern T0* ge769ov13242;
extern T0* ge769ov13243;
extern T0* ge769ov13244;
extern T0* ge769ov13245;
extern T0* ge769ov13246;
extern T0* ge769ov13247;
extern T0* ge769ov13248;
extern T0* ge769ov13249;
extern T0* ge769ov13291;
extern T0* ge769ov13292;
extern T0* ge769ov13293;
extern T0* ge769ov12998;
extern T0* ge769ov12999;
extern T0* ge769ov13000;
extern T0* ge769ov13001;
extern T0* ge769ov13003;
extern T0* ge769ov13004;
extern T0* ge769ov13006;
extern T0* ge769ov13007;
extern T0* ge769ov13009;
extern T0* ge769ov13010;
extern T0* ge769ov13011;
extern T0* ge769ov13012;
extern T0* ge769ov13013;
extern T0* ge769ov13015;
extern T0* ge769ov13016;
extern T0* ge769ov13017;
extern T0* ge769ov13018;
extern T0* ge769ov13019;
extern T0* ge769ov13020;
extern T0* ge769ov13021;
extern T0* ge769ov13022;
extern T0* ge769ov13023;
extern T0* ge769ov13025;
extern T0* ge769ov13026;
extern T0* ge769ov13027;
extern T0* ge769ov13028;
extern T0* ge769ov13029;
extern T0* ge769ov13030;
extern T0* ge769ov13031;
extern T0* ge769ov13032;
extern T0* ge769ov13033;
extern T0* ge769ov13034;
extern T0* ge769ov13035;
extern T0* ge769ov13036;
extern T0* ge769ov13039;
extern T0* ge769ov13041;
extern T0* ge769ov13042;
extern T0* ge769ov13047;
extern T0* ge769ov13048;
extern T0* ge769ov13049;
extern T0* ge769ov13050;
extern T0* ge769ov13043;
extern T0* ge769ov13044;
extern T0* ge769ov13045;
extern T0* ge769ov13046;
extern T0* ge769ov13051;
extern T0* ge769ov13052;
extern T0* ge769ov13053;
extern T0* ge769ov13054;
extern T0* ge769ov13055;
extern T0* ge769ov13056;
extern T0* ge769ov13057;
extern T0* ge769ov13058;
extern T0* ge769ov13059;
extern T0* ge769ov13060;
extern T0* ge769ov13061;
extern T0* ge769ov13062;
extern T0* ge769ov13063;
extern T0* ge769ov13064;
extern T0* ge769ov13066;
extern T0* ge769ov13068;
extern T0* ge769ov13069;
extern T0* ge769ov13070;
extern T0* ge769ov13071;
extern T0* ge769ov13072;
extern T0* ge769ov13073;
extern T0* ge769ov13074;
extern T0* ge769ov13075;
extern T0* ge769ov13076;
extern T0* ge769ov13077;
extern T0* ge769ov13078;
extern T0* ge769ov13079;
extern T0* ge769ov13080;
extern T0* ge769ov13081;
extern T0* ge769ov13082;
extern T0* ge769ov13084;
extern T0* ge769ov13085;
extern T0* ge769ov13086;
extern T0* ge769ov13087;
extern T0* ge769ov13088;
extern T0* ge769ov13090;
extern T0* ge769ov13091;
extern T0* ge769ov13092;
extern T0* ge769ov13093;
extern T0* ge769ov13094;
extern T0* ge769ov13095;
extern T0* ge769ov13096;
extern T0* ge769ov13097;
extern T0* ge769ov13098;
extern T0* ge769ov13099;
extern T0* ge769ov13100;
extern T0* ge769ov13101;
extern T0* ge769ov13102;
extern T0* ge769ov13103;
extern T0* ge769ov13104;
extern T0* ge769ov13105;
extern T0* ge769ov13107;
extern T0* ge769ov13108;
extern T0* ge769ov13109;
extern T0* ge769ov13110;
extern T0* ge769ov13111;
extern T0* ge769ov13112;
extern T0* ge769ov13113;
extern T0* ge769ov13114;
extern T0* ge769ov13116;
extern T0* ge769ov13118;
extern T0* ge769ov13119;
extern T0* ge769ov13121;
extern T0* ge769ov13122;
extern T0* ge769ov13123;
extern T0* ge769ov13124;
extern T0* ge769ov13125;
extern T0* ge769ov13126;
extern T0* ge769ov13127;
extern T0* ge769ov13129;
extern T0* ge769ov13130;
extern T0* ge769ov13131;
extern T0* ge769ov13132;
extern T0* ge769ov13134;
extern T0* ge769ov13135;
extern T0* ge769ov13136;
extern T0* ge769ov13137;
extern T0* ge769ov13138;
extern T0* ge769ov13140;
extern T0* ge769ov13141;
extern T0* ge769ov13142;
extern T0* ge769ov13144;
extern T0* ge769ov13145;
extern T0* ge769ov13146;
extern T0* ge769ov13147;
extern T0* ge769ov13148;
extern T0* ge769ov13149;
extern T0* ge769ov13150;
extern T0* ge769ov13151;
extern T0* ge769ov13152;
extern T0* ge769ov13153;
extern T0* ge769ov13154;
extern T0* ge769ov13155;
extern T0* ge769ov13156;
extern T0* ge769ov13157;
extern T0* ge769ov13158;
extern T0* ge769ov13159;
extern T0* ge769ov13160;
extern T0* ge769ov13161;
extern T0* ge769ov13162;
extern T0* ge769ov13163;
extern T0* ge769ov13164;
extern T0* ge769ov13165;
extern T0* ge769ov13166;
extern T0* ge769ov13167;
extern T0* ge769ov13169;
extern T0* ge769ov13170;
extern T0* ge769ov13171;
extern T0* ge769ov13172;
extern T0* ge769ov13173;
extern T0* ge769ov13174;
extern T0* ge769ov13175;
extern T0* ge769ov13176;
extern T0* ge769ov13177;
extern T0* ge769ov13178;
extern T0* ge769ov13179;
extern T0* ge769ov13180;
extern T0* ge769ov13181;
extern T0* ge769ov13182;
extern T0* ge769ov13183;
extern T0* ge769ov13184;
extern T0* ge769ov13185;
extern T0* ge769ov13186;
extern T0* ge769ov13187;
extern T0* ge769ov13188;
extern T0* ge769ov13189;
extern T0* ge769ov13190;
extern T0* ge769ov13191;
extern T0* ge769ov13192;
extern T0* ge769ov13193;
extern T0* ge769ov13194;
extern T0* ge769ov13195;
extern T0* ge769ov13196;
extern T0* ge769ov13197;
extern T0* ge769ov13198;
extern T0* ge769ov13199;
extern T0* ge769ov13200;
extern T0* ge769ov13201;
extern T0* ge769ov13202;
extern T0* ge769ov13203;
extern T0* ge769ov13204;
extern T0* ge769ov13205;
extern T0* ge769ov13206;
extern T0* ge769ov13207;
extern T0* ge769ov13208;
extern T0* ge769ov13209;
extern T0* ge769ov13210;
extern T0* ge769ov13211;
extern T0* ge769ov13212;
extern T0* ge769ov13213;
extern T0* ge769ov13214;
extern T0* ge769ov13215;
extern T0* ge769ov13216;
extern T0* ge769ov13217;
extern T0* ge769ov13218;
extern T0* ge769ov13219;
extern T0* ge769ov13220;
extern T0* ge769ov13221;
extern T0* ge769ov13222;
extern T0* ge769ov13223;
extern T0* ge769ov13224;
extern T0* ge282ov11233;
extern T0* ge378ov19717;
extern T0* ge378ov19714;
extern T0* ge956ov14780;
extern T0* ge376ov19581;
extern T0* ge944ov23787;
extern T0* ge944ov23553;
extern T0* ge944ov23409;
extern T0* ge944ov23786;
extern T0* ge944ov23408;
extern T0* ge944ov23818;
extern T0* ge944ov23576;
extern T0* ge944ov23440;
extern T0* ge944ov23817;
extern T0* ge944ov23575;
extern T0* ge944ov23439;
extern T0* ge769ov13168;
extern T0* ge769ov13128;
extern T0* ge944ov23823;
extern T0* ge944ov23581;
extern T0* ge944ov23445;
extern T0* ge944ov23822;
extern T0* ge944ov23580;
extern T0* ge944ov23444;
extern T0* ge1257ov10149;
extern T0* ge1257ov10148;
extern T0* ge1001ov4164;
extern T0* ge1001ov4165;
extern T0* ge1001ov4166;
extern T0* ge1001ov4167;
extern T0* ge1001ov4168;
extern T0* ge1001ov4169;
extern T0* ge1001ov4170;
extern T0* ge1001ov4171;
extern T0* ge1001ov4172;
extern T0* ge1001ov4173;
extern T0* ge1001ov4174;
extern T0* ge1001ov4175;
extern T0* ge1001ov4176;
extern T0* ge1001ov4177;
extern T0* ge1001ov4178;
extern T0* ge1001ov4179;
extern T0* ge1001ov4180;
extern T0* ge1001ov4181;
extern T0* ge1001ov4182;
extern T0* ge1001ov4183;
extern T0* ge1001ov4184;
extern T0* ge1001ov4185;
extern T0* ge1001ov4186;
extern T0* ge1001ov4187;
extern T0* ge1001ov4188;
extern T0* ge1001ov4189;
extern T0* ge1001ov4190;
extern T0* ge1001ov4191;
extern T0* ge1001ov4192;
extern T0* ge1001ov4193;
extern T0* ge1001ov4194;
extern T0* ge1001ov4195;
extern T0* ge1001ov4196;
extern T0* ge1001ov4197;
extern T0* ge1001ov4198;
extern T0* ge1001ov4199;
extern T0* ge1001ov4200;
extern T0* ge1001ov4201;
extern T0* ge1001ov4202;
extern T0* ge1001ov4203;
extern T0* ge1001ov4204;
extern T0* ge1001ov4205;
extern T0* ge1001ov4206;
extern T0* ge1001ov4207;
extern T0* ge1001ov4208;
extern T0* ge1001ov4209;
extern T0* ge1001ov4210;
extern T0* ge1001ov4211;
extern T0* ge1001ov4212;
extern T0* ge1001ov4213;
extern T0* ge1001ov4214;
extern T0* ge1001ov4215;
extern T0* ge1001ov4216;
extern T0* ge1001ov4217;
extern T0* ge1001ov4218;
extern T0* ge1001ov4219;
extern T0* ge1001ov4220;
extern T0* ge1001ov4221;
extern T0* ge1001ov4222;
extern T0* ge1001ov4223;
extern T0* ge1001ov4224;
extern T0* ge1001ov4225;
extern T0* ge1001ov4226;
extern T0* ge1001ov4227;
extern T0* ge1001ov4228;
extern T0* ge1001ov4229;
extern T0* ge1001ov4230;
extern T0* ge1001ov4231;
extern T0* ge1001ov4232;
extern T0* ge1001ov4233;
extern T0* ge1001ov4234;
extern T0* ge1001ov4235;
extern T0* ge1001ov4236;
extern T0* ge1001ov4237;
extern T0* ge1001ov4238;
extern T0* ge1001ov4239;
extern T0* ge1001ov4240;
extern T0* ge1001ov4241;
extern T0* ge1001ov4242;
extern T0* ge1001ov4243;
extern T0* ge1001ov4244;
extern T0* ge1034ov4131;
extern T0* ge1001ov4350;
extern T0* ge1001ov4337;
extern T0* ge1001ov4342;
extern T0* ge1001ov4343;
extern T0* ge1001ov4344;
extern T0* ge1001ov4331;
extern T0* ge1001ov4348;
extern T0* ge1001ov4352;
extern T0* ge1001ov4335;
extern T0* ge1001ov4327;
extern T0* ge1001ov4338;
extern T0* ge1001ov4336;
extern T0* ge1001ov4333;
extern T0* ge1001ov4347;
extern T0* ge1001ov4346;
extern T0* ge1001ov4329;
extern T0* ge1001ov4351;
extern T0* ge1001ov4328;
extern T0* ge1001ov4334;
extern T0* ge1001ov4349;
extern T0* ge1001ov4341;
extern T0* ge1001ov4330;
extern T0* ge1001ov4345;
extern T0* ge1001ov4339;
extern T0* ge1001ov4332;
extern T0* ge1001ov4354;
extern T0* ge1001ov4340;
extern T0* ge1034ov4130;
extern T0* ge1034ov4129;
extern T0* ge997ov17628;
extern T0* ge1264ov10686;
extern T0* ge1264ov10648;
extern T0* ge1264ov10646;
extern T0* ge1264ov10687;
extern T0* ge1264ov10659;
extern T0* ge1264ov10658;
extern T0* ge1264ov10669;
extern T0* ge1264ov10663;
extern T0* ge1264ov10662;
extern T0* ge1264ov10661;
extern T0* ge1264ov10667;
extern T0* ge1264ov10666;
extern T0* ge1264ov10668;
extern T0* ge1264ov10645;
extern T0* ge1264ov10671;
extern T0* ge1264ov10680;
extern T0* ge1267ov10501;
extern T0* ge1267ov10499;
extern T0* ge1267ov10500;
extern T0* ge1264ov10681;
extern T0* ge1264ov10682;
extern T0* ge1264ov10685;
extern T0* ge1264ov10683;
extern T0* ge1264ov10684;
extern T0* ge1264ov10678;
extern T0* ge1260ov19247;
extern T0* ge1260ov19248;
extern T0* ge1264ov10651;
extern T0* ge1264ov10674;
extern T0* ge1264ov10694;
extern T0* ge1264ov10695;
extern T0* ge1264ov10696;
extern T0* ge1264ov10689;
extern T0* ge1264ov10672;
extern T0* ge1264ov10673;
extern T0* ge1264ov10675;
extern T0* ge1264ov10679;
extern T0* ge61ov3832;
extern T0* ge61ov3838;
extern T0* ge59ov4066;
extern T0* ge316ov1578;
extern T0* ge58ov3320;
extern T0* ge61ov3833;
extern T0* ge61ov3839;
extern T0* ge61ov3834;
extern T0* ge61ov3840;
extern T0* ge61ov3835;
extern T0* ge61ov3841;
extern T0* ge61ov3836;
extern T0* ge61ov3842;
extern T0* ge58ov3315;
extern T0* ge58ov3314;
extern T0* ge58ov3322;
extern T0* ge58ov3321;
extern T0* ge1271ov18957;
extern T0* ge1271ov18958;
extern T0* ge1262ov24013;
extern T0* ge1262ov24015;
extern T0* ge944ov23801;
extern T0* ge944ov23561;
extern T0* ge944ov23423;
extern T0* ge944ov23800;
extern T0* ge944ov23422;
extern T0* ge944ov23624;
extern T0* ge944ov23473;
extern T0* ge944ov23246;
extern T0* ge944ov23798;
extern T0* ge944ov23560;
extern T0* ge944ov23420;
extern T0* ge944ov23797;
extern T0* ge944ov23419;
extern T0* ge944ov23623;
extern T0* ge944ov23472;
extern T0* ge944ov23245;
extern T0* ge944ov23591;
extern T0* ge944ov23458;
extern T0* ge944ov23213;
extern T0* ge944ov23590;
extern T0* ge944ov23212;
extern T0* ge944ov23803;
extern T0* ge944ov23563;
extern T0* ge944ov23425;
extern T0* ge944ov23828;
extern T0* ge944ov23584;
extern T0* ge944ov23450;
extern T0* ge944ov23829;
extern T0* ge944ov23451;
extern T0* ge944ov23826;
extern T0* ge944ov23583;
extern T0* ge944ov23448;
extern T0* ge944ov23827;
extern T0* ge944ov23449;
extern T0* ge944ov23719;
extern T0* ge944ov23518;
extern T0* ge944ov23341;
extern T0* ge944ov23832;
extern T0* ge944ov23586;
extern T0* ge944ov23454;
extern T0* ge944ov23833;
extern T0* ge944ov23455;
extern T0* ge944ov23830;
extern T0* ge944ov23585;
extern T0* ge944ov23452;
extern T0* ge944ov23831;
extern T0* ge944ov23453;
extern T0* ge944ov23717;
extern T0* ge944ov23517;
extern T0* ge944ov23339;
extern T0* ge944ov23655;
extern T0* ge944ov23489;
extern T0* ge944ov23277;
extern T0* ge944ov23657;
extern T0* ge944ov23279;
extern T0* ge944ov23653;
extern T0* ge944ov23275;
extern T0* ge944ov23659;
extern T0* ge944ov23281;
extern T0* ge944ov23656;
extern T0* ge944ov23278;
extern T0* ge944ov23654;
extern T0* ge944ov23276;
extern T0* ge944ov23699;
extern T0* ge944ov23500;
extern T0* ge944ov23321;
extern T0* ge944ov23609;
extern T0* ge944ov23466;
extern T0* ge944ov23231;
extern T0* ge944ov23607;
extern T0* ge944ov23229;
extern T0* ge944ov23601;
extern T0* ge944ov23465;
extern T0* ge944ov23223;
extern T0* ge944ov23600;
extern T0* ge944ov23464;
extern T0* ge944ov23222;
extern T0* ge944ov23812;
extern T0* ge944ov23570;
extern T0* ge944ov23434;
extern T0* ge944ov23816;
extern T0* ge944ov23574;
extern T0* ge944ov23438;
extern T0* ge944ov23791;
extern T0* ge944ov23556;
extern T0* ge944ov23413;
extern T0* ge944ov23815;
extern T0* ge944ov23573;
extern T0* ge944ov23437;
extern T0* ge944ov23698;
extern T0* ge944ov23508;
extern T0* ge944ov23320;
extern T0* ge944ov23700;
extern T0* ge944ov23322;
extern T0* ge944ov23806;
extern T0* ge944ov23565;
extern T0* ge944ov23428;
extern T0* ge944ov23793;
extern T0* ge944ov23557;
extern T0* ge944ov23415;
extern T0* ge944ov23794;
extern T0* ge944ov23416;
extern T0* ge944ov23697;
extern T0* ge944ov23507;
extern T0* ge944ov23319;
extern T0* ge944ov23693;
extern T0* ge944ov23506;
extern T0* ge944ov23315;
extern T0* ge944ov23694;
extern T0* ge944ov23316;
extern T0* ge944ov23685;
extern T0* ge944ov23503;
extern T0* ge944ov23307;
extern T0* ge944ov23696;
extern T0* ge944ov23318;
extern T0* ge944ov23695;
extern T0* ge944ov23317;
extern T0* ge944ov23692;
extern T0* ge944ov23505;
extern T0* ge944ov23314;
extern T0* ge944ov23664;
extern T0* ge944ov23493;
extern T0* ge944ov23286;
extern T0* ge944ov23663;
extern T0* ge944ov23492;
extern T0* ge944ov23285;
extern T0* ge944ov23662;
extern T0* ge944ov23491;
extern T0* ge944ov23284;
extern T0* ge944ov23661;
extern T0* ge944ov23490;
extern T0* ge944ov23283;
extern T0* ge944ov23660;
extern T0* ge944ov23282;
extern T0* ge944ov23599;
extern T0* ge944ov23463;
extern T0* ge944ov23221;
extern T0* ge944ov23597;
extern T0* ge944ov23462;
extern T0* ge944ov23219;
extern T0* ge944ov23627;
extern T0* ge944ov23474;
extern T0* ge944ov23249;
extern T0* ge944ov23628;
extern T0* ge944ov23250;
extern T0* ge944ov23611;
extern T0* ge944ov23467;
extern T0* ge944ov23233;
extern T0* ge944ov23610;
extern T0* ge944ov23232;
extern T0* ge944ov23612;
extern T0* ge944ov23234;
extern T0* ge944ov23636;
extern T0* ge944ov23478;
extern T0* ge944ov23258;
extern T0* ge944ov23625;
extern T0* ge944ov23247;
extern T0* ge944ov23626;
extern T0* ge944ov23248;
extern T0* ge944ov23670;
extern T0* ge944ov23494;
extern T0* ge944ov23292;
extern T0* ge944ov23667;
extern T0* ge944ov23289;
extern T0* ge944ov23674;
extern T0* ge944ov23495;
extern T0* ge944ov23296;
extern T0* ge944ov23671;
extern T0* ge944ov23293;
extern T0* ge944ov23668;
extern T0* ge944ov23290;
extern T0* ge944ov23675;
extern T0* ge944ov23297;
extern T0* ge944ov23672;
extern T0* ge944ov23294;
extern T0* ge944ov23669;
extern T0* ge944ov23291;
extern T0* ge944ov23676;
extern T0* ge944ov23298;
extern T0* ge944ov23783;
extern T0* ge944ov23552;
extern T0* ge944ov23405;
extern T0* ge944ov23681;
extern T0* ge944ov23499;
extern T0* ge944ov23303;
extern T0* ge944ov23680;
extern T0* ge944ov23302;
extern T0* ge944ov23666;
extern T0* ge944ov23288;
extern T0* ge944ov23665;
extern T0* ge944ov23287;
extern T0* ge944ov23673;
extern T0* ge944ov23295;
extern T0* ge944ov23679;
extern T0* ge944ov23498;
extern T0* ge944ov23301;
extern T0* ge944ov23678;
extern T0* ge944ov23497;
extern T0* ge944ov23300;
extern T0* ge944ov23677;
extern T0* ge944ov23496;
extern T0* ge944ov23299;
extern T0* ge944ov23761;
extern T0* ge944ov23545;
extern T0* ge944ov23383;
extern T0* ge944ov23759;
extern T0* ge944ov23544;
extern T0* ge944ov23381;
extern T0* ge944ov23614;
extern T0* ge944ov23468;
extern T0* ge944ov23236;
extern T0* ge944ov23727;
extern T0* ge944ov23523;
extern T0* ge944ov23349;
extern T0* ge944ov23613;
extern T0* ge944ov23235;
extern T0* ge944ov23726;
extern T0* ge944ov23348;
extern T0* ge944ov23725;
extern T0* ge944ov23522;
extern T0* ge944ov23347;
extern T0* ge944ov23644;
extern T0* ge944ov23483;
extern T0* ge944ov23266;
extern T0* ge944ov23642;
extern T0* ge944ov23481;
extern T0* ge944ov23264;
extern T0* ge944ov23641;
extern T0* ge944ov23263;
extern T0* ge944ov23648;
extern T0* ge944ov23485;
extern T0* ge944ov23270;
extern T0* ge944ov23647;
extern T0* ge944ov23269;
extern T0* ge944ov23649;
extern T0* ge944ov23486;
extern T0* ge944ov23271;
extern T0* ge944ov23709;
extern T0* ge944ov23512;
extern T0* ge944ov23331;
extern T0* ge944ov23708;
extern T0* ge944ov23330;
extern T0* ge944ov23707;
extern T0* ge944ov23329;
extern T0* ge944ov23706;
extern T0* ge944ov23328;
extern T0* ge944ov23710;
extern T0* ge944ov23513;
extern T0* ge944ov23332;
extern T0* ge944ov23630;
extern T0* ge944ov23475;
extern T0* ge944ov23252;
extern T0* ge944ov23629;
extern T0* ge944ov23251;
extern T0* ge944ov23635;
extern T0* ge944ov23257;
extern T0* ge944ov23632;
extern T0* ge944ov23476;
extern T0* ge944ov23254;
extern T0* ge944ov23633;
extern T0* ge944ov23255;
extern T0* ge944ov23724;
extern T0* ge944ov23346;
extern T0* ge944ov23631;
extern T0* ge944ov23253;
extern T0* ge944ov23645;
extern T0* ge944ov23267;
extern T0* ge944ov23634;
extern T0* ge944ov23477;
extern T0* ge944ov23256;
extern T0* ge944ov23639;
extern T0* ge944ov23479;
extern T0* ge944ov23261;
extern T0* ge944ov23637;
extern T0* ge944ov23259;
extern T0* ge944ov23638;
extern T0* ge944ov23260;
extern T0* ge944ov23732;
extern T0* ge944ov23527;
extern T0* ge944ov23354;
extern T0* ge944ov23728;
extern T0* ge944ov23524;
extern T0* ge944ov23350;
extern T0* ge944ov23730;
extern T0* ge944ov23525;
extern T0* ge944ov23352;
extern T0* ge944ov23640;
extern T0* ge944ov23480;
extern T0* ge944ov23262;
extern T0* ge944ov23646;
extern T0* ge944ov23484;
extern T0* ge944ov23268;
extern T0* ge944ov23721;
extern T0* ge944ov23520;
extern T0* ge944ov23343;
extern T0* ge944ov23704;
extern T0* ge944ov23510;
extern T0* ge944ov23326;
extern T0* ge944ov23731;
extern T0* ge944ov23526;
extern T0* ge944ov23353;
extern T0* ge944ov23643;
extern T0* ge944ov23482;
extern T0* ge944ov23265;
extern T0* ge944ov23650;
extern T0* ge944ov23487;
extern T0* ge944ov23272;
extern T0* ge944ov23722;
extern T0* ge944ov23521;
extern T0* ge944ov23344;
extern T0* ge944ov23720;
extern T0* ge944ov23519;
extern T0* ge944ov23342;
extern T0* ge944ov23705;
extern T0* ge944ov23511;
extern T0* ge944ov23327;
extern T0* ge944ov23723;
extern T0* ge944ov23345;
extern T0* ge944ov23789;
extern T0* ge944ov23555;
extern T0* ge944ov23411;
extern T0* ge944ov23790;
extern T0* ge944ov23412;
extern T0* ge945ov6891;
extern T0* ge945ov6853;
extern T0* ge944ov23593;
extern T0* ge944ov23215;
extern T0* ge944ov23592;
extern T0* ge944ov23214;
extern T0* ge944ov23805;
extern T0* ge944ov23564;
extern T0* ge944ov23427;
extern T0* ge944ov23799;
extern T0* ge944ov23421;
extern T0* ge944ov23804;
extern T0* ge944ov23426;
extern T0* ge944ov23718;
extern T0* ge944ov23340;
extern T0* ge944ov23753;
extern T0* ge944ov23541;
extern T0* ge944ov23375;
extern T0* ge944ov23752;
extern T0* ge944ov23540;
extern T0* ge944ov23374;
extern T0* ge944ov23751;
extern T0* ge944ov23539;
extern T0* ge944ov23373;
extern T0* ge944ov23750;
extern T0* ge944ov23538;
extern T0* ge944ov23372;
extern T0* ge944ov23749;
extern T0* ge944ov23537;
extern T0* ge944ov23371;
extern T0* ge944ov23748;
extern T0* ge944ov23536;
extern T0* ge944ov23370;
extern T0* ge944ov23754;
extern T0* ge944ov23542;
extern T0* ge944ov23376;
extern T0* ge944ov23763;
extern T0* ge944ov23546;
extern T0* ge944ov23385;
extern T0* ge944ov23764;
extern T0* ge944ov23547;
extern T0* ge944ov23386;
extern T0* ge944ov23760;
extern T0* ge944ov23382;
extern T0* ge945ov6933;
extern T0* ge945ov6910;
extern T0* ge945ov6912;
extern T0* ge945ov6909;
extern T0* ge945ov6911;
extern T0* ge945ov6897;
extern T0* ge945ov6898;
extern T0* ge945ov6899;
extern T0* ge945ov6900;
extern T0* ge945ov6904;
extern T0* ge945ov6905;
extern T0* ge945ov6906;
extern T0* ge945ov6907;
extern T0* ge944ov23687;
extern T0* ge944ov23309;
extern T0* ge944ov23690;
extern T0* ge944ov23504;
extern T0* ge944ov23312;
extern T0* ge944ov23683;
extern T0* ge944ov23502;
extern T0* ge944ov23305;
extern T0* ge944ov23686;
extern T0* ge944ov23308;
extern T0* ge944ov23621;
extern T0* ge944ov23471;
extern T0* ge944ov23243;
extern T0* ge944ov23616;
extern T0* ge944ov23469;
extern T0* ge944ov23238;
extern T0* ge944ov23619;
extern T0* ge944ov23241;
extern T0* ge944ov23618;
extern T0* ge944ov23240;
extern T0* ge944ov23617;
extern T0* ge944ov23470;
extern T0* ge944ov23239;
extern T0* ge944ov23802;
extern T0* ge944ov23562;
extern T0* ge944ov23424;
extern T0* ge944ov23807;
extern T0* ge944ov23566;
extern T0* ge944ov23429;
extern T0* ge769ov13225;
extern T0* ge944ov23589;
extern T0* ge944ov23457;
extern T0* ge944ov23211;
extern T0* ge944ov23736;
extern T0* ge944ov23530;
extern T0* ge944ov23358;
extern T0* ge944ov23743;
extern T0* ge944ov23534;
extern T0* ge944ov23365;
extern T0* ge944ov23742;
extern T0* ge944ov23364;
extern T0* ge944ov23741;
extern T0* ge944ov23533;
extern T0* ge944ov23363;
extern T0* ge944ov23740;
extern T0* ge944ov23362;
extern T0* ge944ov23739;
extern T0* ge944ov23532;
extern T0* ge944ov23361;
extern T0* ge944ov23738;
extern T0* ge944ov23360;
extern T0* ge944ov23737;
extern T0* ge944ov23531;
extern T0* ge944ov23359;
extern T0* ge944ov23735;
extern T0* ge944ov23357;
extern T0* ge944ov23810;
extern T0* ge944ov23568;
extern T0* ge944ov23432;
extern T0* ge944ov23808;
extern T0* ge944ov23567;
extern T0* ge944ov23430;
extern T0* ge944ov23747;
extern T0* ge944ov23535;
extern T0* ge944ov23369;
extern T0* ge944ov23746;
extern T0* ge944ov23368;
extern T0* ge944ov23766;
extern T0* ge944ov23548;
extern T0* ge944ov23388;
extern T0* ge944ov23768;
extern T0* ge944ov23549;
extern T0* ge944ov23390;
extern T0* ge944ov23758;
extern T0* ge944ov23543;
extern T0* ge944ov23380;
extern T0* ge944ov23745;
extern T0* ge944ov23367;
extern T0* ge944ov23744;
extern T0* ge944ov23366;
extern T0* ge944ov23762;
extern T0* ge944ov23384;
extern T0* ge944ov23757;
extern T0* ge944ov23379;
extern T0* ge944ov23824;
extern T0* ge944ov23582;
extern T0* ge944ov23446;
extern T0* ge944ov23825;
extern T0* ge944ov23447;
extern T0* ge944ov23796;
extern T0* ge944ov23559;
extern T0* ge944ov23418;
extern T0* ge944ov23795;
extern T0* ge944ov23558;
extern T0* ge944ov23417;
extern T0* ge944ov23788;
extern T0* ge944ov23554;
extern T0* ge944ov23410;
extern T0* ge944ov23814;
extern T0* ge944ov23572;
extern T0* ge944ov23436;
extern T0* ge944ov23603;
extern T0* ge944ov23225;
extern T0* ge944ov23702;
extern T0* ge944ov23509;
extern T0* ge944ov23324;
extern T0* ge944ov23813;
extern T0* ge944ov23571;
extern T0* ge944ov23435;
extern T0* ge944ov23602;
extern T0* ge944ov23224;
extern T0* ge944ov23701;
extern T0* ge944ov23323;
extern T0* ge944ov23785;
extern T0* ge944ov23407;
extern T0* ge944ov23784;
extern T0* ge944ov23406;
extern T0* ge944ov23604;
extern T0* ge944ov23226;
extern T0* ge944ov23703;
extern T0* ge944ov23325;
extern T0* ge944ov23781;
extern T0* ge944ov23551;
extern T0* ge944ov23403;
extern T0* ge944ov23782;
extern T0* ge944ov23404;
extern T0* ge944ov23596;
extern T0* ge944ov23461;
extern T0* ge944ov23218;
extern T0* ge944ov23595;
extern T0* ge944ov23460;
extern T0* ge944ov23217;
extern T0* ge944ov23711;
extern T0* ge944ov23514;
extern T0* ge944ov23333;
extern T0* ge944ov23651;
extern T0* ge944ov23488;
extern T0* ge944ov23273;
extern T0* ge944ov23652;
extern T0* ge944ov23274;
extern T0* ge944ov23713;
extern T0* ge944ov23515;
extern T0* ge944ov23335;
extern T0* ge944ov23714;
extern T0* ge944ov23336;
extern T0* ge944ov23712;
extern T0* ge944ov23334;
extern T0* ge944ov23715;
extern T0* ge944ov23516;
extern T0* ge944ov23337;
extern T0* ge944ov23734;
extern T0* ge944ov23529;
extern T0* ge944ov23356;
extern T0* ge944ov23733;
extern T0* ge944ov23528;
extern T0* ge944ov23355;
extern T0* ge944ov23594;
extern T0* ge944ov23459;
extern T0* ge944ov23216;
extern T0* ge945ov6935;
extern T0* ge944ov23689;
extern T0* ge944ov23311;
extern T0* ge944ov23691;
extern T0* ge944ov23313;
extern T0* ge944ov23684;
extern T0* ge944ov23306;
extern T0* ge944ov23682;
extern T0* ge944ov23501;
extern T0* ge944ov23304;
extern T0* ge944ov23688;
extern T0* ge944ov23310;
extern T0* ge944ov23615;
extern T0* ge944ov23237;
extern T0* ge944ov23716;
extern T0* ge944ov23338;
extern T0* ge944ov23792;
extern T0* ge944ov23414;
extern T0* ge944ov23608;
extern T0* ge944ov23230;
extern T0* ge944ov23606;
extern T0* ge944ov23228;
extern T0* ge944ov23605;
extern T0* ge944ov23227;
extern T0* ge944ov23811;
extern T0* ge944ov23569;
extern T0* ge944ov23433;
extern T0* ge945ov6915;
extern T0* ge855ov18555;
extern T0* ge848ov22153;
extern T0* ge851ov21223;
extern T0* ge827ov21255;
extern T0* ge1215ov9859;
extern T0* ge1196ov18813;
extern T0* ge1196ov18812;
extern T0* ge410ov8941;
extern T0* ge307ov8941;
extern T0* ge298ov8941;
extern T0* ge59ov4067;
extern T0* ge59ov4068;
extern T0* ge59ov4069;
extern T0* ge773ov21875;
extern T0* ge769ov13290;
extern T0* ge769ov13271;
extern T0* ge769ov13287;
extern T0* ge769ov13275;
extern T0* ge769ov13276;
extern T0* ge769ov13277;
extern T0* ge769ov13278;
extern T0* ge769ov13272;
extern T0* ge769ov13279;
extern T0* ge769ov13280;
extern T0* ge769ov13281;
extern T0* ge769ov13282;
extern T0* ge769ov13273;
extern T0* ge769ov13288;
extern T0* ge769ov13283;
extern T0* ge769ov13284;
extern T0* ge769ov13285;
extern T0* ge769ov13274;
extern T0* ge769ov13286;
extern T0* ge769ov13289;
extern T0* ge1262ov24012;
extern T0* ge1262ov24014;
extern T0* ge769ov13267;
extern T0* ge769ov13266;
extern T0* ge769ov13254;
extern T0* ge769ov13255;
extern T0* ge769ov13256;
extern T0* ge769ov13257;
extern T0* ge769ov13258;
extern T0* ge769ov13259;
extern T0* ge769ov13260;
extern T0* ge769ov13261;
extern T0* ge769ov13262;
extern T0* ge769ov13263;
extern T0* ge769ov13264;
extern T0* ge769ov13265;
extern T0* ge769ov13269;
extern T0* ge769ov13270;
extern T0* ge769ov13250;
extern T0* ge769ov13251;
extern T0* ge769ov13252;
extern T0* ge769ov13253;
extern T0* ge769ov13268;
extern T0* ge795ov20194;
extern T0* ge795ov20193;
extern T0* ge800ov21968;
extern T0* ge810ov21860;
extern T0* ge1012ov3846;
extern T0* ge1009ov3846;
extern T0* ge1003ov3846;
extern T0* ge1019ov3846;
extern T0* ge1016ov3846;
extern T0* ge1015ov3846;
extern T0* ge1011ov3846;
extern T0* ge1018ov3846;
extern T0* ge1010ov3846;
extern T0* ge1022ov3846;
extern T0* ge1006ov3846;
extern T0* ge1017ov3846;
extern T0* ge1021ov3846;
extern T0* ge1013ov3846;
extern T0* ge1004ov3846;
extern T0* ge224ov3846;
extern T0* ge227ov3846;
extern T0* ge233ov3846;
extern T0* ge223ov3846;
extern T0* ge404ov24080;
extern T0* ge391ov1684;
void geconst(void);
extern EIF_TYPE getypes[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void file_mkdir(char* dirname);
extern void file_rename(char* from, char* to);
extern void file_link(char *from, char *to);
extern void file_unlink(char *name);
extern EIF_POINTER file_open(char *name, int how);
extern EIF_POINTER file_dopen(int fd, int how);
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);
extern void file_close(FILE *fp);
extern void file_flush(FILE *fp);
extern EIF_INTEGER file_fd(FILE *f);
extern EIF_CHARACTER file_gc(FILE *f);
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_CHARACTER file_lh(FILE *f);
extern EIF_INTEGER eif_file_size(FILE *fp);
extern void file_tnil(FILE *f);
extern EIF_INTEGER file_tell(FILE *f);
extern void file_touch(char *name);
extern void file_utime(char *name, time_t stamp, int how);
extern void file_stat(char *path, struct stat *buf);
extern void file_perm(char *name, char *who, char *what, int flag);
extern void file_chmod(char *path, int mode);
extern void file_chown(char *name, int uid);
extern void file_chgrp(char *name, int gid);
extern void file_tnwl(FILE *f);
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);
extern void file_pc(FILE *f, char c);
extern void file_go(FILE *f, EIF_INTEGER pos);
extern void file_recede(FILE *f, EIF_INTEGER pos);
extern void file_move(FILE *f, EIF_INTEGER pos);
extern EIF_BOOLEAN file_feof(FILE *fp);
extern EIF_BOOLEAN file_exists(char *name);
extern EIF_BOOLEAN file_path_exists(char *name);
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);
extern EIF_INTEGER file_gi(FILE *f);
extern EIF_REAL_32 file_gr(FILE *f);
extern EIF_REAL_64 file_gd(FILE *f);
extern void file_pi(FILE *f, EIF_INTEGER number);
extern void file_pr(FILE *f, EIF_REAL_32 number);
extern void file_pd(FILE *f, EIF_REAL_64 val);
extern EIF_INTEGER stat_size(void);
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);
extern EIF_INTEGER file_info(struct stat *buf, int op);
extern EIF_REFERENCE file_owner(int uid);
extern EIF_REFERENCE file_group(int gid);
extern EIF_INTEGER file_gib(FILE* f);
extern EIF_REAL_32 file_grb(FILE* f);
extern EIF_REAL_64 file_gdb(FILE* f);
extern EIF_POINTER file_binary_open(char* name, int how);
extern EIF_POINTER file_binary_dopen(int fd, int how);
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);
extern void file_pib(FILE* f, EIF_INTEGER number);
extern void file_prb(FILE* f, EIF_REAL_32 number);
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/* OpenBSD does not support 'ftime' unless -lcompat is specified. */
/* Use the recommended XSI (X/Open System Interface) extension instead. */
#include <sys/time.h>
#include <sys/types.h>
#define geftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define getimebsz sizeof(struct timeval)
#define getimebmillitm(p) ((struct timeval*)(p))->tv_usec
#define getimebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
#define geftime(p) ftime((struct timeb*)(p))
#define getimebsz sizeof(struct timeb)
#define getimebmillitm(p) ((struct timeb*)(p))->millitm
#define getimebtime(p) ((struct timeb*)(p))->time
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
